WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#41: FILE: arch/alpha/Kconfig:667:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: arch/alpha/Kconfig:668:
+       bool "Spinlocks timeout"^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: arch/arm/Kconfig:731:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: arch/arm/Kconfig:732:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#110: FILE: arch/arm26/Kconfig:287:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/arm26/Kconfig:288:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#145: FILE: arch/i386/Kconfig:1250:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: arch/i386/Kconfig:1251:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#180: FILE: arch/ia64/Kconfig:471:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: arch/ia64/Kconfig:472:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#215: FILE: arch/mips/Kconfig:1363:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: arch/mips/Kconfig:1364:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#250: FILE: arch/ppc/Kconfig:1202:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: arch/ppc/Kconfig:1203:
+       bool "Spinlocks timeout"^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: arch/ppc64/Kconfig:391:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#320: FILE: arch/s390/Kconfig:426:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/s390/Kconfig:427:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#355: FILE: arch/sh/Kconfig:678:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: arch/sh/Kconfig:679:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#390: FILE: arch/sparc/Kconfig:443:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: arch/sparc/Kconfig:444:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#425: FILE: arch/sparc64/Kconfig:661:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: arch/sparc64/Kconfig:662:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#460: FILE: arch/um/Kconfig:225:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: arch/um/Kconfig:226:
+       bool "Spinlocks timeout"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#495: FILE: arch/x86_64/Kconfig:439:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: arch/x86_64/Kconfig:440:
+       bool "Spinlocks timeout"^I  $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#570: FILE: include/linux/spinlock.h:242:
+static inline void spin_lock(spinlock_t * lock) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#570: FILE: include/linux/spinlock.h:242:
+static inline void spin_lock(spinlock_t * lock) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: include/linux/spinlock.h:245:
+^Ipreempt_disable(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: include/linux/spinlock.h:246:
+^Ido { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: include/linux/spinlock.h:247:
+^I^Iif (check_spinlock_timeout(timeout)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: include/linux/spinlock.h:248:
+^I^I        BUG();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#576: FILE: include/linux/spinlock.h:248:
+		        BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#610: FILE: kernel/sched.c:4011:
+		while (spin_is_locked(lock)) {

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: kernel/sched.c:4013:
+^I^I^Iif (check_spinlock_timeout(timeout)) $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#613: FILE: kernel/sched.c:4014:
+				BUG();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000273317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 16 warnings, 0 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000273317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
