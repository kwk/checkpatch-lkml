ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: arch/um/Kconfig_char:200:
+^Igenerator, major 10, minor 183, and the canonical device name is $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: arch/um/Kconfig_char:203:
+^I(check your distro, or download from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: arch/um/Kconfig_char:204:
+^Ihttp://sourceforge.net/projects/gkernel/).  rngd periodically reads $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: arch/um/drivers/random.c:1:
+/* Much of this ripped from hw_random.c */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#99: FILE: arch/um/drivers/random.c:7:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#114: FILE: arch/um/drivers/random.c:22:
+static int rng_dev_open (struct inode *inode, struct file *filp)
                                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: arch/um/drivers/random.c:22:
+static int rng_dev_open (struct inode *inode, struct file *filp)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#125: FILE: arch/um/drivers/random.c:33:
+static ssize_t rng_dev_read (struct file *filp, char __user *buf, size_t size,
                                           ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: arch/um/drivers/random.c:33:
+static ssize_t rng_dev_read (struct file *filp, char __user *buf, size_t size,

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/um/drivers/random.c:34:
+                             loff_t * offp)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/um/drivers/random.c:34:
+                             loff_t * offp)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: arch/um/drivers/random.c:34:
+                             loff_t * offp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: arch/um/drivers/random.c:36:
+        u32 data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/um/drivers/random.c:36:
+        u32 data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: arch/um/drivers/random.c:37:
+        int n, ret = 0, have_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/um/drivers/random.c:37:
+        int n, ret = 0, have_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/um/drivers/random.c:39:
+        while(size){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/um/drivers/random.c:39:
+        while(size){$

ERROR:SPACING: space required before the open brace '{'
#131: FILE: arch/um/drivers/random.c:39:
+        while(size){

ERROR:SPACING: space required before the open parenthesis '('
#131: FILE: arch/um/drivers/random.c:39:
+        while(size){

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/um/drivers/random.c:40:
+                n = os_read_file(random_fd, &data, sizeof(data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/um/drivers/random.c:40:
+                n = os_read_file(random_fd, &data, sizeof(data));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/um/drivers/random.c:41:
+                if(n > 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/um/drivers/random.c:41:
+                if(n > 0){$

ERROR:SPACING: space required before the open brace '{'
#133: FILE: arch/um/drivers/random.c:41:
+                if(n > 0){

ERROR:SPACING: space required before the open parenthesis '('
#133: FILE: arch/um/drivers/random.c:41:
+                if(n > 0){

CHECK:BRACES: braces {} should be used on all arms of this statement
#133: FILE: arch/um/drivers/random.c:41:
+                if(n > 0){
[...]
+                else if(n == -EAGAIN){
[...]
+                else return n;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/um/drivers/random.c:42:
+                        have_data = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/um/drivers/random.c:42:
+                        have_data = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/um/drivers/random.c:43:
+                        while (have_data && size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/um/drivers/random.c:43:
+                        while (have_data && size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/um/drivers/random.c:44:
+                                if (put_user((u8)data, buf++)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/um/drivers/random.c:44:
+                                if (put_user((u8)data, buf++)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/um/drivers/random.c:45:
+                                        ret = ret ? : -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/um/drivers/random.c:45:
+                                        ret = ret ? : -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/um/drivers/random.c:46:
+                                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/um/drivers/random.c:46:
+                                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/um/drivers/random.c:47:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/um/drivers/random.c:47:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/um/drivers/random.c:48:
+                                size--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/um/drivers/random.c:48:
+                                size--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/um/drivers/random.c:49:
+                                ret++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/um/drivers/random.c:49:
+                                ret++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/um/drivers/random.c:50:
+                                have_data--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/um/drivers/random.c:50:
+                                have_data--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/um/drivers/random.c:51:
+                                data>>=8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/um/drivers/random.c:51:
+                                data>>=8;$

ERROR:SPACING: spaces required around that '>>=' (ctx:VxV)
#143: FILE: arch/um/drivers/random.c:51:
+                                data>>=8;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/um/drivers/random.c:52:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/um/drivers/random.c:52:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/um/drivers/random.c:53:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/um/drivers/random.c:53:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/um/drivers/random.c:54:
+                else if(n == -EAGAIN){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/um/drivers/random.c:54:
+                else if(n == -EAGAIN){$

ERROR:SPACING: space required before the open brace '{'
#146: FILE: arch/um/drivers/random.c:54:
+                else if(n == -EAGAIN){

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: arch/um/drivers/random.c:54:
+                else if(n == -EAGAIN){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#146: FILE: arch/um/drivers/random.c:54:
+                }
+                else if(n == -EAGAIN){

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/um/drivers/random.c:55:
+                        if (filp->f_flags & O_NONBLOCK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/um/drivers/random.c:55:
+                        if (filp->f_flags & O_NONBLOCK)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/um/drivers/random.c:56:
+                                return ret ? : -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/um/drivers/random.c:56:
+                                return ret ? : -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/um/drivers/random.c:58:
+                        if(need_resched()){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/um/drivers/random.c:58:
+                        if(need_resched()){$

ERROR:SPACING: space required before the open brace '{'
#150: FILE: arch/um/drivers/random.c:58:
+                        if(need_resched()){

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: arch/um/drivers/random.c:58:
+                        if(need_resched()){

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/um/drivers/random.c:59:
+                                current->state = TASK_INTERRUPTIBLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/um/drivers/random.c:59:
+                                current->state = TASK_INTERRUPTIBLE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/um/drivers/random.c:60:
+                                schedule_timeout(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/um/drivers/random.c:60:
+                                schedule_timeout(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/um/drivers/random.c:61:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/um/drivers/random.c:61:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/um/drivers/random.c:62:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/um/drivers/random.c:62:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/um/drivers/random.c:63:
+                else return n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/um/drivers/random.c:63:
+                else return n;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#155: FILE: arch/um/drivers/random.c:63:
+                else return n;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#155: FILE: arch/um/drivers/random.c:63:
+                }
+                else return n;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: arch/um/drivers/random.c:64:
+		if (signal_pending (current))

WARNING:CONST_STRUCT: struct file_operations should normally be const
#162: FILE: arch/um/drivers/random.c:70:
+static struct file_operations rng_chrdev_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: arch/um/drivers/random.c:85:
+static int __init rng_init (void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/um/drivers/random.c:89:
+        err = os_open_file("/dev/random", of_read(OPENFLAGS()), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/um/drivers/random.c:89:
+        err = os_open_file("/dev/random", of_read(OPENFLAGS()), 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/um/drivers/random.c:90:
+        if(err < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/um/drivers/random.c:90:
+        if(err < 0)$

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: arch/um/drivers/random.c:90:
+        if(err < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/um/drivers/random.c:91:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/um/drivers/random.c:91:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/um/drivers/random.c:93:
+        random_fd = err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/um/drivers/random.c:93:
+        random_fd = err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/um/drivers/random.c:95:
+        err = os_set_fd_block(random_fd, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/um/drivers/random.c:95:
+        err = os_set_fd_block(random_fd, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/um/drivers/random.c:96:
+        if(err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/um/drivers/random.c:96:
+        if(err)$

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: arch/um/drivers/random.c:96:
+        if(err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/um/drivers/random.c:98:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: arch/um/drivers/random.c:98:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/um/drivers/random.c:98:
+                $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: arch/um/drivers/random.c:99:
+	err = misc_register (&rng_miscdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#193: FILE: arch/um/drivers/random.c:101:
+		printk (KERN_ERR PFX "misc device register failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: arch/um/drivers/random.c:101:
+		printk (KERN_ERR PFX "misc device register failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/um/drivers/random.c:106:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/um/drivers/random.c:106:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/um/drivers/random.c:109:
+        random_fd = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/um/drivers/random.c:109:
+        random_fd = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/um/drivers/random.c:110:
+        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/um/drivers/random.c:110:
+        goto out;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: arch/um/drivers/random.c:116:
+static void __exit rng_cleanup (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: arch/um/drivers/random.c:118:
+	misc_deregister (&rng_miscdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: arch/um/drivers/random.c:121:
+module_init (rng_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: arch/um/drivers/random.c:122:
+module_exit (rng_cleanup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 52 warnings, 2 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
