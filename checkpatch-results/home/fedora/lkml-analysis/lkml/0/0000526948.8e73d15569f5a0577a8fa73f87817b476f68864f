WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
  I'm looking for commentary on the following. As you might recall I had posted

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#33: 
solved the problem for ppc64 from an architecture independant standpoint.
                                                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#59: 
int (*pci_read_irq)(struct pci_dev *);                     /* the arch dependant
                                                                       ^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#78: FILE: include/linux/pci.h:296:
space. */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#86: FILE: include/linux/pci.h:302:
+#define PCIIOC_CONTROLLER  (PCIIOC_BASE | 0x00)    /* Get controller for PCI
+#define PCIIOC_MMAP_IS_IO  (PCIIOC_BASE | 0x01)    /* Set mmap state to I/O

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: include/linux/pci.h:303:
+#define PCIIOC_MMAP_IS_IO  (PCIIOC_BASE | 0x01)    /* Set mmap state to I/O
+#define PCIIOC_MMAP_IS_MEM (PCIIOC_BASE | 0x02)    /* Set mmap state to MEM

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: include/linux/pci.h:304:
+#define PCIIOC_MMAP_IS_MEM (PCIIOC_BASE | 0x02)    /* Set mmap state to MEM
+#define PCIIOC_WRITE_COMBINE   (PCIIOC_BASE | 0x03)    /* Enable/disable

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#92: FILE: include/linux/pci.h:305:
+#define PCIIOC_WRITE_COMBINE   (PCIIOC_BASE | 0x03)    /* Enable/disable
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/pci.h:421:
+   unsigned int  number;       /* pci_controller number + bus number */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/linux/pci.h:422:
+   unsigned int  primary;      /* number of primary bridge */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/pci.h:423:
+   unsigned int  secondary;    /* number of secondary bridge */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/linux/pci.h:424:
+   unsigned int  subordinate;  /* max number of subordinate buses */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: include/linux/pci.h:461:
+   int (*pci_read_bases)(struct pci_dev *, int cnt,int rom);  /* These optional$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/linux/pci.h:461:
+   int (*pci_read_bases)(struct pci_dev *, int cnt,int rom);  /* These optional
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#115: FILE: include/linux/pci.h:461:
+   int (*pci_read_bases)(struct pci_dev *, int cnt,int rom);  /* These optional

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: include/linux/pci.h:462:
+   int (*pci_read_bases)(struct pci_dev *, int cnt,int rom);  /* These optional
+   int (*pci_read_irq)(struct pci_dev *);                     /* the arch

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: include/linux/pci.h:463:
+   int (*pci_read_irq)(struct pci_dev *);                     /* the arch
+   int (*)(struct pci_dev *);              /* to manage the registers.     */

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#150: FILE: drivers/pci/pci.c:749:
+    * Check for architecture dependant call to read the BARs.
                              ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/pci/pci.c:751:
+   if(  dev->bus->ops->pci_read_bases != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#152: FILE: drivers/pci/pci.c:751:
+   if(  dev->bus->ops->pci_read_bases != NULL) {
+       dev->bus->ops->pci_read_bases(dev, howmany, rom);

ERROR:SPACING: space prohibited after that open parenthesis '('
#152: FILE: drivers/pci/pci.c:751:
+   if(  dev->bus->ops->pci_read_bases != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: drivers/pci/pci.c:751:
+   if(  dev->bus->ops->pci_read_bases != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->bus->ops->pci_read_bases"
#152: FILE: drivers/pci/pci.c:751:
+   if(  dev->bus->ops->pci_read_bases != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/pci/pci.c:752:
+       dev->bus->ops->pci_read_bases(dev, howmany, rom);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/pci/pci.c:753:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/pci/pci.c:754:
+   }$

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#166: FILE: drivers/pci/pci.c:1039:
+    * Check for architecture dependant call to read and set irg
                              ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/pci/pci.c:1041:
+   if(dev->bus->ops->pci_read_irq != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#168: FILE: drivers/pci/pci.c:1041:
+   if(dev->bus->ops->pci_read_irq != NULL) {
+       dev->bus->ops->pci_read_irq(dev);

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: drivers/pci/pci.c:1041:
+   if(dev->bus->ops->pci_read_irq != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->bus->ops->pci_read_irq"
#168: FILE: drivers/pci/pci.c:1041:
+   if(dev->bus->ops->pci_read_irq != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/pci/pci.c:1042:
+       dev->bus->ops->pci_read_irq(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/pci/pci.c:1043:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/pci/pci.c:1044:
+   }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#183: FILE: drivers/pci/pci.c:1067:
+   /* sprintf(dev->slot_name, "%02x:%02x.%d", dev->bus->number,
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: drivers/pci/pci.c:1068:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/pci/pci.c:1069:
+        /********************************************************************$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/pci/pci.c:1070:
+         * Prefix the bus number with the phb number for large(>256 bus)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/pci/pci.c:1071:
+         ********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/pci/pci.c:1072:
+   sprintf(dev->slot_name, "%4x%02x:%02x.%1x",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/pci/pci.c:1073:
+               ( (dev->bus->number>>8) &0xFF0000),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/pci/pci.c:1073:
+   sprintf(dev->slot_name, "%4x%02x:%02x.%1x",
+               ( (dev->bus->number>>8) &0xFF0000),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/pci/pci.c:1073:
+               ( (dev->bus->number>>8) &0xFF0000),$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#190: FILE: drivers/pci/pci.c:1073:
+               ( (dev->bus->number>>8) &0xFF0000),
                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#190: FILE: drivers/pci/pci.c:1073:
+               ( (dev->bus->number>>8) &0xFF0000),
                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#190: FILE: drivers/pci/pci.c:1073:
+               ( (dev->bus->number>>8) &0xFF0000),

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/pci/pci.c:1074:
+               (  dev->bus->number&0x0000FF),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/pci/pci.c:1074:
+               (  dev->bus->number&0x0000FF),$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#191: FILE: drivers/pci/pci.c:1074:
+               (  dev->bus->number&0x0000FF),
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: drivers/pci/pci.c:1074:
+               (  dev->bus->number&0x0000FF),

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/pci/pci.c:1075:
+               PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/pci/pci.c:1075:
+               PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/pci/pci.c:1120:
+   }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: drivers/pci/pci.c:1122:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/pci/pci.c:1123:
+   /*********************************************************************$

WARNING:TYPO_SPELLING: 'architure' may be misspelled - perhaps 'architecture'?
#206: FILE: drivers/pci/pci.c:1124:
+    * Give the architure code a chance to fix up/tweak the devices.
                ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/pci/pci.c:1124:
+    * Give the architure code a chance to fix up/tweak the devices.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/pci/pci.c:1125:
+    *********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/pci/pci.c:1126:
+   if(dev->bus->ops->pci_fixup_registers != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/pci/pci.c:1127:
+       dev->bus->ops->pci_fixup_registers(dev);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 39 warnings, 8 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000526948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
