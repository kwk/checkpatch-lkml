WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urN linux-2.5.59-bk1/arch/i386/kernel/entry.S linux-b2/arch/i386/kernel/entry.S

WARNING:FUNCTION_ARGUMENTS: function definition argument 'siginfo_t *' should also have an identifier name
#273: FILE: arch/i386/kernel/traps.c:281:
+	void (*siginfo)(siginfo_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space prohibited after that open square bracket '['
#275: FILE: arch/i386/kernel/traps.c:283:
+	[ 0] = { SIGFPE,  "divide error", siginfo_intdiv },

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open square bracket '['
#276: FILE: arch/i386/kernel/traps.c:284:
+	[ 3] = { SIGTRAP, "int3", NULL },

ERROR:SPACING: space prohibited after that open square bracket '['
#277: FILE: arch/i386/kernel/traps.c:285:
+	[ 4] = { SIGSEGV, "overflow", NULL },

ERROR:SPACING: space prohibited after that open square bracket '['
#278: FILE: arch/i386/kernel/traps.c:286:
+	[ 5] = { SIGSEGV, "bounds", NULL },

ERROR:SPACING: space prohibited after that open square bracket '['
#279: FILE: arch/i386/kernel/traps.c:287:
+	[ 6] = { SIGILL,  "invalid operand", siginfo_illopn },

ERROR:SPACING: space prohibited after that open square bracket '['
#280: FILE: arch/i386/kernel/traps.c:288:
+	[ 8] = { SIGSEGV, "double fault", NULL },

ERROR:SPACING: space prohibited after that open square bracket '['
#281: FILE: arch/i386/kernel/traps.c:289:
+	[ 9] = { SIGFPE,  "coprocessor segment overrun", NULL },

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: arch/i386/kernel/traps.c:298:
+asmlinkage void do_trap(struct pt_regs * regs, long error_code)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#318: FILE: arch/i386/kernel/traps.c:317:
+		siginfo.si_addr = (void *) regs->eip;

CHECK:SPACING: No space is necessary after a cast
#335: FILE: arch/i386/kernel/traps.c:331:
+		if (handle_vm86_trap((struct kernel_vm86_regs *) regs, error_code, trapnr));

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#335: FILE: arch/i386/kernel/traps.c:331:
+		if (handle_vm86_trap((struct kernel_vm86_regs *) regs, error_code, trapnr));
+			goto trap_signal;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#335: FILE: arch/i386/kernel/traps.c:331:
+		if (handle_vm86_trap((struct kernel_vm86_regs *) regs, error_code, trapnr));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: arch/i386/kernel/vm86.c:505:
+	switch(trapno) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394997.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 3 warnings, 2 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394997.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
