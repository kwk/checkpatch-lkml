WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
if it ever will go, it will go in pieces. I will post the splitup for review,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: fs/ext2/ialloc.c:44:
+static struct buffer_head *read_inode_bitmap (struct super_block * sb,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: fs/ext2/ialloc.c:44:
+static struct buffer_head *read_inode_bitmap (struct super_block * sb,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: fs/ext2/ialloc.c:45:
+static struct buffer_head *read_inode_bitmap (struct super_block * sb,
+					       unsigned long block_group)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: fs/ext2/ialloc.c:77:
+static struct buffer_head *load_inode_bitmap (struct super_block * sb,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: fs/ext2/ialloc.c:77:
+static struct buffer_head *load_inode_bitmap (struct super_block * sb,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: fs/ext2/ialloc.c:101:
+		ext2_panic (sb, "load_inode_bitmap",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/ext2/ialloc.c:107:
+	for (i = 0; i < sbi->s_loaded_inode_bitmaps &&
+		    sbi->s_inode_bitmap_number[i] != block_group;

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: fs/ext2/ialloc.c:113:
+		unsigned long nr = sbi->s_inode_bitmap_number[i];
+		bh = sbi->s_inode_bitmap[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: fs/ext2/ialloc.c:131:
+		int j;
+		if (sbi->s_loaded_inode_bitmaps < EXT2_MAX_GROUP_LOADED)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: fs/ext2/ialloc.c:134:
+			brelse (sbi->s_inode_bitmap[EXT2_MAX_GROUP_LOADED - 1]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: fs/ext2/ialloc.c:144:
+	bh = read_inode_bitmap (sb, block_group);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: fs/ext2/ialloc.c:205:
+	bh = load_inode_bitmap (sb, block_group);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: fs/ext2/ialloc.c:255:
+	struct ext2_super_block * es = sb->u.ext2_sb.s_es;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#279: FILE: fs/ext2/ialloc.c:263:
+/* I am not yet convinced that this next bit is necessary.
+	for (i = parent_cg, j = 0; j < ngroups; j++, i = ++i % ngroups) {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: fs/ext2/ialloc.c:267:
+^I^Iif ((le16_to_cpu(cg->bg_used_dirs_count) << 8) < $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: fs/ext2/ialloc.c:276:
+		cg = ext2_get_group_desc (sb, j, &bh);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: fs/ext2/ialloc.c:281:
+^I^Iif (!best_cg || $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: fs/ext2/ialloc.c:311:
+	cg = ext2_get_group_desc (sb, i, &bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: fs/ext2/ialloc.c:323:
+		cg = ext2_get_group_desc (sb, i, &bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: fs/ext2/ialloc.c:335:
+		cg = ext2_get_group_desc (sb, i, &bh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#365: FILE: fs/ext2/ialloc.c:349:
+struct inode * ext2_new_inode (const struct inode * dir, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#365: FILE: fs/ext2/ialloc.c:349:
+struct inode * ext2_new_inode (const struct inode * dir, int mode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: fs/ext2/ialloc.c:349:
+struct inode * ext2_new_inode (const struct inode * dir, int mode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: fs/ext2/ialloc.c:372:
+^Iif (S_ISDIR(mode)) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: fs/ext2/ialloc.c:382:
+	bh = load_inode_bitmap (sb, i);

CHECK:SPACING: No space is necessary after a cast
#504: FILE: fs/ext2/ialloc.c:386:
+	j = ext2_find_first_zero_bit ((unsigned long *) bh->b_data,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: fs/ext2/ialloc.c:386:
+	j = ext2_find_first_zero_bit ((unsigned long *) bh->b_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: fs/ext2/ialloc.c:387:
+	j = ext2_find_first_zero_bit ((unsigned long *) bh->b_data,
+					      EXT2_INODES_PER_GROUP(sb));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#508: FILE: fs/ext2/ialloc.c:390:
+	ext2_set_bit (j, bh->b_data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: fs/ext2/ialloc.c:394:
+		ll_rw_block (WRITE, 1, &bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: fs/ext2/ialloc.c:395:
+		wait_on_buffer (bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: fs/ext2/ialloc.c:454:
+	gdp = ext2_get_group_desc (sb, i, &bh2);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#589: FILE: fs/ext2/ialloc.c:463:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: fs/ext2/ialloc.c:467:
+	ext2_error (sb, "ext2_new_inode",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#601: FILE: fs/ext2/ialloc.c:475:
+	gdp = ext2_get_group_desc (sb, i, &bh2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: fs/ext2/ialloc.c:500:
+		bh = load_inode_bitmap (sb, i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: fs/ext2/ialloc.c:504:
+		x = ext2_count_free (bh, EXT2_INODES_PER_GROUP(sb) / 8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: fs/ext2/ialloc.c:537:
+		bh = load_inode_bitmap (sb, i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: fs/ext2/ialloc.c:541:
+		x = ext2_count_free (bh, EXT2_INODES_PER_GROUP(sb) / 8);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#678: FILE: fs/ext2/namei.c:364:
+	struct inode * inode = ext2_new_inode (dir, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#678: FILE: fs/ext2/namei.c:364:
+	struct inode * inode = ext2_new_inode (dir, mode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#680: FILE: fs/ext2/namei.c:366:
+	int err = PTR_ERR(inode);
+	if (IS_ERR(inode))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#696: FILE: fs/ext2/namei.c:387:
+	struct inode * inode = ext2_new_inode (dir, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: fs/ext2/namei.c:387:
+	struct inode * inode = ext2_new_inode (dir, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: fs/ext2/namei.c:423:
+	inode = ext2_new_inode (dir, S_IFDIR | mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#741: FILE: fs/ext2/namei.c:627:
+	inode = ext2_new_inode (dir, S_IFLNK|S_IRWXUGO);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#741: FILE: fs/ext2/namei.c:627:
+	inode = ext2_new_inode (dir, S_IFLNK|S_IRWXUGO);
 	                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#741: FILE: fs/ext2/namei.c:627:
+	inode = ext2_new_inode (dir, S_IFLNK|S_IRWXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#758: FILE: include/linux/ext2_fs.h:555:
+extern struct inode * ext2_new_inode (const struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: include/linux/ext2_fs.h:555:
+extern struct inode * ext2_new_inode (const struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: include/linux/ext2_fs.h:555:
+extern struct inode * ext2_new_inode (const struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#758: FILE: include/linux/ext2_fs.h:555:
+extern struct inode * ext2_new_inode (const struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#758: FILE: include/linux/ext2_fs.h:555:
+extern struct inode * ext2_new_inode (const struct inode *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 37 warnings, 6 checks, 684 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
