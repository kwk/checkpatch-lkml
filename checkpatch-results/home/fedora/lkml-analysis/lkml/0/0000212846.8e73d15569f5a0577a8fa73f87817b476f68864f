WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
This means that per-thread information is not available outside the process.

CHECK:SPACING: No space is necessary after a cast
#72: FILE: include/linux/posix-timers.h:7:
+#define CPUCLOCK_PID(clock)	((pid_t) ~((clock) >> 3))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#74: FILE: include/linux/posix-timers.h:9:
+	(((clock) & (clockid_t) CPUCLOCK_PERTHREAD_MASK) != 0)

CHECK:SPACING: No space is necessary after a cast
#77: FILE: include/linux/posix-timers.h:12:
+#define CPUCLOCK_WHICH(clock)	((clock) & (clockid_t) CPUCLOCK_CLOCK_MASK)

CHECK:SPACING: No space is necessary after a cast
#85: FILE: include/linux/posix-timers.h:20:
+	((~(clockid_t) (pid) << 3) | (clockid_t) (clock))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timespec *' should also have an identifier name
#99: FILE: include/linux/posix-timers.h:94:
+int posix_cpu_clock_get(clockid_t which_clock, struct timespec *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct k_itimer *' should also have an identifier name
#101: FILE: include/linux/posix-timers.h:96:
+int posix_cpu_timer_create(struct k_itimer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'clockid_t' should also have an identifier name
#102: FILE: include/linux/posix-timers.h:97:
+int posix_cpu_nsleep(clockid_t, int, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#102: FILE: include/linux/posix-timers.h:97:
+int posix_cpu_nsleep(clockid_t, int, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timespec *' should also have an identifier name
#102: FILE: include/linux/posix-timers.h:97:
+int posix_cpu_nsleep(clockid_t, int, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct k_itimer *' should also have an identifier name
#105: FILE: include/linux/posix-timers.h:100:
+int posix_cpu_timer_set(struct k_itimer *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#105: FILE: include/linux/posix-timers.h:100:
+int posix_cpu_timer_set(struct k_itimer *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct itimerspec *' should also have an identifier name
#105: FILE: include/linux/posix-timers.h:100:
+int posix_cpu_timer_set(struct k_itimer *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct itimerspec *' should also have an identifier name
#105: FILE: include/linux/posix-timers.h:100:
+int posix_cpu_timer_set(struct k_itimer *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct k_itimer *' should also have an identifier name
#107: FILE: include/linux/posix-timers.h:102:
+int posix_cpu_timer_del(struct k_itimer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct k_itimer *' should also have an identifier name
#108: FILE: include/linux/posix-timers.h:103:
+void posix_cpu_timer_get(struct k_itimer *, struct itimerspec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct itimerspec *' should also have an identifier name
#108: FILE: include/linux/posix-timers.h:103:
+void posix_cpu_timer_get(struct k_itimer *, struct itimerspec *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: include/linux/posix-timers.h:105:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/sched.h:761:
+extern unsigned long long current_sched_time(const task_t *current_task);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/fork.c:884:
+ ^Ip->sched_time = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: kernel/fork.c:884:
+ ^Ip->sched_time = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/fork.c:884:
+ ^Ip->sched_time = 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#177: FILE: kernel/posix-cpu-timers.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#183: FILE: kernel/posix-cpu-timers.c:7:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#230: FILE: kernel/posix-cpu-timers.c:54:
+}
+static inline cputime_t virt_ticks(struct task_struct *p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#234: FILE: kernel/posix-cpu-timers.c:58:
+}
+static inline unsigned long long sched_ns(struct task_struct *p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: kernel/posix-cpu-timers.c:66:
+	int error = check_clock(which_clock);
+	if (!error) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: kernel/posix-cpu-timers.c:88:
+	int error = check_clock(which_clock);
+	if (error == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#264: FILE: kernel/posix-cpu-timers.c:88:
+	if (error == 0) {
+		error = -EPERM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#270: FILE: kernel/posix-cpu-timers.c:94:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: kernel/posix-cpu-timers.c:127:
+	unsigned long flags;
+	switch (CPUCLOCK_WHICH(which_clock)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#328: FILE: kernel/posix-cpu-timers.c:152:
+		while ((t = next_thread(t)) != p) {
+			cpu->sched += t->sched_time;
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: kernel/posix-cpu-timers.c:173:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: kernel/posix-cpu-timers.c:203:
+		struct task_struct *p;
+		read_lock(&tasklist_lock);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: kernel/posix-cpu-timers.c:231:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#410: FILE: kernel/posix-cpu-timers.c:234:
+}
+int posix_cpu_timer_del(struct k_itimer *timer)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#412: FILE: kernel/posix-cpu-timers.c:236:
+	BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#415: FILE: kernel/posix-cpu-timers.c:239:
+}
+void posix_cpu_timer_get(struct k_itimer *timer, struct itimerspec *spec)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#417: FILE: kernel/posix-cpu-timers.c:241:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#420: FILE: kernel/posix-cpu-timers.c:244:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#428: FILE: kernel/posix-cpu-timers.c:252:
+}
+static int process_cpu_clock_get(clockid_t which_clock, struct timespec *tp)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#432: FILE: kernel/posix-cpu-timers.c:256:
+}
+static int thread_cpu_clock_getres(clockid_t which_clock, struct timespec *tp)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#436: FILE: kernel/posix-cpu-timers.c:260:
+}
+static int thread_cpu_clock_get(clockid_t which_clock, struct timespec *tp)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#441: FILE: kernel/posix-cpu-timers.c:265:
+
+

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#464: FILE: kernel/posix-cpu-timers.c:288:
+__initcall(init_posix_cpu_timers);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "posix_clocks[clock].call"
#481: FILE: kernel/posix-timers.c:210:
+	 (posix_clocks[clock].call != NULL \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#508: FILE: kernel/sched.c:2245:
+	unsigned long long last = max(p->timestamp, rq->timestamp_last_tick);
+	p->sched_time += now - last;

WARNING:LINE_SPACING: Missing a blank line after declarations
#519: FILE: kernel/sched.c:2256:
+	unsigned long flags;
+	local_irq_save(flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 29 warnings, 18 checks, 465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
