WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
--- linux-2.6.9.orig/include/asm-sparc64/pgtable.h	2004-10-18 14:53:06.000000000 -0700

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#52: FILE: arch/sparc64/mm/init.c:195:
+static int flush_dcache_pages(struct page *page) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#60: FILE: arch/sparc64/mm/init.c:203:
+	while (nr-- >0)
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#64: FILE: arch/sparc64/mm/init.c:207:
+static int smp_flush_dcache_pages(struct page *page, int cpu) {

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#72: FILE: arch/sparc64/mm/init.c:215:
+	while (nr-- >0)
 	            ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#96: FILE: arch/sparc64/mm/init.c:247:
+	if (get_thread_fault_code()) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: arch/sparc64/mm/init.c:256:
+				__update_mmu_cache(vma->vm_mm->context & TAG_CONTEXT_BITS,
+				   address, pte, get_thread_fault_code());

CHECK:BRACES: Unbalanced braces around else statement
#108: FILE: arch/sparc64/mm/init.c:259:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: arch/sparc64/mm/init.c:261:
+			__update_mmu_cache(vma->vm_mm->context & TAG_CONTEXT_BITS,
 				   address, pte, get_thread_fault_code());

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#112: FILE: arch/sparc64/mm/init.c:263:
+
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: arch/sparc64/mm/init.c:281:
+			int nr=1;
 			      ^

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#130: FILE: arch/sparc64/mm/init.c:285:
+			while (nr-- >0)
 			            ^

CHECK:BRACES: Unbalanced braces around else statement
#132: FILE: arch/sparc64/mm/init.c:287:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237482.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 6 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237482.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
