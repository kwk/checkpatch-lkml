WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#include <linux/module.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#include <linux/types.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#include <linux/kernel.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#include <linux/fs.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#include <linux/mm.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#include <linux/init.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#include <linux/ioport.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#include <asm/io.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#include <linux/vmalloc.h>

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
                                                                                                                             

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#include <asm/irq.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#56: 
int simple_open (struct inode *inode, struct file *filp);
                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#57: 
int simple_release(struct inode *inode, struct file *filp);
                                                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#58: 
int simple_ioctl (struct inode *inode, struct file *filp, unsigned int
                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#75: 
int simple_open (struct inode *inode, struct file *filp)
                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#82: 
                                                                                                                             int simple_release(struct inode *inode, struct file *filp)
                                                                                                                                                                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#102: 
int simple_ioctl (struct inode *inode, struct file *filp,
                                                    ^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#154: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#155: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#156: 
#include <errno.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#157: 
#include <sys/types.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#158: 
#include <sys/stat.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#159: 
#include <sys/ioctl.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#160: 
#include <fcntl.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/i386/kernel/cpu/common.c:569:
+^I__set_tss_desc(cpu, GDT_ENTRY_PAGE_FAULT_TSS, &pagefault_tss); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#237: FILE: arch/i386/kernel/pagefault.c:1:
+#include <linux/mm.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#244: FILE: arch/i386/kernel/pagefault.c:8:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#245: FILE: arch/i386/kernel/pagefault.c:9:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#246: FILE: arch/i386/kernel/pagefault.c:10:
+#include <asm/processor.h>

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: arch/i386/kernel/pagefault.c:16:
+#define STACK_START (unsigned long)(pagefault_stack+PAGEFAULT_STACKSIZE)
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#252: FILE: arch/i386/kernel/pagefault.c:16:
+#define STACK_START (unsigned long)(pagefault_stack+PAGEFAULT_STACKSIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#254: FILE: arch/i386/kernel/pagefault.c:18:
+#define ptr_ok(x) ((x) > PAGE_OFFSET && (x) < PAGE_OFFSET + 0x1000000)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#256: FILE: arch/i386/kernel/pagefault.c:20:
+extern struct vm_struct *find_vm_area(void *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#257: FILE: arch/i386/kernel/pagefault.c:21:
+extern void expand_stack_size(struct vm_struct *area);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#262: FILE: arch/i386/kernel/pagefault.c:26:
+	unsigned int i=0;
 	              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/i386/kernel/pagefault.c:34:
+        __asm__("iret");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/i386/kernel/pagefault.c:34:
+        __asm__("iret");$

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#274: FILE: arch/i386/kernel/pagefault.c:38:
+printk("gdt entry a 0x%x\ngdt entry b 0x%x\n", (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].a), (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].b));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#274: FILE: arch/i386/kernel/pagefault.c:38:
+printk("gdt entry a 0x%x\ngdt entry b 0x%x\n", (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].a), (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].b));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#274: FILE: arch/i386/kernel/pagefault.c:38:
+printk("gdt entry a 0x%x\ngdt entry b 0x%x\n", (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].a), (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].b));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: arch/i386/kernel/pagefault.c:38:
+printk("gdt entry a 0x%x\ngdt entry b 0x%x\n", (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].a), (unsigned)(cpu_gdt_table[GDT_ENTRY_PAGE_FAULT_TSS].b));

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/i386/kernel/pagefault.c:42:
+        //__set_tss_desc(0, GDT_ENTRY_PAGE_FAULT_TSS, &pagefault_tss);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/i386/kernel/pagefault.c:44:
+        __asm__("movl %%cr2,%0":"=r" (address));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/i386/kernel/pagefault.c:44:
+        __asm__("movl %%cr2,%0":"=r" (address));$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#280: FILE: arch/i386/kernel/pagefault.c:44:
+        __asm__("movl %%cr2,%0":"=r" (address));
                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: arch/i386/kernel/pagefault.c:46:
+	aligned_addr = ((address+PAGE_SIZE)&(~(PAGE_SIZE-1)));
 	                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#282: FILE: arch/i386/kernel/pagefault.c:46:
+	aligned_addr = ((address+PAGE_SIZE)&(~(PAGE_SIZE-1)));
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#282: FILE: arch/i386/kernel/pagefault.c:46:
+	aligned_addr = ((address+PAGE_SIZE)&(~(PAGE_SIZE-1)));
 	                                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#283: FILE: arch/i386/kernel/pagefault.c:47:
+	printk("Page fault address 0x%x, start address 0x%x\n", address, aligned_addr);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#286: FILE: arch/i386/kernel/pagefault.c:50:
+	for(i=0; i<THREAD_SIZE/PAGE_SIZE; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#286: FILE: arch/i386/kernel/pagefault.c:50:
+	for(i=0; i<THREAD_SIZE/PAGE_SIZE; i++) {
 	          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#286: FILE: arch/i386/kernel/pagefault.c:50:
+	for(i=0; i<THREAD_SIZE/PAGE_SIZE; i++) {
 	                      ^

ERROR:SPACING: space required before the open parenthesis '('
#286: FILE: arch/i386/kernel/pagefault.c:50:
+	for(i=0; i<THREAD_SIZE/PAGE_SIZE; i++) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#287: FILE: arch/i386/kernel/pagefault.c:51:
+		area = find_vm_area((void*)(aligned_addr-(i*PAGE_SIZE)));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#287: FILE: arch/i386/kernel/pagefault.c:51:
+		area = find_vm_area((void*)(aligned_addr-(i*PAGE_SIZE)));
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#287: FILE: arch/i386/kernel/pagefault.c:51:
+		area = find_vm_area((void*)(aligned_addr-(i*PAGE_SIZE)));
 		                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: arch/i386/kernel/pagefault.c:52:
+		if(area) {

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#289: FILE: arch/i386/kernel/pagefault.c:53:
+			printk("vm area 0x%x, addr 0x%x, address 0x%x\n", (unsigned int)area, (unsigned int)(area->addr), aligned_addr-(i*4096));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: arch/i386/kernel/pagefault.c:53:
+			printk("vm area 0x%x, addr 0x%x, address 0x%x\n", (unsigned int)area, (unsigned int)(area->addr), aligned_addr-(i*4096));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#289: FILE: arch/i386/kernel/pagefault.c:53:
+			printk("vm area 0x%x, addr 0x%x, address 0x%x\n", (unsigned int)area, (unsigned int)(area->addr), aligned_addr-(i*4096));
 			                                                                                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#289: FILE: arch/i386/kernel/pagefault.c:53:
+			printk("vm area 0x%x, addr 0x%x, address 0x%x\n", (unsigned int)area, (unsigned int)(area->addr), aligned_addr-(i*4096));
 			                                                                                                                 ^

CHECK:SPACING: No space is necessary after a cast
#306: FILE: arch/i386/kernel/pagefault.c:70:
+	.eip		= (unsigned long) pagefault_fn,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#328: FILE: arch/i386/kernel/traps.c:1033:
+EXPORT_SYMBOL(my_set_task_gate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void my_set_page_fault_intr_gate() should probably be void my_set_page_fault_intr_gate(void)
#330: FILE: arch/i386/kernel/traps.c:1035:
+void my_set_page_fault_intr_gate()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#332: FILE: arch/i386/kernel/traps.c:1037:
+	set_intr_gate(14,&page_fault);
 	                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#332: FILE: arch/i386/kernel/traps.c:1037:
+	set_intr_gate(14,&page_fault);
 	                 ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#335: FILE: arch/i386/kernel/traps.c:1040:
+EXPORT_SYMBOL(my_set_page_fault_intr_gate);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#415: FILE: include/asm-i386/thread_info.h:58:
+#define THREAD_SIZE		(8192*2)
                    		     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: include/asm-i386/vmalloc_thread_info.h:1:
+#ifndef _LINUX_VMALLOC_THREAD_INFO_H $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#423: FILE: include/asm-i386/vmalloc_thread_info.h:1:
+#ifndef _LINUX_VMALLOC_THREAD_INFO_H 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: include/asm-i386/vmalloc_thread_info.h:7:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#433: FILE: include/asm-i386/vmalloc_thread_info.h:11:
+extern void *vmalloc_thread_info(unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: include/asm-i386/vmalloc_thread_info.h:12:
+extern void extend_stack_size(struct vm_struct *area);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: include/linux/gfp.h:96:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#447: FILE: include/linux/gfp.h:96:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: include/linux/gfp.h:96:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: include/linux/gfp.h:96:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: include/linux/gfp.h:98:
+                                                unsigned int order)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: include/linux/gfp.h:98:
+static inline struct page *alloc_thread_info_pages_node(int nid, unsigned int gfp_mask,
+                                                unsigned int order)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: include/linux/gfp.h:98:
+                                                unsigned int order)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: include/linux/gfp.h:100:
+        if (unlikely(order >= MAX_ORDER))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: include/linux/gfp.h:100:
+        if (unlikely(order >= MAX_ORDER))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: include/linux/gfp.h:101:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: include/linux/gfp.h:101:
+                return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: include/linux/gfp.h:102:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#453: FILE: include/linux/gfp.h:102:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: include/linux/gfp.h:102:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: include/linux/gfp.h:102:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: include/linux/gfp.h:103:
+        return __alloc_thread_info_pages(gfp_mask, order,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: include/linux/gfp.h:103:
+        return __alloc_thread_info_pages(gfp_mask, order,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: include/linux/gfp.h:104:
+                NODE_DATA(nid)->node_zonelists + (gfp_mask & GFP_ZONEMASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: include/linux/gfp.h:104:
+                NODE_DATA(nid)->node_zonelists + (gfp_mask & GFP_ZONEMASK));$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#481: FILE: kernel/fork.c:82:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#493: FILE: kernel/fork.c:271:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: kernel/fork.c:274:
+          ti = vmalloc_thread_info(THREAD_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/fork.c:274:
+          ti = vmalloc_thread_info(THREAD_SIZE);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: mm/page_alloc.c:2073:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: mm/page_alloc.c:2076:
+__alloc_thread_info_pages(unsigned int gfp_mask, unsigned int order,
+		struct zonelist *zonelist)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!zones[0]"
#550: FILE: mm/page_alloc.c:2101:
+	if (unlikely(zones[0] == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#559: FILE: mm/page_alloc.c:2110:
+		min = z->pages_low + (1<<order) + z->protection[alloc_type];
 		                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#582: FILE: mm/page_alloc.c:2133:
+		min += (1<<order) + z->protection[alloc_type];
 		         ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#592: FILE: mm/page_alloc.c:2143:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#604: FILE: mm/page_alloc.c:2155:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#611: FILE: mm/page_alloc.c:2162:
+#if 0

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#629: FILE: mm/page_alloc.c:2180:
+		min += (1<<order) + z->protection[alloc_type];
 		         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'order <= 3'
#648: FILE: mm/page_alloc.c:2199:
+		if ((order <= 3) || (gfp_mask & __GFP_REPEAT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#654: FILE: mm/page_alloc.c:2205:
+		blk_congestion_wait(WRITE, HZ/50);
 		                             ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#659: FILE: mm/page_alloc.c:2210:
+#if 0

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#660: FILE: mm/page_alloc.c:2211:
+	if (!(gfp_mask & __GFP_NOWARN) && printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#661: FILE: mm/page_alloc.c:2212:
+		printk(KERN_WARNING "%s: page allocation failure."

WARNING:SPLIT_STRING: quoted string split across lines
#662: FILE: mm/page_alloc.c:2213:
+		printk(KERN_WARNING "%s: page allocation failure."
+			" order:%d, mode:0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#674: FILE: mm/page_alloc.c:2225:
+EXPORT_SYMBOL(__alloc_thread_info_pages);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#679: FILE: mm/vmalloc_thread_info.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#680: FILE: mm/vmalloc_thread_info.c:2:
+ *  linux/mm/vmalloc_thread_info.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#693: FILE: mm/vmalloc_thread_info.c:15:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#696: FILE: mm/vmalloc_thread_info.c:18:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#698: FILE: mm/vmalloc_thread_info.c:20:
+extern struct vm_struct *vmlist;

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: mm/vmalloc_thread_info.c:24:
+        struct vm_struct *area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: mm/vmalloc_thread_info.c:24:
+        struct vm_struct *area;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: mm/vmalloc_thread_info.c:25:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: mm/vmalloc_thread_info.c:25:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: mm/vmalloc_thread_info.c:25:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: mm/vmalloc_thread_info.c:26:
+        if (!addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: mm/vmalloc_thread_info.c:26:
+        if (!addr)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: mm/vmalloc_thread_info.c:27:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: mm/vmalloc_thread_info.c:27:
+                return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: mm/vmalloc_thread_info.c:28:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: mm/vmalloc_thread_info.c:28:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: mm/vmalloc_thread_info.c:28:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: mm/vmalloc_thread_info.c:29:
+        if ((PAGE_SIZE-1) & (unsigned long)addr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: mm/vmalloc_thread_info.c:29:
+        if ((PAGE_SIZE-1) & (unsigned long)addr) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#707: FILE: mm/vmalloc_thread_info.c:29:
+        if ((PAGE_SIZE-1) & (unsigned long)addr) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: mm/vmalloc_thread_info.c:30:
+                printk(KERN_ERR "Trying to vfree() bad address (%p)\n", addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: mm/vmalloc_thread_info.c:30:
+                printk(KERN_ERR "Trying to vfree() bad address (%p)\n", addr);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#708: FILE: mm/vmalloc_thread_info.c:30:
+                printk(KERN_ERR "Trying to vfree() bad address (%p)\n", addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: mm/vmalloc_thread_info.c:31:
+                WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: mm/vmalloc_thread_info.c:31:
+                WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: mm/vmalloc_thread_info.c:32:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: mm/vmalloc_thread_info.c:32:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: mm/vmalloc_thread_info.c:33:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: mm/vmalloc_thread_info.c:33:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: mm/vmalloc_thread_info.c:34:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: mm/vmalloc_thread_info.c:34:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: mm/vmalloc_thread_info.c:34:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: mm/vmalloc_thread_info.c:35:
+        area = remove_vm_area(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: mm/vmalloc_thread_info.c:35:
+        area = remove_vm_area(addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: mm/vmalloc_thread_info.c:36:
+        if (unlikely(!area)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: mm/vmalloc_thread_info.c:36:
+        if (unlikely(!area)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: mm/vmalloc_thread_info.c:37:
+                printk(KERN_ERR "Trying to vfree() nonexistent vm area (%p)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: mm/vmalloc_thread_info.c:37:
+                printk(KERN_ERR "Trying to vfree() nonexistent vm area (%p)\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#715: FILE: mm/vmalloc_thread_info.c:37:
+                printk(KERN_ERR "Trying to vfree() nonexistent vm area (%p)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: mm/vmalloc_thread_info.c:38:
+                                addr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: mm/vmalloc_thread_info.c:38:
+                printk(KERN_ERR "Trying to vfree() nonexistent vm area (%p)\n",
+                                addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: mm/vmalloc_thread_info.c:38:
+                                addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: mm/vmalloc_thread_info.c:39:
+                WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: mm/vmalloc_thread_info.c:39:
+                WARN_ON(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: mm/vmalloc_thread_info.c:40:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: mm/vmalloc_thread_info.c:40:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: mm/vmalloc_thread_info.c:41:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: mm/vmalloc_thread_info.c:41:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: mm/vmalloc_thread_info.c:42:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: mm/vmalloc_thread_info.c:42:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: mm/vmalloc_thread_info.c:42:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: mm/vmalloc_thread_info.c:43:
+        if (deallocate_pages) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: mm/vmalloc_thread_info.c:43:
+        if (deallocate_pages) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: mm/vmalloc_thread_info.c:44:
+^I^Iint i;                                                                                $

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#722: FILE: mm/vmalloc_thread_info.c:44:
+		int i;                                                                                

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: mm/vmalloc_thread_info.c:46:
+                for (i = 0; i < area->nr_pages; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: mm/vmalloc_thread_info.c:46:
+                for (i = 0; i < area->nr_pages; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: mm/vmalloc_thread_info.c:47:
+                        if (!(area->pages[i]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: mm/vmalloc_thread_info.c:47:
+                        if (!(area->pages[i]))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: mm/vmalloc_thread_info.c:48:
+                                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: mm/vmalloc_thread_info.c:48:
+                                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: mm/vmalloc_thread_info.c:49:
+                        __free_page(area->pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: mm/vmalloc_thread_info.c:49:
+                        __free_page(area->pages[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: mm/vmalloc_thread_info.c:50:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: mm/vmalloc_thread_info.c:50:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: mm/vmalloc_thread_info.c:51:
+                kfree(area->pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: mm/vmalloc_thread_info.c:51:
+                kfree(area->pages);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: mm/vmalloc_thread_info.c:52:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: mm/vmalloc_thread_info.c:52:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: mm/vmalloc_thread_info.c:53:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: mm/vmalloc_thread_info.c:53:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: mm/vmalloc_thread_info.c:53:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: mm/vmalloc_thread_info.c:54:
+        kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: mm/vmalloc_thread_info.c:54:
+        kfree(area);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: mm/vmalloc_thread_info.c:55:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: mm/vmalloc_thread_info.c:55:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: mm/vmalloc_thread_info.c:60:
+        BUG_ON(in_interrupt());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: mm/vmalloc_thread_info.c:60:
+        BUG_ON(in_interrupt());$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#738: FILE: mm/vmalloc_thread_info.c:60:
+        BUG_ON(in_interrupt());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: mm/vmalloc_thread_info.c:61:
+        __vunmap_thread_info(addr, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: mm/vmalloc_thread_info.c:61:
+        __vunmap_thread_info(addr, 1);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#742: FILE: mm/vmalloc_thread_info.c:64:
+EXPORT_SYMBOL(vfree_thread_info);

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: mm/vmalloc_thread_info.c:67:
+                               unsigned long size, pgprot_t prot,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: mm/vmalloc_thread_info.c:67:
+static int map_area_pte_ti(pte_t *pte, unsigned long address,
+                               unsigned long size, pgprot_t prot,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: mm/vmalloc_thread_info.c:67:
+                               unsigned long size, pgprot_t prot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: mm/vmalloc_thread_info.c:68:
+                               struct page ***pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: mm/vmalloc_thread_info.c:68:
+                               struct page ***pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: mm/vmalloc_thread_info.c:70:
+        unsigned long end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: mm/vmalloc_thread_info.c:70:
+        unsigned long end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: mm/vmalloc_thread_info.c:71:
+        struct page *page = **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: mm/vmalloc_thread_info.c:71:
+        struct page *page = **pages;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: mm/vmalloc_thread_info.c:72:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: mm/vmalloc_thread_info.c:72:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: mm/vmalloc_thread_info.c:72:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: mm/vmalloc_thread_info.c:73:
+        address &= ~PMD_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: mm/vmalloc_thread_info.c:73:
+        address &= ~PMD_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: mm/vmalloc_thread_info.c:74:
+        end = address + size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: mm/vmalloc_thread_info.c:74:
+        end = address + size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: mm/vmalloc_thread_info.c:75:
+        if (end > PMD_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: mm/vmalloc_thread_info.c:75:
+        if (end > PMD_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: mm/vmalloc_thread_info.c:76:
+                end = PMD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: mm/vmalloc_thread_info.c:76:
+                end = PMD_SIZE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: mm/vmalloc_thread_info.c:77:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: mm/vmalloc_thread_info.c:77:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: mm/vmalloc_thread_info.c:77:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: mm/vmalloc_thread_info.c:79:
+                //struct page *page = **pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: mm/vmalloc_thread_info.c:80:
+                WARN_ON(!pte_none(*pte));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: mm/vmalloc_thread_info.c:80:
+                WARN_ON(!pte_none(*pte));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#759: FILE: mm/vmalloc_thread_info.c:81:
+                if (!page)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: mm/vmalloc_thread_info.c:81:
+                if (!page)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#760: FILE: mm/vmalloc_thread_info.c:82:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: mm/vmalloc_thread_info.c:82:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#761: FILE: mm/vmalloc_thread_info.c:83:
+                set_pte(pte, mk_pte(page, prot));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: mm/vmalloc_thread_info.c:83:
+                set_pte(pte, mk_pte(page, prot));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: mm/vmalloc_thread_info.c:85:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: mm/vmalloc_thread_info.c:87:
+                pte += (THREAD_SIZE/PAGE_SIZE-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: mm/vmalloc_thread_info.c:87:
+                pte += (THREAD_SIZE/PAGE_SIZE-1);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#765: FILE: mm/vmalloc_thread_info.c:87:
+                pte += (THREAD_SIZE/PAGE_SIZE-1);
                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#765: FILE: mm/vmalloc_thread_info.c:87:
+                pte += (THREAD_SIZE/PAGE_SIZE-1);
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: mm/vmalloc_thread_info.c:88:
+                (*pages) += (THREAD_SIZE/PAGE_SIZE-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: mm/vmalloc_thread_info.c:88:
+                (*pages) += (THREAD_SIZE/PAGE_SIZE-1);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#766: FILE: mm/vmalloc_thread_info.c:88:
+                (*pages) += (THREAD_SIZE/PAGE_SIZE-1);
                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#766: FILE: mm/vmalloc_thread_info.c:88:
+                (*pages) += (THREAD_SIZE/PAGE_SIZE-1);
                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: mm/vmalloc_thread_info.c:89:
+                page = **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: mm/vmalloc_thread_info.c:89:
+                page = **pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: mm/vmalloc_thread_info.c:90:
+                WARN_ON(!pte_none(*pte));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: mm/vmalloc_thread_info.c:90:
+                WARN_ON(!pte_none(*pte));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#769: FILE: mm/vmalloc_thread_info.c:91:
+                if (!page)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: mm/vmalloc_thread_info.c:91:
+                if (!page)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: mm/vmalloc_thread_info.c:92:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: mm/vmalloc_thread_info.c:92:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: mm/vmalloc_thread_info.c:93:
+                set_pte(pte, mk_pte(page, prot));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: mm/vmalloc_thread_info.c:93:
+                set_pte(pte, mk_pte(page, prot));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#777: FILE: mm/vmalloc_thread_info.c:99:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: mm/vmalloc_thread_info.c:102:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: mm/vmalloc_thread_info.c:102:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: mm/vmalloc_thread_info.c:106:
+                               unsigned long size, pgprot_t prot,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: mm/vmalloc_thread_info.c:106:
+static int map_area_pmd_ti(pmd_t *pmd, unsigned long address,
+                               unsigned long size, pgprot_t prot,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: mm/vmalloc_thread_info.c:106:
+                               unsigned long size, pgprot_t prot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: mm/vmalloc_thread_info.c:107:
+                               struct page ***pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: mm/vmalloc_thread_info.c:107:
+                               struct page ***pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: mm/vmalloc_thread_info.c:109:
+        unsigned long base, end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: mm/vmalloc_thread_info.c:109:
+        unsigned long base, end;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: mm/vmalloc_thread_info.c:110:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: mm/vmalloc_thread_info.c:110:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: mm/vmalloc_thread_info.c:110:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: mm/vmalloc_thread_info.c:111:
+        base = address & PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: mm/vmalloc_thread_info.c:111:
+        base = address & PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: mm/vmalloc_thread_info.c:112:
+        address &= ~PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: mm/vmalloc_thread_info.c:112:
+        address &= ~PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: mm/vmalloc_thread_info.c:113:
+        end = address + size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: mm/vmalloc_thread_info.c:113:
+        end = address + size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: mm/vmalloc_thread_info.c:114:
+        if (end > PGDIR_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: mm/vmalloc_thread_info.c:114:
+        if (end > PGDIR_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: mm/vmalloc_thread_info.c:115:
+                end = PGDIR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: mm/vmalloc_thread_info.c:115:
+                end = PGDIR_SIZE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: mm/vmalloc_thread_info.c:116:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: mm/vmalloc_thread_info.c:116:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: mm/vmalloc_thread_info.c:116:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: mm/vmalloc_thread_info.c:117:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: mm/vmalloc_thread_info.c:117:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: mm/vmalloc_thread_info.c:118:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: mm/vmalloc_thread_info.c:118:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#796: FILE: mm/vmalloc_thread_info.c:118:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: mm/vmalloc_thread_info.c:119:
+                if (!pte)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#797: FILE: mm/vmalloc_thread_info.c:119:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);
+                if (!pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: mm/vmalloc_thread_info.c:119:
+                if (!pte)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: mm/vmalloc_thread_info.c:120:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: mm/vmalloc_thread_info.c:120:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: mm/vmalloc_thread_info.c:121:
+                if (map_area_pte_ti(pte, address, end - address, prot, pages))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: mm/vmalloc_thread_info.c:121:
+                if (map_area_pte_ti(pte, address, end - address, prot, pages))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: mm/vmalloc_thread_info.c:122:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: mm/vmalloc_thread_info.c:122:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: mm/vmalloc_thread_info.c:123:
+                address = (address + PMD_SIZE) & PMD_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: mm/vmalloc_thread_info.c:123:
+                address = (address + PMD_SIZE) & PMD_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: mm/vmalloc_thread_info.c:124:
+                pmd++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: mm/vmalloc_thread_info.c:124:
+                pmd++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: mm/vmalloc_thread_info.c:125:
+        } while (address < end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: mm/vmalloc_thread_info.c:125:
+        } while (address < end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: mm/vmalloc_thread_info.c:126:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: mm/vmalloc_thread_info.c:126:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: mm/vmalloc_thread_info.c:126:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: mm/vmalloc_thread_info.c:127:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: mm/vmalloc_thread_info.c:127:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: mm/vmalloc_thread_info.c:132:
+        unsigned long address = (unsigned long) area->addr;$

CHECK:SPACING: No space is necessary after a cast
#810: FILE: mm/vmalloc_thread_info.c:132:
+        unsigned long address = (unsigned long) area->addr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: mm/vmalloc_thread_info.c:132:
+        unsigned long address = (unsigned long) area->addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: mm/vmalloc_thread_info.c:133:
+        unsigned long end = address + (area->size-PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: mm/vmalloc_thread_info.c:133:
+        unsigned long end = address + (area->size-PAGE_SIZE);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#811: FILE: mm/vmalloc_thread_info.c:133:
+        unsigned long end = address + (area->size-PAGE_SIZE);
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: mm/vmalloc_thread_info.c:134:
+        pgd_t *dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: mm/vmalloc_thread_info.c:134:
+        pgd_t *dir;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: mm/vmalloc_thread_info.c:135:
+        int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: mm/vmalloc_thread_info.c:135:
+        int err = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: mm/vmalloc_thread_info.c:136:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: mm/vmalloc_thread_info.c:136:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: mm/vmalloc_thread_info.c:136:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: mm/vmalloc_thread_info.c:137:
+        dir = pgd_offset_k(address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: mm/vmalloc_thread_info.c:137:
+        dir = pgd_offset_k(address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: mm/vmalloc_thread_info.c:138:
+        spin_lock(&init_mm.page_table_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: mm/vmalloc_thread_info.c:138:
+        spin_lock(&init_mm.page_table_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: mm/vmalloc_thread_info.c:139:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: mm/vmalloc_thread_info.c:139:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: mm/vmalloc_thread_info.c:140:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: mm/vmalloc_thread_info.c:140:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: mm/vmalloc_thread_info.c:141:
+                if (!pmd) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#819: FILE: mm/vmalloc_thread_info.c:141:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);
+                if (!pmd) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: mm/vmalloc_thread_info.c:141:
+                if (!pmd) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: mm/vmalloc_thread_info.c:142:
+                        err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: mm/vmalloc_thread_info.c:142:
+                        err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: mm/vmalloc_thread_info.c:143:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: mm/vmalloc_thread_info.c:143:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: mm/vmalloc_thread_info.c:144:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: mm/vmalloc_thread_info.c:144:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: mm/vmalloc_thread_info.c:145:
+                if (map_area_pmd_ti(pmd, address, end - address, prot, pages)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: mm/vmalloc_thread_info.c:145:
+                if (map_area_pmd_ti(pmd, address, end - address, prot, pages)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: mm/vmalloc_thread_info.c:146:
+                        err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: mm/vmalloc_thread_info.c:146:
+                        err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: mm/vmalloc_thread_info.c:147:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: mm/vmalloc_thread_info.c:147:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: mm/vmalloc_thread_info.c:148:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: mm/vmalloc_thread_info.c:148:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: mm/vmalloc_thread_info.c:149:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: mm/vmalloc_thread_info.c:149:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: mm/vmalloc_thread_info.c:149:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: mm/vmalloc_thread_info.c:150:
+                address = (address + PGDIR_SIZE) & PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: mm/vmalloc_thread_info.c:150:
+                address = (address + PGDIR_SIZE) & PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: mm/vmalloc_thread_info.c:151:
+                dir++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: mm/vmalloc_thread_info.c:151:
+                dir++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: mm/vmalloc_thread_info.c:152:
+        } while (address && (address < end));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: mm/vmalloc_thread_info.c:152:
+        } while (address && (address < end));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: mm/vmalloc_thread_info.c:153:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: mm/vmalloc_thread_info.c:153:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: mm/vmalloc_thread_info.c:153:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: mm/vmalloc_thread_info.c:154:
+        spin_unlock(&init_mm.page_table_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: mm/vmalloc_thread_info.c:154:
+        spin_unlock(&init_mm.page_table_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: mm/vmalloc_thread_info.c:155:
+        flush_cache_vmap((unsigned long) area->addr, end);$

CHECK:SPACING: No space is necessary after a cast
#833: FILE: mm/vmalloc_thread_info.c:155:
+        flush_cache_vmap((unsigned long) area->addr, end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: mm/vmalloc_thread_info.c:155:
+        flush_cache_vmap((unsigned long) area->addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: mm/vmalloc_thread_info.c:156:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: mm/vmalloc_thread_info.c:156:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: mm/vmalloc_thread_info.c:160:
+                                unsigned long start, unsigned long end)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: mm/vmalloc_thread_info.c:160:
+struct vm_struct *__get_vm_area_ti(unsigned long size, unsigned long flags,
+                                unsigned long start, unsigned long end)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: mm/vmalloc_thread_info.c:160:
+                                unsigned long start, unsigned long end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: mm/vmalloc_thread_info.c:162:
+        struct vm_struct **p, *tmp, *area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: mm/vmalloc_thread_info.c:162:
+        struct vm_struct **p, *tmp, *area;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: mm/vmalloc_thread_info.c:163:
+        unsigned long align = THREAD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: mm/vmalloc_thread_info.c:163:
+        unsigned long align = THREAD_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: mm/vmalloc_thread_info.c:164:
+        unsigned long addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: mm/vmalloc_thread_info.c:164:
+        unsigned long addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#844: FILE: mm/vmalloc_thread_info.c:166:
+        addr = ALIGN(start, align);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: mm/vmalloc_thread_info.c:166:
+        addr = ALIGN(start, align);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: mm/vmalloc_thread_info.c:167:
+        area = kmalloc(sizeof(*area), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: mm/vmalloc_thread_info.c:167:
+        area = kmalloc(sizeof(*area), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: mm/vmalloc_thread_info.c:168:
+        if (unlikely(!area))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: mm/vmalloc_thread_info.c:168:
+        if (unlikely(!area))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: mm/vmalloc_thread_info.c:169:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: mm/vmalloc_thread_info.c:169:
+                return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: mm/vmalloc_thread_info.c:171:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: mm/vmalloc_thread_info.c:172:
+         * We always allocate a guard page.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: mm/vmalloc_thread_info.c:173:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: mm/vmalloc_thread_info.c:174:
+        size += PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: mm/vmalloc_thread_info.c:174:
+        size += PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: mm/vmalloc_thread_info.c:175:
+        if (unlikely(!size)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: mm/vmalloc_thread_info.c:175:
+        if (unlikely(!size)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: mm/vmalloc_thread_info.c:176:
+                kfree (area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: mm/vmalloc_thread_info.c:176:
+                kfree (area);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#854: FILE: mm/vmalloc_thread_info.c:176:
+                kfree (area);

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: mm/vmalloc_thread_info.c:177:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: mm/vmalloc_thread_info.c:177:
+                return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: mm/vmalloc_thread_info.c:178:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: mm/vmalloc_thread_info.c:178:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: mm/vmalloc_thread_info.c:179:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#857: FILE: mm/vmalloc_thread_info.c:179:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: mm/vmalloc_thread_info.c:179:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: mm/vmalloc_thread_info.c:179:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: mm/vmalloc_thread_info.c:180:
+        write_lock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: mm/vmalloc_thread_info.c:180:
+        write_lock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: mm/vmalloc_thread_info.c:181:
+        for (p = &vmlist; (tmp = *p) != NULL ;p = &tmp->next) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: mm/vmalloc_thread_info.c:181:
+        for (p = &vmlist; (tmp = *p) != NULL ;p = &tmp->next) {$

ERROR:SPACING: space required after that ';' (ctx:WxV)
#859: FILE: mm/vmalloc_thread_info.c:181:
+        for (p = &vmlist; (tmp = *p) != NULL ;p = &tmp->next) {
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: mm/vmalloc_thread_info.c:182:
+                if ((unsigned long)tmp->addr < addr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: mm/vmalloc_thread_info.c:182:
+                if ((unsigned long)tmp->addr < addr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: mm/vmalloc_thread_info.c:183:
+                        if((unsigned long)tmp->addr + tmp->size >= addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: mm/vmalloc_thread_info.c:183:
+                        if((unsigned long)tmp->addr + tmp->size >= addr)$

ERROR:SPACING: space required before the open parenthesis '('
#861: FILE: mm/vmalloc_thread_info.c:183:
+                        if((unsigned long)tmp->addr + tmp->size >= addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#862: FILE: mm/vmalloc_thread_info.c:184:
+                                addr = ALIGN(tmp->size +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: mm/vmalloc_thread_info.c:184:
+                                addr = ALIGN(tmp->size +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: mm/vmalloc_thread_info.c:185:
+                                             (unsigned long)tmp->addr, align);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: mm/vmalloc_thread_info.c:185:
+                                             (unsigned long)tmp->addr, align);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: mm/vmalloc_thread_info.c:186:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: mm/vmalloc_thread_info.c:186:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#865: FILE: mm/vmalloc_thread_info.c:187:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: mm/vmalloc_thread_info.c:187:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#866: FILE: mm/vmalloc_thread_info.c:188:
+                if ((size + addr) < addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: mm/vmalloc_thread_info.c:188:
+                if ((size + addr) < addr)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: mm/vmalloc_thread_info.c:189:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: mm/vmalloc_thread_info.c:189:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: mm/vmalloc_thread_info.c:190:
+                if (size + addr <= (unsigned long)tmp->addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: mm/vmalloc_thread_info.c:190:
+                if (size + addr <= (unsigned long)tmp->addr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#868: FILE: mm/vmalloc_thread_info.c:190:
+                if (size + addr <= (unsigned long)tmp->addr)
+                        	goto found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#869: FILE: mm/vmalloc_thread_info.c:191:
+                        ^Igoto found;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#869: FILE: mm/vmalloc_thread_info.c:191:
+                        ^Igoto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: mm/vmalloc_thread_info.c:191:
+                        ^Igoto found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: mm/vmalloc_thread_info.c:192:
+                addr = ALIGN(tmp->size + (unsigned long)tmp->addr, align);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: mm/vmalloc_thread_info.c:192:
+                addr = ALIGN(tmp->size + (unsigned long)tmp->addr, align);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: mm/vmalloc_thread_info.c:193:
+                if (addr > end - size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: mm/vmalloc_thread_info.c:193:
+                if (addr > end - size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: mm/vmalloc_thread_info.c:194:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: mm/vmalloc_thread_info.c:194:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: mm/vmalloc_thread_info.c:195:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: mm/vmalloc_thread_info.c:195:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: mm/vmalloc_thread_info.c:196:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#874: FILE: mm/vmalloc_thread_info.c:196:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: mm/vmalloc_thread_info.c:196:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: mm/vmalloc_thread_info.c:196:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: mm/vmalloc_thread_info.c:198:
+        area->next = *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: mm/vmalloc_thread_info.c:198:
+        area->next = *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: mm/vmalloc_thread_info.c:199:
+        *p = area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: mm/vmalloc_thread_info.c:199:
+        *p = area;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: mm/vmalloc_thread_info.c:200:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#878: FILE: mm/vmalloc_thread_info.c:200:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: mm/vmalloc_thread_info.c:200:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: mm/vmalloc_thread_info.c:200:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: mm/vmalloc_thread_info.c:201:
+        area->flags = flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: mm/vmalloc_thread_info.c:201:
+        area->flags = flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: mm/vmalloc_thread_info.c:202:
+        area->addr = (void *)addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: mm/vmalloc_thread_info.c:202:
+        area->addr = (void *)addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: mm/vmalloc_thread_info.c:203:
+        area->size = size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: mm/vmalloc_thread_info.c:203:
+        area->size = size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: mm/vmalloc_thread_info.c:204:
+        area->pages = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: mm/vmalloc_thread_info.c:204:
+        area->pages = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: mm/vmalloc_thread_info.c:205:
+        area->nr_pages = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: mm/vmalloc_thread_info.c:205:
+        area->nr_pages = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: mm/vmalloc_thread_info.c:206:
+        area->phys_addr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: mm/vmalloc_thread_info.c:206:
+        area->phys_addr = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: mm/vmalloc_thread_info.c:207:
+        write_unlock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: mm/vmalloc_thread_info.c:207:
+        write_unlock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: mm/vmalloc_thread_info.c:208:
+        return area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: mm/vmalloc_thread_info.c:208:
+        return area;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: mm/vmalloc_thread_info.c:209:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#887: FILE: mm/vmalloc_thread_info.c:209:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: mm/vmalloc_thread_info.c:209:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: mm/vmalloc_thread_info.c:209:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: mm/vmalloc_thread_info.c:211:
+        write_unlock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: mm/vmalloc_thread_info.c:211:
+        write_unlock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: mm/vmalloc_thread_info.c:212:
+        kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: mm/vmalloc_thread_info.c:212:
+        kfree(area);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: mm/vmalloc_thread_info.c:213:
+        if (printk_ratelimit())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: mm/vmalloc_thread_info.c:213:
+        if (printk_ratelimit())$

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#891: FILE: mm/vmalloc_thread_info.c:213:
+        if (printk_ratelimit())

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: mm/vmalloc_thread_info.c:214:
+                printk(KERN_WARNING "allocation failed: out of vmalloc space - use vmalloc=<size> to increase size.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: mm/vmalloc_thread_info.c:214:
+                printk(KERN_WARNING "allocation failed: out of vmalloc space - use vmalloc=<size> to increase size.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#892: FILE: mm/vmalloc_thread_info.c:214:
+                printk(KERN_WARNING "allocation failed: out of vmalloc space - use vmalloc=<size> to increase size.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: mm/vmalloc_thread_info.c:215:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: mm/vmalloc_thread_info.c:215:
+        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: mm/vmalloc_thread_info.c:220:
+        return __get_vm_area_ti(size, flags, VMALLOC_START, VMALLOC_END);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: mm/vmalloc_thread_info.c:220:
+        return __get_vm_area_ti(size, flags, VMALLOC_START, VMALLOC_END);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: mm/vmalloc_thread_info.c:225:
+        struct vm_struct *area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: mm/vmalloc_thread_info.c:225:
+        struct vm_struct *area;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: mm/vmalloc_thread_info.c:226:
+        struct page **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: mm/vmalloc_thread_info.c:226:
+        struct page **pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: mm/vmalloc_thread_info.c:227:
+        unsigned int nr_pages, array_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: mm/vmalloc_thread_info.c:227:
+        unsigned int nr_pages, array_size;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: mm/vmalloc_thread_info.c:228:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#906: FILE: mm/vmalloc_thread_info.c:228:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: mm/vmalloc_thread_info.c:228:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: mm/vmalloc_thread_info.c:228:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: mm/vmalloc_thread_info.c:229:
+        size = PAGE_ALIGN(size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: mm/vmalloc_thread_info.c:229:
+        size = PAGE_ALIGN(size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: mm/vmalloc_thread_info.c:230:
+        if (!size || (size >> PAGE_SHIFT) > num_physpages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: mm/vmalloc_thread_info.c:230:
+        if (!size || (size >> PAGE_SHIFT) > num_physpages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: mm/vmalloc_thread_info.c:231:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: mm/vmalloc_thread_info.c:231:
+                return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: mm/vmalloc_thread_info.c:232:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#910: FILE: mm/vmalloc_thread_info.c:232:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: mm/vmalloc_thread_info.c:232:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: mm/vmalloc_thread_info.c:232:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: mm/vmalloc_thread_info.c:233:
+        area = get_vm_area_ti(size, VM_ALLOC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: mm/vmalloc_thread_info.c:233:
+        area = get_vm_area_ti(size, VM_ALLOC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: mm/vmalloc_thread_info.c:234:
+        if (!area)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: mm/vmalloc_thread_info.c:234:
+        if (!area)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: mm/vmalloc_thread_info.c:235:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: mm/vmalloc_thread_info.c:235:
+                return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: mm/vmalloc_thread_info.c:236:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#914: FILE: mm/vmalloc_thread_info.c:236:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: mm/vmalloc_thread_info.c:236:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: mm/vmalloc_thread_info.c:236:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: mm/vmalloc_thread_info.c:237:
+        nr_pages = size >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: mm/vmalloc_thread_info.c:237:
+        nr_pages = size >> PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: mm/vmalloc_thread_info.c:238:
+        array_size = (nr_pages * sizeof(struct page *));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: mm/vmalloc_thread_info.c:238:
+        array_size = (nr_pages * sizeof(struct page *));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: mm/vmalloc_thread_info.c:239:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#917: FILE: mm/vmalloc_thread_info.c:239:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: mm/vmalloc_thread_info.c:239:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: mm/vmalloc_thread_info.c:239:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: mm/vmalloc_thread_info.c:240:
+        area->nr_pages = nr_pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: mm/vmalloc_thread_info.c:240:
+        area->nr_pages = nr_pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: mm/vmalloc_thread_info.c:241:
+        area->pages = pages = kmalloc(array_size, (gfp_mask & ~__GFP_HIGHMEM));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: mm/vmalloc_thread_info.c:241:
+        area->pages = pages = kmalloc(array_size, (gfp_mask & ~__GFP_HIGHMEM));$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#919: FILE: mm/vmalloc_thread_info.c:241:
+        area->pages = pages = kmalloc(array_size, (gfp_mask & ~__GFP_HIGHMEM));

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: mm/vmalloc_thread_info.c:242:
+        if (!area->pages) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: mm/vmalloc_thread_info.c:242:
+        if (!area->pages) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: mm/vmalloc_thread_info.c:243:
+                remove_vm_area(area->addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: mm/vmalloc_thread_info.c:243:
+                remove_vm_area(area->addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: mm/vmalloc_thread_info.c:244:
+                kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: mm/vmalloc_thread_info.c:244:
+                kfree(area);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: mm/vmalloc_thread_info.c:245:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: mm/vmalloc_thread_info.c:245:
+                return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: mm/vmalloc_thread_info.c:246:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: mm/vmalloc_thread_info.c:246:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: mm/vmalloc_thread_info.c:247:
+        memset(area->pages, 0, array_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: mm/vmalloc_thread_info.c:247:
+        memset(area->pages, 0, array_size);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#926: FILE: mm/vmalloc_thread_info.c:248:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#926: FILE: mm/vmalloc_thread_info.c:248:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: mm/vmalloc_thread_info.c:248:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: mm/vmalloc_thread_info.c:248:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#929: FILE: mm/vmalloc_thread_info.c:251:
+          area->pages[0] = alloc_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: mm/vmalloc_thread_info.c:251:
+          area->pages[0] = alloc_page(gfp_mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: mm/vmalloc_thread_info.c:252:
+                if (unlikely(!area->pages[0])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: mm/vmalloc_thread_info.c:252:
+                if (unlikely(!area->pages[0])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: mm/vmalloc_thread_info.c:253:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: mm/vmalloc_thread_info.c:254:
+                        area->nr_pages = 4; //try to free all pages$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: mm/vmalloc_thread_info.c:254:
+                        area->nr_pages = 4; //try to free all pages$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: mm/vmalloc_thread_info.c:255:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: mm/vmalloc_thread_info.c:255:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: mm/vmalloc_thread_info.c:256:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: mm/vmalloc_thread_info.c:256:
+                }$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#936: FILE: mm/vmalloc_thread_info.c:258:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: mm/vmalloc_thread_info.c:259:
+          area->pages[1] = alloc_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: mm/vmalloc_thread_info.c:259:
+          area->pages[1] = alloc_page(gfp_mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: mm/vmalloc_thread_info.c:260:
+                if (unlikely(!area->pages[1])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: mm/vmalloc_thread_info.c:260:
+                if (unlikely(!area->pages[1])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: mm/vmalloc_thread_info.c:261:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: mm/vmalloc_thread_info.c:262:
+                        area->nr_pages = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: mm/vmalloc_thread_info.c:262:
+                        area->nr_pages = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: mm/vmalloc_thread_info.c:263:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: mm/vmalloc_thread_info.c:263:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: mm/vmalloc_thread_info.c:264:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: mm/vmalloc_thread_info.c:264:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: mm/vmalloc_thread_info.c:266:
+          area->pages[2] = alloc_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: mm/vmalloc_thread_info.c:266:
+          area->pages[2] = alloc_page(gfp_mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: mm/vmalloc_thread_info.c:267:
+                if (unlikely(!area->pages[2])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: mm/vmalloc_thread_info.c:267:
+                if (unlikely(!area->pages[2])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: mm/vmalloc_thread_info.c:268:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: mm/vmalloc_thread_info.c:269:
+                        area->nr_pages = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: mm/vmalloc_thread_info.c:269:
+                        area->nr_pages = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: mm/vmalloc_thread_info.c:270:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: mm/vmalloc_thread_info.c:270:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: mm/vmalloc_thread_info.c:271:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: mm/vmalloc_thread_info.c:271:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: mm/vmalloc_thread_info.c:273:
+          area->pages[THREAD_SIZE/PAGE_SIZE-1] = alloc_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: mm/vmalloc_thread_info.c:273:
+          area->pages[THREAD_SIZE/PAGE_SIZE-1] = alloc_page(gfp_mask);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#951: FILE: mm/vmalloc_thread_info.c:273:
+          area->pages[THREAD_SIZE/PAGE_SIZE-1] = alloc_page(gfp_mask);
                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#951: FILE: mm/vmalloc_thread_info.c:273:
+          area->pages[THREAD_SIZE/PAGE_SIZE-1] = alloc_page(gfp_mask);
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: mm/vmalloc_thread_info.c:274:
+                if (unlikely(!area->pages[THREAD_SIZE/PAGE_SIZE-1])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: mm/vmalloc_thread_info.c:274:
+                if (unlikely(!area->pages[THREAD_SIZE/PAGE_SIZE-1])) {$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#952: FILE: mm/vmalloc_thread_info.c:274:
+                if (unlikely(!area->pages[THREAD_SIZE/PAGE_SIZE-1])) {
                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#952: FILE: mm/vmalloc_thread_info.c:274:
+                if (unlikely(!area->pages[THREAD_SIZE/PAGE_SIZE-1])) {
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: mm/vmalloc_thread_info.c:275:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: mm/vmalloc_thread_info.c:276:
+                        area->nr_pages = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: mm/vmalloc_thread_info.c:276:
+                        area->nr_pages = 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: mm/vmalloc_thread_info.c:277:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: mm/vmalloc_thread_info.c:277:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: mm/vmalloc_thread_info.c:278:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: mm/vmalloc_thread_info.c:278:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: mm/vmalloc_thread_info.c:281:
+        if (map_vm_area_ti(area, prot, &pages))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: mm/vmalloc_thread_info.c:281:
+        if (map_vm_area_ti(area, prot, &pages))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: mm/vmalloc_thread_info.c:282:
+                goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: mm/vmalloc_thread_info.c:282:
+                goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: mm/vmalloc_thread_info.c:284:
+        area->nr_pages = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: mm/vmalloc_thread_info.c:284:
+        area->nr_pages = 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: mm/vmalloc_thread_info.c:285:
+        return area->addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: mm/vmalloc_thread_info.c:285:
+        return area->addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#964: FILE: mm/vmalloc_thread_info.c:286:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#964: FILE: mm/vmalloc_thread_info.c:286:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: mm/vmalloc_thread_info.c:286:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: mm/vmalloc_thread_info.c:286:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: mm/vmalloc_thread_info.c:288:
+        area->nr_pages = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: mm/vmalloc_thread_info.c:288:
+        area->nr_pages = 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: mm/vmalloc_thread_info.c:289:
+        vfree_thread_info(area->addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: mm/vmalloc_thread_info.c:289:
+        vfree_thread_info(area->addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: mm/vmalloc_thread_info.c:290:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: mm/vmalloc_thread_info.c:290:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: mm/vmalloc_thread_info.c:295:
+       return __vmalloc_thread_info(size, GFP_KERNEL | __GFP_HIGHMEM, PAGE_KERNEL);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#976: FILE: mm/vmalloc_thread_info.c:298:
+EXPORT_SYMBOL(vmalloc_thread_info);

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: mm/vmalloc_thread_info.c:302:
+        struct vm_struct **p, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: mm/vmalloc_thread_info.c:302:
+        struct vm_struct **p, *tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: mm/vmalloc_thread_info.c:303:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#981: FILE: mm/vmalloc_thread_info.c:303:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: mm/vmalloc_thread_info.c:303:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: mm/vmalloc_thread_info.c:303:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: mm/vmalloc_thread_info.c:304:
+        write_lock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: mm/vmalloc_thread_info.c:304:
+        write_lock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: mm/vmalloc_thread_info.c:305:
+        for (p = &vmlist ; (tmp = *p) != NULL ;p = &tmp->next) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: mm/vmalloc_thread_info.c:305:
+        for (p = &vmlist ; (tmp = *p) != NULL ;p = &tmp->next) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#983: FILE: mm/vmalloc_thread_info.c:305:
+        for (p = &vmlist ; (tmp = *p) != NULL ;p = &tmp->next) {
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)

ERROR:SPACING: space required after that ';' (ctx:WxV)
#983: FILE: mm/vmalloc_thread_info.c:305:
+        for (p = &vmlist ; (tmp = *p) != NULL ;p = &tmp->next) {
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: mm/vmalloc_thread_info.c:306:
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: mm/vmalloc_thread_info.c:306:
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 25)
#984: FILE: mm/vmalloc_thread_info.c:306:
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)
+                         goto found;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#984: FILE: mm/vmalloc_thread_info.c:306:
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#984: FILE: mm/vmalloc_thread_info.c:306:
+                 if ((unsigned)(tmp->addr) == (unsigned)addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: mm/vmalloc_thread_info.c:307:
+                         goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: mm/vmalloc_thread_info.c:307:
+                         goto found;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: mm/vmalloc_thread_info.c:308:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: mm/vmalloc_thread_info.c:308:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: mm/vmalloc_thread_info.c:309:
+        write_unlock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: mm/vmalloc_thread_info.c:309:
+        write_unlock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: mm/vmalloc_thread_info.c:310:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: mm/vmalloc_thread_info.c:310:
+        return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#989: FILE: mm/vmalloc_thread_info.c:311:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#989: FILE: mm/vmalloc_thread_info.c:311:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: mm/vmalloc_thread_info.c:311:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: mm/vmalloc_thread_info.c:311:
+                                                                                                                             $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#991: FILE: mm/vmalloc_thread_info.c:313:
+	printk("vm_area found 0x%x\n", (unsigned int)(tmp->addr));

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: mm/vmalloc_thread_info.c:316:
+        write_unlock(&vmlist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: mm/vmalloc_thread_info.c:316:
+        write_unlock(&vmlist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: mm/vmalloc_thread_info.c:317:
+        return tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: mm/vmalloc_thread_info.c:317:
+        return tmp;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#998: FILE: mm/vmalloc_thread_info.c:320:
+EXPORT_SYMBOL(find_vm_area);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1000: FILE: mm/vmalloc_thread_info.c:322:
+void page_table_trace(unsigned start_address)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: mm/vmalloc_thread_info.c:324:
+        unsigned int curr_address, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: mm/vmalloc_thread_info.c:324:
+        unsigned int curr_address, i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: mm/vmalloc_thread_info.c:325:
+        pgd_t *pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: mm/vmalloc_thread_info.c:325:
+        pgd_t *pgd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: mm/vmalloc_thread_info.c:326:
+        pmd_t *pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: mm/vmalloc_thread_info.c:326:
+        pmd_t *pmd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: mm/vmalloc_thread_info.c:327:
+        pte_t *ptep;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: mm/vmalloc_thread_info.c:327:
+        pte_t *ptep;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1006: FILE: mm/vmalloc_thread_info.c:328:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1006: FILE: mm/vmalloc_thread_info.c:328:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1006: FILE: mm/vmalloc_thread_info.c:328:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: mm/vmalloc_thread_info.c:328:
+                                                                                                                             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1007: FILE: mm/vmalloc_thread_info.c:329:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1007: FILE: mm/vmalloc_thread_info.c:329:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: mm/vmalloc_thread_info.c:329:
+                                                                                                                             $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1007: FILE: mm/vmalloc_thread_info.c:329:
+                                                                                                                             
+                                                                                                                             

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: mm/vmalloc_thread_info.c:329:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1008: FILE: mm/vmalloc_thread_info.c:330:
+        for(i=0; i<4; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: mm/vmalloc_thread_info.c:330:
+        for(i=0; i<4; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1008: FILE: mm/vmalloc_thread_info.c:330:
+        for(i=0; i<4; i++) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1008: FILE: mm/vmalloc_thread_info.c:330:
+        for(i=0; i<4; i++) {
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1008: FILE: mm/vmalloc_thread_info.c:330:
+        for(i=0; i<4; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: mm/vmalloc_thread_info.c:331:
+                printk("-------------------------------\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: mm/vmalloc_thread_info.c:331:
+                printk("-------------------------------\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1009: FILE: mm/vmalloc_thread_info.c:331:
+                printk("-------------------------------\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: mm/vmalloc_thread_info.c:332:
+                curr_address = start_address+i*PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: mm/vmalloc_thread_info.c:332:
+                curr_address = start_address+i*PAGE_SIZE;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1010: FILE: mm/vmalloc_thread_info.c:332:
+                curr_address = start_address+i*PAGE_SIZE;
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1010: FILE: mm/vmalloc_thread_info.c:332:
+                curr_address = start_address+i*PAGE_SIZE;
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: mm/vmalloc_thread_info.c:333:
+                pgd = pgd_offset_k(curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: mm/vmalloc_thread_info.c:333:
+                pgd = pgd_offset_k(curr_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: mm/vmalloc_thread_info.c:334:
+                if (pgd_none(*pgd) || pgd_bad(*pgd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: mm/vmalloc_thread_info.c:334:
+                if (pgd_none(*pgd) || pgd_bad(*pgd))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: mm/vmalloc_thread_info.c:335:
+                        printk("bad pgd address 0x%x\n", curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: mm/vmalloc_thread_info.c:335:
+                        printk("bad pgd address 0x%x\n", curr_address);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1013: FILE: mm/vmalloc_thread_info.c:335:
+                        printk("bad pgd address 0x%x\n", curr_address);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1014: FILE: mm/vmalloc_thread_info.c:336:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: mm/vmalloc_thread_info.c:337:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: mm/vmalloc_thread_info.c:337:
+                else$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1016: FILE: mm/vmalloc_thread_info.c:338:
+                        printk("pgd address 0x%x pgd 0x%x\n", curr_address, (unsigned int)(pgd_val(*pgd)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: mm/vmalloc_thread_info.c:338:
+                        printk("pgd address 0x%x pgd 0x%x\n", curr_address, (unsigned int)(pgd_val(*pgd)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: mm/vmalloc_thread_info.c:338:
+                        printk("pgd address 0x%x pgd 0x%x\n", curr_address, (unsigned int)(pgd_val(*pgd)));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1016: FILE: mm/vmalloc_thread_info.c:338:
+                        printk("pgd address 0x%x pgd 0x%x\n", curr_address, (unsigned int)(pgd_val(*pgd)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: mm/vmalloc_thread_info.c:340:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1018: FILE: mm/vmalloc_thread_info.c:340:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: mm/vmalloc_thread_info.c:340:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: mm/vmalloc_thread_info.c:340:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1019: FILE: mm/vmalloc_thread_info.c:341:
+                pmd = pmd_offset(pgd, curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: mm/vmalloc_thread_info.c:341:
+                pmd = pmd_offset(pgd, curr_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: mm/vmalloc_thread_info.c:342:
+                if (pmd_none(*pmd) || pmd_bad(*pmd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: mm/vmalloc_thread_info.c:342:
+                if (pmd_none(*pmd) || pmd_bad(*pmd))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: mm/vmalloc_thread_info.c:343:
+                        printk("bad pmd address 0x%x\n", curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: mm/vmalloc_thread_info.c:343:
+                        printk("bad pmd address 0x%x\n", curr_address);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1021: FILE: mm/vmalloc_thread_info.c:343:
+                        printk("bad pmd address 0x%x\n", curr_address);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1022: FILE: mm/vmalloc_thread_info.c:344:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: mm/vmalloc_thread_info.c:345:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: mm/vmalloc_thread_info.c:345:
+                else$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1024: FILE: mm/vmalloc_thread_info.c:346:
+                        printk("pmd address 0x%x pmd 0x%x\n", curr_address, (unsigned int)(pmd_val(*pmd)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: mm/vmalloc_thread_info.c:346:
+                        printk("pmd address 0x%x pmd 0x%x\n", curr_address, (unsigned int)(pmd_val(*pmd)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: mm/vmalloc_thread_info.c:346:
+                        printk("pmd address 0x%x pmd 0x%x\n", curr_address, (unsigned int)(pmd_val(*pmd)));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1024: FILE: mm/vmalloc_thread_info.c:346:
+                        printk("pmd address 0x%x pmd 0x%x\n", curr_address, (unsigned int)(pmd_val(*pmd)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: mm/vmalloc_thread_info.c:348:
+                ptep = pte_offset_kernel(pmd, curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: mm/vmalloc_thread_info.c:348:
+                ptep = pte_offset_kernel(pmd, curr_address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: mm/vmalloc_thread_info.c:349:
+                if (!ptep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: mm/vmalloc_thread_info.c:349:
+                if (!ptep)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: mm/vmalloc_thread_info.c:350:
+                        printk("bad pte address 0x%x\n", curr_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: mm/vmalloc_thread_info.c:350:
+                        printk("bad pte address 0x%x\n", curr_address);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1028: FILE: mm/vmalloc_thread_info.c:350:
+                        printk("bad pte address 0x%x\n", curr_address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: mm/vmalloc_thread_info.c:351:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: mm/vmalloc_thread_info.c:351:
+                else$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1030: FILE: mm/vmalloc_thread_info.c:352:
+                        printk("pte address 0x%x pte 0x%x\n", curr_address, (unsigned int)(pte_val(*ptep)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1030: FILE: mm/vmalloc_thread_info.c:352:
+                        printk("pte address 0x%x pte 0x%x\n", curr_address, (unsigned int)(pte_val(*ptep)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: mm/vmalloc_thread_info.c:352:
+                        printk("pte address 0x%x pte 0x%x\n", curr_address, (unsigned int)(pte_val(*ptep)));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1030: FILE: mm/vmalloc_thread_info.c:352:
+                        printk("pte address 0x%x pte 0x%x\n", curr_address, (unsigned int)(pte_val(*ptep)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: mm/vmalloc_thread_info.c:353:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: mm/vmalloc_thread_info.c:353:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: mm/vmalloc_thread_info.c:354:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1032: FILE: mm/vmalloc_thread_info.c:354:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: mm/vmalloc_thread_info.c:354:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: mm/vmalloc_thread_info.c:354:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: mm/vmalloc_thread_info.c:355:
+                printk("-------------------------------\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: mm/vmalloc_thread_info.c:355:
+                printk("-------------------------------\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1033: FILE: mm/vmalloc_thread_info.c:355:
+                printk("-------------------------------\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: mm/vmalloc_thread_info.c:359:
+                               unsigned long size, pgprot_t prot,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: mm/vmalloc_thread_info.c:359:
+static int map_expand_stack_area_pte(pte_t *pte, unsigned long address,
+                               unsigned long size, pgprot_t prot,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: mm/vmalloc_thread_info.c:359:
+                               unsigned long size, pgprot_t prot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: mm/vmalloc_thread_info.c:360:
+                               struct page ***pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: mm/vmalloc_thread_info.c:360:
+                               struct page ***pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: mm/vmalloc_thread_info.c:362:
+        unsigned long end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: mm/vmalloc_thread_info.c:362:
+        unsigned long end;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: mm/vmalloc_thread_info.c:363:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1041: FILE: mm/vmalloc_thread_info.c:363:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: mm/vmalloc_thread_info.c:363:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: mm/vmalloc_thread_info.c:363:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_expand_stack_area_pte', this function's name, in a string
#1042: FILE: mm/vmalloc_thread_info.c:364:
+        printk(KERN_INFO "Pre map_expand_stack_area_pte address 0x%x, size %d\n", (unsigned)address, (unsigned)size);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: mm/vmalloc_thread_info.c:365:
+        address &= ~PMD_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: mm/vmalloc_thread_info.c:365:
+        address &= ~PMD_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: mm/vmalloc_thread_info.c:366:
+        end = address + size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: mm/vmalloc_thread_info.c:366:
+        end = address + size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1045: FILE: mm/vmalloc_thread_info.c:367:
+        if (end > PMD_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: mm/vmalloc_thread_info.c:367:
+        if (end > PMD_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: mm/vmalloc_thread_info.c:368:
+                end = PMD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: mm/vmalloc_thread_info.c:368:
+                end = PMD_SIZE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: mm/vmalloc_thread_info.c:369:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1047: FILE: mm/vmalloc_thread_info.c:369:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: mm/vmalloc_thread_info.c:369:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: mm/vmalloc_thread_info.c:369:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1048: FILE: mm/vmalloc_thread_info.c:370:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: mm/vmalloc_thread_info.c:370:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1049: FILE: mm/vmalloc_thread_info.c:371:
+                struct page *page = **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: mm/vmalloc_thread_info.c:371:
+                struct page *page = **pages;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: mm/vmalloc_thread_info.c:372:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1050: FILE: mm/vmalloc_thread_info.c:372:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: mm/vmalloc_thread_info.c:372:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: mm/vmalloc_thread_info.c:372:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1051: FILE: mm/vmalloc_thread_info.c:373:
+                WARN_ON(!pte_none(*pte));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: mm/vmalloc_thread_info.c:373:
+                WARN_ON(!pte_none(*pte));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: mm/vmalloc_thread_info.c:374:
+                if (!page)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: mm/vmalloc_thread_info.c:374:
+                if (!page)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: mm/vmalloc_thread_info.c:375:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: mm/vmalloc_thread_info.c:375:
+                        return -ENOMEM;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1054: FILE: mm/vmalloc_thread_info.c:376:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1054: FILE: mm/vmalloc_thread_info.c:376:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: mm/vmalloc_thread_info.c:376:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: mm/vmalloc_thread_info.c:376:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: mm/vmalloc_thread_info.c:377:
+                set_pte(pte, mk_pte(page, prot));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: mm/vmalloc_thread_info.c:377:
+                set_pte(pte, mk_pte(page, prot));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: mm/vmalloc_thread_info.c:378:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1056: FILE: mm/vmalloc_thread_info.c:378:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: mm/vmalloc_thread_info.c:378:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: mm/vmalloc_thread_info.c:378:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_expand_stack_area_pte', this function's name, in a string
#1057: FILE: mm/vmalloc_thread_info.c:379:
+                printk(KERN_INFO "map_expand_stack_area_pte pte 0x%x address 0x%x\n", (unsigned int)(pte_val(*pte)), (unsigned)address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: mm/vmalloc_thread_info.c:380:
+                address += PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: mm/vmalloc_thread_info.c:380:
+                address += PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: mm/vmalloc_thread_info.c:381:
+                pte++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: mm/vmalloc_thread_info.c:381:
+                pte++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: mm/vmalloc_thread_info.c:382:
+                (*pages)++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: mm/vmalloc_thread_info.c:382:
+                (*pages)++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: mm/vmalloc_thread_info.c:383:
+        } while (address < end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: mm/vmalloc_thread_info.c:383:
+        } while (address < end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: mm/vmalloc_thread_info.c:384:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: mm/vmalloc_thread_info.c:384:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: mm/vmalloc_thread_info.c:388:
+                               unsigned long size, pgprot_t prot,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1066: FILE: mm/vmalloc_thread_info.c:388:
+static int map_expand_stack_area_pmd(pmd_t *pmd, unsigned long address,
+                               unsigned long size, pgprot_t prot,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: mm/vmalloc_thread_info.c:388:
+                               unsigned long size, pgprot_t prot,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: mm/vmalloc_thread_info.c:389:
+                               struct page ***pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: mm/vmalloc_thread_info.c:389:
+                               struct page ***pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: mm/vmalloc_thread_info.c:391:
+        unsigned long base, end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: mm/vmalloc_thread_info.c:391:
+        unsigned long base, end;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1070: FILE: mm/vmalloc_thread_info.c:392:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1070: FILE: mm/vmalloc_thread_info.c:392:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: mm/vmalloc_thread_info.c:392:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: mm/vmalloc_thread_info.c:392:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: mm/vmalloc_thread_info.c:393:
+        base = address & PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: mm/vmalloc_thread_info.c:393:
+        base = address & PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: mm/vmalloc_thread_info.c:394:
+        address &= ~PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: mm/vmalloc_thread_info.c:394:
+        address &= ~PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: mm/vmalloc_thread_info.c:395:
+        end = address + size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: mm/vmalloc_thread_info.c:395:
+        end = address + size;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1074: FILE: mm/vmalloc_thread_info.c:396:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1074: FILE: mm/vmalloc_thread_info.c:396:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: mm/vmalloc_thread_info.c:396:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: mm/vmalloc_thread_info.c:396:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: mm/vmalloc_thread_info.c:397:
+        if (end > PGDIR_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: mm/vmalloc_thread_info.c:397:
+        if (end > PGDIR_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: mm/vmalloc_thread_info.c:398:
+                end = PGDIR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: mm/vmalloc_thread_info.c:398:
+                end = PGDIR_SIZE;$

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1078: FILE: mm/vmalloc_thread_info.c:400:
+        printk("map_expand_stack_area_pmd: address 0x%x, end 0x%x\n", (unsigned int)address, (unsigned int)end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: mm/vmalloc_thread_info.c:400:
+        printk("map_expand_stack_area_pmd: address 0x%x, end 0x%x\n", (unsigned int)address, (unsigned int)end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: mm/vmalloc_thread_info.c:400:
+        printk("map_expand_stack_area_pmd: address 0x%x, end 0x%x\n", (unsigned int)address, (unsigned int)end);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1078: FILE: mm/vmalloc_thread_info.c:400:
+        printk("map_expand_stack_area_pmd: address 0x%x, end 0x%x\n", (unsigned int)address, (unsigned int)end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_expand_stack_area_pmd', this function's name, in a string
#1078: FILE: mm/vmalloc_thread_info.c:400:
+        printk("map_expand_stack_area_pmd: address 0x%x, end 0x%x\n", (unsigned int)address, (unsigned int)end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: mm/vmalloc_thread_info.c:401:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1079: FILE: mm/vmalloc_thread_info.c:401:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1079: FILE: mm/vmalloc_thread_info.c:401:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: mm/vmalloc_thread_info.c:401:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1080: FILE: mm/vmalloc_thread_info.c:402:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: mm/vmalloc_thread_info.c:402:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: mm/vmalloc_thread_info.c:403:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: mm/vmalloc_thread_info.c:403:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1081: FILE: mm/vmalloc_thread_info.c:403:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1082: FILE: mm/vmalloc_thread_info.c:404:
+                if (!pte)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1082: FILE: mm/vmalloc_thread_info.c:404:
+                pte_t * pte = pte_alloc_kernel(&init_mm, pmd, base + address);
+                if (!pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: mm/vmalloc_thread_info.c:404:
+                if (!pte)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1083: FILE: mm/vmalloc_thread_info.c:405:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: mm/vmalloc_thread_info.c:405:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: mm/vmalloc_thread_info.c:406:
+                if (map_expand_stack_area_pte(pte, address, end - address, prot, pages))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: mm/vmalloc_thread_info.c:406:
+                if (map_expand_stack_area_pte(pte, address, end - address, prot, pages))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1085: FILE: mm/vmalloc_thread_info.c:407:
+                        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: mm/vmalloc_thread_info.c:407:
+                        return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: mm/vmalloc_thread_info.c:408:
+                address = (address + PMD_SIZE) & PMD_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: mm/vmalloc_thread_info.c:408:
+                address = (address + PMD_SIZE) & PMD_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1087: FILE: mm/vmalloc_thread_info.c:409:
+                pmd++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: mm/vmalloc_thread_info.c:409:
+                pmd++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: mm/vmalloc_thread_info.c:410:
+        } while (address < end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: mm/vmalloc_thread_info.c:410:
+        } while (address < end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: mm/vmalloc_thread_info.c:411:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1089: FILE: mm/vmalloc_thread_info.c:411:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1089: FILE: mm/vmalloc_thread_info.c:411:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: mm/vmalloc_thread_info.c:411:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1090: FILE: mm/vmalloc_thread_info.c:412:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: mm/vmalloc_thread_info.c:412:
+        return 0;$

WARNING:STORAGE_CLASS: storage class 'static' should be located before type 'int'
#1093: FILE: mm/vmalloc_thread_info.c:415:
+int static map_expand_stack_vm_area(unsigned long address, pgprot_t prot, struct page ***pages)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1096: FILE: mm/vmalloc_thread_info.c:418:
+        unsigned long end = address + PAGE_SIZE; // 1 page mappings$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: mm/vmalloc_thread_info.c:418:
+        unsigned long end = address + PAGE_SIZE; // 1 page mappings$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1098: FILE: mm/vmalloc_thread_info.c:420:
+        //unsigned long end = address + (area->size-PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1099: FILE: mm/vmalloc_thread_info.c:421:
+        pgd_t *dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: mm/vmalloc_thread_info.c:421:
+        pgd_t *dir;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1100: FILE: mm/vmalloc_thread_info.c:422:
+        int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: mm/vmalloc_thread_info.c:422:
+        int err = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: mm/vmalloc_thread_info.c:423:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1101: FILE: mm/vmalloc_thread_info.c:423:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: mm/vmalloc_thread_info.c:423:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: mm/vmalloc_thread_info.c:423:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: mm/vmalloc_thread_info.c:424:
+        dir = pgd_offset_k(address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: mm/vmalloc_thread_info.c:424:
+        dir = pgd_offset_k(address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: mm/vmalloc_thread_info.c:425:
+        spin_lock(&init_mm.page_table_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: mm/vmalloc_thread_info.c:425:
+        spin_lock(&init_mm.page_table_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1104: FILE: mm/vmalloc_thread_info.c:426:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: mm/vmalloc_thread_info.c:426:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1105: FILE: mm/vmalloc_thread_info.c:427:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: mm/vmalloc_thread_info.c:427:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: mm/vmalloc_thread_info.c:428:
+                if (!pmd) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1106: FILE: mm/vmalloc_thread_info.c:428:
+                pmd_t *pmd = pmd_alloc(&init_mm, dir, address);
+                if (!pmd) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: mm/vmalloc_thread_info.c:428:
+                if (!pmd) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: mm/vmalloc_thread_info.c:429:
+                        err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: mm/vmalloc_thread_info.c:429:
+                        err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1108: FILE: mm/vmalloc_thread_info.c:430:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: mm/vmalloc_thread_info.c:430:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1109: FILE: mm/vmalloc_thread_info.c:431:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: mm/vmalloc_thread_info.c:431:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1110: FILE: mm/vmalloc_thread_info.c:432:
+                if (map_expand_stack_area_pmd(pmd, address, end - address, prot, pages)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: mm/vmalloc_thread_info.c:432:
+                if (map_expand_stack_area_pmd(pmd, address, end - address, prot, pages)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1111: FILE: mm/vmalloc_thread_info.c:433:
+                        err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: mm/vmalloc_thread_info.c:433:
+                        err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: mm/vmalloc_thread_info.c:434:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: mm/vmalloc_thread_info.c:434:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: mm/vmalloc_thread_info.c:435:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: mm/vmalloc_thread_info.c:435:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: mm/vmalloc_thread_info.c:436:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1114: FILE: mm/vmalloc_thread_info.c:436:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1114: FILE: mm/vmalloc_thread_info.c:436:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: mm/vmalloc_thread_info.c:436:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: mm/vmalloc_thread_info.c:437:
+                address = (address + PGDIR_SIZE) & PGDIR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: mm/vmalloc_thread_info.c:437:
+                address = (address + PGDIR_SIZE) & PGDIR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: mm/vmalloc_thread_info.c:438:
+                dir++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: mm/vmalloc_thread_info.c:438:
+                dir++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: mm/vmalloc_thread_info.c:439:
+        } while (address && (address < end));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: mm/vmalloc_thread_info.c:439:
+        } while (address && (address < end));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1118: FILE: mm/vmalloc_thread_info.c:440:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1118: FILE: mm/vmalloc_thread_info.c:440:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: mm/vmalloc_thread_info.c:440:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: mm/vmalloc_thread_info.c:440:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: mm/vmalloc_thread_info.c:441:
+        spin_unlock(&init_mm.page_table_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: mm/vmalloc_thread_info.c:441:
+        spin_unlock(&init_mm.page_table_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: mm/vmalloc_thread_info.c:442:
+        flush_cache_vmap(address, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: mm/vmalloc_thread_info.c:442:
+        flush_cache_vmap(address, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: mm/vmalloc_thread_info.c:443:
+        //flush_cache_vmap((unsigned long) area->addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: mm/vmalloc_thread_info.c:444:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: mm/vmalloc_thread_info.c:444:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: mm/vmalloc_thread_info.c:449:
+        struct page **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: mm/vmalloc_thread_info.c:449:
+        struct page **pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1128: FILE: mm/vmalloc_thread_info.c:450:
+        unsigned int expand_address = (unsigned int)((area->addr)+PAGE_SIZE*2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: mm/vmalloc_thread_info.c:450:
+        unsigned int expand_address = (unsigned int)((area->addr)+PAGE_SIZE*2);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1128: FILE: mm/vmalloc_thread_info.c:450:
+        unsigned int expand_address = (unsigned int)((area->addr)+PAGE_SIZE*2);
                                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1128: FILE: mm/vmalloc_thread_info.c:450:
+        unsigned int expand_address = (unsigned int)((area->addr)+PAGE_SIZE*2);
                                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1130: FILE: mm/vmalloc_thread_info.c:452:
+        unsigned gfp_mask = GFP_KERNEL | __GFP_HIGHMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: mm/vmalloc_thread_info.c:452:
+        unsigned gfp_mask = GFP_KERNEL | __GFP_HIGHMEM;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1130: FILE: mm/vmalloc_thread_info.c:452:
+        unsigned gfp_mask = GFP_KERNEL | __GFP_HIGHMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1131: FILE: mm/vmalloc_thread_info.c:453:
+        pgprot_t prot = PAGE_KERNEL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: mm/vmalloc_thread_info.c:453:
+        pgprot_t prot = PAGE_KERNEL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: mm/vmalloc_thread_info.c:454:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1132: FILE: mm/vmalloc_thread_info.c:454:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: mm/vmalloc_thread_info.c:454:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: mm/vmalloc_thread_info.c:454:
+                                                                                                                             $

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1133: FILE: mm/vmalloc_thread_info.c:455:
+#if 1

ERROR:SPACING: space required before the open brace '{'
#1134: FILE: mm/vmalloc_thread_info.c:456:
+	if(area){

ERROR:SPACING: space required before the open parenthesis '('
#1134: FILE: mm/vmalloc_thread_info.c:456:
+	if(area){

ERROR:SPACING: space required before the open parenthesis '('
#1135: FILE: mm/vmalloc_thread_info.c:457:
+		if(area->pages[0])

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: mm/vmalloc_thread_info.c:458:
+        ^I^Iprintk("area[0] exist  ");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1136: FILE: mm/vmalloc_thread_info.c:458:
+        ^I^Iprintk("area[0] exist  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: mm/vmalloc_thread_info.c:458:
+        ^I^Iprintk("area[0] exist  ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1136: FILE: mm/vmalloc_thread_info.c:458:
+        		printk("area[0] exist  ");

ERROR:SPACING: space required before the open parenthesis '('
#1137: FILE: mm/vmalloc_thread_info.c:459:
+		if(area->pages[1])

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: mm/vmalloc_thread_info.c:460:
+        ^I^Iprintk("area[1] exist  ");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1138: FILE: mm/vmalloc_thread_info.c:460:
+        ^I^Iprintk("area[1] exist  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: mm/vmalloc_thread_info.c:460:
+        ^I^Iprintk("area[1] exist  ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1138: FILE: mm/vmalloc_thread_info.c:460:
+        		printk("area[1] exist  ");

ERROR:SPACING: space required before the open parenthesis '('
#1139: FILE: mm/vmalloc_thread_info.c:461:
+		if(area->pages[2])

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: mm/vmalloc_thread_info.c:462:
+        ^I^Iprintk("area[2] exist  ");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1140: FILE: mm/vmalloc_thread_info.c:462:
+        ^I^Iprintk("area[2] exist  ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: mm/vmalloc_thread_info.c:462:
+        ^I^Iprintk("area[2] exist  ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1140: FILE: mm/vmalloc_thread_info.c:462:
+        		printk("area[2] exist  ");

ERROR:SPACING: space required before the open parenthesis '('
#1141: FILE: mm/vmalloc_thread_info.c:463:
+		if(area->pages[3])

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: mm/vmalloc_thread_info.c:464:
+        ^I^Iprintk("area[3] exist\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1142: FILE: mm/vmalloc_thread_info.c:464:
+        ^I^Iprintk("area[3] exist\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: mm/vmalloc_thread_info.c:464:
+        ^I^Iprintk("area[3] exist\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1142: FILE: mm/vmalloc_thread_info.c:464:
+        		printk("area[3] exist\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1146: FILE: mm/vmalloc_thread_info.c:468:
+          area->pages[2] = alloc_thread_info_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: mm/vmalloc_thread_info.c:468:
+          area->pages[2] = alloc_thread_info_page(gfp_mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: mm/vmalloc_thread_info.c:469:
+                if (unlikely(!area->pages[2])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: mm/vmalloc_thread_info.c:469:
+                if (unlikely(!area->pages[2])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1148: FILE: mm/vmalloc_thread_info.c:470:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: mm/vmalloc_thread_info.c:471:
+                        area->nr_pages = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: mm/vmalloc_thread_info.c:471:
+                        area->nr_pages = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: mm/vmalloc_thread_info.c:472:
+                        printk("Alloc page failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: mm/vmalloc_thread_info.c:472:
+                        printk("Alloc page failed\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1150: FILE: mm/vmalloc_thread_info.c:472:
+                        printk("Alloc page failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: mm/vmalloc_thread_info.c:473:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: mm/vmalloc_thread_info.c:473:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: mm/vmalloc_thread_info.c:474:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: mm/vmalloc_thread_info.c:474:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1153: FILE: mm/vmalloc_thread_info.c:475:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1153: FILE: mm/vmalloc_thread_info.c:475:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: mm/vmalloc_thread_info.c:475:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: mm/vmalloc_thread_info.c:475:
+                                                                                                                             $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1154: FILE: mm/vmalloc_thread_info.c:476:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: mm/vmalloc_thread_info.c:477:
+          area->pages[1] = alloc_thread_info_page(gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: mm/vmalloc_thread_info.c:477:
+          area->pages[1] = alloc_thread_info_page(gfp_mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1156: FILE: mm/vmalloc_thread_info.c:478:
+                if (unlikely(!area->pages[1])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: mm/vmalloc_thread_info.c:478:
+                if (unlikely(!area->pages[1])) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1157: FILE: mm/vmalloc_thread_info.c:479:
+                        /* Successfully allocated i pages, free them in __vunmap() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: mm/vmalloc_thread_info.c:480:
+                        area->nr_pages = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: mm/vmalloc_thread_info.c:480:
+                        area->nr_pages = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: mm/vmalloc_thread_info.c:481:
+                        printk("Alloc page failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: mm/vmalloc_thread_info.c:481:
+                        printk("Alloc page failed\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1159: FILE: mm/vmalloc_thread_info.c:481:
+                        printk("Alloc page failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1160: FILE: mm/vmalloc_thread_info.c:482:
+                        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: mm/vmalloc_thread_info.c:482:
+                        goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: mm/vmalloc_thread_info.c:483:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: mm/vmalloc_thread_info.c:483:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1162: FILE: mm/vmalloc_thread_info.c:484:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1162: FILE: mm/vmalloc_thread_info.c:484:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1162: FILE: mm/vmalloc_thread_info.c:484:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: mm/vmalloc_thread_info.c:484:
+                                                                                                                             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1164: FILE: mm/vmalloc_thread_info.c:486:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1164: FILE: mm/vmalloc_thread_info.c:486:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1164: FILE: mm/vmalloc_thread_info.c:486:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: mm/vmalloc_thread_info.c:486:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1165: FILE: mm/vmalloc_thread_info.c:487:
+        area->nr_pages = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: mm/vmalloc_thread_info.c:487:
+        area->nr_pages = 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: mm/vmalloc_thread_info.c:488:
+        pages = &(area->pages[2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: mm/vmalloc_thread_info.c:488:
+        pages = &(area->pages[2]);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around area->pages[2]
#1166: FILE: mm/vmalloc_thread_info.c:488:
+        pages = &(area->pages[2]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: mm/vmalloc_thread_info.c:489:
+                                                                                                                             $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1167: FILE: mm/vmalloc_thread_info.c:489:
+                                                                                                                             

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: mm/vmalloc_thread_info.c:489:
+                                                                                                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: mm/vmalloc_thread_info.c:489:
+                                                                                                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1168: FILE: mm/vmalloc_thread_info.c:490:
+        if (map_expand_stack_vm_area(expand_address, prot, &pages))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: mm/vmalloc_thread_info.c:490:
+        if (map_expand_stack_vm_area(expand_address, prot, &pages))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1169: FILE: mm/vmalloc_thread_info.c:491:
+                goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: mm/vmalloc_thread_info.c:491:
+                goto fail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1175: FILE: mm/vmalloc_thread_info.c:497:
+        printk("failed to expand_stack_size\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: mm/vmalloc_thread_info.c:497:
+        printk("failed to expand_stack_size\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1175: FILE: mm/vmalloc_thread_info.c:497:
+        printk("failed to expand_stack_size\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'expand_stack_size', this function's name, in a string
#1175: FILE: mm/vmalloc_thread_info.c:497:
+        printk("failed to expand_stack_size\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1179: FILE: mm/vmalloc_thread_info.c:501:
+EXPORT_SYMBOL(expand_stack_size);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171375.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 441 errors, 506 warnings, 56 checks, 914 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171375.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
