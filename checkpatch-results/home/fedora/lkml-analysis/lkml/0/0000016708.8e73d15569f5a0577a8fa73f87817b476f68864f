WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Separate delayable work items from non-delayable work items be splitting them

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#312: FILE: include/linux/workqueue.h:45:
+#define DECLARE_DELAYABLE_WORK(n, f, d)				\
+	struct dwork_struct n = __DWORK_INITIALIZER(n, f, d)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_work' - possible side-effects?
#334: FILE: include/linux/workqueue.h:70:
+#define INIT_DELAYABLE_WORK(_work, _func, _data)		\
+	do {							\
+		INIT_WORK(&(_work)->work, (_func), (_data));	\
 		init_timer(&(_work)->timer);			\
 	} while (0)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#350: FILE: include/linux/workqueue.h:89:
+extern int FASTCALL(queue_delayed_work(struct workqueue_struct *wq, struct dwork_struct *dwork, unsigned long delay));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#350: FILE: include/linux/workqueue.h:89:
+}
+extern int FASTCALL(queue_delayed_work(struct workqueue_struct *wq, struct dwork_struct *dwork, unsigned long delay));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: include/linux/workqueue.h:89:
+extern int FASTCALL(queue_delayed_work(struct workqueue_struct *wq, struct dwork_struct *dwork, unsigned long delay));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#362: FILE: include/linux/workqueue.h:99:
+}
+extern int FASTCALL(schedule_delayed_work(struct dwork_struct *dwork, unsigned long delay));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/workqueue.h:99:
+extern int FASTCALL(schedule_delayed_work(struct dwork_struct *dwork, unsigned long delay));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: include/linux/workqueue.h:101:
+extern int schedule_delayed_work_on(int cpu, struct dwork_struct *dwork, unsigned long delay);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#556: FILE: mm/slab.c:917:
 static void __devinit start_cpu_timer(int cpu)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reap_work->work.func"
#567: FILE: mm/slab.c:926:
+	if (keventd_up() && reap_work->work.func == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016708.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 8 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016708.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
