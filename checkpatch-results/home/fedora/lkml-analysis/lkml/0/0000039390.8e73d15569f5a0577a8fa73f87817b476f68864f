WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
  The purpose of IOCB_CMD_GROUP is to group together the following requests in

WARNING:TYPO_SPELLING: 'sumbitted' may be misspelled - perhaps 'submitted'?
#40: 
the list up to the end of the list sumbitted to io_submit.
                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#100: 
Signed-off-by: Sébastien Dugué <sebastien.dugue@bull.net>
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/aio.c:1022:
+       struct task_struct *tsk = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/aio.c:1023:
+       DECLARE_WAITQUEUE(wait, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/aio.c:1025:
+       add_wait_queue(&ctx->wait, &wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/aio.c:1026:
+       set_task_state(tsk, TASK_UNINTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/aio.c:1028:
+       while ( atomic_read(&lio->lio_users) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: fs/aio.c:1028:
+       while ( atomic_read(&lio->lio_users) ) {
+               schedule();

ERROR:SPACING: space prohibited after that open parenthesis '('
#126: FILE: fs/aio.c:1028:
+       while ( atomic_read(&lio->lio_users) ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#126: FILE: fs/aio.c:1028:
+       while ( atomic_read(&lio->lio_users) ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: fs/aio.c:1029:
+               schedule();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/aio.c:1029:
+               schedule();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/aio.c:1030:
+               set_task_state(tsk, TASK_UNINTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/aio.c:1030:
+               set_task_state(tsk, TASK_UNINTERRUPTIBLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/aio.c:1031:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/aio.c:1032:
+       __set_task_state(tsk, TASK_RUNNING);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/aio.c:1033:
+       remove_wait_queue(&ctx->wait, &wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/aio.c:1036:
+       kfree(lio);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lio->lio_users
#141: FILE: fs/aio.c:1043:
+	ret = atomic_dec_and_test(&(lio->lio_users));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#151: FILE: fs/aio.c:1052:
*user_event) +{

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#154: FILE: fs/aio.c:1055:
+	if (*lio) {
+               printk (KERN_DEBUG "lio_create: already have an lio\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/aio.c:1056:
+               printk (KERN_DEBUG "lio_create: already have an lio\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/aio.c:1056:
+               printk (KERN_DEBUG "lio_create: already have an lio\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#155: FILE: fs/aio.c:1056:
+               printk (KERN_DEBUG "lio_create: already have an lio\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: fs/aio.c:1056:
+               printk (KERN_DEBUG "lio_create: already have an lio\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/aio.c:1057:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/aio.c:1057:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/aio.c:1058:
+       }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: fs/aio.c:1065:
+	memset (*lio, 0, sizeof(struct lio_event));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#174: FILE: fs/aio.c:1075:
+	else
[...]
+               (*lio)->lio_wait = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: fs/aio.c:1077:
+               (*lio)->lio_wait = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/aio.c:1077:
+               (*lio)->lio_wait = 1;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#228: FILE: fs/aio.c:1787:
+		if (tmp.aio_lio_opcode == IOCB_CMD_GROUP) {
[...]
until

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#229: FILE: fs/aio.c:1788:
+		if (tmp.aio_lio_opcode == IOCB_CMD_GROUP) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: fs/aio.c:1796:
+			ret = lio_create(&lio,
long)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.aio_lio_opcode == IOCB_CMD_PREAD'
#247: FILE: fs/aio.c:1804:
+		if (lio && ((tmp.aio_lio_opcode == IOCB_CMD_PREAD) ||
+			    (tmp.aio_lio_opcode == IOCB_CMD_PWRITE))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.aio_lio_opcode == IOCB_CMD_PWRITE'
#247: FILE: fs/aio.c:1804:
+		if (lio && ((tmp.aio_lio_opcode == IOCB_CMD_PREAD) ||
+			    (tmp.aio_lio_opcode == IOCB_CMD_PWRITE))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#249: FILE: fs/aio.c:1806:
+			    (tmp.aio_lio_opcode == IOCB_CMD_PWRITE))) {
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039390.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 24 warnings, 7 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000039390.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
