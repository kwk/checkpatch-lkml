WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#66: FILE: drivers/serial/Kconfig:375:
+config SERIAL98
+	tristate "PC-9800 8251-based primary serial port support"
+	depends on X86_PC9800
+	help
+	  If you want to use standard primary serial ports on PC-9800, 
+	  say Y.  Otherwise, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: drivers/serial/Kconfig:379:
+^I  If you want to use standard primary serial ports on PC-9800, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/serial/Kconfig:382:
+config SERIAL98_CONSOLE
+        bool "Support for console on PC-9800 standard serial port"
+        depends on SERIAL98=y
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: drivers/serial/serial98.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#104: FILE: drivers/serial/serial98.c:2:
+ *  linux/drivers/serial/serial98.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#130: FILE: drivers/serial/serial98.c:28:
+#include <asm/io.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#193: FILE: drivers/serial/serial98.c:91:
+#if 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#253: FILE: drivers/serial/serial98.c:151:
+#define SERIAL98_CONSOLE	&serial98_console

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/serial/serial98.c:223:
+		if(!(ms & 0x20))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#327: FILE: drivers/serial/serial98.c:225:
+		if(!(ms & 0x80)) {

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: drivers/serial/serial98.c:229:
+		if(!(ms & 0x40))

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: drivers/serial/serial98.c:231:
+		if(st & 0x80)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/serial/serial98.c:268:
+static void serial98_rx_chars(struct uart_port *port, int *status,
+				struct pt_regs *regs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: drivers/serial/serial98.c:290:
+			if (*status & PORT98->brk) {
[...]
+			} else if (*status & PORT98->pe)
[...]
+			else if (*status & PORT98->fe)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'ingored' may be misspelled - perhaps 'ignored'?
#411: FILE: drivers/serial/serial98.c:309:
+			 * Mask off conditions which should be ingored.
 			                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#422: FILE: drivers/serial/serial98.c:320:
+			if (*status & PORT98->brk) {
[...]
+			} else if (*status & PORT98->pe)
[...]
+			else if (*status & PORT98->fe)
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#448: FILE: drivers/serial/serial98.c:346:
+	ignore_char:

WARNING:BRACES: braces {} are not necessary for single statement blocks
#513: FILE: drivers/serial/serial98.c:411:
+	if (status & PORT98->rxrdy) {
+		serial98_rx_chars(port, &status, regs);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#517: FILE: drivers/serial/serial98.c:415:
+	if (status & PORT98->txrdy) {
+		serial98_tx_chars(port);
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#529: FILE: drivers/serial/serial98.c:427:
+	if (inb(PORT.iobase + 2) & PORT98->txemp)
+			ret = TIOCSER_TEMT;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/serial/serial98.c:516:
+	retval = request_irq(PORT.irq, serial98_int, 0,
+				serial98_reg.driver_name, port);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/serial/serial98.c:581:
+^I/* disable FIFO's */^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: drivers/serial/serial98.c:594:
+serial98_set_termios(struct uart_port *port, struct termios *termios,
+		       struct termios *old)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#703: FILE: drivers/serial/serial98.c:601:
+	switch (termios->c_cflag & CSIZE) {
+		case CS5:
[...]
+		case CS6:
[...]
+		case CS7:
[...]
+		default:
+		case CS8:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/serial/serial98.c:628:
+^Ibaud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/16); $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#730: FILE: drivers/serial/serial98.c:628:
+	baud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/16); 
 	                                                              ^

WARNING:TYPO_SPELLING: 'Characteres' may be misspelled - perhaps 'Characters'?
#758: FILE: drivers/serial/serial98.c:656:
+	 * Characteres to ignore
 	   ^^^^^^^^^^^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#832: FILE: drivers/serial/serial98.c:730:
+	switch (PORT.type) {
+		case PORT_8251_PC98:
[...]
+		case PORT_19K_PC98:
[...]
+		case PORT_FIFO_PC98:
[...]
+		case PORT_VFAST_PC98:
[...]
+		case PORT_PC9861:
[...]
+		case PORT_PC9801_101:
[...]
+		default:

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#862: FILE: drivers/serial/serial98.c:760:
+	switch (PORT.type) {
+		case PORT_VFAST_PC98:
[...]
+		case PORT_FIFO_PC98:
[...]
+		case PORT_19K_PC98:
[...]
+		case PORT_8251_PC98:

WARNING:INDENTED_LABEL: labels should not be indented
#907: FILE: drivers/serial/serial98.c:805:
+				err:

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#939: FILE: drivers/serial/serial98.c:837:
+static int serial98_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                               ^^^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#941: FILE: drivers/serial/serial98.c:839:
+	switch (ser->type) {
+		case PORT_VFAST_PC98:
+		case PORT_FIFO_PC98:
+		case PORT_19K_PC98:
+		case PORT_8251_PC98:
[...]
+		case PORT_PC9861:
+		case PORT_PC9801_101:
[...]
+		case PORT_UNKNOWN:
[...]
+		default:

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#947: FILE: drivers/serial/serial98.c:845:
+		/* not implemented yet
+		case PORT_PC9861:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#962: FILE: drivers/serial/serial98.c:860:
+static struct uart_ops serial98_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1139: FILE: drivers/serial/serial98.c:1037:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <PC9800_8MHz_P>
#1145: FILE: drivers/serial/serial98.c:1043:
+	if (PC9800_8MHz_P()) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1153: FILE: drivers/serial/serial98.c:1051:
+	printk(KERN_INFO "serial98: PC-9801 standard serial port driver Version 0.1alpha\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1171: FILE: drivers/serial/serial98.c:1069:
+		if (*(unsigned char*)__va(PC9821SCA_RSFLAGS) & 0x10)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#1171: FILE: drivers/serial/serial98.c:1069:
+		if (*(unsigned char*)__va(PC9821SCA_RSFLAGS) & 0x10)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1173: FILE: drivers/serial/serial98.c:1071:
+		else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1178: FILE: drivers/serial/serial98.c:1076:
+	} else if ((serial98_ports[0].ext = inb(SERIAL98_EXT)) != 0xff) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: drivers/serial/serial98.c:1096:
+			uart_add_one_port(&serial98_reg,
+					(struct uart_port *)&serial98_ports[i]);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1210: FILE: drivers/serial/serial98.c:1108:
+	if (serial98_ports[0].type == PORT_19K_PC98
+			|| serial98_ports[0].type == PORT_FIFO_PC98)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/serial/serial98.c:1113:
+		uart_remove_one_port(&serial98_reg,
+					(struct uart_port *)&serial98_ports[i]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387316.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 18 warnings, 12 checks, 1187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387316.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
