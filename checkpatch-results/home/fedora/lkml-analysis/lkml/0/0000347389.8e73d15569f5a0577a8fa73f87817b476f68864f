WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/char/lirc/Kconfig:9:
+config LIRC_SUPPORT
+	bool "Linux InfraRed Controller"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#99: FILE: drivers/char/lirc/Kconfig:17:
+	config LIRC_GPIO
+		tristate "GPIO Driver"
+		depends on LIRC_SUPPORT && VIDEO_BT848
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/char/lirc/lirc_dev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/char/lirc/lirc_dev.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/char/lirc/lirc_dev.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#136: FILE: drivers/char/lirc/lirc_dev.c:20:
+ * $Id: lirc_dev.c,v 1.25 2003/05/04 09:31:28 ranty Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#151: FILE: drivers/char/lirc/lirc_dev.c:35:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#162: FILE: drivers/char/lirc/lirc_dev.c:46:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: drivers/char/lirc/lirc_dev.c:48:
+MODULE_PARM(debug,"i");
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#169: FILE: drivers/char/lirc/lirc_dev.c:53:
+#define dprintk           if (debug) printk

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#174: FILE: drivers/char/lirc/lirc_dev.c:58:
+struct irctl
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#190: FILE: drivers/char/lirc/lirc_dev.c:74:
+static struct file_operations fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#192: FILE: drivers/char/lirc/lirc_dev.c:76:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: drivers/char/lirc/lirc_dev.c:94:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'buffer'
#213: FILE: drivers/char/lirc/lirc_dev.c:97:
+ *  reads key codes from plugin and puts them into buffer
+ *  buffer free space is checked and locking performed

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#217: FILE: drivers/char/lirc/lirc_dev.c:101:
+inline static int add_to_buf(struct irctl *ir)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: drivers/char/lirc/lirc_dev.c:112:
+	for (i=0; i < ir->buf->chunk_size; i++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#229: FILE: drivers/char/lirc/lirc_dev.c:113:
+		if (ir->p.get_key(ir->p.data, &buf[i], i)) {
+			return -ENODATA;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#266: FILE: drivers/char/lirc/lirc_dev.c:150:
+	if (ir->t_notify != NULL) {
+		up(ir->t_notify);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify"
#266: FILE: drivers/char/lirc/lirc_dev.c:150:
+	if (ir->t_notify != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#280: FILE: drivers/char/lirc/lirc_dev.c:164:
+			if (ir->shutdown) {
+				break;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#283: FILE: drivers/char/lirc/lirc_dev.c:167:
+			if (!add_to_buf(ir)) {
+				wake_up_interruptible(&ir->buf->wait_poll);
+			}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#289: FILE: drivers/char/lirc/lirc_dev.c:173:
+			schedule_timeout(HZ/2);
 			                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#293: FILE: drivers/char/lirc/lirc_dev.c:177:
+	if (ir->t_notify2 != NULL) {
+		down(ir->t_notify2);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify2"
#293: FILE: drivers/char/lirc/lirc_dev.c:177:
+	if (ir->t_notify2 != NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: drivers/char/lirc/lirc_dev.c:182:
+	if (ir->t_notify != NULL) {
+		up(ir->t_notify);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ir->t_notify"
#298: FILE: drivers/char/lirc/lirc_dev.c:182:
+	if (ir->t_notify != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: drivers/char/lirc/lirc_dev.c:202:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#318: FILE: drivers/char/lirc/lirc_dev.c:202:
+		printk("lirc_dev: lirc_register_plugin:"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: drivers/char/lirc/lirc_dev.c:203:
+		printk("lirc_dev: lirc_register_plugin:"
+		       "plugin pointer must be not NULL!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#323: FILE: drivers/char/lirc/lirc_dev.c:207:
+	if (CONFIG_LIRC_MAX_DEV <= p->minor) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: drivers/char/lirc/lirc_dev.c:208:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#324: FILE: drivers/char/lirc/lirc_dev.c:208:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:TYPO_SPELLING: 'beetween' may be misspelled - perhaps 'between'?
#325: FILE: drivers/char/lirc/lirc_dev.c:209:
+		       "\" minor\" must be beetween 0 and %d (%d)!\n",
 		                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#325: FILE: drivers/char/lirc/lirc_dev.c:209:
+		printk("lirc_dev: lirc_register_plugin:"
+		       "\" minor\" must be beetween 0 and %d (%d)!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: drivers/char/lirc/lirc_dev.c:210:
+		       CONFIG_LIRC_MAX_DEV-1, p->minor);
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#330: FILE: drivers/char/lirc/lirc_dev.c:214:
+	if (1 > p->code_length || (BUFLEN*8) < p->code_length) {
 	                                 ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#330: FILE: drivers/char/lirc/lirc_dev.c:214:
+	if (1 > p->code_length || (BUFLEN*8) < p->code_length) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: drivers/char/lirc/lirc_dev.c:215:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#331: FILE: drivers/char/lirc/lirc_dev.c:215:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#332: FILE: drivers/char/lirc/lirc_dev.c:216:
+		printk("lirc_dev: lirc_register_plugin:"
+		       "code length in bits for minor (%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#333: FILE: drivers/char/lirc/lirc_dev.c:217:
+		       "code length in bits for minor (%d) "
+		       "must be less than %d!\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#334: FILE: drivers/char/lirc/lirc_dev.c:218:
+		       p->minor, BUFLEN*8);
 		                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: drivers/char/lirc/lirc_dev.c:222:
+	printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#338: FILE: drivers/char/lirc/lirc_dev.c:222:
+	printk("lirc_dev: lirc_register_plugin:"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: drivers/char/lirc/lirc_dev.c:223:
+	       "sample_rate: %d\n",p->sample_rate);
 	                          ^

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: drivers/char/lirc/lirc_dev.c:223:
+	printk("lirc_dev: lirc_register_plugin:"
+	       "sample_rate: %d\n",p->sample_rate);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: drivers/char/lirc/lirc_dev.c:226:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#342: FILE: drivers/char/lirc/lirc_dev.c:226:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:TYPO_SPELLING: 'beetween' may be misspelled - perhaps 'between'?
#343: FILE: drivers/char/lirc/lirc_dev.c:227:
+			       "sample_rate must be beetween 2 and 50!\n");
 			                            ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: drivers/char/lirc/lirc_dev.c:227:
+			printk("lirc_dev: lirc_register_plugin:"
+			       "sample_rate must be beetween 2 and 50!\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#347: FILE: drivers/char/lirc/lirc_dev.c:231:
+	} else if (!(p->fops && p->fops->read)
+			&& !p->get_queue && !p->rbuf) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#348: FILE: drivers/char/lirc/lirc_dev.c:232:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#348: FILE: drivers/char/lirc/lirc_dev.c:232:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: drivers/char/lirc/lirc_dev.c:233:
+		printk("lirc_dev: lirc_register_plugin:"
+		       "fops->read, get_queue and rbuf cannot all be NULL!\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#353: FILE: drivers/char/lirc/lirc_dev.c:237:
+		if (!(p->fops && p->fops->read && p->fops->poll)
+				|| (!p->fops->ioctl && !p->ioctl)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: drivers/char/lirc/lirc_dev.c:238:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#354: FILE: drivers/char/lirc/lirc_dev.c:238:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: drivers/char/lirc/lirc_dev.c:239:
+			printk("lirc_dev: lirc_register_plugin:"
+			       "neither read, poll nor ioctl can be NULL!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#364: FILE: drivers/char/lirc/lirc_dev.c:248:
+	if (0 > minor) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: drivers/char/lirc/lirc_dev.c:250:
+		for (minor=0; minor<CONFIG_LIRC_MAX_DEV; minor++)
 		          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#366: FILE: drivers/char/lirc/lirc_dev.c:250:
+		for (minor=0; minor<CONFIG_LIRC_MAX_DEV; minor++)
 		                   ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#369: FILE: drivers/char/lirc/lirc_dev.c:253:
+		if (CONFIG_LIRC_MAX_DEV == minor) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: drivers/char/lirc/lirc_dev.c:254:
+			printk("lirc_dev: lirc_register_plugin: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#370: FILE: drivers/char/lirc/lirc_dev.c:254:
+			printk("lirc_dev: lirc_register_plugin: "

WARNING:SPLIT_STRING: quoted string split across lines
#371: FILE: drivers/char/lirc/lirc_dev.c:255:
+			printk("lirc_dev: lirc_register_plugin: "
+			       "no free slots for plugins!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: drivers/char/lirc/lirc_dev.c:260:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#376: FILE: drivers/char/lirc/lirc_dev.c:260:
+		printk("lirc_dev: lirc_register_plugin:"

WARNING:TYPO_SPELLING: 'registerd' may be misspelled - perhaps 'registered'?
#377: FILE: drivers/char/lirc/lirc_dev.c:261:
+		       "minor (%d) just registerd!\n", minor);
 		                        ^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#377: FILE: drivers/char/lirc/lirc_dev.c:261:
+		printk("lirc_dev: lirc_register_plugin:"
+		       "minor (%d) just registerd!\n", minor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: drivers/char/lirc/lirc_dev.c:271:
+                /* it means - wait for externeal event in task queue */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#392: FILE: drivers/char/lirc/lirc_dev.c:276:
+	p->name[sizeof(p->name)-1] = '\0';
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#394: FILE: drivers/char/lirc/lirc_dev.c:278:
+	bytes_in_key = p->code_length/8 + (p->code_length%8 ? 1 : 0);
 	                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#394: FILE: drivers/char/lirc/lirc_dev.c:278:
+	bytes_in_key = p->code_length/8 + (p->code_length%8 ? 1 : 0);
 	                                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir->buf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#399: FILE: drivers/char/lirc/lirc_dev.c:283:
+		ir->buf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#400: FILE: drivers/char/lirc/lirc_dev.c:284:
+		lirc_buffer_init(ir->buf, bytes_in_key, BUFLEN/bytes_in_key);
 		                                              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#403: FILE: drivers/char/lirc/lirc_dev.c:287:
+	if (p->features==0)
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: drivers/char/lirc/lirc_dev.c:294:
+	if(p->sample_rate || p->get_queue) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#413: FILE: drivers/char/lirc/lirc_dev.c:297:
+		ir->tpid = kernel_thread(lirc_thread, (void*)ir, 0);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: drivers/char/lirc/lirc_dev.c:300:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_register_plugin', this function's name, in a string
#416: FILE: drivers/char/lirc/lirc_dev.c:300:
+			printk("lirc_dev: lirc_register_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#417: FILE: drivers/char/lirc/lirc_dev.c:301:
+			printk("lirc_dev: lirc_register_plugin:"
+			       "cannot run poll thread for minor = %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: drivers/char/lirc/lirc_dev.c:328:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_unregister_plugin', this function's name, in a string
#444: FILE: drivers/char/lirc/lirc_dev.c:328:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:TYPO_SPELLING: 'beetween' may be misspelled - perhaps 'between'?
#445: FILE: drivers/char/lirc/lirc_dev.c:329:
+		       "\" minor\" must be beetween 0 and %d!\n",
 		                           ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#445: FILE: drivers/char/lirc/lirc_dev.c:329:
+		printk("lirc_dev: lirc_unregister_plugin:"
+		       "\" minor\" must be beetween 0 and %d!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#446: FILE: drivers/char/lirc/lirc_dev.c:330:
+		       CONFIG_LIRC_MAX_DEV-1);
 		                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#455: FILE: drivers/char/lirc/lirc_dev.c:339:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_unregister_plugin', this function's name, in a string
#455: FILE: drivers/char/lirc/lirc_dev.c:339:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/char/lirc/lirc_dev.c:340:
+		printk("lirc_dev: lirc_unregister_plugin:"
+		       "minor (%d) device not registered!", minor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#462: FILE: drivers/char/lirc/lirc_dev.c:346:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lirc_unregister_plugin', this function's name, in a string
#462: FILE: drivers/char/lirc/lirc_dev.c:346:
+		printk("lirc_dev: lirc_unregister_plugin:"

WARNING:SPLIT_STRING: quoted string split across lines
#463: FILE: drivers/char/lirc/lirc_dev.c:347:
+		printk("lirc_dev: lirc_unregister_plugin:"
+		       "plugin %s[%d] in use!", ir->p.name, ir->p.minor);

ERROR:SPACING: space required before the open brace '{'
#488: FILE: drivers/char/lirc/lirc_dev.c:372:
+	if (ir->buf != ir->p.rbuf){

ERROR:SPACING: space required before the open parenthesis '('
#520: FILE: drivers/char/lirc/lirc_dev.c:404:
+	if(ir->p.fops && ir->p.fops->open)

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/char/lirc/lirc_dev.c:424:
+         * and lirc_thread isn't using buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: drivers/char/lirc/lirc_dev.c:427:
+         */$

ERROR:SPACING: space required before the open parenthesis '('
#572: FILE: drivers/char/lirc/lirc_dev.c:456:
+	if(ir->p.fops && ir->p.fops->release)

ERROR:SPACING: space required before the open parenthesis '('
#595: FILE: drivers/char/lirc/lirc_dev.c:479:
+	if(ir->p.fops && ir->p.fops->poll)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#604: FILE: drivers/char/lirc/lirc_dev.c:488:
+	return lirc_buffer_empty(ir->buf) ? 0 : (POLLIN|POLLRDNORM);
 	                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: drivers/char/lirc/lirc_dev.c:495:
+                       unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/char/lirc/lirc_dev.c:495:
+                       unsigned int cmd, unsigned long arg)$

ERROR:SPACING: space required before the open parenthesis '('
#621: FILE: drivers/char/lirc/lirc_dev.c:505:
+	if(ir->p.fops && ir->p.fops->ioctl)

ERROR:SPACING: space required before the open brace '{'
#631: FILE: drivers/char/lirc/lirc_dev.c:515:
+	if(ir->p.ioctl){

ERROR:SPACING: space required before the open parenthesis '('
#631: FILE: drivers/char/lirc/lirc_dev.c:515:
+	if(ir->p.ioctl){

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#639: FILE: drivers/char/lirc/lirc_dev.c:523:
+	switch(cmd)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#639: FILE: drivers/char/lirc/lirc_dev.c:523:
+	switch(cmd)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#642: FILE: drivers/char/lirc/lirc_dev.c:526:
+		result = put_user(ir->p.features, (unsigned long*)arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#645: FILE: drivers/char/lirc/lirc_dev.c:529:
+		if(!(ir->p.features&LIRC_CAN_REC_MASK))
 		                   ^

ERROR:SPACING: space required before the open parenthesis '('
#645: FILE: drivers/char/lirc/lirc_dev.c:529:
+		if(!(ir->p.features&LIRC_CAN_REC_MASK))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#646: FILE: drivers/char/lirc/lirc_dev.c:530:
+			return(-ENOSYS);

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#649: FILE: drivers/char/lirc/lirc_dev.c:533:
+				  (ir->p.features&LIRC_CAN_REC_MASK),
 				                 ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#650: FILE: drivers/char/lirc/lirc_dev.c:534:
+				  (unsigned long*)arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#653: FILE: drivers/char/lirc/lirc_dev.c:537:
+		if(!(ir->p.features&LIRC_CAN_REC_MASK))
 		                   ^

ERROR:SPACING: space required before the open parenthesis '('
#653: FILE: drivers/char/lirc/lirc_dev.c:537:
+		if(!(ir->p.features&LIRC_CAN_REC_MASK))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#654: FILE: drivers/char/lirc/lirc_dev.c:538:
+			return(-ENOSYS);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#656: FILE: drivers/char/lirc/lirc_dev.c:540:
+		result = get_user(mode, (unsigned long*)arg);

ERROR:SPACING: space required before the open parenthesis '('
#657: FILE: drivers/char/lirc/lirc_dev.c:541:
+		if(!result && !(LIRC_MODE2REC(mode) & ir->p.features)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#657: FILE: drivers/char/lirc/lirc_dev.c:541:
+		if(!result && !(LIRC_MODE2REC(mode) & ir->p.features)) {
+			result = -EINVAL;
+		}

WARNING:TYPO_SPELLING: 'eighter' may be misspelled - perhaps 'either'?
#662: FILE: drivers/char/lirc/lirc_dev.c:546:
+		 * eighter */
 		   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#662: FILE: drivers/char/lirc/lirc_dev.c:546:
+		 * eighter */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#688: FILE: drivers/char/lirc/lirc_dev.c:572:
+	int ret=0, written=0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#688: FILE: drivers/char/lirc/lirc_dev.c:572:
+	int ret=0, written=0;
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#694: FILE: drivers/char/lirc/lirc_dev.c:578:
+	if(ir->p.fops && ir->p.fops->read)

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/char/lirc/lirc_dev.c:588:
+         * to avoid losing scan code (in case when queue is awaken somewhere$

WARNING:TYPO_SPELLING: 'beetwen' may be misspelled - perhaps 'between'?
#705: FILE: drivers/char/lirc/lirc_dev.c:589:
+	 * beetwen while condition checking and scheduling)
 	   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#718: FILE: drivers/char/lirc/lirc_dev.c:602:
+			 * -ERESTARTSYS */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#719: FILE: drivers/char/lirc/lirc_dev.c:603:
+			if (written) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/char/lirc/lirc_dev.c:606:
+				dprintk(LOGHEAD "read result = -EWOULDBLOCK\n",
+						ir->p.name, ir->p.minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: drivers/char/lirc/lirc_dev.c:613:
+				dprintk(LOGHEAD "read result = -ERESTARTSYS\n",
+						ir->p.name, ir->p.minor);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#738: FILE: drivers/char/lirc/lirc_dev.c:622:
+			ret = copy_to_user((void *)buffer+written, buf,
 			                                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#754: FILE: drivers/char/lirc/lirc_dev.c:638:
+			   size_t length, loff_t * ppos)

ERROR:SPACING: space required before the open parenthesis '('
#761: FILE: drivers/char/lirc/lirc_dev.c:645:
+	if(ir->p.fops && ir->p.fops->write)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#767: FILE: drivers/char/lirc/lirc_dev.c:651:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#768: FILE: drivers/char/lirc/lirc_dev.c:652:
+static struct file_operations fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#769: FILE: drivers/char/lirc/lirc_dev.c:653:
+	read:    irctl_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#770: FILE: drivers/char/lirc/lirc_dev.c:654:
+	write:   irctl_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#770: FILE: drivers/char/lirc/lirc_dev.c:654:
+	write:   irctl_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#771: FILE: drivers/char/lirc/lirc_dev.c:655:
+	poll:    irctl_poll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#771: FILE: drivers/char/lirc/lirc_dev.c:655:
+	poll:    irctl_poll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#772: FILE: drivers/char/lirc/lirc_dev.c:656:
+	ioctl:   irctl_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#772: FILE: drivers/char/lirc/lirc_dev.c:656:
+	ioctl:   irctl_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#773: FILE: drivers/char/lirc/lirc_dev.c:657:
+	open:    irctl_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#773: FILE: drivers/char/lirc/lirc_dev.c:657:
+	open:    irctl_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#774: FILE: drivers/char/lirc/lirc_dev.c:658:
+	release: irctl_close
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#774: FILE: drivers/char/lirc/lirc_dev.c:658:
+	release: irctl_close

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#781: FILE: drivers/char/lirc/lirc_dev.c:665:
+	for (i=0; i < CONFIG_LIRC_MAX_DEV; ++i) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#781: FILE: drivers/char/lirc/lirc_dev.c:665:
+	for (i=0; i < CONFIG_LIRC_MAX_DEV; ++i) {
+		init_irctl(&irctls[i]);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#786: FILE: drivers/char/lirc/lirc_dev.c:670:
+	i = register_chrdev(IRCTL_DEV_MAJOR,
+				   IRCTL_DEV_NAME,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#790: FILE: drivers/char/lirc/lirc_dev.c:674:
+		printk ("lirc_dev: device registration failed with %d\n", i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#790: FILE: drivers/char/lirc/lirc_dev.c:674:
+		printk ("lirc_dev: device registration failed with %d\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#794: FILE: drivers/char/lirc/lirc_dev.c:678:
+	printk("lirc_dev: IR Remote Control driver registered, at major %d \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#794: FILE: drivers/char/lirc/lirc_dev.c:678:
+	printk("lirc_dev: IR Remote Control driver registered, at major %d \n",

ERROR:SPACING: space required before the open brace '{'
#806: FILE: drivers/char/lirc/lirc_dev.c:690:
+	if (0 > ret){

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#806: FILE: drivers/char/lirc/lirc_dev.c:690:
+	if (0 > ret){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#807: FILE: drivers/char/lirc/lirc_dev.c:691:
+		printk("lirc_dev: error in module_unregister_chrdev: %d\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#822: FILE: drivers/char/lirc/lirc_dev.c:706:
+EXPORT_SYMBOL(lirc_register_plugin);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#823: FILE: drivers/char/lirc/lirc_dev.c:707:
+EXPORT_SYMBOL(lirc_unregister_plugin);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#838: FILE: drivers/char/lirc/lirc_dev.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#844: FILE: drivers/char/lirc/lirc_dev.h:7:
+ * $Id: lirc_dev.h,v 1.11 2003/05/02 18:56:44 ranty Exp $

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#855: FILE: drivers/char/lirc/lirc_dev.h:18:
+#define mod(n, div) ((n) & ((div) -1))
                                   ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#862: FILE: drivers/char/lirc/lirc_dev.h:25:
+struct lirc_buffer
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: drivers/char/lirc/lirc_dev.h:26:
+        wait_queue_head_t wait_poll;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: drivers/char/lirc/lirc_dev.h:26:
+        wait_queue_head_t wait_poll;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#864: FILE: drivers/char/lirc/lirc_dev.h:27:
+	spinlock_t lock;

WARNING:TYPO_SPELLING: 'tunning' may be misspelled - perhaps 'tuning'?
#872: FILE: drivers/char/lirc/lirc_dev.h:35:
+	 * And should allow for some performance fine tunning later */
 	                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#872: FILE: drivers/char/lirc/lirc_dev.h:35:
+	 * And should allow for some performance fine tunning later */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#874: FILE: drivers/char/lirc/lirc_dev.h:37:
+};
+static inline int lirc_buffer_init(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: drivers/char/lirc/lirc_dev.h:38:
+static inline int lirc_buffer_init(struct lirc_buffer *buf,
+				    unsigned int chunk_size,

WARNING:TYPO_SPELLING: 'inconditional' may be misspelled - perhaps 'unconditional'?
#879: FILE: drivers/char/lirc/lirc_dev.h:42:
+	 * inconditional LIRC_BUFF_POWER_OF_2 optimization */
 	   ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#879: FILE: drivers/char/lirc/lirc_dev.h:42:
+	 * inconditional LIRC_BUFF_POWER_OF_2 optimization */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#882: FILE: drivers/char/lirc/lirc_dev.h:45:
+	buf->head = buf->tail = buf->fill = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#885: FILE: drivers/char/lirc/lirc_dev.h:48:
+	buf->data = kmalloc(size*chunk_size, GFP_KERNEL);
 	                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf->data"
#886: FILE: drivers/char/lirc/lirc_dev.h:49:
+	if (buf->data == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#888: FILE: drivers/char/lirc/lirc_dev.h:51:
+	memset(buf->data, 0, size*chunk_size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#891: FILE: drivers/char/lirc/lirc_dev.h:54:
+}
+static inline void lirc_buffer_free(struct lirc_buffer *buf)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#895: FILE: drivers/char/lirc/lirc_dev.h:58:
+	buf->head = buf->tail = buf->fill = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#899: FILE: drivers/char/lirc/lirc_dev.h:62:
+}
+static inline int  lirc_buffer_full(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#903: FILE: drivers/char/lirc/lirc_dev.h:66:
+}
+static inline int  lirc_buffer_empty(struct lirc_buffer *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#907: FILE: drivers/char/lirc/lirc_dev.h:70:
+}
+extern inline void lirc_buffer_lock(struct lirc_buffer *buf, unsigned long *flags)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#911: FILE: drivers/char/lirc/lirc_dev.h:74:
+}
+extern inline void lirc_buffer_unlock(struct lirc_buffer *buf, unsigned long *flags)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#915: FILE: drivers/char/lirc/lirc_dev.h:78:
+}
+static inline void _lirc_buffer_remove_1(struct lirc_buffer *buf)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#917: FILE: drivers/char/lirc/lirc_dev.h:80:
+	buf->head = mod(buf->head+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#920: FILE: drivers/char/lirc/lirc_dev.h:83:
+}
+static inline void lirc_buffer_remove_1(struct lirc_buffer *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#923: FILE: drivers/char/lirc/lirc_dev.h:86:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#927: FILE: drivers/char/lirc/lirc_dev.h:90:
+}
+static inline void _lirc_buffer_read_1(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: drivers/char/lirc/lirc_dev.h:91:
+static inline void _lirc_buffer_read_1(struct lirc_buffer *buf,
+				     unsigned char *dest)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#930: FILE: drivers/char/lirc/lirc_dev.h:93:
+	memcpy(dest, &buf->data[buf->head*buf->chunk_size], buf->chunk_size);
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#931: FILE: drivers/char/lirc/lirc_dev.h:94:
+	buf->head = mod(buf->head+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#934: FILE: drivers/char/lirc/lirc_dev.h:97:
+}
+static inline void lirc_buffer_read_1(struct lirc_buffer *buf,

WARNING:LINE_SPACING: Missing a blank line after declarations
#938: FILE: drivers/char/lirc/lirc_dev.h:101:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#942: FILE: drivers/char/lirc/lirc_dev.h:105:
+}
+static inline void _lirc_buffer_write_1(struct lirc_buffer *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/char/lirc/lirc_dev.h:106:
+static inline void _lirc_buffer_write_1(struct lirc_buffer *buf,
+				      unsigned char *orig)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#945: FILE: drivers/char/lirc/lirc_dev.h:108:
+	memcpy(&buf->data[buf->tail*buf->chunk_size], orig, buf->chunk_size);
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#946: FILE: drivers/char/lirc/lirc_dev.h:109:
+	buf->tail = mod(buf->tail+1, buf->size);
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#949: FILE: drivers/char/lirc/lirc_dev.h:112:
+}
+static inline void lirc_buffer_write_1(struct lirc_buffer *buf,

WARNING:LINE_SPACING: Missing a blank line after declarations
#953: FILE: drivers/char/lirc/lirc_dev.h:116:
+	unsigned long flags;
+	lirc_buffer_lock(buf, &flags);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#959: FILE: drivers/char/lirc/lirc_dev.h:122:
+struct lirc_plugin
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/char/lirc/lirc_dev.h:123:
+     char name[40];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: drivers/char/lirc/lirc_dev.h:124:
+     int minor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/char/lirc/lirc_dev.h:125:
+     int code_length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: drivers/char/lirc/lirc_dev.h:126:
+     int sample_rate;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: drivers/char/lirc/lirc_dev.h:127:
+     unsigned long features;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: drivers/char/lirc/lirc_dev.h:128:
+     void* data;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#965: FILE: drivers/char/lirc/lirc_dev.h:128:
+     void* data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: drivers/char/lirc/lirc_dev.h:129:
+     int (*get_key) (void* data, unsigned char* key, int key_no);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#966: FILE: drivers/char/lirc/lirc_dev.h:129:
+     int (*get_key) (void* data, unsigned char* key, int key_no);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#966: FILE: drivers/char/lirc/lirc_dev.h:129:
+     int (*get_key) (void* data, unsigned char* key, int key_no);

WARNING:SPACING: Unnecessary space before function pointer arguments
#966: FILE: drivers/char/lirc/lirc_dev.h:129:
+     int (*get_key) (void* data, unsigned char* key, int key_no);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: drivers/char/lirc/lirc_dev.h:130:
+     wait_queue_head_t* (*get_queue) (void* data);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#967: FILE: drivers/char/lirc/lirc_dev.h:130:
+     wait_queue_head_t* (*get_queue) (void* data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#967: FILE: drivers/char/lirc/lirc_dev.h:130:
+     wait_queue_head_t* (*get_queue) (void* data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: drivers/char/lirc/lirc_dev.h:131:
+     struct lirc_buffer *rbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: drivers/char/lirc/lirc_dev.h:132:
+     int (*set_use_inc) (void* data);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#969: FILE: drivers/char/lirc/lirc_dev.h:132:
+     int (*set_use_inc) (void* data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#969: FILE: drivers/char/lirc/lirc_dev.h:132:
+     int (*set_use_inc) (void* data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: drivers/char/lirc/lirc_dev.h:133:
+     void (*set_use_dec) (void* data);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#970: FILE: drivers/char/lirc/lirc_dev.h:133:
+     void (*set_use_dec) (void* data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#970: FILE: drivers/char/lirc/lirc_dev.h:133:
+     void (*set_use_dec) (void* data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);
                                                ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#971: FILE: drivers/char/lirc/lirc_dev.h:134:
+     int (*ioctl) (struct inode *,struct file *,unsigned int, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/char/lirc/lirc_dev.h:135:
+     struct file_operations *fops;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#972: FILE: drivers/char/lirc/lirc_dev.h:135:
+     struct file_operations *fops;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#974: FILE: drivers/char/lirc/lirc_dev.h:137:
+};
+/* name:

WARNING:TYPO_SPELLING: 'ofthe' may be misspelled - perhaps 'of the'?
#983: FILE: drivers/char/lirc/lirc_dev.h:146:
+ * length ofthe  remote control key code expressed in bits
           ^^^^^

WARNING:TYPO_SPELLING: 'preseve' may be misspelled - perhaps 'preserve'?
#986: FILE: drivers/char/lirc/lirc_dev.h:149:
+ * from most significant byte (device read will preseve this order)
                                                 ^^^^^^^

WARNING:TYPO_SPELLING: 'forwared' may be misspelled - perhaps 'forwarded'?
#1021: FILE: drivers/char/lirc/lirc_dev.h:184:
+ * Some ioctl's can be directly handled by lirc_dev but will be forwared here
                                                                 ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1029: FILE: drivers/char/lirc/lirc_dev.h:192:
+
+

WARNING:TYPO_SPELLING: 'contens' may be misspelled - perhaps 'contents'?
#1034: FILE: drivers/char/lirc/lirc_dev.h:197:
+ * contens of the structure pointed by p is copied
    ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1036: FILE: drivers/char/lirc/lirc_dev.h:199:
+extern int lirc_register_plugin(struct lirc_plugin *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1039: FILE: drivers/char/lirc/lirc_dev.h:202:
+/* returns negative value on error or 0 if success
+*/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1040: FILE: drivers/char/lirc/lirc_dev.h:203:
+extern int lirc_unregister_plugin(int minor);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1042: FILE: drivers/char/lirc/lirc_dev.h:205:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1047: FILE: drivers/char/lirc/lirc_gpio.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1071: FILE: drivers/char/lirc/lirc_gpio.c:25:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1072: FILE: drivers/char/lirc/lirc_gpio.c:26:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1074: FILE: drivers/char/lirc/lirc_gpio.c:28:
+ * $Id: lirc_gpio.c,v 1.30 2003/06/07 22:00:10 lirc Exp $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1092: FILE: drivers/char/lirc/lirc_gpio.c:46:
+static int debug = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1093: FILE: drivers/char/lirc/lirc_gpio.c:47:
+static int card = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1096: FILE: drivers/char/lirc/lirc_gpio.c:50:
+static unsigned long gpio_mask = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1097: FILE: drivers/char/lirc/lirc_gpio.c:51:
+static unsigned long gpio_enable = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1098: FILE: drivers/char/lirc/lirc_gpio.c:52:
+static unsigned long gpio_lock_mask = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1099: FILE: drivers/char/lirc/lirc_gpio.c:53:
+static unsigned long gpio_xor_mask = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1100: FILE: drivers/char/lirc/lirc_gpio.c:54:
+static unsigned int soft_gap = 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1103: FILE: drivers/char/lirc/lirc_gpio.c:57:
+MODULE_PARM(debug,"i");
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1104: FILE: drivers/char/lirc/lirc_gpio.c:58:
+MODULE_PARM(card,"i");
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1105: FILE: drivers/char/lirc/lirc_gpio.c:59:
+MODULE_PARM(minor,"i");
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1106: FILE: drivers/char/lirc/lirc_gpio.c:60:
+MODULE_PARM(gpio_mask,"l");
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1107: FILE: drivers/char/lirc/lirc_gpio.c:61:
+MODULE_PARM(gpio_lock_mask,"l");
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1108: FILE: drivers/char/lirc/lirc_gpio.c:62:
+MODULE_PARM(gpio_xor_mask,"l");
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: drivers/char/lirc/lirc_gpio.c:63:
+MODULE_PARM(soft_gap,"i");
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1110: FILE: drivers/char/lirc/lirc_gpio.c:64:
+MODULE_PARM(sample_rate,"b");
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1111: FILE: drivers/char/lirc/lirc_gpio.c:65:
+MODULE_PARM(bttv_id,"i");
                    ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1114: FILE: drivers/char/lirc/lirc_gpio.c:68:
+#define dprintk  if (debug) printk

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1129: FILE: drivers/char/lirc/lirc_gpio.c:83:
+	{BTTV_UNKNOWN,                0,          0,          0,         0,          0,   0,  1,  0},

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1131: FILE: drivers/char/lirc/lirc_gpio.c:85:
+	{BTTV_PXELVWPLTVPAK,          0, 0x00003e00,          0, 0x0010000,          0,   0, 15,  0},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1133: FILE: drivers/char/lirc/lirc_gpio.c:87:
+	{BTTV_PXELVWPLTVPRO,          0, 0x00001f00,          0, 0x0008000,          0, 500, 12, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1135: FILE: drivers/char/lirc/lirc_gpio.c:89:
+	{BTTV_PV_BT878P_9B,           0, 0x00001f00,          0, 0x0008000,          0, 500, 12, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1137: FILE: drivers/char/lirc/lirc_gpio.c:91:
+	{BTTV_AVERMEDIA,              0, 0x00f88000,          0, 0x0010000, 0x00010000,   0, 10, 32},

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1138: FILE: drivers/char/lirc/lirc_gpio.c:92:
+	{BTTV_AVPHONE98,     0x00011461, 0x003b8000, 0x00004000, 0x0800000, 0x00800000,   0, 10,  0}, /*mapped to Capture98*/

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1139: FILE: drivers/char/lirc/lirc_gpio.c:93:
+	{BTTV_AVERMEDIA98,   0x00021461, 0x003b8000, 0x00004000, 0x0800000, 0x00800000,   0, 10,  0}, /*mapped to Capture98*/

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1140: FILE: drivers/char/lirc/lirc_gpio.c:94:
+	{BTTV_AVPHONE98,     0x00031461, 0x00f88000,          0, 0x0010000, 0x00010000,   0, 10, 32}, /*mapped to Phone98*/

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1142: FILE: drivers/char/lirc/lirc_gpio.c:96:
+	{BTTV_AVERMEDIA98,   0x00041461, 0x00f88000,          0, 0x0010000, 0x00010000,   0, 10, 32}, /*mapped to Phone98*/

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1144: FILE: drivers/char/lirc/lirc_gpio.c:98:
+	{BTTV_AVERMEDIA98,   0x03001461, 0x00f88000,          0, 0x0010000, 0x00010000,   0, 10, 32}, /*mapped to Phone98*/

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1146: FILE: drivers/char/lirc/lirc_gpio.c:100:
+	{BTTV_AVERMEDIA98,   0x00000000, 0x00f88000,          0, 0x0010000, 0x00010000,   0, 10, 32}, /*mapped to Phone98*/

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1147: FILE: drivers/char/lirc/lirc_gpio.c:101:
+	{BTTV_CHRONOS_VS2,            0, 0x000000f8,          0, 0x0000100,          0,   0, 20,  0},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1150: FILE: drivers/char/lirc/lirc_gpio.c:104:
+	{BTTV_MIRO,                   0, 0x00001f00,          0, 0x0004000,          0,   0, 10, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1151: FILE: drivers/char/lirc/lirc_gpio.c:105:
+	{BTTV_DYNALINK,               0, 0x00001f00,          0, 0x0004000,          0,   0, 10, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1152: FILE: drivers/char/lirc/lirc_gpio.c:106:
+	{BTTV_WINVIEW_601,            0, 0x00001f00,          0, 0x0004000,          0,   0,  0, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1154: FILE: drivers/char/lirc/lirc_gpio.c:108:
+	{BTTV_KWORLD,                 0, 0x00007f00,          0, 0x0004000,          0,   0, 12, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1157: FILE: drivers/char/lirc/lirc_gpio.c:111:
+	{BTTV_MAGICTVIEW061,          0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1158: FILE: drivers/char/lirc/lirc_gpio.c:112:
+ 	{BTTV_MAGICTVIEW063,          0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: drivers/char/lirc/lirc_gpio.c:112:
+ ^I{BTTV_MAGICTVIEW063,          0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1158: FILE: drivers/char/lirc/lirc_gpio.c:112:
+ ^I{BTTV_MAGICTVIEW063,          0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: drivers/char/lirc/lirc_gpio.c:112:
+ ^I{BTTV_MAGICTVIEW063,          0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1159: FILE: drivers/char/lirc/lirc_gpio.c:113:
+ 	{BTTV_PHOEBE_TVMAS,           0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: drivers/char/lirc/lirc_gpio.c:113:
+ ^I{BTTV_PHOEBE_TVMAS,           0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1159: FILE: drivers/char/lirc/lirc_gpio.c:113:
+ ^I{BTTV_PHOEBE_TVMAS,           0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: drivers/char/lirc/lirc_gpio.c:113:
+ ^I{BTTV_PHOEBE_TVMAS,           0, 0x0028e000,          0, 0x0020000,          0,   0, 20, 32},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1161: FILE: drivers/char/lirc/lirc_gpio.c:115:
+        {BTTV_BESTBUY_EASYTV,         0, 0x00007F00,          0, 0x0004000,          0,   0, 10,  8},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: drivers/char/lirc/lirc_gpio.c:115:
+        {BTTV_BESTBUY_EASYTV,         0, 0x00007F00,          0, 0x0004000,          0,   0, 10,  8},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: drivers/char/lirc/lirc_gpio.c:115:
+        {BTTV_BESTBUY_EASYTV,         0, 0x00007F00,          0, 0x0004000,          0,   0, 10,  8},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1162: FILE: drivers/char/lirc/lirc_gpio.c:116:
+        {BTTV_BESTBUY_EASYTV2,        0, 0x00007F00,          0, 0x0008000,          0,   0, 10,  8},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1162: FILE: drivers/char/lirc/lirc_gpio.c:116:
+        {BTTV_BESTBUY_EASYTV2,        0, 0x00007F00,          0, 0x0008000,          0,   0, 10,  8},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: drivers/char/lirc/lirc_gpio.c:116:
+        {BTTV_BESTBUY_EASYTV2,        0, 0x00007F00,          0, 0x0008000,          0,   0, 10,  8},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1165: FILE: drivers/char/lirc/lirc_gpio.c:119:
+	{BTTV_FLYVIDEO,               0, 0x000000f8,          0,         0,          0,   0,  0, 42},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1166: FILE: drivers/char/lirc/lirc_gpio.c:120:
+ 	{BTTV_FLYVIDEO_98,            0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: drivers/char/lirc/lirc_gpio.c:120:
+ ^I{BTTV_FLYVIDEO_98,            0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1166: FILE: drivers/char/lirc/lirc_gpio.c:120:
+ ^I{BTTV_FLYVIDEO_98,            0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: drivers/char/lirc/lirc_gpio.c:120:
+ ^I{BTTV_FLYVIDEO_98,            0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1167: FILE: drivers/char/lirc/lirc_gpio.c:121:
+ 	{BTTV_TYPHOON_TVIEW,          0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: drivers/char/lirc/lirc_gpio.c:121:
+ ^I{BTTV_TYPHOON_TVIEW,          0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1167: FILE: drivers/char/lirc/lirc_gpio.c:121:
+ ^I{BTTV_TYPHOON_TVIEW,          0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: drivers/char/lirc/lirc_gpio.c:121:
+ ^I{BTTV_TYPHOON_TVIEW,          0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1170: FILE: drivers/char/lirc/lirc_gpio.c:124:
+	{BTTV_FLYVIDEO_98FM,          0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 42},

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1176: FILE: drivers/char/lirc/lirc_gpio.c:130:
+	 * based on the card id: */

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1177: FILE: drivers/char/lirc/lirc_gpio.c:131:
+	{BTTV_WINFAST2000,   0x6606107d, 0x000008f8,          0, 0x0000100,          0,   0,  0, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1179: FILE: drivers/char/lirc/lirc_gpio.c:133:
+	{BTTV_WINFAST2000,            0, 0x000000f8,          0, 0x0000100,          0,   0,  0, 32},

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1181: FILE: drivers/char/lirc/lirc_gpio.c:135:
+	{BTTV_GVBCTV5PCI,             0, 0x00f0b000,          0,         0,          0,   0, 20,  8},

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1185: FILE: drivers/char/lirc/lirc_gpio.c:139:
+static unsigned char code_length = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1196: FILE: drivers/char/lirc/lirc_gpio.c:150:
+static unsigned char gpio_pre_shift = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1198: FILE: drivers/char/lirc/lirc_gpio.c:152:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1204: FILE: drivers/char/lirc/lirc_gpio.c:158:
+	for (c=0,i=0; i<bits; i++) {
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1204: FILE: drivers/char/lirc/lirc_gpio.c:158:
+	for (c=0,i=0; i<bits; i++) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1204: FILE: drivers/char/lirc/lirc_gpio.c:158:
+	for (c=0,i=0; i<bits; i++) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1204: FILE: drivers/char/lirc/lirc_gpio.c:158:
+	for (c=0,i=0; i<bits; i++) {
 	               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1204: FILE: drivers/char/lirc/lirc_gpio.c:158:
+	for (c=0,i=0; i<bits; i++) {
+		c |= (((data & (1<<i)) ? 1:0)) << (bits-1-i);
+	}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1205: FILE: drivers/char/lirc/lirc_gpio.c:159:
+		c |= (((data & (1<<i)) ? 1:0)) << (bits-1-i);
 		                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1205: FILE: drivers/char/lirc/lirc_gpio.c:159:
+		c |= (((data & (1<<i)) ? 1:0)) << (bits-1-i);
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1205: FILE: drivers/char/lirc/lirc_gpio.c:159:
+		c |= (((data & (1<<i)) ? 1:0)) << (bits-1-i);
 		                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1205: FILE: drivers/char/lirc/lirc_gpio.c:159:
+		c |= (((data & (1<<i)) ? 1:0)) << (bits-1-i);
 		                                         ^

CHECK:SPACING: No space is necessary after a cast
#1216: FILE: drivers/char/lirc/lirc_gpio.c:170:
+	dprintk(LOGHEAD "gpio_val is %lx\n",card,(unsigned long) gpio_val);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1216: FILE: drivers/char/lirc/lirc_gpio.c:170:
+	dprintk(LOGHEAD "gpio_val is %lx\n",card,(unsigned long) gpio_val);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1216: FILE: drivers/char/lirc/lirc_gpio.c:170:
+	dprintk(LOGHEAD "gpio_val is %lx\n",card,(unsigned long) gpio_val);
 	                                        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1220: FILE: drivers/char/lirc/lirc_gpio.c:174:
+	if (gpio_lock_mask && (gpio_val & gpio_lock_mask)) {
+		return -EBUSY;
+	}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1224: FILE: drivers/char/lirc/lirc_gpio.c:178:
+	switch (bttv_id)
+	{

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1248: FILE: drivers/char/lirc/lirc_gpio.c:202:
+		if (mask & 1u) {
+			codes[0] |= (gpio_val & 1u) << shift++;
+		}

CHECK:SPACING: No space is necessary after a cast
#1255: FILE: drivers/char/lirc/lirc_gpio.c:209:
+	dprintk(LOGHEAD "code is %lx\n",card,(unsigned long) codes[0]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/char/lirc/lirc_gpio.c:209:
+	dprintk(LOGHEAD "code is %lx\n",card,(unsigned long) codes[0]);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: drivers/char/lirc/lirc_gpio.c:209:
+	dprintk(LOGHEAD "code is %lx\n",card,(unsigned long) codes[0]);
 	                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1256: FILE: drivers/char/lirc/lirc_gpio.c:210:
+	switch (bttv_id)
+	{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1259: FILE: drivers/char/lirc/lirc_gpio.c:213:
+		codes[2] = (codes[0]<<2)&0xff;
 		                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1259: FILE: drivers/char/lirc/lirc_gpio.c:213:
+		codes[2] = (codes[0]<<2)&0xff;
 		                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1260: FILE: drivers/char/lirc/lirc_gpio.c:214:
+		codes[3] = (~codes[2])&0xff;
 		                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1265: FILE: drivers/char/lirc/lirc_gpio.c:219:
+		codes[2] = ((codes[0]&(~0x1))<<2)&0xff;
 		                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1265: FILE: drivers/char/lirc/lirc_gpio.c:219:
+		codes[2] = ((codes[0]&(~0x1))<<2)&0xff;
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1265: FILE: drivers/char/lirc/lirc_gpio.c:219:
+		codes[2] = ((codes[0]&(~0x1))<<2)&0xff;
 		                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1266: FILE: drivers/char/lirc/lirc_gpio.c:220:
+		codes[3] = (~codes[2])&0xff;
 		                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1267: FILE: drivers/char/lirc/lirc_gpio.c:221:
+		if (codes[0]&0x1) {
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1283: FILE: drivers/char/lirc/lirc_gpio.c:237:
+		codes[4]=codes[0]<<3;
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1283: FILE: drivers/char/lirc/lirc_gpio.c:237:
+		codes[4]=codes[0]<<3;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1284: FILE: drivers/char/lirc/lirc_gpio.c:238:
+		codes[5]=((~codes[4])&0xff);
 		        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1284: FILE: drivers/char/lirc/lirc_gpio.c:238:
+		codes[5]=((~codes[4])&0xff);
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1286: FILE: drivers/char/lirc/lirc_gpio.c:240:
+		codes[0]=0x00;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1287: FILE: drivers/char/lirc/lirc_gpio.c:241:
+		codes[1]=0x1A;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1288: FILE: drivers/char/lirc/lirc_gpio.c:242:
+		codes[2]=0x1F;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1289: FILE: drivers/char/lirc/lirc_gpio.c:243:
+		codes[3]=0x2F;
 		        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: drivers/char/lirc/lirc_gpio.c:245:
+        case BTTV_MAGICTVIEW061:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: drivers/char/lirc/lirc_gpio.c:245:
+        case BTTV_MAGICTVIEW061:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1292: FILE: drivers/char/lirc/lirc_gpio.c:246:
+        case BTTV_MAGICTVIEW063:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: drivers/char/lirc/lirc_gpio.c:246:
+        case BTTV_MAGICTVIEW063:$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1294: FILE: drivers/char/lirc/lirc_gpio.c:248:
+		codes[0] = (codes[0]&0x01)
 		                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#1295: FILE: drivers/char/lirc/lirc_gpio.c:249:
+			|((codes[0]&0x02)<<1)
 			^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1295: FILE: drivers/char/lirc/lirc_gpio.c:249:
+			|((codes[0]&0x02)<<1)
 			           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1295: FILE: drivers/char/lirc/lirc_gpio.c:249:
+			|((codes[0]&0x02)<<1)
 			                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#1296: FILE: drivers/char/lirc/lirc_gpio.c:250:
+			|((codes[0]&0x04)<<2)
 			^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1296: FILE: drivers/char/lirc/lirc_gpio.c:250:
+			|((codes[0]&0x04)<<2)
 			           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1296: FILE: drivers/char/lirc/lirc_gpio.c:250:
+			|((codes[0]&0x04)<<2)
 			                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#1297: FILE: drivers/char/lirc/lirc_gpio.c:251:
+			|((codes[0]&0x08)>>2)
 			^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1297: FILE: drivers/char/lirc/lirc_gpio.c:251:
+			|((codes[0]&0x08)>>2)
 			           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1297: FILE: drivers/char/lirc/lirc_gpio.c:251:
+			|((codes[0]&0x08)>>2)
 			                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#1298: FILE: drivers/char/lirc/lirc_gpio.c:252:
+			|((codes[0]&0x10)>>1);
 			^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1298: FILE: drivers/char/lirc/lirc_gpio.c:252:
+			|((codes[0]&0x10)>>1);
 			           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1298: FILE: drivers/char/lirc/lirc_gpio.c:252:
+			|((codes[0]&0x10)>>1);
 			                 ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1299: FILE: drivers/char/lirc/lirc_gpio.c:253:
+		/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: drivers/char/lirc/lirc_gpio.c:263:
+		codes[2] = reverse(codes[0],8);
 		                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1310: FILE: drivers/char/lirc/lirc_gpio.c:264:
+		codes[3] = (~codes[2])&0xff;
 		                      ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1314: FILE: drivers/char/lirc/lirc_gpio.c:268:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: drivers/char/lirc/lirc_gpio.c:272:
+ ^Icase BTTV_FLYVIDEO_98:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1318: FILE: drivers/char/lirc/lirc_gpio.c:272:
+ ^Icase BTTV_FLYVIDEO_98:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: drivers/char/lirc/lirc_gpio.c:272:
+ ^Icase BTTV_FLYVIDEO_98:$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1320: FILE: drivers/char/lirc/lirc_gpio.c:274:
+		codes[4]=codes[0]<<3;
 		        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1320: FILE: drivers/char/lirc/lirc_gpio.c:274:
+		codes[4]=codes[0]<<3;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1321: FILE: drivers/char/lirc/lirc_gpio.c:275:
+		codes[5]=(~codes[4])&0xff;
 		        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1321: FILE: drivers/char/lirc/lirc_gpio.c:275:
+		codes[5]=(~codes[4])&0xff;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1323: FILE: drivers/char/lirc/lirc_gpio.c:277:
+		codes[0]=0x00;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1324: FILE: drivers/char/lirc/lirc_gpio.c:278:
+		codes[1]=0x1A;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1325: FILE: drivers/char/lirc/lirc_gpio.c:279:
+		codes[2]=0x1F;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1326: FILE: drivers/char/lirc/lirc_gpio.c:280:
+		codes[3]=0x2F;
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1331: FILE: drivers/char/lirc/lirc_gpio.c:285:
+		codes[2] = reverse(codes[0],8);
 		                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1332: FILE: drivers/char/lirc/lirc_gpio.c:286:
+		codes[3] = (~codes[2])&0xff;
 		                      ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1343: FILE: drivers/char/lirc/lirc_gpio.c:297:
+static int get_key(void* data, unsigned char *key, int key_no)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1345: FILE: drivers/char/lirc/lirc_gpio.c:299:
+	static unsigned long next_time = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_key', this function's name, in a string
#1352: FILE: drivers/char/lirc/lirc_gpio.c:306:
+			dprintk(LOGHEAD "something wrong in get_key\n", card);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1364: FILE: drivers/char/lirc/lirc_gpio.c:318:
+	if (build_key(code, cur_codes)) {
+		return -EFAULT;
+	}

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1370: FILE: drivers/char/lirc/lirc_gpio.c:324:
+		    jiffies < next_time) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1383: FILE: drivers/char/lirc/lirc_gpio.c:337:
+static int set_use_inc(void* data)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1389: FILE: drivers/char/lirc/lirc_gpio.c:343:
+static void set_use_dec(void* data)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1394: FILE: drivers/char/lirc/lirc_gpio.c:348:
+static wait_queue_head_t* get_queue(void* data)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1394: FILE: drivers/char/lirc/lirc_gpio.c:348:
+static wait_queue_head_t* get_queue(void* data)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1430: FILE: drivers/char/lirc/lirc_gpio.c:384:
+			if (mask & 1u) {
+				plugin.code_length++;
+			}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1437: FILE: drivers/char/lirc/lirc_gpio.c:391:
+	code_bytes = (plugin.code_length/8) + (plugin.code_length%8 ? 1 : 0);
 	                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1437: FILE: drivers/char/lirc/lirc_gpio.c:391:
+	code_bytes = (plugin.code_length/8) + (plugin.code_length%8 ? 1 : 0);
 	                                                         ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1438: FILE: drivers/char/lirc/lirc_gpio.c:392:
+	if (MAX_BYTES < code_bytes) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1439: FILE: drivers/char/lirc/lirc_gpio.c:393:
+		printk (LOGHEAD "scan code too long (%d bytes)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1439: FILE: drivers/char/lirc/lirc_gpio.c:393:
+		printk (LOGHEAD "scan code too long (%d bytes)\n",

ERROR:SPACING: space required before the open parenthesis '('
#1445: FILE: drivers/char/lirc/lirc_gpio.c:399:
+		if(bttv_gpio_enable(card, gpio_enable, gpio_enable)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1446: FILE: drivers/char/lirc/lirc_gpio.c:400:
+			printk(LOGHEAD "gpio_enable failure\n", minor);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1451: FILE: drivers/char/lirc/lirc_gpio.c:405:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1453: FILE: drivers/char/lirc/lirc_gpio.c:407:
+	soft_gap = (soft_gap*HZ) / 1000;
 	                    ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1460: FILE: drivers/char/lirc/lirc_gpio.c:414:
+	if (0 > ret) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1461: FILE: drivers/char/lirc/lirc_gpio.c:415:
+		printk (LOGHEAD "device registration failed with %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1461: FILE: drivers/char/lirc/lirc_gpio.c:415:
+		printk (LOGHEAD "device registration failed with %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1467: FILE: drivers/char/lirc/lirc_gpio.c:421:
+	printk(LOGHEAD "driver registered\n", minor);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1474: FILE: drivers/char/lirc/lirc_gpio.c:428:
+	int type,cardid,card_type;
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1474: FILE: drivers/char/lirc/lirc_gpio.c:428:
+	int type,cardid,card_type;
 	               ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1476: FILE: drivers/char/lirc/lirc_gpio.c:430:
+	if (CONFIG_LIRC_MAX_DEV < minor) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1477: FILE: drivers/char/lirc/lirc_gpio.c:431:
+		printk("lirc_gpio: parameter minor (%d) must be less than %d!\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1478: FILE: drivers/char/lirc/lirc_gpio.c:432:
+		       minor, CONFIG_LIRC_MAX_DEV-1);
 		                                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1488: FILE: drivers/char/lirc/lirc_gpio.c:442:
+		if (sample_rate!=0 && (2 > sample_rate || 50 < sample_rate)) {
 		               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1489: FILE: drivers/char/lirc/lirc_gpio.c:443:
+			printk(LOGHEAD "parameter sample_rate "

WARNING:TYPO_SPELLING: 'beetween' may be misspelled - perhaps 'between'?
#1490: FILE: drivers/char/lirc/lirc_gpio.c:444:
+			       "must be beetween 2 and 50!\n", minor);
 			                ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1490: FILE: drivers/char/lirc/lirc_gpio.c:444:
+			printk(LOGHEAD "parameter sample_rate "
+			       "must be beetween 2 and 50!\n", minor);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1494: FILE: drivers/char/lirc/lirc_gpio.c:448:
+		if (sample_rate!=0 && soft_gap &&
 		               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1495: FILE: drivers/char/lirc/lirc_gpio.c:449:
+		    ((2000/sample_rate) > soft_gap || 1000 < soft_gap)) {
 		          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1496: FILE: drivers/char/lirc/lirc_gpio.c:450:
+			printk(LOGHEAD "parameter soft_gap "

WARNING:TYPO_SPELLING: 'beetween' may be misspelled - perhaps 'between'?
#1497: FILE: drivers/char/lirc/lirc_gpio.c:451:
+			       "must be beetween %d and 1000!\n",
 			                ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1497: FILE: drivers/char/lirc/lirc_gpio.c:451:
+			printk(LOGHEAD "parameter soft_gap "
+			       "must be beetween %d and 1000!\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1498: FILE: drivers/char/lirc/lirc_gpio.c:452:
+			       minor, 2000/sample_rate);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                                        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
 		                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1502: FILE: drivers/char/lirc/lirc_gpio.c:456:
+		if(bttv_get_cardinfo(card,&type,&cardid)==-1) {
+			printk(LOGHEAD "could not get card type\n", minor);
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1503: FILE: drivers/char/lirc/lirc_gpio.c:457:
+			printk(LOGHEAD "could not get card type\n", minor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1505: FILE: drivers/char/lirc/lirc_gpio.c:459:
+		printk(LOGHEAD "card type 0x%x, id 0x%x\n",minor,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1505: FILE: drivers/char/lirc/lirc_gpio.c:459:
+		printk(LOGHEAD "card type 0x%x, id 0x%x\n",minor,
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1506: FILE: drivers/char/lirc/lirc_gpio.c:460:
+		       type,cardid);
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1509: FILE: drivers/char/lirc/lirc_gpio.c:463:
+			printk(LOGHEAD "cannot detect TV card nr %d!\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1514: FILE: drivers/char/lirc/lirc_gpio.c:468:
+		     card_type < sizeof(rcv_infos)/sizeof(struct rcv_info);
 		                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1530: FILE: drivers/char/lirc/lirc_gpio.c:484:
+		if (type==BTTV_AVPHONE98 && cardid==0x00011461)	{
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1530: FILE: drivers/char/lirc/lirc_gpio.c:484:
+		if (type==BTTV_AVPHONE98 && cardid==0x00011461)	{
 		                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1530: FILE: drivers/char/lirc/lirc_gpio.c:484:
+		if (type==BTTV_AVPHONE98 && cardid==0x00011461)	{
+			bttv_id = BTTV_AVERMEDIA98;
+		}

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1533: FILE: drivers/char/lirc/lirc_gpio.c:487:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00041461) {
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1533: FILE: drivers/char/lirc/lirc_gpio.c:487:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00041461) {
 		                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1533: FILE: drivers/char/lirc/lirc_gpio.c:487:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00041461) {
+			bttv_id = BTTV_AVPHONE98;
+		}

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1536: FILE: drivers/char/lirc/lirc_gpio.c:490:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x03001461) {
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1536: FILE: drivers/char/lirc/lirc_gpio.c:490:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x03001461) {
 		                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1536: FILE: drivers/char/lirc/lirc_gpio.c:490:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x03001461) {
+			bttv_id = BTTV_AVPHONE98;
+		}

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1539: FILE: drivers/char/lirc/lirc_gpio.c:493:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00000000) {
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1539: FILE: drivers/char/lirc/lirc_gpio.c:493:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00000000) {
 		                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1539: FILE: drivers/char/lirc/lirc_gpio.c:493:
+		if (type==BTTV_AVERMEDIA98 && cardid==0x00000000) {
+			bttv_id = BTTV_AVPHONE98;
+		}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1542: FILE: drivers/char/lirc/lirc_gpio.c:496:
+		if (card_type == sizeof(rcv_infos)/sizeof(struct rcv_info)) {
 		                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1543: FILE: drivers/char/lirc/lirc_gpio.c:497:
+			printk(LOGHEAD "TV card type %x not supported!\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1560: FILE: drivers/char/lirc/lirc_gpio.c:514:
+	if (0 > ret) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1561: FILE: drivers/char/lirc/lirc_gpio.c:515:
+		printk(LOGHEAD "error in lirc_unregister_minor: %d\n"

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1570: FILE: drivers/char/lirc/lirc_gpio.c:524:
+		if (0 > ret) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1571: FILE: drivers/char/lirc/lirc_gpio.c:525:
+			printk(LOGHEAD "error in lirc_unregister_minor: %d!!!\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1579: FILE: drivers/char/lirc/lirc_gpio.c:533:
+}
+/* Dont try to use it as a static version !  */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1598: FILE: include/linux/lirc.h:1:
+/*      $Id: lirc.h,v 5.8 2003/01/26 12:57:59 lirc Exp $      */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1598: FILE: include/linux/lirc.h:1:
+/*      $Id: lirc.h,v 5.8 2003/01/26 12:57:59 lirc Exp $      */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1603: FILE: include/linux/lirc.h:6:
+#if defined (__linux__)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1608: FILE: include/linux/lirc.h:11:
+typedef u_int32_t __u32;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1614: FILE: include/linux/lirc.h:17:
+typedef int lirc_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1620: FILE: include/linux/lirc.h:23:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1633: FILE: include/linux/lirc.h:36:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1661: FILE: include/linux/lirc.h:64:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1662: FILE: include/linux/lirc.h:65:
+#define LIRC_CAN_SEND(x) ((x)&LIRC_CAN_SEND_MASK)
                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1663: FILE: include/linux/lirc.h:66:
+#define LIRC_CAN_REC(x) ((x)&LIRC_CAN_REC_MASK)
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1690: FILE: include/linux/lirc.h:93:
+/* to set a range use
+   LIRC_SET_REC_DUTY_CYCLE_RANGE/LIRC_SET_REC_CARRIER_RANGE with the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1692: FILE: include/linux/lirc.h:95:
+   LIRC_SET_REC_DUTY_CYCLE/LIRC_SET_REC_CARRIER with the upper bound */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 140 errors, 212 warnings, 108 checks, 1618 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
