WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#852: FILE: arch/ppc/platforms/83xx/Kconfig:1:
+config 83xx
+	bool "PowerQUICC II Pro (83xx) Support"
+	depends on 6xx
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#859: FILE: arch/ppc/platforms/83xx/Kconfig:8:
+choice
+	prompt "Machine Type"
+	depends on 83xx
+	default MPC834x_SYS
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#864: FILE: arch/ppc/platforms/83xx/Kconfig:13:
+config MPC834x_SYS
+	bool "Freescale MPC834x SYS"
+	help
+	  This option enables support for the MPC 834x SYS evaluation board.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#896: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#897: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:2:
+ * arch/ppc/platforms/83xx/mpc834x_sys.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#933: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:38:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#935: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:40:
+#include <asm/atomic.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#937: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:42:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#945: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:50:
+#include <asm/kgdb.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#952: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:57:
+unsigned long isa_io_base = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#953: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:58:
+unsigned long isa_mem_base = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#958: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:63:
+unsigned char __res[sizeof (bd_t)];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#963: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:68:
+/* NEED mpc83xx_map_irq & mpc83xx_exclude_device
+   see platforms/85xx/mpc85xx_ads_common.c */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#963: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:68:
+   see platforms/85xx/mpc85xx_ads_common.c */

CHECK:SPACING: No space is necessary after a cast
#974: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:79:
+	bd_t *binfo = (bd_t *) __res;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#982: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:87:
+	/* Set loops_per_jiffy to a half-way reasonable value,
+	   for use until calibrate_delay gets called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#982: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:87:
+	   for use until calibrate_delay gets called. */

CHECK:SPACING: No space is necessary after a cast
#992: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:97:
+	pdata = (struct gianfar_platform_data *) ppc_sys_get_pdata(MPC83xx_TSEC1);

CHECK:CAMELCASE: Avoid CamelCase: <interruptPHY>
#994: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:99:
+	pdata->interruptPHY = MPC83xx_IRQ_EXT1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#1000: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:105:
+	pdata = (struct gianfar_platform_data *) ppc_sys_get_pdata(MPC83xx_TSEC2);

CHECK:CAMELCASE: Avoid CamelCase: <Root_RAM0>
#1010: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:115:
+		ROOT_DEV = Root_RAM0;

ERROR:SPACING: exactly one space required after that #ifdef
#1013: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:118:
+#ifdef  CONFIG_ROOT_NFS

CHECK:CAMELCASE: Avoid CamelCase: <Root_NFS>
#1014: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:119:
+		ROOT_DEV = Root_NFS;

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA1>
#1016: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:121:
+		ROOT_DEV = Root_HDA1;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1024: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:129:
+	io_block_mapping(VIRT_IMMRBAR, immrbar, 1024*1024, _PAGE_IO);
 	                                            ^

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:137:
+	bd_t *binfo = (bd_t *) __res;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1042: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:147:
+	seq_printf(m, "Vendor\t\t: Freescale Inc.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:166:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1065: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:170:
+	bd_t *binfo = (bd_t *) __res;

WARNING:INLINE: plain inline is preferred over __inline__
#1086: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:191:
+static __inline__ void

WARNING:MEMORY_BARRIER: memory barrier without comment
#1093: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:198:
+	mb();

CHECK:SPACING: No space is necessary after a cast
#1100: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:205:
+	bd_t *binfo = (bd_t *) __res;

CHECK:SPACING: No space is necessary after a cast
#1110: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:215:
+		memcpy((void *) __res, (void *) (r3 + KERNELBASE),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1111: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:216:
+		       sizeof (bd_t));

CHECK:SPACING: No space is necessary after a cast
#1127: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:232:
+		*(char *) (r7 + KERNELBASE) = 0;

CHECK:SPACING: No space is necessary after a cast
#1128: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:233:
+		strcpy(cmd_line, (char *) (r6 + KERNELBASE));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1139: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:244:
+		memset(&p, 0, sizeof (p));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1146: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:251:
+		memset(&p, 0, sizeof (p));

WARNING:RETURN_VOID: void function return statements are not generally useful
#1185: FILE: arch/ppc/platforms/83xx/mpc834x_sys.c:290:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1190: FILE: arch/ppc/platforms/83xx/mpc834x_sys.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1191: FILE: arch/ppc/platforms/83xx/mpc834x_sys.h:2:
+ * arch/ppc/platforms/83xx/mpc834x_sys.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1245: FILE: arch/ppc/platforms/83xx/mpc83xx_devices.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1246: FILE: arch/ppc/platforms/83xx/mpc83xx_devices.c:2:
+ * arch/ppc/platforms/83xx/mpc83xx_devices.c

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mach_mpc83xx_init', this function's name, in a string
#1476: FILE: arch/ppc/platforms/83xx/mpc83xx_devices.c:232:
+		ppc_md.progress("mach_mpc83xx_init:enter", 0);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1486: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1487: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:2:
+ * arch/ppc/platforms/83xx/mpc83xx_sys.c

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1510: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:25:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1511: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:26:
+^I^I.value ^I^I= 0x80500000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1522: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:37:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1523: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:38:
+^I^I.value ^I^I= 0x80510000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1534: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:49:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1535: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:50:
+^I^I.value ^I^I= 0x80520000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1546: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:61:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1547: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:62:
+^I^I.value ^I^I= 0x80530000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1558: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:73:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1559: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:74:
+^I^I.value ^I^I= 0x80540000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1570: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:85:
+^I^I.mask ^I^I= 0xFFFF0000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1571: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:86:
+^I^I.value ^I^I= 0x80550000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1582: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:97:
+^I^I.mask ^I^I= 0x00000000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1583: FILE: arch/ppc/platforms/83xx/mpc83xx_sys.c:98:
+^I^I.value ^I^I= 0x00000000,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1602: FILE: arch/ppc/syslib/ipic.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1624: FILE: arch/ppc/syslib/ipic.c:23:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1631: FILE: arch/ppc/syslib/ipic.c:30:
+static struct ipic * primary_ipic;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1967: FILE: arch/ppc/syslib/ipic.c:366:
+static inline u32 ipic_read(volatile u32 __iomem *base, unsigned int reg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1972: FILE: arch/ppc/syslib/ipic.c:371:
+static inline void ipic_write(volatile u32 __iomem *base, unsigned int reg, u32 value)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1977: FILE: arch/ppc/syslib/ipic.c:376:
+static inline struct ipic * ipic_from_irq(unsigned int irq)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2019: FILE: arch/ppc/syslib/ipic.c:418:
+	if (!(irq_desc[irq].status & (IRQ_DISABLED|IRQ_INPROGRESS)))
 	                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2032: FILE: arch/ppc/syslib/ipic.c:431:
+void __init ipic_init(phys_addr_t phys_addr,
+		unsigned int flags,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2047: FILE: arch/ppc/syslib/ipic.c:446:
+	 * configure SICFR accordingly */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2076: FILE: arch/ppc/syslib/ipic.c:475:
+		irq_desc[i+irq_offset].handler = &ipic;
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2077: FILE: arch/ppc/syslib/ipic.c:476:
+		irq_desc[i+irq_offset].status = IRQ_LEVEL;
 		          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2092: FILE: arch/ppc/syslib/ipic.c:491:
+	printk ("IPIC (%d IRQ sources, %d External IRQs) at %p\n", NR_IPIC_INTS,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2092: FILE: arch/ppc/syslib/ipic.c:491:
+	printk ("IPIC (%d IRQ sources, %d External IRQs) at %p\n", NR_IPIC_INTS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2093: FILE: arch/ppc/syslib/ipic.c:492:
+	printk ("IPIC (%d IRQ sources, %d External IRQs) at %p\n", NR_IPIC_INTS,
+			senses_count, primary_ipic->regs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2135: FILE: arch/ppc/syslib/ipic.c:534:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2208: FILE: arch/ppc/syslib/ipic.c:607:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2232: FILE: arch/ppc/syslib/ipic.c:631:
+	printk(KERN_DEBUG "Registering ipic with sysfs...\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2236: FILE: arch/ppc/syslib/ipic.c:635:
+		printk(KERN_ERR "Failed registering ipic sys class\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2241: FILE: arch/ppc/syslib/ipic.c:640:
+		printk(KERN_ERR "Failed registering ipic sys device\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2252: FILE: arch/ppc/syslib/ipic.h:1:
+/*

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2286: FILE: arch/ppc/syslib/ipic.h:35:
+	volatile u32 __iomem	*regs;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2296: FILE: arch/ppc/syslib/ipic.h:45:
+	u8	bit;		/* register bit position (as per doc)
+				   bit mask = 1 << (31 - bit) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2296: FILE: arch/ppc/syslib/ipic.h:45:
+				   bit mask = 1 << (31 - bit) */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2305: FILE: arch/ppc/syslib/ppc83xx_setup.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2306: FILE: arch/ppc/syslib/ppc83xx_setup.c:2:
+ * arch/ppc/syslib/ppc83xx_setup.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kgdb.h> instead of <asm/kgdb.h>
#2335: FILE: arch/ppc/syslib/ppc83xx_setup.c:31:
+#include <asm/kgdb.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#2345: FILE: arch/ppc/syslib/ppc83xx_setup.c:41:
+        bd_t *binfo;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2345: FILE: arch/ppc/syslib/ppc83xx_setup.c:41:
+        bd_t *binfo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2347: FILE: arch/ppc/syslib/ppc83xx_setup.c:43:
+        binfo = (bd_t *) __res;$

CHECK:SPACING: No space is necessary after a cast
#2347: FILE: arch/ppc/syslib/ppc83xx_setup.c:43:
+        binfo = (bd_t *) __res;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2347: FILE: arch/ppc/syslib/ppc83xx_setup.c:43:
+        binfo = (bd_t *) __res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2349: FILE: arch/ppc/syslib/ppc83xx_setup.c:45:
+        return binfo->bi_memsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2349: FILE: arch/ppc/syslib/ppc83xx_setup.c:45:
+        return binfo->bi_memsize;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2352: FILE: arch/ppc/syslib/ppc83xx_setup.c:48:
+long __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2360: FILE: arch/ppc/syslib/ppc83xx_setup.c:56:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2372: FILE: arch/ppc/syslib/ppc83xx_setup.c:68:
+        bd_t *binfo = (bd_t *) __res;$

CHECK:SPACING: No space is necessary after a cast
#2372: FILE: arch/ppc/syslib/ppc83xx_setup.c:68:
+        bd_t *binfo = (bd_t *) __res;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2372: FILE: arch/ppc/syslib/ppc83xx_setup.c:68:
+        bd_t *binfo = (bd_t *) __res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2373: FILE: arch/ppc/syslib/ppc83xx_setup.c:69:
+        unsigned int freq, divisor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2373: FILE: arch/ppc/syslib/ppc83xx_setup.c:69:
+        unsigned int freq, divisor;$

CHECK:SPACING: No space is necessary after a cast
#2389: FILE: arch/ppc/syslib/ppc83xx_setup.c:85:
+	bd_t *binfo = (bd_t *) __res;

CHECK:SPACING: No space is necessary after a cast
#2390: FILE: arch/ppc/syslib/ppc83xx_setup.c:86:
+	pdata = (struct plat_serial8250_port *) ppc_sys_get_pdata(MPC83xx_DUART);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2390: FILE: arch/ppc/syslib/ppc83xx_setup.c:86:
+	bd_t *binfo = (bd_t *) __res;
+	pdata = (struct plat_serial8250_port *) ppc_sys_get_pdata(MPC83xx_DUART);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2398: FILE: arch/ppc/syslib/ppc83xx_setup.c:94:
+	memset(&serial_req, 0, sizeof (serial_req));

ERROR:SPACING: space required before the open parenthesis '('
#2425: FILE: arch/ppc/syslib/ppc83xx_setup.c:121:
+	for(;;);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2425: FILE: arch/ppc/syslib/ppc83xx_setup.c:121:
+	for(;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#2432: FILE: arch/ppc/syslib/ppc83xx_setup.c:128:
+	for(;;);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2432: FILE: arch/ppc/syslib/ppc83xx_setup.c:128:
+	for(;;);

ERROR:SPACING: space required before the open parenthesis '('
#2439: FILE: arch/ppc/syslib/ppc83xx_setup.c:135:
+	for(;;);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2439: FILE: arch/ppc/syslib/ppc83xx_setup.c:135:
+	for(;;);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2447: FILE: arch/ppc/syslib/ppc83xx_setup.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2448: FILE: arch/ppc/syslib/ppc83xx_setup.h:2:
+ * arch/ppc/syslib/ppc83xx_setup.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2470: FILE: arch/ppc/syslib/ppc83xx_setup.h:24:
+extern unsigned long mpc83xx_find_end_of_memory(void) __init;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2471: FILE: arch/ppc/syslib/ppc83xx_setup.h:25:
+extern long mpc83xx_time_init(void) __init;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2472: FILE: arch/ppc/syslib/ppc83xx_setup.h:26:
+extern void mpc83xx_calibrate_decr(void) __init;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2473: FILE: arch/ppc/syslib/ppc83xx_setup.h:27:
+extern void mpc83xx_early_serial_map(void) __init;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2474: FILE: arch/ppc/syslib/ppc83xx_setup.h:28:
+extern void mpc83xx_restart(char *cmd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2475: FILE: arch/ppc/syslib/ppc83xx_setup.h:29:
+extern void mpc83xx_power_off(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2476: FILE: arch/ppc/syslib/ppc83xx_setup.h:30:
+extern void mpc83xx_halt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2477: FILE: arch/ppc/syslib/ppc83xx_setup.h:31:
+extern void mpc83xx_setup_hose(void) __init;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2480: FILE: arch/ppc/syslib/ppc83xx_setup.h:34:
+#if 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2528: FILE: include/asm-ppc/ipic.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2529: FILE: include/asm-ppc/ipic.h:2:
+ * include/asm-ppc/ipic.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2599: FILE: include/asm-ppc/ipic.h:72:
+extern void ipic_init(phys_addr_t phys_addr, unsigned int flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2600: FILE: include/asm-ppc/ipic.h:73:
+extern void ipic_init(phys_addr_t phys_addr, unsigned int flags,
+		unsigned int irq_offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2602: FILE: include/asm-ppc/ipic.h:75:
+extern int ipic_set_priority(unsigned int irq, unsigned int priority);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2603: FILE: include/asm-ppc/ipic.h:76:
+extern void ipic_set_highest_priority(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2604: FILE: include/asm-ppc/ipic.h:77:
+extern void ipic_set_default_priority(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2605: FILE: include/asm-ppc/ipic.h:78:
+extern void ipic_enable_mcp(enum ipic_mcp_irq mcp_irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2606: FILE: include/asm-ppc/ipic.h:79:
+extern void ipic_disable_mcp(enum ipic_mcp_irq mcp_irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2607: FILE: include/asm-ppc/ipic.h:80:
+extern u32 ipic_get_mcp_status(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2608: FILE: include/asm-ppc/ipic.h:81:
+extern void ipic_clear_mcp_status(u32 mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2609: FILE: include/asm-ppc/ipic.h:82:
+extern int ipic_get_irq(struct pt_regs *regs);

WARNING:INLINE: plain inline is preferred over __inline__
#2623: FILE: include/asm-ppc/irq.h:167:
+static __inline__ int irq_canonicalize(int irq)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2637: FILE: include/asm-ppc/mpc83xx.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2638: FILE: include/asm-ppc/mpc83xx.h:2:
+ * include/asm-ppc/mpc83xx.h

ERROR:SPACING: space prohibited after that open parenthesis '('
#2688: FILE: include/asm-ppc/mpc83xx.h:52:
+#define MPC83xx_IRQ_UART1	( 9 + MPC83xx_IPIC_IRQ_OFFSET)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2732: FILE: include/asm-ppc/mpc83xx.h:96:
+#define MPC83xx_CCSRBAR_SIZE	(1024*1024)
                             	     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 68 warnings, 49 checks, 2648 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202550.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
