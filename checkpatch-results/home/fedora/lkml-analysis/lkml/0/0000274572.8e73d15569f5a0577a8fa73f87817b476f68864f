WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/ide/legacy/ide-cs.c:204:
+    hw_regs_t hw;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#83: FILE: drivers/ide/legacy/ide-cs.c:205:
+    hw_regs_t hw;
+    memset(&hw, 0, sizeof(hw));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/ide/legacy/ide-cs.c:205:
+    memset(&hw, 0, sizeof(hw));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/ide/legacy/ide-cs.c:206:
+    ide_init_hwif_ports(&hw, io, ctl, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/ide/legacy/ide-cs.c:207:
+    hw.irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/ide/legacy/ide-cs.c:208:
+    hw.chipset = ide_pci;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/ide/legacy/ide-cs.c:209:
+    return ide_register_hw(&hw, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/ide/legacy/ide-cs.c:235:
+    struct stk *stk = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/ide/legacy/ide-cs.c:236:
+    cistpl_cftable_entry_t *cfg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/ide/legacy/ide-cs.c:237:
+    int i, pass, last_ret = 0, last_fn = 0, hd, is_kme = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/ide/legacy/ide-cs.c:242:
+    stk = kmalloc(sizeof(*stk), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/ide/legacy/ide-cs.c:243:
+    if (!stk) goto err_mem;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#135: FILE: drivers/ide/legacy/ide-cs.c:243:
+    if (!stk) goto err_mem;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/ide/legacy/ide-cs.c:244:
+    memset(stk, 0, sizeof(*stk));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/ide/legacy/ide-cs.c:245:
+    cfg = &stk->parse.cftable_entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/ide/legacy/ide-cs.c:247:
+    tuple.TupleData = (cisdata_t *)&stk->buf;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleData>
#139: FILE: drivers/ide/legacy/ide-cs.c:247:
+    tuple.TupleData = (cisdata_t *)&stk->buf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/ide/legacy/ide-cs.c:248:
+    tuple.TupleOffset = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleOffset>
#140: FILE: drivers/ide/legacy/ide-cs.c:248:
+    tuple.TupleOffset = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/ide/legacy/ide-cs.c:249:
+    tuple.TupleDataMax = 255;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleDataMax>
#141: FILE: drivers/ide/legacy/ide-cs.c:249:
+    tuple.TupleDataMax = 255;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/ide/legacy/ide-cs.c:254:
+    CS_CHECK(ParseTuple, pcmcia_parse_tuple(handle, &tuple, &stk->parse));$

CHECK:CAMELCASE: Avoid CamelCase: <ParseTuple>
#149: FILE: drivers/ide/legacy/ide-cs.c:254:
+    CS_CHECK(ParseTuple, pcmcia_parse_tuple(handle, &tuple, &stk->parse));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/ide/legacy/ide-cs.c:255:
+    link->conf.ConfigBase = stk->parse.config.base;$

CHECK:CAMELCASE: Avoid CamelCase: <ConfigBase>
#150: FILE: drivers/ide/legacy/ide-cs.c:255:
+    link->conf.ConfigBase = stk->parse.config.base;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/ide/legacy/ide-cs.c:256:
+    link->conf.Present = stk->parse.config.rmask[0];$

CHECK:CAMELCASE: Avoid CamelCase: <Present>
#151: FILE: drivers/ide/legacy/ide-cs.c:256:
+    link->conf.Present = stk->parse.config.rmask[0];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/ide/legacy/ide-cs.c:270:
+    CS_CHECK(GetConfigurationInfo, pcmcia_get_configuration_info(handle, &stk->conf));$

CHECK:CAMELCASE: Avoid CamelCase: <GetConfigurationInfo>
#172: FILE: drivers/ide/legacy/ide-cs.c:270:
+    CS_CHECK(GetConfigurationInfo, pcmcia_get_configuration_info(handle, &stk->conf));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/ide/legacy/ide-cs.c:271:
+    link->conf.Vcc = stk->conf.Vcc;$

CHECK:CAMELCASE: Avoid CamelCase: <Vcc>
#173: FILE: drivers/ide/legacy/ide-cs.c:271:
+    link->conf.Vcc = stk->conf.Vcc;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: drivers/ide/legacy/ide-cs.c:279:
+	if (pcmcia_parse_tuple(handle, &tuple, &stk->parse) != 0) goto next_entry;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#185: FILE: drivers/ide/legacy/ide-cs.c:282:
 	if (!pass) {
+	    if (cfg->vcc.present & (1 << CISTPL_POWER_VNOM)) {

WARNING:TABSTOP: Statements should start on a tabstop
#188: FILE: drivers/ide/legacy/ide-cs.c:283:
+	    if (cfg->vcc.present & (1 << CISTPL_POWER_VNOM)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#189: FILE: drivers/ide/legacy/ide-cs.c:284:
+		if (stk->conf.Vcc != cfg->vcc.param[CISTPL_POWER_VNOM] / 10000)
 		    goto next_entry;

WARNING:TABSTOP: Statements should start on a tabstop
#193: FILE: drivers/ide/legacy/ide-cs.c:286:
+	    } else if (stk->dflt.vcc.present & (1 << CISTPL_POWER_VNOM)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#194: FILE: drivers/ide/legacy/ide-cs.c:287:
+		if (stk->conf.Vcc != stk->dflt.vcc.param[CISTPL_POWER_VNOM] / 10000)
 		    goto next_entry;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#201: FILE: drivers/ide/legacy/ide-cs.c:292:
+	if (cfg->vpp1.present & (1 << CISTPL_POWER_VNOM))
 	    link->conf.Vpp1 = link->conf.Vpp2 =

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#206: FILE: drivers/ide/legacy/ide-cs.c:295:
+	else if (stk->dflt.vpp1.present & (1 << CISTPL_POWER_VNOM))
 	    link->conf.Vpp1 = link->conf.Vpp2 =

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#214: FILE: drivers/ide/legacy/ide-cs.c:299:
+	if ((cfg->io.nwin > 0) || (stk->dflt.io.nwin > 0)) {
+	    cistpl_io_t *io = (cfg->io.nwin) ? &cfg->io : &stk->dflt.io;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg->io.nwin > 0'
#214: FILE: drivers/ide/legacy/ide-cs.c:299:
+	if ((cfg->io.nwin > 0) || (stk->dflt.io.nwin > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stk->dflt.io.nwin > 0'
#214: FILE: drivers/ide/legacy/ide-cs.c:299:
+	if ((cfg->io.nwin > 0) || (stk->dflt.io.nwin > 0)) {

WARNING:TABSTOP: Statements should start on a tabstop
#215: FILE: drivers/ide/legacy/ide-cs.c:300:
+	    cistpl_io_t *io = (cfg->io.nwin) ? &cfg->io : &stk->dflt.io;

CHECK:CAMELCASE: Avoid CamelCase: <BasePort1>
#224: FILE: drivers/ide/legacy/ide-cs.c:320:
+		ctl_base = link->io.BasePort1 + 0x0e;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#233: FILE: drivers/ide/legacy/ide-cs.c:327:
+	if (cfg->flags & CISTPL_CFTABLE_DEFAULT)
+	    memcpy(&stk->dflt, cfg, sizeof(stk->dflt));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/ide/legacy/ide-cs.c:350:
+    if (is_kme)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#255: FILE: drivers/ide/legacy/ide-cs.c:351:
+	outb(0x81, ctl_base+1);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#261: FILE: drivers/ide/legacy/ide-cs.c:357:
 	if (link->io.NumPorts1 == 0x20) {
+	    outb(0x02, ctl_base + 0x10);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/ide/legacy/ide-cs.c:379:
+    sprintf(info->node.dev_name, "hd%c", 'a' + (hd * 2));$

CHECK:CAMELCASE: Avoid CamelCase: <Vpp1>
#296: FILE: drivers/ide/legacy/ide-cs.c:386:
+	   link->conf.Vpp1 / 10, link->conf.Vpp1 % 10);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/ide/legacy/ide-cs.c:389:
+    kfree(stk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/ide/legacy/ide-cs.c:393:
+    printk(KERN_NOTICE "ide-cs: ide_config failed memory allocation\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#304: FILE: drivers/ide/legacy/ide-cs.c:393:
+    printk(KERN_NOTICE "ide-cs: ide_config failed memory allocation\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_config', this function's name, in a string
#304: FILE: drivers/ide/legacy/ide-cs.c:393:
+    printk(KERN_NOTICE "ide-cs: ide_config failed memory allocation\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/ide/legacy/ide-cs.c:394:
+    goto failed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/ide/legacy/ide-cs.c:399:
+    kfree(stk);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 42 warnings, 13 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
