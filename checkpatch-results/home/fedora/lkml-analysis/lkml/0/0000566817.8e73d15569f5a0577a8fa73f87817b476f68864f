WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#116: FILE: net/irda/af_irda.c:326:
+#if 0

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#128: FILE: net/irda/af_irda.c:386:
+/*
+ * Function irda_getvalue_confirm (obj_id, value, priv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: net/irda/af_irda.c:393:
+static void irda_getvalue_confirm(int result, __u16 obj_id, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: net/irda/af_irda.c:394:
+static void irda_getvalue_confirm(int result, __u16 obj_id, 
+					  struct ias_value *value, void *priv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: net/irda/af_irda.c:397:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#140: FILE: net/irda/af_irda.c:398:
+	IRDA_DEBUG(2, __FUNCTION__ "()\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#142: FILE: net/irda/af_irda.c:400:
+	ASSERT(priv != NULL, return;);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#143: FILE: net/irda/af_irda.c:401:
+	self = (struct irda_sock *) priv;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: net/irda/af_irda.c:402:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#146: FILE: net/irda/af_irda.c:404:
+		WARNING(__FUNCTION__ "(), lost myself!\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#156: FILE: net/irda/af_irda.c:414:
+		IRDA_DEBUG(1, __FUNCTION__ "(), IAS query failed! (%d)\n",

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: net/irda/af_irda.c:551:
+	if(self->iriap != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self->iriap"
#202: FILE: net/irda/af_irda.c:551:
+	if(self->iriap != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#206: FILE: net/irda/af_irda.c:555:
+	if (self->errno)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->errno == IAS_CLASS_UNKNOWN'
#209: FILE: net/irda/af_irda.c:558:
+		if((self->errno == IAS_CLASS_UNKNOWN) ||
+		   (self->errno == IAS_ATTRIB_UNKNOWN))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->errno == IAS_ATTRIB_UNKNOWN'
#209: FILE: net/irda/af_irda.c:558:
+		if((self->errno == IAS_CLASS_UNKNOWN) ||
+		   (self->errno == IAS_ATTRIB_UNKNOWN))

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: net/irda/af_irda.c:558:
+		if((self->errno == IAS_CLASS_UNKNOWN) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: net/irda/af_irda.c:568:
+		IRDA_DEBUG(4, __FUNCTION__ "() int=%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: net/irda/af_irda.c:570:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: net/irda/af_irda.c:573:
+^I^Ielse $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#229: FILE: net/irda/af_irda.c:578:
+		IRDA_DEBUG(0, __FUNCTION__ "(), bad type!\n");

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: net/irda/af_irda.c:651:
+				if(daddr != DEV_ADDR_ANY) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#272: FILE: net/irda/af_irda.c:652:
+					IRDA_DEBUG(1, __FUNCTION__

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#288: FILE: net/irda/af_irda.c:667:
+				IRDA_DEBUG(0, __FUNCTION__

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#292: FILE: net/irda/af_irda.c:671:
+				return(-EHOSTUNREACH);
+				break;

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: net/irda/af_irda.c:680:
+	if(daddr == DEV_ADDR_ANY) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#305: FILE: net/irda/af_irda.c:681:
+		IRDA_DEBUG(1, __FUNCTION__

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: net/irda/af_irda.c:693:
+^IIRDA_DEBUG(1, __FUNCTION__ $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#320: FILE: net/irda/af_irda.c:693:
+	IRDA_DEBUG(1, __FUNCTION__ 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: net/irda/af_irda.c:730:
+	*uaddr_len = sizeof (struct sockaddr_irda);

WARNING:TYPO_SPELLING: 'resoltion' may be misspelled - perhaps 'resolution'?
#373: FILE: net/irda/af_irda.c:930:
+ * Because of this service name resoltion, we can offer "auto-connect",
                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!addr->sir_addr'
#392: FILE: net/irda/af_irda.c:978:
+	if ((!addr->sir_addr) || (addr->sir_addr == DEV_ADDR_ANY)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr->sir_addr == DEV_ADDR_ANY'
#392: FILE: net/irda/af_irda.c:978:
+	if ((!addr->sir_addr) || (addr->sir_addr == DEV_ADDR_ANY)) {

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#407: FILE: net/irda/af_irda.c:1726:
+	struct ias_attrib *	ias_attr;	/* Attribute in IAS object */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#432: FILE: net/irda/af_irda.c:1767:
+			irias_add_integer_attrib(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: net/irda/af_irda.c:1769:
+^I^I^I^Iias_opt.irda_attrib_name, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: net/irda/af_irda.c:1814:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: net/irda/af_irda.c:1817:
+^I^I  ^Ireturn -EFAULT;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#476: FILE: net/irda/af_irda.c:1817:
+^I^I  ^Ireturn -EFAULT;$

CHECK:SPACING: No space is necessary after a cast
#480: FILE: net/irda/af_irda.c:1821:
+		if(ias_obj == (struct ias_object *) NULL)

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: net/irda/af_irda.c:1821:
+		if(ias_obj == (struct ias_object *) NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: net/irda/af_irda.c:1826:
+^I^I^I^I^I     ias_opt.irda_attrib_name); $

CHECK:SPACING: No space is necessary after a cast
#486: FILE: net/irda/af_irda.c:1827:
+		if(ias_attr == (struct ias_attrib *) NULL)

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: net/irda/af_irda.c:1827:
+		if(ias_attr == (struct ias_attrib *) NULL)

ERROR:SPACING: space required before the open parenthesis '('
#490: FILE: net/irda/af_irda.c:1831:
+		if(ias_attr->value->owner != IAS_USER_ATTR) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: net/irda/af_irda.c:1832:
+^I^I^IIRDA_DEBUG(1, __FUNCTION__ $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#491: FILE: net/irda/af_irda.c:1832:
+			IRDA_DEBUG(1, __FUNCTION__ 

ERROR:SPACING: space required before the open parenthesis '('
#609: FILE: net/irda/af_irda.c:2093:
+		if(self->daddr != DEV_ADDR_ANY) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#614: FILE: net/irda/af_irda.c:2098:
+			 * destination address */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!daddr'
#616: FILE: net/irda/af_irda.c:2100:
+			if((!daddr) || (daddr == DEV_ADDR_ANY))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'daddr == DEV_ADDR_ANY'
#616: FILE: net/irda/af_irda.c:2100:
+			if((!daddr) || (daddr == DEV_ADDR_ANY))

ERROR:SPACING: space required before the open parenthesis '('
#616: FILE: net/irda/af_irda.c:2100:
+			if((!daddr) || (daddr == DEV_ADDR_ANY))

ERROR:SPACING: space required before the open parenthesis '('
#643: FILE: net/irda/af_irda.c:2123:
+		if(self->iriap != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self->iriap"
#643: FILE: net/irda/af_irda.c:2123:
+		if(self->iriap != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#646: FILE: net/irda/af_irda.c:2126:
 		if (self->errno)
+		{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->errno == IAS_CLASS_UNKNOWN'
#650: FILE: net/irda/af_irda.c:2129:
+			if((self->errno == IAS_CLASS_UNKNOWN) ||
+			   (self->errno == IAS_ATTRIB_UNKNOWN))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->errno == IAS_ATTRIB_UNKNOWN'
#650: FILE: net/irda/af_irda.c:2129:
+			if((self->errno == IAS_CLASS_UNKNOWN) ||
+			   (self->errno == IAS_ATTRIB_UNKNOWN))

ERROR:SPACING: space required before the open parenthesis '('
#650: FILE: net/irda/af_irda.c:2129:
+			if((self->errno == IAS_CLASS_UNKNOWN) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#723: FILE: net/irda/iriap.c:870:
+			IRDA_DEBUG(1, __FUNCTION__ "(), No such class!\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#732: FILE: net/irda/iriap.c:884:
+			IRDA_DEBUG(1, __FUNCTION__ "(), No such attribute!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: net/irda/iriap.c:893:
+^I^I^I^Iself->confirm(IAS_ATTRIB_UNKNOWN, 0, NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: net/irda/irias_object.c:157:
+int irias_delete_attrib(struct ias_object *obj, struct ias_attrib *attrib) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "obj"
#762: FILE: net/irda/irias_object.c:161:
+	ASSERT(obj != NULL, return -1;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "attrib"
#764: FILE: net/irda/irias_object.c:163:
+	ASSERT(attrib != NULL, return -1;);

WARNING:TYPO_SPELLING: 'atribute' may be misspelled - perhaps 'attribute'?
#766: FILE: net/irda/irias_object.c:165:
+	/* Remove atribute from object */
 	          ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#775: FILE: net/irda/irias_object.c:174:
+	node = (struct ias_attrib *) hashbin_get_first(obj->attribs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#791: FILE: net/irda/irias_object.c:235:
+void irias_add_attrib( struct ias_object *obj, struct ias_attrib *attrib,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: net/irda/irias_object.c:236:
+void irias_add_attrib( struct ias_object *obj, struct ias_attrib *attrib,
+		       int owner)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 20 warnings, 20 checks, 792 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
