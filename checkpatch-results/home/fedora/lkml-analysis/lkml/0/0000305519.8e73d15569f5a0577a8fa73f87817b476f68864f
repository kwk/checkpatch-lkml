WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#35: FILE: drivers/net/hydra.c:48:
+static int __devinit hydra_init_one(struct zorro_dev *z,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#46: FILE: drivers/net/hydra.c:60:
+static void __devexit hydra_remove_one(struct zorro_dev *z);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/net/hydra.c:63:
+    { ZORRO_PROD_HYDRA_SYSTEMS_AMIGANET },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/net/hydra.c:64:
+    { 0 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/net/hydra.c:68:
+    .name^I= "hydra",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/net/hydra.c:69:
+    .id_table^I= hydra_zorro_tbl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/net/hydra.c:70:
+    .probe^I= hydra_init_one,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/net/hydra.c:71:
+    .remove^I= __devexit_p(hydra_remove_one),$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#78: FILE: drivers/net/hydra.c:74:
+static int __devinit hydra_init_one(struct zorro_dev *z,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/net/hydra.c:77:
+    int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/net/hydra.c:79:
+    if (!request_mem_region(z->resource.start, 0x10000, "Hydra"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/net/hydra.c:81:
+    if ((err = hydra_init(z))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#86: FILE: drivers/net/hydra.c:81:
+    if ((err = hydra_init(z))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/net/hydra.c:84:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/net/hydra.c:85:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/net/hydra.c:91:
+    unsigned long board = ZTWO_VADDR(z->resource.start);$

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#106: FILE: drivers/net/hydra.c:135:
+    printk("%s: hydra at 0x%08lx, address %02x:%02x:%02x:%02x:%02x:%02x (hydra.c " HYDRA_VERSION ")\n", dev->name, z->resource.start,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/net/hydra.c:135:
+    printk("%s: hydra at 0x%08lx, address %02x:%02x:%02x:%02x:%02x:%02x (hydra.c " HYDRA_VERSION ")\n", dev->name, z->resource.start,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: drivers/net/hydra.c:135:
+    printk("%s: hydra at 0x%08lx, address %02x:%02x:%02x:%02x:%02x:%02x (hydra.c " HYDRA_VERSION ")\n", dev->name, z->resource.start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/net/hydra.c:136:
+    printk("%s: hydra at 0x%08lx, address %02x:%02x:%02x:%02x:%02x:%02x (hydra.c " HYDRA_VERSION ")\n", dev->name, z->resource.start,
 	dev->dev_addr[0], dev->dev_addr[1], dev->dev_addr[2],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/net/hydra.c:157:
+    if (err) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/net/hydra.c:162:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/net/hydra.c:164:
+    zorro_set_drvdata(z, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/net/hydra.c:165:
+    return 0;$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#144: FILE: drivers/net/hydra.c:236:
+static void __devexit hydra_remove_one(struct zorro_dev *z)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/net/hydra.c:238:
+    struct net_device *dev = zorro_get_drvdata(z);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/net/hydra.c:240:
+    unregister_netdev(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/net/hydra.c:241:
+    free_irq(IRQ_AMIGA_PORTS, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/net/hydra.c:242:
+    release_mem_region(ZTWO_PADDR(dev->base_addr)-HYDRA_NIC_BASE, 0x10000);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#159: FILE: drivers/net/hydra.c:242:
+    release_mem_region(ZTWO_PADDR(dev->base_addr)-HYDRA_NIC_BASE, 0x10000);
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/net/hydra.c:243:
+    free_netdev(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/net/hydra.c:248:
+    return zorro_module_init(&hydra_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/net/hydra.c:253:
+    zorro_unregister_driver(&hydra_driver);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 30 warnings, 2 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
