WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -u -p linux/include/net/irda/wrapper.d7.h linux/include/net/irda/wrapper.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: include/net/irda/irda_device.h:187:
+ * Max CRC is 2 bytes at SIR, 4 bytes at FIR. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#71: FILE: include/net/irda/irda_device.h:190:
+ * Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#74: FILE: include/net/irda/irda_device.h:193:
+ * and escaped characters on top of above). */

WARNING:TYPO_SPELLING: 'thresold' may be misspelled - perhaps 'threshold'?
#79: FILE: include/net/irda/irda_device.h:198:
+ * to a smaller skb to save memory. This is the thresold under which copy
                                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#82: FILE: include/net/irda/irda_device.h:201:
+ * This is the same value as various Ethernet drivers. - Jean II */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#129: FILE: net/irda/wrapper.c:43:
+/*
+ * Unwrap and unstuff SIR frames

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#138: FILE: net/irda/wrapper.c:50:
+/*
+ * Function stuff_byte (byte, buf)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#154: FILE: net/irda/wrapper.c:61:
+	case BOF: /* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#155: FILE: net/irda/wrapper.c:62:
+	case EOF: /* FALLTHROUGH */

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#159: FILE: net/irda/wrapper.c:66:
+		buf[1] = byte^IRDA_TRANS;    /* Complement bit 5 */
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#226: FILE: net/irda/wrapper.c:176:
+/*
+ * We can also choose where we want to do the CRC calculation. We can

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#272: FILE: net/irda/wrapper.c:216:
+	 * called Rx-copy-break). Jean II */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_buff->skb"
#273: FILE: net/irda/wrapper.c:217:
+	docopy = ((rx_buff->skb == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#282: FILE: net/irda/wrapper.c:226:
+		 * packet... Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: net/irda/wrapper.c:232:
+	 * header size (2 or 1 bytes) - Jean II */

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: net/irda/wrapper.c:235:
+	if(docopy) {

WARNING:TYPO_SPELLING: 'lenght' may be misspelled - perhaps 'length'?
#294: FILE: net/irda/wrapper.c:236:
+		/* Copy data without CRC (lenght already checked) */
 		                          ^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#304: FILE: net/irda/wrapper.c:246:
+		//printk(KERN_DEBUG "ZeroCopy : len = %d, dataskb = %p, newskb = %p\n", rx_buff->len, dataskb, newskb);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'Beggining' may be misspelled - perhaps 'Beginning'?
#337: FILE: net/irda/wrapper.c:270:
+ *    Handle Beggining Of Frame character received within a frame
              ^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: net/irda/wrapper.c:278:
+	switch(rx_buff->state) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#353: FILE: net/irda/wrapper.c:282:
+		 * finished - Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#355: FILE: net/irda/wrapper.c:284:
+			   __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: net/irda/wrapper.c:293:
+^I^I/* We may receive multiple BOF at the start of frame */ $

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: net/irda/wrapper.c:322:
+	switch(rx_buff->state) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#422: FILE: net/irda/wrapper.c:336:
+		 * error, as expected - Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#428: FILE: net/irda/wrapper.c:342:
+		 * must do it now... Jean II */

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: net/irda/wrapper.c:343:
+		for(i = 0; i < rx_buff->len; i++)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#439: FILE: net/irda/wrapper.c:353:
+			break;
+		} else {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#443: FILE: net/irda/wrapper.c:357:
+			IRDA_DEBUG(1, "%s(), crc error\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: net/irda/wrapper.c:373:
+async_unwrap_ce(struct net_device *dev,
+		 struct net_device_stats *stats,

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: net/irda/wrapper.c:376:
+	switch(rx_buff->state) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#492: FILE: net/irda/wrapper.c:383:
+		WARNING("%s: state not defined\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'comming' may be misspelled - perhaps 'coming'?
#501: FILE: net/irda/wrapper.c:389:
+		/* Stuffed byte comming */
 		                ^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#535: FILE: net/irda/wrapper.c:406:
+	switch(rx_buff->state) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#537: FILE: net/irda/wrapper.c:408:
+		 * probability (most frequent first) - Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#547: FILE: net/irda/wrapper.c:418:
+				   __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: net/irda/wrapper.c:444:
+		if(byte != XBOF)

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: net/irda/wrapper.c:470:
+	switch(byte) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000401713.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 26 warnings, 3 checks, 603 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000401713.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
