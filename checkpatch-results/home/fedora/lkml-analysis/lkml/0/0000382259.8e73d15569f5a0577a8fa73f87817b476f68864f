WARNING:TYPO_SPELLING: 'Noone' may be misspelled - perhaps 'No one'?
#52: 
D: Noone uses the return value of notifier_chain_unregister and its
   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.66-bk2/include/linux/cpufreq.h working-2.5.66-bk2-notifier/include/linux/cpufreq.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/inetdevice.h:80:
+extern void unregister_inetaddr_notifier(struct notifier_block *nb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: include/linux/netdevice.h:490:
+extern void		unregister_netdevice_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/netlink.h:117:
+extern void netlink_unregister_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/notifier.h:25:
+extern void notifier_chain_unregister(struct notifier_block **nl, struct notifier_block *n);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: include/linux/profile.h:46:
+void profile_event_unregister(enum profile_type, struct notifier_block * n);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: include/linux/profile.h:49:
+void unregister_profile_notifier(struct notifier_block * nb);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: include/linux/profile.h:61:
+static inline void profile_event_unregister(enum profile_type t, struct notifier_block * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: include/linux/profile.h:74:
+static inline void unregister_profile_notifier(struct notifier_block * nb)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/linux/reboot.h:40:
+extern void unregister_reboot_notifier(struct notifier_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#162: FILE: include/linux/reboot.h:40:
+extern void unregister_reboot_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/net/addrconf.h:126:
+extern void unregister_inet6addr_notifier(struct notifier_block *nb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: kernel/cpufreq.c:500:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: kernel/profile.c:100:
+void profile_event_unregister(enum profile_type type, struct notifier_block * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: kernel/profile.c:132:
+void unregister_profile_notifier(struct notifier_block * nb)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: kernel/sys.c:130:
+	BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: kernel/sys.c:190:
+void unregister_reboot_notifier(struct notifier_block * nb)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: net/ipv6/addrconf.c:2641:
+	notifier_chain_unregister(&inet6addr_chain,nb);
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 5 warnings, 6 checks, 274 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
