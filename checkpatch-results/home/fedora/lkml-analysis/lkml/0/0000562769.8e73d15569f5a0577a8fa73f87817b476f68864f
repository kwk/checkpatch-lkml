WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#132: FILE: MAINTAINERS:498:
+P:	Tigran Aivazian
+M:	Tigran Aivazian <tigran@veritas.com>

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#133: FILE: MAINTAINERS:499:
+W:      http://www.urbanmyth.org/microcode

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#134: FILE: MAINTAINERS:500:
+W:      http://www.urbanmyth.org/microcode
+L:	linux-kernel@vger.kernel.org

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/i386/kernel/microcode.c:10:
+ *^IReference: Section 8.10 of Volume III, Intel Pentium 4 Manual, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: arch/i386/kernel/microcode.c:50:
+#define MICROCODE_VERSION ^I"1.06"$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: arch/i386/kernel/microcode.c:98:
+^Iprintk(KERN_INFO "IA-32 Microcode Update Driver: v%s <tigran@veritas.com>\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#253: FILE: arch/i386/kernel/microcode.c:98:
+	printk(KERN_INFO "IA-32 Microcode Update Driver: v%s <tigran@veritas.com>\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: arch/i386/kernel/microcode.c:99:
+	printk(KERN_INFO "IA-32 Microcode Update Driver: v%s <tigran@veritas.com>\n", 
 			MICROCODE_VERSION);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: arch/i386/kernel/microcode.c:109:
+^Iprintk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#266: FILE: arch/i386/kernel/microcode.c:109:
+	printk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: arch/i386/kernel/microcode.c:110:
+	printk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", 
 			MICROCODE_VERSION);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: arch/i386/kernel/microcode.c:165:
+	if (c->x86_vendor != X86_VENDOR_INTEL || c->x86 < 6 ||
+		test_bit(X86_FEATURE_30, &c->x86_capability)) { /* IA64 */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: arch/i386/kernel/microcode.c:166:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel processor\n", cpu_num);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model >= 5'
#344: FILE: arch/i386/kernel/microcode.c:172:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 > 6'
#344: FILE: arch/i386/kernel/microcode.c:172:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#388: FILE: arch/i386/kernel/microcode.c:231:
+		printk(KERN_ERR "microcode: CPU%d no microcode found! (sig=%x, pflags=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: arch/i386/kernel/microcode.c:232:
+		printk(KERN_ERR "microcode: CPU%d no microcode found! (sig=%x, pflags=%d)\n",
+				cpu_num, sig, pf);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: include/asm-i386/processor.h:331:
+#define MICROCODE_IOCFREE _IO('6',0)
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: include/asm-i386/processor.h:346:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000562769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 7 checks, 418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000562769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
