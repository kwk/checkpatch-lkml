WARNING:TYPO_SPELLING: 'hould' may be misspelled - perhaps 'hold'?
#132: FILE: fs/buffer.c:273:
+ * block device, we hould a read lock on the s->s_umount sem to make sure
                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MEMORY_BARRIER: memory barrier without comment
#145: FILE: fs/buffer.c:286:
+		wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#151: FILE: fs/buffer.c:292:
+		wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: fs/buffer.c:293:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: fs/buffer.c:301:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: fs/buffer.c:320:
+		BUG_ON(sb->s_bdev != bdev);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#184: FILE: fs/buffer.c:325:
+		wmb();

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sb' - possible side-effects?
#231: FILE: include/linux/fs.h:750:
+#define vfs_check_frozen(sb, level) \
+	wait_event((sb)->s_wait_unfrozen, ((sb)->s_frozen < (level)))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#246: FILE: include/linux/buffer_head.h:167:
+struct super_block *freeze_bdev(struct block_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#247: FILE: include/linux/buffer_head.h:168:
+void thaw_bdev(struct block_device *, struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#247: FILE: include/linux/buffer_head.h:168:
+void thaw_bdev(struct block_device *, struct super_block *);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__lock_fs', this function's name, in a string
#306: FILE: drivers/md/dm.c:917:
+		DMWARN("bdget failed in __lock_fs");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__unlock_fs', this function's name, in a string
#328: FILE: drivers/md/dm.c:939:
+		DMWARN("bdget failed in __unlock_fs");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291300.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 10 warnings, 1 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291300.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
