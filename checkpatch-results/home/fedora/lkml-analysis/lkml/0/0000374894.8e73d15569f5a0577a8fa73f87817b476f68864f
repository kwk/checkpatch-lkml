WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch extends and cleans up the early generic CPU alternative patching.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: arch/i386/kernel/setup.c:798:
+asm("nops: " $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arch/i386/kernel/setup.c:799:
+    ASM_NOP1 ASM_NOP2 ASM_NOP3 ASM_NOP4 ASM_NOP5 ASM_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: arch/i386/kernel/setup.c:800:
+    ASM_NOP7 ASM_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arch/i386/kernel/setup.c:800:
+    ASM_NOP7 ASM_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: arch/i386/kernel/setup.c:802:
+static inline unsigned char *findnop(int num) $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#60: FILE: arch/i386/kernel/setup.c:804:
+	extern unsigned char nops[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/i386/kernel/setup.c:806:
+^Ifor (i = 1; i < num; i++) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#62: FILE: arch/i386/kernel/setup.c:806:
+	int i, k = 0;
+	for (i = 1; i < num; i++) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: arch/i386/kernel/setup.c:807:
+^I^Ik += i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arch/i386/kernel/setup.c:809:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/i386/kernel/setup.c:822:
+^Ifor (a = start; (void *)a < end; a++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/kernel/setup.c:833:
+^I^I^Imemcpy(a->instr + i, findnop(k), k); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: include/asm-i386/processor.h:501:
+#define ASM_NOP2^I".byte 0x66,0x90\n" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: include/asm-i386/processor.h:502:
+#define ASM_NOP3^I".byte 0x66,0x66,0x90\n" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: include/asm-i386/processor.h:503:
+#define ASM_NOP4^I".byte 0x66,0x66,0x66,0x90\n" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: include/asm-i386/processor.h:504:
+#define ASM_NOP5^IASM_NOP3 ASM_NOP2 $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#164: FILE: include/asm-i386/processor.h:504:
+#define ASM_NOP5	ASM_NOP3 ASM_NOP2 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#165: FILE: include/asm-i386/processor.h:505:
+#define ASM_NOP6	ASM_NOP3 ASM_NOP3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#166: FILE: include/asm-i386/processor.h:506:
+#define ASM_NOP7	ASM_NOP4 ASM_NOP3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#167: FILE: include/asm-i386/processor.h:507:
+#define ASM_NOP8	ASM_NOP4 ASM_NOP4

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#169: FILE: include/asm-i386/processor.h:509:
+/* uses eax dependencies (arbitary choice) */
                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: include/asm-i386/processor.h:510:
+#define ASM_NOP2^I".byte 0x8b,0xc0\n" $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#173: FILE: include/asm-i386/processor.h:513:
+#define ASM_NOP5	ASM_NOP4 ASM_NOP1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#176: FILE: include/asm-i386/processor.h:516:
+#define ASM_NOP8        ASM_NOP7 ASM_NOP1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: include/asm-i386/processor.h:519:
+#define ASM_NOP2    ^I".byte 0x89,0xf6\n"$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#182: FILE: include/asm-i386/processor.h:522:
+#define ASM_NOP5        ASM_NOP1 ASM_NOP4

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#185: FILE: include/asm-i386/processor.h:525:
+#define ASM_NOP8	ASM_NOP1 ASM_NOP7

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#191: FILE: include/asm-i386/processor.h:531:
+/* It's not worth to care about 3dnow! prefetches for the K6
+   because they are microcoded there and very slow. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: include/asm-i386/processor.h:531:
+   because they are microcoded there and very slow. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: include/asm-i386/processor.h:545:
+/* 3dnow! prefetch to get an exclusive cache line. Useful for $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: include/asm-i386/processor.h:546:
+/* 3dnow! prefetch to get an exclusive cache line. Useful for 
+   spinlocks to avoid one state transition in the cache coherency protocol. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: include/asm-i386/processor.h:546:
+   spinlocks to avoid one state transition in the cache coherency protocol. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: include/asm-i386/system.h:306:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: include/asm-i386/system.h:317:
+ * $

WARNING:TYPO_SPELLING: 'Pecularities' may be misspelled - perhaps 'Peculiarities'?
#260: FILE: include/asm-i386/system.h:318:
+ * Pecularities:
    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: include/asm-i386/system.h:319:
+ * No memory clobber here. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: include/asm-i386/system.h:322:
+ * If you use variable sized constraints like "m" or "g" in the $

WARNING:TYPO_SPELLING: 'maake' may be misspelled - perhaps 'make'?
#265: FILE: include/asm-i386/system.h:323:
+ * replacement maake sure to pad to the worst case length.
                ^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#267: FILE: include/asm-i386/system.h:325:
+#define alternative_input(oldinstr, newinstr, feature, input)			\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n"				\
+		      ".section .altinstructions,\"a\"\n"			\
+		      "  .align 4\n"						\
+		      "  .long 661b\n"            /* label */			\
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */		\
+		      "  .byte 662b-661b\n"       /* sourcelen */		\
+		      "  .byte 664f-663f\n"       /* replacementlen */ 		\
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ 	\
+		      ".previous" :: "i" (feature), input)  

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: include/asm-i386/system.h:330:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: include/asm-i386/system.h:333:
+^I^I      "  .byte 664f-663f\n"       /* replacementlen */ ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: include/asm-i386/system.h:336:
+^I^I      "663:\n\t" newinstr "\n664:\n"   /* replacement */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: include/asm-i386/system.h:337:
+^I^I      ".previous" :: "i" (feature), input)  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000374894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 17 warnings, 0 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000374894.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
