Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -u --recursive --new-file andries/drivers/block/genhd.c brouwer/drivers/block/genhd.c

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#62: FILE: drivers/block/genhd.c:182:
+		int minormask = (1<<sgp->minor_shift) - 1;
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: drivers/block/genhd.c:183:
+		int minormask = (1<<sgp->minor_shift) - 1;
+		if ((n & minormask) && sgp->part[n].nr_sects == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#119: FILE: drivers/scsi/scsi_error.c:1122:
+		rtn = scsi_check_sense(SCpnt);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#155: FILE: drivers/scsi/scsi_error.c:1167:
+		return NEEDS_RETRY;
+	} else {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#179: FILE: drivers/scsi/scsi_ioctl.c:142:
 
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: drivers/scsi/sd.c:98:
+static void sd_init_onedisk(Scsi_Disk * sdkp, int dsk_nr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Disk>
#223: FILE: drivers/scsi/sd.c:98:
+static void sd_init_onedisk(Scsi_Disk * sdkp, int dsk_nr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sdkp"
#240: FILE: drivers/scsi/sd.c:162:
+		if (sdkp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: drivers/scsi/sd.c:226:
+^I^I        diskinfo[0] = 0x40;^I/* 1 << 6 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/scsi/sd.c:227:
+^I        ^Idiskinfo[1] = 0x20;^I/* 1 << 5 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: drivers/scsi/sd.c:227:
+^I        ^Idiskinfo[1] = 0x20;^I/* 1 << 5 */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!sdkp->media_present'
#272: FILE: drivers/scsi/sd.c:535:
+		if ((!sdkp->media_present) && !(filp->f_flags & O_NDELAY)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#355: FILE: drivers/scsi/sd.c:830:
+static void
+sd_set_media_not_present(Scsi_Disk *sdkp) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#367: FILE: drivers/scsi/sd.c:837:
+static int
+sd_media_not_present(Scsi_Disk *sdkp, Scsi_Request *SRpnt) {

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#368: FILE: drivers/scsi/sd.c:838:
+sd_media_not_present(Scsi_Disk *sdkp, Scsi_Request *SRpnt) {

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#368: FILE: drivers/scsi/sd.c:838:
+sd_media_not_present(Scsi_Disk *sdkp, Scsi_Request *SRpnt) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#372: FILE: drivers/scsi/sd.c:842:
+	if (the_result != 0
+	    && (driver_byte(the_result) & DRIVER_SENSE) != 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#373: FILE: drivers/scsi/sd.c:843:
+	    && (driver_byte(the_result) & DRIVER_SENSE) != 0
+	    && (SRpnt->sr_sense_buffer[2] == NOT_READY ||

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#375: FILE: drivers/scsi/sd.c:845:
+		SRpnt->sr_sense_buffer[2] == UNIT_ATTENTION)
+	    && SRpnt->sr_sense_buffer[12] == 0x3A /* medium not present */) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#392: FILE: drivers/scsi/sd.c:855:
+static void
+sd_spinup_disk(Scsi_Disk *sdkp, char *diskname,
+	       Scsi_Request *SRpnt, unsigned char *buffer) {

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#396: FILE: drivers/scsi/sd.c:859:
+	Scsi_Device *sdp = sdkp->device;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#469: FILE: drivers/scsi/sd.c:946:
+static void
+sd_read_capacity(Scsi_Disk *sdkp, char *diskname,
+		 Scsi_Request *SRpnt, unsigned char *buffer) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#540: FILE: drivers/scsi/sd.c:990:
+			printk("%s : sense not available. \n", diskname);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#540: FILE: drivers/scsi/sd.c:990:
+			printk("%s : sense not available. \n", diskname);

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#549: FILE: drivers/scsi/sd.c:998:
+		/* Either no media are present but the drive didnt tell us,
 		                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#550: FILE: drivers/scsi/sd.c:999:
+		/* Either no media are present but the drive didnt tell us,
+		   or they are present but the read capacity command fails */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: drivers/scsi/sd.c:999:
+		   or they are present but the read capacity command fails */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#567: FILE: drivers/scsi/sd.c:1016:
+		printk(KERN_NOTICE "%s : sector size 0 reported, "

WARNING:SPLIT_STRING: quoted string split across lines
#568: FILE: drivers/scsi/sd.c:1017:
+		printk(KERN_NOTICE "%s : sector size 0 reported, "
+		       "assuming 512.\n", diskname);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#576: FILE: drivers/scsi/sd.c:1025:
+		printk(KERN_NOTICE "%s : unsupported sector size "

WARNING:SPLIT_STRING: quoted string split across lines
#577: FILE: drivers/scsi/sd.c:1026:
+		printk(KERN_NOTICE "%s : unsupported sector size "
+		       "%d.\n", diskname, sector_size);

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#590: FILE: drivers/scsi/sd.c:1037:
+		 * The msdos fs needs to know the hardware sector size
 		       ^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#595: FILE: drivers/scsi/sd.c:1042:
+		int sz = sdkp->capacity * (hard_sector/256);
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#599: FILE: drivers/scsi/sd.c:1046:
+		printk(KERN_NOTICE "SCSI device %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#600: FILE: drivers/scsi/sd.c:1047:
+		printk(KERN_NOTICE "SCSI device %s: "
+		       "%d %d-byte hdwr sectors (%d MB)\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#602: FILE: drivers/scsi/sd.c:1049:
+		       hard_sector, (sz/2 - sz/1250 + 974)/1950);
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#602: FILE: drivers/scsi/sd.c:1049:
+		       hard_sector, (sz/2 - sz/1250 + 974)/1950);
 		                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#602: FILE: drivers/scsi/sd.c:1049:
+		       hard_sector, (sz/2 - sz/1250 + 974)/1950);
 		                                          ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#674: FILE: drivers/scsi/sd.c:1068:
+static void
+sd_read_write_protect_flag(Scsi_Disk *sdkp, char *diskname,
+			   Scsi_Request *SRpnt, unsigned char *buffer) {

CHECK:SPACING: No space is necessary after a cast
#698: FILE: drivers/scsi/sd.c:1092:
+	memset((void *) &cmd[0], 0, 8);

CHECK:SPACING: No space is necessary after a cast
#709: FILE: drivers/scsi/sd.c:1103:
+	scsi_wait_req(SRpnt, (void *) cmd, (void *) buffer,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#715: FILE: drivers/scsi/sd.c:1109:
+		printk("%s: test WP failed, assume Write Enabled\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#720: FILE: drivers/scsi/sd.c:1114:
+		printk(KERN_NOTICE "%s: Write Protect is %s\n", diskname,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#734: FILE: drivers/scsi/sd.c:1128:
+static void
+sd_init_onedisk(Scsi_Disk * sdkp, int dsk_nr) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#735: FILE: drivers/scsi/sd.c:1129:
+sd_init_onedisk(Scsi_Disk * sdkp, int dsk_nr) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#741: FILE: drivers/scsi/sd.c:1135:
+	SCSI_LOG_HLQUEUE(3, printk("sd_init_onedisk: dsk_nr=%d\n", dsk_nr));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sd_init_onedisk', this function's name, in a string
#741: FILE: drivers/scsi/sd.c:1135:
+	SCSI_LOG_HLQUEUE(3, printk("sd_init_onedisk: dsk_nr=%d\n", dsk_nr));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#773: FILE: drivers/scsi/sd.c:1147:
+	if (sdp->online == FALSE)

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#787: FILE: drivers/scsi/sd.c:1152:
+		printk(KERN_WARNING "(sd_init_onedisk:) Request allocation "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sd_init_onedisk', this function's name, in a string
#787: FILE: drivers/scsi/sd.c:1152:
+		printk(KERN_WARNING "(sd_init_onedisk:) Request allocation "

WARNING:SPLIT_STRING: quoted string split across lines
#788: FILE: drivers/scsi/sd.c:1153:
+		printk(KERN_WARNING "(sd_init_onedisk:) Request allocation "
+		       "failure.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#798: FILE: drivers/scsi/sd.c:1159:
+		printk(KERN_WARNING "(sd_init_onedisk:) Memory allocation "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sd_init_onedisk', this function's name, in a string
#798: FILE: drivers/scsi/sd.c:1159:
+		printk(KERN_WARNING "(sd_init_onedisk:) Memory allocation "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#798: FILE: drivers/scsi/sd.c:1159:
+	if (!buffer) {
+		printk(KERN_WARNING "(sd_init_onedisk:) Memory allocation "

WARNING:SPLIT_STRING: quoted string split across lines
#799: FILE: drivers/scsi/sd.c:1160:
+		printk(KERN_WARNING "(sd_init_onedisk:) Memory allocation "
+		       "failure.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: drivers/scsi/sd.c:1314:
+                for (k = 0; k < sd_template.dev_max; ++k)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/scsi/sd.c:1314:
+                for (k = 0; k < sd_template.dev_max; ++k)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: drivers/scsi/sd.c:1465:
+^ISCSI_LOG_HLQUEUE(3, printk("revalidate_scsidisk: dsk_nr=%d\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#919: FILE: drivers/scsi/sd.c:1465:
+	SCSI_LOG_HLQUEUE(3, printk("revalidate_scsidisk: dsk_nr=%d\n", 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#959: FILE: drivers/scsi/sd.h:26:
+	unsigned capacity;		/* size in 512-byte sectors */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 30 warnings, 19 checks, 907 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
