ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/net/irda/via-ircc.c:33:
+- On speed change from core, don't send SIR frame with new speed. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/net/irda/via-ircc.c:36:
+- New dongle_id 17 (0x11): TDFS4500. Single-ended SIR only. $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#133: FILE: drivers/net/irda/via-ircc.c:73:
+static int dongle_id = 0;	/* default: probe */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#157: FILE: drivers/net/irda/via-ircc.c:110:
 static int __devinit via_init_one (struct pci_dev *pcidev, const struct pci_device_id *id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, 0x8231, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, 0x8231, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/net/irda/via-ircc.c:125:
+	{ PCI_VENDOR_ID_VIA, 0x8231, PCI_ANY_ID, PCI_ANY_ID,0,0,0 },
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, 0x3109, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, 0x3109, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/net/irda/via-ircc.c:126:
+	{ PCI_VENDOR_ID_VIA, 0x3109, PCI_ANY_ID, PCI_ANY_ID,0,0,1 },
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, 0x3074, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, 0x3074, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/net/irda/via-ircc.c:127:
+	{ PCI_VENDOR_ID_VIA, 0x3074, PCI_ANY_ID, PCI_ANY_ID,0,0,2 },
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, 0x3147, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, 0x3147, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: drivers/net/irda/via-ircc.c:128:
+	{ PCI_VENDOR_ID_VIA, 0x3147, PCI_ANY_ID, PCI_ANY_ID,0,0,3 },
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, 0x3177, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, 0x3177, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: drivers/net/irda/via-ircc.c:129:
+	{ PCI_VENDOR_ID_VIA, 0x3177, PCI_ANY_ID, PCI_ANY_ID,0,0,4 },
 	                                                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#193: FILE: drivers/net/irda/via-ircc.c:153:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#202: FILE: drivers/net/irda/via-ircc.c:158:
+			   __FUNCTION__, rc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: drivers/net/irda/via-ircc.c:160:
+			pci_unregister_driver (&via_driver);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#225: FILE: drivers/net/irda/via-ircc.c:174:
+	IRDA_DEBUG(2, "%s(): Device ID=(0X%X)\n", __FUNCTION__, id->device);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#235: FILE: drivers/net/irda/via-ircc.c:178:
+		IRDA_DEBUG(0, "%s(): error rc = %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#249: FILE: drivers/net/irda/via-ircc.c:189:
+		IRDA_DEBUG(2, "%s(): Chipset = 3076\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#261: FILE: drivers/net/irda/via-ircc.c:226:
+		IRDA_DEBUG(2, "%s(): Chipset = 3096\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#274: FILE: drivers/net/irda/via-ircc.c:266:
+	IRDA_DEBUG(2, "%s(): End - rc = %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#285: FILE: drivers/net/irda/via-ircc.c:280:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#297: FILE: drivers/net/irda/via-ircc.c:290:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#305: FILE: drivers/net/irda/via-ircc.c:298:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#319: FILE: drivers/net/irda/via-ircc.c:316:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#329: FILE: drivers/net/irda/via-ircc.c:345:
+			   __FUNCTION__, self->io.fir_base);

ERROR:SPACING: space required before the open brace '{'
#345: FILE: drivers/net/irda/via-ircc.c:360:
+	switch( self->io.dongle_id ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#345: FILE: drivers/net/irda/via-ircc.c:360:
+	switch( self->io.dongle_id ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#345: FILE: drivers/net/irda/via-ircc.c:360:
+	switch( self->io.dongle_id ){

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: drivers/net/irda/via-ircc.c:360:
+	switch( self->io.dongle_id ){

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#384: FILE: drivers/net/irda/via-ircc.c:431:
+	/* Initialise the hardware..
+	*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#395: FILE: drivers/net/irda/via-ircc.c:459:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/net/irda/via-ircc.c:491:
+ * Formerly via_ircc_setup $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: drivers/net/irda/via-ircc.c:497:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <ResetChip>
#453: FILE: drivers/net/irda/via-ircc.c:516:
+	ResetChip(iobase, 5);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <EnableDMA>
#454: FILE: drivers/net/irda/via-ircc.c:517:
+	EnableDMA(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnableTX>
#455: FILE: drivers/net/irda/via-ircc.c:518:
+	EnableTX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnableRX>
#456: FILE: drivers/net/irda/via-ircc.c:519:
+	EnableRX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnRXDMA>
#457: FILE: drivers/net/irda/via-ircc.c:520:
+	EnRXDMA(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXDMA>
#458: FILE: drivers/net/irda/via-ircc.c:521:
+	EnTXDMA(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <RXStart>
#459: FILE: drivers/net/irda/via-ircc.c:522:
+	RXStart(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <TXStart>
#460: FILE: drivers/net/irda/via-ircc.c:523:
+	TXStart(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <InitCard>
#461: FILE: drivers/net/irda/via-ircc.c:524:
+	InitCard(iobase);

CHECK:CAMELCASE: Avoid CamelCase: <CommonInit>
#462: FILE: drivers/net/irda/via-ircc.c:525:
+	CommonInit(iobase);

CHECK:CAMELCASE: Avoid CamelCase: <SIRFilter>
#463: FILE: drivers/net/irda/via-ircc.c:526:
+	SIRFilter(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <SetSIR>
#464: FILE: drivers/net/irda/via-ircc.c:527:
+	SetSIR(iobase, ON);

CHECK:CAMELCASE: Avoid CamelCase: <EnTXCRC>
#466: FILE: drivers/net/irda/via-ircc.c:529:
+	EnTXCRC(iobase, 0);

CHECK:CAMELCASE: Avoid CamelCase: <WriteReg>
#467: FILE: drivers/net/irda/via-ircc.c:530:
+	WriteReg(iobase, I_ST_CT_0, 0x00);

CHECK:CAMELCASE: Avoid CamelCase: <SetBaudRate>
#468: FILE: drivers/net/irda/via-ircc.c:531:
+	SetBaudRate(iobase, 9600);

CHECK:CAMELCASE: Avoid CamelCase: <SetPulseWidth>
#469: FILE: drivers/net/irda/via-ircc.c:532:
+	SetPulseWidth(iobase, 12);

CHECK:CAMELCASE: Avoid CamelCase: <SetSendPreambleCount>
#470: FILE: drivers/net/irda/via-ircc.c:533:
+	SetSendPreambleCount(iobase, 0);

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#489: FILE: drivers/net/irda/via-ircc.c:552:
+	ERROR("via-ircc: dongle probing not supported, please specify dongle_id module parameter.\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#514: FILE: drivers/net/irda/via-ircc.c:567:
+	speed = speed;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#517: FILE: drivers/net/irda/via-ircc.c:570:
+		   __FUNCTION__, speed, iobase, dongle_id);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#520: FILE: drivers/net/irda/via-ircc.c:573:
+	switch (dongle_id) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/net/irda/via-ircc.c:575:
+^I^I * nsc-ircc.c */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: drivers/net/irda/via-ircc.c:575:
+		 * nsc-ircc.c */ 

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#554: FILE: drivers/net/irda/via-ircc.c:659:
+		IRDA_DEBUG(2, "%s: Temic TFDS4500: One RX pin, TX normal, RX inverted.\n", __FUNCTION__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#554: FILE: drivers/net/irda/via-ircc.c:659:
+		IRDA_DEBUG(2, "%s: Temic TFDS4500: One RX pin, TX normal, RX inverted.\n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <UseOneRX>
#556: FILE: drivers/net/irda/via-ircc.c:661:
+		UseOneRX(iobase, ON);	//use ONE RX....RX1

CHECK:CAMELCASE: Avoid CamelCase: <InvertTX>
#557: FILE: drivers/net/irda/via-ircc.c:662:
+		InvertTX(iobase, OFF);

CHECK:CAMELCASE: Avoid CamelCase: <InvertRX>
#558: FILE: drivers/net/irda/via-ircc.c:663:
+		InvertRX(iobase, ON);	// invert RX pin

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/net/irda/via-ircc.c:664:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <EnRX2>
#560: FILE: drivers/net/irda/via-ircc.c:665:
+		EnRX2(iobase, ON);	//sir to rx2

CHECK:CAMELCASE: Avoid CamelCase: <EnGPIOtoRX2>
#561: FILE: drivers/net/irda/via-ircc.c:666:
+		EnGPIOtoRX2(iobase, OFF);

ERROR:SPACING: space required before the open brace '{'
#563: FILE: drivers/net/irda/via-ircc.c:668:
+		if( IsSIROn(iobase) ){	//sir

ERROR:SPACING: space prohibited after that open parenthesis '('
#563: FILE: drivers/net/irda/via-ircc.c:668:
+		if( IsSIROn(iobase) ){	//sir

ERROR:SPACING: space prohibited before that close parenthesis ')'
#563: FILE: drivers/net/irda/via-ircc.c:668:
+		if( IsSIROn(iobase) ){	//sir

ERROR:SPACING: space required before the open parenthesis '('
#563: FILE: drivers/net/irda/via-ircc.c:668:
+		if( IsSIROn(iobase) ){	//sir

CHECK:CAMELCASE: Avoid CamelCase: <IsSIROn>
#563: FILE: drivers/net/irda/via-ircc.c:668:
+		if( IsSIROn(iobase) ){	//sir

CHECK:CAMELCASE: Avoid CamelCase: <SlowIRRXLowActive>
#566: FILE: drivers/net/irda/via-ircc.c:671:
+			SlowIRRXLowActive(iobase, ON);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#567: FILE: drivers/net/irda/via-ircc.c:672:
+			udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space required before the open brace '{'
#571: FILE: drivers/net/irda/via-ircc.c:676:
+		} else{

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#572: FILE: drivers/net/irda/via-ircc.c:677:
+			IRDA_DEBUG(0, "%s: Warning: TFDS4500 not running in SIR mode !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#572: FILE: drivers/net/irda/via-ircc.c:677:
+			IRDA_DEBUG(0, "%s: Warning: TFDS4500 not running in SIR mode !\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#589: FILE: drivers/net/irda/via-ircc.c:695:
+		      __FUNCTION__, dongle_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#608: FILE: drivers/net/irda/via-ircc.c:714:
+	IRDA_DEBUG(1, "%s: change_speed to %d bps.\n", __FUNCTION__, speed);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#637: FILE: drivers/net/irda/via-ircc.c:726:
+		value = (115200/speed)-1;
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#637: FILE: drivers/net/irda/via-ircc.c:726:
+		value = (115200/speed)-1;
 		                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#643: FILE: drivers/net/irda/via-ircc.c:732:
+		 * and 576000 is MIR, not SIR. */

CHECK:CAMELCASE: Avoid CamelCase: <bTmp>
#669: FILE: drivers/net/irda/via-ircc.c:762:
+	bTmp |= value << 2;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#732: FILE: drivers/net/irda/via-ircc.c:945:
+		   __FUNCTION__, self->tx_fifo.ptr,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#743: FILE: drivers/net/irda/via-ircc.c:969:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#760: FILE: drivers/net/irda/via-ircc.c:1002:
+		   __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#769: FILE: drivers/net/irda/via-ircc.c:1038:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#827: FILE: drivers/net/irda/via-ircc.c:1175:
+		IRDA_DEBUG(2, "%s(): len=%x.rx_buff=%p\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#840: FILE: drivers/net/irda/via-ircc.c:1205:
+	IRDA_DEBUG(2, "%s(): len=%x\n", __FUNCTION__, len);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#855: FILE: drivers/net/irda/via-ircc.c:1285:
+			IRDA_DEBUG(2, "%s(): len=%x.head=%x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#874: FILE: drivers/net/irda/via-ircc.c:1301:
+			   __FUNCTION__,

CHECK:CAMELCASE: Avoid CamelCase: <GetHostStatus>
#875: FILE: drivers/net/irda/via-ircc.c:1302:
+			   GetHostStatus(iobase), GetRXStatus(iobase));

CHECK:CAMELCASE: Avoid CamelCase: <GetRXStatus>
#875: FILE: drivers/net/irda/via-ircc.c:1302:
+			   GetHostStatus(iobase), GetRXStatus(iobase));

CHECK:CAMELCASE: Avoid CamelCase: <iHostIntType>
#886: FILE: drivers/net/irda/via-ircc.c:1348:
+		   __FUNCTION__, iHostIntType,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#886: FILE: drivers/net/irda/via-ircc.c:1348:
+		   __FUNCTION__, iHostIntType,

CHECK:CAMELCASE: Avoid CamelCase: <iTxIntType>
#911: FILE: drivers/net/irda/via-ircc.c:1378:
+			   __FUNCTION__, iTxIntType,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#911: FILE: drivers/net/irda/via-ircc.c:1378:
+			   __FUNCTION__, iTxIntType,

CHECK:CAMELCASE: Avoid CamelCase: <iRxIntType>
#927: FILE: drivers/net/irda/via-ircc.c:1402:
+			   __FUNCTION__, iRxIntType,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#927: FILE: drivers/net/irda/via-ircc.c:1402:
+			   __FUNCTION__, iRxIntType,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#938: FILE: drivers/net/irda/via-ircc.c:1411:
+			IRDA_DEBUG(3, "%s(): RxIRQ =0\n", __FUNCTION__);

WARNING:LONG_LINE_STRING: line length of 119 exceeds 100 columns
#955: FILE: drivers/net/irda/via-ircc.c:1420:
+			IRDA_DEBUG(4, "%s(): RxIRQ ERR:iRxIntType=%x,HostIntType=%x,CurCount=%x,RxLastCount=%x_____\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#956: FILE: drivers/net/irda/via-ircc.c:1421:
+				   __FUNCTION__, iRxIntType, iHostIntType,

CHECK:CAMELCASE: Avoid CamelCase: <RxCurCount>
#957: FILE: drivers/net/irda/via-ircc.c:1422:
+				   RxCurCount(iobase, self),

CHECK:CAMELCASE: Avoid CamelCase: <RxLastCount>
#958: FILE: drivers/net/irda/via-ircc.c:1423:
+				   self->RxLastCount);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#971: FILE: drivers/net/irda/via-ircc.c:1446:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#995: FILE: drivers/net/irda/via-ircc.c:1491:
+	IRDA_DEBUG(2, "%s(): status=%x....\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1005: FILE: drivers/net/irda/via-ircc.c:1509:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1048: FILE: drivers/net/irda/via-ircc.c:1575:
+	IRDA_DEBUG(3, "%s()\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1066: FILE: drivers/net/irda/via-ircc.c:1617:
+	IRDA_DEBUG(1, "%s(), %s, (cmd=0x%X)\n", __FUNCTION__, dev->name,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 47 warnings, 36 checks, 969 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
