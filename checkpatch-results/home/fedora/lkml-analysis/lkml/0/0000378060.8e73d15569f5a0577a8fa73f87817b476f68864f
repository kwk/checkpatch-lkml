WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#88: FILE: arch/s390/Kconfig:37:
+config ARCH_S390X
+	bool "64 bit kernel"
+	help
+	  Select this option if you have a 64 bit IBM zSeries machine
+	  and want to use the 64 bit addressing mode.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/s390/Kconfig:78:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/s390/Kconfig:96:
+^I  on older S/390 machines. Say Y unless you know your machine doesn't $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#207: FILE: arch/s390/Kconfig:184:
+config IPL_TAPE
+	bool "tape"
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/s390/Makefile:33:
+CFLAGS ^I^I+= -pipe -fno-strength-reduce -finline-limit-10000 -Wno-sign-compare $

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#267: FILE: arch/s390/boot/Makefile:9:
+EXTRA_CFLAGS  := -DCOMPILE_VERSION=$(COMPILE_VERSION) -gstabs -I .

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_AFLAGS is deprecated, please use `asflags-y instead.
#268: FILE: arch/s390/boot/Makefile:10:
+EXTRA_AFLAGS  := -traditional

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: arch/s390/kernel/Makefile:11:
+extra-$(CONFIG_ARCH_S390_31)^I+= head.o $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: arch/s390/kernel/Makefile:12:
+extra-$(CONFIG_ARCH_S390X)^I+= head64.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#352: FILE: arch/s390/kernel/binfmt_elf32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#377: FILE: arch/s390/kernel/binfmt_elf32.c:26:
+#define elf_check_arch(x) \
+	(((x)->e_machine == EM_S390 || (x)->e_machine == EM_S390_OLD) \
+         && (x)->e_ident[EI_CLASS] == ELF_CLASS)

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/s390/kernel/binfmt_elf32.c:28:
+         && (x)->e_ident[EI_CLASS] == ELF_CLASS)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#379: FILE: arch/s390/kernel/binfmt_elf32.c:28:
+	(((x)->e_machine == EM_S390 || (x)->e_machine == EM_S390_OLD) \
+         && (x)->e_ident[EI_CLASS] == ELF_CLASS)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/s390/kernel/binfmt_elf32.c:28:
+         && (x)->e_ident[EI_CLASS] == ELF_CLASS)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: arch/s390/kernel/binfmt_elf32.c:33:
+#define NUM_ACRS      16    $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#389: FILE: arch/s390/kernel/binfmt_elf32.c:38:
+/* For SVR4/S390 the function pointer to be registered with `atexit` is
+   passed in R14. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#389: FILE: arch/s390/kernel/binfmt_elf32.c:38:
+   passed in R14. */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_r' may be better as '(_r)' to avoid precedence issues
#390: FILE: arch/s390/kernel/binfmt_elf32.c:39:
+#define ELF_PLAT_INIT(_r, load_addr) \
+	do { \
+	_r->gprs[14] = 0; \
+	set_thread_flag(TIF_31BIT); \
+	} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#391: FILE: arch/s390/kernel/binfmt_elf32.c:40:
+	do { \
+	_r->gprs[14] = 0; \

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: arch/s390/kernel/binfmt_elf32.c:43:
+	} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#400: FILE: arch/s390/kernel/binfmt_elf32.c:49:
+/* This is the location that an ET_DYN program is loaded if exec'ed.  Typical
+   use of this is to invoke "./ld.so someprog" to test out a new version of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: arch/s390/kernel/binfmt_elf32.c:51:
+   that it will "exec", and that there is sufficient room for the brk.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: arch/s390/kernel/binfmt_elf32.c:58:
+/* regs is struct pt_regs, pr_reg is elf_gregset_t (which is
+   now struct_user_regs, they are different) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: arch/s390/kernel/binfmt_elf32.c:58:
+   now struct_user_regs, they are different) */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pr_reg' - possible side-effects?
#411: FILE: arch/s390/kernel/binfmt_elf32.c:60:
+#define ELF_CORE_COPY_REGS(pr_reg, regs)        \
+	{ \
+	int i; \
+	memcpy(&pr_reg.psw.mask, &regs->psw.mask, 4); \
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \
+	for(i=0; i<NUM_GPRS; i++) \
+		pr_reg.gprs[i] = regs->gprs[i]; \
+	for(i=0; i<NUM_ACRS; i++) \
+		pr_reg.acrs[i] = regs->acrs[i]; \
+	pr_reg.orig_gpr2 = regs->orig_gpr2; \
+	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pr_reg' may be better as '(pr_reg)' to avoid precedence issues
#411: FILE: arch/s390/kernel/binfmt_elf32.c:60:
+#define ELF_CORE_COPY_REGS(pr_reg, regs)        \
+	{ \
+	int i; \
+	memcpy(&pr_reg.psw.mask, &regs->psw.mask, 4); \
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \
+	for(i=0; i<NUM_GPRS; i++) \
+		pr_reg.gprs[i] = regs->gprs[i]; \
+	for(i=0; i<NUM_ACRS; i++) \
+		pr_reg.acrs[i] = regs->acrs[i]; \
+	pr_reg.orig_gpr2 = regs->orig_gpr2; \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#411: FILE: arch/s390/kernel/binfmt_elf32.c:60:
+#define ELF_CORE_COPY_REGS(pr_reg, regs)        \
+	{ \
+	int i; \
+	memcpy(&pr_reg.psw.mask, &regs->psw.mask, 4); \
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \
+	for(i=0; i<NUM_GPRS; i++) \
+		pr_reg.gprs[i] = regs->gprs[i]; \
+	for(i=0; i<NUM_ACRS; i++) \
+		pr_reg.acrs[i] = regs->acrs[i]; \
+	pr_reg.orig_gpr2 = regs->orig_gpr2; \
+	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#411: FILE: arch/s390/kernel/binfmt_elf32.c:60:
+#define ELF_CORE_COPY_REGS(pr_reg, regs)        \
+	{ \
+	int i; \
+	memcpy(&pr_reg.psw.mask, &regs->psw.mask, 4); \
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \
+	for(i=0; i<NUM_GPRS; i++) \
+		pr_reg.gprs[i] = regs->gprs[i]; \
+	for(i=0; i<NUM_ACRS; i++) \
+		pr_reg.acrs[i] = regs->acrs[i]; \
+	pr_reg.orig_gpr2 = regs->orig_gpr2; \
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#415: FILE: arch/s390/kernel/binfmt_elf32.c:64:
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: arch/s390/kernel/binfmt_elf32.c:64:
+	memcpy(&pr_reg.psw.addr, ((char*)&regs->psw.addr)+4, 4); \
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#416: FILE: arch/s390/kernel/binfmt_elf32.c:65:
+	for(i=0; i<NUM_GPRS; i++) \
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#416: FILE: arch/s390/kernel/binfmt_elf32.c:65:
+	for(i=0; i<NUM_GPRS; i++) \
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#416: FILE: arch/s390/kernel/binfmt_elf32.c:65:
+	for(i=0; i<NUM_GPRS; i++) \

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#418: FILE: arch/s390/kernel/binfmt_elf32.c:67:
+	for(i=0; i<NUM_ACRS; i++) \
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#418: FILE: arch/s390/kernel/binfmt_elf32.c:67:
+	for(i=0; i<NUM_ACRS; i++) \
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#418: FILE: arch/s390/kernel/binfmt_elf32.c:67:
+	for(i=0; i<NUM_ACRS; i++) \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: arch/s390/kernel/binfmt_elf32.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#426: FILE: arch/s390/kernel/binfmt_elf32.c:75:
+/* This yields a mask that user programs can use to figure out what
+   instruction set this CPU supports. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#426: FILE: arch/s390/kernel/binfmt_elf32.c:75:
+   instruction set this CPU supports. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#431: FILE: arch/s390/kernel/binfmt_elf32.c:80:
+/* This yields a string that ld.so will use to load implementation
+   specific libraries for optimization.  This is more specific in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: arch/s390/kernel/binfmt_elf32.c:84:
+   but that could change... */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#449: FILE: arch/s390/kernel/binfmt_elf32.c:98:
+typedef _s390_fp_regs32 elf_fpregset_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#451: FILE: arch/s390/kernel/binfmt_elf32.c:100:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#452: FILE: arch/s390/kernel/binfmt_elf32.c:101:
+typedef struct
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: arch/s390/kernel/binfmt_elf32.c:102:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#453: FILE: arch/s390/kernel/binfmt_elf32.c:102:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: arch/s390/kernel/binfmt_elf32.c:104:
+^I__u32^I^Igprs[__NUM_GPRS]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: arch/s390/kernel/binfmt_elf32.c:105:
+^I__u32^I^Iacrs[__NUM_ACRS]; $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#459: FILE: arch/s390/kernel/binfmt_elf32.c:108:
+typedef s390_regs32 elf_gregset_t;

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#461: FILE: arch/s390/kernel/binfmt_elf32.c:110:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#472: FILE: arch/s390/kernel/binfmt_elf32.c:121:
+struct elf_prstatus32
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#491: FILE: arch/s390/kernel/binfmt_elf32.c:140:
+struct elf_prpsinfo32
+{

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#509: FILE: arch/s390/kernel/binfmt_elf32.c:158:
+#define NEW_TO_OLD_UID(uid) ((uid) > 65535) ? (u16)overflowuid : (u16)(uid)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uid' - possible side-effects?
#509: FILE: arch/s390/kernel/binfmt_elf32.c:158:
+#define NEW_TO_OLD_UID(uid) ((uid) > 65535) ? (u16)overflowuid : (u16)(uid)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: arch/s390/kernel/binfmt_elf32.c:159:
+#define NEW_TO_OLD_GID(gid) ((gid) > 65535) ? (u16)overflowgid : (u16)(gid) $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#510: FILE: arch/s390/kernel/binfmt_elf32.c:159:
+#define NEW_TO_OLD_GID(gid) ((gid) > 65535) ? (u16)overflowgid : (u16)(gid) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gid' - possible side-effects?
#510: FILE: arch/s390/kernel/binfmt_elf32.c:159:
+#define NEW_TO_OLD_GID(gid) ((gid) > 65535) ? (u16)overflowgid : (u16)(gid) 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: arch/s390/kernel/binfmt_elf32.c:163:
+/*
+#define init_elf_binfmt init_elf32_binfmt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: arch/s390/kernel/binfmt_elf32.c:175:
+#define start_thread                    start_thread31 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: arch/s390/kernel/binfmt_elf32.c:180:
+                   " Copyright 2000 IBM Corporation"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: arch/s390/kernel/binfmt_elf32.c:180:
+                   " Copyright 2000 IBM Corporation"); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/s390/kernel/binfmt_elf32.c:180:
+                   " Copyright 2000 IBM Corporation"); $

WARNING:SPLIT_STRING: quoted string split across lines
#531: FILE: arch/s390/kernel/binfmt_elf32.c:180:
+MODULE_DESCRIPTION("Binary format loader for compatibility with 32bit Linux for S390 binaries,"
+                   " Copyright 2000 IBM Corporation"); 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:INLINE: plain inline is preferred over __inline__
#538: FILE: arch/s390/kernel/binfmt_elf32.c:187:
+static __inline__ void

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#548: FILE: arch/s390/kernel/binfmt_elf32.c:197:
+elf_map32 (struct file *filep, unsigned long addr, struct elf_phdr *eppnt, int prot, int type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: arch/s390/kernel/binfmt_elf32.c:201:
+^Iif (!addr) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: arch/s390/kernel/binfmt_elf32.c:202:
+^I^Iaddr = 0x40000000; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: arch/s390/kernel/binfmt_elf32.c:204:
+^Iif (prot & PROT_READ) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: arch/s390/kernel/binfmt_elf32.c:205:
+^I^Iprot |= PROT_EXEC; $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#564: FILE: arch/s390/kernel/binfmt_elf32.c:213:
+	return(map_addr);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#570: FILE: arch/s390/kernel/compat_exec.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#595: FILE: arch/s390/kernel/compat_exec.c:26:
+#include <asm/uaccess.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#597: FILE: arch/s390/kernel/compat_exec.c:28:
+#include <asm/mmu_context.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#603: FILE: arch/s390/kernel/compat_exec.c:34:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#604: FILE: arch/s390/kernel/compat_exec.c:35:
+extern void put_dirty_page(struct task_struct * tsk, struct page *page, unsigned long address);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#616: FILE: arch/s390/kernel/compat_exec.c:47:
+	stack_base = STACK_TOP - MAX_ARG_PAGES*PAGE_SIZE;
 	                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: arch/s390/kernel/compat_exec.c:56:
+^Iif (!mpnt) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: arch/s390/kernel/compat_exec.c:57:
+^I^Ireturn -ENOMEM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: arch/s390/kernel/compat_exec.c:58:
+^I$

CHECK:SPACING: No space is necessary after a cast
#628: FILE: arch/s390/kernel/compat_exec.c:59:
+	if (!vm_enough_memory((STACK_TOP - (PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#628: FILE: arch/s390/kernel/compat_exec.c:59:
+	if (!vm_enough_memory((STACK_TOP - (PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {
 	                                                                         ^

CHECK:SPACING: No space is necessary after a cast
#636: FILE: arch/s390/kernel/compat_exec.c:67:
+		mpnt->vm_start = PAGE_MASK & (unsigned long) bprm->p;

CHECK:SPACING: No space is necessary after a cast
#644: FILE: arch/s390/kernel/compat_exec.c:75:
+		mpnt->vm_private_data = (void *) 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/s390/kernel/compat_exec.c:78:
+^I} $

WARNING:LINE_SPACING: Missing a blank line after declarations
#651: FILE: arch/s390/kernel/compat_exec.c:82:
+		struct page *page = bprm->page[i];
+		if (page) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: arch/s390/kernel/compat_exec.c:84:
+			put_dirty_page(current,page,stack_base);
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: arch/s390/kernel/compat_exec.c:84:
+			put_dirty_page(current,page,stack_base);
 			                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: arch/s390/kernel/compat_exec.c:89:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#662: FILE: arch/s390/kernel/compat_exec.c:93:
+EXPORT_SYMBOL(setup_arg_pages32);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#667: FILE: arch/s390/kernel/compat_exec_domain.c:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: arch/s390/kernel/compat_exec_domain.c:18:
+s390_init (void)

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#696: FILE: arch/s390/kernel/compat_exec_domain.c:30:
+__initcall(s390_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#701: FILE: arch/s390/kernel/compat_ioctl.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: arch/s390/kernel/compat_ioctl.c:8:
+ * Heavily inspired by the 32-bit Sparc compat code which is  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: arch/s390/kernel/compat_ioctl.c:10:
+ * Written by Ulf Carlsson (ulfc@engr.sgi.com) $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#735: FILE: arch/s390/kernel/compat_ioctl.c:35:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: arch/s390/kernel/compat_ioctl.c:50:
+};  $

CHECK:SPACING: No space is necessary after a cast
#754: FILE: arch/s390/kernel/compat_ioctl.c:54:
+	struct hd_geometry32 *hg32 = (struct hd_geometry32 *) A(arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: arch/s390/kernel/compat_ioctl.c:58:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: arch/s390/kernel/compat_ioctl.c:59:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#760: FILE: arch/s390/kernel/compat_ioctl.c:60:
+	ret = sys_ioctl (fd, cmd, (long)&hg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: arch/s390/kernel/compat_ioctl.c:61:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: arch/s390/kernel/compat_ioctl.c:66:
+	ret = put_user (hg.heads, &(hg32->heads));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hg32->heads
#766: FILE: arch/s390/kernel/compat_ioctl.c:66:
+	ret = put_user (hg.heads, &(hg32->heads));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: arch/s390/kernel/compat_ioctl.c:67:
+	ret |= __put_user (hg.sectors, &(hg32->sectors));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hg32->sectors
#767: FILE: arch/s390/kernel/compat_ioctl.c:67:
+	ret |= __put_user (hg.sectors, &(hg32->sectors));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: arch/s390/kernel/compat_ioctl.c:68:
+	ret |= __put_user (hg.cylinders, &(hg32->cylinders));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hg32->cylinders
#768: FILE: arch/s390/kernel/compat_ioctl.c:68:
+	ret |= __put_user (hg.cylinders, &(hg32->cylinders));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#769: FILE: arch/s390/kernel/compat_ioctl.c:69:
+	ret |= __put_user (hg.start, &(hg32->start));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hg32->start
#769: FILE: arch/s390/kernel/compat_ioctl.c:69:
+	ret |= __put_user (hg.start, &(hg32->start));

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: arch/s390/kernel/compat_ioctl.c:91:
+        union {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: arch/s390/kernel/compat_ioctl.c:91:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: arch/s390/kernel/compat_ioctl.c:92:
+                char    ifrn_name[IFNAMSIZ];^I/* if name, e.g. "en0" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: arch/s390/kernel/compat_ioctl.c:92:
+                char    ifrn_name[IFNAMSIZ];^I/* if name, e.g. "en0" */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: arch/s390/kernel/compat_ioctl.c:93:
+        } ifr_ifrn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: arch/s390/kernel/compat_ioctl.c:93:
+        } ifr_ifrn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: arch/s390/kernel/compat_ioctl.c:94:
+        union {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: arch/s390/kernel/compat_ioctl.c:94:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: arch/s390/kernel/compat_ioctl.c:95:
+                struct  sockaddr ifru_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: arch/s390/kernel/compat_ioctl.c:95:
+                struct  sockaddr ifru_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: arch/s390/kernel/compat_ioctl.c:96:
+                struct  sockaddr ifru_dstaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: arch/s390/kernel/compat_ioctl.c:96:
+                struct  sockaddr ifru_dstaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: arch/s390/kernel/compat_ioctl.c:97:
+                struct  sockaddr ifru_broadaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: arch/s390/kernel/compat_ioctl.c:97:
+                struct  sockaddr ifru_broadaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: arch/s390/kernel/compat_ioctl.c:98:
+                struct  sockaddr ifru_netmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: arch/s390/kernel/compat_ioctl.c:98:
+                struct  sockaddr ifru_netmask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: arch/s390/kernel/compat_ioctl.c:99:
+                struct  sockaddr ifru_hwaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: arch/s390/kernel/compat_ioctl.c:99:
+                struct  sockaddr ifru_hwaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: arch/s390/kernel/compat_ioctl.c:100:
+                short   ifru_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: arch/s390/kernel/compat_ioctl.c:100:
+                short   ifru_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: arch/s390/kernel/compat_ioctl.c:101:
+                int     ifru_ivalue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: arch/s390/kernel/compat_ioctl.c:101:
+                int     ifru_ivalue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: arch/s390/kernel/compat_ioctl.c:102:
+                int     ifru_mtu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: arch/s390/kernel/compat_ioctl.c:102:
+                int     ifru_mtu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: arch/s390/kernel/compat_ioctl.c:103:
+                struct  ifmap32 ifru_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: arch/s390/kernel/compat_ioctl.c:103:
+                struct  ifmap32 ifru_map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: arch/s390/kernel/compat_ioctl.c:104:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: arch/s390/kernel/compat_ioctl.c:104:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: arch/s390/kernel/compat_ioctl.c:106:
+                __u32^Iifru_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: arch/s390/kernel/compat_ioctl.c:106:
+                __u32^Iifru_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: arch/s390/kernel/compat_ioctl.c:107:
+        } ifr_ifru;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: arch/s390/kernel/compat_ioctl.c:107:
+        } ifr_ifru;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: arch/s390/kernel/compat_ioctl.c:111:
+        int     ifc_len;                        /* size of buffer       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: arch/s390/kernel/compat_ioctl.c:111:
+        int     ifc_len;                        /* size of buffer       */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: arch/s390/kernel/compat_ioctl.c:112:
+        __u32^Iifcbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: arch/s390/kernel/compat_ioctl.c:112:
+        __u32^Iifcbuf;$

CHECK:SPACING: No space is necessary after a cast
#817: FILE: arch/s390/kernel/compat_ioctl.c:117:
+	struct ireq32 *uir32 = (struct ireq32 *) A(arg);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#834: FILE: arch/s390/kernel/compat_ioctl.c:134:
+	if (copy_to_user(uir32, &ifr32, sizeof(struct ifreq32)))
+	    return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#835: FILE: arch/s390/kernel/compat_ioctl.c:135:
+	    return -EFAULT;

CHECK:SPACING: No space is necessary after a cast
#843: FILE: arch/s390/kernel/compat_ioctl.c:143:
+	struct ioconf32 *uifc32 = (struct ioconf32 *) A(arg);

ERROR:SPACING: space required before the open parenthesis '('
#855: FILE: arch/s390/kernel/compat_ioctl.c:155:
+	if(ifc32.ifcbuf == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#860: FILE: arch/s390/kernel/compat_ioctl.c:160:
+		ifc.ifc_len = ((ifc32.ifc_len / sizeof (struct ifreq32))) *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#861: FILE: arch/s390/kernel/compat_ioctl.c:161:
+			sizeof (struct ifreq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#862: FILE: arch/s390/kernel/compat_ioctl.c:162:
+		ifc.ifc_buf = kmalloc (ifc.ifc_len, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#867: FILE: arch/s390/kernel/compat_ioctl.c:167:
+	ifr32 = (struct ifreq32 *) A(ifc32.ifcbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: arch/s390/kernel/compat_ioctl.c:168:
+	len = ifc32.ifc_len / sizeof (struct ifreq32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: arch/s390/kernel/compat_ioctl.c:170:
+		if (copy_from_user(ifr++, ifr32++, sizeof (struct ifreq32))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#877: FILE: arch/s390/kernel/compat_ioctl.c:177:
+	set_fs (KERNEL_DS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: arch/s390/kernel/compat_ioctl.c:178:
+^Ierr = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)&ifc);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: arch/s390/kernel/compat_ioctl.c:178:
+	err = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)&ifc);	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: arch/s390/kernel/compat_ioctl.c:179:
+	set_fs (old_fs);

CHECK:SPACING: No space is necessary after a cast
#884: FILE: arch/s390/kernel/compat_ioctl.c:184:
+	ifr32 = (struct ifreq32 *) A(ifc32.ifcbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#885: FILE: arch/s390/kernel/compat_ioctl.c:185:
+	len = ifc.ifc_len / sizeof (struct ifreq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#886: FILE: arch/s390/kernel/compat_ioctl.c:186:
+	ifc32.ifc_len = len * sizeof (struct ifreq32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#889: FILE: arch/s390/kernel/compat_ioctl.c:189:
+		if (copy_to_user(ifr32++, ifr++, sizeof (struct ifreq32))) {

ERROR:SPACING: space required before the open parenthesis '('
#900: FILE: arch/s390/kernel/compat_ioctl.c:200:
+	if(ifc.ifc_buf != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ifc.ifc_buf"
#900: FILE: arch/s390/kernel/compat_ioctl.c:200:
+	if(ifc.ifc_buf != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#901: FILE: arch/s390/kernel/compat_ioctl.c:201:
+		kfree (ifc.ifc_buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: arch/s390/kernel/compat_ioctl.c:211:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#943: FILE: arch/s390/kernel/compat_ioctl.c:243:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#944: FILE: arch/s390/kernel/compat_ioctl.c:244:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: arch/s390/kernel/compat_ioctl.c:245:
+	set_fs (old_fs);

CHECK:SPACING: No space is necessary after a cast
#960: FILE: arch/s390/kernel/compat_ioctl.c:260:
+	struct ifreq32 *uifr = (struct ifreq32 *) A(arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#964: FILE: arch/s390/kernel/compat_ioctl.c:264:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.mem_start
#968: FILE: arch/s390/kernel/compat_ioctl.c:268:
+		err |= __get_user(ifr.ifr_map.mem_start, &(uifr->ifr_ifru.ifru_map.mem_start));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.mem_end
#969: FILE: arch/s390/kernel/compat_ioctl.c:269:
+		err |= __get_user(ifr.ifr_map.mem_end, &(uifr->ifr_ifru.ifru_map.mem_end));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.base_addr
#970: FILE: arch/s390/kernel/compat_ioctl.c:270:
+		err |= __get_user(ifr.ifr_map.base_addr, &(uifr->ifr_ifru.ifru_map.base_addr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.irq
#971: FILE: arch/s390/kernel/compat_ioctl.c:271:
+		err |= __get_user(ifr.ifr_map.irq, &(uifr->ifr_ifru.ifru_map.irq));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.dma
#972: FILE: arch/s390/kernel/compat_ioctl.c:272:
+		err |= __get_user(ifr.ifr_map.dma, &(uifr->ifr_ifru.ifru_map.dma));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.port
#973: FILE: arch/s390/kernel/compat_ioctl.c:273:
+		err |= __get_user(ifr.ifr_map.port, &(uifr->ifr_ifru.ifru_map.port));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#983: FILE: arch/s390/kernel/compat_ioctl.c:283:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#984: FILE: arch/s390/kernel/compat_ioctl.c:284:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#985: FILE: arch/s390/kernel/compat_ioctl.c:285:
+	set_fs (old_fs);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1004: FILE: arch/s390/kernel/compat_ioctl.c:304:
+			err |= __put_user(ifr.ifr_map.mem_start, &(uifr->ifr_ifru.ifru_map.mem_start));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.mem_start
#1004: FILE: arch/s390/kernel/compat_ioctl.c:304:
+			err |= __put_user(ifr.ifr_map.mem_start, &(uifr->ifr_ifru.ifru_map.mem_start));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.mem_end
#1005: FILE: arch/s390/kernel/compat_ioctl.c:305:
+			err |= __put_user(ifr.ifr_map.mem_end, &(uifr->ifr_ifru.ifru_map.mem_end));

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1006: FILE: arch/s390/kernel/compat_ioctl.c:306:
+			err |= __put_user(ifr.ifr_map.base_addr, &(uifr->ifr_ifru.ifru_map.base_addr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.base_addr
#1006: FILE: arch/s390/kernel/compat_ioctl.c:306:
+			err |= __put_user(ifr.ifr_map.base_addr, &(uifr->ifr_ifru.ifru_map.base_addr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.irq
#1007: FILE: arch/s390/kernel/compat_ioctl.c:307:
+			err |= __put_user(ifr.ifr_map.irq, &(uifr->ifr_ifru.ifru_map.irq));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.dma
#1008: FILE: arch/s390/kernel/compat_ioctl.c:308:
+			err |= __put_user(ifr.ifr_map.dma, &(uifr->ifr_ifru.ifru_map.dma));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uifr->ifr_ifru.ifru_map.port
#1009: FILE: arch/s390/kernel/compat_ioctl.c:309:
+			err |= __put_user(ifr.ifr_map.port, &(uifr->ifr_ifru.ifru_map.port));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1019: FILE: arch/s390/kernel/compat_ioctl.c:319:
+struct rtentry32
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1030: FILE: arch/s390/kernel/compat_ioctl.c:330:
+^Iunsigned int^Irt_mtu;^I^I/* per route MTU/Window ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1034: FILE: arch/s390/kernel/compat_ioctl.c:334:
+^Iunsigned int^Irt_window;^I/* Window clamping ^I^I*/$

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: arch/s390/kernel/compat_ioctl.c:340:
+	struct rtentry32 *ur = (struct rtentry32 *) A(arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: arch/s390/kernel/compat_ioctl.c:346:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1047: FILE: arch/s390/kernel/compat_ioctl.c:347:
+	ret = copy_from_user (&r.rt_dst, &(ur->rt_dst), 3 * sizeof(struct sockaddr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_dst
#1047: FILE: arch/s390/kernel/compat_ioctl.c:347:
+	ret = copy_from_user (&r.rt_dst, &(ur->rt_dst), 3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1048: FILE: arch/s390/kernel/compat_ioctl.c:348:
+	ret |= __get_user (r.rt_flags, &(ur->rt_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_flags
#1048: FILE: arch/s390/kernel/compat_ioctl.c:348:
+	ret |= __get_user (r.rt_flags, &(ur->rt_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1049: FILE: arch/s390/kernel/compat_ioctl.c:349:
+	ret |= __get_user (r.rt_metric, &(ur->rt_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_metric
#1049: FILE: arch/s390/kernel/compat_ioctl.c:349:
+	ret |= __get_user (r.rt_metric, &(ur->rt_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1050: FILE: arch/s390/kernel/compat_ioctl.c:350:
+	ret |= __get_user (r.rt_mtu, &(ur->rt_mtu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_mtu
#1050: FILE: arch/s390/kernel/compat_ioctl.c:350:
+	ret |= __get_user (r.rt_mtu, &(ur->rt_mtu));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1051: FILE: arch/s390/kernel/compat_ioctl.c:351:
+	ret |= __get_user (r.rt_window, &(ur->rt_window));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_window
#1051: FILE: arch/s390/kernel/compat_ioctl.c:351:
+	ret |= __get_user (r.rt_window, &(ur->rt_window));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1052: FILE: arch/s390/kernel/compat_ioctl.c:352:
+	ret |= __get_user (r.rt_irtt, &(ur->rt_irtt));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_irtt
#1052: FILE: arch/s390/kernel/compat_ioctl.c:352:
+	ret |= __get_user (r.rt_irtt, &(ur->rt_irtt));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1053: FILE: arch/s390/kernel/compat_ioctl.c:353:
+	ret |= __get_user (rtdev, &(ur->rt_dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur->rt_dev
#1053: FILE: arch/s390/kernel/compat_ioctl.c:353:
+	ret |= __get_user (rtdev, &(ur->rt_dev));

CHECK:BRACES: braces {} should be used on all arms of this statement
#1054: FILE: arch/s390/kernel/compat_ioctl.c:354:
+	if (rtdev) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1055: FILE: arch/s390/kernel/compat_ioctl.c:355:
+		ret |= copy_from_user (devname, (char *) A(rtdev), 15);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1055: FILE: arch/s390/kernel/compat_ioctl.c:355:
+		ret |= copy_from_user (devname, (char *) A(rtdev), 15);

CHECK:BRACES: Unbalanced braces around else statement
#1057: FILE: arch/s390/kernel/compat_ioctl.c:357:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1061: FILE: arch/s390/kernel/compat_ioctl.c:361:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: arch/s390/kernel/compat_ioctl.c:362:
+	ret = sys_ioctl (fd, cmd, (long)&r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1063: FILE: arch/s390/kernel/compat_ioctl.c:363:
+	set_fs (old_fs);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1071: FILE: arch/s390/kernel/compat_ioctl.c:371:
+	case EXT2_IOC32_GETFLAGS: cmd = EXT2_IOC_GETFLAGS; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1072: FILE: arch/s390/kernel/compat_ioctl.c:372:
+	case EXT2_IOC32_SETFLAGS: cmd = EXT2_IOC_SETFLAGS; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1073: FILE: arch/s390/kernel/compat_ioctl.c:373:
+	case EXT2_IOC32_GETVERSION: cmd = EXT2_IOC_GETVERSION; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1074: FILE: arch/s390/kernel/compat_ioctl.c:374:
+	case EXT2_IOC32_SETVERSION: cmd = EXT2_IOC_SETVERSION; break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1079: FILE: arch/s390/kernel/compat_ioctl.c:379:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1101: FILE: arch/s390/kernel/compat_ioctl.c:401:
+	switch(cmd) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1107: FILE: arch/s390/kernel/compat_ioctl.c:407:
+		err |= __copy_from_user((char *)&l.lo_offset, (char *)&((struct loop_info32 *)arg)->lo_offset,

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1108: FILE: arch/s390/kernel/compat_ioctl.c:408:
+					   8 + (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1112: FILE: arch/s390/kernel/compat_ioctl.c:412:
+			set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1113: FILE: arch/s390/kernel/compat_ioctl.c:413:
+			err = sys_ioctl (fd, cmd, (unsigned long)&l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: arch/s390/kernel/compat_ioctl.c:414:
+			set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1118: FILE: arch/s390/kernel/compat_ioctl.c:418:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: arch/s390/kernel/compat_ioctl.c:419:
+		err = sys_ioctl (fd, cmd, (unsigned long)&l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1120: FILE: arch/s390/kernel/compat_ioctl.c:420:
+		set_fs (old_fs);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1127: FILE: arch/s390/kernel/compat_ioctl.c:427:
+					   (char *)&l.lo_offset, (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1133: FILE: arch/s390/kernel/compat_ioctl.c:433:
+		static int count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1134: FILE: arch/s390/kernel/compat_ioctl.c:434:
+		static int count = 0;
+		if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1135: FILE: arch/s390/kernel/compat_ioctl.c:435:
+			printk("%s: Unknown loop ioctl cmd, fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1136: FILE: arch/s390/kernel/compat_ioctl.c:436:
+			printk("%s: Unknown loop ioctl cmd, fd(%d) "
+			       "cmd(%08x) arg(%08lx)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1137: FILE: arch/s390/kernel/compat_ioctl.c:437:
+			       __FUNCTION__, fd, cmd, arg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1143: FILE: arch/s390/kernel/compat_ioctl.c:443:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: arch/s390/kernel/compat_ioctl.c:450:
+                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: arch/s390/kernel/compat_ioctl.c:450:
+                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: arch/s390/kernel/compat_ioctl.c:450:
+                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1157: FILE: arch/s390/kernel/compat_ioctl.c:457:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1162: FILE: arch/s390/kernel/compat_ioctl.c:462:
+	if (err) return err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1168: FILE: arch/s390/kernel/compat_ioctl.c:468:
+                if (copy_from_user(&p, a.data, sizeof(struct blkpg_partition)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: arch/s390/kernel/compat_ioctl.c:468:
+                if (copy_from_user(&p, a.data, sizeof(struct blkpg_partition)))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: arch/s390/kernel/compat_ioctl.c:471:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1173: FILE: arch/s390/kernel/compat_ioctl.c:473:
+		set_fs (old_fs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: arch/s390/kernel/compat_ioctl.c:476:
+^I}                                        $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1180: FILE: arch/s390/kernel/compat_ioctl.c:480:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1181: FILE: arch/s390/kernel/compat_ioctl.c:481:
+typedef struct ica_z90_status_t {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: arch/s390/kernel/compat_ioctl.c:482:
+  int totalcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: arch/s390/kernel/compat_ioctl.c:483:
+  int leedslitecount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: arch/s390/kernel/compat_ioctl.c:484:
+  int leeds2count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: arch/s390/kernel/compat_ioctl.c:485:
+  int requestqWaitCount;$

CHECK:CAMELCASE: Avoid CamelCase: <requestqWaitCount>
#1185: FILE: arch/s390/kernel/compat_ioctl.c:485:
+  int requestqWaitCount;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: arch/s390/kernel/compat_ioctl.c:486:
+  int pendingqWaitCount;$

CHECK:CAMELCASE: Avoid CamelCase: <pendingqWaitCount>
#1186: FILE: arch/s390/kernel/compat_ioctl.c:486:
+  int pendingqWaitCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: arch/s390/kernel/compat_ioctl.c:487:
+  int totalOpenCount;$

CHECK:CAMELCASE: Avoid CamelCase: <totalOpenCount>
#1187: FILE: arch/s390/kernel/compat_ioctl.c:487:
+  int totalOpenCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/s390/kernel/compat_ioctl.c:488:
+  int cryptoDomain;$

CHECK:CAMELCASE: Avoid CamelCase: <cryptoDomain>
#1188: FILE: arch/s390/kernel/compat_ioctl.c:488:
+  int cryptoDomain;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: arch/s390/kernel/compat_ioctl.c:489:
+  unsigned char status[64];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: arch/s390/kernel/compat_ioctl.c:490:
+  unsigned char qdepth[64];$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1193: FILE: arch/s390/kernel/compat_ioctl.c:493:
+typedef struct _ica_rsa_modexpo {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: arch/s390/kernel/compat_ioctl.c:494:
+  char         *inputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: arch/s390/kernel/compat_ioctl.c:495:
+  unsigned int  inputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: arch/s390/kernel/compat_ioctl.c:496:
+  char         *outputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: arch/s390/kernel/compat_ioctl.c:497:
+  unsigned int  outputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: arch/s390/kernel/compat_ioctl.c:498:
+  char         *b_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: arch/s390/kernel/compat_ioctl.c:499:
+  char         *n_modulus;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1202: FILE: arch/s390/kernel/compat_ioctl.c:502:
+typedef struct _ica_rsa_modexpo_32 {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: arch/s390/kernel/compat_ioctl.c:503:
+  u32          inputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: arch/s390/kernel/compat_ioctl.c:504:
+  u32          inputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: arch/s390/kernel/compat_ioctl.c:505:
+  u32          outputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: arch/s390/kernel/compat_ioctl.c:506:
+  u32          outputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: arch/s390/kernel/compat_ioctl.c:507:
+  u32          b_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: arch/s390/kernel/compat_ioctl.c:508:
+  u32          n_modulus;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1211: FILE: arch/s390/kernel/compat_ioctl.c:511:
+typedef struct _ica_rsa_modexpo_crt {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: arch/s390/kernel/compat_ioctl.c:512:
+  char         *inputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: arch/s390/kernel/compat_ioctl.c:513:
+  unsigned int  inputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: arch/s390/kernel/compat_ioctl.c:514:
+  char         *outputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: arch/s390/kernel/compat_ioctl.c:515:
+  unsigned int  outputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: arch/s390/kernel/compat_ioctl.c:516:
+  char         *bp_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: arch/s390/kernel/compat_ioctl.c:517:
+  char         *bq_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: arch/s390/kernel/compat_ioctl.c:518:
+  char         *np_prime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: arch/s390/kernel/compat_ioctl.c:519:
+  char         *nq_prime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: arch/s390/kernel/compat_ioctl.c:520:
+  char         *u_mult_inv;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1223: FILE: arch/s390/kernel/compat_ioctl.c:523:
+typedef struct _ica_rsa_modexpo_crt_32 {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: arch/s390/kernel/compat_ioctl.c:524:
+  u32          inputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: arch/s390/kernel/compat_ioctl.c:525:
+  u32          inputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: arch/s390/kernel/compat_ioctl.c:526:
+  u32          outputdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/s390/kernel/compat_ioctl.c:527:
+  u32          outputdatalength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: arch/s390/kernel/compat_ioctl.c:528:
+  u32          bp_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: arch/s390/kernel/compat_ioctl.c:529:
+  u32          bq_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: arch/s390/kernel/compat_ioctl.c:530:
+  u32          np_prime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: arch/s390/kernel/compat_ioctl.c:531:
+  u32          nq_prime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: arch/s390/kernel/compat_ioctl.c:532:
+  u32          u_mult_inv;$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1236: FILE: arch/s390/kernel/compat_ioctl.c:536:
+#define ICARSAMODEXPO   _IOC(_IOC_READ|_IOC_WRITE, ICA_IOCTL_MAGIC, 0x05, 0)
                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1237: FILE: arch/s390/kernel/compat_ioctl.c:537:
+#define ICARSACRT       _IOC(_IOC_READ|_IOC_WRITE, ICA_IOCTL_MAGIC, 0x06, 0) $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1237: FILE: arch/s390/kernel/compat_ioctl.c:537:
+#define ICARSACRT       _IOC(_IOC_READ|_IOC_WRITE, ICA_IOCTL_MAGIC, 0x06, 0) 
                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1238: FILE: arch/s390/kernel/compat_ioctl.c:538:
+#define ICARSAMODMULT   _IOC(_IOC_READ|_IOC_WRITE, ICA_IOCTL_MAGIC, 0x07, 0)
                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1252: FILE: arch/s390/kernel/compat_ioctl.c:552:
+	memset (&rsa, 0, sizeof(rsa));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: arch/s390/kernel/compat_ioctl.c:554:
+	err |= __get_user (inputdata, &rsa32->inputdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1255: FILE: arch/s390/kernel/compat_ioctl.c:555:
+	err |= __get_user (rsa.inputdatalength, &rsa32->inputdatalength);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1256: FILE: arch/s390/kernel/compat_ioctl.c:556:
+	err |= __get_user (outputdata, &rsa32->outputdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1257: FILE: arch/s390/kernel/compat_ioctl.c:557:
+	err |= __get_user (rsa.outputdatalength, &rsa32->outputdatalength);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: arch/s390/kernel/compat_ioctl.c:558:
+	err |= __get_user (b_key, &rsa32->b_key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1259: FILE: arch/s390/kernel/compat_ioctl.c:559:
+	err |= __get_user (n_modulus, &rsa32->n_modulus);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1263: FILE: arch/s390/kernel/compat_ioctl.c:563:
+	rsa.inputdata = (char *)kmalloc(rsa.inputdatalength, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1268: FILE: arch/s390/kernel/compat_ioctl.c:568:
+^Iif (copy_from_user(rsa.inputdata, (char *)(u64)(inputdata & 0x7fffffff), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1274: FILE: arch/s390/kernel/compat_ioctl.c:574:
+	rsa.outputdata = (char *)kmalloc(rsa.outputdatalength, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1280: FILE: arch/s390/kernel/compat_ioctl.c:580:
+	rsa.b_key = (char *)kmalloc(rsa.inputdatalength, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: arch/s390/kernel/compat_ioctl.c:585:
+^Iif (copy_from_user(rsa.b_key, (char *)(u64)(b_key & 0x7fffffff), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1291: FILE: arch/s390/kernel/compat_ioctl.c:591:
+	rsa.n_modulus = (char *)kmalloc(rsa.inputdatalength, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: arch/s390/kernel/compat_ioctl.c:596:
+^Iif (copy_from_user(rsa.n_modulus, (char *)(u64)(n_modulus & 0x7fffffff), $

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1314: FILE: arch/s390/kernel/compat_ioctl.c:614:
+	if (rsa.inputdata)
+		kfree(rsa.inputdata);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1316: FILE: arch/s390/kernel/compat_ioctl.c:616:
+	if (rsa.outputdata)
+		kfree(rsa.outputdata);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1318: FILE: arch/s390/kernel/compat_ioctl.c:618:
+	if (rsa.b_key)
+		kfree(rsa.b_key);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1320: FILE: arch/s390/kernel/compat_ioctl.c:620:
+	if (rsa.n_modulus)
+		kfree(rsa.n_modulus);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1321: FILE: arch/s390/kernel/compat_ioctl.c:621:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1333: FILE: arch/s390/kernel/compat_ioctl.c:633:
+	memset (&rsa, 0, sizeof(rsa));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1335: FILE: arch/s390/kernel/compat_ioctl.c:635:
+	err |= __get_user (inputdata, &rsa32->inputdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1336: FILE: arch/s390/kernel/compat_ioctl.c:636:
+	err |= __get_user (rsa.inputdatalength, &rsa32->inputdatalength);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1337: FILE: arch/s390/kernel/compat_ioctl.c:637:
+	err |= __get_user (outputdata, &rsa32->outputdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1338: FILE: arch/s390/kernel/compat_ioctl.c:638:
+	err |= __get_user (rsa.outputdatalength, &rsa32->outputdatalength);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1339: FILE: arch/s390/kernel/compat_ioctl.c:639:
+	err |= __get_user (bp_key, &rsa32->bp_key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1340: FILE: arch/s390/kernel/compat_ioctl.c:640:
+	err |= __get_user (bq_key, &rsa32->bq_key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1341: FILE: arch/s390/kernel/compat_ioctl.c:641:
+	err |= __get_user (np_prime, &rsa32->np_prime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1342: FILE: arch/s390/kernel/compat_ioctl.c:642:
+	err |= __get_user (nq_prime, &rsa32->nq_prime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1343: FILE: arch/s390/kernel/compat_ioctl.c:643:
+	err |= __get_user (u_mult_inv, &rsa32->u_mult_inv);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1347: FILE: arch/s390/kernel/compat_ioctl.c:647:
+	rsa.inputdata = (char *)kmalloc(rsa.inputdatalength, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1352: FILE: arch/s390/kernel/compat_ioctl.c:652:
+^Iif (copy_from_user(rsa.inputdata, (char *)(u64)(inputdata & 0x7fffffff), $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1358: FILE: arch/s390/kernel/compat_ioctl.c:658:
+	rsa.outputdata = (char *)kmalloc(rsa.outputdatalength, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1364: FILE: arch/s390/kernel/compat_ioctl.c:664:
+	rsa.bp_key = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);
 	                                                ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1364: FILE: arch/s390/kernel/compat_ioctl.c:664:
+	rsa.bp_key = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: arch/s390/kernel/compat_ioctl.c:669:
+^Iif (copy_from_user(rsa.bp_key, (char *)(u64)(bp_key & 0x7fffffff), $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1370: FILE: arch/s390/kernel/compat_ioctl.c:670:
+			   rsa.inputdatalength/2 + 8)) {
 			                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1375: FILE: arch/s390/kernel/compat_ioctl.c:675:
+	rsa.bq_key = (char *)kmalloc(rsa.inputdatalength/2, GFP_KERNEL);
 	                                                ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1375: FILE: arch/s390/kernel/compat_ioctl.c:675:
+	rsa.bq_key = (char *)kmalloc(rsa.inputdatalength/2, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1380: FILE: arch/s390/kernel/compat_ioctl.c:680:
+^Iif (copy_from_user(rsa.bq_key, (char *)(u64)(bq_key & 0x7fffffff), $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1381: FILE: arch/s390/kernel/compat_ioctl.c:681:
+			   rsa.inputdatalength/2)) {
 			                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1386: FILE: arch/s390/kernel/compat_ioctl.c:686:
+	rsa.np_prime = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);
 	                                                  ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1386: FILE: arch/s390/kernel/compat_ioctl.c:686:
+	rsa.np_prime = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: arch/s390/kernel/compat_ioctl.c:691:
+^Iif (copy_from_user(rsa.np_prime, (char *)(u64)(np_prime & 0x7fffffff), $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1392: FILE: arch/s390/kernel/compat_ioctl.c:692:
+			   rsa.inputdatalength/2 + 8)) {
 			                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1397: FILE: arch/s390/kernel/compat_ioctl.c:697:
+	rsa.nq_prime = (char *)kmalloc(rsa.inputdatalength/2, GFP_KERNEL);
 	                                                  ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1397: FILE: arch/s390/kernel/compat_ioctl.c:697:
+	rsa.nq_prime = (char *)kmalloc(rsa.inputdatalength/2, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1402: FILE: arch/s390/kernel/compat_ioctl.c:702:
+^Iif (copy_from_user(rsa.nq_prime, (char *)(u64)(nq_prime & 0x7fffffff), $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1403: FILE: arch/s390/kernel/compat_ioctl.c:703:
+			   rsa.inputdatalength/2)) {
 			                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1408: FILE: arch/s390/kernel/compat_ioctl.c:708:
+	rsa.u_mult_inv = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);
 	                                                    ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1408: FILE: arch/s390/kernel/compat_ioctl.c:708:
+	rsa.u_mult_inv = (char *)kmalloc(rsa.inputdatalength/2 + 8, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1413: FILE: arch/s390/kernel/compat_ioctl.c:713:
+^Iif (copy_from_user(rsa.u_mult_inv, (char *)(u64)(u_mult_inv & 0x7fffffff), $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1414: FILE: arch/s390/kernel/compat_ioctl.c:714:
+			   rsa.inputdatalength/2 + 8)) {
 			                      ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1431: FILE: arch/s390/kernel/compat_ioctl.c:731:
+	if (rsa.inputdata)
+		kfree(rsa.inputdata);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1433: FILE: arch/s390/kernel/compat_ioctl.c:733:
+	if (rsa.outputdata)
+		kfree(rsa.outputdata);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1435: FILE: arch/s390/kernel/compat_ioctl.c:735:
+	if (rsa.bp_key)
+		kfree(rsa.bp_key);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1437: FILE: arch/s390/kernel/compat_ioctl.c:737:
+	if (rsa.bq_key)
+		kfree(rsa.bq_key);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1439: FILE: arch/s390/kernel/compat_ioctl.c:739:
+	if (rsa.np_prime)
+		kfree(rsa.np_prime);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1441: FILE: arch/s390/kernel/compat_ioctl.c:741:
+	if (rsa.nq_prime)
+		kfree(rsa.nq_prime);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1443: FILE: arch/s390/kernel/compat_ioctl.c:743:
+	if (rsa.u_mult_inv)
+		kfree(rsa.u_mult_inv);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: arch/s390/kernel/compat_ioctl.c:744:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1453: FILE: arch/s390/kernel/compat_ioctl.c:753:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1454: FILE: arch/s390/kernel/compat_ioctl.c:754:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1456: FILE: arch/s390/kernel/compat_ioctl.c:756:
+	set_fs (old_fs);

CHECK:SPACING: No space is necessary after a cast
#1457: FILE: arch/s390/kernel/compat_ioctl.c:757:
+	if (!err && put_user((unsigned int) val, (u32 *)arg))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1464: FILE: arch/s390/kernel/compat_ioctl.c:764:
+	int (*function)(unsigned int, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1464: FILE: arch/s390/kernel/compat_ioctl.c:764:
+	int (*function)(unsigned int, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1464: FILE: arch/s390/kernel/compat_ioctl.c:764:
+	int (*function)(unsigned int, unsigned int, unsigned long);

CHECK:SPACING: No space is necessary after a cast
#1472: FILE: arch/s390/kernel/compat_ioctl.c:772:
+#define IOCTL32_DEFAULT(cmd)		{ { cmd, (void *) sys_ioctl }, 0 }

CHECK:SPACING: No space is necessary after a cast
#1473: FILE: arch/s390/kernel/compat_ioctl.c:773:
+#define IOCTL32_HANDLER(cmd, handler)	{ { cmd, (void *) handler }, 0 }

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1685: FILE: arch/s390/kernel/compat_ioctl.c:985:
+	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);
 	                                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1685: FILE: arch/s390/kernel/compat_ioctl.c:985:
+	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1685: FILE: arch/s390/kernel/compat_ioctl.c:985:
+	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1685: FILE: arch/s390/kernel/compat_ioctl.c:985:
+	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1685: FILE: arch/s390/kernel/compat_ioctl.c:985:
+	int (*handler)(unsigned int, unsigned int, unsigned long, struct file * filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1686: FILE: arch/s390/kernel/compat_ioctl.c:986:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1694: FILE: arch/s390/kernel/compat_ioctl.c:994:
+	filp = fget(fd);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1695: FILE: arch/s390/kernel/compat_ioctl.c:995:
+	if (!filp)
 	     ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1699: FILE: arch/s390/kernel/compat_ioctl.c:999:
+		error = sys_ioctl (fd, cmd, arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1708: FILE: arch/s390/kernel/compat_ioctl.c:1008:
+		error = handler(fd, cmd, arg, filp);
 		                              ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1711: FILE: arch/s390/kernel/compat_ioctl.c:1011:
+		printk("unknown ioctl: %08x\n", cmd);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1714: FILE: arch/s390/kernel/compat_ioctl.c:1014:
+	fput(filp);
 	     ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1723: FILE: arch/s390/kernel/compat_ioctl.c:1023:
+	if (!ioctl32_hash_table[hash])
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1725: FILE: arch/s390/kernel/compat_ioctl.c:1025:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1727: FILE: arch/s390/kernel/compat_ioctl.c:1027:
+		struct ioctl32_list *l;
+		l = ioctl32_hash_table[hash];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l"
#1742: FILE: arch/s390/kernel/compat_ioctl.c:1042:
+	for (l = ioctl32_hash_table[hash]; l != NULL; l = l->next)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct ioctl32_list)...)
#1745: FILE: arch/s390/kernel/compat_ioctl.c:1045:
+	new = kmalloc(sizeof(struct ioctl32_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#1746: FILE: arch/s390/kernel/compat_ioctl.c:1046:
+	if (new == NULL)

CHECK:SPACING: No space is necessary after a cast
#1749: FILE: arch/s390/kernel/compat_ioctl.c:1049:
+	new->handler.function = (void *) handler;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l"
#1761: FILE: arch/s390/kernel/compat_ioctl.c:1061:
+	for (l = ioctl32_hash_table[hash]; l != NULL; l = l->next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!l"
#1766: FILE: arch/s390/kernel/compat_ioctl.c:1066:
+	if (l == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1768: FILE: arch/s390/kernel/compat_ioctl.c:1068:
+	if (p == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1779: FILE: arch/s390/kernel/compat_ioctl.c:1079:
+	int i;
+	for (i = 0; i < NR_IOCTL32_HANDLERS; i++)

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#1784: FILE: arch/s390/kernel/compat_ioctl.c:1084:
+__initcall(init_ioctl32);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 95 errors, 211 warnings, 88 checks, 1701 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
