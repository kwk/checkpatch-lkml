WARNING:TYPO_SPELLING: 'reproducable' may be misspelled - perhaps 'reproducible'?
#45: 
reproducable, eventually it comes back though, black-out can last
^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#148: 
Content-Disposition: attachment; filename="eepro100-napi-for2.4.21-pre5.diff"

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#157: FILE: drivers/net/eepro100.c:32:
+"eepro100.c: $Revision: 1.36 $ 2000/11/17 Modified by Andrey V. Savochkin <saw@saw.sw.com.sg> and others\n"

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/net/eepro100.c:510:
+^I/* used to pass rx_work_limit into speedo_rx,i don't want to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#198: FILE: drivers/net/eepro100.c:528:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: drivers/net/eepro100.c:535:
+^I0xf2, 0x48,   0, 0x40, 0xfa, 0x80, ^I^I/* 0x40=Force full-duplex */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: drivers/net/eepro100.c:579:
+static int speedo_poll (struct net_device *dev, int *budget);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#237: FILE: drivers/net/eepro100.c:917:
+	dev->quota = dev->weight = RX_RING_SIZE;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <SCBStatus>
#261: FILE: drivers/net/eepro100.c:1636:
+		outw(status & 0xac00, ioaddr + SCBStatus);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))
 		                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))
 		                                                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))

CHECK:CAMELCASE: Avoid CamelCase: <RrNoMem>
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))

CHECK:CAMELCASE: Avoid CamelCase: <RrPostponed>
#277: FILE: drivers/net/eepro100.c:1656:
+		if (first && ((status & 0x5000) || (sp->rx_ring_state&(RrNoMem|RrPostponed)) == RrPostponed || (status & 0x3c) != 0x10 ))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/net/eepro100.c:1659:
+^I^I^Iif (netif_msg_intr(sp)) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#281: FILE: drivers/net/eepro100.c:1660:
+				printk(KERN_DEBUG "switching to poll,status=%x\n",status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#281: FILE: drivers/net/eepro100.c:1660:
+				printk(KERN_DEBUG "switching to poll,status=%x\n",status);
 				                                                 ^

ERROR:SPACING: space required after that close brace '}'
#289: FILE: drivers/net/eepro100.c:1668:
+			}else {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#295: FILE: drivers/net/eepro100.c:1674:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: drivers/net/eepro100.c:1842:
+	long ioaddr = dev->base_addr;
+	outw(SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

CHECK:CAMELCASE: Avoid CamelCase: <SCBMaskEarlyRx>
#357: FILE: drivers/net/eepro100.c:1842:
+	outw(SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

CHECK:CAMELCASE: Avoid CamelCase: <SCBMaskFlowCtl>
#357: FILE: drivers/net/eepro100.c:1842:
+	outw(SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

CHECK:CAMELCASE: Avoid CamelCase: <SCBCmd>
#357: FILE: drivers/net/eepro100.c:1842:
+	outw(SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: drivers/net/eepro100.c:1849:
+	long ioaddr = dev->base_addr;
+	outw(SCBMaskRxDone | SCBMaskRxSuspend | SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

CHECK:CAMELCASE: Avoid CamelCase: <SCBMaskRxDone>
#364: FILE: drivers/net/eepro100.c:1849:
+	outw(SCBMaskRxDone | SCBMaskRxSuspend | SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

CHECK:CAMELCASE: Avoid CamelCase: <SCBMaskRxSuspend>
#364: FILE: drivers/net/eepro100.c:1849:
+	outw(SCBMaskRxDone | SCBMaskRxSuspend | SCBMaskEarlyRx | SCBMaskFlowCtl, ioaddr + SCBCmd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: drivers/net/eepro100.c:1853:
+static int speedo_poll (struct net_device *dev, int *budget)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#378: FILE: drivers/net/eepro100.c:1863:
+		printk(KERN_DEBUG " In speedo_poll().\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'speedo_poll', this function's name, in a string
#378: FILE: drivers/net/eepro100.c:1863:
+		printk(KERN_DEBUG " In speedo_poll().\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/net/eepro100.c:1866:
+^Iif (sp->curr_work_limit > dev->quota) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/net/eepro100.c:1869:
+^Ido {  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/net/eepro100.c:1882:
+^I^I^I/* If something arrives in this narrow window,an interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: drivers/net/eepro100.c:1883:
+^I^I^I * will be generated $

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#402: FILE: drivers/net/eepro100.c:1887:
+		/* done! at least thats what it looks like ;->
 		                  ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#403: FILE: drivers/net/eepro100.c:1888:
+		/* done! at least thats what it looks like ;->
+		   if new packets came in after our last check on status bits

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'havent' may be misspelled - perhaps 'haven't'?
#405: FILE: drivers/net/eepro100.c:1890:
+		   since we havent exceeded our quota 
 		            ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/net/eepro100.c:1890:
+^I^I   since we havent exceeded our quota $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: drivers/net/eepro100.c:1896:
+^I^Iif (netif_msg_intr(sp)) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#412: FILE: drivers/net/eepro100.c:1897:
+			printk(KERN_DEBUG "received==0\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: drivers/net/eepro100.c:1905:
+^I * to where we can start processing interrupts again $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: drivers/net/eepro100.c:1909:
+^I * 1. it can race with disabling irqs in irq handler (which are done to $

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#427: FILE: drivers/net/eepro100.c:1912:
+	 * 3. if an irq raised after the begining of the outer  beginning 
 	                                 ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/net/eepro100.c:1912:
+^I * 3. if an irq raised after the begining of the outer  beginning $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#441: FILE: drivers/net/eepro100.c:1926:
+		printk(KERN_DEBUG "done,received=%lu\n",received);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: drivers/net/eepro100.c:1926:
+		printk(KERN_DEBUG "done,received=%lu\n",received);
 		                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/net/eepro100.c:1928:
+        return 0;   /* done */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/net/eepro100.c:1928:
+        return 0;   /* done */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: drivers/net/eepro100.c:1932:
+^I^Iif (netif_msg_intr(sp)) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#448: FILE: drivers/net/eepro100.c:1933:
+			printk(KERN_DEBUG "received==0\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#458: FILE: drivers/net/eepro100.c:1943:
+		printk(KERN_DEBUG "not done,received=%lu\n",received);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#458: FILE: drivers/net/eepro100.c:1943:
+		printk(KERN_DEBUG "not done,received=%lu\n",received);
 		                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <RxComplete>
#488: FILE: drivers/net/eepro100.c:1981:
+		if (!(status & RxComplete)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/net/eepro100.c:1986:
+^I^I^I/* We check receiver state here because if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: drivers/net/eepro100.c:1988:
+^I^I^I * point to an empty entry or something $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: drivers/net/eepro100.c:1992:
+^I^I^I^Iif (netif_msg_intr(sp)) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#500: FILE: drivers/net/eepro100.c:1993:
+					printk(KERN_DEBUG "No resource,reset\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/net/eepro100.c:2000:
+^I^Iif (--sp->curr_work_limit < 0) $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#521: FILE: drivers/net/eepro100.c:2072:
+			received ++;
 			         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 22 warnings, 14 checks, 367 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384847.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
