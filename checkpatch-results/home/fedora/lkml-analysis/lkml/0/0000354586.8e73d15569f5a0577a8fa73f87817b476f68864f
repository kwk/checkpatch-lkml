WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test1/fs/relayfs/relay.c linux-2.6.0-test1-relayfs-printk/fs/relayfs/relay.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: fs/relayfs/relay.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#33: FILE: fs/relayfs/relay.c:5:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#54: FILE: fs/relayfs/relay.c:26:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#56: FILE: fs/relayfs/relay.c:28:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#57: FILE: fs/relayfs/relay.c:29:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#58: FILE: fs/relayfs/relay.c:30:
+#include <asm/pgtable.h>

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#66: FILE: fs/relayfs/relay.c:38:
+static struct rchan *	rchan_table[RELAY_MAX_CHANNELS];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: fs/relayfs/relay.c:66:
+static inline int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/relayfs/relay.c:71:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#100: FILE: fs/relayfs/relay.c:72:
+	if (rchan == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan_table[i]"
#105: FILE: fs/relayfs/relay.c:77:
+		if (rchan_table[i] == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#107: FILE: fs/relayfs/relay.c:79:
+			rchan_id = rchan->id = i;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/relayfs/relay.c:86:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: fs/relayfs/relay.c:94:
+static inline void $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#127: FILE: fs/relayfs/relay.c:99:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#127: FILE: fs/relayfs/relay.c:99:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#137: FILE: fs/relayfs/relay.c:109:
+#define FIX_SIZE(x) (((x) - 1) & PAGE_MASK) + PAGE_SIZE

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: fs/relayfs/relay.c:112:
+static inline unsigned long $

CHECK:SPACING: No space is necessary after a cast
#145: FILE: fs/relayfs/relay.c:117:
+	kva = (unsigned long) page_address(vmalloc_to_page((void *) adr));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#161: FILE: fs/relayfs/relay.c:133:
+	adr = (unsigned long) mem;

CHECK:SPACING: No space is necessary after a cast
#163: FILE: fs/relayfs/relay.c:135:
+		SetPageReserved(vmalloc_to_page((void *) adr));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/relayfs/relay.c:142:
+static void $

CHECK:SPACING: No space is necessary after a cast
#177: FILE: fs/relayfs/relay.c:149:
+	adr = (unsigned long) mem;

CHECK:SPACING: No space is necessary after a cast
#178: FILE: fs/relayfs/relay.c:150:
+	while ((long) size > 0) {

CHECK:SPACING: No space is necessary after a cast
#179: FILE: fs/relayfs/relay.c:151:
+		ClearPageReserved(vmalloc_to_page((void *) adr));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: fs/relayfs/relay.c:155:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: fs/relayfs/relay.c:159:
+static int $

CHECK:SPACING: No space is necessary after a cast
#193: FILE: fs/relayfs/relay.c:165:
+	unsigned long start = (unsigned long) adr;

CHECK:SPACING: No space is necessary after a cast
#196: FILE: fs/relayfs/relay.c:168:
+	pos = (unsigned long) start_pos;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#209: FILE: fs/relayfs/relay.c:181:
+}
+/* \end{Code inspired from BTTV driver} */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: fs/relayfs/relay.c:187:
+static void $

CHECK:SPACING: No space is necessary after a cast
#220: FILE: fs/relayfs/relay.c:192:
+	rchan->resize_buf = (char *) rvmalloc(rchan->resize_alloc_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: fs/relayfs/relay.c:193:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->resize_buf"
#222: FILE: fs/relayfs/relay.c:194:
+	if (rchan->resize_buf == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: fs/relayfs/relay.c:228:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/relayfs/relay.c:231:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: fs/relayfs/relay.c:236:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: fs/relayfs/relay.c:256:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: fs/relayfs/relay.c:288:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: fs/relayfs/relay.c:323:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: fs/relayfs/relay.c:331:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: fs/relayfs/relay.c:333:
+	if ((using_lockless(rchan) && new_nbufs == rchan->n_bufs) ||
+	   (!using_lockless(rchan) && new_bufsize == rchan->buf_size))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: fs/relayfs/relay.c:335:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: fs/relayfs/relay.c:339:
+	if (rchan->resizing) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#371: FILE: fs/relayfs/relay.c:343:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: fs/relayfs/relay.c:359:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: fs/relayfs/relay.c:363:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: fs/relayfs/relay.c:364:
+	if (in_interrupt()) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#395: FILE: fs/relayfs/relay.c:367:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: fs/relayfs/relay.c:371:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: fs/relayfs/relay.c:387:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#419: FILE: fs/relayfs/relay.c:391:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: fs/relayfs/relay.c:395:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: fs/relayfs/relay.c:417:
+		  char * oldbuf,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: fs/relayfs/relay.c:422:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: fs/relayfs/relay.c:427:
+^I$

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#461: FILE: fs/relayfs/relay.c:433:
+	rchan->relay_ops->copy_contents(rchan, newsize, oldsize, oldbuf, old_cur_idx, old_buf_size, old_n_bufs);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*free_buf)...) over kmalloc(sizeof(struct free_rchan_buf)...)
#490: FILE: fs/relayfs/relay.c:462:
+	free_buf = kmalloc(sizeof(struct free_rchan_buf), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#491: FILE: fs/relayfs/relay.c:463:
+	if (!free_buf) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: fs/relayfs/relay.c:480:
+ *^IWhen the replacement is done, the needs_resize() callback is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: fs/relayfs/relay.c:482:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: fs/relayfs/relay.c:494:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: fs/relayfs/relay.c:505:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#534: FILE: fs/relayfs/relay.c:506:
+	if (down_trylock(&rchan->resize_sem)) {
+		return -EBUSY;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->resize_buf"
#546: FILE: fs/relayfs/relay.c:518:
+	if (rchan->resize_buf == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan->buf"
#552: FILE: fs/relayfs/relay.c:524:
+	if (rchan->buf == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: fs/relayfs/relay.c:538:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: fs/relayfs/relay.c:543:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: fs/relayfs/relay.c:557:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#589: FILE: fs/relayfs/relay.c:561:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: fs/relayfs/relay.c:565:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: fs/relayfs/relay.c:576:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: fs/relayfs/relay.c:580:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rchan_table[i]"
#611: FILE: fs/relayfs/relay.c:583:
+		if (rchan_table[i] != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: fs/relayfs/relay.c:599:
+static int $

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: fs/relayfs/relay.c:603:
+	struct rchan *rchan = rchan_get(rchan_id);
+	if (rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#631: FILE: fs/relayfs/relay.c:603:
+	if (rchan == NULL)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#639: FILE: fs/relayfs/relay.c:611:
+	if (waitqueue_active(&rchan->read_wait))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: fs/relayfs/relay.c:626:
+ *^Irelay file from the relayfs filesystem.  Should only be called from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: fs/relayfs/relay.c:629:
+static int $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#660: FILE: fs/relayfs/relay.c:632:
+	if (rchan == NULL)
+	   return -EBADF;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#660: FILE: fs/relayfs/relay.c:632:
+	if (rchan == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#661: FILE: fs/relayfs/relay.c:633:
+	   return -EBADF;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rchan->buf"
#663: FILE: fs/relayfs/relay.c:635:
+	if (rchan->buf != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: fs/relayfs/relay.c:663:
+rchan_create(char *chanpath, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: fs/relayfs/relay.c:664:
+^I     int bufsize_lockless, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: fs/relayfs/relay.c:665:
+^I     int nbufs_lockless, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: fs/relayfs/relay.c:667:
+^I     int nbufs_locking, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: fs/relayfs/relay.c:668:
+^I     u32 rchan_flags, $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#704: FILE: fs/relayfs/relay.c:676:
+	rchan = (struct rchan *)kmalloc(sizeof(struct rchan), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rchan)...) over kmalloc(sizeof(struct rchan)...)
#704: FILE: fs/relayfs/relay.c:676:
+	rchan = (struct rchan *)kmalloc(sizeof(struct rchan), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#705: FILE: fs/relayfs/relay.c:677:
+	if (rchan == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: fs/relayfs/relay.c:688:
+^I$

CHECK:SPACING: No space is necessary after a cast
#750: FILE: fs/relayfs/relay.c:722:
+	if ((rchan->buf = (char *) rvmalloc(size_alloc)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#750: FILE: fs/relayfs/relay.c:722:
+	if ((rchan->buf = (char *) rvmalloc(size_alloc)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: fs/relayfs/relay.c:752:
+static void $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#783: FILE: fs/relayfs/relay.c:755:
+	unsigned i;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#795: FILE: fs/relayfs/relay.c:767:
+	rchan->resize_min = rchan->resize_max = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: fs/relayfs/relay.c:780:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: fs/relayfs/relay.c:786:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#832: FILE: fs/relayfs/relay.c:804:
+		/* Start first buffer at 0 - (end_reserve + 1) so that it
+		   gets initialized via buffer_start callback as well. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#832: FILE: fs/relayfs/relay.c:804:
+		   gets initialized via buffer_start callback as well. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: fs/relayfs/relay.c:808:
+^I^Iatomic_set(&fill_count(rchan, 0), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: fs/relayfs/relay.c:809:
+^I^I^I   (int)rchan->start_reserve + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#856: FILE: fs/relayfs/relay.c:828:
+ *^Iincludes the filename, creates any and all directories necessary $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: fs/relayfs/relay.c:831:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: fs/relayfs/relay.c:832:
+rchan_create_dir(char * chanpath, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#860: FILE: fs/relayfs/relay.c:832:
+rchan_create_dir(char * chanpath, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: fs/relayfs/relay.c:833:
+^I^I char **residual, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: fs/relayfs/relay.c:839:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: fs/relayfs/relay.c:869:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: fs/relayfs/relay.c:870:
+rchan_create_file(char * chanpath, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#898: FILE: fs/relayfs/relay.c:870:
+rchan_create_file(char * chanpath, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: fs/relayfs/relay.c:871:
+^I^I  struct dentry **dentry, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#900: FILE: fs/relayfs/relay.c:872:
+		  struct rchan * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#903: FILE: fs/relayfs/relay.c:875:
+	char * fname;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: fs/relayfs/relay.c:888:
+ * Low-level relayfs kernel API.  These functions should not normally be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: fs/relayfs/relay.c:893:
+ *^Irchan_get - get channel associated with id, incrementing refcount $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: fs/relayfs/relay.c:902:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#931: FILE: fs/relayfs/relay.c:903:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#931: FILE: fs/relayfs/relay.c:903:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: fs/relayfs/relay.c:905:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: fs/relayfs/relay.c:921:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: fs/relayfs/relay.c:938:
+ *^IThe errcode value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: fs/relayfs/relay.c:959:
+^I$

WARNING:TYPO_SPELLING: 'complted' may be misspelled - perhaps 'completed'?
#998: FILE: fs/relayfs/relay.c:970:
+ *      After the write into the reserved buffer has been complted, this
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#999: FILE: fs/relayfs/relay.c:971:
+ *      function must be called in order for the relay to determine whether $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: fs/relayfs/relay.c:977:
+^I^I  char *from, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1006: FILE: fs/relayfs/relay.c:978:
+^I^I  u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: fs/relayfs/relay.c:984:
+^Ideliver = packet_delivery(rchan) || $

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1017: FILE: fs/relayfs/relay.c:989:
+	if (deliver && waitqueue_active(&rchan->read_wait))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: fs/relayfs/relay.c:1007:
+int $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1044: FILE: fs/relayfs/relay.c:1016:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: fs/relayfs/relay.c:1036:
+exit:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: fs/relayfs/relay.c:1038:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: fs/relayfs/relay.c:1049:
+u32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: fs/relayfs/relay.c:1067:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: fs/relayfs/relay.c:1073:
+^I^I^I    int using_tsc) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: fs/relayfs/relay.c:1081:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: fs/relayfs/relay.c:1095:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: fs/relayfs/relay.c:1103:
+static int $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1148: FILE: fs/relayfs/relay.c:1120:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1181: FILE: fs/relayfs/relay.c:1153:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: fs/relayfs/relay.c:1156:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1187: FILE: fs/relayfs/relay.c:1159:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: fs/relayfs/relay.c:1170:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: fs/relayfs/relay.c:1215:
+ *^Ithe delivery mode (RELAY_DELIVERY_xxx) and the usage mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: fs/relayfs/relay.c:1218:
+ *^IThe total size of the channel buffer is bufsize * nbufs rounded up $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1251: FILE: fs/relayfs/relay.c:1223:
+ *^Ia power of 2, and an nbufs value that would be preferred for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: fs/relayfs/relay.c:1224:
+ *^Ilockless scheme - if the locking scheme is chosen, nbufs will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: fs/relayfs/relay.c:1227:
+ *^Istart_reserve and end_reserve allow clients to specify areas at the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: fs/relayfs/relay.c:1241:
+int $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chanpath"
#1288: FILE: fs/relayfs/relay.c:1260:
+	if (chanpath == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!channel_callbacks"
#1291: FILE: fs/relayfs/relay.c:1263:
+	if (channel_callbacks == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1301: FILE: fs/relayfs/relay.c:1273:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1309: FILE: fs/relayfs/relay.c:1281:
+	if ((err = rchan_create_file(chanpath, &dentry, rchan)) < 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->buffer_end"
#1317: FILE: fs/relayfs/relay.c:1289:
+	if (callbacks->buffer_end == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->buffer_start"
#1319: FILE: fs/relayfs/relay.c:1291:
+	if (callbacks->buffer_start == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->deliver"
#1321: FILE: fs/relayfs/relay.c:1293:
+	if (callbacks->deliver == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->buffers_full"
#1323: FILE: fs/relayfs/relay.c:1295:
+	if (callbacks->buffers_full == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->needs_resize"
#1325: FILE: fs/relayfs/relay.c:1297:
+	if (callbacks->needs_resize == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->resize_offset"
#1327: FILE: fs/relayfs/relay.c:1299:
+	if (callbacks->resize_offset == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1344: FILE: fs/relayfs/relay.c:1316:
+^Iif (resize_min > 0 && resize_max > 0 && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: fs/relayfs/relay.c:1317:
+	if (resize_min > 0 && resize_max > 0 && 
+	   resize_max < RELAY_LOCKLESS_MAX_TOTAL_BUF_SIZE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1367: FILE: fs/relayfs/relay.c:1339:
+ *^Ilockless scheme regardless of usage). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1372: FILE: fs/relayfs/relay.c:1344:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: fs/relayfs/relay.c:1345:
+relay_write(int rchan_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: fs/relayfs/relay.c:1346:
+^I    const void *data_ptr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: fs/relayfs/relay.c:1357:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1387: FILE: fs/relayfs/relay.c:1359:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1392: FILE: fs/relayfs/relay.c:1364:
+^Iwrite_pos = reserved = relay_reserve(rchan, count, &ts, &td, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1392: FILE: fs/relayfs/relay.c:1364:
+	write_pos = reserved = relay_reserve(rchan, count, &ts, &td, 

CHECK:BRACES: braces {} should be used on all arms of this statement
#1395: FILE: fs/relayfs/relay.c:1367:
+	if (reserved != NULL) {
[...]
+	} else if (reserve_code == RELAY_WRITE_TOO_LONG)
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "reserved"
#1395: FILE: fs/relayfs/relay.c:1367:
+	if (reserved != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'td_offset >= 0'
#1397: FILE: fs/relayfs/relay.c:1369:
+		if ((td_offset >= 0) && (td_offset < count - sizeof(td)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1437: FILE: fs/relayfs/relay.c:1409:
+	if (buf_size) { /* paranoia */
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1443: FILE: fs/relayfs/relay.c:1415:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#1455: FILE: fs/relayfs/relay.c:1427:
+	if (read_count && buf != NULL)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1494: FILE: fs/relayfs/relay.c:1466:
+_relay_read(struct rchan *rchan, char * buf, size_t count, u32 read_offset, u32 *new_offset, int wait)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1494: FILE: fs/relayfs/relay.c:1466:
+_relay_read(struct rchan *rchan, char * buf, size_t count, u32 read_offset, u32 *new_offset, int wait)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1501: FILE: fs/relayfs/relay.c:1473:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: fs/relayfs/relay.c:1481:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#1510: FILE: fs/relayfs/relay.c:1482:
+	if (buf != NULL && wait) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1512: FILE: fs/relayfs/relay.c:1484:
+		err = wait_event_interruptible(rchan->read_wait,
+		       ((rchan->finalized == 1) ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: fs/relayfs/relay.c:1505:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1552: FILE: fs/relayfs/relay.c:1524:
+relay_read(int rchan_id, char * buf, size_t count, u32 read_offset, u32 *new_offset, int wait)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1555: FILE: fs/relayfs/relay.c:1527:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1559: FILE: fs/relayfs/relay.c:1531:
+	if (rchan == NULL)

WARNING:TYPO_SPELLING: 'fullfill' may be misspelled - perhaps 'fulfill'?
#1576: FILE: fs/relayfs/relay.c:1548:
+ *	@use_nbufs: this many sub-buffers are needed to fullfill the request
   	                                                ^^^^^^^^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1582: FILE: fs/relayfs/relay.c:1554:
+find_last_start(struct rchan *rchan, size_t count, int *start_bufno, u32 *start_offset, int *use_nbufs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1595: FILE: fs/relayfs/relay.c:1567:
+	if (using_lockless(rchan))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1597: FILE: fs/relayfs/relay.c:1569:
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1605: FILE: fs/relayfs/relay.c:1577:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1620: FILE: fs/relayfs/relay.c:1592:
+		if (cur_bufno < RELAY_MAX_BUFS)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1622: FILE: fs/relayfs/relay.c:1594:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1635: FILE: fs/relayfs/relay.c:1607:
+	if (err)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1637: FILE: fs/relayfs/relay.c:1609:
+		return err;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1637: FILE: fs/relayfs/relay.c:1609:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1656: FILE: fs/relayfs/relay.c:1628:
+_relay_read_last(struct rchan *rchan, char * buf, size_t count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#1667: FILE: fs/relayfs/relay.c:1639:
+	if (buf == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1672: FILE: fs/relayfs/relay.c:1644:
+^Iif (avail_count <= 0) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1672: FILE: fs/relayfs/relay.c:1644:
+	if (avail_count <= 0) 
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1679: FILE: fs/relayfs/relay.c:1651:
+	for (i=0; i < include_nbufs; i++) {
 	      ^

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#1689: FILE: fs/relayfs/relay.c:1661:
+		if ((err = copy_to_user(buf + total_write_count, rchan->buf + cur_bufno * buf_size + start_offset, write_count))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1689: FILE: fs/relayfs/relay.c:1661:
+		if ((err = copy_to_user(buf + total_write_count, rchan->buf + cur_bufno * buf_size + start_offset, write_count))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: fs/relayfs/relay.c:1670:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1715: FILE: fs/relayfs/relay.c:1687:
+relay_read_last(int rchan_id, char * buf, size_t count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1718: FILE: fs/relayfs/relay.c:1690:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1722: FILE: fs/relayfs/relay.c:1694:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1736: FILE: fs/relayfs/relay.c:1708:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1756: FILE: fs/relayfs/relay.c:1728:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n_bufs <= 0'
#1757: FILE: fs/relayfs/relay.c:1729:
+	if ((n_bufs <= 0) || (n_bufs >= RELAY_MAX_BUFS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n_bufs >= RELAY_MAX_BUFS'
#1757: FILE: fs/relayfs/relay.c:1729:
+	if ((n_bufs <= 0) || (n_bufs >= RELAY_MAX_BUFS)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1761: FILE: fs/relayfs/relay.c:1733:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1764: FILE: fs/relayfs/relay.c:1736:
+		if (read_bufno < RELAY_MAX_BUFS)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1766: FILE: fs/relayfs/relay.c:1738:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1794: FILE: fs/relayfs/relay.c:1766:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1801: FILE: fs/relayfs/relay.c:1773:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1805: FILE: fs/relayfs/relay.c:1777:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1819: FILE: fs/relayfs/relay.c:1791:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1831: FILE: fs/relayfs/relay.c:1803:
+void $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1837: FILE: fs/relayfs/relay.c:1809:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1853: FILE: fs/relayfs/relay.c:1825:
+ *^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1872: FILE: fs/relayfs/relay.c:1844:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1884: FILE: fs/relayfs/relay.c:1856:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1886: FILE: fs/relayfs/relay.c:1858:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: fs/relayfs/relay.c:1875:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1905: FILE: fs/relayfs/relay.c:1877:
+ *^Iwas told to 'suspend' via a non-zero buffers_full callback return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1908: FILE: fs/relayfs/relay.c:1880:
+void $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1914: FILE: fs/relayfs/relay.c:1886:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1925: FILE: fs/relayfs/relay.c:1897:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1926: FILE: fs/relayfs/relay.c:1898:
+ *^IFills in an rchan_info struct with channel status and attribute $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1930: FILE: fs/relayfs/relay.c:1902:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1937: FILE: fs/relayfs/relay.c:1909:
+ *^Iis indeed the case)  2) isn't using the read() system call to read the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1945: FILE: fs/relayfs/relay.c:1917:
+ *^Ivalues, one per sub-buffer, contains non-zero if the buffer is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1948: FILE: fs/relayfs/relay.c:1920:
+int $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1955: FILE: fs/relayfs/relay.c:1927:
+	if (rchan == NULL) {
+		return -1;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1955: FILE: fs/relayfs/relay.c:1927:
+	if (rchan == NULL) {

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1972: FILE: fs/relayfs/relay.c:1944:
+			rchan_info->buffer_complete[i] = (atomic_read(&fill_count(rchan, i)) == rchan->buf_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1985: FILE: fs/relayfs/relay.c:1957:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1990: FILE: fs/relayfs/relay.c:1962:
+int $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#1996: FILE: fs/relayfs/relay.c:1968:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#1996: FILE: fs/relayfs/relay.c:1968:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1998: FILE: fs/relayfs/relay.c:1970:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2008: FILE: fs/relayfs/relay.c:1980:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2012: FILE: fs/relayfs/relay.c:1984:
+EXPORT_SYMBOL(relay_open);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2013: FILE: fs/relayfs/relay.c:1985:
+EXPORT_SYMBOL(relay_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2014: FILE: fs/relayfs/relay.c:1986:
+EXPORT_SYMBOL(relay_reserve);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2015: FILE: fs/relayfs/relay.c:1987:
+EXPORT_SYMBOL(relay_commit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2016: FILE: fs/relayfs/relay.c:1988:
+EXPORT_SYMBOL(relay_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2017: FILE: fs/relayfs/relay.c:1989:
+EXPORT_SYMBOL(relay_read_last);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2018: FILE: fs/relayfs/relay.c:1990:
+EXPORT_SYMBOL(relay_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2019: FILE: fs/relayfs/relay.c:1991:
+EXPORT_SYMBOL(relay_buffers_consumed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2020: FILE: fs/relayfs/relay.c:1992:
+EXPORT_SYMBOL(relay_bytes_consumed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2021: FILE: fs/relayfs/relay.c:1993:
+EXPORT_SYMBOL(relay_resume);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2022: FILE: fs/relayfs/relay.c:1994:
+EXPORT_SYMBOL(relay_info);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2023: FILE: fs/relayfs/relay.c:1995:
+EXPORT_SYMBOL(relay_realloc_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2024: FILE: fs/relayfs/relay.c:1996:
+EXPORT_SYMBOL(relay_replace_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2025: FILE: fs/relayfs/relay.c:1997:
+EXPORT_SYMBOL(relay_bytes_avail);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2027: FILE: fs/relayfs/relay.c:1999:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 143 errors, 40 warnings, 78 checks, 2000 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
