WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> > > Now a request, if someone is running a database app and tests this I'd

WARNING:TYPO_SPELLING: 'reall' may be misspelled - perhaps 'real'?
#36: 
> > > ending at the same time, but will it help a reall app?
                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#39: 
> > individual requests so far, so there's no real guarentee that process X,
                                                   ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/block/deadline-iosched.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#91: FILE: drivers/block/deadline-iosched.c:2:
+ *  linux/drivers/block/deadline-iosched.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:BIT_MACRO: Prefer using the BIT macro
#124: FILE: drivers/block/deadline-iosched.c:35:
+#define DL_HASH_ENTRIES		(1 << deadline_hash_shift)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dd' - possible side-effects?
#126: FILE: drivers/block/deadline-iosched.c:37:
+#define DL_INVALIDATE_HASH(dd)				\
+	do {						\
+		if (!++(dd)->hash_valid_count)		\
+			(dd)->hash_valid_count = 1;	\
+	} while (0)

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/block/deadline-iosched.c:70:
+#define RQ_DATA(rq)		((struct deadline_rq *) (rq)->elevator_private)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#176: FILE: drivers/block/deadline-iosched.c:87:
+#define ON_HASH(drq)	(drq)->hash_valid_count

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: drivers/block/deadline-iosched.c:99:
+	BUG_ON(ON_HASH(drq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#191: FILE: drivers/block/deadline-iosched.c:102:
+	list_add(&drq->hash, &dd->hash[DL_HASH_FN(rq->sector +rq->nr_sectors)]);
 	                                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#207: FILE: drivers/block/deadline-iosched.c:118:
+		BUG_ON(!drq->hash_valid_count);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#210: FILE: drivers/block/deadline-iosched.c:121:
+		if (!rq_mergeable(drq->request)
+		    || drq->hash_valid_count != dd->hash_valid_count) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#235: FILE: drivers/block/deadline-iosched.c:146:
+	if ((ret = elv_try_last_merge(q, req, bio)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#241: FILE: drivers/block/deadline-iosched.c:152:
+	if ((__rq = deadline_find_hash(dd, bio->bi_sector))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#242: FILE: drivers/block/deadline-iosched.c:153:
+		BUG_ON(__rq->sector + __rq->nr_sectors != bio->bi_sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: drivers/block/deadline-iosched.c:166:
+		BUG_ON(__rq->flags & REQ_STARTED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: drivers/block/deadline-iosched.c:167:
+		BUG_ON(__rq->flags & REQ_BARRIER);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#265: FILE: drivers/block/deadline-iosched.c:176:
+			if ((ret = elv_try_merge(__rq, bio))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#294: FILE: drivers/block/deadline-iosched.c:205:
+	BUG_ON(!drq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: drivers/block/deadline-iosched.c:206:
+	BUG_ON(!dnext);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: drivers/block/deadline-iosched.c:311:
+		deadline_move_to_dispatch(dd,list_entry_rq(dd->sort_list.next));
 		                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#466: FILE: drivers/block/deadline-iosched.c:377:
+	BUG_ON(!list_empty(&dd->fifo_list[READ]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#467: FILE: drivers/block/deadline-iosched.c:378:
+	BUG_ON(!list_empty(&dd->fifo_list[WRITE]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#486: FILE: drivers/block/deadline-iosched.c:397:
+	BUG_ON(!list_empty(&dd->fifo_list[READ]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#487: FILE: drivers/block/deadline-iosched.c:398:
+	BUG_ON(!list_empty(&dd->fifo_list[WRITE]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#488: FILE: drivers/block/deadline-iosched.c:399:
+	BUG_ON(!list_empty(&dd->sort_list));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: drivers/block/deadline-iosched.c:407:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#500: FILE: drivers/block/deadline-iosched.c:411:
+			if ((drq = RQ_DATA(rq)) == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#527: FILE: drivers/block/deadline-iosched.c:438:
+	dd->hash = kmalloc(sizeof(struct list_head)*DL_HASH_ENTRIES,GFP_KERNEL);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: drivers/block/deadline-iosched.c:438:
+	dd->hash = kmalloc(sizeof(struct list_head)*DL_HASH_ENTRIES,GFP_KERNEL);
 	                                                           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dd->hash)...) over kmalloc(sizeof(struct list_head)...)
#527: FILE: drivers/block/deadline-iosched.c:438:
+	dd->hash = kmalloc(sizeof(struct list_head)*DL_HASH_ENTRIES,GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/block/deadline-iosched.c:465:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: drivers/block/deadline-iosched.c:503:
+^I.elevator_merge_fn = ^I^Ideadline_merge,$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#611: FILE: drivers/block/ll_rw_blk.c:1117:
+#if 1

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#612: FILE: drivers/block/ll_rw_blk.c:1118:
+	if ((ret = elevator_init(q, &q->elevator, iosched_deadline))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 19 warnings, 7 checks, 547 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
