WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
    The Xgl on r300 doesn't work unless you add a verify bitblt function to the

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#49: 
    Signed-off-by: Dave Airlie <airlied@linux.ie>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#63: 
    Signed-off-by: Dave Airlie <airlied@linux.ie>

WARNING:BAD_SIGN_OFF: Duplicate signature
#63: 
    Signed-off-by: Dave Airlie <airlied@linux.ie>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: drivers/char/drm/r300_cmdbuf.c:493:
 }
+static __inline__ int r300_emit_bitblt_multi(drm_radeon_private_t *dev_priv,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#102: FILE: drivers/char/drm/r300_cmdbuf.c:493:
+static __inline__ int r300_emit_bitblt_multi(drm_radeon_private_t *dev_priv,

CHECK:SPACING: No space is necessary after a cast
#105: FILE: drivers/char/drm/r300_cmdbuf.c:496:
+	u32 *cmd = (u32 *) cmdbuf->buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/char/drm/r300_cmdbuf.c:498:
+	int count, ret;
+	RING_LOCALS;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#109: FILE: drivers/char/drm/r300_cmdbuf.c:500:
+	count=(cmd[0]>>16) & 0x3fff;
 	     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#109: FILE: drivers/char/drm/r300_cmdbuf.c:500:
+	count=(cmd[0]>>16) & 0x3fff;
 	             ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#118: FILE: drivers/char/drm/r300_cmdbuf.c:509:
+			if (ret)
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#129: FILE: drivers/char/drm/r300_cmdbuf.c:520:
+			if (ret)
+			{

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#135: FILE: drivers/char/drm/r300_cmdbuf.c:526:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: drivers/char/drm/r300_cmdbuf.c:529:
+	BEGIN_RING(count+2);
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: drivers/char/drm/r300_cmdbuf.c:534:
+	cmdbuf->buf += (count+2)*4;
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#143: FILE: drivers/char/drm/r300_cmdbuf.c:534:
+	cmdbuf->buf += (count+2)*4;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: drivers/char/drm/r300_cmdbuf.c:535:
+	cmdbuf->bufsz -= (count+2)*4;
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#144: FILE: drivers/char/drm/r300_cmdbuf.c:535:
+	cmdbuf->bufsz -= (count+2)*4;
 	                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103156.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 9 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103156.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
