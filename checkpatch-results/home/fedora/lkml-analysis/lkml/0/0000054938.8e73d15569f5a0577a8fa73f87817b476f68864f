WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: Patch for sparse block minors (RFC)

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -urp -X dontdiff linux-2.6.18-rc1/arch/um/drivers/ubd_kern.c linux-2.6.18-rc1-lem/arch/um/drivers/ubd_kern.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: block/genhd.c:186:
+		blk_register_region(disk->gd_dev,
 			    disk->minors, NULL, exact_match, exact_lock, disk);

WARNING:LINE_SPACING: Missing a blank line after declarations
#88: FILE: block/genhd.c:266:
+		struct hd_struct *p;
+		if ((p = sgp->part[n]) == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#88: FILE: block/genhd.c:266:
+		if ((p = sgp->part[n]) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#97: FILE: block/genhd.c:272:
+			(unsigned long long)p->nr_sects >> 1 ,
 			                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#173: FILE: block/genhd.c:706:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: block/genhd.c:707:
+		if (disk->part[index-1])
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#175: FILE: block/genhd.c:708:
+			bdev = bdget(disk->part[index-1]->dev);
 			                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: block/ioctl.c:72:
+			bdevp = bdget(disk->part[part-1]->dev);
 			                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: drivers/block/cpqarray.c:474:
+		disk->gd_dev = MKDEV(COMPAQ_SMART2_MAJOR + i, j<<NWD_SHIFT);
 		                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <MajorNumber>
#319: FILE: drivers/block/DAC960.c:2533:
+	disk->gd_dev = MKDEV(MajorNumber, n << DAC960_MaxPartitionsBits);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_MaxPartitionsBits>
#319: FILE: drivers/block/DAC960.c:2533:
+	disk->gd_dev = MKDEV(MajorNumber, n << DAC960_MaxPartitionsBits);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#432: FILE: drivers/block/ps2esdi.c:420:
+		disk->gd_dev = MKDEV(PS2ESDI_MAJOR, i<<6);
 		                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ub_hostv[i]"
#543: FILE: drivers/block/ub.c:437:
+		if (ub_hostv[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/block/ub.c:438:
+			ub_hostv[i] = (struct ub_lun *) 1;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ub_hostv[id]"
#569: FILE: drivers/block/ub.c:466:
+	if (ub_hostv[id] == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun"
#612: FILE: drivers/block/ub.c:1819:
+	if (lun == NULL || (unsigned long)lun == 1) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun"
#642: FILE: drivers/block/ub.c:1849:
+	if (lun == NULL || (unsigned long)lun == 1) {	/* This cannot happen */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#644: FILE: drivers/block/ub.c:1851:
+		printk(KERN_ERR DRV_NAME ": NULL lun for %u:%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/block/ub.c:1852:
+		printk(KERN_ERR DRV_NAME ": NULL lun for %u:%u\n",
+		    (unsigned int) MAJOR(dev), minor);

CHECK:SPACING: No space is necessary after a cast
#645: FILE: drivers/block/ub.c:1852:
+		    (unsigned int) MAJOR(dev), minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/block/ub.c:2555:
+	blk_register_region(MKDEV(UB_MAJOR, 0), UB_MINORS, THIS_MODULE,
+					ub_blk_match, ub_blk_lock, NULL);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#759: FILE: drivers/block/xd.c:215:
+		disk->gd_dev = MKDEV(XT_DISK_MAJOR, i<<6);
 		                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: drivers/block/z2ram.c:353:
+    z2ram_gendisk->gd_dev = MKDEV(Z2RAM_MAJOR, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: drivers/char/random.c:663:
+	DEBUG_ENT("disk event %d:%d\n",MAJOR(disk->gd_dev),MINOR(disk->gd_dev));
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#914: FILE: drivers/char/random.c:663:
+	DEBUG_ENT("disk event %d:%d\n",MAJOR(disk->gd_dev),MINOR(disk->gd_dev));
 	                                                  ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#1375: FILE: include/linux/fs.h:1014:
+	dev_t (*partmap)(struct gendisk *, int partno);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 18 checks, 1087 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
