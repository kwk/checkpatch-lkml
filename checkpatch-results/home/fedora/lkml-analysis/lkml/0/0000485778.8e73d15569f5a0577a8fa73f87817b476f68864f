WARNING:TYPO_SPELLING: 'relavent' may be misspelled - perhaps 'relevant'?
#21: 
here are patches that modify linux/(kernel,ipc) relavent to 2.5.2-pre11
                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#37: FILE: ipc//msg.c:320:
+		BUG_ON(msq==NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#37: FILE: ipc//msg.c:320:
+		BUG_ON(msq==NULL);
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msq"
#37: FILE: ipc//msg.c:320:
+		BUG_ON(msq==NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#47: FILE: ipc//msg.c:835:
+			BUG_ON(msqid==-1);

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#47: FILE: ipc//msg.c:835:
+			BUG_ON(msqid==-1);
 			            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#47: FILE: ipc//msg.c:835:
+			BUG_ON(msqid==-1);
 			              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#64: FILE: ipc//shm.c:102:
+	BUG_ON(!(shp = shm_lock(id)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#74: FILE: ipc//shm.c:145:
+	BUG_ON(!(shp = shm_lock(id)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: ipc//shm.c:243:
+		BUG_ON(shp==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#84: FILE: ipc//shm.c:243:
+		BUG_ON(shp==NULL);
 		          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#84: FILE: ipc//shm.c:243:
+		BUG_ON(shp==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#94: FILE: ipc//shm.c:648:
+	BUG_ON(!(shp = shm_lock(shmid)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#111: FILE: ipc//util.c:188:
+	BUG_ON(lid >= ids->size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: ipc//util.c:191:
+	BUG_ON(p==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#116: FILE: ipc//util.c:191:
+	BUG_ON(p==NULL);
 	        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#116: FILE: ipc//util.c:191:
+	BUG_ON(p==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#134: FILE: kernel//device.c:461:
+	BUG_ON(!list_empty(&iobus->devices) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: kernel//device.c:462:
+	BUG_ON(!list_empty(&iobus->devices) ||
+	    !list_empty(&iobus->children));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#152: FILE: kernel//exit.c:34:
+	BUG_ON(p == current);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#161: FILE: kernel//exit.c:384:
+		BUG_ON(mm != tsk->active_mm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: kernel//fork.c:253:
+	BUG_ON(mm == &init_mm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: kernel//pm.c:159:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: kernel//printk.c:334:
+	BUG_ON(((long)(start - end)) > 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#237: FILE: kernel//printk.c:471:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: kernel//sched.c:469:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#291: FILE: kernel//softirq.c:372:
+	BUG_ON(smp_processor_id() != cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485778.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 18 warnings, 4 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485778.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
