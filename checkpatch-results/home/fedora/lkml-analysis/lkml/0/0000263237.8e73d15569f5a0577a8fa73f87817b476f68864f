WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> > Dusted it off from 3 month ago.  This time re-diffed against 2.6.8-rc3-mm1.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#54: FILE: arch/i386/mm/hugetlbpage.c:21:
+static void scrub_one_pmd(pmd_t * pmd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#90: FILE: arch/i386/mm/hugetlbpage.c:57:
+void set_huge_pte(struct mm_struct *mm, struct vm_area_struct *vma, struct page *page, pte_t * page_table, int write_access)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: arch/i386/mm/hugetlbpage.c:57:
+void set_huge_pte(struct mm_struct *mm, struct vm_area_struct *vma, struct page *page, pte_t * page_table, int write_access)

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#99: FILE: arch/i386/mm/hugetlbpage.c:92:
+	for (; addr < end; addr+= HPAGE_SIZE) {
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: arch/ppc64/mm/hugetlbpage.c:709:
+handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: arch/ppc64/mm/hugetlbpage.c:710:
+handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,
+	unsigned long addr, int write_access)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: arch/sh/mm/hugetlbpage.c:60:
+void set_huge_pte(struct mm_struct *mm, struct vm_area_struct *vma,
 			 struct page *page, pte_t * page_table, int write_access)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: arch/sparc64/mm/hugetlbpage.c:57:
+void set_huge_pte(struct mm_struct *mm, struct vm_area_struct *vma,
 			 struct page *page, pte_t * page_table, int write_access)

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#663: FILE: include/linux/hugetlb.h:17:
*, int);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#667: FILE: include/linux/hugetlb.h:20:
+pte_t *huge_pte_alloc(struct mm_struct *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#667: FILE: include/linux/hugetlb.h:20:
+pte_t *huge_pte_alloc(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#668: FILE: include/linux/hugetlb.h:21:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#668: FILE: include/linux/hugetlb.h:21:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#668: FILE: include/linux/hugetlb.h:21:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t *' should also have an identifier name
#668: FILE: include/linux/hugetlb.h:21:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#668: FILE: include/linux/hugetlb.h:21:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#669: FILE: include/linux/hugetlb.h:22:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#669: FILE: include/linux/hugetlb.h:22:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#669: FILE: include/linux/hugetlb.h:22:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#669: FILE: include/linux/hugetlb.h:22:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *, unsigned long, int);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#698: FILE: mm/hugetlb.c:235:
+int __attribute__ ((weak))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#699: FILE: mm/hugetlb.c:236:
+handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: mm/hugetlb.c:237:
+handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,
+	unsigned long addr, int write_access)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 14 warnings, 4 checks, 519 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
