WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
diff -Nru linux-2.5.45.vanilla/drivers/char/Makefile linux-2.5.45.epoll/drivers/char/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1551: FILE: fs/eventpoll.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Efficent' may be misspelled - perhaps 'Efficient'?
#1552: FILE: fs/eventpoll.c:2:
+ *  drivers/char/eventpoll.c ( Efficent event polling implementation )
                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1580: FILE: fs/eventpoll.c:30:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1581: FILE: fs/eventpoll.c:31:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1583: FILE: fs/eventpoll.c:33:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1585: FILE: fs/eventpoll.c:35:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1588: FILE: fs/eventpoll.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1595: FILE: fs/eventpoll.c:45:
+#define DPRINTK(x) printk x

CHECK:SPACING: No space is necessary after a cast
#1598: FILE: fs/eventpoll.c:48:
+#define DPRINTK(x) (void) 0

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1598: FILE: fs/eventpoll.c:48:
+#define DPRINTK(x) (void) 0

CHECK:SPACING: No space is necessary after a cast
#1599: FILE: fs/eventpoll.c:49:
+#define DNPRINTK(n, x) (void) 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1599: FILE: fs/eventpoll.c:49:
+#define DNPRINTK(n, x) (void) 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1610: FILE: fs/eventpoll.c:60:
+
+

CHECK:SPACING: No space is necessary after a cast
#1633: FILE: fs/eventpoll.c:83:
+#define DPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(dpi_cache, SLAB_KERNEL)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1633: FILE: fs/eventpoll.c:83:
+#define DPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(dpi_cache, SLAB_KERNEL)

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#1643: FILE: fs/eventpoll.c:93:
+ * This is usefull for us because we can test if the item is linked
            ^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#1646: FILE: fs/eventpoll.c:96:
+#define EP_LIST_DEL(p) do { list_del(p); INIT_LIST_HEAD(p); } while (0)

CHECK:SPACING: No space is necessary after a cast
#1652: FILE: fs/eventpoll.c:102:
+#define EP_ITEM_FROM_WAIT(p) ((struct epitem *) container_of(p, struct eppoll_entry, wait)->base)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1654: FILE: fs/eventpoll.c:104:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1656: FILE: fs/eventpoll.c:106:
+
+

WARNING:TYPO_SPELLING: 'rapresent' may be misspelled - perhaps 'represent'?
#1660: FILE: fs/eventpoll.c:110:
+ * structure and rapresent the main data sructure for the eventpoll
                  ^^^^^^^^^

WARNING:TYPO_SPELLING: 'sructure' may be misspelled - perhaps 'structure'?
#1660: FILE: fs/eventpoll.c:110:
+ * structure and rapresent the main data sructure for the eventpoll
                                          ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1737: FILE: fs/eventpoll.c:187:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1739: FILE: fs/eventpoll.c:189:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1758: FILE: fs/eventpoll.c:208:
+static int ep_poll_callback(wait_queue_t *wait, unsigned mode, int sync);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1769: FILE: fs/eventpoll.c:219:
+
+

WARNING:TYPO_SPELLING: 'togheter' may be misspelled - perhaps 'together'?
#1770: FILE: fs/eventpoll.c:220:
+/* Use to link togheter all the "struct eventpoll" */
                ^^^^^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1783: FILE: fs/eventpoll.c:233:
+static struct file_operations eventpoll_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#1799: FILE: fs/eventpoll.c:249:
+static struct dentry_operations eventpollfs_dentry_operations = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1803: FILE: fs/eventpoll.c:253:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1808: FILE: fs/eventpoll.c:258:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#1810: FILE: fs/eventpoll.c:260:
+		if (n & 1) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1816: FILE: fs/eventpoll.c:266:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1822: FILE: fs/eventpoll.c:272:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1848: FILE: fs/eventpoll.c:298:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1859: FILE: fs/eventpoll.c:309:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1863: FILE: fs/eventpoll.c:313:
+	for (; !ep_is_prime(size); size++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1880: FILE: fs/eventpoll.c:330:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1881: FILE: fs/eventpoll.c:331:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#1889: FILE: fs/eventpoll.c:339:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1894: FILE: fs/eventpoll.c:344:
+
+

WARNING:TYPO_SPELLING: 'rapresents' may be misspelled - perhaps 'represents'?
#1898: FILE: fs/eventpoll.c:348:
+ * the interest set. It rapresents the kernel part of the user spcae epoll_ctl(2).
                         ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'spcae' may be misspelled - perhaps 'space'?
#1898: FILE: fs/eventpoll.c:348:
+ * the interest set. It rapresents the kernel part of the user spcae epoll_ctl(2).
                                                                ^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#1908: FILE: fs/eventpoll.c:358:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u)\n",

WARNING:TYPO_SPELLING: 'rapresent' may be misspelled - perhaps 'represent'?
#1946: FILE: fs/eventpoll.c:396:
+	 * This does not rapresent a problem though and we don't really want
 	                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#1947: FILE: fs/eventpoll.c:397:
+	 * to put an extra syncronization object to deal with this harmless condition.
 	                   ^^^^^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1954: FILE: fs/eventpoll.c:404:
+		if (!dpi) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1960: FILE: fs/eventpoll.c:410:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#1984: FILE: fs/eventpoll.c:434:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u) = %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1995: FILE: fs/eventpoll.c:445:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#2007: FILE: fs/eventpoll.c:457:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d, %d)\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2011: FILE: fs/eventpoll.c:461:
+	if ((error = verify_area(VERIFY_WRITE, events, maxevents * sizeof(struct pollfd))))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#2037: FILE: fs/eventpoll.c:487:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d, %d) = %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2046: FILE: fs/eventpoll.c:496:
+
+

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2116: FILE: fs/eventpoll.c:566:
+	iput(inode);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2123: FILE: fs/eventpoll.c:573:
+
+

CHECK:SPACING: No space is necessary after a cast
#2129: FILE: fs/eventpoll.c:579:
+		pages[i] = (char *) __get_free_pages(GFP_KERNEL, 0);

CHECK:SPACING: No space is necessary after a cast
#2133: FILE: fs/eventpoll.c:583:
+				free_pages((unsigned long) pages[i], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2142: FILE: fs/eventpoll.c:592:
+
+

CHECK:SPACING: No space is necessary after a cast
#2149: FILE: fs/eventpoll.c:599:
+		free_pages((unsigned long) pages[i], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2154: FILE: fs/eventpoll.c:604:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2161: FILE: fs/eventpoll.c:611:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ep)...) over kmalloc(sizeof(struct eventpoll)...)
#2161: FILE: fs/eventpoll.c:611:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_file_init', this function's name, in a string
#2179: FILE: fs/eventpoll.c:629:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_file_init() ep=%p\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2184: FILE: fs/eventpoll.c:634:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2190: FILE: fs/eventpoll.c:640:
+{
+

CHECK:SPACING: No space is necessary after a cast
#2191: FILE: fs/eventpoll.c:641:
+	return (int) ((((unsigned long) file) / sizeof(struct file)) % ep->hsize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2194: FILE: fs/eventpoll.c:644:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2200: FILE: fs/eventpoll.c:650:
+{
+

CHECK:SPACING: No space is necessary after a cast
#2201: FILE: fs/eventpoll.c:651:
+	return (struct list_head *) (ep->hpages[index / EP_HENTRY_X_PAGE] +

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2205: FILE: fs/eventpoll.c:655:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2218: FILE: fs/eventpoll.c:668:
+	ep->nhpages = hsize / EP_HENTRY_X_PAGE + (hsize % EP_HENTRY_X_PAGE ? 1: 0);
 	                                                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2232: FILE: fs/eventpoll.c:682:
+
+

WARNING:TYPO_SPELLING: 'reaquire' may be misspelled - perhaps 'reacquire'?
#2263: FILE: fs/eventpoll.c:713:
+			/* And then we reaquire the lock ... */
 			               ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2280: FILE: fs/eventpoll.c:730:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_find', this function's name, in a string
#2307: FILE: fs/eventpoll.c:757:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_find(%p) -> %p\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2313: FILE: fs/eventpoll.c:763:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2320: FILE: fs/eventpoll.c:770:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2324: FILE: fs/eventpoll.c:774:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2332: FILE: fs/eventpoll.c:782:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2337: FILE: fs/eventpoll.c:787:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2354: FILE: fs/eventpoll.c:804:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2363: FILE: fs/eventpoll.c:813:
+	if (!(dpi = DPI_MEM_ALLOC()))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_insert', this function's name, in a string
#2396: FILE: fs/eventpoll.c:846:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_insert(%p, %d)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2405: FILE: fs/eventpoll.c:855:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2429: FILE: fs/eventpoll.c:879:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2454: FILE: fs/eventpoll.c:904:
+
+

WARNING:TYPO_SPELLING: 'togheter' may be misspelled - perhaps 'together'?
#2472: FILE: fs/eventpoll.c:922:
+	 * This operation togheter with the above check closes the door to
 	                  ^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_unlink', this function's name, in a string
#2490: FILE: fs/eventpoll.c:940:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_unlink(%p, %d)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2496: FILE: fs/eventpoll.c:946:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_remove', this function's name, in a string
#2517: FILE: fs/eventpoll.c:967:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_remove(%p, %d)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2528: FILE: fs/eventpoll.c:978:
+
+

WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#2531: FILE: fs/eventpoll.c:981:
+ * machanism. It is called by the stored file descriptors when they
    ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2534: FILE: fs/eventpoll.c:984:
+static int ep_poll_callback(wait_queue_t *wait, unsigned mode, int sync)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#2558: FILE: fs/eventpoll.c:1008:
+	if (waitqueue_active(&ep->poll_wait))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2565: FILE: fs/eventpoll.c:1015:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2579: FILE: fs/eventpoll.c:1029:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2598: FILE: fs/eventpoll.c:1048:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2669: FILE: fs/eventpoll.c:1119:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2684: FILE: fs/eventpoll.c:1134:
+		MAX_SCHEDULE_TIMEOUT: (timeout * HZ) / 1000;
 		                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#2684: FILE: fs/eventpoll.c:1134:
+		MAX_SCHEDULE_TIMEOUT: (timeout * HZ) / 1000;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2732: FILE: fs/eventpoll.c:1182:
+	if (!res && eavail &&

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2739: FILE: fs/eventpoll.c:1189:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2742: FILE: fs/eventpoll.c:1192:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2746: FILE: fs/eventpoll.c:1196:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#2764: FILE: fs/eventpoll.c:1214:
+	inode->i_mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2767: FILE: fs/eventpoll.c:1217:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2775: FILE: fs/eventpoll.c:1225:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2779: FILE: fs/eventpoll.c:1229:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2783: FILE: fs/eventpoll.c:1233:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2817: FILE: fs/eventpoll.c:1267:
+	printk(KERN_INFO "[%p] eventpoll: driver installed.\n", current);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2830: FILE: fs/eventpoll.c:1280:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3357: FILE: include/linux/poll.h:18:
+	void (*qproc)(void *, wait_queue_head_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#3357: FILE: include/linux/poll.h:18:
+	void (*qproc)(void *, wait_queue_head_t *);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#3372: FILE: include/linux/poll.h:40:
+static inline void poll_initwait_ex(poll_table* pt, int queue,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416827.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 41 warnings, 63 checks, 1632 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416827.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
