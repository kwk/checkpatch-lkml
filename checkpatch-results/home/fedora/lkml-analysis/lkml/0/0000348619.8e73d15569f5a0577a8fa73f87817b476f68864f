CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: fs/jfs/jfs_xattr.h:55:
+extern int __jfs_setxattr(struct inode *, const char *, const void *, size_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#65: FILE: fs/jfs/jfs_xattr.h:56:
+extern int jfs_setxattr(struct dentry *, const char *, const void *, size_t, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#126: FILE: include/linux/fs.h:992:
+	int (*setxattr) (struct dentry *, const char *, const void *, size_t, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000348619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 2 checks, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000348619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
