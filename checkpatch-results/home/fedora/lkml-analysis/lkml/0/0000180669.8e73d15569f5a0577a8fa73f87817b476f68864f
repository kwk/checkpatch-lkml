WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.5 $)

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#47: FILE: drivers/s390/net/ctcdbug.h:3:
+ * linux/drivers/s390/net/ctcdbug.h ($Revision: 1.5 $)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#56: FILE: drivers/s390/net/ctcdbug.h:12:
+ *    $Revision: 1.5 $	 $Date: 2005/02/27 19:46:44 $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/s390/net/ctcdbug.h:25:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/s390/net/ctcdbug.h:26:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: drivers/s390/net/ctcdbug.h:126:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#94: FILE: drivers/s390/net/ctcmain.c:2:
+ * $Id: ctcmain.c,v 1.74 2005/03/24 09:04:17 mschwide Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/s390/net/ctcmain.c:37:
  * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#100: FILE: drivers/s390/net/ctcmain.c:38:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#103: FILE: drivers/s390/net/ctcmain.c:40:
+ * RELEASE-TAG: CTC/ESCON network driver $Revision: 1.74 $

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#471: FILE: drivers/s390/net/ctcmain.c:243:
+static struct channel *channels = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#479: FILE: drivers/s390/net/ctcmain.c:251:
+	static int printed = 0;

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#480: FILE: drivers/s390/net/ctcmain.c:252:
+	char vbuf[] = "$Revision: 1.74 $";

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#485: FILE: drivers/s390/net/ctcmain.c:257:
+	if ((version = strchr(version, ':'))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#485: FILE: drivers/s390/net/ctcmain.c:257:
+	if ((version = strchr(version, ':'))) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: drivers/s390/net/ctcmain.c:259:
+		char *p = strchr(version + 1, '$');
+		if (p)

CHECK:BRACES: Unbalanced braces around else statement
#489: FILE: drivers/s390/net/ctcmain.c:261:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#491: FILE: drivers/s390/net/ctcmain.c:263:
+	printk(KERN_INFO "CTC driver Version%s"

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#493: FILE: drivers/s390/net/ctcmain.c:265:
+		    " (DEBUG-VERSION, " __DATE__ __TIME__ ")"

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#493: FILE: drivers/s390/net/ctcmain.c:265:
+		    " (DEBUG-VERSION, " __DATE__ __TIME__ ")"

CHECK:SPACING: No space is necessary after a cast
#505: FILE: drivers/s390/net/ctcmain.c:277:
+	enum channel_types type = (enum channel_types) id->driver_info;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#513: FILE: drivers/s390/net/ctcmain.c:285:
+static const char *ch_event_names[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: drivers/s390/net/ctcmain.c:2523:
+	sprintf(buffer, "%d",priv->buffer_size);
 	                    ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ctc_proto_show' to 'protocol_show' 'ctc_proto_store' to 'protocol_store'
#742: FILE: drivers/s390/net/ctcmain.c:2702:
+static DEVICE_ATTR(protocol, 0644, ctc_proto_show, ctc_proto_store);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'loglevel_write' to 'loglevel_store'
#745: FILE: drivers/s390/net/ctcmain.c:2705:
+static DEVICE_ATTR(loglevel, 0644, loglevel_show, loglevel_write);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'stats_write' to 'stats_store'
#746: FILE: drivers/s390/net/ctcmain.c:2706:
+static DEVICE_ATTR(stats, 0644, stats_show, stats_write);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#787: FILE: drivers/s390/net/ctcmain.c:2766:
+	DBF_TEXT(setup, 3, __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#815: FILE: drivers/s390/net/ctcmain.c:2810:
+ctc_init_netdevice(struct net_device * dev, int alloc_device,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#821: FILE: drivers/s390/net/ctcmain.c:2816:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#824: FILE: drivers/s390/net/ctcmain.c:2819:
+		dev = kmalloc(sizeof (struct net_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof (struct net_device)...)
#824: FILE: drivers/s390/net/ctcmain.c:2819:
+		dev = kmalloc(sizeof (struct net_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#827: FILE: drivers/s390/net/ctcmain.c:2822:
+		memset(dev, 0, sizeof (struct net_device));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!privptr->fsm"
#834: FILE: drivers/s390/net/ctcmain.c:2829:
+	if (privptr->fsm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#857: FILE: drivers/s390/net/ctcmain.c:2852:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#885: FILE: drivers/s390/net/ctcmain.c:2971:
+	DBF_TEXT(setup, 3, __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#888: FILE: drivers/s390/net/ctcmain.c:2974:
 
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#905: FILE: drivers/s390/net/ctcmain.c:3022:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#913: FILE: drivers/s390/net/ctcmain.c:3059:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#923: FILE: drivers/s390/net/ctcmain.c:3079:
+	DBF_TEXT(setup, 3, __FUNCTION__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#932: FILE: drivers/s390/net/ctcmain.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#933: FILE: drivers/s390/net/ctcmain.h:2:
+ * $Id: ctcmain.h,v 1.4 2005/03/24 09:04:17 mschwide Exp $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#960: FILE: drivers/s390/net/ctcmain.h:29:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#961: FILE: drivers/s390/net/ctcmain.h:30:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#963: FILE: drivers/s390/net/ctcmain.h:32:
+ * RELEASE-TAG: CTC/ESCON network driver $Revision: 1.4 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#977: FILE: drivers/s390/net/ctcmain.h:46:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1002: FILE: drivers/s390/net/ctcmain.h:71:
+#define CTC_ID_SIZE             BUS_ID_SIZE+3
                                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1002: FILE: drivers/s390/net/ctcmain.h:71:
+#define CTC_ID_SIZE             BUS_ID_SIZE+3

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1004: FILE: drivers/s390/net/ctcmain.h:73:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1019: FILE: drivers/s390/net/ctcmain.h:88:
+struct channel {
+

WARNING:TYPO_SPELLING: 'unresposive' may be misspelled - perhaps 'unresponsive'?
#1080: FILE: drivers/s390/net/ctcmain.h:149:
+	 * Timer for detecting unresposive
 	                       ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#1115: FILE: drivers/s390/net/ctcmain.h:184:
+#define CHANNEL_DIRECTION(f) (f & CHANNEL_FLAGS_RWMASK)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1133: FILE: drivers/s390/net/ctcmain.h:202:
+#define CTC_LOGLEVEL_MAX     ((CTC_LOGLEVEL_CRIT<<1)-1)
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1133: FILE: drivers/s390/net/ctcmain.h:202:
+#define CTC_LOGLEVEL_MAX     ((CTC_LOGLEVEL_CRIT<<1)-1)
                                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1136: FILE: drivers/s390/net/ctcmain.h:205:
+do { if (loglevel & CTC_LOGLEVEL_DEBUG) printk(KERN_DEBUG fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/s390/net/ctcmain.h:205:
+do { if (loglevel & CTC_LOGLEVEL_DEBUG) printk(KERN_DEBUG fmt,##arg); } while (0)
                                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1139: FILE: drivers/s390/net/ctcmain.h:208:
+do { if (loglevel & CTC_LOGLEVEL_INFO) printk(KERN_INFO fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: drivers/s390/net/ctcmain.h:208:
+do { if (loglevel & CTC_LOGLEVEL_INFO) printk(KERN_INFO fmt,##arg); } while (0)
                                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1142: FILE: drivers/s390/net/ctcmain.h:211:
+do { if (loglevel & CTC_LOGLEVEL_NOTICE) printk(KERN_NOTICE fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/s390/net/ctcmain.h:211:
+do { if (loglevel & CTC_LOGLEVEL_NOTICE) printk(KERN_NOTICE fmt,##arg); } while (0)
                                                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1145: FILE: drivers/s390/net/ctcmain.h:214:
+do { if (loglevel & CTC_LOGLEVEL_WARN) printk(KERN_WARNING fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1145: FILE: drivers/s390/net/ctcmain.h:214:
+do { if (loglevel & CTC_LOGLEVEL_WARN) printk(KERN_WARNING fmt,##arg); } while (0)
                                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1148: FILE: drivers/s390/net/ctcmain.h:217:
+do { if (loglevel & CTC_LOGLEVEL_EMERG) printk(KERN_EMERG fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1148: FILE: drivers/s390/net/ctcmain.h:217:
+do { if (loglevel & CTC_LOGLEVEL_EMERG) printk(KERN_EMERG fmt,##arg); } while (0)
                                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1151: FILE: drivers/s390/net/ctcmain.h:220:
+do { if (loglevel & CTC_LOGLEVEL_ERR) printk(KERN_ERR fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1151: FILE: drivers/s390/net/ctcmain.h:220:
+do { if (loglevel & CTC_LOGLEVEL_ERR) printk(KERN_ERR fmt,##arg); } while (0)
                                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1154: FILE: drivers/s390/net/ctcmain.h:223:
+do { if (loglevel & CTC_LOGLEVEL_CRIT) printk(KERN_CRIT fmt,##arg); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: drivers/s390/net/ctcmain.h:223:
+do { if (loglevel & CTC_LOGLEVEL_CRIT) printk(KERN_CRIT fmt,##arg); } while (0)
                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: drivers/s390/net/ctcmain.h:236:
+ ^I/**$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1167: FILE: drivers/s390/net/ctcmain.h:236:
+ ^I/**$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: drivers/s390/net/ctcmain.h:236:
+ ^I/**$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1168: FILE: drivers/s390/net/ctcmain.h:237:
+ ^I * Timer for restarting after I/O Errors$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1168: FILE: drivers/s390/net/ctcmain.h:237:
+ ^I * Timer for restarting after I/O Errors$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1169: FILE: drivers/s390/net/ctcmain.h:238:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1169: FILE: drivers/s390/net/ctcmain.h:238:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1170: FILE: drivers/s390/net/ctcmain.h:239:
+ ^Ifsm_timer               restart_timer;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1170: FILE: drivers/s390/net/ctcmain.h:239:
+ ^Ifsm_timer               restart_timer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/s390/net/ctcmain.h:239:
+ ^Ifsm_timer               restart_timer;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1185: FILE: drivers/s390/net/ctcmain.h:254:
+};
+#define LL_HEADER_LENGTH (sizeof(struct ll_header))

WARNING:INLINE: plain inline is preferred over __inline__
#1191: FILE: drivers/s390/net/ctcmain.h:260:
+static __inline__ void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1192: FILE: drivers/s390/net/ctcmain.h:261:
+ctc_clear_busy(struct net_device * dev)

CHECK:SPACING: No space is necessary after a cast
#1194: FILE: drivers/s390/net/ctcmain.h:263:
+	clear_bit(0, &(((struct ctc_priv *) dev->priv)->tbusy));

WARNING:INLINE: plain inline is preferred over __inline__
#1199: FILE: drivers/s390/net/ctcmain.h:268:
+static __inline__ int

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1200: FILE: drivers/s390/net/ctcmain.h:269:
+ctc_test_and_set_busy(struct net_device * dev)

CHECK:SPACING: No space is necessary after a cast
#1204: FILE: drivers/s390/net/ctcmain.h:273:
+	return test_and_set_bit(0, &((struct ctc_priv *) dev->priv)->tbusy);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180669.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 39 warnings, 18 checks, 1129 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180669.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
