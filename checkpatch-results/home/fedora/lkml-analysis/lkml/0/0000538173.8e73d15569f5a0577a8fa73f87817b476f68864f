WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Ingo Molnar <mingo@elte.hu>, Alan Cox <alan@lxorguk.ukuu.org.uk>,', should be: '"Ingo Molnar <mingo@elte.hu>, Alan Cox" <alan@lxorguk.ukuu.org.uk>'
#27: 
Cc: Ingo Molnar <mingo@elte.hu>, Alan Cox <alan@lxorguk.ukuu.org.uk>,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: include/linux/pagemap.h:82:
+extern struct page * __find_get_swapcache_page (struct address_space * mapping,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: include/linux/pagemap.h:82:
+extern struct page * __find_get_swapcache_page (struct address_space * mapping,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: include/linux/pagemap.h:82:
+extern struct page * __find_get_swapcache_page (struct address_space * mapping,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/pagemap.h:82:
+extern struct page * __find_get_swapcache_page (struct address_space * mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: include/linux/pagemap.h:83:
+extern struct page * __find_get_swapcache_page (struct address_space * mapping,
+				unsigned long index, struct page **hash);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mapping' - possible side-effects?
#79: FILE: include/linux/pagemap.h:84:
+#define find_get_swapcache_page(mapping, index) \
+	__find_get_swapcache_page(mapping, index, page_hash(mapping, index))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#79: FILE: include/linux/pagemap.h:84:
+#define find_get_swapcache_page(mapping, index) \
+	__find_get_swapcache_page(mapping, index, page_hash(mapping, index))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/swap.h:114:
+extern void rw_swap_page(int, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#93: FILE: include/linux/swap.h:114:
+extern void rw_swap_page(int, struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#93: FILE: include/linux/swap.h:114:
+extern void rw_swap_page(int, struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/linux/swap.h:115:
+extern void rw_swap_page_nolock(int, swp_entry_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#94: FILE: include/linux/swap.h:115:
+extern void rw_swap_page_nolock(int, swp_entry_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'swp_entry_t' should also have an identifier name
#94: FILE: include/linux/swap.h:115:
+extern void rw_swap_page_nolock(int, swp_entry_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#94: FILE: include/linux/swap.h:115:
+extern void rw_swap_page_nolock(int, swp_entry_t, char *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/linux/swap.h:124:
+extern struct page * read_swap_cache_async(swp_entry_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/swap.h:124:
+extern struct page * read_swap_cache_async(swp_entry_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'swp_entry_t' should also have an identifier name
#104: FILE: include/linux/swap.h:124:
+extern struct page * read_swap_cache_async(swp_entry_t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: mm/filemap.c:684:
+struct page * __find_get_swapcache_page(struct address_space *mapping,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: mm/filemap.c:685:
+struct page * __find_get_swapcache_page(struct address_space *mapping,
+			      unsigned long offset, struct page **hash)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: mm/filemap.c:697:
+^I^Iif (PageSwapCache(page)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#290: FILE: mm/swap_state.c:170:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: mm/swap_state.c:172:
+			BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: mm/swap_state.c:189:
+struct page * read_swap_cache_async(swp_entry_t entry)

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#344: FILE: mm/swapfile.c:380:
+		UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#353: FILE: mm/swapfile.c:655:
+	rw_swap_page_nolock(READ, SWP_ENTRY(type,0), (char *) swap_header);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: mm/swapfile.c:655:
+	rw_swap_page_nolock(READ, SWP_ENTRY(type,0), (char *) swap_header);
 	                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000538173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 10 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000538173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
