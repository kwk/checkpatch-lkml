WARNING:TYPO_SPELLING: 'Curently' may be misspelled - perhaps 'Currently'?
#34: 
Curently x25 has ability just to forward outgoing and incomming x25 
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'incomming' may be misspelled - perhaps 'incoming'?
#34: 
Curently x25 has ability just to forward outgoing and incomming x25 
                                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Regulary' may be misspelled - perhaps 'Regular'?
#40: 
Regulary x25 network can change network connection settings for all 
^^^^^^^^

WARNING:TYPO_SPELLING: 'coresponding' may be misspelled - perhaps 'corresponding'?
#43: 
traffic is sent to coresponding peer.
                   ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Deafult' may be misspelled - perhaps 'Default'?
#58: 
-> wrong X25_DEFAULT_THROUGHPUT	0x0A			/* Deafult Throughput */
                               	    			   ^^^^^^^

WARNING:TYPO_SPELLING: 'Deafult' may be misspelled - perhaps 'Default'?
#59: 
-> good X25_DEFAULT_THROUGHPUT	0xAA			/* Deafult Throughput *
                              	    			   ^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#85: FILE: net/x25/af_x25.c:74:
+struct x25_forward *volatile x25_forward_list=NULL;
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#85: FILE: net/x25/af_x25.c:74:
+struct x25_forward *volatile x25_forward_list=NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: net/x25/af_x25.c:777:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#101: FILE: net/x25/af_x25.c:779:
+	if ((skbn = skb_clone(skb, GFP_ATOMIC)) == NULL) {
+			return 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#101: FILE: net/x25/af_x25.c:779:
+	if ((skbn = skb_clone(skb, GFP_ATOMIC)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#101: FILE: net/x25/af_x25.c:779:
+	if ((skbn = skb_clone(skb, GFP_ATOMIC)) == NULL) {
+			return 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#113: FILE: net/x25/af_x25.c:804:
+		printk(KERN_DEBUG "x25_rx_call_request(): src addr is: %s \n", source_addr.x25_addr);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#113: FILE: net/x25/af_x25.c:804:
+		printk(KERN_DEBUG "x25_rx_call_request(): src addr is: %s \n", source_addr.x25_addr);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#113: FILE: net/x25/af_x25.c:804:
+		printk(KERN_DEBUG "x25_rx_call_request(): src addr is: %s \n", source_addr.x25_addr);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#114: FILE: net/x25/af_x25.c:805:
+		if ((dev = x25_get_route(&source_addr)) != NULL)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: net/x25/af_x25.c:805:
+		if ((dev = x25_get_route(&source_addr)) != NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#114: FILE: net/x25/af_x25.c:805:
+		if ((dev = x25_get_route(&source_addr)) != NULL)
[...]
+		} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#116: FILE: net/x25/af_x25.c:807:
+			printk(KERN_DEBUG "x25_rx_call_request(): we got dev for route.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: net/x25/af_x25.c:809:
+			if ((neigh_new = x25_get_neigh(dev)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#119: FILE: net/x25/af_x25.c:810:
+				printk(KERN_ERR "X.25: unknown neighbour - %s\n", dev->name);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#123: FILE: net/x25/af_x25.c:814:
+			printk(KERN_DEBUG "x25_receive_data(): found device to forward: %s.\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#123: FILE: net/x25/af_x25.c:814:
+			printk(KERN_DEBUG "x25_receive_data(): found device to forward: %s.\n", dev->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: net/x25/af_x25.c:815:
+^I^I^I/* check if it is no loop */ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#126: FILE: net/x25/af_x25.c:817:
+				printk(KERN_ERR "X.25: devices for forwarding are the same, must be loop!");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: net/x25/af_x25.c:821:
+^I^I^I$

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#131: FILE: net/x25/af_x25.c:822:
+			/* check whether for the given lci is there a existing forward entry already*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: net/x25/af_x25.c:824:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd"
#134: FILE: net/x25/af_x25.c:825:
+			while (x25_frwd != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#139: FILE: net/x25/af_x25.c:830:
+					printk(KERN_WARNING "X.25: call request for lci which is already registered!, transmitting but not registering new pair.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: net/x25/af_x25.c:835:
+^I^I^I$

WARNING:TABSTOP: Statements should start on a tabstop
#147: FILE: net/x25/af_x25.c:838:
+			 if ((new_frwd = kmalloc(sizeof(struct x25_forward), GFP_ATOMIC)) == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (25, 33)
#147: FILE: net/x25/af_x25.c:838:
+			 if ((new_frwd = kmalloc(sizeof(struct x25_forward), GFP_ATOMIC)) == NULL)
+				 return -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: net/x25/af_x25.c:838:
+			 if ((new_frwd = kmalloc(sizeof(struct x25_forward), GFP_ATOMIC)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_frwd)...) over kmalloc(sizeof(struct x25_forward)...)
#147: FILE: net/x25/af_x25.c:838:
+			 if ((new_frwd = kmalloc(sizeof(struct x25_forward), GFP_ATOMIC)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TABSTOP: Statements should start on a tabstop
#148: FILE: net/x25/af_x25.c:839:
+				 return -ENOMEM;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: net/x25/af_x25.c:851:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: net/x25/af_x25.c:1367:
+	struct net_device * dev = neigh->dev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: net/x25/af_x25.c:1373:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: net/x25/af_x25.c:1375:
+^I$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#180: FILE: net/x25/af_x25.c:1376:
+	/* delete first objects if neccessary */
 	                           ^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_forward_list"
#181: FILE: net/x25/af_x25.c:1377:
+	while (x25_forward_list != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#182: FILE: net/x25/af_x25.c:1378:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {
+				x25_forward_list = x25_frwd->next;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x25_frwd->dev1 == dev'
#182: FILE: net/x25/af_x25.c:1378:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x25_frwd->dev2 == dev'
#182: FILE: net/x25/af_x25.c:1378:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#182: FILE: net/x25/af_x25.c:1378:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {
[...]
+		} else break;
[...]

WARNING:LONG_LINE: line length of 188 exceeds 100 columns
#184: FILE: net/x25/af_x25.c:1380:
+				printk(KERN_DEBUG "x25_kill_by_neigh: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", x25_frwd->lci, x25_frwd->dev1->name, x25_frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#184: FILE: net/x25/af_x25.c:1380:
+				printk(KERN_DEBUG "x25_kill_by_neigh: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", x25_frwd->lci, x25_frwd->dev1->name, x25_frwd->dev2->name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#187: FILE: net/x25/af_x25.c:1383:
+		} else break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: net/x25/af_x25.c:1385:
+^I$

WARNING:TYPO_SPELLING: 'delelte' may be misspelled - perhaps 'delete'?
#190: FILE: net/x25/af_x25.c:1386:
+	/* delelte next objects if neccessary */
 	   ^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#190: FILE: net/x25/af_x25.c:1386:
+	/* delelte next objects if neccessary */
 	                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: net/x25/af_x25.c:1387:
+^Iif (x25_forward_list != NULL) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#191: FILE: net/x25/af_x25.c:1387:
+	if (x25_forward_list != NULL) 
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_forward_list"
#191: FILE: net/x25/af_x25.c:1387:
+	if (x25_forward_list != NULL) 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd->next"
#193: FILE: net/x25/af_x25.c:1389:
+		while (x25_frwd->next != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: net/x25/af_x25.c:1391:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frwd->dev1 == dev'
#196: FILE: net/x25/af_x25.c:1392:
+			if ((frwd->dev1 == dev) || (frwd->dev2 == dev)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frwd->dev2 == dev'
#196: FILE: net/x25/af_x25.c:1392:
+			if ((frwd->dev1 == dev) || (frwd->dev2 == dev)) {

WARNING:LONG_LINE: line length of 176 exceeds 100 columns
#198: FILE: net/x25/af_x25.c:1394:
+				printk(KERN_DEBUG "x25_kill_by_neigh: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#198: FILE: net/x25/af_x25.c:1394:
+				printk(KERN_DEBUG "x25_kill_by_neigh: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: net/x25/af_x25.c:1397:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: net/x25/af_x25.c:1401:
+^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#206: FILE: net/x25/af_x25.c:1402:
+	printk(KERN_DEBUG "x25_kill_by_neigh: x25_forward_list after deleting: %x", x25_forward_list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#206: FILE: net/x25/af_x25.c:1402:
+	printk(KERN_DEBUG "x25_kill_by_neigh: x25_forward_list after deleting: %x", x25_forward_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: net/x25/af_x25.c:1403:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: net/x25/af_x25.c:1405:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd"
#210: FILE: net/x25/af_x25.c:1406:
+	while (x25_frwd != NULL) {

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#214: FILE: net/x25/af_x25.c:1410:
+		printk(KERN_DEBUG "x25_kill_by_neigh: x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#214: FILE: net/x25/af_x25.c:1410:
+		printk(KERN_DEBUG "x25_kill_by_neigh: x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#219: FILE: net/x25/af_x25.c:1415:
+/*
+ *	Release all memory associated with X.25 forwarding structures.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd"
#225: FILE: net/x25/af_x25.c:1421:
+	while (x25_frwd != NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: net/x25/x25_dev.c:49:
+extern struct x25_forward * x25_forward_list;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#259: FILE: net/x25/x25_dev.c:51:
+static void x25_debug_skb(struct sk_buff *skb){

ERROR:SPACING: space required before the open brace '{'
#259: FILE: net/x25/x25_dev.c:51:
+static void x25_debug_skb(struct sk_buff *skb){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: net/x25/x25_dev.c:52:
+	unsigned char * i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: net/x25/x25_dev.c:53:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#262: FILE: net/x25/x25_dev.c:54:
+	printk(KERN_ERR "head: %x\n", skb->head);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#263: FILE: net/x25/x25_dev.c:55:
+	for (i=skb->head; i < skb->data; i++) printk(KERN_ERR "%x,", *i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#263: FILE: net/x25/x25_dev.c:55:
+	for (i=skb->head; i < skb->data; i++) printk(KERN_ERR "%x,", *i);
 	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#263: FILE: net/x25/x25_dev.c:55:
+	for (i=skb->head; i < skb->data; i++) printk(KERN_ERR "%x,", *i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#264: FILE: net/x25/x25_dev.c:56:
+	printk(KERN_ERR "data: %x", skb->data);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#265: FILE: net/x25/x25_dev.c:57:
+	for (i=skb->data; i < skb->tail; i++) printk(KERN_ERR "%x,", *i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#265: FILE: net/x25/x25_dev.c:57:
+	for (i=skb->data; i < skb->tail; i++) printk(KERN_ERR "%x,", *i);
 	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#265: FILE: net/x25/x25_dev.c:57:
+	for (i=skb->data; i < skb->tail; i++) printk(KERN_ERR "%x,", *i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#266: FILE: net/x25/x25_dev.c:58:
+	printk(KERN_ERR "tail: %x", skb->tail);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#267: FILE: net/x25/x25_dev.c:59:
+	for (i=skb->tail; i < skb->end; i++) printk(KERN_ERR "%x,", *i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#267: FILE: net/x25/x25_dev.c:59:
+	for (i=skb->tail; i < skb->end; i++) printk(KERN_ERR "%x,", *i);
 	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: net/x25/x25_dev.c:59:
+	for (i=skb->tail; i < skb->end; i++) printk(KERN_ERR "%x,", *i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#268: FILE: net/x25/x25_dev.c:60:
+	printk(KERN_ERR "end: %x", skb->end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: net/x25/x25_dev.c:72:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: net/x25/x25_dev.c:73:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: net/x25/x25_dev.c:73:
+	
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: net/x25/x25_dev.c:75:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#296: FILE: net/x25/x25_dev.c:113:
+	 * Is this packet for us? Check lci in forward list
+	*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#297: FILE: net/x25/x25_dev.c:114:
+	printk(KERN_DEBUG "x25_receive_data(): no listener found check for forward lci: %2d.\n", lci);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#297: FILE: net/x25/x25_dev.c:114:
+	printk(KERN_DEBUG "x25_receive_data(): no listener found check for forward lci: %2d.\n", lci);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: net/x25/x25_dev.c:115:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "frwd"
#299: FILE: net/x25/x25_dev.c:116:
+	for (frwd = x25_forward_list; frwd != NULL ; frwd = frwd->next) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#300: FILE: net/x25/x25_dev.c:117:
+		printk(KERN_DEBUG "x25_receive_data(): finding lci: %2d stored lci: %2d\n", lci, frwd->lci);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: net/x25/x25_dev.c:117:
+		printk(KERN_DEBUG "x25_receive_data(): finding lci: %2d stored lci: %2d\n", lci, frwd->lci);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: net/x25/x25_dev.c:118:
+^I^I^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: net/x25/x25_dev.c:120:
+			struct sk_buff *skbn = pskb_copy (skb, GFP_ATOMIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: net/x25/x25_dev.c:121:
+			struct sk_buff *skbn = pskb_copy (skb, GFP_ATOMIC);
+			printk(KERN_DEBUG "x25_receive_data(): found forward lci.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#304: FILE: net/x25/x25_dev.c:121:
+			printk(KERN_DEBUG "x25_receive_data(): found forward lci.\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#306: FILE: net/x25/x25_dev.c:123:
+			if (neigh->dev == frwd->dev1) {
[...]
+			} else {
[...]

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#311: FILE: net/x25/x25_dev.c:128:
+			printk(KERN_DEBUG "x25_receive_data(): found device to forward: %s.\n", peer->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#311: FILE: net/x25/x25_dev.c:128:
+			printk(KERN_DEBUG "x25_receive_data(): found device to forward: %s.\n", peer->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: net/x25/x25_dev.c:129:
+^I^I^Iif ( peer == neigh->dev) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#312: FILE: net/x25/x25_dev.c:129:
+			if ( peer == neigh->dev) 
+			{

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: net/x25/x25_dev.c:129:
+			if ( peer == neigh->dev) 

WARNING:TYPO_SPELLING: 'droping' may be misspelled - perhaps 'dropping'?
#314: FILE: net/x25/x25_dev.c:131:
+				printk(KERN_DEBUG "x25_receive_data(): this must be a problem form device == to device - droping packet");
 				                                                                                         ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#314: FILE: net/x25/x25_dev.c:131:
+				printk(KERN_DEBUG "x25_receive_data(): this must be a problem form device == to device - droping packet");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: net/x25/x25_dev.c:134:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#319: FILE: net/x25/x25_dev.c:136:
+			if ((neigh_new = x25_get_neigh(peer)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#320: FILE: net/x25/x25_dev.c:137:
+				printk(KERN_DEBUG "X.25: unknown neighbour - %s\n", peer->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: net/x25/x25_dev.c:140:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: net/x25/x25_route.c:50:
+extern struct x25_forward * x25_forward_list; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#346: FILE: net/x25/x25_route.c:50:
+extern struct x25_forward * x25_forward_list; 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#346: FILE: net/x25/x25_route.c:50:
+extern struct x25_forward * x25_forward_list; 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: net/x25/x25_route.c:140:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: net/x25/x25_route.c:142:
+^I$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#368: FILE: net/x25/x25_route.c:143:
+	/* delete first objects if neccessary */
 	                           ^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_forward_list"
#369: FILE: net/x25/x25_route.c:144:
+	while (x25_forward_list != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#370: FILE: net/x25/x25_route.c:145:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {
+				x25_forward_list = x25_frwd->next;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x25_frwd->dev1 == dev'
#370: FILE: net/x25/x25_route.c:145:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x25_frwd->dev2 == dev'
#370: FILE: net/x25/x25_route.c:145:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#370: FILE: net/x25/x25_route.c:145:
+		if ((x25_frwd->dev1 == dev) || (x25_frwd->dev2 == dev)) {
[...]
+		} else break;
[...]

WARNING:LONG_LINE: line length of 192 exceeds 100 columns
#372: FILE: net/x25/x25_route.c:147:
+				printk(KERN_DEBUG "x25_route_device_down: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", x25_frwd->lci, x25_frwd->dev1->name, x25_frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#372: FILE: net/x25/x25_route.c:147:
+				printk(KERN_DEBUG "x25_route_device_down: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", x25_frwd->lci, x25_frwd->dev1->name, x25_frwd->dev2->name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#375: FILE: net/x25/x25_route.c:150:
+		} else break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: net/x25/x25_route.c:152:
+^I$

WARNING:TYPO_SPELLING: 'delelte' may be misspelled - perhaps 'delete'?
#378: FILE: net/x25/x25_route.c:153:
+	/* delelte next objects if neccessary */
 	   ^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#378: FILE: net/x25/x25_route.c:153:
+	/* delelte next objects if neccessary */
 	                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: net/x25/x25_route.c:154:
+^Iif (x25_forward_list != NULL) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#379: FILE: net/x25/x25_route.c:154:
+	if (x25_forward_list != NULL) 
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_forward_list"
#379: FILE: net/x25/x25_route.c:154:
+	if (x25_forward_list != NULL) 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd->next"
#381: FILE: net/x25/x25_route.c:156:
+		while (x25_frwd->next != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: net/x25/x25_route.c:158:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frwd->dev1 == dev'
#384: FILE: net/x25/x25_route.c:159:
+			if ((frwd->dev1 == dev) || (frwd->dev2 == dev)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frwd->dev2 == dev'
#384: FILE: net/x25/x25_route.c:159:
+			if ((frwd->dev1 == dev) || (frwd->dev2 == dev)) {

WARNING:LONG_LINE: line length of 180 exceeds 100 columns
#386: FILE: net/x25/x25_route.c:161:
+				printk(KERN_DEBUG "x25_route_device_down: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#386: FILE: net/x25/x25_route.c:161:
+				printk(KERN_DEBUG "x25_route_device_down: Deleting the x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: net/x25/x25_route.c:164:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: net/x25/x25_route.c:168:
+^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#394: FILE: net/x25/x25_route.c:169:
+	printk(KERN_DEBUG "x25_route_device_down: x25_forward_list after deleting: %x", x25_forward_list);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#394: FILE: net/x25/x25_route.c:169:
+	printk(KERN_DEBUG "x25_route_device_down: x25_forward_list after deleting: %x", x25_forward_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: net/x25/x25_route.c:170:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: net/x25/x25_route.c:172:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "x25_frwd"
#398: FILE: net/x25/x25_route.c:173:
+	while (x25_frwd != NULL) {

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#402: FILE: net/x25/x25_route.c:177:
+		printk(KERN_DEBUG "x25_route_device_down: x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#402: FILE: net/x25/x25_route.c:177:
+		printk(KERN_DEBUG "x25_route_device_down: x25_forward entry lci %d, dev1 %s, dev2 %s ", frwd->lci, frwd->dev1->name, frwd->dev2->name);

WARNING:TYPO_SPELLING: 'Deafult' may be misspelled - perhaps 'Default'?
#414: FILE: include/net/x25.h:79:
+#define	X25_DEFAULT_THROUGHPUT	0xAA			/* Deafult Throughput */
        	                      	    			   ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#436: FILE: include/net/x25.h:163:
+extern void x25_forward_free(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 70 warnings, 25 checks, 344 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227273.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
