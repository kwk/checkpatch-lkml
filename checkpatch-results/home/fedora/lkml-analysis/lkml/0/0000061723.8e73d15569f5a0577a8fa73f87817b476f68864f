WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#192: FILE: drivers/net/3c527.c:438:
+	err = request_irq(dev->irq, &mc32_interrupt, IRQF_SHARED | IRQF_SAMPLE_RANDOM, DRV_NAME, dev);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#205: FILE: drivers/net/3c59x.c:999:
+				&boomerang_interrupt : &vortex_interrupt, IRQF_SHARED, dev->name, dev)) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#214: FILE: drivers/net/3c59x.c:1836:
+				&boomerang_interrupt : &vortex_interrupt, IRQF_SHARED, dev->name, dev))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/net/8139too.c:1313:
+	retval = request_irq (dev->irq, rtl8139_interrupt, IRQF_SHARED, dev->name, dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#279: FILE: drivers/net/amd8111e.c:1379:
+	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, IRQF_SHARED,
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: drivers/net/amd8111e.c:1379:
+	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, IRQF_SHARED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/net/amd8111e.c:1380:
+	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, IRQF_SHARED,
 					 dev->name, dev)) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/net/apne.c:316:
+    i = request_irq(IRQ_AMIGA_PORTS, apne_interrupt, IRQF_SHARED, DRV_NAME, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/net/ariadne.c:323:
+    i = request_irq(IRQ_AMIGA_PORTS, ariadne_interrupt, IRQF_SHARED,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/net/bnx2.c:4268:
+		rc = request_irq(bp->pdev->irq, bnx2_interrupt, IRQF_SHARED,
 				dev->name, dev);

CHECK:SPACING: No space is necessary after a cast
#367: FILE: drivers/net/cassini.c:4352:
+			IRQF_SHARED, dev->name, (void *) dev)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#406: FILE: drivers/net/dl2k.c:443:
+	i = request_irq (dev->irq, &rio_interrupt, IRQF_SHARED, dev->name, dev);

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: drivers/net/e100.c:2066:
+	if((err = request_irq(nic->pdev->irq, e100_intr, IRQF_SHARED,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#432: FILE: drivers/net/e100.c:2066:
+	if((err = request_irq(nic->pdev->irq, e100_intr, IRQF_SHARED,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/net/e100.c:2067:
+	if((err = request_irq(nic->pdev->irq, e100_intr, IRQF_SHARED,
 		nic->netdev->name, nic->netdev)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: drivers/net/eepro.c:923:
+		if (request_irq (*irqp, NULL, IRQF_SHARED, "bogus", dev) != EBUSY) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: drivers/net/epic100.c:716:
+	if ((retval = request_irq(dev->irq, &epic_interrupt, IRQF_SHARED, dev->name, dev)))

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#497: FILE: drivers/net/forcedeth.c:2625:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_RX].vector, &nv_nic_irq_rx, IRQF_SHARED, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#505: FILE: drivers/net/forcedeth.c:2632:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_TX].vector, &nv_nic_irq_tx, IRQF_SHARED, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#513: FILE: drivers/net/forcedeth.c:2639:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_OTHER].vector, &nv_nic_irq_other, IRQF_SHARED, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#522: FILE: drivers/net/forcedeth.c:2654:
+				     request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_ALL].vector, &nv_nic_irq, IRQF_SHARED, dev->name, dev) != 0) ||

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#525: FILE: drivers/net/forcedeth.c:2656:
+				     request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_ALL].vector, &nv_nic_irq_test, IRQF_SHARED, dev->name, dev) != 0)) {

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#535: FILE: drivers/net/forcedeth.c:2672:
+			if ((!intr_test && request_irq(np->pci_dev->irq, &nv_nic_irq, IRQF_SHARED, dev->name, dev) != 0) ||

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#536: FILE: drivers/net/forcedeth.c:2673:
+			    (intr_test && request_irq(np->pci_dev->irq, &nv_nic_irq_test, IRQF_SHARED, dev->name, dev) != 0)) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#546: FILE: drivers/net/forcedeth.c:2688:
+		if ((!intr_test && request_irq(np->pci_dev->irq, &nv_nic_irq, IRQF_SHARED, dev->name, dev) != 0) ||

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#547: FILE: drivers/net/forcedeth.c:2689:
+		    (intr_test && request_irq(np->pci_dev->irq, &nv_nic_irq_test, IRQF_SHARED, dev->name, dev) != 0))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/net/hydra.c:120:
+    if (request_irq(IRQ_AMIGA_PORTS, ei_interrupt, IRQF_SHARED, "Hydra Ethernet",$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#612: FILE: drivers/net/ibmlana.c:785:
+	result = request_irq(priv->realirq, irq_handler, IRQF_SHARED | IRQF_SAMPLE_RANDOM, dev->name, dev);

CHECK:SPACING: No space is necessary after a cast
#664: FILE: drivers/net/mipsnet.c:182:
+			  IRQF_SHARED, dev->name, (void *) dev);

CHECK:SPACING: No space is necessary after a cast
#690: FILE: drivers/net/myri_sbus.c:1072:
+			IRQF_SHARED, "MyriCOM Ethernet", (void *) dev)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: drivers/net/pci-skeleton.c:1078:
+	retval = request_irq (dev->irq, netdrv_interrupt, IRQF_SHARED, dev->name, dev);

CHECK:SPACING: No space is necessary after a cast
#816: FILE: drivers/net/s2io.c:3802:
+		err = request_irq((int) sp->pdev->irq, s2io_isr, IRQF_SHARED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/net/s2io.c:3803:
+		err = request_irq((int) sp->pdev->irq, s2io_isr, IRQF_SHARED,
 				sp->name, dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/net/sis900.c:1017:
+	ret = request_irq(net_dev->irq, &sis900_interrupt, IRQF_SHARED,
 						net_dev->name, net_dev);

CHECK:SPACING: No space is necessary after a cast
#1077: FILE: drivers/net/sunqe.c:814:
+					IRQF_SHARED, "qec", (void *) qecp)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1131: FILE: drivers/net/tlan.c:946:
+	err = request_irq( dev->irq, TLan_HandleInterrupt, IRQF_SHARED, TLanSignature, dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1131: FILE: drivers/net/tlan.c:946:
+	err = request_irq( dev->irq, TLan_HandleInterrupt, IRQF_SHARED, TLanSignature, dev );

CHECK:CAMELCASE: Avoid CamelCase: <TLan_HandleInterrupt>
#1131: FILE: drivers/net/tlan.c:946:
+	err = request_irq( dev->irq, TLan_HandleInterrupt, IRQF_SHARED, TLanSignature, dev );

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <TLanSignature>
#1131: FILE: drivers/net/tlan.c:946:
+	err = request_irq( dev->irq, TLan_HandleInterrupt, IRQF_SHARED, TLanSignature, dev );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: drivers/net/typhoon.c:2135:
+	err = request_irq(dev->irq, &typhoon_interrupt, IRQF_SHARED,
 				dev->name, dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: drivers/net/via-rhine.c:1214:
+	rc = request_irq(rp->pdev->irq, &rhine_interrupt, IRQF_SHARED, dev->name,
 			dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: drivers/net/via-rhine.c:2002:
+        if (request_irq(dev->irq, rhine_interrupt, IRQF_SHARED, dev->name, dev))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: drivers/net/via-rhine.c:2002:
+        if (request_irq(dev->irq, rhine_interrupt, IRQF_SHARED, dev->name, dev))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: drivers/net/zorro8390.c:204:
+    i = request_irq(IRQ_AMIGA_PORTS, ei_interrupt, IRQF_SHARED, DRV_NAME, dev);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1218: FILE: drivers/net/arcnet/com20020-pci.c:123:
+	if ((err = com20020_found(dev, IRQF_SHARED)) != 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1262: FILE: drivers/net/e1000/e1000_ethtool.c:877:
+ ^I} else if (request_irq(irq, &e1000_test_intr, IRQF_SHARED,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1262: FILE: drivers/net/e1000/e1000_ethtool.c:877:
+ ^I} else if (request_irq(irq, &e1000_test_intr, IRQF_SHARED,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1262: FILE: drivers/net/e1000/e1000_ethtool.c:877:
+ ^I} else if (request_irq(irq, &e1000_test_intr, IRQF_SHARED,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: drivers/net/e1000/e1000_main.c:429:
+^I^I              IRQF_SHARED | IRQF_SAMPLE_RANDOM,$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1327: FILE: drivers/net/hamradio/scc.c:1739:
+				if (request_irq(hwcfg.irq, scc_isr, IRQF_DISABLED, "AX.25 SCC", NULL))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1353: FILE: drivers/net/irda/donauboe.c:1375:
+                   IRQF_SHARED | IRQF_DISABLED, dev->name, (void *) self))$

CHECK:SPACING: No space is necessary after a cast
#1353: FILE: drivers/net/irda/donauboe.c:1375:
+                   IRQF_SHARED | IRQF_DISABLED, dev->name, (void *) self))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: drivers/net/irda/donauboe.c:1375:
+                   IRQF_SHARED | IRQF_DISABLED, dev->name, (void *) self))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: drivers/net/irda/donauboe.c:1576:
+  self->io.irqflags = IRQF_SHARED | IRQF_DISABLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: drivers/net/pcmcia/axnet_cs.c:538:
+    request_irq(dev->irq, ei_irq_wrapper, IRQF_SHARED, "axnet_cs", dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/net/pcmcia/pcnet_cs.c:1001:
+    request_irq(dev->irq, ei_irq_wrapper, IRQF_SHARED, dev_info, dev);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1473: FILE: drivers/net/sk98lin/skge.c:572:
 	if (pAC->GIni.GIMacsFound == 2) {
+		 Ret = request_irq(dev->irq, SkGeIsr, IRQF_SHARED, "sk98lin", dev);

CHECK:CAMELCASE: Avoid CamelCase: <Ret>
#1475: FILE: drivers/net/sk98lin/skge.c:573:
+		 Ret = request_irq(dev->irq, SkGeIsr, IRQF_SHARED, "sk98lin", dev);

CHECK:CAMELCASE: Avoid CamelCase: <SkGeIsr>
#1475: FILE: drivers/net/sk98lin/skge.c:573:
+		 Ret = request_irq(dev->irq, SkGeIsr, IRQF_SHARED, "sk98lin", dev);

CHECK:CAMELCASE: Avoid CamelCase: <SkGeIsrOnePort>
#1478: FILE: drivers/net/sk98lin/skge.c:575:
+		Ret = request_irq(dev->irq, SkGeIsrOnePort, IRQF_SHARED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1479: FILE: drivers/net/sk98lin/skge.c:576:
+		Ret = request_irq(dev->irq, SkGeIsrOnePort, IRQF_SHARED,
 			"sk98lin", dev);

CHECK:SPACING: No space is necessary after a cast
#1503: FILE: drivers/net/skfp/skfddi.c:500:
+	err = request_irq(dev->irq, (void *) skfp_interrupt, IRQF_SHARED,

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1516: FILE: drivers/net/tokenring/3c359.c:579:
+	if(request_irq(dev->irq, &xl_interrupt, IRQF_SHARED , "3c359", dev)) {
 	                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1516: FILE: drivers/net/tokenring/3c359.c:579:
+	if(request_irq(dev->irq, &xl_interrupt, IRQF_SHARED , "3c359", dev)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1516: FILE: drivers/net/tokenring/3c359.c:579:
+	if(request_irq(dev->irq, &xl_interrupt, IRQF_SHARED , "3c359", dev)) {
 		return -EAGAIN;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1542: FILE: drivers/net/tokenring/lanstreamer.c:604:
+	if (request_irq(dev->irq, &streamer_interrupt, IRQF_SHARED, "lanstreamer", dev)) {
 		return -EAGAIN;
 	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1556: FILE: drivers/net/tokenring/madgemc.c:315:
+	if (request_irq(dev->irq, madgemc_interrupt, IRQF_SHARED,
 		       "madgemc", dev)) {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1568: FILE: drivers/net/tokenring/olympic.c:448:
+	if(request_irq(dev->irq, &olympic_interrupt, IRQF_SHARED , "olympic", dev)) {
 	                                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1568: FILE: drivers/net/tokenring/olympic.c:448:
+	if(request_irq(dev->irq, &olympic_interrupt, IRQF_SHARED , "olympic", dev)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1568: FILE: drivers/net/tokenring/olympic.c:448:
+	if(request_irq(dev->irq, &olympic_interrupt, IRQF_SHARED , "olympic", dev)) {
 		return -EAGAIN;
 	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: drivers/net/tokenring/smctr.c:1064:
+        if (request_irq(dev->irq, smctr_interrupt, IRQF_SHARED, smctr_name, dev))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/net/tokenring/smctr.c:1064:
+        if (request_irq(dev->irq, smctr_interrupt, IRQF_SHARED, smctr_name, dev))$

CHECK:CAMELCASE: Avoid CamelCase: <Added>
#1638: FILE: drivers/net/tulip/de4x5.c:356:
+			  Added IRQF_DISABLED temporary fix from

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: drivers/net/tulip/de4x5.c:1322:
+    if (request_irq(dev->irq, (void *)de4x5_interrupt, IRQF_SHARED,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: drivers/net/tulip/de4x5.c:1323:
+    if (request_irq(dev->irq, (void *)de4x5_interrupt, IRQF_SHARED,
 		                                     lp->adapter_name, dev)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1651: FILE: drivers/net/tulip/de4x5.c:1325:
+	if (request_irq(dev->irq, de4x5_interrupt, IRQF_DISABLED | IRQF_SHARED,
[...]
 	    printk("\n              Cannot get IRQ- reconfigure your hardware.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1652: FILE: drivers/net/tulip/de4x5.c:1326:
+	if (request_irq(dev->irq, de4x5_interrupt, IRQF_DISABLED | IRQF_SHARED,
 			                             lp->adapter_name, dev)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1677: FILE: drivers/net/tulip/tulip_core.c:492:
+	if ((retval = request_irq(dev->irq, &tulip_interrupt, IRQF_SHARED, dev->name, dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1686: FILE: drivers/net/tulip/tulip_core.c:1773:
+	if ((retval = request_irq(dev->irq, &tulip_interrupt, IRQF_SHARED, dev->name, dev))) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1777: FILE: drivers/net/wan/hostess_sv11.c:267:
+	if(request_irq(irq, &z8530_interrupt, IRQF_DISABLED, "Hostess SV11", dev)<0)
 	                                                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1777: FILE: drivers/net/wan/hostess_sv11.c:267:
+	if(request_irq(irq, &z8530_interrupt, IRQF_DISABLED, "Hostess SV11", dev)<0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1816: FILE: drivers/net/wan/sbni.c:1195:
+	if( request_irq(dev->irq, sbni_interrupt, IRQF_SHARED, dev->name, dev) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1816: FILE: drivers/net/wan/sbni.c:1195:
+	if( request_irq(dev->irq, sbni_interrupt, IRQF_SHARED, dev->name, dev) ) {

ERROR:SPACING: space required before the open parenthesis '('
#1816: FILE: drivers/net/wan/sbni.c:1195:
+	if( request_irq(dev->irq, sbni_interrupt, IRQF_SHARED, dev->name, dev) ) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1829: FILE: drivers/net/wan/sealevel.c:325:
+	if(request_irq(irq, &z8530_interrupt, IRQF_DISABLED, "SeaLevel", dev)<0)
 	                                                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#1829: FILE: drivers/net/wan/sealevel.c:325:
+	if(request_irq(irq, &z8530_interrupt, IRQF_DISABLED, "SeaLevel", dev)<0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1855: FILE: drivers/net/wan/lmc/lmc_main.c:1061:
+    if (request_irq (dev->irq, &lmc_interrupt, IRQF_SHARED, dev->name, dev)){$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1855: FILE: drivers/net/wan/lmc/lmc_main.c:1061:
+    if (request_irq (dev->irq, &lmc_interrupt, IRQF_SHARED, dev->name, dev)){

ERROR:SPACING: space required before the open brace '{'
#1855: FILE: drivers/net/wan/lmc/lmc_main.c:1061:
+    if (request_irq (dev->irq, &lmc_interrupt, IRQF_SHARED, dev->name, dev)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1868: FILE: drivers/net/wireless/airo.c:2851:
+	rc = request_irq( dev->irq, airo_interrupt, IRQF_SHARED, dev->name, dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1868: FILE: drivers/net/wireless/airo.c:2851:
+	rc = request_irq( dev->irq, airo_interrupt, IRQF_SHARED, dev->name, dev );

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1881: FILE: drivers/net/wireless/atmel.c:1580:
+	if ((rc = request_irq(dev->irq, service_interrupt, IRQF_SHARED, dev->name, dev))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2037: FILE: include/net/irda/irda_device.h:163:
+        int irqflags;         /* interrupt flags (ie, IRQF_SHARED|IRQF_DISABLED) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2037: FILE: include/net/irda/irda_device.h:163:
+        int irqflags;         /* interrupt flags (ie, IRQF_SHARED|IRQF_DISABLED) */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000061723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 40 warnings, 24 checks, 1225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000061723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
