WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#39: 
 > tasks, plus a seperate 4KB irq stack for use by interrupts.  There
                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
diff -ur linux-2.5.40-clean/arch/i386/config.in linux-2.5.40/arch/i386/config.in

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#192: FILE: arch/i386/kernel/init_task.c:16:
+union thread_union init_irq_union

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#193: FILE: arch/i386/kernel/init_task.c:17:
+	__attribute__((__section__(".data.init_task")));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/kernel/init_task.c:28:
+^I^I{ { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#203: FILE: arch/i386/kernel/init_task.c:28:
 	__attribute__((__section__(".data.init_task"))) =
+		{ { 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: arch/i386/kernel/init_task.c:29:
+			task:		&init_task,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: arch/i386/kernel/init_task.c:30:
+			exec_domain:	&default_exec_domain,
 			           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#205: FILE: arch/i386/kernel/init_task.c:30:
+			exec_domain:	&default_exec_domain,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#208: FILE: arch/i386/kernel/init_task.c:33:
+			addr_limit:	KERNEL_DS,
 			          ^

WARNING:INDENTED_LABEL: labels should not be indented
#208: FILE: arch/i386/kernel/init_task.c:33:
+			addr_limit:	KERNEL_DS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#209: FILE: arch/i386/kernel/init_task.c:34:
+			irq_stack:	&init_irq_union,
 			         ^

WARNING:INDENTED_LABEL: labels should not be indented
#209: FILE: arch/i386/kernel/init_task.c:34:
+			irq_stack:	&init_irq_union,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#273: FILE: arch/i386/kernel/smpboot.c:72:
+extern union thread_union init_irq_union;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#275: FILE: arch/i386/kernel/smpboot.c:74:
+union thread_union *irq_stacks[NR_CPUS] __cacheline_aligned =
+	{ &init_irq_union, };

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#296: FILE: arch/i386/kernel/smpboot.c:782:
+					/* interrupts are not preemptable */
 					                      ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#322: FILE: arch/i386/kernel/smpboot.c:833:
+	stack_start.esp = (void *) (THREAD_SIZE + (char *)idle->thread_info);

CHECK:BIT_MACRO: Prefer using the BIT macro
#336: FILE: include/asm-i386/page.h:9:
+#define PAGE_SIZE	(1 << PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: include/asm-i386/thread_info.h:62:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: include/asm-i386/thread_info.h:62:
+ $

CHECK:SPACING: No space is necessary after a cast
#394: FILE: include/asm-i386/thread_info.h:69:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#394: FILE: include/asm-i386/thread_info.h:69:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
                                                                                ^

CHECK:SPACING: No space is necessary after a cast
#395: FILE: include/asm-i386/thread_info.h:70:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#404: FILE: include/asm-i386/thread_info.h:78:
+	__asm__("andl %%esp,%0; ":"=r" (ti) : "0" (~(THREAD_SIZE - 1)));
 	                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: include/asm-i386/thread_info.h:88:
+ ^Imovl $-THREAD_SIZE, reg; \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: include/asm-i386/thread_info.h:88:
+ ^Imovl $-THREAD_SIZE, reg; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: include/asm-i386/thread_info.h:88:
+ ^Imovl $-THREAD_SIZE, reg; \$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#422: FILE: include/asm-i386/thread_info.h:88:
+ 	movl $-THREAD_SIZE, reg; \
  	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#426: FILE: include/asm-i386/thread_info.h:92:
+#define GET_THREAD_INFO_WITH_ESP(reg) \
+	andl $-THREAD_SIZE, reg

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#427: FILE: include/asm-i386/thread_info.h:93:
+	andl $-THREAD_SIZE, reg
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: arch/i386/kernel/entry.S:358:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#721: FILE: arch/i386/kernel/entry.S:530:
+^Iint $3^I $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#814: FILE: arch/i386/kernel/init_task.c:16:
+union thread_union init_irq_union

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#815: FILE: arch/i386/kernel/init_task.c:17:
+	__attribute__((__section__(".data.init_task")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#819: FILE: arch/i386/kernel/init_task.c:21:
+	__attribute__((__section__(".data.init_task")));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/i386/kernel/init_task.c:33:
+^I^I{ { $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#830: FILE: arch/i386/kernel/init_task.c:33:
 	__attribute__((__section__(".data.init_task"))) =
+		{ { 

WARNING:INDENTED_LABEL: labels should not be indented
#831: FILE: arch/i386/kernel/init_task.c:34:
+			task:		&init_task,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#832: FILE: arch/i386/kernel/init_task.c:35:
+			exec_domain:	&default_exec_domain,
 			           ^

WARNING:INDENTED_LABEL: labels should not be indented
#832: FILE: arch/i386/kernel/init_task.c:35:
+			exec_domain:	&default_exec_domain,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#835: FILE: arch/i386/kernel/init_task.c:38:
+			addr_limit:	KERNEL_DS,
 			          ^

WARNING:INDENTED_LABEL: labels should not be indented
#835: FILE: arch/i386/kernel/init_task.c:38:
+			addr_limit:	KERNEL_DS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#836: FILE: arch/i386/kernel/init_task.c:39:
+			irq_stack:	&init_irq_union,
 			         ^

WARNING:INDENTED_LABEL: labels should not be indented
#836: FILE: arch/i386/kernel/init_task.c:39:
+			irq_stack:	&init_irq_union,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#905: FILE: arch/i386/kernel/process.c:162:
+	printk("stack overflow from %p.  esp: %p\n", eip, esp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#912: FILE: arch/i386/kernel/process.c:169:
+asmlinkage void show_regs(struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#939: FILE: arch/i386/kernel/smpboot.c:72:
+extern union thread_union init_irq_union;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#941: FILE: arch/i386/kernel/smpboot.c:74:
+union thread_union *irq_stacks[NR_CPUS] __cacheline_aligned =
+	{ &init_irq_union, };

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#962: FILE: arch/i386/kernel/smpboot.c:782:
+					/* interrupts are not preemptable */
 					                      ^^^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1728: FILE: include/asm-i386/page.h:9:
+#define PAGE_SIZE	(1 << PAGE_SHIFT)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1769: FILE: include/asm-i386/thread_info.h:61:
+#define THREAD_ORDER 0 $

CHECK:SPACING: No space is necessary after a cast
#1788: FILE: include/asm-i386/thread_info.h:71:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1788: FILE: include/asm-i386/thread_info.h:71:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
                                                                                ^

CHECK:SPACING: No space is necessary after a cast
#1789: FILE: include/asm-i386/thread_info.h:72:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1798: FILE: include/asm-i386/thread_info.h:80:
+	__asm__("andl %%esp,%0; ":"=r" (ti) : "0" (~(THREAD_SIZE - 1)));
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1816: FILE: include/asm-i386/thread_info.h:91:
+	movl $-THREAD_SIZE, reg; \
 	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1820: FILE: include/asm-i386/thread_info.h:95:
+#define GET_THREAD_INFO_WITH_ESP(reg) \
+	andl $-THREAD_SIZE, reg

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1821: FILE: include/asm-i386/thread_info.h:96:
+	andl $-THREAD_SIZE, reg
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: include/asm-i386/thread_info.h:97:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 23 warnings, 13 checks, 761 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
