WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
- Remove sector data byteswpapping support. Byte-swapping the data is supported

WARNING:TYPO_SPELLING: 'Prepate' may be misspelled - perhaps 'Prepare'?
#43: 
- Prepate the PIO read write code for soon overhaul.
  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#90: FILE: arch/cris/drivers/ide.c:387:
+	D(printk("atapi_read, dreg 0x%x, buffer 0x%x, count %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: arch/cris/drivers/ide.c:466:
+	D(printk("atapi_write, dreg 0x%x, buffer 0x%x, count %d\n",

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#170: FILE: drivers/ide/ide-cd.c:843:
+		atapi_read(drive, dum, sizeof (dum));
 		                  ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#170: FILE: drivers/ide/ide-cd.c:843:
+		atapi_read(drive, dum, sizeof (dum));
 		                               ^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: drivers/ide/ide-cd.c:843:
+		atapi_read(drive, dum, sizeof (dum));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#179: FILE: drivers/ide/ide-cd.c:869:
+			atapi_write(drive, &dum, sizeof (dum));
 			                    ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#179: FILE: drivers/ide/ide-cd.c:869:
+			atapi_write(drive, &dum, sizeof (dum));
 			                                 ^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: drivers/ide/ide-cd.c:869:
+			atapi_write(drive, &dum, sizeof (dum));

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#188: FILE: drivers/ide/ide-cd.c:966:
+		atapi_read(drive, dum, SECTOR_SIZE);
 		                  ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#214: FILE: drivers/ide/ide-cd.c:1300:
+			atapi_write(drive, &dum, sizeof (dum));
 			                    ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#214: FILE: drivers/ide/ide-cd.c:1300:
+			atapi_write(drive, &dum, sizeof (dum));
 			                                 ^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: drivers/ide/ide-cd.c:1300:
+			atapi_write(drive, &dum, sizeof (dum));

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#232: FILE: drivers/ide/ide-cd.c:1318:
+			atapi_read(drive, &dum, sizeof (dum));
 			                   ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#232: FILE: drivers/ide/ide-cd.c:1318:
+			atapi_read(drive, &dum, sizeof (dum));
 			                                ^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: drivers/ide/ide-cd.c:1318:
+			atapi_read(drive, &dum, sizeof (dum));

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#241: FILE: drivers/ide/ide-cd.c:1461:
+			atapi_write(drive, &dum, sizeof(dum));
 			                    ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#241: FILE: drivers/ide/ide-cd.c:1461:
+			atapi_write(drive, &dum, sizeof(dum));
 			                                ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#270: FILE: drivers/ide/ide-disk.c:1200:
+	printk(KERN_INFO "%s: %ld sectors", drive->name, capacity);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#275: FILE: drivers/ide/ide-disk.c:1204:
+	printk(" (%ld MB)", (capacity - capacity/625 + 974)/1950);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#275: FILE: drivers/ide/ide-disk.c:1204:
+	printk(" (%ld MB)", (capacity - capacity/625 + 974)/1950);
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#275: FILE: drivers/ide/ide-disk.c:1204:
+	printk(" (%ld MB)", (capacity - capacity/625 + 974)/1950);
 	                                                   ^

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#357: FILE: drivers/ide/ide-floppy.c:982:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: drivers/ide/ide-floppy.c:982:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: drivers/ide/ide-floppy.c:982:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */
 			                                      ^

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#363: FILE: drivers/ide/ide-floppy.c:987:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/ide/ide-floppy.c:987:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/ide/ide-floppy.c:987:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */
 			                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->autotune == 1'
#418: FILE: drivers/ide/ide-probe.c:593:
+		if (drive->present && (drive->autotune == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drive->channel->tuneproc"
#419: FILE: drivers/ide/ide-probe.c:594:
+			if (drive->channel->tuneproc != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#464: FILE: drivers/ide/ide-tape.c:2172:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: drivers/ide/ide-tape.c:2172:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: drivers/ide/ide-tape.c:2172:
+			atapi_write(drive,pc->current_position,bcount.all);	/* Write the current buffer */
 			                                      ^

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#470: FILE: drivers/ide/ide-tape.c:2177:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: drivers/ide/ide-tape.c:2177:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: drivers/ide/ide-tape.c:2177:
+			atapi_read(drive,pc->current_position,bcount.all);	/* Read the current buffer */
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: drivers/ide/ide-tape.c:2262:
+	atapi_write(drive,pc->c,12);	/* Send the actual packet */
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: drivers/ide/ide-tape.c:2262:
+	atapi_write(drive,pc->c,12);	/* Send the actual packet */
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#560: FILE: drivers/ide/ide-taskfile.c:114:
+	unsigned short *ptr = (unsigned short *) buffer;

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/ide/ide-taskfile.c:124:
+	unsigned short *ptr = (unsigned short *) buffer;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#581: FILE: drivers/ide/ide-taskfile.c:135:
+	insw(IDE_DATA_REG, buffer, wcount<<1);
 	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#586: FILE: drivers/ide/ide-taskfile.c:140:
+	outsw(IDE_DATA_REG, buffer, wcount<<1);
 	                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#698: FILE: drivers/ide/ide-taskfile.c:205:
+			ata_write_16(drive, buffer, wcount<<1);
 			                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <pBuf>
#809: FILE: drivers/ide/ide-taskfile.c:577:
+	ata_read(drive, pBuf, SECTOR_WORDS);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#876: FILE: drivers/ide/ide-taskfile.c:1033:
+EXPORT_SYMBOL(ata_read);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#877: FILE: drivers/ide/ide-taskfile.c:1034:
+EXPORT_SYMBOL(ata_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#878: FILE: drivers/ide/ide-taskfile.c:1035:
+EXPORT_SYMBOL(atapi_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#879: FILE: drivers/ide/ide-taskfile.c:1036:
+EXPORT_SYMBOL(atapi_write);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#891: FILE: drivers/ide/ide.c:386:
+			printk(KERN_INFO "%s: exceeded max command turn-around time (%d seconds)\n", drive->name, ATA_AR_MAX_TURNAROUND / HZ);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#891: FILE: drivers/ide/ide.c:386:
+			printk(KERN_INFO "%s: exceeded max command turn-around time (%d seconds)\n", drive->name, ATA_AR_MAX_TURNAROUND / HZ);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drive->channel->tuneproc"
#912: FILE: drivers/ide/ide.c:532:
+		if (drive->channel->tuneproc != NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1004: FILE: drivers/ide/ide.c:1281:
+		if (!list_empty(&tmp->queue.queue_head)
+		&& (!tmp->PADAM_sleep || time_after_eq(tmp->PADAM_sleep, jiffies))) {

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1006: FILE: drivers/ide/ide.c:1283:
+			 || (tmp->PADAM_sleep && (!drive->PADAM_sleep || time_after(drive->PADAM_sleep, tmp->PADAM_sleep)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1006: FILE: drivers/ide/ide.c:1283:
+			if (!drive
+			 || (tmp->PADAM_sleep && (!drive->PADAM_sleep || time_after(drive->PADAM_sleep, tmp->PADAM_sleep)))

WARNING:LONG_LINE: line length of 180 exceeds 100 columns
#1007: FILE: drivers/ide/ide.c:1284:
+			 || (!drive->PADAM_sleep && time_after(drive->PADAM_service_start + 2 * drive->PADAM_service_time, tmp->PADAM_service_start + 2 * tmp->PADAM_service_time)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1007: FILE: drivers/ide/ide.c:1284:
+			 || (tmp->PADAM_sleep && (!drive->PADAM_sleep || time_after(drive->PADAM_sleep, tmp->PADAM_sleep)))
+			 || (!drive->PADAM_sleep && time_after(drive->PADAM_service_start + 2 * drive->PADAM_service_time, tmp->PADAM_service_start + 2 * tmp->PADAM_service_time)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1033: FILE: drivers/ide/ide.c:1496:
+		if ((drive = choose_drive(hwgroup)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1205: FILE: drivers/scsi/ide-scsi.c:385:
+			atapi_read(drive,pc->current_position,bcount);
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1205: FILE: drivers/scsi/ide-scsi.c:385:
+			atapi_read(drive,pc->current_position,bcount);
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1212: FILE: drivers/scsi/ide-scsi.c:391:
+			atapi_write(drive,pc->current_position,bcount);
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1212: FILE: drivers/scsi/ide-scsi.c:391:
+			atapi_write(drive,pc->current_position,bcount);
 			                                      ^

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1238: FILE: include/linux/ide.h:319:
+	struct ata_channel *	channel;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#1371: FILE: include/linux/ide.h:480:
+	void (*tuneproc) (ide_drive_t *, byte pio);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1371: FILE: include/linux/ide.h:480:
+	void (*tuneproc) (ide_drive_t *, byte pio);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1372: FILE: include/linux/ide.h:481:
+	int (*speedproc) (ide_drive_t *, byte pio);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1372: FILE: include/linux/ide.h:481:
+	int (*speedproc) (ide_drive_t *, byte pio);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1375: FILE: include/linux/ide.h:484:
+	void (*selectproc) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1375: FILE: include/linux/ide.h:484:
+	void (*selectproc) (ide_drive_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1378: FILE: include/linux/ide.h:487:
+	void (*resetproc) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1378: FILE: include/linux/ide.h:487:
+	void (*resetproc) (ide_drive_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1381: FILE: include/linux/ide.h:490:
+	void (*intrproc) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1381: FILE: include/linux/ide.h:490:
+	void (*intrproc) (ide_drive_t *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1384: FILE: include/linux/ide.h:493:
+	void (*maskproc) (ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1384: FILE: include/linux/ide.h:493:
+	void (*maskproc) (ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1384: FILE: include/linux/ide.h:493:
+	void (*maskproc) (ide_drive_t *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1387: FILE: include/linux/ide.h:496:
+	void (*rwproc) (ide_drive_t *, ide_dma_action_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1387: FILE: include/linux/ide.h:496:
+	void (*rwproc) (ide_drive_t *, ide_dma_action_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_dma_action_t' should also have an identifier name
#1387: FILE: include/linux/ide.h:496:
+	void (*rwproc) (ide_drive_t *, ide_dma_action_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1390: FILE: include/linux/ide.h:499:
+	int (*quirkproc) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1390: FILE: include/linux/ide.h:499:
+	int (*quirkproc) (ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1393: FILE: include/linux/ide.h:502:
+	void (*ata_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1393: FILE: include/linux/ide.h:502:
+	void (*ata_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1393: FILE: include/linux/ide.h:502:
+	void (*ata_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1394: FILE: include/linux/ide.h:503:
+	void (*ata_write)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1394: FILE: include/linux/ide.h:503:
+	void (*ata_write)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1394: FILE: include/linux/ide.h:503:
+	void (*ata_write)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1395: FILE: include/linux/ide.h:504:
+	void (*atapi_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1395: FILE: include/linux/ide.h:504:
+	void (*atapi_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1395: FILE: include/linux/ide.h:504:
+	void (*atapi_read)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1396: FILE: include/linux/ide.h:505:
+	void (*atapi_write)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1396: FILE: include/linux/ide.h:505:
+	void (*atapi_write)(ide_drive_t *, void *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1396: FILE: include/linux/ide.h:505:
+	void (*atapi_write)(ide_drive_t *, void *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1420: FILE: include/linux/ide.h:839:
+extern void ata_read(ide_drive_t *drive, void *buffer, unsigned int wcount);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1421: FILE: include/linux/ide.h:840:
+extern void ata_write(ide_drive_t *drive, void *buffer, unsigned int wcount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1423: FILE: include/linux/ide.h:842:
+extern void atapi_read(ide_drive_t *drive, void *buffer, unsigned int bytecount);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1424: FILE: include/linux/ide.h:843:
+extern void atapi_write(ide_drive_t *drive, void *buffer, unsigned int bytecount);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000464201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 63 warnings, 18 checks, 1246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000464201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
