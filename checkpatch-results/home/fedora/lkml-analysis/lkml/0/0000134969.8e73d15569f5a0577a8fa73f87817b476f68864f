CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/scsi/sata_mv.c:305:
+	void (*read_preamp)(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/scsi/sata_mv.c:338:
+static void mv5_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/scsi/sata_mv.c:348:
+static void mv6_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:SPACING: No space is necessary after a cast
#737: FILE: drivers/scsi/sata_mv.c:1326:
+		return (u32) ofs;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#760: FILE: drivers/scsi/sata_mv.c:1349:
+		u32 tmp = readl(mmio + MV_PCI_EXP_ROM_BAR_CTL);
+		tmp |= (1 << 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/scsi/sata_mv.c:1362:
+static void mv5_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/scsi/sata_mv.c:1390:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/scsi/sata_mv.c:1390:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/scsi/sata_mv.c:1390:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/scsi/sata_mv.c:1390:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/scsi/sata_mv.c:1390:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#823: FILE: drivers/scsi/sata_mv.c:1412:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: drivers/scsi/sata_mv.c:1416:
+static void mv5_reset_hc_port(struct mv_host_priv *hpriv, void __iomem *mmio,
+			     unsigned int port)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#849: FILE: drivers/scsi/sata_mv.c:1438:
+}
+#undef ZERO

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: drivers/scsi/sata_mv.c:1442:
+static void mv5_reset_one_hc(struct mv_host_priv *hpriv, void __iomem *mmio,
+			unsigned int hc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#868: FILE: drivers/scsi/sata_mv.c:1457:
+}
+#undef ZERO

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#908: FILE: drivers/scsi/sata_mv.c:1497:
+}
+#undef ZERO

WARNING:BRACES: braces {} are not necessary for single statement blocks
#947: FILE: drivers/scsi/sata_mv.c:1536:
+		if (PCI_MASTER_EMPTY & t) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#952: FILE: drivers/scsi/sata_mv.c:1541:
+		printk(KERN_ERR DRV_NAME ": PCI master won't flush\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#966: FILE: drivers/scsi/sata_mv.c:1555:
+		printk(KERN_ERR DRV_NAME ": can't set global reset\n");

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#971: FILE: drivers/scsi/sata_mv.c:1560:
+	/* clear reset and *reenable the PCI master* (not mentioned in spec) */
 	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#980: FILE: drivers/scsi/sata_mv.c:1569:
+		printk(KERN_ERR DRV_NAME ": can't clear global reset\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: drivers/scsi/sata_mv.c:1577:
+static void mv6_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1030: FILE: drivers/scsi/sata_mv.c:1619:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1036: FILE: drivers/scsi/sata_mv.c:1625:
+		udelay(200);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1081: FILE: drivers/scsi/sata_mv.c:1670:
+		u32 ifctl = readl(port_mmio + SATA_INTERFACE_CTL);
+		ifctl |= (1 << 12) | (1 << 7);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1085: FILE: drivers/scsi/sata_mv.c:1674:
+	udelay(25);		/* allow reset propagation */

ERROR:SPACING: space required before the open parenthesis '('
#1223: FILE: drivers/scsi/sata_mv.c:1871:
+	switch(board_idx) {

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1236: FILE: drivers/scsi/sata_mv.c:1884:
+			dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1237: FILE: drivers/scsi/sata_mv.c:1885:
+			dev_printk(KERN_WARNING, &pdev->dev,
+			   "Applying 50XXB2 workarounds to unknown rev\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1256: FILE: drivers/scsi/sata_mv.c:1904:
+			dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1257: FILE: drivers/scsi/sata_mv.c:1905:
+			dev_printk(KERN_WARNING, &pdev->dev,
+			   "Applying B2 workarounds to unknown rev\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1275: FILE: drivers/scsi/sata_mv.c:1923:
+			dev_printk(KERN_WARNING, &pdev->dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1283: FILE: drivers/scsi/sata_mv.c:1931:
+		printk(KERN_ERR DRV_NAME ": BUG: invalid board index %u\n", board_idx);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1342: FILE: drivers/scsi/sata_mv.c:1984:
+			u32 ifctl = readl(port_mmio + SATA_INTERFACE_CTL);
+			ifctl |= (1 << 12);

WARNING:SPLIT_STRING: quoted string split across lines
#1360: FILE: drivers/scsi/sata_mv.c:2016:
 	VPRINTK("HC MAIN IRQ cause/mask=0x%08x/0x%08x "
+		"PCI int cause/mask=0x%08x/0x%08x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1374: FILE: drivers/scsi/sata_mv.c:2057:
+	       (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134969.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 14 warnings, 22 checks, 1284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134969.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
