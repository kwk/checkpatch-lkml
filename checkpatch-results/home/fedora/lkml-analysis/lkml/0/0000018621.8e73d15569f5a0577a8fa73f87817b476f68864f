WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Provide notifier_call_chain with an option to call only a specified number of 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#68: FILE: kernel/sys.c:144:
+ *^I^I     ^Ivalue of this parameter is -1.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: kernel/sys.c:146:
+ *^I^I   ^Ivalue of this field is NULL.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: kernel/sys.c:148:
+ * ^IRETURN VALUE:^Inotifier_call_chain returns the value returned by the$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#92: FILE: kernel/sys.c:166:
+			*nr_calls ++;
 			          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: kernel/sys.c:251:
+int __kprobes __atomic_notifier_call_chain(struct atomic_notifier_head *nh,
+					unsigned long val, void *v,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#136: FILE: kernel/sys.c:262:
+EXPORT_SYMBOL_GPL(__atomic_notifier_call_chain);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: kernel/sys.c:265:
+int __kprobes atomic_notifier_call_chain(struct atomic_notifier_head *nh,
+		unsigned long val, void *v)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#144: FILE: kernel/sys.c:270:
+EXPORT_SYMBOL_GPL(atomic_notifier_call_chain);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: kernel/sys.c:361:
+				   int nr_to_call, unsigned int * nr_calls)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#182: FILE: kernel/sys.c:371:
+EXPORT_SYMBOL_GPL(__blocking_notifier_call_chain);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: kernel/sys.c:374:
+int blocking_notifier_call_chain(struct blocking_notifier_head *nh,
+		unsigned long val, void *v)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#218: FILE: kernel/sys.c:450:
+EXPORT_SYMBOL_GPL(__raw_notifier_call_chain);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: kernel/sys.c:563:
+int srcu_notifier_call_chain(struct srcu_notifier_head *nh,
+		unsigned long val, void *v)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: include/linux/notifier.h:135:
+extern int __atomic_notifier_call_chain(struct atomic_notifier_head *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct atomic_notifier_head *' should also have an identifier name
#274: FILE: include/linux/notifier.h:135:
+extern int __atomic_notifier_call_chain(struct atomic_notifier_head *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: include/linux/notifier.h:136:
+extern int __atomic_notifier_call_chain(struct atomic_notifier_head *,
+	unsigned long val, void *v, int nr_to_call, unsigned int *nr_calls);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: include/linux/notifier.h:139:
+extern int __blocking_notifier_call_chain(struct blocking_notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blocking_notifier_head *' should also have an identifier name
#278: FILE: include/linux/notifier.h:139:
+extern int __blocking_notifier_call_chain(struct blocking_notifier_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: include/linux/notifier.h:140:
+extern int __blocking_notifier_call_chain(struct blocking_notifier_head *,
+	unsigned long val, void *v, int nr_to_call, unsigned int *nr_calls);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/notifier.h:143:
+extern int __raw_notifier_call_chain(struct raw_notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct raw_notifier_head *' should also have an identifier name
#282: FILE: include/linux/notifier.h:143:
+extern int __raw_notifier_call_chain(struct raw_notifier_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: include/linux/notifier.h:144:
+extern int __raw_notifier_call_chain(struct raw_notifier_head *,
+	unsigned long val, void *v, int nr_to_call, unsigned int *nr_calls);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: include/linux/notifier.h:147:
+extern int __srcu_notifier_call_chain(struct srcu_notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct srcu_notifier_head *' should also have an identifier name
#286: FILE: include/linux/notifier.h:147:
+extern int __srcu_notifier_call_chain(struct srcu_notifier_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: include/linux/notifier.h:148:
+extern int __srcu_notifier_call_chain(struct srcu_notifier_head *,
+	unsigned long val, void *v, int nr_to_call, unsigned int *nr_calls);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 12 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
