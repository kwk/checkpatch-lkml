WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
>This patch renames the obj_reallen() function to obj_size() which makes the

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#51: 
Signed-Off-By: Manfred Spraul <manfred@colorfullife.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: No space is necessary after a cast
#113: FILE: mm/slab.c:529:
+	return (unsigned long*) (objp+obj_user_off(cachep)-BYTES_PER_WORD);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: mm/slab.c:529:
+	return (unsigned long*) (objp+obj_user_off(cachep)-BYTES_PER_WORD);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: mm/slab.c:529:
+	return (unsigned long*) (objp+obj_user_off(cachep)-BYTES_PER_WORD);
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: mm/slab.c:529:
+	return (unsigned long*) (objp+obj_user_off(cachep)-BYTES_PER_WORD);
 	                                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cachep' may be better as '(cachep)' to avoid precedence issues
#124: FILE: mm/slab.c:549:
+#define obj_user_size(cachep)		(cachep->objsize)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#145: FILE: mm/slab.c:1276:
+	addr = (unsigned long *)&((char*)addr)[obj_user_off(cachep)];

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: mm/slab.c:1307:
+	int size = obj_user_size(cachep);
+	addr = &((char*)addr)[obj_user_off(cachep)];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: mm/slab.c:1307:
+	addr = &((char*)addr)[obj_user_off(cachep)];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#166: FILE: mm/slab.c:1344:
+	realobj = (char*)objp+obj_user_off(cachep);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#166: FILE: mm/slab.c:1344:
+	realobj = (char*)objp+obj_user_off(cachep);
 	                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#177: FILE: mm/slab.c:1361:
+	realobj = (char*)objp+obj_user_off(cachep);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#177: FILE: mm/slab.c:1361:
+	realobj = (char*)objp+obj_user_off(cachep);
 	                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#187: FILE: mm/slab.c:1400:
+			realobj = (char*)objp+obj_user_off(cachep);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: mm/slab.c:1400:
+			realobj = (char*)objp+obj_user_off(cachep);
 			                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#195: FILE: mm/slab.c:1407:
+			realobj = (char*)objp+obj_user_off(cachep);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: mm/slab.c:1407:
+			realobj = (char*)objp+obj_user_off(cachep);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: mm/slab.c:1448:
+			(cachep->dtor)(objp+obj_user_off(cachep), cachep, 0);
 			                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (cachep->dtor)
#204: FILE: mm/slab.c:1448:
+			(cachep->dtor)(objp+obj_user_off(cachep), cachep, 0);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#231: FILE: mm/slab.c:1671:
+	if (size >= malloc_sizes[INDEX_L3+1].cs_size && cachep->user_size > cache_line_size() && size < PAGE_SIZE) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: mm/slab.c:1671:
+	if (size >= malloc_sizes[INDEX_L3+1].cs_size && cachep->user_size > cache_line_size() && size < PAGE_SIZE) {
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: mm/slab.c:2122:
+			cachep->ctor(objp+obj_user_off(cachep), cachep, ctor_flags);
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#259: FILE: mm/slab.c:2327:
+		cachep->ctor(objp+obj_user_off(cachep),
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#267: FILE: mm/slab.c:2334:
+		cachep->dtor(objp+obj_user_off(cachep), cachep, 0);
 		                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 4 warnings, 14 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
