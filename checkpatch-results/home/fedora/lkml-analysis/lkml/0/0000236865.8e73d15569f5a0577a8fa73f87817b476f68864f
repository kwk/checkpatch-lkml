WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#68: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#75: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#75: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#89: 
   Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#90: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#90: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#115: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#115: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#122: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#122: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#131: 
   Signed-off-by: tabris@tabris.net

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#132: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#132: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#139: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#139: 
   Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#189: FILE: drivers/ide/ide-dma.c:714:
+EXPORT_SYMBOL_GPL(ide_use_dma);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#307: FILE: drivers/ide/ide-taskfile.c:465:
long data_size, u8 *buf)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/ide/ide-taskfile.c:467:
+static int ide_diag_taskfile(ide_drive_t *drive, ide_task_t *args,
 {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#420: FILE: drivers/ide/pci/aec62xx.c:192:
 	if ((id->capability & 1) && drive->autodma) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#481: FILE: drivers/ide/pci/atiixp.c:264:
 	if ((id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#528: FILE: drivers/ide/pci/cmd64x.c:444:
 	if ((id != NULL) && ((id->capability & 1) != 0) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#576: FILE: drivers/ide/pci/hpt34x.c:133:
 	if (id && (id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#627: FILE: drivers/ide/pci/hpt366.c:463:
 	if (id && (id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#674: FILE: drivers/ide/pci/it8172.c:204:
 	if (id && (id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#722: FILE: drivers/ide/pci/pdc202xx_new.c:192:
 	if (id && (id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#770: FILE: drivers/ide/pci/pdc202xx_old.c:337:
 	if (id && (id->capability & 1) && drive->autodma) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == PCI_DEVICE_ID_PROMISE_20267'
#790: FILE: drivers/ide/pci/pdc202xx_old.c:567:
+	if ((dev->device == PCI_DEVICE_ID_PROMISE_20267) ||
+	    (dev->device == PCI_DEVICE_ID_PROMISE_20265))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == PCI_DEVICE_ID_PROMISE_20265'
#790: FILE: drivers/ide/pci/pdc202xx_old.c:567:
+	if ((dev->device == PCI_DEVICE_ID_PROMISE_20267) ||
+	    (dev->device == PCI_DEVICE_ID_PROMISE_20265))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#859: FILE: drivers/ide/pci/serverworks.c:308:
 	if ((id->capability & 1) && drive->autodma) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#953: FILE: drivers/ide/pci/sis5513.c:674:
 	if (id && (id->capability & 1) && drive->autodma) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1074: FILE: include/asm-ppc64/machdep.h:122:
+^I/* Get legacy PCI/IDE interrupt mapping */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1076: FILE: include/asm-ppc64/machdep.h:124:
+^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#1141: FILE: include/linux/ide.h:1489:
+int ide_use_dma(ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 17 warnings, 13 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
