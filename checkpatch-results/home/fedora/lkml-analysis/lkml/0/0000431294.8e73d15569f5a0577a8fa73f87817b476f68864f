CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#113: FILE: include/linux/mm.h:292:
+#define lowmem_page_address(page)					\
+	__va( ( ((page) - page_zone(page)->zone_mem_map)		\
+			+ page_zone(page)->zone_start_pfn) << PAGE_SHIFT)

ERROR:SPACING: space prohibited after that open parenthesis '('
#114: FILE: include/linux/mm.h:293:
+	__va( ( ((page) - page_zone(page)->zone_mem_map)		\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: include/linux/mm.h:306:
+#define page_address_init()  do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: include/linux/mm.h:317:
+#define set_page_address(page, address)  do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: include/linux/mm.h:318:
+#define page_address_init()  do { } while(0)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#278: FILE: mm/highmem.c:510:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#279: FILE: mm/highmem.c:511:
+} ____cacheline_aligned_in_smp page_address_htable[1<<PA_HASH_ORDER];
                                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#319: FILE: mm/highmem.c:551:
+	BUG_ON(!PageHighMem(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: mm/highmem.c:555:
+		void *addr = page_address(page);
+		if (addr) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: mm/highmem.c:556:
+			printk("eek!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#326: FILE: mm/highmem.c:558:
+				printk("double eek!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#332: FILE: mm/highmem.c:564:
+		BUG_ON(list_empty(&page_address_pool));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: mm/highmem.c:568:
+		pam = list_entry(page_address_pool.next,
+				struct page_address_map, list);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: mm/highmem.c:591:
+		printk("aargh!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: mm/page_alloc.c:927:
+				set_page_address(page,
+					__va(zone_start_pfn << PAGE_SHIFT));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431294.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 5 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431294.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
