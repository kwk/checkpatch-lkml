CHECK:CAMELCASE: Avoid CamelCase: <GlobalSMBSeslock>
#100: FILE: fs/cifs/inode.c:904:
+	read_lock(&GlobalSMBSeslock);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#102: FILE: fs/cifs/inode.c:906:
+	/* To avoid spurious oplock breaks from server, in the case of inodes
+	   that we already have open, avoid doing path based setting of file

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: fs/cifs/inode.c:910:
+	   SMB timeout for the SetPathInfo request would allow */

CHECK:CAMELCASE: Avoid CamelCase: <cifsInode>
#107: FILE: fs/cifs/inode.c:911:
+	list_for_each(tmp, &cifsInode->openFileList) {

CHECK:CAMELCASE: Avoid CamelCase: <openFileList>
#107: FILE: fs/cifs/inode.c:911:
+	list_for_each(tmp, &cifsInode->openFileList) {

CHECK:CAMELCASE: Avoid CamelCase: <cifsFileInfo>
#108: FILE: fs/cifs/inode.c:912:
+		open_file = list_entry(tmp, struct cifsFileInfo, flist);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'open_file->pfile'
#110: FILE: fs/cifs/inode.c:914:
+		if ((open_file->pfile) &&
+		    ((open_file->pfile->f_flags & O_RDWR) ||
+		    (open_file->pfile->f_flags & O_WRONLY))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <invalidHandle>
#113: FILE: fs/cifs/inode.c:917:
+			if (open_file->invalidHandle == FALSE) {

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#113: FILE: fs/cifs/inode.c:917:
+			if (open_file->invalidHandle == FALSE) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#115: FILE: fs/cifs/inode.c:919:
+				/* we found a valid, writeable network
+				   file handle to use to try to set the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#116: FILE: fs/cifs/inode.c:920:
+				   file size */

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: fs/cifs/inode.c:923:
+				__u32 npid = open_file->pid;
+				read_unlock(&GlobalSMBSeslock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBSetFileSize>
#121: FILE: fs/cifs/inode.c:925:
+				rc = CIFSSMBSetFileSize(xid, pTcon,

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#121: FILE: fs/cifs/inode.c:925:
+				rc = CIFSSMBSetFileSize(xid, pTcon,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: fs/cifs/inode.c:926:
+				rc = CIFSSMBSetFileSize(xid, pTcon,
+					attrs->ia_size, nfid, npid, FALSE);

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#123: FILE: fs/cifs/inode.c:927:
+				cFYI(1, ("SetFileSize by handle "

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: fs/cifs/inode.c:928:
+				cFYI(1, ("SetFileSize by handle "
+					 "(setattrs) rc = %d", rc));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: fs/cifs/inode.c:930:
+				/* Do not need reopen and retry on EAGAIN since
+				   we will retry by pathname below */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: fs/cifs/inode.c:930:
+				   we will retry by pathname below */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#129: FILE: fs/cifs/inode.c:933:
+				/* now that we found one valid file handle no
+				   sense continuing to loop trying others,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#130: FILE: fs/cifs/inode.c:934:
+				   so break here */

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#135: FILE: fs/cifs/inode.c:939:
+	if (found == FALSE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#151: FILE: fs/cifs/inode.c:944:
+		/* Set file size by pathname rather than by handle either
+		   because no valid, writeable file handle for it was found or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: fs/cifs/inode.c:945:
+		   because there was an error setting it by handle */

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBSetEOF>
#153: FILE: fs/cifs/inode.c:946:
+		rc = CIFSSMBSetEOF(xid, pTcon, full_path, attrs->ia_size,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#158: FILE: fs/cifs/inode.c:951:
+	/* Server is ok setting allocation size implicitly - no need
+	   to call:

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#209: FILE: fs/cifs/inode.c:1025:
+	if (!(set_time || time_buf.Attributes))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#216: FILE: fs/cifs/inode.c:1029:
+	/* BB what if setting one attribute fails (such as size) but time
+	   setting works? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: fs/cifs/inode.c:1029:
+	   setting works? */

CHECK:CAMELCASE: Avoid CamelCase: <CreationTime>
#217: FILE: fs/cifs/inode.c:1030:
+	time_buf.CreationTime = 0;	/* do not change */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#219: FILE: fs/cifs/inode.c:1032:
+	/* In the future we should experiment - try setting timestamps via
+	   Handle (SetFileInfo) instead of by path */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: fs/cifs/inode.c:1032:
+	   Handle (SetFileInfo) instead of by path */

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBSetTimes>
#221: FILE: fs/cifs/inode.c:1034:
+		rc = CIFSSMBSetTimes(xid, pTcon, full_path, &time_buf,

WARNING:SPLIT_STRING: quoted string split across lines
#231: FILE: fs/cifs/inode.c:1044:
+		cFYI(1, ("calling SetFileInfo since SetPathInfo for times not"
+			 " supported by this server"));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: fs/cifs/inode.c:1046:
+		/* BB we could scan to see if we already have it open and pass
+		   in pid of opener to function */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: fs/cifs/inode.c:1046:
+		   in pid of opener to function */

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBOpen>
#234: FILE: fs/cifs/inode.c:1047:
+		rc = CIFSSMBOpen(xid, pTcon, full_path, FILE_OPEN,

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#238: FILE: fs/cifs/inode.c:1051:
+		if (rc==0) {
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBSetFileTimes>
#239: FILE: fs/cifs/inode.c:1052:
+			rc = CIFSSMBSetFileTimes(xid, pTcon, &time_buf,

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBClose>
#241: FILE: fs/cifs/inode.c:1054:
+			CIFSSMBClose(xid, pTcon, netfid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#244: FILE: fs/cifs/inode.c:1057:
+		/* BB For even older servers we could convert time_buf into old
+		   DOS style which uses two second granularity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#244: FILE: fs/cifs/inode.c:1057:
+		   DOS style which uses two second granularity */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#247: FILE: fs/cifs/inode.c:1060:
+		/* rc = CIFSSMBSetTimesLegacy(xid, pTcon, full_path, &time_buf,
+					      cifs_sb->local_nls); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: fs/cifs/inode.c:1060:
+					      cifs_sb->local_nls); */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 24 warnings, 19 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
