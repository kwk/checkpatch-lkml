WARNING:SPACING: space prohibited between function name and open parenthesis '('
#58: FILE: net/ipv4/tcp.c:1010:
+static ssize_t file_send_actor (read_descriptor_t *desc, struct page *page,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: net/ipv4/tcp.c:1011:
+static ssize_t file_send_actor (read_descriptor_t *desc, struct page *page,
+	unsigned long offset, unsigned long size)

CHECK:SPACING: No space is necessary after a cast
#63: FILE: net/ipv4/tcp.c:1015:
+	struct sock *sk = (struct sock *) desc->buf;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#70: FILE: net/ipv4/tcp.c:1022:
+	if (size < count) flags |= MSG_MORE;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#72: FILE: net/ipv4/tcp.c:1024:
+#define TCP_ZC_CSUM_FLAGS (NETIF_F_IP_CSUM|NETIF_F_NO_CSUM|NETIF_F_HW_CSUM)
                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#72: FILE: net/ipv4/tcp.c:1024:
+#define TCP_ZC_CSUM_FLAGS (NETIF_F_IP_CSUM|NETIF_F_NO_CSUM|NETIF_F_HW_CSUM)
                                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: net/ipv4/tcp.c:1027:
+	if (!(sk->route_caps & NETIF_F_SG) ||
+		!(sk->route_caps & TCP_ZC_CSUM_FLAGS))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#84: FILE: net/ipv4/tcp.c:1036:
+	if (res < 0) desc->error = res;

CHECK:BRACES: braces {} should be used on all arms of this statement
#84: FILE: net/ipv4/tcp.c:1036:
+	if (res < 0) desc->error = res;
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#85: FILE: net/ipv4/tcp.c:1037:
+	else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sk->socket->file->f_op->sendpage"
#100: FILE: net/ipv4/tcp.c:1054:
+	int has_sendpage = sk->socket->file->f_op->sendpage != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#110: FILE: net/ipv4/tcp.c:1091:
+				find_vma (current->mm, (long) from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: net/ipv4/tcp.c:1091:
+				find_vma (current->mm, (long) from);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: net/ipv4/tcp.c:1092:
+			struct file *filp;
 			             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#113: FILE: net/ipv4/tcp.c:1094:
+			if (vma && (filp = vma->vm_file)) {
 			            ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#113: FILE: net/ipv4/tcp.c:1094:
+			if (vma && (filp = vma->vm_file)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#116: FILE: net/ipv4/tcp.c:1097:
+				loff_t pos = (long) from - vma->vm_start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: net/ipv4/tcp.c:1102:
+				if (locks_verify_area (FLOCK_VERIFY_READ, in,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#122: FILE: net/ipv4/tcp.c:1103:
+					filp, filp->f_pos, seglen))
 					^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: net/ipv4/tcp.c:1103:
+				if (locks_verify_area (FLOCK_VERIFY_READ, in,
+					filp, filp->f_pos, seglen))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: net/ipv4/tcp.c:1106:
+				if (locks_verify_area (FLOCK_VERIFY_WRITE, out,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: net/ipv4/tcp.c:1107:
+				if (locks_verify_area (FLOCK_VERIFY_WRITE, out,
+					sk->socket->file, 0, seglen))

CHECK:SPACING: No space is necessary after a cast
#131: FILE: net/ipv4/tcp.c:1112:
+				desc.buf     = (char *) sk;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#134: FILE: net/ipv4/tcp.c:1115:
+				do_generic_file_read (filp, &pos, &desc,
 				                      ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: net/ipv4/tcp.c:1115:
+				do_generic_file_read (filp, &pos, &desc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: net/ipv4/tcp.c:1116:
+				do_generic_file_read (filp, &pos, &desc,
+					file_send_actor);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 14 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404389.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
