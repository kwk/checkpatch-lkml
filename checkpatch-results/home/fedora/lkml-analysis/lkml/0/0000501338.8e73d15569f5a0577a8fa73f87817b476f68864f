WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -u -p linux/include/net/irda/irda-usb.d2.h linux/include/net/irda/irda-usb.h

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#48: FILE: include/net/irda/irda-usb.h:124:
+ * (6.2.5, USB-IrDA class spec 1.0) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#63: FILE: drivers/net/irda/irda-usb.c:282:
+		WARNING(__FUNCTION__ "(), failed Speed URB\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#72: FILE: drivers/net/irda/irda-usb.c:299:
+		WARNING(__FUNCTION__ "(), Bug : self == NULL\n");

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#80: FILE: drivers/net/irda/irda-usb.c:306:
+		IRDA_DEBUG(0, __FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#80: FILE: drivers/net/irda/irda-usb.c:306:
+		IRDA_DEBUG(0, __FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#89: FILE: drivers/net/irda/irda-usb.c:455:
+		WARNING(__FUNCTION__ "(), failed Tx URB\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#98: FILE: drivers/net/irda/irda-usb.c:484:
+		WARNING(__FUNCTION__ "(), Bug : self == NULL\n");

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#107: FILE: drivers/net/irda/irda-usb.c:495:
+		IRDA_DEBUG(0, __FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#107: FILE: drivers/net/irda/irda-usb.c:495:
+		IRDA_DEBUG(0, __FUNCTION__ "(), URB complete status %d, transfer_flags 0x%04X\n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#116: FILE: drivers/net/irda/irda-usb.c:517:
+		IRDA_DEBUG(1, __FUNCTION__ "(), Changing speed now...\n");

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#125: FILE: drivers/net/irda/irda-usb.c:551:
+		IRDA_DEBUG(0, "%s: Speed change timed out, urb->status=%d, urb->transfer_flags=0x%04X\n", netdev->name, purb->status, purb->transfer_flags);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#134: FILE: drivers/net/irda/irda-usb.c:578:
+		IRDA_DEBUG(0, "%s: Tx timed out, urb->status=%d, urb->transfer_flags=0x%04X\n", netdev->name, purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#143: FILE: drivers/net/irda/irda-usb.c:697:
+		WARNING(__FUNCTION__ "(), Bug : purb == NULL\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#152: FILE: drivers/net/irda/irda-usb.c:707:
+			WARNING(__FUNCTION__ "(), Failed to allocate Rx skb\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#161: FILE: drivers/net/irda/irda-usb.c:737:
+		WARNING(__FUNCTION__ "(), Failed to submit Rx URB %d\n", ret);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#170: FILE: drivers/net/irda/irda-usb.c:778:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#170: FILE: drivers/net/irda/irda-usb.c:778:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#170: FILE: drivers/net/irda/irda-usb.c:778:
+			IRDA_DEBUG(0, __FUNCTION__ "(), Connection Reset (-104), transfer_flags 0x%04X \n", purb->transfer_flags);

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#177: FILE: drivers/net/irda/irda-usb.c:784:
+			IRDA_DEBUG(0, __FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#177: FILE: drivers/net/irda/irda-usb.c:784:
+			IRDA_DEBUG(0, __FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: drivers/net/irda/irda-usb.c:784:
+			IRDA_DEBUG(0, __FUNCTION__ "(), RX status %d,transfer_flags 0x%04X \n", purb->status, purb->transfer_flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#186: FILE: drivers/net/irda/irda-usb.c:896:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#195: FILE: drivers/net/irda/irda-usb.c:920:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#204: FILE: drivers/net/irda/irda-usb.c:980:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: drivers/net/irda/irda-usb.c:1145:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#222: FILE: drivers/net/irda/irda-usb.c:1200:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: drivers/net/irda/irda-usb.c:1332:
+	desc = kmalloc(sizeof (*desc), GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/net/irda/irda-usb.c:1344:
+	ret = usb_control_msg(dev, usb_rcvctrlpipe(dev,0),
 	                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/net/irda/irda-usb.c:1345:
+	ret = usb_control_msg(dev, usb_rcvctrlpipe(dev,0),
+		IU_REQ_GET_CLASS_DESC,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#271: FILE: drivers/net/irda/irda-usb.c:1349:
+	IRDA_DEBUG(1, __FUNCTION__ "(), ret=%d\n", ret);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#274: FILE: drivers/net/irda/irda-usb.c:1352:
+			(ret<0) ? "failed" : "too short", ret);
 			    ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#276: FILE: drivers/net/irda/irda-usb.c:1354:
+	}
+	else if (desc->bDescriptorType != USB_DT_IRDA) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <bDescriptorType>
#276: FILE: drivers/net/irda/irda-usb.c:1354:
+	else if (desc->bDescriptorType != USB_DT_IRDA) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#280: FILE: drivers/net/irda/irda-usb.c:1357:
 	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#280: FILE: drivers/net/irda/irda-usb.c:1357:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#302: FILE: drivers/net/irda/irda-usb.c:1397:
+		dev->devnum, dev->descriptor.idVendor,

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#303: FILE: drivers/net/irda/irda-usb.c:1398:
+		dev->descriptor.idProduct);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/net/irda/irda-usb.c:1424:
+		WARNING("Too many USB IrDA devices !!! (max = %d)\n",
 			   NIRUSB);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#330: FILE: drivers/net/irda/irda-usb.c:1492:
+	IRDA_DEBUG(1, __FUNCTION__ "()\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000501338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 30 warnings, 6 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000501338.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
