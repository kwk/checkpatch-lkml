WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
This part of the patch contains the VFS file, dentry, & directory interfaces.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: fs/9p/vfs_dir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#44: FILE: fs/9p/vfs_dir.c:2:
+ * linux/fs/9p/vfs_dir.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: fs/9p/vfs_dir.c:20:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: fs/9p/vfs_dir.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#112: FILE: fs/9p/vfs_dir.c:70:
+static int v9fs_dir_readdir(struct file *filp, void *dirent, filldir_t filldir)
                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'filp->f_pos != file->rdir_pos'
#137: FILE: fs/9p/vfs_dir.c:95:
+	if (file->rdir_fcall && (filp->f_pos != file->rdir_pos)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: fs/9p/vfs_dir.c:96:
+		kfree( file->rdir_fcall);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <FreeStructs>
#154: FILE: fs/9p/vfs_dir.c:112:
+				goto FreeStructs;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that open parenthesis '('
#173: FILE: fs/9p/vfs_dir.c:131:
+			kfree( file->rdir_fcall);

CHECK:BRACES: braces {} should be used on all arms of this statement
#180: FILE: fs/9p/vfs_dir.c:138:
+		if (ret < 0) {
[...]
+		} else if (ret == 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: fs/9p/vfs_dir.c:151:
+^I^I^I^I^I^I      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: fs/9p/vfs_dir.c:152:
+						      
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#218: FILE: fs/9p/vfs_dir.c:176:
+		kfree( fcall);

WARNING:INDENTED_LABEL: labels should not be indented
#221: FILE: fs/9p/vfs_dir.c:179:
+      FreeStructs:

ERROR:SPACING: space prohibited after that open parenthesis '('
#222: FILE: fs/9p/vfs_dir.c:180:
+	kfree( fcall);

ERROR:SPACING: space prohibited after that open parenthesis '('
#223: FILE: fs/9p/vfs_dir.c:181:
+	kfree( mi);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#230: FILE: fs/9p/vfs_dir.c:188:
+ * @filp: file pointer to a directory
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#234: FILE: fs/9p/vfs_dir.c:192:
+int v9fs_dir_release(struct inode *inode, struct file *filp)
                                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#242: FILE: fs/9p/vfs_dir.c:200:
+			"can't happen: no private data (ino %lu) (filp %p)\n",
 			                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#243: FILE: fs/9p/vfs_dir.c:201:
+			inode->i_ino, filp);
 			              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#247: FILE: fs/9p/vfs_dir.c:205:
+	dprintk(DEBUG_VFS, "inode: %p filp: %p fid: %d\n", inode, filp,
 	                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#247: FILE: fs/9p/vfs_dir.c:205:
+	dprintk(DEBUG_VFS, "inode: %p filp: %p fid: %d\n", inode, filp,
 	                                                          ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#267: FILE: fs/9p/vfs_dir.c:225:
+			kfree( fid->rdir_fcall);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#267: FILE: fs/9p/vfs_dir.c:225:
+		if (fid->rdir_fcall) {
+			kfree( fid->rdir_fcall);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#279: FILE: fs/9p/vfs_dir.c:237:
+struct file_operations v9fs_dir_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#290: FILE: fs/9p/vfs_file.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#291: FILE: fs/9p/vfs_file.c:2:
+ *  linux/fs/9p/vfs_file.c

WARNING:TYPO_SPELLING: 'contians' may be misspelled - perhaps 'contains'?
#293: FILE: fs/9p/vfs_file.c:4:
+ * This file contians vfs file ops for 9P2000. 
              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: fs/9p/vfs_file.c:4:
+ * This file contians vfs file ops for 9P2000. $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#309: FILE: fs/9p/vfs_file.c:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#310: FILE: fs/9p/vfs_file.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#325: FILE: fs/9p/vfs_file.c:36:
+#include <asm/uaccess.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: fs/9p/vfs_file.c:68:
+		struct dentry *dentry = file->f_dentry;
+		dprintk(DEBUG_ERROR, "Couldn't resolve fid from dentry\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!v9fid"
#385: FILE: fs/9p/vfs_file.c:96:
+		if (v9fid == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#398: FILE: fs/9p/vfs_file.c:109:
+		if (!S_ISDIR(inode->i_mode))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#400: FILE: fs/9p/vfs_file.c:111:
+		else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#413: FILE: fs/9p/vfs_file.c:124:
+				kfree( fcall);

ERROR:SPACING: space prohibited after that open parenthesis '('
#425: FILE: fs/9p/vfs_file.c:136:
+			kfree( fcall);

ERROR:SPACING: space prohibited after that open parenthesis '('
#448: FILE: fs/9p/vfs_file.c:159:
+			kfree( fcall);

ERROR:SPACING: space prohibited after that open parenthesis '('
#453: FILE: fs/9p/vfs_file.c:164:
+		kfree( fcall);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#464: FILE: fs/9p/vfs_file.c:175:
+	v9fid->filp = file;
 	       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#479: FILE: fs/9p/vfs_file.c:190:
+static int v9fs_file_lock(struct file *filp, int cmd, struct file_lock *fl)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#484: FILE: fs/9p/vfs_file.c:195:
+	dprintk(DEBUG_VFS, "filp: %p lock: %p\n", filp, fl);
 	                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#484: FILE: fs/9p/vfs_file.c:195:
+	dprintk(DEBUG_VFS, "filp: %p lock: %p\n", filp, fl);
 	                                          ^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#489: FILE: fs/9p/vfs_file.c:200:
+	if ((inode->i_mode & (S_ISGID | S_IXGRP)) == S_ISGID)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#511: FILE: fs/9p/vfs_file.c:222:
+v9fs_read(struct file *filp, char *buffer, size_t count, loff_t * offset)
                        ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#511: FILE: fs/9p/vfs_file.c:222:
+v9fs_read(struct file *filp, char *buffer, size_t count, loff_t * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#534: FILE: fs/9p/vfs_file.c:245:
+		if (result < 0) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#535: FILE: fs/9p/vfs_file.c:246:
+			printk(KERN_ERR "9P2000: v9fs_t_read returned %d\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#538: FILE: fs/9p/vfs_file.c:249:
+			kfree( fcall);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#540: FILE: fs/9p/vfs_file.c:251:
+			return total;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#540: FILE: fs/9p/vfs_file.c:251:
+		} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#549: FILE: fs/9p/vfs_file.c:260:
+		kfree( fcall);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#568: FILE: fs/9p/vfs_file.c:279:
+v9fs_file_read(struct file *filp, char __user * data, size_t count,
                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#568: FILE: fs/9p/vfs_file.c:279:
+v9fs_file_read(struct file *filp, char __user * data, size_t count,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#569: FILE: fs/9p/vfs_file.c:280:
+	       loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: fs/9p/vfs_file.c:287:
+^Iif (buffer < 0) $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#579: FILE: fs/9p/vfs_file.c:290:
+	retval = v9fs_read(filp, buffer, count, offset);
 	                   ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#581: FILE: fs/9p/vfs_file.c:292:
+		if ((ret = copy_to_user(data, buffer, retval)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#602: FILE: fs/9p/vfs_file.c:313:
+v9fs_write(struct file *filp, char *buffer, size_t count, loff_t * offset)
                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: fs/9p/vfs_file.c:313:
+v9fs_write(struct file *filp, char *buffer, size_t count, loff_t * offset)

CHECK:BRACES: braces {} should be used on all arms of this statement
#627: FILE: fs/9p/vfs_file.c:338:
+		if (result < 0) {
[...]
+		} else
[...]

ERROR:SPACING: space prohibited after that open parenthesis '('
#630: FILE: fs/9p/vfs_file.c:341:
+			kfree( fcall);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#632: FILE: fs/9p/vfs_file.c:343:
+			return result;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#632: FILE: fs/9p/vfs_file.c:343:
+		} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#635: FILE: fs/9p/vfs_file.c:346:
+		kfree( fcall);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#662: FILE: fs/9p/vfs_file.c:373:
+v9fs_file_write(struct file *filp, const char __user * data,
                              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#662: FILE: fs/9p/vfs_file.c:373:
+v9fs_file_write(struct file *filp, const char __user * data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#663: FILE: fs/9p/vfs_file.c:374:
+		size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: fs/9p/vfs_file.c:380:
+^Iif (buffer == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#669: FILE: fs/9p/vfs_file.c:380:
+	if (buffer == NULL) 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#676: FILE: fs/9p/vfs_file.c:387:
+		ret = v9fs_write(filp, buffer, count, offset);
 		                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#693: FILE: fs/9p/vfs_file.c:404:
+static int v9fs_file_mmap(struct file *filp, struct vm_area_struct *vm)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#695: FILE: fs/9p/vfs_file.c:406:
+	dprintk(DEBUG_VFS, " filp: %p - NOT IMPLEMENTED\n", filp);
 	                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#695: FILE: fs/9p/vfs_file.c:406:
+	dprintk(DEBUG_VFS, " filp: %p - NOT IMPLEMENTED\n", filp);
 	                                                    ^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#697: FILE: fs/9p/vfs_file.c:408:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#700: FILE: fs/9p/vfs_file.c:411:
+struct file_operations v9fs_file_operations = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#714: FILE: fs/9p/vfs_dentry.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#715: FILE: fs/9p/vfs_dentry.c:2:
+ *  linux/fs/9p/vfs_dentry.c

WARNING:TYPO_SPELLING: 'contians' may be misspelled - perhaps 'contains'?
#717: FILE: fs/9p/vfs_dentry.c:4:
+ * This file contians vfs dentry ops for the 9P2000 protocol.
              ^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#733: FILE: fs/9p/vfs_dentry.c:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#734: FILE: fs/9p/vfs_dentry.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#757: FILE: fs/9p/vfs_dentry.c:44:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#761: FILE: fs/9p/vfs_dentry.c:48:
+ * @nd: path data
     ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: fs/9p/vfs_dentry.c:55:
+ * would remain valid for Plan 9 semantics.  Older versions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: fs/9p/vfs_dentry.c:58:
+ * is no difference.  The only improvement would be from a $

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#777: FILE: fs/9p/vfs_dentry.c:64:
+static int v9fs_dentry_validate(struct dentry *dentry, struct nameidata *nd)
                                                                          ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dc"
#787: FILE: fs/9p/vfs_dentry.c:74:
+	while (dc != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#804: FILE: fs/9p/vfs_dentry.c:91:
+ * v9fs_dentry_delete - called when dentry refcount reaches 0
+* @dentry:  dentry that is being deleted

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#805: FILE: fs/9p/vfs_dentry.c:92:
+* @dentry:  dentry that is being deleted
+ *

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#816: FILE: fs/9p/vfs_dentry.c:103:
+ * v9fs_dentry_release - called when dentry is going to be freed
+* @dentry:  dentry that is being release

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#817: FILE: fs/9p/vfs_dentry.c:104:
+* @dentry:  dentry that is being release
+ *

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dentry->d_fsdata"
#824: FILE: fs/9p/vfs_dentry.c:111:
+	if (dentry->d_fsdata != NULL) {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#849: FILE: fs/9p/vfs_dentry.c:136:
+struct dentry_operations v9fs_dentry_operations = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178969.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 47 warnings, 15 checks, 801 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000178969.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
