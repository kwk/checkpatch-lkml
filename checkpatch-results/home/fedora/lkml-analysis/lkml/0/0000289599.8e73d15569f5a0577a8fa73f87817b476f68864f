WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
--- 2.6.5.bitmap.orig/arch/ia64/kernel/acpi.c	2004-04-05 02:41:32.000000000 -0700

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#69: FILE: arch/ia64/kernel/acpi.c:481:
+	printk(KERN_INFO "Number of logical nodes in system = %d\n", num_online_nodes());

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: arch/ia64/mm/discontig.c:160:
+	for(i = 0; i < nnode; i++)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sysfs_nodes)...) over kmalloc(sizeof(struct node)...)
#302: FILE: arch/ia64/mm/numa.c:57:
+	sysfs_nodes = kmalloc(sizeof(struct node) * num_online_nodes(), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#302: FILE: arch/ia64/mm/numa.c:57:
+	sysfs_nodes = kmalloc(sizeof(struct node) * num_online_nodes(), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: arch/ia64/sn/fakeprom/fpmem.c:29:
+ * ^I^Inum_nodes^Inumcpus$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/ia64/sn/fakeprom/fpmem.c:62:
+ * For SN, this may not take an arg and gets the num_nodes from $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#348: FILE: arch/ia64/sn/fakeprom/fpmem.c:147:
+	int		num_nodes = GetNumNodes() ;

CHECK:CAMELCASE: Avoid CamelCase: <GetNumNodes>
#348: FILE: arch/ia64/sn/fakeprom/fpmem.c:147:
+	int		num_nodes = GetNumNodes() ;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#357: FILE: arch/ia64/sn/fakeprom/fpmem.c:156:
+	for (cnode=0; cnode<num_nodes; cnode++) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#357: FILE: arch/ia64/sn/fakeprom/fpmem.c:156:
+	for (cnode=0; cnode<num_nodes; cnode++) {
 	                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: arch/ia64/sn/io/sn2/module.c:198:
+    for_each_online_node(node) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/ia64/sn/io/sn2/module.c:213:
+    for (node = num_online_nodes(); node < numionodes; node++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2642:
+                if (numionodes == num_online_nodes())$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2642:
+                if (numionodes == num_online_nodes())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2655:
+                if (numionodes == num_online_nodes())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: arch/ia64/sn/io/sn2/pcibr/pcibr_dvr.c:2655:
+                if (numionodes == num_online_nodes())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: arch/ia64/sn/io/sn2/shub.c:170:
+        if (cnode < 0 || cnode >= num_online_nodes())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/ia64/sn/io/sn2/shub.c:170:
+        if (cnode < 0 || cnode >= num_online_nodes())$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#575: FILE: arch/ia64/sn/kernel/setup.c:486:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#575: FILE: arch/ia64/sn/kernel/setup.c:486:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);
 		                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#575: FILE: arch/ia64/sn/kernel/setup.c:486:
+		buddy_nasid = cnodeid_to_nasid(numa_node_id() == num_online_nodes()-1 ? 0 : numa_node_id()+ 1);
 		                                                                                          ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#591: FILE: arch/ia64/sn/kernel/sn2/prominfo_proc.c:325:
+	proc_entries = kmalloc(num_online_nodes() * sizeof(struct proc_dir_entry *),
 			       GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])
                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'from' may be better as '(from)' to avoid precedence issues
#651: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'to' may be better as '(to)' to avoid precedence issues
#651: FILE: include/asm-ia64/numa.h:62:
+#define node_distance(from,to) (numa_slit[from * num_online_nodes() + to])

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 12 warnings, 6 checks, 508 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
