WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#85: FILE: ide/ide-disk.c:1260:
+	args.tfRegister[IDE_FEATURE_OFFSET]	= SMART_STATUS;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: ide/ide-disk.c:1266:
+        if (ide_raw_taskfile(drive, &args, NULL))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: ide/ide-disk.c:1266:
+        if (ide_raw_taskfile(drive, &args, NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#93: FILE: ide/ide-disk.c:1266:
+        if (ide_raw_taskfile(drive, &args, NULL))
+          return -1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: ide/ide-disk.c:1267:
+          return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: ide/ide-disk.c:1267:
+          return -1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: ide/ide-disk.c:1268:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: ide/ide-disk.c:1268:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: ide/ide-disk.c:1268:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: ide/ide-disk.c:1269:
+        /* registers unchanged: GOOD SMART status */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: ide/ide-disk.c:1270:
+        if (SMART_LCYL_PASS == args.tfRegister[IDE_LCYL_OFFSET] &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: ide/ide-disk.c:1270:
+        if (SMART_LCYL_PASS == args.tfRegister[IDE_LCYL_OFFSET] &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#97: FILE: ide/ide-disk.c:1270:
+        if (SMART_LCYL_PASS == args.tfRegister[IDE_LCYL_OFFSET] &&
[...]
+          return 0;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#97: FILE: ide/ide-disk.c:1270:
+        if (SMART_LCYL_PASS == args.tfRegister[IDE_LCYL_OFFSET] &&

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: ide/ide-disk.c:1271:
+            SMART_HCYL_PASS == args.tfRegister[IDE_HCYL_OFFSET])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: ide/ide-disk.c:1271:
+            SMART_HCYL_PASS == args.tfRegister[IDE_HCYL_OFFSET])$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#98: FILE: ide/ide-disk.c:1271:
+            SMART_HCYL_PASS == args.tfRegister[IDE_HCYL_OFFSET])

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: ide/ide-disk.c:1272:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: ide/ide-disk.c:1272:
+          return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: ide/ide-disk.c:1273:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: ide/ide-disk.c:1273:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: ide/ide-disk.c:1273:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: ide/ide-disk.c:1274:
+        /* low/high nibbles swapped: FAILING SMART status */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: ide/ide-disk.c:1275:
+        if (0xF4 == args.tfRegister[IDE_LCYL_OFFSET] &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: ide/ide-disk.c:1275:
+        if (0xF4 == args.tfRegister[IDE_LCYL_OFFSET] &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#102: FILE: ide/ide-disk.c:1275:
+        if (0xF4 == args.tfRegister[IDE_LCYL_OFFSET] &&
[...]
+          return 1;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#102: FILE: ide/ide-disk.c:1275:
+        if (0xF4 == args.tfRegister[IDE_LCYL_OFFSET] &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: ide/ide-disk.c:1276:
+            0x2C == args.tfRegister[IDE_HCYL_OFFSET])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: ide/ide-disk.c:1276:
+            0x2C == args.tfRegister[IDE_HCYL_OFFSET])$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#103: FILE: ide/ide-disk.c:1276:
+            0x2C == args.tfRegister[IDE_HCYL_OFFSET])

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: ide/ide-disk.c:1277:
+          return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: ide/ide-disk.c:1277:
+          return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: ide/ide-disk.c:1279:
+        /* anything else: SMART status command not supported */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: ide/ide-disk.c:1280:
+        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: ide/ide-disk.c:1280:
+        return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: ide/ide-disk.c:1289:
+        /* allowed datatype values:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: ide/ide-disk.c:1290:
+         * 0 -- SMART READ DATA$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: ide/ide-disk.c:1291:
+         * 1 -- SMART READ THRESHOLDS$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: ide/ide-disk.c:1292:
+         * 2 -- SMART READ SUMMARY ATA ERROR LOG$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: ide/ide-disk.c:1293:
+         * 3 -- SMART READ SUMMARY SELF-TEST LOG$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: ide/ide-disk.c:1294:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: ide/ide-disk.c:1295:
+        switch (datatype) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: ide/ide-disk.c:1295:
+        switch (datatype) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#125: FILE: ide/ide-disk.c:1295:
+        switch (datatype) {
+          case 0:
[...]
+          case 1:
[...]
+          case 2:
[...]
+          case 3:
[...]
+          default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: ide/ide-disk.c:1296:
+          case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: ide/ide-disk.c:1296:
+          case 0:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: ide/ide-disk.c:1297:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_VALUES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: ide/ide-disk.c:1297:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_VALUES;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: ide/ide-disk.c:1298:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: ide/ide-disk.c:1298:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: ide/ide-disk.c:1299:
+          case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: ide/ide-disk.c:1299:
+          case 1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: ide/ide-disk.c:1300:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_THRESHOLDS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: ide/ide-disk.c:1300:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_THRESHOLDS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: ide/ide-disk.c:1301:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: ide/ide-disk.c:1301:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: ide/ide-disk.c:1302:
+          case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: ide/ide-disk.c:1302:
+          case 2:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: ide/ide-disk.c:1303:
+                args.tfRegister[IDE_SECTOR_OFFSET]      = 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: ide/ide-disk.c:1303:
+                args.tfRegister[IDE_SECTOR_OFFSET]      = 0x01;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: ide/ide-disk.c:1304:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_LOG_SECTOR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: ide/ide-disk.c:1304:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_LOG_SECTOR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: ide/ide-disk.c:1305:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: ide/ide-disk.c:1305:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: ide/ide-disk.c:1306:
+          case 3:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: ide/ide-disk.c:1306:
+          case 3:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: ide/ide-disk.c:1307:
+                args.tfRegister[IDE_SECTOR_OFFSET]      = 0x06;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: ide/ide-disk.c:1307:
+                args.tfRegister[IDE_SECTOR_OFFSET]      = 0x06;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: ide/ide-disk.c:1308:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_LOG_SECTOR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: ide/ide-disk.c:1308:
+                args.tfRegister[IDE_FEATURE_OFFSET]     = SMART_READ_LOG_SECTOR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: ide/ide-disk.c:1309:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: ide/ide-disk.c:1309:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: ide/ide-disk.c:1310:
+          default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: ide/ide-disk.c:1311:
+                return -ENOSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: ide/ide-disk.c:1311:
+                return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#141: FILE: ide/ide-disk.c:1311:
+                return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: ide/ide-disk.c:1312:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: ide/ide-disk.c:1312:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: ide/ide-disk.c:1314:
+        args.tfRegister[IDE_NSECTOR_OFFSET]     = 0x01;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: ide/ide-disk.c:1314:
+        args.tfRegister[IDE_NSECTOR_OFFSET]     = 0x01;$

CHECK:SPACING: No space is necessary after a cast
#159: FILE: ide/ide-disk.c:1344:
+		unsigned short *val = (unsigned short *) page;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: ide/ide-disk.c:1346:
+		char *out = ((char *)val) + (SECTOR_WORDS * 4);
+		page = out;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: ide/ide-disk.c:1353:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: ide/ide-disk.c:1353:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: ide/ide-disk.c:1353:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: ide/ide-disk.c:1353:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: ide/ide-disk.c:1353:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#209: FILE: ide/ide-disk.c:1401:
+		unsigned short *val = (unsigned short *) page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: ide/ide-disk.c:1403:
+		char *out = ((char *)val) + (SECTOR_WORDS * 4);
+		page = out;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: ide/ide-disk.c:1410:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: ide/ide-disk.c:1410:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: ide/ide-disk.c:1410:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: ide/ide-disk.c:1410:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: ide/ide-disk.c:1410:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: ide/ide-disk.c:1418:
+        int             smartstat = smart_status(drive);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: ide/ide-disk.c:1418:
+        int             smartstat = smart_status(drive);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: ide/ide-disk.c:1420:
+        if (smartstat==0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: ide/ide-disk.c:1420:
+        if (smartstat==0)$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#228: FILE: ide/ide-disk.c:1420:
+        if (smartstat==0)
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: ide/ide-disk.c:1421:
+                len = sprintf(page, "GOOD\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: ide/ide-disk.c:1421:
+                len = sprintf(page, "GOOD\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: ide/ide-disk.c:1422:
+        else if (smartstat==1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: ide/ide-disk.c:1422:
+        else if (smartstat==1)$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#230: FILE: ide/ide-disk.c:1422:
+        else if (smartstat==1)
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: ide/ide-disk.c:1423:
+                len = sprintf(page, "FAILING\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: ide/ide-disk.c:1423:
+                len = sprintf(page, "FAILING\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: ide/ide-disk.c:1424:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: ide/ide-disk.c:1424:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: ide/ide-disk.c:1425:
+                len = sprintf(page, "UNKNOWN\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: ide/ide-disk.c:1425:
+                len = sprintf(page, "UNKNOWN\n");$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: ide/ide-disk.c:1427:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: ide/ide-disk.c:1427:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: ide/ide-disk.c:1427:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: ide/ide-disk.c:1427:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: ide/ide-disk.c:1427:
+	PROC_IDE_READ_RETURN(page,start,off,count,eof,len);
 	                                             ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#243: FILE: ide/ide-disk.c:1435:
+	{ "smart_errorlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_errorlog,	NULL },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#243: FILE: ide/ide-disk.c:1435:
+	{ "smart_errorlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_errorlog,	NULL },
 	                   	       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#243: FILE: ide/ide-disk.c:1435:
+	{ "smart_errorlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_errorlog,	NULL },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#244: FILE: ide/ide-disk.c:1436:
+	{ "smart_selftestlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_selftestlog,	NULL },

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: ide/ide-disk.c:1436:
+	{ "smart_selftestlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_selftestlog,	NULL },
 	                      	       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#244: FILE: ide/ide-disk.c:1436:
+	{ "smart_selftestlog",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_selftestlog,	NULL },

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#245: FILE: ide/ide-disk.c:1437:
+	{ "smart_status",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_status,         NULL },

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#245: FILE: ide/ide-disk.c:1437:
+	{ "smart_status",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_status,         NULL },
 	                 	       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#245: FILE: ide/ide-disk.c:1437:
+	{ "smart_status",	S_IFREG|S_IRUSR,	proc_idedisk_read_smart_status,         NULL },

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 53 warnings, 6 checks, 185 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
