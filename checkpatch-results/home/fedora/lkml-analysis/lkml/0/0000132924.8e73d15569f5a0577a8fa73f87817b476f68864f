WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/input/misc/wistron_btns.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: drivers/input/misc/wistron_btns.c:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/input/misc/wistron_btns.c:16:
+ * 59 Temple Place Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#109: FILE: drivers/input/misc/wistron_btns.c:18:
+#include <asm/io.h>

WARNING:MISPLACED_INIT: __initdata should be placed after signature[]
#179: FILE: drivers/input/misc/wistron_btns.c:88:
+	static const unsigned char __initdata signature[] =

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#179: FILE: drivers/input/misc/wistron_btns.c:88:
+	static const unsigned char __initdata signature[] =

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#180: FILE: drivers/input/misc/wistron_btns.c:89:
+	static const unsigned char __initdata signature[] =
+		{ 0x42, 0x21, 0x55, 0x30 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: drivers/input/misc/wistron_btns.c:109:
+		printk(KERN_ERR "wistron_btns: BIOS entry point not found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#206: FILE: drivers/input/misc/wistron_btns.c:115:
+	printk(KERN_DEBUG

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bios_code_map_base"
#216: FILE: drivers/input/misc/wistron_btns.c:125:
+		if (bios_code_map_base == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: drivers/input/misc/wistron_btns.c:126:
+			printk(KERN_ERR

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bios_data_map_base"
#226: FILE: drivers/input/misc/wistron_btns.c:135:
+	if (bios_data_map_base == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: drivers/input/misc/wistron_btns.c:136:
+		printk(KERN_ERR "wistron_btns: Can't map BIOS data\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/input/misc/wistron_btns.c:159:
+	memset(&regs, 0, sizeof (regs));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: drivers/input/misc/wistron_btns.c:172:
+	memset(&regs, 0, sizeof (regs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/input/misc/wistron_btns.c:182:
+	memset(&regs, 0, sizeof (regs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: drivers/input/misc/wistron_btns.c:192:
+	memset(&regs, 0, sizeof (regs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: drivers/input/misc/wistron_btns.c:204:
+	memset(&regs, 0, sizeof (regs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: drivers/input/misc/wistron_btns.c:216:
+	memset(&regs, 0, sizeof (regs));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: drivers/input/misc/wistron_btns.c:227:
+	unsigned keycode;	/* For KE_KEY */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "keymap_name"
#387: FILE: drivers/input/misc/wistron_btns.c:296:
+	if (keymap_name != NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: drivers/input/misc/wistron_btns.c:297:
+		if (strcmp (keymap_name, "1557/MS2141") == 0)

CHECK:BRACES: braces {} should be used on all arms of this statement
#388: FILE: drivers/input/misc/wistron_btns.c:297:
+		if (strcmp (keymap_name, "1557/MS2141") == 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#390: FILE: drivers/input/misc/wistron_btns.c:299:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#391: FILE: drivers/input/misc/wistron_btns.c:300:
+			printk(KERN_ERR "wistron_btns: Keymap unknown\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!keymap"
#396: FILE: drivers/input/misc/wistron_btns.c:305:
+	if (keymap == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/input/misc/wistron_btns.c:307:
+			printk(KERN_ERR "wistron_btns: System unknown\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '|=' should be on the previous line
#420: FILE: drivers/input/misc/wistron_btns.c:329:
+			input_dev.keybit[LONG(key->keycode)]
+				|= BIT(key->keycode);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#427: FILE: drivers/input/misc/wistron_btns.c:336:
+static void report_key(unsigned keycode)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#463: FILE: drivers/input/misc/wistron_btns.c:372:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#468: FILE: drivers/input/misc/wistron_btns.c:377:
+	printk(KERN_NOTICE "wistron_btns: Unknown key code %02X\n", code);

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#545: FILE: MAINTAINERS:2896:
+P:	Miloslav Trmac
+M:	mitr@volny.cz

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 21 warnings, 7 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
