CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
Jörn
 ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
--- linux-2.5.70-bk9/lib/zlib_inflate/inflate.c~zlib_cleanup_ZEXPORT	2003-06-05 22:12:38.000000000 +0200

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#52: FILE: lib/zlib_inflate/inflate.c:18:
+int zlib_inflateReset(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateReset>
#52: FILE: lib/zlib_inflate/inflate.c:18:
+int zlib_inflateReset(

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#61: FILE: lib/zlib_inflate/inflate.c:32:
+int zlib_inflateEnd(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateEnd>
#61: FILE: lib/zlib_inflate/inflate.c:32:
+int zlib_inflateEnd(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#70: FILE: lib/zlib_inflate/inflate.c:46:
+int zlib_inflateInit2_(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit2_>
#70: FILE: lib/zlib_inflate/inflate.c:46:
+int zlib_inflateInit2_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#79: FILE: lib/zlib_inflate/inflate.c:109:
+int zlib_inflateInit_(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit_>
#79: FILE: lib/zlib_inflate/inflate.c:109:
+int zlib_inflateInit_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#88: FILE: lib/zlib_inflate/inflate.c:123:
+int zlib_inflate(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#97: FILE: lib/zlib_inflate/inflate.c:256:
+int zlib_inflateSync(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSync>
#97: FILE: lib/zlib_inflate/inflate.c:256:
+int zlib_inflateSync(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: lib/zlib_inflate/inflate.c:315:
+int zlib_inflateSyncPoint(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSyncPoint>
#106: FILE: lib/zlib_inflate/inflate.c:315:
+int zlib_inflateSyncPoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#115: FILE: lib/zlib_inflate/inflate.c:386:
+int zlib_inflateIncomp(

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateIncomp>
#115: FILE: lib/zlib_inflate/inflate.c:386:
+int zlib_inflateIncomp(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: include/linux/zlib.h:165:
+extern const char * zlib_zlibVersion OF((void));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <zlib_zlibVersion>
#142: FILE: include/linux/zlib.h:165:
+extern const char * zlib_zlibVersion OF((void));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/zlib.h:184:
+extern int zlib_deflate_workspacesize OF((void));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#151: FILE: include/linux/zlib.h:184:
+extern int zlib_deflate_workspacesize OF((void));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: include/linux/zlib.h:214:
+extern int zlib_deflate OF((z_streamp strm, int flush));

ERROR:POINTER_LOCATION: "fooEnd bar" should be "foo End bar"
#178: FILE: include/linux/zlib.h:292:
+extern int zlib_deflateEnd OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateEnd>
#178: FILE: include/linux/zlib.h:292:
+extern int zlib_deflateEnd OF((z_streamp strm));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: include/linux/zlib.h:306:
+extern int zlib_inflate_workspacesize OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#187: FILE: include/linux/zlib.h:306:
+extern int zlib_inflate_workspacesize OF((void));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/zlib.h:334:
+extern int zlib_inflate OF((z_streamp strm, int flush));

ERROR:POINTER_LOCATION: "fooEnd bar" should be "foo End bar"
#214: FILE: include/linux/zlib.h:403:
+extern int zlib_inflateEnd OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooSetDictionary bar" should be "foo SetDictionary bar"
#232: FILE: include/linux/zlib.h:464:
+extern int zlib_deflateSetDictionary OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateSetDictionary>
#232: FILE: include/linux/zlib.h:464:
+extern int zlib_deflateSetDictionary OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooCopy bar" should be "foo Copy bar"
#241: FILE: include/linux/zlib.h:500:
+extern int zlib_deflateCopy OF((z_streamp dest,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateCopy>
#241: FILE: include/linux/zlib.h:500:
+extern int zlib_deflateCopy OF((z_streamp dest,

ERROR:POINTER_LOCATION: "fooReset bar" should be "foo Reset bar"
#250: FILE: include/linux/zlib.h:518:
+extern int zlib_deflateReset OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateReset>
#250: FILE: include/linux/zlib.h:518:
+extern int zlib_deflateReset OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooParams bar" should be "foo Params bar"
#259: FILE: include/linux/zlib.h:529:
+extern int zlib_deflateParams OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateParams>
#259: FILE: include/linux/zlib.h:529:
+extern int zlib_deflateParams OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooSetDictionary bar" should be "foo SetDictionary bar"
#277: FILE: include/linux/zlib.h:573:
+extern int zlib_inflateSetDictionary OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSetDictionary>
#277: FILE: include/linux/zlib.h:573:
+extern int zlib_inflateSetDictionary OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooSync bar" should be "foo Sync bar"
#286: FILE: include/linux/zlib.h:592:
+extern int zlib_inflateSync OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooReset bar" should be "foo Reset bar"
#295: FILE: include/linux/zlib.h:607:
+extern int zlib_inflateReset OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooIncomp bar" should be "foo Incomp bar"
#304: FILE: include/linux/zlib.h:617:
+extern int zlib_inflateIncomp OF((z_stream *strm));

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#304: FILE: include/linux/zlib.h:617:
+extern int zlib_inflateIncomp OF((z_stream *strm));
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "fooInit_ bar" should be "foo Init_ bar"
#313: FILE: include/linux/zlib.h:631:
+extern int zlib_deflateInit_ OF((z_streamp strm, int level,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit_>
#313: FILE: include/linux/zlib.h:631:
+extern int zlib_deflateInit_ OF((z_streamp strm, int level,

ERROR:POINTER_LOCATION: "fooInit_ bar" should be "foo Init_ bar"
#316: FILE: include/linux/zlib.h:633:
+extern int zlib_inflateInit_ OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooInit2_ bar" should be "foo Init2_ bar"
#319: FILE: include/linux/zlib.h:635:
+extern int zlib_deflateInit2_ OF((z_streamp strm, int  level, int  method,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit2_>
#319: FILE: include/linux/zlib.h:635:
+extern int zlib_deflateInit2_ OF((z_streamp strm, int  level, int  method,

ERROR:POINTER_LOCATION: "fooInit2_ bar" should be "foo Init2_ bar"
#324: FILE: include/linux/zlib.h:639:
+extern int zlib_inflateInit2_ OF((z_streamp strm, int  windowBits,

CHECK:CAMELCASE: Avoid CamelCase: <windowBits>
#324: FILE: include/linux/zlib.h:639:
+extern int zlib_inflateInit2_ OF((z_streamp strm, int  windowBits,

ERROR:POINTER_LOCATION: "foo  * bar" should be "foo  *bar"
#335: FILE: include/linux/zlib.h:656:
+extern const char  * zlib_zError           OF((int err));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_zError>
#335: FILE: include/linux/zlib.h:656:
+extern const char  * zlib_zError           OF((int err));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: include/linux/zlib.h:658:
+extern const uLong * zlib_get_crc_table    OF((void));

CHECK:CAMELCASE: Avoid CamelCase: <uLong>
#337: FILE: include/linux/zlib.h:658:
+extern const uLong * zlib_get_crc_table    OF((void));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#348: FILE: include/linux/zutil.h:65:
+typedef uLong (*check_func) OF((uLong check, const Byte *buf,

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#348: FILE: include/linux/zutil.h:65:
+typedef uLong (*check_func) OF((uLong check, const Byte *buf,
                                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Byte>
#348: FILE: include/linux/zutil.h:65:
+typedef uLong (*check_func) OF((uLong check, const Byte *buf,

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int zlib_deflate_workspacesize() should probably be int zlib_deflate_workspacesize(void)
#359: FILE: lib/zlib_deflate/deflate.c:1258:
+extern int zlib_deflate_workspacesize ()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 4 warnings, 35 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
