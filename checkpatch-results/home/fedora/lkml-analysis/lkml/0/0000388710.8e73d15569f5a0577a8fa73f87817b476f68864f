WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
> I was working on the watchdog-drivers in general; creating a generic_watchdog and a generic_temperature module so that the other modules can use this. I incorporated your latest patch (about sysfs) in my code. Could you have a look at it?

WARNING:TYPO_SPELLING: 'deamon' may be misspelled - perhaps 'daemon'?
#63: 
deamon.
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'deamon' may be misspelled - perhaps 'daemon'?
#138: 
you do not happen to have a watchdog deamon running then the watchdog will
                                     ^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#149: FILE: drivers/char/watchdog/generic_temperature.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#190: FILE: drivers/char/watchdog/generic_temperature.c:42:
+#include <asm/uaccess.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/char/watchdog/generic_temperature.c:47:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/watchdog/generic_temperature.c:47:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#195: FILE: drivers/char/watchdog/generic_temperature.c:47:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#195: FILE: drivers/char/watchdog/generic_temperature.c:47:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)
                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#195: FILE: drivers/char/watchdog/generic_temperature.c:47:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#196: FILE: drivers/char/watchdog/generic_temperature.c:48:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#196: FILE: drivers/char/watchdog/generic_temperature.c:48:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: drivers/char/watchdog/generic_temperature.c:49:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/char/watchdog/generic_temperature.c:49:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#198: FILE: drivers/char/watchdog/generic_temperature.c:50:
+			 __FUNCTION__, ## arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/char/watchdog/generic_temperature.c:57:
+                printk(KERN_CRIT "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/char/watchdog/generic_temperature.c:57:
+                printk(KERN_CRIT "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#205: FILE: drivers/char/watchdog/generic_temperature.c:57:
+                printk(KERN_CRIT "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#206: FILE: drivers/char/watchdog/generic_temperature.c:58:
+		       __FUNCTION__ , ## arg)
 		                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#206: FILE: drivers/char/watchdog/generic_temperature.c:58:
+		       __FUNCTION__ , ## arg)

CHECK:SPACING: No space is necessary after a cast
#237: FILE: drivers/char/watchdog/generic_temperature.c:89:
+	cp = (char) temperaturedev->ops->get_temperature() & 0xFF;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: drivers/char/watchdog/generic_temperature.c:90:
+	if (copy_to_user (data, &cp, 1))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#283: FILE: drivers/char/watchdog/generic_temperature.c:135:
+	switch (cmd) {
+		case TEMPIOC_GETSUPPORT:
[...]
+		case TEMPIOC_GETTEMP:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#295: FILE: drivers/char/watchdog/generic_temperature.c:147:
+			temp = temperaturedev->ops->get_temperature ? temperaturedev->ops->get_temperature() : 0;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: drivers/char/watchdog/generic_temperature.c:148:
+			return put_user(temp,(int *)arg);
 			                    ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#338: FILE: drivers/char/watchdog/generic_temperature.c:190:
+static struct file_operations temperature_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/char/watchdog/generic_temperature.c:223:
+DRIVER_ATTR(temperature,S_IRUGO,temperature_show,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/char/watchdog/generic_temperature.c:223:
+DRIVER_ATTR(temperature,S_IRUGO,temperature_show,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/char/watchdog/generic_temperature.c:223:
+DRIVER_ATTR(temperature,S_IRUGO,temperature_show,NULL);
                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#371: FILE: drivers/char/watchdog/generic_temperature.c:223:
+DRIVER_ATTR(temperature,S_IRUGO,temperature_show,NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: drivers/char/watchdog/generic_temperature.c:239:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: drivers/char/watchdog/generic_temperature.c:239:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: drivers/char/watchdog/generic_temperature.c:239:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#387: FILE: drivers/char/watchdog/generic_temperature.c:239:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/char/watchdog/generic_temperature.c:247:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: drivers/char/watchdog/generic_temperature.c:255:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: drivers/char/watchdog/generic_temperature.c:255:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: drivers/char/watchdog/generic_temperature.c:255:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#403: FILE: drivers/char/watchdog/generic_temperature.c:255:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#407: FILE: drivers/char/watchdog/generic_temperature.c:259:
+	driver_create_file(&(td->driver), &driver_attr_temperature);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#408: FILE: drivers/char/watchdog/generic_temperature.c:260:
+	driver_create_file(&(td->driver), &driver_attr_options);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#409: FILE: drivers/char/watchdog/generic_temperature.c:261:
+	driver_create_file(&(td->driver), &driver_attr_firmware_version);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#416: FILE: drivers/char/watchdog/generic_temperature.c:268:
+	driver_remove_file(&(td->driver), &driver_attr_temperature);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#417: FILE: drivers/char/watchdog/generic_temperature.c:269:
+	driver_remove_file(&(td->driver), &driver_attr_options);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#418: FILE: drivers/char/watchdog/generic_temperature.c:270:
+	driver_remove_file(&(td->driver), &driver_attr_firmware_version);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!td->info"
#435: FILE: drivers/char/watchdog/generic_temperature.c:287:
+	if (td->info == NULL || td->ops == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!td->ops"
#435: FILE: drivers/char/watchdog/generic_temperature.c:287:
+	if (td->info == NULL || td->ops == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdo->get_temperature"
#438: FILE: drivers/char/watchdog/generic_temperature.c:290:
+	if (tdo->get_temperature == NULL)

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#444: FILE: drivers/char/watchdog/generic_temperature.c:296:
+		printk (KERN_ERR "%s: another temperature device is allready registered\n",
 		                                                    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#444: FILE: drivers/char/watchdog/generic_temperature.c:296:
+		printk (KERN_ERR "%s: another temperature device is allready registered\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#444: FILE: drivers/char/watchdog/generic_temperature.c:296:
+		printk (KERN_ERR "%s: another temperature device is allready registered\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#450: FILE: drivers/char/watchdog/generic_temperature.c:302:
+	if (!get_driver(&(td->driver))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#456: FILE: drivers/char/watchdog/generic_temperature.c:308:
+	ret = driver_register(&(td->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#470: FILE: drivers/char/watchdog/generic_temperature.c:322:
+		printk (KERN_ERR "%s: cannot register miscdev on minor=%d (err=%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: drivers/char/watchdog/generic_temperature.c:322:
+		printk (KERN_ERR "%s: cannot register miscdev on minor=%d (err=%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#477: FILE: drivers/char/watchdog/generic_temperature.c:329:
+	printk (KERN_INFO "%s: generic temperature driver v0.02.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: drivers/char/watchdog/generic_temperature.c:329:
+	printk (KERN_INFO "%s: generic temperature driver v0.02.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#485: FILE: drivers/char/watchdog/generic_temperature.c:337:
+	driver_unregister(&(td->driver));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#487: FILE: drivers/char/watchdog/generic_temperature.c:339:
+	put_driver(&(td->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#504: FILE: drivers/char/watchdog/generic_temperature.c:356:
+		printk (KERN_ERR "generic temperature: there is no temperature device registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: drivers/char/watchdog/generic_temperature.c:356:
+		printk (KERN_ERR "generic temperature: there is no temperature device registered\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#510: FILE: drivers/char/watchdog/generic_temperature.c:362:
+		printk (KERN_ERR "generic temperature: cannot unregister non-existing temperature-driver\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: drivers/char/watchdog/generic_temperature.c:362:
+		printk (KERN_ERR "generic temperature: cannot unregister non-existing temperature-driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: drivers/char/watchdog/generic_temperature.c:368:
+		printk (KERN_ERR "%s: another temperature device (%s) is running\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: drivers/char/watchdog/generic_temperature.c:368:
+		printk (KERN_ERR "%s: another temperature device (%s) is running\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#525: FILE: drivers/char/watchdog/generic_temperature.c:377:
+	driver_unregister(&(td->driver));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around td->driver
#526: FILE: drivers/char/watchdog/generic_temperature.c:378:
+	put_driver(&(td->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#528: FILE: drivers/char/watchdog/generic_temperature.c:380:
+	printk (KERN_INFO "%s: generic temperature unregistered.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#528: FILE: drivers/char/watchdog/generic_temperature.c:380:
+	printk (KERN_INFO "%s: generic temperature unregistered.\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#565: FILE: drivers/char/watchdog/generic_temperature.c:417:
+EXPORT_SYMBOL_GPL(temperature_driver_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#566: FILE: drivers/char/watchdog/generic_temperature.c:418:
+EXPORT_SYMBOL_GPL(temperature_driver_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#567: FILE: drivers/char/watchdog/generic_temperature.c:419:
+EXPORT_SYMBOL_GPL(temperature_devclass);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#577: FILE: drivers/char/watchdog/generic_watchdog.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#619: FILE: drivers/char/watchdog/generic_watchdog.c:43:
+#include <asm/uaccess.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: drivers/char/watchdog/generic_watchdog.c:48:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/char/watchdog/generic_watchdog.c:48:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#624: FILE: drivers/char/watchdog/generic_watchdog.c:48:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#624: FILE: drivers/char/watchdog/generic_watchdog.c:48:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)
                                                           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#624: FILE: drivers/char/watchdog/generic_watchdog.c:48:
+        printk(KERN_INFO "%s(" format ")\n", __FUNCTION__ , ## args)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#625: FILE: drivers/char/watchdog/generic_watchdog.c:49:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#625: FILE: drivers/char/watchdog/generic_watchdog.c:49:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#626: FILE: drivers/char/watchdog/generic_watchdog.c:50:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: drivers/char/watchdog/generic_watchdog.c:50:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#627: FILE: drivers/char/watchdog/generic_watchdog.c:51:
+			 __FUNCTION__, ## arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/char/watchdog/generic_watchdog.c:58:
+                printk(KERN_CRIT "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/char/watchdog/generic_watchdog.c:58:
+                printk(KERN_CRIT "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#634: FILE: drivers/char/watchdog/generic_watchdog.c:58:
+                printk(KERN_CRIT "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#635: FILE: drivers/char/watchdog/generic_watchdog.c:59:
+		       __FUNCTION__ , ## arg)
 		                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#635: FILE: drivers/char/watchdog/generic_watchdog.c:59:
+		       __FUNCTION__ , ## arg)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#656: FILE: drivers/char/watchdog/generic_watchdog.c:80:
+static int nowayout = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: drivers/char/watchdog/generic_watchdog.c:83:
+MODULE_PARM(nowayout,"i");
                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#676: FILE: drivers/char/watchdog/generic_watchdog.c:100:
+		if (ints[0] > 1) {
+			nowayout = ints[2];
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#684: FILE: drivers/char/watchdog/generic_watchdog.c:108:
+__setup("watchdog=", watchdog_setup);

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#695: FILE: drivers/char/watchdog/generic_watchdog.c:119:
+ *	A read to a watchdog device is only usefull if you would have
   	                                    ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#736: FILE: drivers/char/watchdog/generic_watchdog.c:160:
+			 * five months ago... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#739: FILE: drivers/char/watchdog/generic_watchdog.c:163:
+			/* scan to see wether or not we got the magic character */
 			               ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#742: FILE: drivers/char/watchdog/generic_watchdog.c:166:
+				char c;
+				if(get_user(c, data + i))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#742: FILE: drivers/char/watchdog/generic_watchdog.c:166:
+				if(get_user(c, data + i))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#775: FILE: drivers/char/watchdog/generic_watchdog.c:199:
+	switch (cmd) {
+		case WDIOC_GETSUPPORT:
[...]
+		case WDIOC_GETSTATUS:
[...]
+		case WDIOC_GETBOOTSTATUS:
[...]
+		case WDIOC_KEEPALIVE:
[...]
+		case WDIOC_SETOPTIONS:
[...]
+		case WDIOC_SETTIMEOUT:
[...]
+		case WDIOC_GETTIMEOUT:
[...]
+		case WDIOC_SETNOWAYOUT:
[...]
+		case WDIOC_GETNOWAYOUT:
[...]
+		case WDIOC_GETTIMERVALUE:
[...]
+		default:

ERROR:SPACING: space required after that ',' (ctx:VxV)
#788: FILE: drivers/char/watchdog/generic_watchdog.c:212:
+			return put_user(status,(int *)arg);
 			                      ^

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#798: FILE: drivers/char/watchdog/generic_watchdog.c:222:
+			bootstatus = watchdogdev->ops->get_bootstatus ? watchdogdev->ops->get_bootstatus() : 0;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#824: FILE: drivers/char/watchdog/generic_watchdog.c:248:
+			return (watchdogdev->ops->set_options(options));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#843: FILE: drivers/char/watchdog/generic_watchdog.c:267:
+			timeout=watchdogdev->ops->set_timeout(new_timeout);
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#863: FILE: drivers/char/watchdog/generic_watchdog.c:287:
+			nowayout=new_nowayout;
 			        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#881: FILE: drivers/char/watchdog/generic_watchdog.c:305:
+			return put_user(current_timervalue,(int *)arg);
 			                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#906: FILE: drivers/char/watchdog/generic_watchdog.c:330:
+	if (test_and_set_bit(0, &watchdog_is_open)) {
+		return -EBUSY;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: drivers/char/watchdog/generic_watchdog.c:369:
+		crit("%s: Unexpected close, not stopping watchdog!",
+		       watchdogdev->info->identity);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#972: FILE: drivers/char/watchdog/generic_watchdog.c:396:
+		if (watchdogdev && watchdogdev->ops) {
+			watchdogdev->ops->stop();
+		}

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#977: FILE: drivers/char/watchdog/generic_watchdog.c:401:
+	if (code==SYS_RESTART) {
 	        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#983: FILE: drivers/char/watchdog/generic_watchdog.c:407:
+			printk (KERN_INFO "%s: generic watchdog is forcing reboot\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#983: FILE: drivers/char/watchdog/generic_watchdog.c:407:
+			printk (KERN_INFO "%s: generic watchdog is forcing reboot\n",

WARNING:CONST_STRUCT: struct file_operations should normally be const
#996: FILE: drivers/char/watchdog/generic_watchdog.c:420:
+static struct file_operations watchdog_fops = {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1031: FILE: drivers/char/watchdog/generic_watchdog.c:455:
+	if (test_and_set_bit(0, &watchdog_is_open)) {
+		return -EBUSY;
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: drivers/char/watchdog/generic_watchdog.c:468:
+DRIVER_ATTR(start,S_IWUSR,NULL,start_store);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: drivers/char/watchdog/generic_watchdog.c:468:
+DRIVER_ATTR(start,S_IWUSR,NULL,start_store);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: drivers/char/watchdog/generic_watchdog.c:468:
+DRIVER_ATTR(start,S_IWUSR,NULL,start_store);
                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1044: FILE: drivers/char/watchdog/generic_watchdog.c:468:
+DRIVER_ATTR(start,S_IWUSR,NULL,start_store);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: drivers/char/watchdog/generic_watchdog.c:484:
+		crit("%s: Unexpected close, not stopping watchdog!",
+		       wdd->info->identity);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/char/watchdog/generic_watchdog.c:491:
+DRIVER_ATTR(stop,S_IWUSR,NULL,stop_store);
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/char/watchdog/generic_watchdog.c:491:
+DRIVER_ATTR(stop,S_IWUSR,NULL,stop_store);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/char/watchdog/generic_watchdog.c:491:
+DRIVER_ATTR(stop,S_IWUSR,NULL,stop_store);
                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1067: FILE: drivers/char/watchdog/generic_watchdog.c:491:
+DRIVER_ATTR(stop,S_IWUSR,NULL,stop_store);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1082: FILE: drivers/char/watchdog/generic_watchdog.c:506:
+DRIVER_ATTR(keepalive,S_IWUSR,NULL,keepalive_store);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1082: FILE: drivers/char/watchdog/generic_watchdog.c:506:
+DRIVER_ATTR(keepalive,S_IWUSR,NULL,keepalive_store);
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1082: FILE: drivers/char/watchdog/generic_watchdog.c:506:
+DRIVER_ATTR(keepalive,S_IWUSR,NULL,keepalive_store);
                                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1082: FILE: drivers/char/watchdog/generic_watchdog.c:506:
+DRIVER_ATTR(keepalive,S_IWUSR,NULL,keepalive_store);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1092: FILE: drivers/char/watchdog/generic_watchdog.c:516:
+}
+ssize_t timeout_store(struct device_driver *d, const char *buf, size_t count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1108: FILE: drivers/char/watchdog/generic_watchdog.c:532:
+	if (!sscanf(buf,"%i",&new_timeout))
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1108: FILE: drivers/char/watchdog/generic_watchdog.c:532:
+	if (!sscanf(buf,"%i",&new_timeout))
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1108: FILE: drivers/char/watchdog/generic_watchdog.c:532:
+	if (!sscanf(buf,"%i",&new_timeout))
 	                     ^

WARNING:NAKED_SSCANF: unchecked sscanf return value
#1108: FILE: drivers/char/watchdog/generic_watchdog.c:532:
+	if (!sscanf(buf,"%i",&new_timeout))
+		return -EINVAL;

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1108: FILE: drivers/char/watchdog/generic_watchdog.c:532:
+	if (!sscanf(buf,"%i",&new_timeout))
+		return -EINVAL;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1111: FILE: drivers/char/watchdog/generic_watchdog.c:535:
+	timeout=wdd->ops->set_timeout(new_timeout);
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: drivers/char/watchdog/generic_watchdog.c:542:
+DRIVER_ATTR(timeout,S_IRUGO|S_IWUSR,timeout_show,timeout_store);
                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1118: FILE: drivers/char/watchdog/generic_watchdog.c:542:
+DRIVER_ATTR(timeout,S_IRUGO|S_IWUSR,timeout_show,timeout_store);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: drivers/char/watchdog/generic_watchdog.c:542:
+DRIVER_ATTR(timeout,S_IRUGO|S_IWUSR,timeout_show,timeout_store);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: drivers/char/watchdog/generic_watchdog.c:542:
+DRIVER_ATTR(timeout,S_IRUGO|S_IWUSR,timeout_show,timeout_store);
                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1118: FILE: drivers/char/watchdog/generic_watchdog.c:542:
+DRIVER_ATTR(timeout,S_IRUGO|S_IWUSR,timeout_show,timeout_store);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1128: FILE: drivers/char/watchdog/generic_watchdog.c:552:
+}
+ssize_t nowayout_store(struct device_driver *d, const char *buf, size_t count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/char/watchdog/generic_watchdog.c:559:
+	if (!sscanf(buf,"%i",&new_nowayout))
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1135: FILE: drivers/char/watchdog/generic_watchdog.c:559:
+	if (!sscanf(buf,"%i",&new_nowayout))
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1135: FILE: drivers/char/watchdog/generic_watchdog.c:559:
+	if (!sscanf(buf,"%i",&new_nowayout))
 	                     ^

WARNING:NAKED_SSCANF: unchecked sscanf return value
#1135: FILE: drivers/char/watchdog/generic_watchdog.c:559:
+	if (!sscanf(buf,"%i",&new_nowayout))
+		return -EINVAL;

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1135: FILE: drivers/char/watchdog/generic_watchdog.c:559:
+	if (!sscanf(buf,"%i",&new_nowayout))
+		return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/watchdog/generic_watchdog.c:566:
+DRIVER_ATTR(nowayout,S_IRUGO|S_IWUSR,nowayout_show,nowayout_store);
                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1142: FILE: drivers/char/watchdog/generic_watchdog.c:566:
+DRIVER_ATTR(nowayout,S_IRUGO|S_IWUSR,nowayout_show,nowayout_store);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/watchdog/generic_watchdog.c:566:
+DRIVER_ATTR(nowayout,S_IRUGO|S_IWUSR,nowayout_show,nowayout_store);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1142: FILE: drivers/char/watchdog/generic_watchdog.c:566:
+DRIVER_ATTR(nowayout,S_IRUGO|S_IWUSR,nowayout_show,nowayout_store);
                                                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1142: FILE: drivers/char/watchdog/generic_watchdog.c:566:
+DRIVER_ATTR(nowayout,S_IRUGO|S_IWUSR,nowayout_show,nowayout_store);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: drivers/char/watchdog/generic_watchdog.c:581:
+DRIVER_ATTR(status,S_IRUGO,status_show,NULL);
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: drivers/char/watchdog/generic_watchdog.c:581:
+DRIVER_ATTR(status,S_IRUGO,status_show,NULL);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1157: FILE: drivers/char/watchdog/generic_watchdog.c:581:
+DRIVER_ATTR(status,S_IRUGO,status_show,NULL);
                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1157: FILE: drivers/char/watchdog/generic_watchdog.c:581:
+DRIVER_ATTR(status,S_IRUGO,status_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1172: FILE: drivers/char/watchdog/generic_watchdog.c:596:
+DRIVER_ATTR(bootstatus,S_IRUGO,bootstatus_show,NULL);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1172: FILE: drivers/char/watchdog/generic_watchdog.c:596:
+DRIVER_ATTR(bootstatus,S_IRUGO,bootstatus_show,NULL);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1172: FILE: drivers/char/watchdog/generic_watchdog.c:596:
+DRIVER_ATTR(bootstatus,S_IRUGO,bootstatus_show,NULL);
                                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1172: FILE: drivers/char/watchdog/generic_watchdog.c:596:
+DRIVER_ATTR(bootstatus,S_IRUGO,bootstatus_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1187: FILE: drivers/char/watchdog/generic_watchdog.c:611:
+DRIVER_ATTR(timer,S_IRUGO,timer_show,NULL);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1187: FILE: drivers/char/watchdog/generic_watchdog.c:611:
+DRIVER_ATTR(timer,S_IRUGO,timer_show,NULL);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1187: FILE: drivers/char/watchdog/generic_watchdog.c:611:
+DRIVER_ATTR(timer,S_IRUGO,timer_show,NULL);
                                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1187: FILE: drivers/char/watchdog/generic_watchdog.c:611:
+DRIVER_ATTR(timer,S_IRUGO,timer_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1203: FILE: drivers/char/watchdog/generic_watchdog.c:627:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1203: FILE: drivers/char/watchdog/generic_watchdog.c:627:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1203: FILE: drivers/char/watchdog/generic_watchdog.c:627:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);
                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1203: FILE: drivers/char/watchdog/generic_watchdog.c:627:
+DRIVER_ATTR(options,S_IRUGO,options_show,NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/char/watchdog/generic_watchdog.c:635:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1219: FILE: drivers/char/watchdog/generic_watchdog.c:643:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1219: FILE: drivers/char/watchdog/generic_watchdog.c:643:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1219: FILE: drivers/char/watchdog/generic_watchdog.c:643:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1219: FILE: drivers/char/watchdog/generic_watchdog.c:643:
+DRIVER_ATTR(firmware_version,S_IRUGO,firmware_version_show,NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1223: FILE: drivers/char/watchdog/generic_watchdog.c:647:
+	driver_create_file(&(wdd->driver), &driver_attr_start);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1224: FILE: drivers/char/watchdog/generic_watchdog.c:648:
+	driver_create_file(&(wdd->driver), &driver_attr_stop);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1225: FILE: drivers/char/watchdog/generic_watchdog.c:649:
+	driver_create_file(&(wdd->driver), &driver_attr_keepalive);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1226: FILE: drivers/char/watchdog/generic_watchdog.c:650:
+	driver_create_file(&(wdd->driver), &driver_attr_timeout);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1227: FILE: drivers/char/watchdog/generic_watchdog.c:651:
+	driver_create_file(&(wdd->driver), &driver_attr_nowayout);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1228: FILE: drivers/char/watchdog/generic_watchdog.c:652:
+	driver_create_file(&(wdd->driver), &driver_attr_status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1229: FILE: drivers/char/watchdog/generic_watchdog.c:653:
+	driver_create_file(&(wdd->driver), &driver_attr_bootstatus);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1230: FILE: drivers/char/watchdog/generic_watchdog.c:654:
+	driver_create_file(&(wdd->driver), &driver_attr_timer);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1231: FILE: drivers/char/watchdog/generic_watchdog.c:655:
+	driver_create_file(&(wdd->driver), &driver_attr_options);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1232: FILE: drivers/char/watchdog/generic_watchdog.c:656:
+	driver_create_file(&(wdd->driver), &driver_attr_firmware_version);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1239: FILE: drivers/char/watchdog/generic_watchdog.c:663:
+	driver_remove_file(&(wdd->driver), &driver_attr_start);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1240: FILE: drivers/char/watchdog/generic_watchdog.c:664:
+	driver_remove_file(&(wdd->driver), &driver_attr_stop);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1241: FILE: drivers/char/watchdog/generic_watchdog.c:665:
+	driver_remove_file(&(wdd->driver), &driver_attr_keepalive);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1242: FILE: drivers/char/watchdog/generic_watchdog.c:666:
+	driver_remove_file(&(wdd->driver), &driver_attr_timeout);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1243: FILE: drivers/char/watchdog/generic_watchdog.c:667:
+	driver_remove_file(&(wdd->driver), &driver_attr_nowayout);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1244: FILE: drivers/char/watchdog/generic_watchdog.c:668:
+	driver_remove_file(&(wdd->driver), &driver_attr_status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1245: FILE: drivers/char/watchdog/generic_watchdog.c:669:
+	driver_remove_file(&(wdd->driver), &driver_attr_bootstatus);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1246: FILE: drivers/char/watchdog/generic_watchdog.c:670:
+	driver_remove_file(&(wdd->driver), &driver_attr_timer);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1247: FILE: drivers/char/watchdog/generic_watchdog.c:671:
+	driver_remove_file(&(wdd->driver), &driver_attr_options);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1248: FILE: drivers/char/watchdog/generic_watchdog.c:672:
+	driver_remove_file(&(wdd->driver), &driver_attr_firmware_version);

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#1262: FILE: drivers/char/watchdog/generic_watchdog.c:686:
+	struct watchdog_ops *wdo = wdd->ops;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdd->info"
#1266: FILE: drivers/char/watchdog/generic_watchdog.c:690:
+	if (wdd->info == NULL || wdd->ops == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdd->ops"
#1266: FILE: drivers/char/watchdog/generic_watchdog.c:690:
+	if (wdd->info == NULL || wdd->ops == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdo->start"
#1269: FILE: drivers/char/watchdog/generic_watchdog.c:693:
+	if (wdo->start == NULL || wdo->stop == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdo->stop"
#1269: FILE: drivers/char/watchdog/generic_watchdog.c:693:
+	if (wdo->start == NULL || wdo->stop == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wdo->keepalive"
#1270: FILE: drivers/char/watchdog/generic_watchdog.c:694:
+	    wdo->keepalive == NULL)

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#1276: FILE: drivers/char/watchdog/generic_watchdog.c:700:
+		printk (KERN_ERR "%s: another watchdog device is allready registered\n",
 		                                                 ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1276: FILE: drivers/char/watchdog/generic_watchdog.c:700:
+		printk (KERN_ERR "%s: another watchdog device is allready registered\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1276: FILE: drivers/char/watchdog/generic_watchdog.c:700:
+		printk (KERN_ERR "%s: another watchdog device is allready registered\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1282: FILE: drivers/char/watchdog/generic_watchdog.c:706:
+	if (!get_driver(&(wdd->driver))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1288: FILE: drivers/char/watchdog/generic_watchdog.c:712:
+	ret = driver_register(&(wdd->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1302: FILE: drivers/char/watchdog/generic_watchdog.c:726:
+		printk (KERN_ERR "%s: cannot register reboot notifier (err=%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1302: FILE: drivers/char/watchdog/generic_watchdog.c:726:
+		printk (KERN_ERR "%s: cannot register reboot notifier (err=%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1309: FILE: drivers/char/watchdog/generic_watchdog.c:733:
+		printk (KERN_ERR "%s: cannot register miscdev on minor=%d (err=%d)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1309: FILE: drivers/char/watchdog/generic_watchdog.c:733:
+		printk (KERN_ERR "%s: cannot register miscdev on minor=%d (err=%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1320: FILE: drivers/char/watchdog/generic_watchdog.c:744:
+	printk (KERN_INFO "%s: generic watchdog driver v0.02. timeout=%d sec. nowayout=%d.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1320: FILE: drivers/char/watchdog/generic_watchdog.c:744:
+	printk (KERN_INFO "%s: generic watchdog driver v0.02. timeout=%d sec. nowayout=%d.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1330: FILE: drivers/char/watchdog/generic_watchdog.c:754:
+	driver_unregister(&(wdd->driver));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1332: FILE: drivers/char/watchdog/generic_watchdog.c:756:
+	put_driver(&(wdd->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1349: FILE: drivers/char/watchdog/generic_watchdog.c:773:
+		printk (KERN_ERR "generic watchdog: there is no watchdog registered\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1349: FILE: drivers/char/watchdog/generic_watchdog.c:773:
+		printk (KERN_ERR "generic watchdog: there is no watchdog registered\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1355: FILE: drivers/char/watchdog/generic_watchdog.c:779:
+		printk (KERN_ERR "generic watchdog: cannot unregister non-existing watchdog-driver\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1355: FILE: drivers/char/watchdog/generic_watchdog.c:779:
+		printk (KERN_ERR "generic watchdog: cannot unregister non-existing watchdog-driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1361: FILE: drivers/char/watchdog/generic_watchdog.c:785:
+		printk (KERN_ERR "%s: another watchdog device (%s) is running\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1361: FILE: drivers/char/watchdog/generic_watchdog.c:785:
+		printk (KERN_ERR "%s: another watchdog device (%s) is running\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1375: FILE: drivers/char/watchdog/generic_watchdog.c:799:
+	driver_unregister(&(wdd->driver));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around wdd->driver
#1376: FILE: drivers/char/watchdog/generic_watchdog.c:800:
+	put_driver(&(wdd->driver));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1378: FILE: drivers/char/watchdog/generic_watchdog.c:802:
+	printk (KERN_INFO "%s: generic watchdog unregistered.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1378: FILE: drivers/char/watchdog/generic_watchdog.c:802:
+	printk (KERN_INFO "%s: generic watchdog unregistered.\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1415: FILE: drivers/char/watchdog/generic_watchdog.c:839:
+EXPORT_SYMBOL_GPL(watchdog_driver_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1416: FILE: drivers/char/watchdog/generic_watchdog.c:840:
+EXPORT_SYMBOL_GPL(watchdog_driver_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1417: FILE: drivers/char/watchdog/generic_watchdog.c:841:
+EXPORT_SYMBOL_GPL(watchdog_devclass);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1607: FILE: drivers/char/watchdog/Kconfig:375:
+config SH_WDT
+	tristate "SuperH Watchdog"
+	depends on WATCHDOG && SUPERH
+	---help---
+	  This driver adds watchdog support for the integrated watchdog in the
+	  SuperH 3, 4 and 5 processors. If you have one of these processors, say
+	  Y, otherwise say N.
+
+	  This driver is also available as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want).
+	  If you want to compile it as a module, say M here and read
+	  <file:Documentation/modules.txt>. The module will be called
+	  shwdt.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1621: FILE: drivers/char/watchdog/Kconfig:389:
+config ALIM1535_WDT
+	tristate "ALi M1535 PMU Watchdog Timer"
+	depends on WATCHDOG
+	---help---
+	  This is the driver for the hardware watchdog on the ALi M1535 PMU.
+
+	  This driver is also available as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want).
+	  The module is called alim1535d_wdt.  If you want to compile it as a
+	  module, say M here and read <file:Documentation/modules.txt>.  Most
+	  people will say N.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1633: FILE: drivers/char/watchdog/Kconfig:401:
+config AMD7XX_TCO
+	tristate "AMD 766/768 TCO Timer/Watchdog"
+	depends on WATCHDOG
+	---help---
+	  This is the hardware driver for the TCO timer built into the 
+	  AMD 766/768 chipset family.
+
+	  This driver is also available as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want).
+	  The module is called amd7xx_tco.  If you want to compile it as a
+	  module, say M here and read <file:Documentation/modules.txt>.  Most
+	  people will say N.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: drivers/char/watchdog/Kconfig:405:
+^I  This is the hardware driver for the TCO timer built into the $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1788: FILE: drivers/char/watchdog/softdog.c:56:
+static char soft_noboot = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1815: FILE: drivers/char/watchdog/softdog.c:74:
+	if (ints[0] > 0) {
+		soft_noboot = ints[1];
+	}

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1822: FILE: drivers/char/watchdog/softdog.c:81:
+__setup("softdog=", softdog_setup);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1847: FILE: drivers/char/watchdog/softdog.c:99:
+	if (soft_noboot == 42)
[...]
-	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1851: FILE: drivers/char/watchdog/softdog.c:101:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1855: FILE: drivers/char/watchdog/softdog.c:104:
+		printk(KERN_CRIT "SOFTDOG: Reboot didn't ?????\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1866: FILE: drivers/char/watchdog/softdog.c:112:
+static void softdog_start (void)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1878: FILE: drivers/char/watchdog/softdog.c:114:
+	mod_timer(&watchdog_ticktock, jiffies+(timeout*HZ));
 	                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1878: FILE: drivers/char/watchdog/softdog.c:114:
+	mod_timer(&watchdog_ticktock, jiffies+(timeout*HZ));
 	                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1885: FILE: drivers/char/watchdog/softdog.c:121:
+static void softdog_stop (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1895: FILE: drivers/char/watchdog/softdog.c:130:
+static void softdog_keepalive (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1916: FILE: drivers/char/watchdog/softdog.c:139:
+static int softdog_set_options (int opt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1965: FILE: drivers/char/watchdog/softdog.c:160:
+static int softdog_set_timeout (int t)

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#2018: FILE: drivers/char/watchdog/softdog.c:178:
+static struct watchdog_ops softdog_ops = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2049: FILE: drivers/char/watchdog/softdog.c:201:
+	printk(banner);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2071: FILE: include/linux/temperature.h:1:
+/*

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#2121: FILE: include/linux/temperature.h:51:
+	int (*get_temperature) (void);		/* operation = get temperature in degrees Fahrenheit */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: Unnecessary space before function pointer arguments
#2121: FILE: include/linux/temperature.h:51:
+	int (*get_temperature) (void);		/* operation = get temperature in degrees Fahrenheit */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2125: FILE: include/linux/temperature.h:55:
+extern int  temperature_driver_register(struct temperature_driver *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct temperature_driver *' should also have an identifier name
#2125: FILE: include/linux/temperature.h:55:
+extern int  temperature_driver_register(struct temperature_driver *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2126: FILE: include/linux/temperature.h:56:
+extern void temperature_driver_unregister(struct temperature_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct temperature_driver *' should also have an identifier name
#2126: FILE: include/linux/temperature.h:56:
+extern void temperature_driver_unregister(struct temperature_driver *);

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#2168: FILE: include/linux/watchdog.h:56:
+struct watchdog_ops;

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#2177: FILE: include/linux/watchdog.h:65:
+	struct watchdog_ops *ops;		/* link to device_ops */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2183: FILE: include/linux/watchdog.h:71:
+	void (*start) (void);			/* operation = start watchdog */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2184: FILE: include/linux/watchdog.h:72:
+	void (*stop) (void);			/* operation = stop watchdog */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2185: FILE: include/linux/watchdog.h:73:
+	void (*keepalive) (void);		/* operation = send keepalive ping */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2187: FILE: include/linux/watchdog.h:75:
+	int (*get_status) (void);		/* operation = return watchdog status */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2188: FILE: include/linux/watchdog.h:76:
+	int (*get_bootstatus) (void);		/* operation = return watchdog bootstatus */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2189: FILE: include/linux/watchdog.h:77:
+	int (*set_options) (int);		/* operation = set watchdog's options */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2189: FILE: include/linux/watchdog.h:77:
+	int (*set_options) (int);		/* operation = set watchdog's options */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#2190: FILE: include/linux/watchdog.h:78:
+	int (*set_timeout) (int);		/* operation = set watchdog's timeout and return the new timeout

WARNING:SPACING: Unnecessary space before function pointer arguments
#2190: FILE: include/linux/watchdog.h:78:
+	int (*set_timeout) (int);		/* operation = set watchdog's timeout and return the new timeout

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2190: FILE: include/linux/watchdog.h:78:
+	int (*set_timeout) (int);		/* operation = set watchdog's timeout and return the new timeout

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2191: FILE: include/linux/watchdog.h:79:
+						   if new timeout=0 then we return the default timeout */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2191: FILE: include/linux/watchdog.h:79:
+	int (*set_timeout) (int);		/* operation = set watchdog's timeout and return the new timeout
+						   if new timeout=0 then we return the default timeout */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2191: FILE: include/linux/watchdog.h:79:
+						   if new timeout=0 then we return the default timeout */

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#2192: FILE: include/linux/watchdog.h:80:
+	int (*get_timervalue) (void);		/* operation = get the watchdog's current timer value */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2192: FILE: include/linux/watchdog.h:80:
+	int (*get_timervalue) (void);		/* operation = get the watchdog's current timer value */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#2193: FILE: include/linux/watchdog.h:81:
+	void (*sys_restart) (void);		/* operation = force a system restart using the watchdog */

WARNING:SPACING: Unnecessary space before function pointer arguments
#2193: FILE: include/linux/watchdog.h:81:
+	void (*sys_restart) (void);		/* operation = force a system restart using the watchdog */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2197: FILE: include/linux/watchdog.h:85:
+extern int  watchdog_driver_register(struct watchdog_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct watchdog_driver *' should also have an identifier name
#2197: FILE: include/linux/watchdog.h:85:
+extern int  watchdog_driver_register(struct watchdog_driver *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2198: FILE: include/linux/watchdog.h:86:
+extern void watchdog_driver_unregister(struct watchdog_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct watchdog_driver *' should also have an identifier name
#2198: FILE: include/linux/watchdog.h:86:
+extern void watchdog_driver_unregister(struct watchdog_driver *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 72 errors, 136 warnings, 63 checks, 2013 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
