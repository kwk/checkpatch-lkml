WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: drivers/pcmcia/cistpl.c:354:
+    char *buf, *caddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/pcmcia/cistpl.c:357:
+    buf = kmalloc(256, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: drivers/pcmcia/cistpl.c:358:
+    if (buf == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#57: FILE: drivers/pcmcia/cistpl.c:358:
+    if (buf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/pcmcia/cistpl.c:374:
+    kfree(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/pcmcia/cistpl.c:1417:
+    tuple_t *tuple;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/pcmcia/cistpl.c:1418:
+    cisdata_t *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/pcmcia/cistpl.c:1421:
+    buf = kmalloc(256, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/pcmcia/cistpl.c:1422:
+    if (buf == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#92: FILE: drivers/pcmcia/cistpl.c:1422:
+    if (buf == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/pcmcia/cistpl.c:1424:
+    tuple = kmalloc(sizeof(*tuple), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/pcmcia/cistpl.c:1425:
+    if (tuple == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tuple"
#95: FILE: drivers/pcmcia/cistpl.c:1425:
+    if (tuple == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/pcmcia/cistpl.c:1428:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/pcmcia/cistpl.c:1429:
+    tuple->DesiredTuple = code;$

CHECK:CAMELCASE: Avoid CamelCase: <DesiredTuple>
#99: FILE: drivers/pcmcia/cistpl.c:1429:
+    tuple->DesiredTuple = code;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/pcmcia/cistpl.c:1430:
+    tuple->Attributes = TUPLE_RETURN_COMMON;$

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#100: FILE: drivers/pcmcia/cistpl.c:1430:
+    tuple->Attributes = TUPLE_RETURN_COMMON;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/pcmcia/cistpl.c:1431:
+    ret = pcmcia_get_first_tuple(handle, tuple);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/pcmcia/cistpl.c:1432:
+    if (ret != CS_SUCCESS) goto done;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#102: FILE: drivers/pcmcia/cistpl.c:1432:
+    if (ret != CS_SUCCESS) goto done;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/pcmcia/cistpl.c:1433:
+    tuple->TupleData = buf;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleData>
#103: FILE: drivers/pcmcia/cistpl.c:1433:
+    tuple->TupleData = buf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/pcmcia/cistpl.c:1434:
+    tuple->TupleOffset = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleOffset>
#104: FILE: drivers/pcmcia/cistpl.c:1434:
+    tuple->TupleOffset = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/pcmcia/cistpl.c:1435:
+    tuple->TupleDataMax = 255;$

CHECK:CAMELCASE: Avoid CamelCase: <TupleDataMax>
#105: FILE: drivers/pcmcia/cistpl.c:1435:
+    tuple->TupleDataMax = 255;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/pcmcia/cistpl.c:1436:
+    ret = pcmcia_get_tuple_data(handle, tuple);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/pcmcia/cistpl.c:1437:
+    if (ret != CS_SUCCESS) goto done;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: drivers/pcmcia/cistpl.c:1437:
+    if (ret != CS_SUCCESS) goto done;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/pcmcia/cistpl.c:1438:
+    ret = pcmcia_parse_tuple(handle, tuple, parse);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/pcmcia/cistpl.c:1440:
+    kfree(tuple);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/pcmcia/cistpl.c:1441:
+    kfree(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/pcmcia/cistpl.c:1457:
+    tuple_t *tuple;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/pcmcia/cistpl.c:1458:
+    cisparse_t *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/pcmcia/cistpl.c:1463:
+    tuple = kmalloc(sizeof(*tuple), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/pcmcia/cistpl.c:1464:
+    if (tuple == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tuple"
#128: FILE: drivers/pcmcia/cistpl.c:1464:
+    if (tuple == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/pcmcia/cistpl.c:1466:
+    p = kmalloc(sizeof(*p), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/pcmcia/cistpl.c:1467:
+    if (p == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#131: FILE: drivers/pcmcia/cistpl.c:1467:
+    if (p == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/pcmcia/cistpl.c:1470:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/pcmcia/cistpl.c:1473:
+    tuple->DesiredTuple = RETURN_FIRST_TUPLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/pcmcia/cistpl.c:1474:
+    tuple->Attributes = TUPLE_RETURN_COMMON;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/pcmcia/cistpl.c:1475:
+    ret = pcmcia_get_first_tuple(handle, tuple);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/pcmcia/cistpl.c:1481:
+    if ((tuple->TupleCode == CISTPL_DEVICE) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode == CISTPL_DEVICE'
#152: FILE: drivers/pcmcia/cistpl.c:1481:
+    if ((tuple->TupleCode == CISTPL_DEVICE) ||
+	(read_tuple(handle, CISTPL_CFTABLE_ENTRY, p) == CS_SUCCESS) ||
+	(read_tuple(handle, CISTPL_CFTABLE_ENTRY_CB, p) == CS_SUCCESS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <TupleCode>
#152: FILE: drivers/pcmcia/cistpl.c:1481:
+    if ((tuple->TupleCode == CISTPL_DEVICE) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/pcmcia/cistpl.c:1489:
+    if ((read_tuple(handle, CISTPL_MANFID, p) == CS_SUCCESS) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
[...]
 	    reserved++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode > 0x23'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode < 0x40'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode > 0x47'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode < 0x80'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode > 0x90'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tuple->TupleCode < 0xff'
#179: FILE: drivers/pcmcia/cistpl.c:1500:
+	if (((tuple->TupleCode > 0x23) && (tuple->TupleCode < 0x40)) ||
+	    ((tuple->TupleCode > 0x47) && (tuple->TupleCode < 0x80)) ||
+	    ((tuple->TupleCode > 0x90) && (tuple->TupleCode < 0xff)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/pcmcia/cistpl.c:1510:
+    kfree(tuple);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/pcmcia/cistpl.c:1511:
+    kfree(p);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 38 warnings, 18 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
