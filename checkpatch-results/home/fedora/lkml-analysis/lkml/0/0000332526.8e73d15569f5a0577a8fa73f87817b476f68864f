WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urN linux-2.6.0-test6/arch/i386/Kconfig linux-260t6-vectorbase-testbox/arch/i386/Kconfig

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#76: FILE: arch/i386/kernel/io_apic.c:80:
+int vector_irq[NR_IRQS] = { [0 ... NR_IRQS -1] = -1};
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: arch/i386/kernel/io_apic.c:81:
+#define vector_to_irq(vector) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vector' - possible side-effects?
#77: FILE: arch/i386/kernel/io_apic.c:81:
+#define vector_to_irq(vector) 	\
+	(platform_legacy_irq(vector) ? vector : vector_irq[vector])

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: arch/i386/kernel/io_apic.c:1170:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/i386/kernel/io_apic.c:1187:
+		if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||
+				trigger == IOAPIC_LEVEL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/i386/kernel/io_apic.c:1194:
+		if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||
+				trigger == IOAPIC_LEVEL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: arch/i386/kernel/io_apic.c:1929:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: arch/i386/kernel/io_apic.c:1933:
+static unsigned int startup_level_ioapic_vector (unsigned int vector)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: arch/i386/kernel/io_apic.c:1937:
+	return startup_level_ioapic_irq (irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: arch/i386/kernel/io_apic.c:1940:
+static void end_level_ioapic_vector (unsigned int vector)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: arch/i386/kernel/io_apic.c:1947:
+static void mask_IO_APIC_vector (unsigned int vector)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: arch/i386/kernel/io_apic.c:1954:
+static void unmask_IO_APIC_vector (unsigned int vector)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: arch/i386/kernel/io_apic.c:1957:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/i386/kernel/io_apic.c:1961:
+static void set_ioapic_affinity_vector (unsigned int vector, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: arch/i386/kernel/io_apic.c:1961:
+static void set_ioapic_affinity_vector (unsigned int vector, 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#316: FILE: arch/i386/kernel/io_apic.c:1980:
+^I.startup ^I= startup_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: arch/i386/kernel/io_apic.c:1981:
+^I.shutdown ^I= shutdown_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: arch/i386/kernel/io_apic.c:1982:
+^I.enable ^I= enable_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: arch/i386/kernel/io_apic.c:1983:
+^I.disable ^I= disable_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#320: FILE: arch/i386/kernel/io_apic.c:1984:
+^I.ack ^I^I= ack_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: arch/i386/kernel/io_apic.c:1985:
+^I.end ^I^I= end_edge_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: arch/i386/kernel/io_apic.c:1991:
+^I.startup ^I= startup_level_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: arch/i386/kernel/io_apic.c:1992:
+^I.shutdown ^I= shutdown_level_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: arch/i386/kernel/io_apic.c:1993:
+^I.enable ^I= enable_level_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: arch/i386/kernel/io_apic.c:1994:
+^I.disable ^I= disable_level_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: arch/i386/kernel/io_apic.c:1995:
+^I.ack ^I^I= mask_and_ack_level_ioapic,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: arch/i386/kernel/io_apic.c:1996:
+^I.end ^I^I= end_level_ioapic,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: arch/i386/kernel/io_apic.c:2017:
+		int tmp = irq;
+		if (use_pci_vector()) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/i386/kernel/io_apic.c:2018:
+^I^I^Iif (!platform_legacy_irq(tmp))  $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: arch/i386/kernel/io_apic.c:2019:
+				if ((tmp = vector_to_irq(tmp)) == -1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/i386/kernel/io_apic.c:2454:
+ ^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#362: FILE: arch/i386/kernel/io_apic.c:2454:
+ ^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/i386/kernel/io_apic.c:2454:
+ ^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: arch/i386/kernel/mpparse.c:1139:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: arch/i386/kernel/mpparse.c:1139:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/i386/kernel/mpparse.c:1139:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/i386/kernel/mpparse.c:1140:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: arch/i386/kernel/mpparse.c:1140:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/i386/kernel/mpparse.c:1140:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/i386/kernel/mpparse.c:1141:
+ ^I^I^Ientry->irq = irq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: arch/i386/kernel/mpparse.c:1141:
+ ^I^I^Ientry->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/i386/kernel/mpparse.c:1141:
+ ^I^I^Ientry->irq = irq;$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#392: FILE: arch/i386/kernel/mpparse.c:1147:
+		if (!io_apic_set_pci_routing(ioapic, ioapic_pin, irq, edge_level, active_high_low)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/i386/kernel/mpparse.c:1148:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: arch/i386/kernel/mpparse.c:1148:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/i386/kernel/mpparse.c:1148:
+ ^I^I^Iif (use_pci_vector() && !platform_legacy_irq(irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/i386/kernel/mpparse.c:1149:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#394: FILE: arch/i386/kernel/mpparse.c:1149:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/i386/kernel/mpparse.c:1149:
+ ^I^I^I^Iirq = IO_APIC_VECTOR(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/i386/kernel/mpparse.c:1150:
+ ^I^I^Ientry->irq = irq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: arch/i386/kernel/mpparse.c:1150:
+ ^I^I^Ientry->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/i386/kernel/mpparse.c:1150:
+ ^I^I^Ientry->irq = irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/i386/kernel/mpparse.c:1151:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#396: FILE: arch/i386/kernel/mpparse.c:1151:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/i386/kernel/mpparse.c:1151:
+ ^I^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: arch/i386/pci/irq.c:748:
+^I^I^I^I^Iif (use_pci_vector() && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: arch/i386/pci/irq.c:749:
+					if (use_pci_vector() && 
+						!platform_legacy_irq(irq))

ERROR:SPACING: space required after that ';' (ctx:VxV)
#433: FILE: include/asm-i386/io_apic.h:17:
+static inline int use_pci_vector(void)	{return 1;}
                                       	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: include/asm-i386/io_apic.h:20:
+static inline void end_edge_ioapic_vector (unsigned int vector) { }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: include/asm-i386/io_apic.h:25:
+#define mask_and_ack_level_ioapic mask_and_ack_level_ioapic_vector^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: include/asm-i386/io_apic.h:29:
+#define startup_edge_ioapic ^Istartup_edge_ioapic_vector$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: include/asm-i386/io_apic.h:30:
+#define shutdown_edge_ioapic ^Idisable_edge_ioapic_vector$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: include/asm-i386/io_apic.h:31:
+#define enable_edge_ioapic ^Iunmask_IO_APIC_vector$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: include/asm-i386/io_apic.h:32:
+#define disable_edge_ioapic ^Idisable_edge_ioapic_vector$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: include/asm-i386/io_apic.h:33:
+#define ack_edge_ioapic ^Iack_edge_ioapic_vector$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#450: FILE: include/asm-i386/io_apic.h:34:
+#define end_edge_ioapic ^Iend_edge_ioapic_vector$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#452: FILE: include/asm-i386/io_apic.h:36:
+static inline int use_pci_vector(void)	{return 0;}
                                       	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: include/asm-i386/io_apic.h:39:
+static inline void end_edge_ioapic_irq (unsigned int irq) { }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: include/asm-i386/io_apic.h:44:
+#define mask_and_ack_level_ioapic mask_and_ack_level_ioapic_irq^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#464: FILE: include/asm-i386/io_apic.h:48:
+#define startup_edge_ioapic ^Istartup_edge_ioapic_irq$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#465: FILE: include/asm-i386/io_apic.h:49:
+#define shutdown_edge_ioapic ^Idisable_edge_ioapic_irq$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#466: FILE: include/asm-i386/io_apic.h:50:
+#define enable_edge_ioapic ^Iunmask_IO_APIC_irq$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#467: FILE: include/asm-i386/io_apic.h:51:
+#define disable_edge_ioapic ^Idisable_edge_ioapic_irq$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#468: FILE: include/asm-i386/io_apic.h:52:
+#define ack_edge_ioapic ^Iack_edge_ioapic_irq$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#469: FILE: include/asm-i386/io_apic.h:53:
+#define end_edge_ioapic ^Iend_edge_ioapic_irq$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: include/asm-i386/mach-default/irq_vectors.h:82:
+ * should be changed accordingly. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: arch/i386/Kconfig:1044:
+^I   MSI capable device functions detected if users also install the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: Documentation/MSI-HOWTO.txt:7:
+This guide describes the basics of Message Signaled Interrupts(MSI), the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: Documentation/MSI-HOWTO.txt:8:
+advantages of using MSI over traditional interrupt mechanisms, and how $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: Documentation/MSI-HOWTO.txt:9:
+to enable your driver to use MSI or MSI-X. Also included is a Frequently $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: Documentation/MSI-HOWTO.txt:12:
+2. Copyright 2003 Intel Corporation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: Documentation/MSI-HOWTO.txt:16:
+Message Signaled Interrupt (MSI), as described in the PCI Local Bus $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: Documentation/MSI-HOWTO.txt:17:
+Specification Revision 2.3 or latest, is an optional feature, and a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: Documentation/MSI-HOWTO.txt:20:
+the FSB as a Message Signal Interrupt transaction. Because MSI is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: Documentation/MSI-HOWTO.txt:21:
+generated in the form of a Memory Write, all transaction conditions, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: Documentation/MSI-HOWTO.txt:22:
+such as a Retry, Master-Abort, Target-Abort or normal completion, are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: Documentation/MSI-HOWTO.txt:25:
+A PCI device that supports MSI must also support pin IRQ assertion $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: Documentation/MSI-HOWTO.txt:30:
+initial configuration. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: Documentation/MSI-HOWTO.txt:32:
+An MSI capable device function indicates MSI support by implementing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: Documentation/MSI-HOWTO.txt:33:
+the MSI/MSI-X capability structure in its PCI capability list. The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: Documentation/MSI-HOWTO.txt:34:
+device function may implement both the MSI capability structure and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: Documentation/MSI-HOWTO.txt:35:
+the MSI-X capability structure; however, the bus driver should not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: Documentation/MSI-HOWTO.txt:45:
+register to the target address. The device and its software driver $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: Documentation/MSI-HOWTO.txt:48:
+The MSI-X capability structure is an optional extension to MSI. It $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: Documentation/MSI-HOWTO.txt:49:
+uses an independent and separate capability structure. There are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: Documentation/MSI-HOWTO.txt:50:
+some key advantages to implementing the MSI-X capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: Documentation/MSI-HOWTO.txt:55:
+^I- Provide the ability for system software to configure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: Documentation/MSI-HOWTO.txt:56:
+^Ieach vector with an independent message address and message $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: Documentation/MSI-HOWTO.txt:57:
+^Idata, specified by a table that resides in Memory Space. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: Documentation/MSI-HOWTO.txt:64:
+^Inot supported, then the device driver should provide the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: Documentation/MSI-HOWTO.txt:66:
+^Igenerates MSI when the driver wants it to do so. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: Documentation/MSI-HOWTO.txt:68:
+4. Why use MSI? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: Documentation/MSI-HOWTO.txt:70:
+As a benefit the simplification of board design, MSI allows board $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: Documentation/MSI-HOWTO.txt:71:
+designers to remove out of band interrupt routing. MSI is another $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: Documentation/MSI-HOWTO.txt:74:
+Due to increasing pressure on chipset and processor packages to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: Documentation/MSI-HOWTO.txt:75:
+reduce pin count, the need for interrupt pins is expected to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: Documentation/MSI-HOWTO.txt:77:
+messages to increase performance. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: Documentation/MSI-HOWTO.txt:80:
+of IRQ pin assertion. Using INTx emulation requires interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: Documentation/MSI-HOWTO.txt:83:
+support. As a result, the PCI Express technology requires MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: Documentation/MSI-HOWTO.txt:85:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: Documentation/MSI-HOWTO.txt:86:
+Using MSI enables the device functions to support two or more $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: Documentation/MSI-HOWTO.txt:87:
+vectors, which can be configure to target different CPU's to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: Documentation/MSI-HOWTO.txt:88:
+increase scalability. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: Documentation/MSI-HOWTO.txt:93:
+support this capability once the patch is installed. A kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: Documentation/MSI-HOWTO.txt:99:
+VECTOR-base patch first and then the MSI patch because the MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: Documentation/MSI-HOWTO.txt:101:
+setting CONFIG_PCI_USE_VECTOR enables the VECTOR based scheme and $

WARNING:TYPO_SPELLING: 'desribed' may be misspelled - perhaps 'described'?
#682: FILE: Documentation/MSI-HOWTO.txt:103:
+(using pci_enable_msi as desribed below).
                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: Documentation/MSI-HOWTO.txt:110:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: Documentation/MSI-HOWTO.txt:111:
+With this new API, any existing device driver, which like to have $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: Documentation/MSI-HOWTO.txt:112:
+MSI enabled on its device function, must call this explicitly. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: Documentation/MSI-HOWTO.txt:114:
+with ONE vector, regardless of whether the device function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: Documentation/MSI-HOWTO.txt:121:
+mode on the MSI-capable device function between MSI mode and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: Documentation/MSI-HOWTO.txt:126:
+^I| MSI MODE   |^I  ^I     ^I| PIN-IRQ ASSERTION MODE |^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: Documentation/MSI-HOWTO.txt:127:
+^I| ^I     | ===============>^I|^I^I^I |^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: Documentation/MSI-HOWTO.txt:132:
+Due to the non-contiguous fashion in vector assignment of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: Documentation/MSI-HOWTO.txt:133:
+existing Linux kernel, this patch does not support multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: Documentation/MSI-HOWTO.txt:136:
+this capability if pci_enable_msi(...) is called successfully by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: Documentation/MSI-HOWTO.txt:145:
+non-contiguous fashion in vector assignment of the existing Linux $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: Documentation/MSI-HOWTO.txt:146:
+kernel has no impact on supporting multiple messages on an MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: Documentation/MSI-HOWTO.txt:148:
+should be always allocated to the MSI-X capability structure at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: Documentation/MSI-HOWTO.txt:149:
+entry 0. The bus driver does not initialize other entries of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: Documentation/MSI-HOWTO.txt:151:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: Documentation/MSI-HOWTO.txt:152:
+Note that the PCI subsystem should have full control of a MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: Documentation/MSI-HOWTO.txt:153:
+table that resides in Memory Space. The software device driver $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: Documentation/MSI-HOWTO.txt:154:
+should not access this table. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: Documentation/MSI-HOWTO.txt:157:
+call function msi_alloc_vectors(). It is recommended that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: Documentation/MSI-HOWTO.txt:158:
+software driver should call this function once during the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: Documentation/MSI-HOWTO.txt:161:
+The function msi_alloc_vectors(), once invoked, enables either $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: Documentation/MSI-HOWTO.txt:162:
+all or nothing, depending on the current availability of vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: Documentation/MSI-HOWTO.txt:165:
+for the number of vectors requested by the driver, this function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: Documentation/MSI-HOWTO.txt:168:
+reason, for example, the device may be capable for supporting the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: Documentation/MSI-HOWTO.txt:172:
+For each vector, after this successful call, the device driver is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: Documentation/MSI-HOWTO.txt:176:
+the same interrupt service handler or each vector with a unique $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: Documentation/MSI-HOWTO.txt:177:
+interrupt service handler. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: Documentation/MSI-HOWTO.txt:179:
+In addition to the function msi_alloc_vectors(), another function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: Documentation/MSI-HOWTO.txt:180:
+msi_free_vectors() is provided to allow the software driver to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: Documentation/MSI-HOWTO.txt:181:
+release a number of vectors back to the vector resources. Once $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: Documentation/MSI-HOWTO.txt:182:
+invoked, the PCI subsystem disables (masks) each vector released. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: Documentation/MSI-HOWTO.txt:190:
+This API enables the software driver to request the PCI subsystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: Documentation/MSI-HOWTO.txt:191:
+for additional messages. Depending on the number of vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: Documentation/MSI-HOWTO.txt:192:
+available, the PCI subsystem enables either all or nothing. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: Documentation/MSI-HOWTO.txt:195:
+Argument vector is a pointer of integer type. The number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: Documentation/MSI-HOWTO.txt:197:
+Argument nvec is an integer indicating the number of messages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#778: FILE: Documentation/MSI-HOWTO.txt:199:
+A return of zero indicates that the number of allocated vector is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: Documentation/MSI-HOWTO.txt:200:
+successfully allocated. Otherwise, indicate resources not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: Documentation/MSI-HOWTO.txt:206:
+that it is willing to release a number of vectors back to the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: Documentation/MSI-HOWTO.txt:209:
+These vectors are no longer valid for the hardware device and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: Documentation/MSI-HOWTO.txt:213:
+Argument vector is a pointer of integer type. The number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: Documentation/MSI-HOWTO.txt:215:
+Argument nvec is an integer indicating the number of messages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#795: FILE: Documentation/MSI-HOWTO.txt:216:
+released. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: Documentation/MSI-HOWTO.txt:217:
+A return of zero indicates that the number of allocated vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: Documentation/MSI-HOWTO.txt:221:
+MSI support requires support from both system hardware and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: Documentation/MSI-HOWTO.txt:226:
+MSI support in Linux kernel is dependent on whether existing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: Documentation/MSI-HOWTO.txt:228:
+system whether it runs when CONFIG_X86_LOCAL_APIC=y.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: Documentation/MSI-HOWTO.txt:231:
+however, in UP environment, users must manually set $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#811: FILE: Documentation/MSI-HOWTO.txt:232:
+CONFIG_X86_LOCAL_APIC. Once CONFIG_X86_LOCAL_APIC=y, setting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: Documentation/MSI-HOWTO.txt:233:
+CONFIG_PCI_USE_VECTOR enables the VECTOR based scheme and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: Documentation/MSI-HOWTO.txt:234:
+the option for MSI-capable device drivers to selectively enable $

WARNING:TYPO_SPELLING: 'desribed' may be misspelled - perhaps 'described'?
#814: FILE: Documentation/MSI-HOWTO.txt:235:
+MSI (using pci_enable_msi as desribed below).
                              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: Documentation/MSI-HOWTO.txt:236:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: Documentation/MSI-HOWTO.txt:243:
+The hardware device function supports MSI by indicating the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: Documentation/MSI-HOWTO.txt:250:
+MSI-capable hardware is responsible for whether calling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: Documentation/MSI-HOWTO.txt:251:
+pci_enable_msi or not. A return of zero indicates the kernel $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#832: FILE: Documentation/MSI-HOWTO.txt:253:
+device funtion. The device function is now running on MSI mode.
        ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: Documentation/MSI-HOWTO.txt:254:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: Documentation/MSI-HOWTO.txt:257:
+At the driver level, a return of zero from pci_enable_msi(...) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: Documentation/MSI-HOWTO.txt:258:
+indicates to the device driver that its device function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: Documentation/MSI-HOWTO.txt:261:
+At the user level, users can use command 'cat /proc/interrupts' $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: Documentation/MSI-HOWTO.txt:263:
+mode, as shown below. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: Documentation/MSI-HOWTO.txt:265:
+           CPU0       CPU1       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: Documentation/MSI-HOWTO.txt:278:
+NMI:          0          0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: Documentation/MSI-HOWTO.txt:279:
+LOC:     324553     325068 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: Documentation/MSI-HOWTO.txt:307:
+target address set as 0xfeexxxxx, as conformed to PCI $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#928: FILE: drivers/pci/msi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#929: FILE: drivers/pci/msi.c:2:
+ * linux/drivers/pci/msi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: drivers/pci/msi.c:6:
+#include <linux/irq.h>^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: drivers/pci/msi.c:8:
+#include <linux/init.h>^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: drivers/pci/msi.c:9:
+#include <linux/config.h>      ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#936: FILE: drivers/pci/msi.c:9:
+#include <linux/config.h>      ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/pci/msi.c:10:
+#include <linux/ioport.h>       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: drivers/pci/msi.c:17:
+#include <asm/io.h>^I^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#944: FILE: drivers/pci/msi.c:17:
+#include <asm/io.h>		

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#945: FILE: drivers/pci/msi.c:18:
+#include <asm/smp.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/pci/msi.c:19:
+#include <asm/desc.h>^I^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#954: FILE: drivers/pci/msi.c:27:
+static struct msi_desc* msi_desc[NR_IRQS] = { [0 ... NR_IRQS-1] = NULL };

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#954: FILE: drivers/pci/msi.c:27:
+static struct msi_desc* msi_desc[NR_IRQS] = { [0 ... NR_IRQS-1] = NULL };
                                                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#955: FILE: drivers/pci/msi.c:28:
+static kmem_cache_t* msi_cachep;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#958: FILE: drivers/pci/msi.c:31:
+static int nr_alloc_vectors = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#959: FILE: drivers/pci/msi.c:32:
+static int nr_released_vectors = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#961: FILE: drivers/pci/msi.c:34:
+static int nr_msix_devices = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#964: FILE: drivers/pci/msi.c:37:
+int vector_irq[NR_IRQS] = { [0 ... NR_IRQS -1] = -1};
                                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#965: FILE: drivers/pci/msi.c:38:
+int irq_vector[NR_IRQS] = { FIRST_DEVICE_VECTOR , 0 };
                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: drivers/pci/msi.c:48:
+^Imsi_cachep = kmem_cache_create("msi_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#976: FILE: drivers/pci/msi.c:49:
+	msi_cachep = kmem_cache_create("msi_cache", 
+			NR_IRQS * sizeof(struct msi_desc),

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: drivers/pci/msi.c:50:
+^I^I       ^I0, SLAB_HWCACHE_ALIGN, msi_cache_ctor, NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#977: FILE: drivers/pci/msi.c:50:
+^I^I       ^I0, SLAB_HWCACHE_ALIGN, msi_cache_ctor, NULL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#980: FILE: drivers/pci/msi.c:53:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: drivers/pci/msi.c:60:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: drivers/pci/msi.c:71:
+^I        entry->dev->bus->ops->read(entry->dev->bus, entry->dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/pci/msi.c:71:
+^I        entry->dev->bus->ops->read(entry->dev->bus, entry->dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: drivers/pci/msi.c:75:
+^I        entry->dev->bus->ops->write(entry->dev->bus, entry->dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: drivers/pci/msi.c:75:
+^I        entry->dev->bus->ops->write(entry->dev->bus, entry->dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: drivers/pci/msi.c:88:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: drivers/pci/msi.c:95:
+^Istruct msg_address address;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: drivers/pci/msi.c:99:
+^Iif (!entry || !entry->dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/pci/msi.c:101:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: drivers/pci/msi.c:107:
+   ^I^Iif (!(pos = pci_find_capability(entry->dev, PCI_CAP_ID_MSI)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1034: FILE: drivers/pci/msi.c:107:
+   ^I^Iif (!(pos = pci_find_capability(entry->dev, PCI_CAP_ID_MSI)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: drivers/pci/msi.c:107:
+   ^I^Iif (!(pos = pci_find_capability(entry->dev, PCI_CAP_ID_MSI)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1034: FILE: drivers/pci/msi.c:107:
+   		if (!(pos = pci_find_capability(entry->dev, PCI_CAP_ID_MSI)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/pci/msi.c:109:
+^I       ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1036: FILE: drivers/pci/msi.c:109:
+^I       ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/pci/msi.c:110:
+^I        entry->dev->bus->ops->read(entry->dev->bus, entry->dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: drivers/pci/msi.c:110:
+^I        entry->dev->bus->ops->read(entry->dev->bus, entry->dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: drivers/pci/msi.c:111:
+^I^I^Imsi_lower_address_reg(pos), 4, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: drivers/pci/msi.c:113:
+^I^Idest_id = (address.lo_address.u.dest_id & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: drivers/pci/msi.c:116:
+^I^Iaddress.lo_address.u.dest_id = dest_id; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1044: FILE: drivers/pci/msi.c:117:
+^I^Ientry->msi_attrib.current_cpu = cpu_mask_to_apicid(cpu_mask); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: drivers/pci/msi.c:119:
+^I^I^Imsi_lower_address_reg(pos), 4, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: drivers/pci/msi.c:129:
+^I^Idest_id = (address.lo_address.u.dest_id & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/pci/msi.c:132:
+^I^Iaddress.lo_address.u.dest_id = dest_id; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/pci/msi.c:133:
+^I^Ientry->msi_attrib.current_cpu = cpu_mask_to_apicid(cpu_mask); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: drivers/pci/msi.c:161:
+static unsigned int startup_msi_irq_wo_maskbit(unsigned int vector) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: drivers/pci/msi.c:167:
+static void shutdown_msi_irq(unsigned int vector) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: drivers/pci/msi.c:172:
+#define shutdown_msi_irq_wo_maskbit^Ishutdown_msi_irq $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: drivers/pci/msi.c:176:
+static void end_msi_irq_wo_maskbit(unsigned int vector) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/pci/msi.c:179:
+^Iack_APIC_irq();^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/pci/msi.c:183:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: drivers/pci/msi.c:193:
+static void end_msi_irq_w_maskbit(unsigned int vector) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/pci/msi.c:196:
+^Iunmask_MSI_irq(vector);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: drivers/pci/msi.c:202:
+ * which implement the MSI-X Capability Structure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: drivers/pci/msi.c:210:
+^I.ack^I^I= ack_msi_irq_w_maskbit,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: drivers/pci/msi.c:211:
+^I.end^I^I= end_msi_irq_w_maskbit,^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: drivers/pci/msi.c:217:
+ * which implement the MSI Capability Structure with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: drivers/pci/msi.c:218:
+ * Mask-and-Pending Bits. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1153: FILE: drivers/pci/msi.c:226:
+^I.ack^I^I= ack_msi_irq_w_maskbit,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: drivers/pci/msi.c:227:
+^I.end^I^I= end_msi_irq_w_maskbit,^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1160: FILE: drivers/pci/msi.c:233:
+ * which implement the MSI Capability Structure without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/pci/msi.c:234:
+ * Mask-and-Pending Bits. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/pci/msi.c:242:
+^I.ack^I^I= ack_msi_irq_wo_maskbit,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: drivers/pci/msi.c:243:
+^I.end^I^I= end_msi_irq_wo_maskbit,^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1174: FILE: drivers/pci/msi.c:247:
+static void msi_data_init(struct msg_data *msi_data, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1181: FILE: drivers/pci/msi.c:254:
+^Imsi_data->trigger = MSI_TRIGGER_MODE;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1187: FILE: drivers/pci/msi.c:260:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: drivers/pci/msi.c:267:
+^Imsi_address->lo_address.u.dest_id = dest_id; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1197: FILE: drivers/pci/msi.c:270:
+static int pci_vector_resources(void) ^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1197: FILE: drivers/pci/msi.c:270:
+static int pci_vector_resources(void) ^I^I^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1197: FILE: drivers/pci/msi.c:270:
+static int pci_vector_resources(void) 					

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: drivers/pci/msi.c:271:
+{^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: drivers/pci/msi.c:274:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: drivers/pci/msi.c:277:
+^I^Ifor (i = NR_REPEATS; i > 0; i--) {^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1204: FILE: drivers/pci/msi.c:277:
+		int i, repeat;
+		for (i = NR_REPEATS; i > 0; i--) {				

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: drivers/pci/msi.c:279:
+^I^I^I^Icontinue; ^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1206: FILE: drivers/pci/msi.c:279:
+^I^I^I^Icontinue; ^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: drivers/pci/msi.c:280:
+^I^I^Ibreak; ^I^I^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1207: FILE: drivers/pci/msi.c:280:
+^I^I^Ibreak; ^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1208: FILE: drivers/pci/msi.c:281:
+^I^I} ^I^I^I^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1208: FILE: drivers/pci/msi.c:281:
+^I^I} ^I^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: drivers/pci/msi.c:282:
+^I^Ii++; ^I^I^I^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1209: FILE: drivers/pci/msi.c:282:
+^I^Ii++; ^I^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: drivers/pci/msi.c:283:
+^I^Irepeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1210: FILE: drivers/pci/msi.c:283:
+^I^Irepeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i; ^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1210: FILE: drivers/pci/msi.c:283:
+		repeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i; 	
 		                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/pci/msi.c:284:
+^I^Ires = i * repeat - NR_RESERVED_VECTORS + 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1214: FILE: drivers/pci/msi.c:287:
+^Inr_free_vectors = res + nr_released_vectors - nr_alloc_vectors;^I$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1221: FILE: drivers/pci/msi.c:294:
+	static int current_vector = FIRST_DEVICE_VECTOR, offset = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: drivers/pci/msi.c:295:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1235: FILE: drivers/pci/msi.c:308:
+^Iif (current_vector == FIRST_SYSTEM_VECTOR) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1237: FILE: drivers/pci/msi.c:310:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1239: FILE: drivers/pci/msi.c:312:
+^Iif (irq != MSI_AUTO) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1249: FILE: drivers/pci/msi.c:322:
+^Istatic int new_vector_avail = 1; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1249: FILE: drivers/pci/msi.c:322:
+^Istatic int new_vector_avail = 1; ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: drivers/pci/msi.c:325:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: drivers/pci/msi.c:326:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1265: FILE: drivers/pci/msi.c:338:
+^I ^I * vector_irq[] = -1 indicates that this specific vector is:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1265: FILE: drivers/pci/msi.c:338:
+^I ^I * vector_irq[] = -1 indicates that this specific vector is:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1266: FILE: drivers/pci/msi.c:339:
+^I ^I * - assigned for MSI (since MSI have no associated IRQ) or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1266: FILE: drivers/pci/msi.c:339:
+^I ^I * - assigned for MSI (since MSI have no associated IRQ) or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: drivers/pci/msi.c:340:
+^I ^I * - assigned for legacy if less than 16, or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1267: FILE: drivers/pci/msi.c:340:
+^I ^I * - assigned for legacy if less than 16, or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: drivers/pci/msi.c:341:
+^I ^I * - having no corresponding 1:1 vector-to-IOxAPIC IRQ mapping$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1268: FILE: drivers/pci/msi.c:341:
+^I ^I * - having no corresponding 1:1 vector-to-IOxAPIC IRQ mapping$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: drivers/pci/msi.c:342:
+^I ^I * vector_irq[] = 0 indicates that this vector, previously $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1269: FILE: drivers/pci/msi.c:342:
+^I ^I * vector_irq[] = 0 indicates that this vector, previously $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1269: FILE: drivers/pci/msi.c:342:
+^I ^I * vector_irq[] = 0 indicates that this vector, previously $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: drivers/pci/msi.c:343:
+^I^I * assigned for MSI, is freed by hotplug removed operations. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1271: FILE: drivers/pci/msi.c:344:
+^I^I * This vector will be reused for any subsequent hotplug added $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1273: FILE: drivers/pci/msi.c:346:
+^I ^I * vector_irq[] > 0 indicates that this vector is assigned for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1273: FILE: drivers/pci/msi.c:346:
+^I ^I * vector_irq[] > 0 indicates that this vector is assigned for $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1273: FILE: drivers/pci/msi.c:346:
+^I ^I * vector_irq[] > 0 indicates that this vector is assigned for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: drivers/pci/msi.c:347:
+^I^I * IOxAPIC IRQs. This vector and its value provides a 1-to-1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: drivers/pci/msi.c:349:
+^I ^I */   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: drivers/pci/msi.c:349:
+^I ^I */   $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1276: FILE: drivers/pci/msi.c:349:
+^I ^I */   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1278: FILE: drivers/pci/msi.c:351:
+^I^I^Iif (vector_irq[vector] != 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1280: FILE: drivers/pci/msi.c:353:
+^I^I^Ivector_irq[vector] = -1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1287: FILE: drivers/pci/msi.c:360:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1290: FILE: drivers/pci/msi.c:363:
+^Iif (vector  == (FIRST_SYSTEM_VECTOR - 8))  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: drivers/pci/msi.c:373:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1301: FILE: drivers/pci/msi.c:374:
+	if ((vector = assign_msi_vector()) > 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: drivers/pci/msi.c:383:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1314: FILE: drivers/pci/msi.c:387:
+	if ((status = msi_cache_init()) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1316: FILE: drivers/pci/msi.c:389:
+		printk(KERN_INFO "WARNING: MSI INIT FAILURE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1319: FILE: drivers/pci/msi.c:392:
+	printk(KERN_INFO "MSI INIT SUCCESS\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: drivers/pci/msi.c:393:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: drivers/pci/msi.c:396:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1329: FILE: drivers/pci/msi.c:402:
+static struct msi_desc* alloc_msi_entry(void)

CHECK:SPACING: No space is necessary after a cast
#1333: FILE: drivers/pci/msi.c:406:
+	entry = (struct msi_desc*) kmem_cache_alloc(msi_cachep, SLAB_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1333: FILE: drivers/pci/msi.c:406:
+	entry = (struct msi_desc*) kmem_cache_alloc(msi_cachep, SLAB_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1338: FILE: drivers/pci/msi.c:411:
+	entry->link.tail = entry->link.head = 0;	/* single message */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1340: FILE: drivers/pci/msi.c:413:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1356: FILE: drivers/pci/msi.c:429:
+	if (cap_id == PCI_CAP_ID_MSIX)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1358: FILE: drivers/pci/msi.c:431:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: drivers/pci/msi.c:443:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: drivers/pci/msi.c:444:
+^Idev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: drivers/pci/msi.c:449:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1376: FILE: drivers/pci/msi.c:449:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1380: FILE: drivers/pci/msi.c:453:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: drivers/pci/msi.c:453:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1383: FILE: drivers/pci/msi.c:456:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1383: FILE: drivers/pci/msi.c:456:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: drivers/pci/msi.c:456:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: drivers/pci/msi.c:459:
+^I        dev->bus->ops->read(dev->bus, dev->devfn, PCI_COMMAND, 2, &cmd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: drivers/pci/msi.c:461:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, PCI_COMMAND, 2, cmd);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: drivers/pci/msi.c:468:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1396: FILE: drivers/pci/msi.c:469:
+^Idev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1401: FILE: drivers/pci/msi.c:474:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1401: FILE: drivers/pci/msi.c:474:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: drivers/pci/msi.c:478:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1405: FILE: drivers/pci/msi.c:478:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1408: FILE: drivers/pci/msi.c:481:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1408: FILE: drivers/pci/msi.c:481:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: drivers/pci/msi.c:481:
+    ^Iif (pci_find_capability(dev, PCI_CAP_ID_EXP)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1411: FILE: drivers/pci/msi.c:484:
+^I        dev->bus->ops->read(dev->bus, dev->devfn, PCI_COMMAND, 2, &cmd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1413: FILE: drivers/pci/msi.c:486:
+^I        dev->bus->ops->write(dev->bus, dev->devfn, PCI_COMMAND, 2, cmd);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1425: FILE: drivers/pci/msi.c:498:
+		if (!msi_desc[vector] || msi_desc[vector]->dev != dev ||
+			msi_desc[vector]->msi_attrib.entry_nr ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/pci/msi.c:502:
+^I^I/* This pre-assigned entry-0 MSI vector for this device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1430: FILE: drivers/pci/msi.c:503:
+^I^I   already exits. Override dev->irq with this vector */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1430: FILE: drivers/pci/msi.c:503:
+		/* This pre-assigned entry-0 MSI vector for this device 
+		   already exits. Override dev->irq with this vector */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1430: FILE: drivers/pci/msi.c:503:
+		   already exits. Override dev->irq with this vector */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: drivers/pci/msi.c:504:
+^I^Idev->irq = vector;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: drivers/pci/msi.c:517:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1444: FILE: drivers/pci/msi.c:517:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: drivers/pci/msi.c:517:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1444: FILE: drivers/pci/msi.c:517:
+   	if (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) {
[...]
+	} else if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0)
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1454: FILE: drivers/pci/msi.c:527:
+ * $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1455: FILE: drivers/pci/msi.c:528:
+ * Setup the MSI capability structure of device funtion with a single
                                                 ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1458: FILE: drivers/pci/msi.c:531:
+ * of an entry zero with the new MSI vector or non-zero for otherwise.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: drivers/pci/msi.c:533:
+static int msi_capability_init(struct pci_dev *dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: drivers/pci/msi.c:536:
+^Istruct msg_address address; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1467: FILE: drivers/pci/msi.c:540:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1468: FILE: drivers/pci/msi.c:541:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1468: FILE: drivers/pci/msi.c:541:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: drivers/pci/msi.c:541:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1470: FILE: drivers/pci/msi.c:543:
+^I^Ireturn -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: drivers/pci/msi.c:545:
+^Idev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/pci/msi.c:549:
+^I$

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1479: FILE: drivers/pci/msi.c:552:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1484: FILE: drivers/pci/msi.c:557:
+	if (!(entry = alloc_msi_entry()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: drivers/pci/msi.c:559:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1487: FILE: drivers/pci/msi.c:560:
+	if ((vector = get_msi_vector(dev)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1497: FILE: drivers/pci/msi.c:570:
+^Iif (is_mask_bit_support(control)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: drivers/pci/msi.c:571:
+^I^Ientry->mask_base = msi_mask_bits_reg(pos, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1499: FILE: drivers/pci/msi.c:572:
+		entry->mask_base = msi_mask_bits_reg(pos, 
+				is_64bit_address(control));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1508: FILE: drivers/pci/msi.c:581:
+^Idev->bus->ops->write(dev->bus, dev->devfn, msi_lower_address_reg(pos), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1511: FILE: drivers/pci/msi.c:584:
+^I^Idev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: drivers/pci/msi.c:586:
+^I^Idev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1514: FILE: drivers/pci/msi.c:587:
+			msi_data_reg(pos, 1), 2, *((u32*)&data));

CHECK:BRACES: Unbalanced braces around else statement
#1515: FILE: drivers/pci/msi.c:588:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/pci/msi.c:589:
+^I^Idev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1517: FILE: drivers/pci/msi.c:590:
+			msi_data_reg(pos, 0), 2, *((u32*)&data));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1521: FILE: drivers/pci/msi.c:594:
+^I        dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1521: FILE: drivers/pci/msi.c:594:
+^I        dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: drivers/pci/msi.c:600:
+^I^Idev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1539: FILE: drivers/pci/msi.c:612:
+ * msix_capability_init - configure device's MSI-X capability $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1541: FILE: drivers/pci/msi.c:614:
+ * $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#1542: FILE: drivers/pci/msi.c:615:
+ * Setup the MSI-X capability structure of device funtion with a
                                                   ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1544: FILE: drivers/pci/msi.c:617:
+ * of an entry zero with the new MSI-X vector or non-zero for otherwise.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1548: FILE: drivers/pci/msi.c:621:
+ * 2) msi_free_vectors(...) for releasing one or more MSI-X vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1551: FILE: drivers/pci/msi.c:624:
+static int msix_capability_init(struct pci_dev^I*dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1554: FILE: drivers/pci/msi.c:627:
+^Istruct msg_address address; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1561: FILE: drivers/pci/msi.c:634:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1562: FILE: drivers/pci/msi.c:635:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1562: FILE: drivers/pci/msi.c:635:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: drivers/pci/msi.c:635:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1564: FILE: drivers/pci/msi.c:637:
+^I^Ireturn -EINVAL;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1567: FILE: drivers/pci/msi.c:640:
+^Idev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), 2, $

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1574: FILE: drivers/pci/msi.c:647:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: drivers/pci/msi.c:653:
+^Idev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1583: FILE: drivers/pci/msi.c:656:
+	phys_addr = pci_resource_start (dev, bir);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1585: FILE: drivers/pci/msi.c:658:
+^Iif (!request_mem_region(phys_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/pci/msi.c:659:
+	if (!request_mem_region(phys_addr, 
+		dev_msi_cap * PCI_MSIX_ENTRY_SIZE,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: drivers/pci/msi.c:663:
+^Iif (base == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1590: FILE: drivers/pci/msi.c:663:
+	if (base == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1591: FILE: drivers/pci/msi.c:664:
+^I^Igoto free_region; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1594: FILE: drivers/pci/msi.c:667:
+^Iif (!entry) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1595: FILE: drivers/pci/msi.c:668:
+^I^Igoto free_iomap; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1596: FILE: drivers/pci/msi.c:669:
+	if ((vector = get_msi_vector(dev)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1598: FILE: drivers/pci/msi.c:671:
+       ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1598: FILE: drivers/pci/msi.c:671:
+       ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: drivers/pci/msi.c:671:
+       ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1605: FILE: drivers/pci/msi.c:678:
+^Ientry->mask_base = (unsigned long)base; $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1615: FILE: drivers/pci/msi.c:688:
+	writel(*(u32*)&data, base + PCI_MSIX_ENTRY_DATA_OFFSET);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1635: FILE: drivers/pci/msi.c:708:
+free_region: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1641: FILE: drivers/pci/msi.c:714:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1649: FILE: drivers/pci/msi.c:722:
+ * vector or non-zero for otherwise.  $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1651: FILE: drivers/pci/msi.c:724:
+int pci_enable_msi(struct pci_dev* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1656: FILE: drivers/pci/msi.c:729:
+ ^I^Ireturn status;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1656: FILE: drivers/pci/msi.c:729:
+ ^I^Ireturn status;^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1656: FILE: drivers/pci/msi.c:729:
+ ^I^Ireturn status;^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: drivers/pci/msi.c:729:
+ ^I^Ireturn status;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1657: FILE: drivers/pci/msi.c:730:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1660: FILE: drivers/pci/msi.c:733:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1661: FILE: drivers/pci/msi.c:734:
+	if ((status = msix_capability_init(dev)) == -EINVAL)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1669: FILE: drivers/pci/msi.c:742:
+static int msi_free_vector(struct pci_dev* dev, int vector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1694: FILE: drivers/pci/msi.c:767:
+^I^I/* Bad driver, which do not call msi_free_vectors before exit. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1695: FILE: drivers/pci/msi.c:768:
+		/* Bad driver, which do not call msi_free_vectors before exit. 
+		   We must do a cleanup here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1695: FILE: drivers/pci/msi.c:768:
+		   We must do a cleanup here */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1710: FILE: drivers/pci/msi.c:783:
+static int msi_alloc_vector(struct pci_dev* dev, int head)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: drivers/pci/msi.c:786:
+^Istruct msg_address address; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1726: FILE: drivers/pci/msi.c:799:
+^Ibase = entry->mask_base; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1729: FILE: drivers/pci/msi.c:802:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1729: FILE: drivers/pci/msi.c:802:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: drivers/pci/msi.c:802:
+   ^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1730: FILE: drivers/pci/msi.c:803:
+^Idev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#1734: FILE: drivers/pci/msi.c:807:
+		if (!(low_address = readl(base + i * PCI_MSIX_ENTRY_SIZE)))
+			 break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1734: FILE: drivers/pci/msi.c:807:
+		if (!(low_address = readl(base + i * PCI_MSIX_ENTRY_SIZE)))

WARNING:TABSTOP: Statements should start on a tabstop
#1735: FILE: drivers/pci/msi.c:808:
+			 break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1737: FILE: drivers/pci/msi.c:810:
+^Iif (i >= dev_msi_cap) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1739: FILE: drivers/pci/msi.c:812:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1741: FILE: drivers/pci/msi.c:814:
+	if (!(entry = alloc_msi_entry()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: drivers/pci/msi.c:816:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1744: FILE: drivers/pci/msi.c:817:
+	if ((vector = get_new_vector()) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1753: FILE: drivers/pci/msi.c:826:
+^Ientry->mask_base = base; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1761: FILE: drivers/pci/msi.c:834:
+^Iwritel(address.lo_address.value, base + offset + $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1765: FILE: drivers/pci/msi.c:838:
+	writel(*(u32*)&data, base + offset + PCI_MSIX_ENTRY_DATA_OFFSET);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1768: FILE: drivers/pci/msi.c:841:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1772: FILE: drivers/pci/msi.c:845:
+static int msi_free_vector(struct pci_dev* dev, int vector)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1790: FILE: drivers/pci/msi.c:863:
+^I^Iif (entry->link.tail) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1791: FILE: drivers/pci/msi.c:864:
+^I^I^Imsi_desc[entry->link.tail]->link.head = entry->link.head; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1794: FILE: drivers/pci/msi.c:867:
+^Ivector_irq[vector] = 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1807: FILE: drivers/pci/msi.c:880:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1811: FILE: drivers/pci/msi.c:884:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: drivers/pci/msi.c:890:
+ * Allocate additional MSI-X vectors requested by device driver. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1819: FILE: drivers/pci/msi.c:892:
+ * structure with new allocated MSI-X vectors or non-zero for otherwise.  $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1821: FILE: drivers/pci/msi.c:894:
+int msi_alloc_vectors(struct pci_dev* dev, int *vector, int nvec)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1830: FILE: drivers/pci/msi.c:903:
+ ^I^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1830: FILE: drivers/pci/msi.c:903:
+ ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1830: FILE: drivers/pci/msi.c:903:
+ ^I^Ireturn -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1832: FILE: drivers/pci/msi.c:905:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1832: FILE: drivers/pci/msi.c:905:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: drivers/pci/msi.c:905:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1832: FILE: drivers/pci/msi.c:905:
+   	if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1833: FILE: drivers/pci/msi.c:906:
+ ^I^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1833: FILE: drivers/pci/msi.c:906:
+ ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1833: FILE: drivers/pci/msi.c:906:
+ ^I^Ireturn -EINVAL;$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1835: FILE: drivers/pci/msi.c:908:
+	dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), 			2, &control);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1835: FILE: drivers/pci/msi.c:908:
+^Idev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), ^I^I^I2, &control);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1842: FILE: drivers/pci/msi.c:915:
+^I   entry->msi_attrib.type != PCI_CAP_ID_MSIX || /* must be MSI-X */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1843: FILE: drivers/pci/msi.c:916:
+^I   entry->link.head != entry->link.tail) {^I/* already multi */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1851: FILE: drivers/pci/msi.c:924:
+^Ifree_vectors = pci_vector_resources(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1852: FILE: drivers/pci/msi.c:925:
+^I/* Ensure that each MSI/MSI-X device has one vector reserved by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1853: FILE: drivers/pci/msi.c:926:
+^I   default to avoid any MSI-X driver to take all available $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1853: FILE: drivers/pci/msi.c:926:
+	/* Ensure that each MSI/MSI-X device has one vector reserved by 
+	   default to avoid any MSI-X driver to take all available 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1854: FILE: drivers/pci/msi.c:927:
+ ^I   resources */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1854: FILE: drivers/pci/msi.c:927:
+ ^I   resources */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1854: FILE: drivers/pci/msi.c:927:
+ 	   resources */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1861: FILE: drivers/pci/msi.c:934:
+^Iif (nvec > free_vectors) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1867: FILE: drivers/pci/msi.c:940:
+^I^Iif ((vec = msi_alloc_vector(dev, head)) < 0) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1867: FILE: drivers/pci/msi.c:940:
+		if ((vec = msi_alloc_vector(dev, head)) < 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1889: FILE: drivers/pci/msi.c:962:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1895: FILE: drivers/pci/msi.c:968:
+ * Reclaim MSI-X vectors released by device driver to unused state, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1896: FILE: drivers/pci/msi.c:969:
+ * which may be used later on. A return of zero indicates the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1898: FILE: drivers/pci/msi.c:971:
+ * before calling function free_irq.  $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1900: FILE: drivers/pci/msi.c:973:
+int msi_free_vectors(struct pci_dev* dev, int *vector, int nvec)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1907: FILE: drivers/pci/msi.c:980:
+ ^I^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1907: FILE: drivers/pci/msi.c:980:
+ ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1907: FILE: drivers/pci/msi.c:980:
+ ^I^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1908: FILE: drivers/pci/msi.c:981:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1911: FILE: drivers/pci/msi.c:984:
+^Iif (!entry || entry->dev != dev || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1912: FILE: drivers/pci/msi.c:985:
+^I   ^Ientry->msi_attrib.type != PCI_CAP_ID_MSIX || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1912: FILE: drivers/pci/msi.c:985:
+^I   ^Ientry->msi_attrib.type != PCI_CAP_ID_MSIX || $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1912: FILE: drivers/pci/msi.c:985:
+^I   ^Ientry->msi_attrib.type != PCI_CAP_ID_MSIX || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1912: FILE: drivers/pci/msi.c:985:
+	if (!entry || entry->dev != dev || 
+	   	entry->msi_attrib.type != PCI_CAP_ID_MSIX || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1922: FILE: drivers/pci/msi.c:995:
+^I^Imsi_free_vector(dev, *(vector + i)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1931: FILE: drivers/pci/msi.c:1004:
+ * $

WARNING:TYPO_SPELLING: 'funciton' may be misspelled - perhaps 'function'?
#1932: FILE: drivers/pci/msi.c:1005:
+ * Being called during hotplug remove, from which the device funciton
                                                              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1933: FILE: drivers/pci/msi.c:1006:
+ * is hot-removed. All previous assigned MSI/MSI-X vectors, if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1936: FILE: drivers/pci/msi.c:1009:
+ **/ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1937: FILE: drivers/pci/msi.c:1010:
+void msi_remove_pci_irq_vectors(struct pci_dev* dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1944: FILE: drivers/pci/msi.c:1017:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1944: FILE: drivers/pci/msi.c:1017:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: drivers/pci/msi.c:1017:
+ ^I^Ireturn;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1945: FILE: drivers/pci/msi.c:1018:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1954: FILE: drivers/pci/msi.c:1027:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1962: FILE: drivers/pci/msi.c:1035:
+   ^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1962: FILE: drivers/pci/msi.c:1035:
+   ^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1962: FILE: drivers/pci/msi.c:1035:
+   ^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1963: FILE: drivers/pci/msi.c:1036:
+		dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), 			2, &control);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1963: FILE: drivers/pci/msi.c:1036:
+^I^Idev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), ^I^I^I2, &control);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1965: FILE: drivers/pci/msi.c:1038:
+^I^Idev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1968: FILE: drivers/pci/msi.c:1041:
+		phys_addr = pci_resource_start (dev, bir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1980: FILE: drivers/pci/msi.c:1053:
+		iounmap((void*)entry->mask_base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1982: FILE: drivers/pci/msi.c:1055:
+^I} $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1986: FILE: drivers/pci/msi.c:1059:
+EXPORT_SYMBOL(pci_enable_msi);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1987: FILE: drivers/pci/msi.c:1060:
+EXPORT_SYMBOL(msi_alloc_vectors);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1988: FILE: drivers/pci/msi.c:1061:
+EXPORT_SYMBOL(msi_free_vectors);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2007: FILE: drivers/pci/remove.c:17:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2007: FILE: drivers/pci/remove.c:17:
+ ^Imsi_remove_pci_irq_vectors(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2007: FILE: drivers/pci/remove.c:17:
+ ^Imsi_remove_pci_irq_vectors(dev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2008: FILE: drivers/pci/remove.c:18:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2008: FILE: drivers/pci/remove.c:18:
+ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2027: FILE: include/linux/pci.h:202:
+#define  PCI_CAP_ID_EXP ^I0x10^I/* PCI Express */$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2052: FILE: include/linux/pci.h:706:
+static inline int pci_enable_msi(struct pci_dev *dev) {return -1;}
                                                                 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2055: FILE: include/linux/pci.h:709:
+extern void pci_scan_msi_device(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2056: FILE: include/linux/pci.h:710:
+extern int pci_enable_msi(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2057: FILE: include/linux/pci.h:711:
+extern void msi_remove_pci_irq_vectors(struct pci_dev *dev);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2058: FILE: include/linux/pci.h:712:
+extern int msi_alloc_vectors(struct pci_dev* dev, int *vector, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2058: FILE: include/linux/pci.h:712:
+extern int msi_alloc_vectors(struct pci_dev* dev, int *vector, int nvec);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2059: FILE: include/linux/pci.h:713:
+extern int msi_free_vectors(struct pci_dev* dev, int *vector, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2059: FILE: include/linux/pci.h:713:
+extern int msi_free_vectors(struct pci_dev* dev, int *vector, int nvec);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2069: FILE: include/linux/pci_msi.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2070: FILE: include/linux/pci_msi.h:2:
+ *	../include/linux/pci_msi.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2081: FILE: include/linux/pci_msi.h:13:
+#define NR_RESERVED_VECTORS 3 /*FIRST_DEVICE_VECTOR,FIRST_SYSTEM_VECTOR,0x80 */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2083: FILE: include/linux/pci_msi.h:15:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2085: FILE: include/linux/pci_msi.h:17:
+ * ten. The worstcase is that each of these slots is hot-added with a device, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2091: FILE: include/linux/pci_msi.h:23:
+#define NR_HP_RESERVED_VECTORS ^I20$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2105: FILE: include/linux/pci_msi.h:37:
+static inline int get_ioapic_vector(struct pci_dev *dev) { return -1;}
                                                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2108: FILE: include/linux/pci_msi.h:40:
+extern void restore_ioapic_irq_handler(int irq);

CHECK:BIT_MACRO: Prefer using the BIT macro
#2115: FILE: include/linux/pci_msi.h:47:
+#define PCI_MSIX_FLAGS_ENABLE		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2117: FILE: include/linux/pci_msi.h:49:
+#define PCI_MSIX_FLAGS_BITMASK		(1 << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2125: FILE: include/linux/pci_msi.h:57:
+#define msi_control_reg(base)		(base + PCI_MSI_FLAGS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2126: FILE: include/linux/pci_msi.h:58:
+#define msi_lower_address_reg(base)	(base + PCI_MSI_ADDRESS_LO)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2127: FILE: include/linux/pci_msi.h:59:
+#define msi_upper_address_reg(base)	(base + PCI_MSI_ADDRESS_HI)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#2128: FILE: include/linux/pci_msi.h:60:
+#define msi_data_reg(base, is64bit)	\
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2128: FILE: include/linux/pci_msi.h:60:
+#define msi_data_reg(base, is64bit)	\
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'is64bit' may be better as '(is64bit)' to avoid precedence issues
#2128: FILE: include/linux/pci_msi.h:60:
+#define msi_data_reg(base, is64bit)	\
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2129: FILE: include/linux/pci_msi.h:61:
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2129: FILE: include/linux/pci_msi.h:61:
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )
 	                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2129: FILE: include/linux/pci_msi.h:61:
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2129: FILE: include/linux/pci_msi.h:61:
+	( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#2130: FILE: include/linux/pci_msi.h:62:
+#define msi_mask_bits_reg(base, is64bit) \
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2130: FILE: include/linux/pci_msi.h:62:
+#define msi_mask_bits_reg(base, is64bit) \
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'is64bit' may be better as '(is64bit)' to avoid precedence issues
#2130: FILE: include/linux/pci_msi.h:62:
+#define msi_mask_bits_reg(base, is64bit) \
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2131: FILE: include/linux/pci_msi.h:63:
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2131: FILE: include/linux/pci_msi.h:63:
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2131: FILE: include/linux/pci_msi.h:63:
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
 	                                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2131: FILE: include/linux/pci_msi.h:63:
+	( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2132: FILE: include/linux/pci_msi.h:64:
+#define msi_disable(control)		control &= ~PCI_MSI_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2132: FILE: include/linux/pci_msi.h:64:
+#define msi_disable(control)		control &= ~PCI_MSI_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2133: FILE: include/linux/pci_msi.h:65:
+#define multi_msi_capable(control) \
+	(1 << ((control & PCI_MSI_FLAGS_QMASK) >> 1))

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2135: FILE: include/linux/pci_msi.h:67:
+#define multi_msi_enable(control, num) \
+	control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2135: FILE: include/linux/pci_msi.h:67:
+#define multi_msi_enable(control, num) \
+	control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'num' may be better as '(num)' to avoid precedence issues
#2135: FILE: include/linux/pci_msi.h:67:
+#define multi_msi_enable(control, num) \
+	control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2135: FILE: include/linux/pci_msi.h:67:
+#define multi_msi_enable(control, num) \
+	control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2137: FILE: include/linux/pci_msi.h:69:
+#define is_64bit_address(control)^I(control & PCI_MSI_FLAGS_64BIT)^I$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2137: FILE: include/linux/pci_msi.h:69:
+#define is_64bit_address(control)	(control & PCI_MSI_FLAGS_64BIT)	

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2138: FILE: include/linux/pci_msi.h:70:
+#define is_mask_bit_support(control)	(control & PCI_MSI_FLAGS_MASKBIT)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2139: FILE: include/linux/pci_msi.h:71:
+#define msi_enable(control, num) multi_msi_enable(control, num); \
+	control |= PCI_MSI_FLAGS_ENABLE

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'control' - possible side-effects?
#2139: FILE: include/linux/pci_msi.h:71:
+#define msi_enable(control, num) multi_msi_enable(control, num); \
+	control |= PCI_MSI_FLAGS_ENABLE

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2141: FILE: include/linux/pci_msi.h:73:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2141: FILE: include/linux/pci_msi.h:73:
+ $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2143: FILE: include/linux/pci_msi.h:75:
+#define msix_table_offset_reg(base)	(base + 0x04)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#2144: FILE: include/linux/pci_msi.h:76:
+#define msix_pba_offset_reg(base)	(base + 0x08)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2145: FILE: include/linux/pci_msi.h:77:
+#define msix_enable(control)^I ^Icontrol |= PCI_MSIX_FLAGS_ENABLE$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2145: FILE: include/linux/pci_msi.h:77:
+#define msix_enable(control)	 	control |= PCI_MSIX_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2145: FILE: include/linux/pci_msi.h:77:
+#define msix_enable(control)	 	control |= PCI_MSIX_FLAGS_ENABLE

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2146: FILE: include/linux/pci_msi.h:78:
+#define msix_disable(control)^I ^Icontrol &= ~PCI_MSIX_FLAGS_ENABLE$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2146: FILE: include/linux/pci_msi.h:78:
+#define msix_disable(control)	 	control &= ~PCI_MSIX_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2146: FILE: include/linux/pci_msi.h:78:
+#define msix_disable(control)	 	control &= ~PCI_MSIX_FLAGS_ENABLE

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2147: FILE: include/linux/pci_msi.h:79:
+#define msix_table_size(control) ^I((control & PCI_MSIX_FLAGS_QSIZE)+1)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2147: FILE: include/linux/pci_msi.h:79:
+#define msix_table_size(control) 	((control & PCI_MSIX_FLAGS_QSIZE)+1)
                                  	                                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#2147: FILE: include/linux/pci_msi.h:79:
+#define msix_table_size(control) 	((control & PCI_MSIX_FLAGS_QSIZE)+1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2149: FILE: include/linux/pci_msi.h:81:
+#define msix_unmask(address)^I ^I(address & ~PCI_MSIX_FLAGS_BITMASK)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#2149: FILE: include/linux/pci_msi.h:81:
+#define msix_unmask(address)	 	(address & ~PCI_MSIX_FLAGS_BITMASK)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2150: FILE: include/linux/pci_msi.h:82:
+#define msix_mask(address)^I^I(address | PCI_MSIX_FLAGS_BITMASK)  $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#2150: FILE: include/linux/pci_msi.h:82:
+#define msix_mask(address)		(address | PCI_MSIX_FLAGS_BITMASK)  

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2151: FILE: include/linux/pci_msi.h:83:
+#define msix_is_pending(address) ^I(address & PCI_MSIX_FLAGS_PENDMASK)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#2151: FILE: include/linux/pci_msi.h:83:
+#define msix_is_pending(address) 	(address & PCI_MSIX_FLAGS_PENDMASK)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2154: FILE: include/linux/pci_msi.h:86:
+#define _DEFINE_DBG_BUFFER	char __dbg_str_buf[256];

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000001' could be '0x00000001U'
#2155: FILE: include/linux/pci_msi.h:87:
+#define _DBG_K_TRACE_ENTRY	((unsigned int)0x00000001)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000002' could be '0x00000002U'
#2156: FILE: include/linux/pci_msi.h:88:
+#define _DBG_K_TRACE_EXIT	((unsigned int)0x00000002)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000004' could be '0x00000004U'
#2157: FILE: include/linux/pci_msi.h:89:
+#define _DBG_K_INFO		((unsigned int)0x00000004)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000008' could be '0x00000008U'
#2158: FILE: include/linux/pci_msi.h:90:
+#define _DBG_K_ERROR		((unsigned int)0x00000008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2162: FILE: include/linux/pci_msi.h:94:
+#define _DBG_PRINT( dbg_flags, args... )		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2162: FILE: include/linux/pci_msi.h:94:
+#define _DBG_PRINT( dbg_flags, args... )		\

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#2162: FILE: include/linux/pci_msi.h:94:
+#define _DBG_PRINT( dbg_flags, args... )		\
+if ( _DEBUG_LEVEL & (dbg_flags) )			\
+{							\
+	int len;					\
+	len = sprintf(__dbg_str_buf, "%s:%d: %s ", 	\
+		__FILE__, __LINE__, __FUNCTION__ ); 	\
+	sprintf(__dbg_str_buf + len, args);		\
+	printk(KERN_INFO "%s\n", __dbg_str_buf);	\
+}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2163: FILE: include/linux/pci_msi.h:95:
+if ( _DEBUG_LEVEL & (dbg_flags) )			\
+{							\

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#2163: FILE: include/linux/pci_msi.h:95:
+if ( _DEBUG_LEVEL & (dbg_flags) )			\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2163: FILE: include/linux/pci_msi.h:95:
+if ( _DEBUG_LEVEL & (dbg_flags) )			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2166: FILE: include/linux/pci_msi.h:98:
+^Ilen = sprintf(__dbg_str_buf, "%s:%d: %s ", ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2167: FILE: include/linux/pci_msi.h:99:
+^I^I__FILE__, __LINE__, __FUNCTION__ ); ^I\$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2167: FILE: include/linux/pci_msi.h:99:
+		__FILE__, __LINE__, __FUNCTION__ ); 	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2167: FILE: include/linux/pci_msi.h:99:
+		__FILE__, __LINE__, __FUNCTION__ ); 	\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2169: FILE: include/linux/pci_msi.h:101:
+	printk(KERN_INFO "%s\n", __dbg_str_buf);	\

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2172: FILE: include/linux/pci_msi.h:104:
+#define MSI_FUNCTION_TRACE_ENTER	\
+	_DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2172: FILE: include/linux/pci_msi.h:104:
+#define MSI_FUNCTION_TRACE_ENTER	\
+	_DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2173: FILE: include/linux/pci_msi.h:105:
+	_DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2174: FILE: include/linux/pci_msi.h:106:
+#define MSI_FUNCTION_TRACE_EXIT		\
+	_DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2174: FILE: include/linux/pci_msi.h:106:
+#define MSI_FUNCTION_TRACE_EXIT		\
+	_DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2175: FILE: include/linux/pci_msi.h:107:
+	_DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2176: FILE: include/linux/pci_msi.h:108:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2197: FILE: include/linux/pci_msi.h:129:
+#if defined(__LITTLE_ENDIAN_BITFIELD)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2198: FILE: include/linux/pci_msi.h:130:
+^I__u32^Ivector^I^I:  8;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2201: FILE: include/linux/pci_msi.h:133:
+^I__u32^Ilevel^I^I:  1;^I/* 0: deassert | 1: assert */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2202: FILE: include/linux/pci_msi.h:134:
+^I__u32^Itrigger^I^I:  1;^I/* 0: edge | 1: level */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2204: FILE: include/linux/pci_msi.h:136:
+#elif defined(__BIG_ENDIAN_BITFIELD)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2206: FILE: include/linux/pci_msi.h:138:
+^I__u32^Itrigger^I^I:  1;^I/* 0: edge | 1: level */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2207: FILE: include/linux/pci_msi.h:139:
+^I__u32^Ilevel^I^I:  1;^I/* 0: deassert | 1: assert */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2210: FILE: include/linux/pci_msi.h:142:
+^I__u32^Ivector^I^I:  8;^I^I$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2214: FILE: include/linux/pci_msi.h:146:
+} __attribute__ ((packed));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2218: FILE: include/linux/pci_msi.h:150:
+^I^Istruct { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2219: FILE: include/linux/pci_msi.h:151:
+#if defined(__LITTLE_ENDIAN_BITFIELD)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2220: FILE: include/linux/pci_msi.h:152:
+^I^I^I__u32^Ireserved_1^I:  2;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2222: FILE: include/linux/pci_msi.h:154:
+^I^I^I__u32^Iredirection_hint:  1;  ^I/*0: dedicated CPU $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2222: FILE: include/linux/pci_msi.h:154:
+^I^I^I__u32^Iredirection_hint:  1;  ^I/*0: dedicated CPU $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2223: FILE: include/linux/pci_msi.h:155:
+			__u32	redirection_hint:  1;  	/*0: dedicated CPU 
+							  1: lowest priority */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2223: FILE: include/linux/pci_msi.h:155:
+							  1: lowest priority */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2224: FILE: include/linux/pci_msi.h:156:
+^I^I^I__u32^Ireserved_2^I:  4;   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2224: FILE: include/linux/pci_msi.h:156:
+^I^I^I__u32^Ireserved_2^I:  4;   ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2225: FILE: include/linux/pci_msi.h:157:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2225: FILE: include/linux/pci_msi.h:157:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2225: FILE: include/linux/pci_msi.h:157:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2226: FILE: include/linux/pci_msi.h:158:
+#elif defined(__BIG_ENDIAN_BITFIELD)^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2227: FILE: include/linux/pci_msi.h:159:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2227: FILE: include/linux/pci_msi.h:159:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2227: FILE: include/linux/pci_msi.h:159:
+ ^I^I^I__u32^Idest_id^I^I: 24;^I/* Destination ID */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2228: FILE: include/linux/pci_msi.h:160:
+^I^I^I__u32^Ireserved_2^I:  4;   ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2228: FILE: include/linux/pci_msi.h:160:
+^I^I^I__u32^Ireserved_2^I:  4;   ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2229: FILE: include/linux/pci_msi.h:161:
+^I^I^I__u32^Iredirection_hint:  1;  ^I/*0: dedicated CPU $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2229: FILE: include/linux/pci_msi.h:161:
+^I^I^I__u32^Iredirection_hint:  1;  ^I/*0: dedicated CPU $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2230: FILE: include/linux/pci_msi.h:162:
+			__u32	redirection_hint:  1;  	/*0: dedicated CPU 
+							  1: lowest priority */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2230: FILE: include/linux/pci_msi.h:162:
+							  1: lowest priority */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2232: FILE: include/linux/pci_msi.h:164:
+^I^I^I__u32^Ireserved_1^I:  2;^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2236: FILE: include/linux/pci_msi.h:168:
+      ^I^I}u;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2236: FILE: include/linux/pci_msi.h:168:
+      ^I^I}u;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2236: FILE: include/linux/pci_msi.h:168:
+      ^I^I}u;$

ERROR:SPACING: space required after that close brace '}'
#2236: FILE: include/linux/pci_msi.h:168:
+      		}u;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2237: FILE: include/linux/pci_msi.h:169:
+       ^I^I__u32  value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2237: FILE: include/linux/pci_msi.h:169:
+       ^I^I__u32  value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2237: FILE: include/linux/pci_msi.h:169:
+       ^I^I__u32  value;$

ERROR:SPACING: space required after that close brace '}'
#2238: FILE: include/linux/pci_msi.h:170:
+	}lo_address;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2239: FILE: include/linux/pci_msi.h:171:
+^I__u32 ^Ihi_address;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2240: FILE: include/linux/pci_msi.h:172:
+} __attribute__ ((packed));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2243: FILE: include/linux/pci_msi.h:175:
+^Istruct { ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2243: FILE: include/linux/pci_msi.h:175:
+^Istruct { ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2244: FILE: include/linux/pci_msi.h:176:
+^I^I__u8^Itype^I: 5; ^I/* {0: unused, 5h:MSI, 11h:MSI-X} */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2245: FILE: include/linux/pci_msi.h:177:
+^I^I__u8^Imaskbit^I: 1; ^I/* mask-pending bit supported ?   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2246: FILE: include/linux/pci_msi.h:178:
+^I^I__u8^Ireserved: 2; ^I/* reserved^I^I^I  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2247: FILE: include/linux/pci_msi.h:179:
+^I^I__u8^Ientry_nr;    ^I/* specific enabled entry ^I  */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2248: FILE: include/linux/pci_msi.h:180:
+^I^I__u8^Idefault_vector; /* default pre-assigned vector    */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2249: FILE: include/linux/pci_msi.h:181:
+^I^I__u8^Icurrent_cpu; ^I/* current destination cpu^I  */$

ERROR:SPACING: space required after that close brace '}'
#2250: FILE: include/linux/pci_msi.h:182:
+	}msi_attrib;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2253: FILE: include/linux/pci_msi.h:185:
+^I^I__u16^Ihead; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2254: FILE: include/linux/pci_msi.h:186:
+^I^I__u16^Itail; $

ERROR:SPACING: space required after that close brace '}'
#2255: FILE: include/linux/pci_msi.h:187:
+	}link;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332526.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 423 errors, 185 warnings, 59 checks, 2132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332526.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
