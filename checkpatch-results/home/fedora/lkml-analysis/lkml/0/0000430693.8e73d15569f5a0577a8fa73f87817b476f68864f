WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -urpN linux-2.5.38/include/linux/adeos.h linux-2.5.38-adeos/include/linux/adeos.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: include/linux/adeos.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#60: FILE: include/linux/adeos.h:2:
+ *   include/linux/adeos.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: include/linux/adeos.h:8:
+ *   the Free Software Foundation, Inc., 675 Mass Ave, Cambridge MA 02139,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#76: FILE: include/linux/adeos.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: include/linux/adeos.h:19:
+ *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: include/linux/adeos.h:48:
+#define IPIPE_HANDLE_MASK    (1 << IPIPE_HANDLE_FLAG)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: include/linux/adeos.h:49:
+#define IPIPE_PASS_MASK      (1 << IPIPE_PASS_FLAG)

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: include/linux/adeos.h:50:
+#define IPIPE_CALLASM_MASK   (1 << IPIPE_CALLASM_FLAG)

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: include/linux/adeos.h:51:
+#define IPIPE_ENABLE_MASK    (1 << IPIPE_ENABLE_FLAG)

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: include/linux/adeos.h:53:
+#define IPIPE_EXCLUSIVE_MASK (1 << IPIPE_EXCLUSIVE_FLAG)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#113: FILE: include/linux/adeos.h:55:
+#define IPIPE_DEFAULT_MASK  (IPIPE_HANDLE_MASK|IPIPE_PASS_MASK)
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#115: FILE: include/linux/adeos.h:57:
+typedef struct adattr {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#116: FILE: include/linux/adeos.h:58:
+typedef struct adattr {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: include/linux/adeos.h:59:
+    unsigned domid;^I^I/* Domain identifier -- Magic value set by caller */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#117: FILE: include/linux/adeos.h:59:
+    unsigned domid;		/* Domain identifier -- Magic value set by caller */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/linux/adeos.h:60:
+    const char *name;^I^I/* Domain name -- Warning: won't be dup'ed! */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/adeos.h:61:
+    int priority;^I^I/* Priority in interrupt pipeline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/linux/adeos.h:62:
+    void (*entry)(void);^I/* Domain entry point */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/linux/adeos.h:63:
+    int estacksz;^I^I/* Stack size for entry context -- 0 means unspec */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/linux/adeos.h:64:
+    void (*dswitch)(void);^I/* Handler called each time the domain is switched in */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/linux/adeos.h:65:
+    int nptdkeys;^I^I/* Max. number of per-thread data keys */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/adeos.h:66:
+    void (*ptdset)(int,void *);^I/* Routine to set pt values */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#124: FILE: include/linux/adeos.h:66:
+    void (*ptdset)(int,void *);	/* Routine to set pt values */
                       ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#124: FILE: include/linux/adeos.h:66:
+    void (*ptdset)(int,void *);	/* Routine to set pt values */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#124: FILE: include/linux/adeos.h:66:
+    void (*ptdset)(int,void *);	/* Routine to set pt values */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: include/linux/adeos.h:67:
+    void *(*ptdget)(int);^I/* Routine to get pt values */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#125: FILE: include/linux/adeos.h:67:
+    void *(*ptdget)(int);	/* Routine to get pt values */

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: include/linux/adeos.h:72:
+                 *adp_root;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/linux/adeos.h:72:
+                 *adp_root;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: include/linux/adeos.h:86:
+int adeos_virtualize_irq(unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: include/linux/adeos.h:87:
+			 void (*handler)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: include/linux/adeos.h:88:
+			 int (*acknowledge)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: include/linux/adeos.h:89:
+			 unsigned modemask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#149: FILE: include/linux/adeos.h:91:
+int adeos_control_irq(unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: include/linux/adeos.h:92:
+		      unsigned clrmask,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: include/linux/adeos.h:93:
+		      unsigned setmask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#153: FILE: include/linux/adeos.h:95:
+int FASTCALL(adeos_propagate_irq(unsigned irq));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: include/linux/adeos.h:97:
+unsigned adeos_alloc_irq(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#157: FILE: include/linux/adeos.h:99:
+int adeos_free_irq(unsigned irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#159: FILE: include/linux/adeos.h:101:
+int FASTCALL(adeos_trigger_irq(unsigned irq));

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#165: FILE: include/linux/adeos.h:107:
+static inline void adeos_stall_ipipe_from (adomain_t *adp) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: include/linux/adeos.h:107:
+static inline void adeos_stall_ipipe_from (adomain_t *adp) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#166: FILE: include/linux/adeos.h:108:
+static inline void adeos_stall_ipipe_from (adomain_t *adp) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/adeos.h:109:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/adeos.h:110:
+    set_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#168: FILE: include/linux/adeos.h:110:
+    set_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#168: FILE: include/linux/adeos.h:110:
+    set_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
                              ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#175: FILE: include/linux/adeos.h:117:
+static inline unsigned long adeos_test_ipipe_from (adomain_t *adp) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#175: FILE: include/linux/adeos.h:117:
+static inline unsigned long adeos_test_ipipe_from (adomain_t *adp) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#176: FILE: include/linux/adeos.h:118:
+static inline unsigned long adeos_test_ipipe_from (adomain_t *adp) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/linux/adeos.h:119:
+    return test_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#177: FILE: include/linux/adeos.h:119:
+    return test_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);
                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#177: FILE: include/linux/adeos.h:119:
+    return test_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);
                                      ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#180: FILE: include/linux/adeos.h:122:
+static inline unsigned long adeos_test_ipipe (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: include/linux/adeos.h:122:
+static inline unsigned long adeos_test_ipipe (void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#181: FILE: include/linux/adeos.h:123:
+static inline unsigned long adeos_test_ipipe (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: include/linux/adeos.h:124:
+    return adeos_test_ipipe_from(adp_current);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#185: FILE: include/linux/adeos.h:127:
+static inline unsigned long adeos_test_and_stall_ipipe_from (adomain_t *adp) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: include/linux/adeos.h:127:
+static inline unsigned long adeos_test_and_stall_ipipe_from (adomain_t *adp) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: include/linux/adeos.h:128:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/linux/adeos.h:128:
+    $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#186: FILE: include/linux/adeos.h:128:
+static inline unsigned long adeos_test_and_stall_ipipe_from (adomain_t *adp) {
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: include/linux/adeos.h:129:
+    return test_and_set_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#187: FILE: include/linux/adeos.h:129:
+    return test_and_set_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);
                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#187: FILE: include/linux/adeos.h:129:
+    return test_and_set_bit(IPIPE_STALL_FLAG,&adp->cpudata[adeos_processor_id()].status);
                                              ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#190: FILE: include/linux/adeos.h:132:
+static inline unsigned long adeos_test_and_stall_ipipe (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: include/linux/adeos.h:132:
+static inline unsigned long adeos_test_and_stall_ipipe (void) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: include/linux/adeos.h:133:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: include/linux/adeos.h:133:
+    $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#191: FILE: include/linux/adeos.h:133:
+static inline unsigned long adeos_test_and_stall_ipipe (void) {
+    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: include/linux/adeos.h:134:
+    return adeos_test_and_stall_ipipe_from(adp_current);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#195: FILE: include/linux/adeos.h:137:
+static inline void adeos_restore_ipipe_from (adomain_t *adp, unsigned long flags) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: include/linux/adeos.h:137:
+static inline void adeos_restore_ipipe_from (adomain_t *adp, unsigned long flags) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#196: FILE: include/linux/adeos.h:138:
+static inline void adeos_restore_ipipe_from (adomain_t *adp, unsigned long flags) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/linux/adeos.h:139:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: include/linux/adeos.h:141:
+    if (flags)$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#200: FILE: include/linux/adeos.h:142:
+	set_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
 	                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#200: FILE: include/linux/adeos.h:142:
+	set_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
 	                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/linux/adeos.h:143:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: include/linux/adeos.h:143:
+    else
+	{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#203: FILE: include/linux/adeos.h:145:
+	clear_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#203: FILE: include/linux/adeos.h:145:
+	clear_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
 	                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#205: FILE: include/linux/adeos.h:147:
+	if (adp == adp_current &&
[...]
+	    ipipe_sync_irqs();

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#211: FILE: include/linux/adeos.h:153:
+static inline void adeos_restore_ipipe (unsigned long flags) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: include/linux/adeos.h:153:
+static inline void adeos_restore_ipipe (unsigned long flags) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#212: FILE: include/linux/adeos.h:154:
+static inline void adeos_restore_ipipe (unsigned long flags) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/linux/adeos.h:155:
+    adeos_restore_ipipe_from(adp_current,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: include/linux/adeos.h:155:
+    adeos_restore_ipipe_from(adp_current,flags);
                                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: include/linux/adeos.h:158:
+int adeos_catch_event(unsigned event,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#219: FILE: include/linux/adeos.h:161:
+static inline void adeos_propagate_event(adevinfo_t *evinfo) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#220: FILE: include/linux/adeos.h:162:
+static inline void adeos_propagate_event(adevinfo_t *evinfo) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/adeos.h:163:
+    evinfo->propagate = 1;$

WARNING:TYPO_SPELLING: 'ptd' may be misspelled - perhaps 'pdf'?
#263: FILE: include/linux/init_task.h:103:
+        .ptd            = { [ 0 ... ADEOS_ROOT_NPTDKEYS - 1] = 0 },     \
          ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: include/linux/init_task.h:103:
+        .ptd            = { [ 0 ... ADEOS_ROOT_NPTDKEYS - 1] = 0 },     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: include/linux/init_task.h:103:
+        .ptd            = { [ 0 ... ADEOS_ROOT_NPTDKEYS - 1] = 0 },     \$

ERROR:SPACING: space prohibited after that open square bracket '['
#263: FILE: include/linux/init_task.h:103:
+        .ptd            = { [ 0 ... ADEOS_ROOT_NPTDKEYS - 1] = 0 },     \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tsk' - possible side-effects?
#268: FILE: include/linux/init_task.h:108:
+#define INIT_TASK(tsk)	\
+{									\
+	.state		= 0,						\
+	.thread_info	= &init_thread_info,				\
+	.flags		= 0,						\
+	.lock_depth	= -1,						\
+	.prio		= MAX_PRIO-20,					\
+	.static_prio	= MAX_PRIO-20,					\
+	.policy		= SCHED_NORMAL,					\
+	.cpus_allowed	= -1,						\
+	.mm		= NULL,						\
+	.active_mm	= &init_mm,					\
+	.run_list	= LIST_HEAD_INIT(tsk.run_list),			\
+	.time_slice	= HZ,						\
+	.tasks		= LIST_HEAD_INIT(tsk.tasks),			\
+	.ptrace_children= LIST_HEAD_INIT(tsk.ptrace_children),		\
+	.ptrace_list	= LIST_HEAD_INIT(tsk.ptrace_list),		\
+	.real_parent	= &tsk,						\
+	.parent		= &tsk,						\
+	.children	= LIST_HEAD_INIT(tsk.children),			\
+	.sibling	= LIST_HEAD_INIT(tsk.sibling),			\
+	.group_leader	= &tsk,						\
+	.thread_group	= LIST_HEAD_INIT(tsk.thread_group),		\
+	.wait_chldexit	= __WAIT_QUEUE_HEAD_INITIALIZER(tsk.wait_chldexit),\
+	.real_timer	= {						\
+		.function	= it_real_fn				\
+	},								\
+	.cap_effective	= CAP_INIT_EFF_SET,				\
+	.cap_inheritable = CAP_INIT_INH_SET,				\
+	.cap_permitted	= CAP_FULL_SET,					\
+	.keep_capabilities = 0,						\
+	.rlim		= INIT_RLIMITS,					\
+	.user		= INIT_USER,					\
+	.comm		= "swapper",					\
+	.thread		= INIT_THREAD,					\
+	.fs		= &init_fs,					\
+	.files		= &init_files,					\
+	.sigmask_lock	= SPIN_LOCK_UNLOCKED,				\
+	.sig		= &init_signals,				\
+	.pending	= { NULL, &tsk.pending.head, {{0}}},		\
+	.blocked	= {{0}},					\
+	.alloc_lock	= SPIN_LOCK_UNLOCKED,				\
+	.switch_lock	= SPIN_LOCK_UNLOCKED,				\
+	.journal_info	= NULL,						\
+}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#274: FILE: include/linux/init_task.h:114:
+	.prio		= MAX_PRIO-20,					\
 	     		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: include/linux/init_task.h:115:
+	.static_prio	= MAX_PRIO-20,					\
 	            	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#283: FILE: include/linux/init_task.h:123:
+	.ptrace_children= LIST_HEAD_INIT(tsk.ptrace_children),		\
 	                ^

WARNING:TYPO_SPELLING: 'ptd' may be misspelled - perhaps 'pdf'?
#326: FILE: include/linux/sched.h:403:
+        void *ptd[ADEOS_ROOT_NPTDKEYS];
               ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: include/linux/sched.h:403:
+        void *ptd[ADEOS_ROOT_NPTDKEYS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: include/linux/sched.h:403:
+        void *ptd[ADEOS_ROOT_NPTDKEYS];$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#379: FILE: kernel/adeos.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#380: FILE: kernel/adeos.c:2:
+ *   linux/kernel/adeos.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#386: FILE: kernel/adeos.c:8:
+ *   the Free Software Foundation, Inc., 675 Mass Ave, Cambridge MA 02139,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#396: FILE: kernel/adeos.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#397: FILE: kernel/adeos.c:19:
+ *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:SPACING: space prohibited after that open square bracket '['
#414: FILE: kernel/adeos.c:36:
+adomain_t *adp_cpu_current[ADEOS_NR_CPUS] = { [ 0 ... ADEOS_NR_CPUS - 1] = &adeos_root_domain };

ERROR:SPACING: space prohibited after that open square bracket '['
#423: FILE: kernel/adeos.c:45:
+int __adeos_event_monitors[ADEOS_NR_EVENTS] = { [ 0 ... ADEOS_NR_EVENTS - 1] = 0 };

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#429: FILE: kernel/adeos.c:51:
+/* adeos_init() -- Initialization routine of the ADEOS layer. Called
+   by the host kernel early during the boot procedure. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#429: FILE: kernel/adeos.c:51:
+   by the host kernel early during the boot procedure. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: kernel/adeos.c:53:
+void __adeos_init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: kernel/adeos.c:56:
+    adattr_t attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: kernel/adeos.c:58:
+    printk("ADEOS %s enabled.\n",ADEOS_VERSION_STRING);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#436: FILE: kernel/adeos.c:58:
+    printk("ADEOS %s enabled.\n",ADEOS_VERSION_STRING);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: kernel/adeos.c:58:
+    printk("ADEOS %s enabled.\n",ADEOS_VERSION_STRING);
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: kernel/adeos.c:60:
+    INIT_LIST_HEAD(&adeos_pipeline);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: kernel/adeos.c:61:
+    __adeos_online_cpus = smp_num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: kernel/adeos.c:63:
+    attr.domid = ADEOS_ROOT_ID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: kernel/adeos.c:64:
+    attr.name = "Linux";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: kernel/adeos.c:65:
+    attr.entry = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: kernel/adeos.c:66:
+    attr.priority = ADEOS_ROOT_PRI;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: kernel/adeos.c:67:
+    attr.estacksz = 0;^I/* Unused. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: kernel/adeos.c:68:
+    attr.dswitch = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: kernel/adeos.c:69:
+    attr.nptdkeys = ADEOS_ROOT_NPTDKEYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: kernel/adeos.c:70:
+    attr.ptdset = &__adeos_set_root_ptd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: kernel/adeos.c:71:
+    attr.ptdget = &__adeos_get_root_ptd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: kernel/adeos.c:73:
+    adeos_register_domain(&adeos_root_domain,&attr);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#451: FILE: kernel/adeos.c:73:
+    adeos_register_domain(&adeos_root_domain,&attr);
                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#451: FILE: kernel/adeos.c:73:
+    adeos_register_domain(&adeos_root_domain,&attr);
                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: kernel/adeos.c:82:
+static int __adeos_read_proc (char *page,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: kernel/adeos.c:89:
+    struct list_head *pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: kernel/adeos.c:90:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: kernel/adeos.c:91:
+    char *p = page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: kernel/adeos.c:92:
+    int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/adeos.c:94:
+    p += sprintf(p,"Prio\tID\t\tDomain\n\n");$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: kernel/adeos.c:94:
+    p += sprintf(p,"Prio\tID\t\tDomain\n\n");
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/adeos.c:96:
+    ipipe_hw_save_flags_and_cli(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: kernel/adeos.c:98:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#476: FILE: kernel/adeos.c:98:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#476: FILE: kernel/adeos.c:98:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: kernel/adeos.c:99:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: kernel/adeos.c:99:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: kernel/adeos.c:99:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: kernel/adeos.c:99:
+    	adomain_t *adp = list_entry(pos,adomain_t,link);
     	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: kernel/adeos.c:99:
+    	adomain_t *adp = list_entry(pos,adomain_t,link);
     	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: kernel/adeos.c:100:
+	p += sprintf(p," %d\t0x%.8x\t%s\n",
 	              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: kernel/adeos.c:104:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: kernel/adeos.c:106:
+    ipipe_hw_restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: kernel/adeos.c:108:
+    len = p - page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: kernel/adeos.c:110:
+    if (len <= off + count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/adeos.c:113:
+    *start = page + off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: kernel/adeos.c:115:
+    len -= off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/adeos.c:117:
+    if (len > count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/adeos.c:120:
+    if (len < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: kernel/adeos.c:123:
+    return len;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#504: FILE: kernel/adeos.c:126:
+void __adeos_init_proc (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: kernel/adeos.c:126:
+void __adeos_init_proc (void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#505: FILE: kernel/adeos.c:127:
+void __adeos_init_proc (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: kernel/adeos.c:128:
+    adeos_proc_entry = create_proc_read_entry("adeos",$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#516: FILE: kernel/adeos.c:138:
+/* adeos_register_domain() -- Add a new domain to the system. All
+   client domains must call this routine to register themselves to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: kernel/adeos.c:139:
+   ADEOS before using its services. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#519: FILE: kernel/adeos.c:141:
+int adeos_register_domain (adomain_t *adp, adattr_t *attr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: kernel/adeos.c:144:
+    struct list_head *pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: kernel/adeos.c:145:
+    unsigned long flags;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#524: FILE: kernel/adeos.c:146:
+    unsigned long flags;
+    ipipe_declare_cpuid;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/adeos.c:146:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/adeos.c:147:
+    int n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/adeos.c:149:
+    if (adp_current != adp_root)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#527: FILE: kernel/adeos.c:149:
+    if (adp_current != adp_root)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#529: FILE: kernel/adeos.c:151:
+	printk(KERN_WARNING "ADEOS: Only the root domain may register a new domain.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/adeos.c:155:
+    for (n = 0; n < ADEOS_NR_CPUS; n++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#533: FILE: kernel/adeos.c:155:
+    for (n = 0; n < ADEOS_NR_CPUS; n++)
+	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#538: FILE: kernel/adeos.c:160:
+	/* A special case for domains who won't process events. We
+	   need to act as if they had suspended themselves. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#538: FILE: kernel/adeos.c:160:
+	   need to act as if they had suspended themselves. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#540: FILE: kernel/adeos.c:162:
+	if (attr->entry == NULL && adp != adp_root)
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!attr->entry"
#540: FILE: kernel/adeos.c:162:
+	if (attr->entry == NULL && adp != adp_root)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxO)
#541: FILE: kernel/adeos.c:163:
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#541: FILE: kernel/adeos.c:163:
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);
 	                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#545: FILE: kernel/adeos.c:167:
+    /* A special case for domains who won't process events (i.e. no
+       entry). We have to mark them as suspended so that

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#548: FILE: kernel/adeos.c:170:
+       situation since they have no stack context... :o> */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: kernel/adeos.c:172:
+    if (attr->entry == NULL && adp != adp_root)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!attr->entry"
#550: FILE: kernel/adeos.c:172:
+    if (attr->entry == NULL && adp != adp_root)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#551: FILE: kernel/adeos.c:173:
+	for (n = 0; n < ADEOS_NR_CPUS; n++)
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#552: FILE: kernel/adeos.c:174:
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#552: FILE: kernel/adeos.c:174:
+	    set_bit(IPIPE_SLEEP_FLAG,&adp->cpudata[n].status);
 	                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: kernel/adeos.c:176:
+    adp->name = attr->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/adeos.c:177:
+    adp->priority = attr->priority;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/adeos.c:178:
+    adp->domid = attr->domid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/adeos.c:179:
+    adp->dswitch = attr->dswitch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: kernel/adeos.c:180:
+    adp->ptd_setfun = attr->ptdset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: kernel/adeos.c:181:
+    adp->ptd_getfun = attr->ptdget;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: kernel/adeos.c:182:
+    adp->ptd_keymap = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: kernel/adeos.c:183:
+    adp->ptd_keycount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/adeos.c:184:
+    adp->ptd_keymax = attr->nptdkeys;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/adeos.c:186:
+    for (n = 0; n < ADEOS_NR_EVENTS; n++)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#566: FILE: kernel/adeos.c:188:
+	/* Event handlers must be cleared before the i-pipe stage is
+	   inserted since an exception may occur on behalf of the new

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#567: FILE: kernel/adeos.c:189:
+	   emerging domain. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: kernel/adeos.c:192:
+    if (attr->entry != NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "attr->entry"
#570: FILE: kernel/adeos.c:192:
+    if (attr->entry != NULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#571: FILE: kernel/adeos.c:193:
+	__adeos_bootstrap_domain(adp,attr);
 	                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: kernel/adeos.c:195:
+    printk("ADEOS: Domain %s registered.\n",adp->name);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#573: FILE: kernel/adeos.c:195:
+    printk("ADEOS: Domain %s registered.\n",adp->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: kernel/adeos.c:195:
+    printk("ADEOS: Domain %s registered.\n",adp->name);
                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#576: FILE: kernel/adeos.c:198:
+    /* Insert the domain in the interrupt pipeline last, so it won't
+       be resumed for processing interrupts until it has a valid stack

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#577: FILE: kernel/adeos.c:199:
+       context. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/adeos.c:201:
+    ipipe_init_stage(adp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/adeos.c:203:
+    INIT_LIST_HEAD(&adp->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: kernel/adeos.c:205:
+    flags = __adeos_critical_enter(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/adeos.c:207:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#585: FILE: kernel/adeos.c:207:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#585: FILE: kernel/adeos.c:207:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: kernel/adeos.c:208:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#586: FILE: kernel/adeos.c:208:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: kernel/adeos.c:208:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: kernel/adeos.c:208:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: kernel/adeos.c:208:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#587: FILE: kernel/adeos.c:209:
+	if (adp->priority > _adp->priority)
+            break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: kernel/adeos.c:210:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: kernel/adeos.c:210:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: kernel/adeos.c:211:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: kernel/adeos.c:213:
+    list_add_tail(&adp->link,pos);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#591: FILE: kernel/adeos.c:213:
+    list_add_tail(&adp->link,pos);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: kernel/adeos.c:215:
+    __adeos_critical_exit(flags);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#596: FILE: kernel/adeos.c:218:
+    /* Finally, allow the new domain to perform its initialization
+       chores on behalf of its own stack context. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#596: FILE: kernel/adeos.c:218:
+       chores on behalf of its own stack context. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: kernel/adeos.c:220:
+    if (attr->entry != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#598: FILE: kernel/adeos.c:220:
+    if (attr->entry != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "attr->entry"
#598: FILE: kernel/adeos.c:220:
+    if (attr->entry != NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#604: FILE: kernel/adeos.c:226:
+	if (!test_bit(IPIPE_STALL_FLAG,&adp_root->cpudata[cpuid].status) &&
[...]
+	    ipipe_sync_irqs();

ERROR:SPACING: space required after that ',' (ctx:VxO)
#604: FILE: kernel/adeos.c:226:
+	if (!test_bit(IPIPE_STALL_FLAG,&adp_root->cpudata[cpuid].status) &&
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#604: FILE: kernel/adeos.c:226:
+	if (!test_bit(IPIPE_STALL_FLAG,&adp_root->cpudata[cpuid].status) &&
 	                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: kernel/adeos.c:231:
+    return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#613: FILE: kernel/adeos.c:235:
+/* adeos_unregister_domain() -- Remove a domain from the system. All
+   client domains must call this routine to unregister themselves from

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#614: FILE: kernel/adeos.c:236:
+   the ADEOS layer. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: kernel/adeos.c:238:
+int adeos_unregister_domain (adomain_t *adp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: kernel/adeos.c:241:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: kernel/adeos.c:242:
+    unsigned event;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#620: FILE: kernel/adeos.c:242:
+    unsigned event;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: kernel/adeos.c:244:
+    if (adp_current != adp_root)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#622: FILE: kernel/adeos.c:244:
+    if (adp_current != adp_root)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#624: FILE: kernel/adeos.c:246:
+	printk(KERN_WARNING "ADEOS: Only the root domain may unregister a domain.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: kernel/adeos.c:250:
+    if (adp == adp_root)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#628: FILE: kernel/adeos.c:250:
+    if (adp == adp_root)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#630: FILE: kernel/adeos.c:252:
+	printk(KERN_WARNING "ADEOS: Cannot unregister the root domain.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: kernel/adeos.c:256:
+    for (event = 0; event < ADEOS_NR_EVENTS; event++)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#636: FILE: kernel/adeos.c:258:
+	adeos_catch_event(event,NULL);
 	                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#639: FILE: kernel/adeos.c:261:
+    /* Simply remove the domain from the pipeline and we are almost
+       done. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#639: FILE: kernel/adeos.c:261:
+       done. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: kernel/adeos.c:263:
+    flags = __adeos_critical_enter(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: kernel/adeos.c:264:
+    list_del_init(&adp->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: kernel/adeos.c:265:
+    __adeos_critical_exit(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: kernel/adeos.c:267:
+    __adeos_cleanup_domain(adp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: kernel/adeos.c:269:
+    printk("ADEOS: Domain %s unregistered.\n",adp->name);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#647: FILE: kernel/adeos.c:269:
+    printk("ADEOS: Domain %s unregistered.\n",adp->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#647: FILE: kernel/adeos.c:269:
+    printk("ADEOS: Domain %s unregistered.\n",adp->name);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: kernel/adeos.c:271:
+    return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#653: FILE: kernel/adeos.c:275:
+/* adeos_renice_domain() -- Change a domain's priority. This affects
+   the position of the domain in the interrupt pipeline. The greater

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#655: FILE: kernel/adeos.c:277:
+   events when the pipeline is processed. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: kernel/adeos.c:279:
+void adeos_renice_domain (adomain_t *adp, int newpri)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: kernel/adeos.c:282:
+    struct list_head *pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: kernel/adeos.c:283:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: kernel/adeos.c:287:
+    flags = __adeos_critical_enter(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: kernel/adeos.c:289:
+    list_del_init(&adp->link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: kernel/adeos.c:291:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#669: FILE: kernel/adeos.c:291:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#669: FILE: kernel/adeos.c:291:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#670: FILE: kernel/adeos.c:292:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#670: FILE: kernel/adeos.c:292:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: kernel/adeos.c:292:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#670: FILE: kernel/adeos.c:292:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#670: FILE: kernel/adeos.c:292:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#671: FILE: kernel/adeos.c:293:
+	if (newpri > _adp->priority)
+            break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: kernel/adeos.c:294:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: kernel/adeos.c:294:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: kernel/adeos.c:295:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: kernel/adeos.c:297:
+    list_add_tail(&adp->link,pos);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#675: FILE: kernel/adeos.c:297:
+    list_add_tail(&adp->link,pos);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: kernel/adeos.c:298:
+    adp->priority = newpri;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: kernel/adeos.c:300:
+    __adeos_critical_exit(flags);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#682: FILE: kernel/adeos.c:304:
+/* adeos_suspend_domain() -- tell the ADEOS layer that the current
+   domain is now dormant. The calling domain is switched out, while

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#684: FILE: kernel/adeos.c:306:
+   switched in. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: kernel/adeos.c:308:
+void adeos_suspend_domain (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: kernel/adeos.c:311:
+    struct adcpudata *cpudata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: kernel/adeos.c:312:
+    adomain_t *adp, *nadp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: kernel/adeos.c:313:
+    struct list_head *ln;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: kernel/adeos.c:314:
+    unsigned long flags;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#693: FILE: kernel/adeos.c:315:
+    unsigned long flags;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: kernel/adeos.c:315:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: kernel/adeos.c:317:
+    adp = nadp = adp_cpu_current[cpuid];$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#695: FILE: kernel/adeos.c:317:
+    adp = nadp = adp_cpu_current[cpuid];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: kernel/adeos.c:318:
+    cpudata = &adp->cpudata[cpuid];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: kernel/adeos.c:320:
+    ipipe_hw_local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: kernel/adeos.c:322:
+    for (;;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#700: FILE: kernel/adeos.c:322:
+    for (;;)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#704: FILE: kernel/adeos.c:326:
+	if (ln == &adeos_pipeline)	/* End of pipeline reached? */
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#704: FILE: kernel/adeos.c:326:
+	if (ln == &adeos_pipeline)	/* End of pipeline reached? */
[...]
+	    /* Caller should loop on its idle task on return. */

WARNING:TABSTOP: Statements should start on a tabstop
#705: FILE: kernel/adeos.c:327:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#709: FILE: kernel/adeos.c:331:
+	    if (test_and_clear_bit(IPIPE_STALL_FLAG,&cpudata->status) &&

ERROR:SPACING: space required after that ',' (ctx:VxO)
#709: FILE: kernel/adeos.c:331:
+	    if (test_and_clear_bit(IPIPE_STALL_FLAG,&cpudata->status) &&
 	                                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#709: FILE: kernel/adeos.c:331:
+	    if (test_and_clear_bit(IPIPE_STALL_FLAG,&cpudata->status) &&
 	                                            ^

WARNING:TABSTOP: Statements should start on a tabstop
#713: FILE: kernel/adeos.c:335:
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#714: FILE: kernel/adeos.c:336:
+	    }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: kernel/adeos.c:338:
+	nadp = list_entry(ln,adomain_t,link);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: kernel/adeos.c:338:
+	nadp = list_entry(ln,adomain_t,link);
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#719: FILE: kernel/adeos.c:341:
+	/* Make sure the domain was preempted (i.e. not sleeping) or
+	   has some event to process before switching to it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#719: FILE: kernel/adeos.c:341:
+	   has some event to process before switching to it. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#721: FILE: kernel/adeos.c:343:
+	if (!test_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status) ||
[...]
+	    break;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#721: FILE: kernel/adeos.c:343:
+	if (!test_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status) ||
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#721: FILE: kernel/adeos.c:343:
+	if (!test_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status) ||
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#723: FILE: kernel/adeos.c:345:
+	    test_bit(IPIPE_XPEND_FLAG,&nadp->cpudata[cpuid].status))
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#723: FILE: kernel/adeos.c:345:
+	    test_bit(IPIPE_XPEND_FLAG,&nadp->cpudata[cpuid].status))
 	                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#724: FILE: kernel/adeos.c:346:
+	    break;

WARNING:TYPO_SPELLING: 'implicitely' may be misspelled - perhaps 'implicitly'?
#727: FILE: kernel/adeos.c:349:
+    /* A suspending domain implicitely unstalls the pipeline. */
                            ^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: kernel/adeos.c:350:
+    clear_bit(IPIPE_STALL_FLAG,&cpudata->status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#728: FILE: kernel/adeos.c:350:
+    clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#728: FILE: kernel/adeos.c:350:
+    clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: kernel/adeos.c:353:
+    set_bit(IPIPE_SLEEP_FLAG,&cpudata->status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#731: FILE: kernel/adeos.c:353:
+    set_bit(IPIPE_SLEEP_FLAG,&cpudata->status);
                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#731: FILE: kernel/adeos.c:353:
+    set_bit(IPIPE_SLEEP_FLAG,&cpudata->status);
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: kernel/adeos.c:356:
+    clear_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#734: FILE: kernel/adeos.c:356:
+    clear_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status);
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#734: FILE: kernel/adeos.c:356:
+    clear_bit(IPIPE_SLEEP_FLAG,&nadp->cpudata[cpuid].status);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: kernel/adeos.c:359:
+    __adeos_switch_domain(nadp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: kernel/adeos.c:361:
+    ipipe_hw_local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: kernel/adeos.c:364:
+    ipipe_reload_cpuid();^I/* Processor might have changed. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: kernel/adeos.c:365:
+    adp = adp_cpu_current[cpuid];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: kernel/adeos.c:366:
+    cpudata = &adp->cpudata[cpuid];$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#748: FILE: kernel/adeos.c:370:
+    /* Now, we are back into the calling domain. Flush the interrupt
+       log and fire the event interposition handler if needed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#748: FILE: kernel/adeos.c:370:
+       log and fire the event interposition handler if needed. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: kernel/adeos.c:372:
+    if (cpudata->irq_pending_hi != 0)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#754: FILE: kernel/adeos.c:376:
+    /* Caution: CPU migration is allowed in SMP-mode on behalf of an
+       event handler provided that the current domain raised

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#755: FILE: kernel/adeos.c:377:
+       it. Otherwise, it's not. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: kernel/adeos.c:379:
+    if (test_and_clear_bit(IPIPE_XPEND_FLAG,&cpudata->status))$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#757: FILE: kernel/adeos.c:379:
+    if (test_and_clear_bit(IPIPE_XPEND_FLAG,&cpudata->status))
                                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#757: FILE: kernel/adeos.c:379:
+    if (test_and_clear_bit(IPIPE_XPEND_FLAG,&cpudata->status))
                                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#764: FILE: kernel/adeos.c:386:
+/* adeos_virtualize_irq() -- Attach a handler (and optionally an hw
+   acknowledge routine) to an interrupt for the current domain. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#764: FILE: kernel/adeos.c:386:
+   acknowledge routine) to an interrupt for the current domain. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#766: FILE: kernel/adeos.c:388:
+int adeos_virtualize_irq (unsigned irq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: kernel/adeos.c:388:
+int adeos_virtualize_irq (unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#767: FILE: kernel/adeos.c:389:
+			  void (*handler)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#768: FILE: kernel/adeos.c:390:
+			  int (*acknowledge)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#769: FILE: kernel/adeos.c:391:
+			  unsigned modemask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: kernel/adeos.c:393:
+    if (irq >= IPIPE_NR_IRQS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: kernel/adeos.c:396:
+    return ipipe_hook_irq(irq,handler,acknowledge,modemask);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: kernel/adeos.c:396:
+    return ipipe_hook_irq(irq,handler,acknowledge,modemask);
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: kernel/adeos.c:396:
+    return ipipe_hook_irq(irq,handler,acknowledge,modemask);
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#774: FILE: kernel/adeos.c:396:
+    return ipipe_hook_irq(irq,handler,acknowledge,modemask);
                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#778: FILE: kernel/adeos.c:400:
+/* adeos_control_irq() -- Change an interrupt mode. This affects the
+   way a given interrupt is handled by ADEOS for the current

WARNING:TYPO_SPELLING: 'implicitely' may be misspelled - perhaps 'implicitly'?
#790: FILE: kernel/adeos.c:412:
+   which is processed by the current domain but not implicitely passed
                                                     ^^^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#798: FILE: kernel/adeos.c:420:
+int adeos_control_irq (unsigned irq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: kernel/adeos.c:420:
+int adeos_control_irq (unsigned irq,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#798: FILE: kernel/adeos.c:420:
+int adeos_control_irq (unsigned irq,
+		       unsigned clrmask,
+		       unsigned setmask) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#799: FILE: kernel/adeos.c:421:
+		       unsigned clrmask,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#800: FILE: kernel/adeos.c:422:
+		       unsigned setmask) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#801: FILE: kernel/adeos.c:423:
+		       unsigned setmask) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: kernel/adeos.c:424:
+    if (irq >= IPIPE_NR_IRQS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: kernel/adeos.c:427:
+    return ipipe_control_irq(irq,clrmask,setmask);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: kernel/adeos.c:427:
+    return ipipe_control_irq(irq,clrmask,setmask);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: kernel/adeos.c:427:
+    return ipipe_control_irq(irq,clrmask,setmask);
                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#809: FILE: kernel/adeos.c:431:
+/* adeos_propagate_irq() -- Force a given IRQ propagation on behalf of
+   a running interrupt handler to the next domain down the pipeline.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#824: FILE: kernel/adeos.c:446:
+   reached. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#826: FILE: kernel/adeos.c:448:
+int adeos_propagate_irq (unsigned irq) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#826: FILE: kernel/adeos.c:448:
+int adeos_propagate_irq (unsigned irq) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#826: FILE: kernel/adeos.c:448:
+int adeos_propagate_irq (unsigned irq) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#827: FILE: kernel/adeos.c:449:
+int adeos_propagate_irq (unsigned irq) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: kernel/adeos.c:450:
+    return irq < IPIPE_NR_IRQS ? ipipe_propagate_irq(irq) : -EINVAL;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#832: FILE: kernel/adeos.c:454:
+/* adeos_alloc_irq() -- Allocate a virtual/soft pipelined interrupt.
+   Virtual interrupts are handled in exactly the same way than their

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#839: FILE: kernel/adeos.c:461:
+   channel is available). */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#841: FILE: kernel/adeos.c:463:
+unsigned adeos_alloc_irq (void) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#841: FILE: kernel/adeos.c:463:
+unsigned adeos_alloc_irq (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#841: FILE: kernel/adeos.c:463:
+unsigned adeos_alloc_irq (void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#842: FILE: kernel/adeos.c:464:
+unsigned adeos_alloc_irq (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: kernel/adeos.c:465:
+    return ipipe_alloc_irq();$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#847: FILE: kernel/adeos.c:469:
+/* adeos_free_irq() -- Return a previously allocated virtual/soft
+   pipelined interrupt to the pool of allocatable interrupts. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#847: FILE: kernel/adeos.c:469:
+   pipelined interrupt to the pool of allocatable interrupts. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#849: FILE: kernel/adeos.c:471:
+int adeos_free_irq (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#849: FILE: kernel/adeos.c:471:
+int adeos_free_irq (unsigned irq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: kernel/adeos.c:474:
+    if (irq >= IPIPE_NR_IRQS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: kernel/adeos.c:477:
+    ipipe_free_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: kernel/adeos.c:479:
+    return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#861: FILE: kernel/adeos.c:483:
+/* adeos_trigger_irq() -- Push the interrupt to the pipeline entry
+   just like if it has been actually received from a hw source. This

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#864: FILE: kernel/adeos.c:486:
+   prioritary domain who happens to handle this interrupt. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#866: FILE: kernel/adeos.c:488:
+int adeos_trigger_irq (unsigned irq) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#866: FILE: kernel/adeos.c:488:
+int adeos_trigger_irq (unsigned irq) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: kernel/adeos.c:488:
+int adeos_trigger_irq (unsigned irq) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#867: FILE: kernel/adeos.c:489:
+int adeos_trigger_irq (unsigned irq) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: kernel/adeos.c:490:
+    return irq < IPIPE_NR_IRQS ? ipipe_trigger_irq(irq) : -EINVAL;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#872: FILE: kernel/adeos.c:494:
+/* adeos_trigger_ipi() -- Send the ADEOS service IPI to other
+   processors. This leads to */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#872: FILE: kernel/adeos.c:494:
+   processors. This leads to */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#874: FILE: kernel/adeos.c:496:
+int adeos_trigger_ipi (int cpuid) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#874: FILE: kernel/adeos.c:496:
+int adeos_trigger_ipi (int cpuid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#875: FILE: kernel/adeos.c:497:
+int adeos_trigger_ipi (int cpuid) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: kernel/adeos.c:498:
+    return ipipe_trigger_ipi(cpuid);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#879: FILE: kernel/adeos.c:501:
+int adeos_get_sysinfo (adsysinfo_t *info) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: kernel/adeos.c:501:
+int adeos_get_sysinfo (adsysinfo_t *info) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#880: FILE: kernel/adeos.c:502:
+int adeos_get_sysinfo (adsysinfo_t *info) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: kernel/adeos.c:503:
+    return __adeos_get_sysinfo(info);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#885: FILE: kernel/adeos.c:507:
+/* adeos_stall_ipipe() -- Stall the interrupt pipeline.  Must be
+   callable from C and assembly language. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#885: FILE: kernel/adeos.c:507:
+   callable from C and assembly language. */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#887: FILE: kernel/adeos.c:509:
+void adeos_stall_ipipe (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#887: FILE: kernel/adeos.c:509:
+void adeos_stall_ipipe (void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#888: FILE: kernel/adeos.c:510:
+void adeos_stall_ipipe (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: kernel/adeos.c:511:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: kernel/adeos.c:513:
+    set_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#891: FILE: kernel/adeos.c:513:
+    set_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);
                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#891: FILE: kernel/adeos.c:513:
+    set_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);
                              ^

WARNING:TYPO_SPELLING: 'Unstall' may be misspelled - perhaps 'Install'?
#894: FILE: kernel/adeos.c:516:
+/* adeos_unstall_ipipe() -- Unstall the interrupt pipeline and
                             ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#895: FILE: kernel/adeos.c:517:
+/* adeos_unstall_ipipe() -- Unstall the interrupt pipeline and
+   synchronize pending events. Must be callable from C and assembly

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#896: FILE: kernel/adeos.c:518:
+   language. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#898: FILE: kernel/adeos.c:520:
+void adeos_unstall_ipipe (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: kernel/adeos.c:523:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: kernel/adeos.c:525:
+    clear_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#903: FILE: kernel/adeos.c:525:
+    clear_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#903: FILE: kernel/adeos.c:525:
+    clear_bit(IPIPE_STALL_FLAG,&adp_current->cpudata[cpuid].status);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: kernel/adeos.c:526:
+    ipipe_hw_sti();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: kernel/adeos.c:528:
+    if (adp_current->cpudata[cpuid].irq_pending_hi != 0)$

WARNING:TYPO_SPELLING: 'Unstall' may be misspelled - perhaps 'Install'?
#910: FILE: kernel/adeos.c:532:
+/* adeos_unstall_ipipe() -- Unstall the interrupt pipeline and
                             ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#911: FILE: kernel/adeos.c:533:
+/* adeos_unstall_ipipe() -- Unstall the interrupt pipeline and
+   synchronize pending events from a given domain. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#911: FILE: kernel/adeos.c:533:
+   synchronize pending events from a given domain. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#913: FILE: kernel/adeos.c:535:
+void adeos_unstall_ipipe_from (adomain_t *adp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: kernel/adeos.c:538:
+    struct list_head *pos;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#917: FILE: kernel/adeos.c:539:
+    struct list_head *pos;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: kernel/adeos.c:539:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: kernel/adeos.c:541:
+    clear_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#919: FILE: kernel/adeos.c:541:
+    clear_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#919: FILE: kernel/adeos.c:541:
+    clear_bit(IPIPE_STALL_FLAG,&adp->cpudata[cpuid].status);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: kernel/adeos.c:543:
+    if (adp == adp_cpu_current[cpuid])$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#921: FILE: kernel/adeos.c:543:
+    if (adp == adp_cpu_current[cpuid])
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#925: FILE: kernel/adeos.c:547:
+	if (adp->cpudata[cpuid].irq_pending_hi != 0)
+	    ipipe_sync_irqs();

WARNING:TYPO_SPELLING: 'unstalled' may be misspelled - perhaps 'installed'?
#932: FILE: kernel/adeos.c:554:
+       unstalled domain level. This code is roughly lifted from
        ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#932: FILE: kernel/adeos.c:554:
+    /* Attempt to flush all events that might be pending at the
+       unstalled domain level. This code is roughly lifted from

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#933: FILE: kernel/adeos.c:555:
+       ipipe.c:ipipe_handle_irq(). */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: kernel/adeos.c:557:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#935: FILE: kernel/adeos.c:557:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#935: FILE: kernel/adeos.c:557:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#936: FILE: kernel/adeos.c:558:
+    list_for_each(pos,&adeos_pipeline) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: kernel/adeos.c:559:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#937: FILE: kernel/adeos.c:559:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: kernel/adeos.c:559:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#937: FILE: kernel/adeos.c:559:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#937: FILE: kernel/adeos.c:559:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#939: FILE: kernel/adeos.c:561:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
+	    break; /* Stalled stage -- do not go further. */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#939: FILE: kernel/adeos.c:561:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#939: FILE: kernel/adeos.c:561:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
 	                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#940: FILE: kernel/adeos.c:562:
+	    break; /* Stalled stage -- do not go further. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#942: FILE: kernel/adeos.c:564:
+	if (_adp->cpudata[cpuid].irq_pending_hi != 0)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#942: FILE: kernel/adeos.c:564:
+	if (_adp->cpudata[cpuid].irq_pending_hi != 0)
[...]
+

WARNING:TABSTOP: Statements should start on a tabstop
#943: FILE: kernel/adeos.c:565:
+	    {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#945: FILE: kernel/adeos.c:567:
+	    /* Since the critical IPI might be serviced by the
+	       following actions, the current domain might not be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#949: FILE: kernel/adeos.c:571:
+	       hazardous assumptions here. */

WARNING:TABSTOP: Statements should start on a tabstop
#953: FILE: kernel/adeos.c:575:
+	    if (_adp == adp_cpu_current[cpuid])

WARNING:TABSTOP: Statements should start on a tabstop
#955: FILE: kernel/adeos.c:577:
+	    else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#955: FILE: kernel/adeos.c:577:
+	    else
+		{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: kernel/adeos.c:582:
+^I    $

WARNING:TABSTOP: Statements should start on a tabstop
#961: FILE: kernel/adeos.c:583:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#962: FILE: kernel/adeos.c:584:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#963: FILE: kernel/adeos.c:585:
+	else if (_adp == adp_cpu_current[cpuid])
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#964: FILE: kernel/adeos.c:586:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: kernel/adeos.c:587:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#969: FILE: kernel/adeos.c:591:
+/* adeos_catch_event() -- Interpose an event handler for the
+   current domain. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#969: FILE: kernel/adeos.c:591:
+   current domain. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#971: FILE: kernel/adeos.c:593:
+int adeos_catch_event (unsigned event, void (*handler)(adevinfo_t *))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#971: FILE: kernel/adeos.c:593:
+int adeos_catch_event (unsigned event, void (*handler)(adevinfo_t *))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: kernel/adeos.c:596:
+    if (event >= ADEOS_NR_EVENTS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: kernel/adeos.c:599:
+    if (!xchg(&adp_current->events[event].handler,handler))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#977: FILE: kernel/adeos.c:599:
+    if (!xchg(&adp_current->events[event].handler,handler))
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#977: FILE: kernel/adeos.c:599:
+    if (!xchg(&adp_current->events[event].handler,handler))
                                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#979: FILE: kernel/adeos.c:601:
+	if (handler)
+	    __adeos_event_monitors[event]++;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: kernel/adeos.c:604:
+    else if (!handler)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: kernel/adeos.c:607:
+    return 0;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#989: FILE: kernel/adeos.c:611:
+void (*adeos_hook_dswitch(void (*handler)(void))) (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: kernel/adeos.c:612:
+    return (void (*)(void))xchg(&adp_current->dswitch,handler);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#990: FILE: kernel/adeos.c:612:
+    return (void (*)(void))xchg(&adp_current->dswitch,handler);
                                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#993: FILE: kernel/adeos.c:615:
+void adeos_init_attr (adattr_t *attr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: kernel/adeos.c:618:
+    attr->name = "Anonymous";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: kernel/adeos.c:619:
+    attr->domid = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: kernel/adeos.c:620:
+    attr->entry = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: kernel/adeos.c:621:
+    attr->estacksz = 0;^I/* Let ADEOS choose a reasonable stack size */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: kernel/adeos.c:622:
+    attr->priority = ADEOS_ROOT_PRI;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: kernel/adeos.c:623:
+    attr->dswitch = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: kernel/adeos.c:624:
+    attr->nptdkeys = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: kernel/adeos.c:625:
+    attr->ptdset = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: kernel/adeos.c:626:
+    attr->ptdget = NULL;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1007: FILE: kernel/adeos.c:629:
+int adeos_tune_timer (unsigned long ns, int flags) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1007: FILE: kernel/adeos.c:629:
+int adeos_tune_timer (unsigned long ns, int flags) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1008: FILE: kernel/adeos.c:630:
+int adeos_tune_timer (unsigned long ns, int flags) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: kernel/adeos.c:631:
+    return __adeos_tune_timer(ns,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1009: FILE: kernel/adeos.c:631:
+    return __adeos_tune_timer(ns,flags);
                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1012: FILE: kernel/adeos.c:634:
+int adeos_alloc_ptdkey (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: kernel/adeos.c:637:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: kernel/adeos.c:638:
+    int key = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: kernel/adeos.c:640:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1018: FILE: kernel/adeos.c:640:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: kernel/adeos.c:642:
+    if (adp_current->ptd_keycount < adp_current->ptd_keymax)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1020: FILE: kernel/adeos.c:642:
+    if (adp_current->ptd_keycount < adp_current->ptd_keymax)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1023: FILE: kernel/adeos.c:645:
+	set_bit(key,&adp_current->ptd_keymap);
 	           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1023: FILE: kernel/adeos.c:645:
+	set_bit(key,&adp_current->ptd_keymap);
 	            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: kernel/adeos.c:649:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: kernel/adeos.c:649:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: kernel/adeos.c:651:
+    return key;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1032: FILE: kernel/adeos.c:654:
+int adeos_free_ptdkey (int key)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: kernel/adeos.c:657:
+    unsigned long flags; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: kernel/adeos.c:657:
+    unsigned long flags; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: kernel/adeos.c:659:
+    if (key < 0 || key >= adp_current->ptd_keymax)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: kernel/adeos.c:662:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1040: FILE: kernel/adeos.c:662:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: kernel/adeos.c:664:
+    if (test_and_clear_bit(key,&adp_current->ptd_keymap))$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1042: FILE: kernel/adeos.c:664:
+    if (test_and_clear_bit(key,&adp_current->ptd_keymap))
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1042: FILE: kernel/adeos.c:664:
+    if (test_and_clear_bit(key,&adp_current->ptd_keymap))
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: kernel/adeos.c:667:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1045: FILE: kernel/adeos.c:667:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: kernel/adeos.c:669:
+    return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1050: FILE: kernel/adeos.c:672:
+int adeos_set_ptd (int key, void *value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: kernel/adeos.c:675:
+    if (key < 0 || key >= adp_current->ptd_keymax)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: kernel/adeos.c:678:
+    if (!adp_current->ptd_setfun)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1056: FILE: kernel/adeos.c:678:
+    if (!adp_current->ptd_setfun)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1058: FILE: kernel/adeos.c:680:
+	printk(KERN_WARNING "ADEOS: not ptdset hook for %s\n",adp_current->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1058: FILE: kernel/adeos.c:680:
+	printk(KERN_WARNING "ADEOS: not ptdset hook for %s\n",adp_current->name);
 	                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: kernel/adeos.c:684:
+    adp_current->ptd_setfun(key,value);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: kernel/adeos.c:684:
+    adp_current->ptd_setfun(key,value);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: kernel/adeos.c:686:
+    return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1067: FILE: kernel/adeos.c:689:
+void *adeos_get_ptd (int key)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: kernel/adeos.c:692:
+    if (key < 0 || key >= adp_current->ptd_keymax)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: kernel/adeos.c:695:
+    if (!adp_current->ptd_getfun)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1073: FILE: kernel/adeos.c:695:
+    if (!adp_current->ptd_getfun)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1075: FILE: kernel/adeos.c:697:
+	printk(KERN_WARNING "ADEOS: not ptdget hook for %s\n",adp_current->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1075: FILE: kernel/adeos.c:697:
+	printk(KERN_WARNING "ADEOS: not ptdget hook for %s\n",adp_current->name);
 	                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: kernel/adeos.c:701:
+    return adp_current->ptd_getfun(key);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1082: FILE: kernel/adeos.c:704:
+unsigned long adeos_critical_enter (void (*syncfn)(void)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1082: FILE: kernel/adeos.c:704:
+unsigned long adeos_critical_enter (void (*syncfn)(void)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1083: FILE: kernel/adeos.c:705:
+unsigned long adeos_critical_enter (void (*syncfn)(void)) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: kernel/adeos.c:706:
+    return __adeos_critical_enter(syncfn);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1087: FILE: kernel/adeos.c:709:
+void adeos_critical_exit (unsigned long flags) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1087: FILE: kernel/adeos.c:709:
+void adeos_critical_exit (unsigned long flags) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1088: FILE: kernel/adeos.c:710:
+void adeos_critical_exit (unsigned long flags) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: kernel/adeos.c:711:
+    __adeos_critical_exit(flags);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1102: FILE: kernel/fork.c:853:
+	for (k = 0; k < ADEOS_ROOT_NPTDKEYS; k++)
+	    p->ptd[k] = NULL;

WARNING:TYPO_SPELLING: 'ptd' may be misspelled - perhaps 'pdf'?
#1103: FILE: kernel/fork.c:854:
+	    p->ptd[k] = NULL;
 	       ^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1119: FILE: kernel/ksyms.c:618:
+EXPORT_SYMBOL(adeos_unregister_domain);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1120: FILE: kernel/ksyms.c:619:
+EXPORT_SYMBOL(adeos_renice_domain);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1121: FILE: kernel/ksyms.c:620:
+EXPORT_SYMBOL(adeos_suspend_domain);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1122: FILE: kernel/ksyms.c:621:
+EXPORT_SYMBOL(adeos_virtualize_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1123: FILE: kernel/ksyms.c:622:
+EXPORT_SYMBOL(adeos_control_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1124: FILE: kernel/ksyms.c:623:
+EXPORT_SYMBOL(adeos_propagate_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1125: FILE: kernel/ksyms.c:624:
+EXPORT_SYMBOL(adeos_alloc_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1126: FILE: kernel/ksyms.c:625:
+EXPORT_SYMBOL(adeos_free_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1127: FILE: kernel/ksyms.c:626:
+EXPORT_SYMBOL(adeos_trigger_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1128: FILE: kernel/ksyms.c:627:
+EXPORT_SYMBOL(adeos_trigger_ipi);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1129: FILE: kernel/ksyms.c:628:
+EXPORT_SYMBOL(adeos_stall_ipipe);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1130: FILE: kernel/ksyms.c:629:
+EXPORT_SYMBOL(adeos_unstall_ipipe);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1131: FILE: kernel/ksyms.c:630:
+EXPORT_SYMBOL(adeos_unstall_ipipe_from);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1132: FILE: kernel/ksyms.c:631:
+EXPORT_SYMBOL(adeos_catch_event);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1133: FILE: kernel/ksyms.c:632:
+EXPORT_SYMBOL(adeos_hook_dswitch);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1134: FILE: kernel/ksyms.c:633:
+EXPORT_SYMBOL(adeos_init_attr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1135: FILE: kernel/ksyms.c:634:
+EXPORT_SYMBOL(adeos_get_sysinfo);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1136: FILE: kernel/ksyms.c:635:
+EXPORT_SYMBOL(adeos_tune_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1137: FILE: kernel/ksyms.c:636:
+EXPORT_SYMBOL(adeos_alloc_ptdkey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1138: FILE: kernel/ksyms.c:637:
+EXPORT_SYMBOL(adeos_free_ptdkey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1139: FILE: kernel/ksyms.c:638:
+EXPORT_SYMBOL(adeos_set_ptd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1140: FILE: kernel/ksyms.c:639:
+EXPORT_SYMBOL(adeos_get_ptd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1141: FILE: kernel/ksyms.c:640:
+EXPORT_SYMBOL(adeos_critical_enter);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1142: FILE: kernel/ksyms.c:641:
+EXPORT_SYMBOL(adeos_critical_exit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1143: FILE: kernel/ksyms.c:642:
+EXPORT_SYMBOL(adp_cpu_current);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1144: FILE: kernel/ksyms.c:643:
+EXPORT_SYMBOL(adp_root);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1302: FILE: kernel/printk.c:506:
+^I        ipipe_hw_spin_lock_init(&logbuf_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: kernel/printk.c:550:
+^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: kernel/printk.c:562:
+^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: kernel/printk.c:575:
+^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1360: FILE: kernel/printk.c:624:
+^I        ipipe_hw_spin_lock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1372: FILE: kernel/printk.c:635:
+ ^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1372: FILE: kernel/printk.c:635:
+ ^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: kernel/printk.c:635:
+ ^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1374: FILE: kernel/printk.c:637:
+  ^I^Ispin_unlock_irqrestore(&logbuf_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1374: FILE: kernel/printk.c:637:
+  ^I^Ispin_unlock_irqrestore(&logbuf_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: kernel/printk.c:637:
+  ^I^Ispin_unlock_irqrestore(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1393: FILE: kernel/printk.c:761:
+^I        ipipe_hw_spin_lock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1399: FILE: kernel/printk.c:767:
+^I        ipipe_hw_spin_unlock(&logbuf_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1414: FILE: kernel/sched.c:1045:
+ ^I/* The in-kernel preemption routine might be indirectly called$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1414: FILE: kernel/sched.c:1045:
+ ^I/* The in-kernel preemption routine might be indirectly called$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: kernel/sched.c:1045:
+ ^I/* The in-kernel preemption routine might be indirectly called$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1415: FILE: kernel/sched.c:1046:
+ ^I   from code running in other domains, so we must ensure that$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1415: FILE: kernel/sched.c:1046:
+ ^I   from code running in other domains, so we must ensure that$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1415: FILE: kernel/sched.c:1046:
+ 	/* The in-kernel preemption routine might be indirectly called
+ 	   from code running in other domains, so we must ensure that

ERROR:CODE_INDENT: code indent should use tabs where possible
#1416: FILE: kernel/sched.c:1047:
+ ^I   scheduling only takes place on behalf of the root (Linux)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1416: FILE: kernel/sched.c:1047:
+ ^I   scheduling only takes place on behalf of the root (Linux)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1417: FILE: kernel/sched.c:1048:
+ ^I   one. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1417: FILE: kernel/sched.c:1048:
+ ^I   one. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1417: FILE: kernel/sched.c:1048:
+ 	   one. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1418: FILE: kernel/sched.c:1049:
+	if (adp_current != adp_root)
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#1419: FILE: kernel/sched.c:1050:
+	    return;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 158 errors, 399 warnings, 36 checks, 1321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
