Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
OK, I reapplied the patch from the URL above to 2.6.6 (this is current for most of my machines) and I am posting it here.

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#96: FILE: Documentation/kmsgdump.txt:26:
+chances to complete the dump succesfully, the CPU is rebooted in
                              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#181: FILE: Documentation/kmsgdump.txt:111:
+After a succesful dump or print, 3 quick beeps are played. In case of an error,
         ^^^^^^^^^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#341: FILE: Documentation/kmsgdump.txt:271:
+       # mount -rt msdos /dev/fd0 /mnt
                    ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: Documentation/kmsgdump.txt:319:
+about how to dramatically reduce FSCK time, but at least consider these $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: Documentation/kmsgdump.txt:335:
+ $

WARNING:TYPO_SPELLING: 'loosy' may be misspelled - perhaps 'lossy'?
#413: FILE: Documentation/kmsgdump.txt:343:
+      loosy power-off is less than 3 minutes.
       ^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'any'
#416: FILE: Documentation/kmsgdump.txt:346:
+      reiserfs in Linux 2.4, or any any of those or SGI XFS in Linux 2.5

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#425: FILE: Documentation/kmsgdump.txt:355:
+For more informations, you can email me at :
          ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: arch/i386/Kconfig:1310:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: arch/i386/Kconfig:1316:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: arch/i386/Kconfig:1319:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/i386/Kconfig:1332:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: arch/i386/Kconfig:1345:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: arch/i386/Kconfig:1354:
+^I  automatically dump its messages buffer onto a diskette and then $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: arch/i386/Kconfig:1356:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: arch/i386/Kconfig:1375:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: arch/i386/Kconfig:1377:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: arch/i386/Kconfig:1379:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#554: FILE: arch/i386/kernel/kmsg_reboot.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#569: FILE: arch/i386/kernel/kmsg_reboot.c:16:
+	unsigned short       size __attribute__ ((packed));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#569: FILE: arch/i386/kernel/kmsg_reboot.c:16:
+	unsigned short       size __attribute__ ((packed));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#570: FILE: arch/i386/kernel/kmsg_reboot.c:17:
+	unsigned long long * base __attribute__ ((packed));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#570: FILE: arch/i386/kernel/kmsg_reboot.c:17:
+	unsigned long long * base __attribute__ ((packed));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#572: FILE: arch/i386/kernel/kmsg_reboot.c:19:
+}
+no_idt = { 0, 0 };

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: arch/i386/kernel/kmsg_reboot.c:29:
+#define kdebug(fmt,arg...) \
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#583: FILE: arch/i386/kernel/kmsg_reboot.c:30:
+	printk(KERN_DEBUG fmt,##arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: arch/i386/kernel/kmsg_reboot.c:30:
+	printk(KERN_DEBUG fmt,##arg)
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#585: FILE: arch/i386/kernel/kmsg_reboot.c:32:
+#define kdebug(fmt,arg...) \
                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#589: FILE: arch/i386/kernel/kmsg_reboot.c:36:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: arch/i386/kernel/kmsg_reboot.c:37:
+extern void dump_syslog(char * buf);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#593: FILE: arch/i386/kernel/kmsg_reboot.c:40:
+static int chkpnt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#596: FILE: arch/i386/kernel/kmsg_reboot.c:43:
+/* boot-time default flags. These are single character indicators except for T (track number)
+   and U (unit number) which must be followed by a number. To avoid confusion with default

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#614: FILE: arch/i386/kernel/kmsg_reboot.c:61:
+char kmsgdump_flags[16]=
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: arch/i386/kernel/kmsg_reboot.c:73:
+        "S"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/i386/kernel/kmsg_reboot.c:73:
+        "S"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: arch/i386/kernel/kmsg_reboot.c:75:
+        "O"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/i386/kernel/kmsg_reboot.c:75:
+        "O"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: arch/i386/kernel/kmsg_reboot.c:77:
+        "T0U0"; /* Safe,Track0,Unit0 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/i386/kernel/kmsg_reboot.c:77:
+        "T0U0"; /* Safe,Track0,Unit0 */$

WARNING:TYPO_SPELLING: 'unuseable' may be misspelled - perhaps 'unusable'?
#636: FILE: arch/i386/kernel/kmsg_reboot.c:83:
+ * The system is rebooted to real mode so it will be unuseable after a call
                                                      ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: arch/i386/kernel/kmsg_reboot.c:87:
+ *   $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#659: FILE: arch/i386/kernel/kmsg_reboot.c:106:
+	int modeflags=MASK_OUTPUTFAT | MASK_PANICDUMP | MASK_PANICBOOT | MASK_SAFEDUMP;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#660: FILE: arch/i386/kernel/kmsg_reboot.c:107:
+	int track=0;	/* by default, track 0 */
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#661: FILE: arch/i386/kernel/kmsg_reboot.c:108:
+	int unit=0;	/* and drive A */
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: arch/i386/kernel/kmsg_reboot.c:109:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#663: FILE: arch/i386/kernel/kmsg_reboot.c:110:
+	if (chkpnt<100) {
+	    chkpnt=100;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#663: FILE: arch/i386/kernel/kmsg_reboot.c:110:
+	if (chkpnt<100) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#664: FILE: arch/i386/kernel/kmsg_reboot.c:111:
+	    chkpnt=100;
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#680: FILE: arch/i386/kernel/kmsg_reboot.c:127:
+	    if (test_bit(X86_FEATURE_APIC, boot_cpu_data.x86_capability)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#680: FILE: arch/i386/kernel/kmsg_reboot.c:127:
+	    if (test_bit(X86_FEATURE_APIC, boot_cpu_data.x86_capability)) {
+	      unsigned long l, r;

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: arch/i386/kernel/kmsg_reboot.c:129:
+	      unsigned long l, r;
+	      disable_local_APIC();

WARNING:TABSTOP: Statements should start on a tabstop
#687: FILE: arch/i386/kernel/kmsg_reboot.c:134:
+	    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#691: FILE: arch/i386/kernel/kmsg_reboot.c:138:
+	/* Write 0x09 to CMOS register number 0x0f, which the BIOS POST
+	   routine will recognize as telling it to :

WARNING:TYPO_SPELLING: 'funciton' may be misspelled - perhaps 'function'?
#696: FILE: arch/i386/kernel/kmsg_reboot.c:143:
+	   [Note: funciton 0x0A is easier to use, but doesn't re-initialize
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'harware' may be misspelled - perhaps 'hardware'?
#697: FILE: arch/i386/kernel/kmsg_reboot.c:144:
+	          anything and might not work on specific harware.          ]
 	                                                  ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: arch/i386/kernel/kmsg_reboot.c:144:
+^I          anything and might not work on specific harware.          ]$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#700: FILE: arch/i386/kernel/kmsg_reboot.c:147:
+	if (chkpnt<200) {
+	    unsigned long flags;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#700: FILE: arch/i386/kernel/kmsg_reboot.c:147:
+	if (chkpnt<200) {
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#701: FILE: arch/i386/kernel/kmsg_reboot.c:148:
+	    unsigned long flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#702: FILE: arch/i386/kernel/kmsg_reboot.c:149:
+	    unsigned long flags;
+	    chkpnt=200;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#702: FILE: arch/i386/kernel/kmsg_reboot.c:149:
+	    chkpnt=200;
 	          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: arch/i386/kernel/kmsg_reboot.c:151:
+            spin_lock_irqsave(&rtc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: arch/i386/kernel/kmsg_reboot.c:151:
+            spin_lock_irqsave(&rtc_lock, flags);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: arch/i386/kernel/kmsg_reboot.c:152:
+	    outb_p (0x8f, 0x70);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#707: FILE: arch/i386/kernel/kmsg_reboot.c:154:
+	    outb_p (0x09, 0x71);

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: arch/i386/kernel/kmsg_reboot.c:156:
+            spin_unlock_irqrestore(&rtc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: arch/i386/kernel/kmsg_reboot.c:156:
+            spin_unlock_irqrestore(&rtc_lock, flags);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#713: FILE: arch/i386/kernel/kmsg_reboot.c:160:
+	/* Remap the kernel at virtual address zero, as well as offset zero
+	   from the kernel segment.  This assumes the kernel segment starts at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#714: FILE: arch/i386/kernel/kmsg_reboot.c:161:
+	   virtual address PAGE_OFFSET. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#716: FILE: arch/i386/kernel/kmsg_reboot.c:163:
+	if (chkpnt<300) {
+	    chkpnt=300;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#716: FILE: arch/i386/kernel/kmsg_reboot.c:163:
+	if (chkpnt<300) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#717: FILE: arch/i386/kernel/kmsg_reboot.c:164:
+	    chkpnt=300;
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#719: FILE: arch/i386/kernel/kmsg_reboot.c:166:
+	    memcpy (swapper_pg_dir, swapper_pg_dir + USER_PGD_PTRS,

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#720: FILE: arch/i386/kernel/kmsg_reboot.c:167:
+		    sizeof (swapper_pg_dir [0]) * KERNEL_PGD_PTRS);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: arch/i386/kernel/kmsg_reboot.c:167:
+		    sizeof (swapper_pg_dir [0]) * KERNEL_PGD_PTRS);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#725: FILE: arch/i386/kernel/kmsg_reboot.c:172:
+	/* Make sure the first page is mapped to the start of physical memory.
+	   It is normally not mapped, to trap kernel NULL pointer dereferences.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#728: FILE: arch/i386/kernel/kmsg_reboot.c:175:
+	if (chkpnt<400) {
+	    int page;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#728: FILE: arch/i386/kernel/kmsg_reboot.c:175:
+	if (chkpnt<400) {
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#729: FILE: arch/i386/kernel/kmsg_reboot.c:176:
+	    int page;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#731: FILE: arch/i386/kernel/kmsg_reboot.c:178:
+	    chkpnt=400;
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#733: FILE: arch/i386/kernel/kmsg_reboot.c:180:
+	    for (page=0; page < ((FREEMEMORY+PAGE_SIZE-1) >> PAGE_SHIFT); page++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#733: FILE: arch/i386/kernel/kmsg_reboot.c:180:
+	    for (page=0; page < ((FREEMEMORY+PAGE_SIZE-1) >> PAGE_SHIFT); page++)
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#733: FILE: arch/i386/kernel/kmsg_reboot.c:180:
+	    for (page=0; page < ((FREEMEMORY+PAGE_SIZE-1) >> PAGE_SHIFT); page++)
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#733: FILE: arch/i386/kernel/kmsg_reboot.c:180:
+	    for (page=0; page < ((FREEMEMORY+PAGE_SIZE-1) >> PAGE_SHIFT); page++)
 	                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/i386/kernel/kmsg_reboot.c:184:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#742: FILE: arch/i386/kernel/kmsg_reboot.c:189:
+	if (chkpnt<500) {
+	    chkpnt=500;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#742: FILE: arch/i386/kernel/kmsg_reboot.c:189:
+	if (chkpnt<500) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#743: FILE: arch/i386/kernel/kmsg_reboot.c:190:
+	    chkpnt=500;
 	          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#745: FILE: arch/i386/kernel/kmsg_reboot.c:192:
+	    asm volatile("movl %0,%%cr3": :"r" (__pa(swapper_pg_dir)));
 	                                ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#745: FILE: arch/i386/kernel/kmsg_reboot.c:192:
+	    asm volatile("movl %0,%%cr3": :"r" (__pa(swapper_pg_dir)));
 	                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#750: FILE: arch/i386/kernel/kmsg_reboot.c:197:
+	if (chkpnt<600) {
+	    chkpnt=600;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#750: FILE: arch/i386/kernel/kmsg_reboot.c:197:
+	if (chkpnt<600) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#751: FILE: arch/i386/kernel/kmsg_reboot.c:198:
+	    chkpnt=600;
 	          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#763: FILE: arch/i386/kernel/kmsg_reboot.c:210:
+	/* For the switch to real mode, copy some code to low memory, out of
+	   the way of BIOS variables. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#763: FILE: arch/i386/kernel/kmsg_reboot.c:210:
+	   the way of BIOS variables. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#765: FILE: arch/i386/kernel/kmsg_reboot.c:212:
+	if (chkpnt<700) {
+	    chkpnt=700;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#765: FILE: arch/i386/kernel/kmsg_reboot.c:212:
+	if (chkpnt<700) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#766: FILE: arch/i386/kernel/kmsg_reboot.c:213:
+	    chkpnt=700;
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: arch/i386/kernel/kmsg_reboot.c:215:
+	    memset ((char *)CODEORIGIN, 0, 0x1000-CODEORIGIN); /* get a clean first page */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#768: FILE: arch/i386/kernel/kmsg_reboot.c:215:
+	    memset ((char *)CODEORIGIN, 0, 0x1000-CODEORIGIN); /* get a clean first page */
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: arch/i386/kernel/kmsg_reboot.c:219:
+	    memcpy ((char *)CODEORIGIN, kmsgdump, kmsgdump_end-kmsgdump);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#772: FILE: arch/i386/kernel/kmsg_reboot.c:219:
+	    memcpy ((char *)CODEORIGIN, kmsgdump, kmsgdump_end-kmsgdump);
 	                                                      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#777: FILE: arch/i386/kernel/kmsg_reboot.c:224:
+	if (chkpnt<800) {
+	    char *c;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#777: FILE: arch/i386/kernel/kmsg_reboot.c:224:
+	if (chkpnt<800) {
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#778: FILE: arch/i386/kernel/kmsg_reboot.c:225:
+	    char *c;

WARNING:TABSTOP: Statements should start on a tabstop
#779: FILE: arch/i386/kernel/kmsg_reboot.c:226:
+	    int *var = NULL;

WARNING:TABSTOP: Statements should start on a tabstop
#780: FILE: arch/i386/kernel/kmsg_reboot.c:227:
+	    int val = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#781: FILE: arch/i386/kernel/kmsg_reboot.c:228:
+	    int val = 0;
+	    chkpnt = 800;

WARNING:TABSTOP: Statements should start on a tabstop
#785: FILE: arch/i386/kernel/kmsg_reboot.c:232:
+	    while (*c) {

ERROR:SPACING: space required before the open parenthesis '('
#786: FILE: arch/i386/kernel/kmsg_reboot.c:233:
+		switch(*c) {

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#787: FILE: arch/i386/kernel/kmsg_reboot.c:234:
+		case 'F' : modeflags |=  MASK_OUTPUTFAT; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#787: FILE: arch/i386/kernel/kmsg_reboot.c:234:
+		case 'F' : modeflags |=  MASK_OUTPUTFAT; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#788: FILE: arch/i386/kernel/kmsg_reboot.c:235:
+		case 'R' : modeflags &= ~MASK_OUTPUTFAT; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#788: FILE: arch/i386/kernel/kmsg_reboot.c:235:
+		case 'R' : modeflags &= ~MASK_OUTPUTFAT; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#789: FILE: arch/i386/kernel/kmsg_reboot.c:236:
+		case 'I' : modeflags |=  MASK_PANICMAN; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#789: FILE: arch/i386/kernel/kmsg_reboot.c:236:
+		case 'I' : modeflags |=  MASK_PANICMAN; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#790: FILE: arch/i386/kernel/kmsg_reboot.c:237:
+		case 'A' : modeflags &= ~MASK_PANICMAN; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#790: FILE: arch/i386/kernel/kmsg_reboot.c:237:
+		case 'A' : modeflags &= ~MASK_PANICMAN; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#791: FILE: arch/i386/kernel/kmsg_reboot.c:238:
+		case 'B' : modeflags |=  MASK_PANICBOOT; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#791: FILE: arch/i386/kernel/kmsg_reboot.c:238:
+		case 'B' : modeflags |=  MASK_PANICBOOT; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#792: FILE: arch/i386/kernel/kmsg_reboot.c:239:
+		case 'H' : modeflags &= ~MASK_PANICBOOT; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#792: FILE: arch/i386/kernel/kmsg_reboot.c:239:
+		case 'H' : modeflags &= ~MASK_PANICBOOT; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#793: FILE: arch/i386/kernel/kmsg_reboot.c:240:
+		case 'S' : modeflags |=  MASK_SAFEDUMP; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#793: FILE: arch/i386/kernel/kmsg_reboot.c:240:
+		case 'S' : modeflags |=  MASK_SAFEDUMP; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#794: FILE: arch/i386/kernel/kmsg_reboot.c:241:
+		case 'O' : modeflags &= ~MASK_SAFEDUMP; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#794: FILE: arch/i386/kernel/kmsg_reboot.c:241:
+		case 'O' : modeflags &= ~MASK_SAFEDUMP; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#795: FILE: arch/i386/kernel/kmsg_reboot.c:242:
+		case 'E' : modeflags |=  MASK_PANICDUMP; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#795: FILE: arch/i386/kernel/kmsg_reboot.c:242:
+		case 'E' : modeflags |=  MASK_PANICDUMP; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#796: FILE: arch/i386/kernel/kmsg_reboot.c:243:
+		case 'D' : modeflags &= ~MASK_PANICDUMP; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#796: FILE: arch/i386/kernel/kmsg_reboot.c:243:
+		case 'D' : modeflags &= ~MASK_PANICDUMP; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#797: FILE: arch/i386/kernel/kmsg_reboot.c:244:
+		case 'T' : var = &track; val = 0; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#797: FILE: arch/i386/kernel/kmsg_reboot.c:244:
+		case 'T' : var = &track; val = 0; break;

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#798: FILE: arch/i386/kernel/kmsg_reboot.c:245:
+		case 'U' : var = &unit;  val = 0; break;
 		         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#798: FILE: arch/i386/kernel/kmsg_reboot.c:245:
+		case 'U' : var = &unit;  val = 0; break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#800: FILE: arch/i386/kernel/kmsg_reboot.c:247:
+		if (*c>='0' && *c<='9')
+		    val=(val*10)+(*c-'0');

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#800: FILE: arch/i386/kernel/kmsg_reboot.c:247:
+		if (*c>='0' && *c<='9')
 		      ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#800: FILE: arch/i386/kernel/kmsg_reboot.c:247:
+		if (*c>='0' && *c<='9')
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#801: FILE: arch/i386/kernel/kmsg_reboot.c:248:
+		    val=(val*10)+(*c-'0');
 		       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#801: FILE: arch/i386/kernel/kmsg_reboot.c:248:
+		    val=(val*10)+(*c-'0');
 		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#801: FILE: arch/i386/kernel/kmsg_reboot.c:248:
+		    val=(val*10)+(*c-'0');
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#801: FILE: arch/i386/kernel/kmsg_reboot.c:248:
+		    val=(val*10)+(*c-'0');
 		                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {
+		    *var = val;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {
 		       ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {
 		                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var != NULL'
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {
+		    *var = val;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "var"
#804: FILE: arch/i386/kernel/kmsg_reboot.c:251:
+		if ((*c<'0' || *c>'9') && (var != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TABSTOP: Statements should start on a tabstop
#807: FILE: arch/i386/kernel/kmsg_reboot.c:254:
+	    }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#820: FILE: arch/i386/kernel/kmsg_reboot.c:267:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#821: FILE: arch/i386/kernel/kmsg_reboot.c:268:
+	if (chkpnt<900) {
+	    chkpnt=900;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#821: FILE: arch/i386/kernel/kmsg_reboot.c:268:
+	if (chkpnt<900) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#822: FILE: arch/i386/kernel/kmsg_reboot.c:269:
+	    chkpnt=900;
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#824: FILE: arch/i386/kernel/kmsg_reboot.c:271:
+	    if (callertype == DUMP_FROM_SYSRQ)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#829: FILE: arch/i386/kernel/kmsg_reboot.c:276:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#830: FILE: arch/i386/kernel/kmsg_reboot.c:277:
+	if (chkpnt<1000) {
+	    chkpnt=1000;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#830: FILE: arch/i386/kernel/kmsg_reboot.c:277:
+	if (chkpnt<1000) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#831: FILE: arch/i386/kernel/kmsg_reboot.c:278:
+	    chkpnt=1000;
 	          ^

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#833: FILE: arch/i386/kernel/kmsg_reboot.c:280:
+	    memset (phys_to_virt(BEGINOFMESSAGES), 0, LOG_BUF_LEN); /* pre-initialize the messages buffer */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#833: FILE: arch/i386/kernel/kmsg_reboot.c:280:
+	    memset (phys_to_virt(BEGINOFMESSAGES), 0, LOG_BUF_LEN); /* pre-initialize the messages buffer */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#840: FILE: arch/i386/kernel/kmsg_reboot.c:287:
+	/* We only have to inform the BIOS to where we need to jump,
+	   and initialize an image of the register bank in memory. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#840: FILE: arch/i386/kernel/kmsg_reboot.c:287:
+	   and initialize an image of the register bank in memory. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#841: FILE: arch/i386/kernel/kmsg_reboot.c:288:
+	if (chkpnt<1100) {
+	    chkpnt=1100;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#841: FILE: arch/i386/kernel/kmsg_reboot.c:288:
+	if (chkpnt<1100) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#842: FILE: arch/i386/kernel/kmsg_reboot.c:289:
+	    chkpnt=1100;
 	          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#844: FILE: arch/i386/kernel/kmsg_reboot.c:291:
+^I    *((unsigned short *)(BOOTSTACKFRAME+0x16)) = 0;^I       ^I/* CS */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#844: FILE: arch/i386/kernel/kmsg_reboot.c:291:
+	    *((unsigned short *)(BOOTSTACKFRAME+0x16)) = 0;	       	/* CS */
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: arch/i386/kernel/kmsg_reboot.c:293:
+	    *((unsigned short *)(BOOTSTACKFRAME+0x14)) = CODEORIGIN;	/* IP */
 	                                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#851: FILE: arch/i386/kernel/kmsg_reboot.c:298:
+	    *((unsigned short *)0x469) = ((int)BOOTSTACKFRAME)>>4 & 0xF000;
 	                                                      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#856: FILE: arch/i386/kernel/kmsg_reboot.c:303:
+	if (chkpnt<1200) {
+	    chkpnt=1200;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#856: FILE: arch/i386/kernel/kmsg_reboot.c:303:
+	if (chkpnt<1200) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#857: FILE: arch/i386/kernel/kmsg_reboot.c:304:
+	    chkpnt=1200;
 	          ^

WARNING:TABSTOP: Statements should start on a tabstop
#858: FILE: arch/i386/kernel/kmsg_reboot.c:305:
+	    for (;;) {

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#863: FILE: arch/i386/kernel/kmsg_reboot.c:310:
+		__asm__ __volatile__("lidt %0": :"m" (no_idt));
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#863: FILE: arch/i386/kernel/kmsg_reboot.c:310:
+		__asm__ __volatile__("lidt %0": :"m" (no_idt));
 		                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#865: FILE: arch/i386/kernel/kmsg_reboot.c:312:
+	    }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#873: FILE: arch/i386/kernel/kmsgdump.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: arch/i386/kernel/kmsgdump.S:5:
+ *^I$

WARNING:TYPO_SPELLING: 'adresses' may be misspelled - perhaps 'addresses'?
#886: FILE: arch/i386/kernel/kmsgdump.S:14:
+ * Useful information are stored at the following hexadecimal adresses :
                                                               ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#901: FILE: arch/i386/kernel/kmsgdump.S:29:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: arch/i386/kernel/kmsgdump.S:43:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/i386/kernel/kmsgdump.S:47:
+^I$

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#928: FILE: arch/i386/kernel/kmsgdump.S:56:
+ * the diskette is useable as-is.
                    ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#931: FILE: arch/i386/kernel/kmsgdump.S:59:
+bootstrap:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: arch/i386/kernel/kmsgdump.S:63:
+0:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: arch/i386/kernel/kmsgdump.S:82:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: arch/i386/kernel/kmsgdump.S:88:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: arch/i386/kernel/kmsgdump.S:95:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: arch/i386/kernel/kmsgdump.S:98:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: arch/i386/kernel/kmsgdump.S:146:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1020: FILE: arch/i386/kernel/kmsgdump.S:148:
+redrawmessages:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: arch/i386/kernel/kmsgdump.S:158:
+^Ijnz^I3f^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: arch/i386/kernel/kmsgdump.S:164:
+findline:^I$

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1049: FILE: arch/i386/kernel/kmsgdump.S:177:
+	cmpb	$0, mustredraw-kmsgdump+CODEORIGIN	/* if we must redraw the messages window, let's do it */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1063: FILE: arch/i386/kernel/kmsgdump.S:191:
+1:	movb	%al, unitname-kmsgdump+CODEORIGIN		/* write the drive letter into the string */

WARNING:TYPO_SPELLING: 'positionned' may be misspelled - perhaps 'positioned'?
#1067: FILE: arch/i386/kernel/kmsgdump.S:195:
+/* SI is already positionned at msgFAT, so we avoid "movw $msgFAT,%si" */
                  ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: arch/i386/kernel/kmsgdump.S:248:
+^Ijnz^I5b^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: arch/i386/kernel/kmsgdump.S:287:
+^Ijbe^I1f^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: arch/i386/kernel/kmsgdump.S:297:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: arch/i386/kernel/kmsgdump.S:299:
+printbuffer:^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: arch/i386/kernel/kmsgdump.S:326:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1237: FILE: arch/i386/kernel/kmsgdump.S:365:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: arch/i386/kernel/kmsgdump.S:374:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: arch/i386/kernel/kmsgdump.S:403:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1283: FILE: arch/i386/kernel/kmsgdump.S:411:
+hardware_reset:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: arch/i386/kernel/kmsgdump.S:442:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1325: FILE: arch/i386/kernel/kmsgdump.S:453:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: arch/i386/kernel/kmsgdump.S:465:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1365: FILE: arch/i386/kernel/kmsgdump.S:493:
+^Iret^I^I$

WARNING:TYPO_SPELLING: 'interprete' may be misspelled - perhaps 'interpret'?
#1398: FILE: arch/i386/kernel/kmsgdump.S:526:
+/* Make sure [40:72] doesn't contain 0x1234, which the Bios will interprete as
                                                                  ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'positionned' may be misspelled - perhaps 'positioned'?
#1449: FILE: arch/i386/kernel/kmsgdump.S:577:
+ * if LF is encountered, the cursor is positionned at the beginning of the next line and
                                        ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: arch/i386/kernel/kmsgdump.S:592:
+^Ilodsb^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: arch/i386/kernel/kmsgdump.S:644:
+#ifdef STEP_BY_STEP^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1591: FILE: arch/i386/kernel/kmsgdump.S:719:
+ * We'll use a trick to write the two FATs : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: arch/i386/kernel/kmsgdump.S:728:
+^Ijc^I0f^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1638: FILE: arch/i386/kernel/kmsgdump.S:766:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1731: FILE: arch/i386/kernel/kmsgdump.S:859:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1735: FILE: arch/i386/kernel/kmsgdump.S:863:
+^I$

WARNING:LONG_LINE_STRING: line length of 139 exceeds 100 columns
#1739: FILE: arch/i386/kernel/kmsgdump.S:867:
+helpline:	.asciz	"> \377Boot \377Dump \377Format \377Halt \377Info \377Print prin\377Ter \377Unit \377U\377p \377D\377o\377w\377n <"

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1743: FILE: arch/i386/kernel/kmsgdump.S:871:
+msgunit:	.ascii	"Drive Unit and Format : \377" /* no zero string -> will display drive letter */

WARNING:TYPO_SPELLING: 'Formating' may be misspelled - perhaps 'Formatting'?
#1753: FILE: arch/i386/kernel/kmsgdump.S:881:
+statform:	.asciz	"Formating FAT12"
          	      	 ^^^^^^^^^

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#1762: FILE: arch/i386/kernel/kmsgdump.S:890:
+		.ascii	"<\377B> reboots, <\377D> dumps messages onto the floppy, <\377F> changes floppy\n"

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#1763: FILE: arch/i386/kernel/kmsgdump.S:891:
+		.ascii	"format, <\377H> halts the system, <\377P> prints the messages on the selected\n"

WARNING:LONG_LINE_STRING: line length of 135 exceeds 100 columns
#1764: FILE: arch/i386/kernel/kmsgdump.S:892:
+		.ascii	"printer, <\377T> selects a printer, <\377U> changes the floppy unit, \377U\377p/\377D\377o\377w\377n arrows\n"

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#1765: FILE: arch/i386/kernel/kmsgdump.S:893:
+		.ascii	"scroll messages up/down, and <\377I> shows this help. When an action completes\n"

WARNING:LONG_LINE_STRING: line length of 121 exceeds 100 columns
#1767: FILE: arch/i386/kernel/kmsgdump.S:895:
+		.ascii	"When dumping data onto a floppy, be warned that FLOPPY CONTENTS WILL BE \377L\377O\377S\377T.\n"

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1778: FILE: drivers/char/sysrq.c:80:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

Architecture specific defines should be avoided wherever
possible.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1780: FILE: drivers/char/sysrq.c:82:
+^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1781: FILE: drivers/char/sysrq.c:83:
+static void sysrq_handle_dump(int key, struct pt_regs *pt_regs,
+		struct tty_struct *tty) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1782: FILE: drivers/char/sysrq.c:84:
+static void sysrq_handle_dump(int key, struct pt_regs *pt_regs,
+		struct tty_struct *tty) {

WARNING:INDENTED_LABEL: labels should not be indented
#1787: FILE: drivers/char/sysrq.c:89:
+	handler:        sysrq_handle_dump,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1788: FILE: drivers/char/sysrq.c:90:
+	help_msg:       "Dump",
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1788: FILE: drivers/char/sysrq.c:90:
+	help_msg:       "Dump",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1789: FILE: drivers/char/sysrq.c:91:
+	action_msg:     "Trying to dump through real mode\n",
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#1789: FILE: drivers/char/sysrq.c:91:
+	action_msg:     "Trying to dump through real mode\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1793: FILE: drivers/char/sysrq.c:95:
+
+

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1802: FILE: drivers/char/sysrq.c:255:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1814: FILE: include/asm-i386/kmsgdump.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#1827: FILE: include/asm-i386/kmsgdump.h:14:
+#define LOG_BUF_LEN	(1 << CONFIG_LOG_BUF_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1833: FILE: include/asm-i386/kmsgdump.h:20:
+#define FREEMEMORY	(BEGINOFMESSAGES+LOG_BUF_LEN)
                   	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1835: FILE: include/asm-i386/kmsgdump.h:22:
+#define BOOTSTACKFRAME^I0xFB0^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1872: FILE: include/asm-i386/kmsgdump.h:59:
+/* At the moment, most versions of gas are broken so you can't activate
+   the following line which is the correct one. However, as long as the

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1880: FILE: include/asm-i386/kmsgdump.h:67:
+#  define	NBCLUSTERS		((NBHEADS*NBTRACKS*NBSECT)/SECTPERCLUST)
          	          		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1880: FILE: include/asm-i386/kmsgdump.h:67:
+#  define	NBCLUSTERS		((NBHEADS*NBTRACKS*NBSECT)/SECTPERCLUST)
          	          		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1880: FILE: include/asm-i386/kmsgdump.h:67:
+#  define	NBCLUSTERS		((NBHEADS*NBTRACKS*NBSECT)/SECTPERCLUST)
          	          		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1882: FILE: include/asm-i386/kmsgdump.h:69:
+#  define	NBCLUSTERS		(NBHEADS*NBTRACKS*NBSECT)
          	          		        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1882: FILE: include/asm-i386/kmsgdump.h:69:
+#  define	NBCLUSTERS		(NBHEADS*NBTRACKS*NBSECT)
          	          		                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1885: FILE: include/asm-i386/kmsgdump.h:72:
+#define	FATSIZE			((NBCLUSTERS*3+1023)>>10)
        	       			            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1885: FILE: include/asm-i386/kmsgdump.h:72:
+#define	FATSIZE			((NBCLUSTERS*3+1023)>>10)
        	       			              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1885: FILE: include/asm-i386/kmsgdump.h:72:
+#define	FATSIZE			((NBCLUSTERS*3+1023)>>10)
        	       			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1898: FILE: include/asm-i386/kmsgdump.h:85:
+#define MKWORD(h,l)		((h)<<8|(l))
                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1898: FILE: include/asm-i386/kmsgdump.h:85:
+#define MKWORD(h,l)		((h)<<8|(l))
                    		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1898: FILE: include/asm-i386/kmsgdump.h:85:
+#define MKWORD(h,l)		((h)<<8|(l))
                    		       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1902: FILE: include/asm-i386/kmsgdump.h:89:
+extern void kmsgdump(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1903: FILE: include/asm-i386/kmsgdump.h:90:
+extern void kmsgdump_end(void);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1914: FILE: include/linux/sysctl.h:115:
+	KERN_KMSGDUMP=44,	/* string: kmsgdump flags. Reuse Stop-A ID */
 	             ^

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1925: FILE: kernel/panic.c:23:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1930: FILE: kernel/panic.c:28:
+
+

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1938: FILE: kernel/panic.c:81:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1940: FILE: kernel/panic.c:83:
+	/* We allow SysRq to be used for <panic_timeout> seconds, and
+	   then the dump is forced. This way, if IRQs are frozen and

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#1947: FILE: kernel/panic.c:90:
+	printk(KERN_EMERG "Dumping messages in %d seconds : last chance for Alt-SysRq...",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1948: FILE: kernel/panic.c:91:
+	printk(KERN_EMERG "Dumping messages in %d seconds : last chance for Alt-SysRq...",
+		panic_timeout);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1956: FILE: kernel/panic.c:99:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1957: FILE: kernel/panic.c:100:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1957: FILE: kernel/panic.c:100:
+		
+	

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1968: FILE: kernel/printk.c:374:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1979: FILE: kernel/printk.c:385:
+void dump_syslog(char *buf) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1983: FILE: kernel/printk.c:389:
+^I^Ireturn;^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1993: FILE: kernel/printk.c:399:
+	for (i = 0; (i < count) && (j != log_end); i++, j++) {
+		buf[i] = LOG_BUF(j);
+	}

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#2010: FILE: kernel/sysctl.c:93:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#2021: FILE: kernel/sysctl.c:520:
+#if defined(__i386__) && defined(CONFIG_KMSGDUMP)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2027: FILE: kernel/sysctl.c:526:
+^I ^I.mode^I^I= 0644,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2027: FILE: kernel/sysctl.c:526:
+^I ^I.mode^I^I= 0644,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275220.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 136 errors, 95 warnings, 42 checks, 1921 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275220.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
