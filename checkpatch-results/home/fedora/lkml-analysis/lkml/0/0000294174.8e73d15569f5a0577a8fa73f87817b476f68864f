WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .24305-2.6.3-mm1-atomic-cpudown-i386.pre/arch/i386/Kconfig .24305-2.6.3-mm1-atomic-cpudown-i386/arch/i386/Kconfig

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: arch/i386/kernel/irq.c:150:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#182: FILE: arch/i386/kernel/irq.c:433:
+	if (cpu_is_offline(smp_processor_id())
+	    && system_running

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#183: FILE: arch/i386/kernel/irq.c:434:
+	    && system_running
+	    && !irqs_stabilizing)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#184: FILE: arch/i386/kernel/irq.c:435:
+		printk(KERN_ERR "IRQ %i on offline %i\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: arch/i386/kernel/irq.c:986:
+		cpumask_t mask;
+		cpus_and(mask, irq_affinity[irq], cpu_online_map);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#207: FILE: arch/i386/kernel/irq.c:987:
+		if (any_online_cpu(mask) == NR_CPUS) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: arch/i386/kernel/irq.c:988:
+			printk("Breaking affinity for irq %i\n", irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: arch/i386/kernel/irq.c:994:
+			printk("Cannot set affinity for irq %i\n", irq);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#217: FILE: arch/i386/kernel/irq.c:997:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#221: FILE: arch/i386/kernel/irq.c:1001:
+	/* Ingo Molnar says: "after the IO-APIC masks have been redirected
+	   [note the nop - the interrupt-enable boundary on x86 is two

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: arch/i386/kernel/irq.c:1003:
+	   IPIs. After this point nothing is supposed to reach this CPU." */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#231: FILE: arch/i386/kernel/irq.c:1011:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#275: FILE: arch/i386/kernel/process.c:151:
+	 * it "work" for testing purposes. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#289: FILE: arch/i386/kernel/process.c:165:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#370: FILE: arch/i386/kernel/smp.c:525:
+	cpus = num_online_cpus()-1;
 	                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#416: FILE: arch/i386/kernel/smpboot.c:1340:
+	mb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#429: FILE: arch/i386/kernel/smpboot.c:1354:
+static int __devinit cpu_enable(unsigned int cpu)

WARNING:MEMORY_BARRIER: memory barrier without comment
#437: FILE: arch/i386/kernel/smpboot.c:1358:
+	wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: arch/i386/kernel/smpboot.c:1374:
+ ^I *$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#453: FILE: arch/i386/kernel/smpboot.c:1374:
+ ^I *$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#475: FILE: arch/i386/kernel/smpboot.c:1396:
+		schedule_timeout(HZ/10);
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: arch/i386/kernel/smpboot.c:1398:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: arch/i386/kernel/smpboot.c:1398:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: arch/i386/kernel/smpboot.c:1398:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#477: FILE: arch/i386/kernel/smpboot.c:1398:
+ 	printk(KERN_ERR "CPU %u didn't die...\n", cpu);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#482: FILE: arch/i386/kernel/smpboot.c:1403:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#488: FILE: arch/i386/kernel/smpboot.c:1409:
+	BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#492: FILE: arch/i386/kernel/smpboot.c:1413:
+int __devinit __cpu_up(unsigned int cpu)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#496: FILE: arch/i386/kernel/smpboot.c:1417:
+		printk(KERN_DEBUG "skipping cpu%d, didn't come online\n", cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: include/asm-i386/smp.h:88:
+extern int __cpu_disable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#538: FILE: include/asm-i386/smp.h:89:
+extern void __cpu_die(unsigned int cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 22 warnings, 7 checks, 430 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
