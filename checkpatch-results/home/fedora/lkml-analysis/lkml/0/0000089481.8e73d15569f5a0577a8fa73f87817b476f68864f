WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
Nick Piggin suggested that the patch submited alone, as well as using 1 bit=

WARNING:TYPO_SPELLING: 'submited' may be misspelled - perhaps 'submitted'?
#70: 
Nick Piggin suggested that the patch submited alone, as well as using 1 bit=
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#94: FILE: include/linux/mm.h=092006-03-29:167:
map) */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: mm/mlock.c:15:
+static int do_mlock(unsigned long start, size_t len,unsigned int jump_hole)
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: mm/mlock.c:20:
+	struct vm_area_struct * vma, *prev, **pprev,*next;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#520: FILE: mm/mlock.c:20:
+	struct vm_area_struct * vma, *prev, **pprev,*next;
 	                                           ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#520: FILE: mm/mlock.c:20:
+	struct vm_area_struct * vma, *prev, **pprev,*next;
 	                                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#556: FILE: mm/mlock.c:44:
+				if (!ret) {
[...]
+				else		
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: mm/mlock.c:48:
+^I^I^I^Ielse^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#560: FILE: mm/mlock.c:48:
+				}
+				else		

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: mm/mlock.c:53:
+   ^I^I^I^Iif (!ret) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: mm/mlock.c:53:
+   ^I^I^I^Iif (!ret) $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: mm/mlock.c:53:
+   ^I^I^I^Iif (!ret) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: mm/mlock.c:53:
+   ^I^I^I^Iif (!ret) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: mm/mlock.c:66:
+   ^I^I^Iret = make_pages_present(vma->vm_start, vma->vm_end);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: mm/mlock.c:66:
+   ^I^I^Iret = make_pages_present(vma->vm_start, vma->vm_end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: mm/mlock.c:66:
+   ^I^I^Iret = make_pages_present(vma->vm_start, vma->vm_end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: mm/mlock.c:75:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: mm/mlock.c:76:
+^I^I/* If called from do_mlockall, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: mm/mlock.c:77:
+^I^I * we may jump over holes. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: mm/mlock.c:79:
+^I^Iif (jump_hole) { $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#606: FILE: mm/mlock.c:85:
+		}
+		else if (!vma || vma->vm_start != prev->vm_end) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: mm/mlock.c:94:
+^I/* $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#633: FILE: mm/mlock.c:98:
+	while (vma && vma->vm_end <= vmoff ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: mm/mlock.c:111:
+		*pprev = vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
+					vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: mm/mlock.c:111:
+					vma->anon_vma,vma->vm_file, vma->vm_pgoff, vma_policy(vma));
 					             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#667: FILE: mm/mlock.c:124:
+	unsigned long  end = 0,vmoff = 0;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#669: FILE: mm/mlock.c:126:
+	struct mm_struct *mm=current->mm;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#670: FILE: mm/mlock.c:127:
+	struct vm_area_struct * vma, *prev, **pprev, *next;

ERROR:SPACING: space required before the open parenthesis '('
#686: FILE: mm/mlock.c:142:
+			if(vma->vm_end < end)

CHECK:BRACES: braces {} should be used on all arms of this statement
#694: FILE: mm/mlock.c:150:
+				if (!ret) {
[...]
+				else 
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: mm/mlock.c:154:
+^I^I^I^Ielse $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#698: FILE: mm/mlock.c:154:
+				}
+				else 

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#716: FILE: mm/mlock.c:171:
+		pages += (vma->vm_end -vma->vm_start) >> PAGE_SHIFT;
 		                      ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#747: FILE: mm/mlock.c:185:
+				break;
+			else

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#750: FILE: mm/mlock.c:188:
+		}
+		else if (!vma || (vma->vm_start != prev->vm_end)) {

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#764: FILE: mm/mlock.c:201:
+				vma->vm_flags &=~VM_LOCKED;
 				              ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#764: FILE: mm/mlock.c:201:
+				vma->vm_flags &=~VM_LOCKED;
 				                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: mm/mlock.c:210:
+		*pprev = vma_merge(mm, *pprev, vma->vm_start, vma->vm_end, vma->vm_flags,
+				vma->anon_vma, vma->vm_file, vma->vm_pgoff, vma_policy(vma));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: mm/mlock.c:218:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#809: FILE: mm/mlock.c:263:
+	struct vm_area_struct * vma;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#832: FILE: mm/mlock.c:283:
+	struct vm_area_struct * vma;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 7 warnings, 5 checks, 739 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
