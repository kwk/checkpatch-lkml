ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#55: 
--- a/include/net/x25.h	Mon Oct  7 00:29:00 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/net/x25.h:223:
+extern void x25_route_device_down(struct net_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/net/x25.h:271:
+extern int x25_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/net/x25.h:272:
+extern void x25_proc_exit(void);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#162: FILE: net/x25/af_x25.c:345:
+			/*
+			 * Queue the unaccepted socket for death

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#406: FILE: net/x25/x25_proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: net/x25/x25_proc.c:6:
+ *^Iscrew up. It might even work. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#433: FILE: net/x25/x25_proc.c:28:
+static __inline__ struct x25_route *x25_get_route_idx(loff_t pos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: net/x25/x25_proc.c:65:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: net/x25/x25_proc.c:91:
+} $

WARNING:INLINE: plain inline is preferred over __inline__
#498: FILE: net/x25/x25_proc.c:93:
+static __inline__ struct sock *x25_get_socket_idx(loff_t pos)

WARNING:SPLIT_STRING: quoted string split across lines
#547: FILE: net/x25/x25_proc.c:142:
+		seq_printf(seq, "dest_addr  src_addr   dev   lci st vs vr "
+				"va   t  t2 t21 t22 t23 Snd-Q Rcv-Q inode\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#554: FILE: net/x25/x25_proc.c:149:
+	if (!x25->neighbour || (dev = x25->neighbour->dev) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPLIT_STRING: quoted string split across lines
#560: FILE: net/x25/x25_proc.c:155:
+	seq_printf(seq, "%-10s %-10s %-5s %3.3X  %d  %d  %d  %d %3lu %3lu "
+			"%3lu %3lu %3lu %5d %5d %ld\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: net/x25/x25_proc.c:165:
+} $

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#572: FILE: net/x25/x25_proc.c:167:
+struct seq_operations x25_seq_route_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#579: FILE: net/x25/x25_proc.c:174:
+struct seq_operations x25_seq_socket_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#596: FILE: net/x25/x25_proc.c:191:
+static struct file_operations x25_seq_socket_fops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#603: FILE: net/x25/x25_proc.c:198:
+static struct file_operations x25_seq_route_fops = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#610: FILE: net/x25/x25_proc.c:205:
+static int x25_proc_perms(struct inode* inode, int op)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#615: FILE: net/x25/x25_proc.c:210:
+static struct inode_operations x25_seq_inode = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 11 warnings, 3 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
