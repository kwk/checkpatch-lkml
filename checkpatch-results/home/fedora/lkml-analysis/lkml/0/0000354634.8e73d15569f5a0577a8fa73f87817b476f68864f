WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -uNrwB --new-file linux-2.6.0-test1.work/drivers/media/dvb/b2c2/Kconfig linux-2.6.0-test1.patch/drivers/media/dvb/b2c2/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#32: FILE: drivers/media/dvb/b2c2/Kconfig:1:
+config DVB_B2C2_SKYSTAR
+	tristate "Technisat Skystar2 PCI"
+	depends on DVB_CORE
+	help
+	  Support for the Skystar2 PCI DVB card by Technisat, which
+	  is equipped with the FlexCopII chipset by B2C2.
+
+	  Say Y if you own such a device and want to use it.

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#46: FILE: drivers/media/dvb/b2c2/Makefile:3:
+EXTRA_CFLAGS = -Idrivers/media/dvb/dvb-core/

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/media/dvb/b2c2/skystar2.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: drivers/media/dvb/b2c2/skystar2.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/media/dvb/b2c2/skystar2.c:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#88: FILE: drivers/media/dvb/b2c2/skystar2.c:38:
+int debug = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: drivers/media/dvb/b2c2/skystar2.c:39:
+#define dprintk	if(debug != 0) printk

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#89: FILE: drivers/media/dvb/b2c2/skystar2.c:39:
+#define dprintk	if(debug != 0) printk

CHECK:CAMELCASE: Avoid CamelCase: <SizeOfBufDMA1>
#91: FILE: drivers/media/dvb/b2c2/skystar2.c:41:
+#define SizeOfBufDMA1	0x3AC00

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SizeOfBufDMA2>
#92: FILE: drivers/media/dvb/b2c2/skystar2.c:42:
+#define SizeOfBufDMA2	0x758

CHECK:CAMELCASE: Avoid CamelCase: <DmaQ>
#94: FILE: drivers/media/dvb/b2c2/skystar2.c:44:
+struct DmaQ {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#95: FILE: drivers/media/dvb/b2c2/skystar2.c:45:
+struct DmaQ {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#104: FILE: drivers/media/dvb/b2c2/skystar2.c:54:
+struct packet_header_t {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#116: FILE: drivers/media/dvb/b2c2/skystar2.c:66:
+struct adapter {
+

CHECK:CAMELCASE: Avoid CamelCase: <PidFilterMax>
#121: FILE: drivers/media/dvb/b2c2/skystar2.c:71:
+	u32 PidFilterMax;

CHECK:CAMELCASE: Avoid CamelCase: <MacFilterMax>
#122: FILE: drivers/media/dvb/b2c2/skystar2.c:72:
+	u32 MacFilterMax;

CHECK:CAMELCASE: Avoid CamelCase: <dwSramType>
#127: FILE: drivers/media/dvb/b2c2/skystar2.c:77:
+	u32 dwSramType;

CHECK:CAMELCASE: Avoid CamelCase: <DmaQ1>
#139: FILE: drivers/media/dvb/b2c2/skystar2.c:89:
+	struct DmaQ DmaQ1;

CHECK:CAMELCASE: Avoid CamelCase: <DmaQ2>
#140: FILE: drivers/media/dvb/b2c2/skystar2.c:90:
+	struct DmaQ DmaQ2;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#147: FILE: drivers/media/dvb/b2c2/skystar2.c:97:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: drivers/media/dvb/b2c2/skystar2.c:103:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#157: FILE: drivers/media/dvb/b2c2/skystar2.c:107:
+		udelay(1000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <WriteRegDW>
#167: FILE: drivers/media/dvb/b2c2/skystar2.c:117:
+void WriteRegDW(struct adapter *adapter, u32 reg, u32 value)

CHECK:CAMELCASE: Avoid CamelCase: <ReadRegDW>
#179: FILE: drivers/media/dvb/b2c2/skystar2.c:129:
+u32 ReadRegDW(struct adapter *adapter, u32 reg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: drivers/media/dvb/b2c2/skystar2.c:134:
+u32 WriteRegOp(struct adapter * adapter, u32 reg, u32 operation, u32 andvalue, u32 orvalue)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <WriteRegOp>
#184: FILE: drivers/media/dvb/b2c2/skystar2.c:134:
+u32 WriteRegOp(struct adapter * adapter, u32 reg, u32 operation, u32 andvalue, u32 orvalue)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: drivers/media/dvb/b2c2/skystar2.c:156:
+u32 i2cMainWriteForFlex2(struct adapter * adapter, u32 command, u8 * buf, u32 retries)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: drivers/media/dvb/b2c2/skystar2.c:156:
+u32 i2cMainWriteForFlex2(struct adapter * adapter, u32 command, u8 * buf, u32 retries)

CHECK:CAMELCASE: Avoid CamelCase: <i2cMainWriteForFlex2>
#206: FILE: drivers/media/dvb/b2c2/skystar2.c:156:
+u32 i2cMainWriteForFlex2(struct adapter * adapter, u32 command, u8 * buf, u32 retries)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#226: FILE: drivers/media/dvb/b2c2/skystar2.c:176:
+		} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <i2cMainSetup>
#240: FILE: drivers/media/dvb/b2c2/skystar2.c:190:
+u32 i2cMainSetup(u32 device, u32 chip_addr, u8 op, u8 addr, u32 value, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: drivers/media/dvb/b2c2/skystar2.c:204:
+u32 FlexI2cRead4(struct adapter * adapter, u32 device, u32 chip_addr, u16 addr, u8 * buf, u8 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: drivers/media/dvb/b2c2/skystar2.c:204:
+u32 FlexI2cRead4(struct adapter * adapter, u32 device, u32 chip_addr, u16 addr, u8 * buf, u8 len)

CHECK:CAMELCASE: Avoid CamelCase: <FlexI2cRead4>
#254: FILE: drivers/media/dvb/b2c2/skystar2.c:204:
+u32 FlexI2cRead4(struct adapter * adapter, u32 device, u32 chip_addr, u16 addr, u8 * buf, u8 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: drivers/media/dvb/b2c2/skystar2.c:229:
+u32 FlexI2cWrite4(struct adapter * adapter, u32 device, u32 chip_addr, u32 addr, u8 * buf, u8 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: drivers/media/dvb/b2c2/skystar2.c:229:
+u32 FlexI2cWrite4(struct adapter * adapter, u32 device, u32 chip_addr, u32 addr, u8 * buf, u8 len)

CHECK:CAMELCASE: Avoid CamelCase: <FlexI2cWrite4>
#279: FILE: drivers/media/dvb/b2c2/skystar2.c:229:
+u32 FlexI2cWrite4(struct adapter * adapter, u32 device, u32 chip_addr, u32 addr, u8 * buf, u8 len)

CHECK:CAMELCASE: Avoid CamelCase: <fixChipAddr>
#301: FILE: drivers/media/dvb/b2c2/skystar2.c:251:
+u32 fixChipAddr(u32 device, u32 bus, u32 addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/media/dvb/b2c2/skystar2.c:259:
+u32 FLEXI2C_read(struct adapter * adapter, u32 device, u32 bus, u32 addr, u8 * buf, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/media/dvb/b2c2/skystar2.c:259:
+u32 FLEXI2C_read(struct adapter * adapter, u32 device, u32 bus, u32 addr, u8 * buf, u32 len)

CHECK:CAMELCASE: Avoid CamelCase: <ChipAddr>
#311: FILE: drivers/media/dvb/b2c2/skystar2.c:261:
+	u32 ChipAddr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: drivers/media/dvb/b2c2/skystar2.c:288:
+u32 FLEXI2C_write(struct adapter * adapter, u32 device, u32 bus, u32 addr, u8 * buf, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: drivers/media/dvb/b2c2/skystar2.c:288:
+u32 FLEXI2C_write(struct adapter * adapter, u32 device, u32 bus, u32 addr, u8 * buf, u32 len)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#376: FILE: drivers/media/dvb/b2c2/skystar2.c:326:
+		dprintk("%s:\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#378: FILE: drivers/media/dvb/b2c2/skystar2.c:328:
+		for (i = 0; i < num; i++) {
+			printk("message %d: flags=%x, addr=0x%04x, buf=%x, len=%d \n", i, msgs[i].flags, msgs[i].addr, (u32) msgs[i].buf, msgs[i].len);
+		}

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:329:
+			printk("message %d: flags=%x, addr=0x%04x, buf=%x, len=%d \n", i, msgs[i].flags, msgs[i].addr, (u32) msgs[i].buf, msgs[i].len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:329:
+			printk("message %d: flags=%x, addr=0x%04x, buf=%x, len=%d \n", i, msgs[i].flags, msgs[i].addr, (u32) msgs[i].buf, msgs[i].len);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:329:
+			printk("message %d: flags=%x, addr=0x%04x, buf=%x, len=%d \n", i, msgs[i].flags, msgs[i].addr, (u32) msgs[i].buf, msgs[i].len);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#379: FILE: drivers/media/dvb/b2c2/skystar2.c:329:
+			printk("message %d: flags=%x, addr=0x%04x, buf=%x, len=%d \n", i, msgs[i].flags, msgs[i].addr, (u32) msgs[i].buf, msgs[i].len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[0].addr != 0x0E'
#383: FILE: drivers/media/dvb/b2c2/skystar2.c:333:
+	if ((msgs[0].addr != 0x0E) && (msgs[0].addr != 0x61)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[0].addr != 0x61'
#383: FILE: drivers/media/dvb/b2c2/skystar2.c:333:
+	if ((msgs[0].addr != 0x0E) && (msgs[0].addr != 0x61)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num == 1'
#389: FILE: drivers/media/dvb/b2c2/skystar2.c:339:
+	if ((num == 1) && (msgs[0].buf != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgs[0].buf != NULL'
#389: FILE: drivers/media/dvb/b2c2/skystar2.c:339:
+	if ((num == 1) && (msgs[0].buf != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msgs[0].buf"
#389: FILE: drivers/media/dvb/b2c2/skystar2.c:339:
+	if ((num == 1) && (msgs[0].buf != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#394: FILE: drivers/media/dvb/b2c2/skystar2.c:344:
+		} else {
+

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#396: FILE: drivers/media/dvb/b2c2/skystar2.c:346:
+			ret = FLEXI2C_write(tmp, 0x10000000, msgs[0].addr, msgs[0].buf[0], &msgs[0].buf[1], msgs[0].len - 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msgs[1].buf"
#404: FILE: drivers/media/dvb/b2c2/skystar2.c:354:
+	} else if ((num == 2) && (msgs[1].buf != NULL)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#405: FILE: drivers/media/dvb/b2c2/skystar2.c:355:
+	} else if ((num == 2) && (msgs[1].buf != NULL)) {
+

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#406: FILE: drivers/media/dvb/b2c2/skystar2.c:356:
+		// i2c reads consist of a reg addr _write_ followed by a data read, so msg[1].flags has to be examined

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#407: FILE: drivers/media/dvb/b2c2/skystar2.c:357:
+		if (msgs[1].flags == I2C_M_RD) {
[...]
+		} else {
[...]

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#408: FILE: drivers/media/dvb/b2c2/skystar2.c:358:
+			ret = FLEXI2C_read(tmp, 0x10000000, msgs[0].addr, msgs[0].buf[0], msgs[1].buf, msgs[1].len);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#411: FILE: drivers/media/dvb/b2c2/skystar2.c:361:
+		} else {
+

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#412: FILE: drivers/media/dvb/b2c2/skystar2.c:362:
+			ret = FLEXI2C_write(tmp, 0x10000000, msgs[0].addr, msgs[0].buf[0], msgs[1].buf, msgs[1].len);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#434: FILE: drivers/media/dvb/b2c2/skystar2.c:384:
+u32 SRAMSetNetDest(struct adapter * adapter, u8 dest)

CHECK:CAMELCASE: Avoid CamelCase: <SRAMSetNetDest>
#434: FILE: drivers/media/dvb/b2c2/skystar2.c:384:
+u32 SRAMSetNetDest(struct adapter * adapter, u8 dest)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#438: FILE: drivers/media/dvb/b2c2/skystar2.c:388:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#442: FILE: drivers/media/dvb/b2c2/skystar2.c:392:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#447: FILE: drivers/media/dvb/b2c2/skystar2.c:397:
+	udelay(1000);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#452: FILE: drivers/media/dvb/b2c2/skystar2.c:402:
+u32 SRAMSetCaiDest(struct adapter * adapter, u8 dest)

CHECK:CAMELCASE: Avoid CamelCase: <SRAMSetCaiDest>
#452: FILE: drivers/media/dvb/b2c2/skystar2.c:402:
+u32 SRAMSetCaiDest(struct adapter * adapter, u8 dest)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#456: FILE: drivers/media/dvb/b2c2/skystar2.c:406:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#460: FILE: drivers/media/dvb/b2c2/skystar2.c:410:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#461: FILE: drivers/media/dvb/b2c2/skystar2.c:411:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#466: FILE: drivers/media/dvb/b2c2/skystar2.c:416:
+	udelay(1000);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: drivers/media/dvb/b2c2/skystar2.c:421:
+u32 SRAMSetCaoDest(struct adapter * adapter, u8 dest)

CHECK:CAMELCASE: Avoid CamelCase: <SRAMSetCaoDest>
#471: FILE: drivers/media/dvb/b2c2/skystar2.c:421:
+u32 SRAMSetCaoDest(struct adapter * adapter, u8 dest)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#475: FILE: drivers/media/dvb/b2c2/skystar2.c:425:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#479: FILE: drivers/media/dvb/b2c2/skystar2.c:429:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#480: FILE: drivers/media/dvb/b2c2/skystar2.c:430:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#485: FILE: drivers/media/dvb/b2c2/skystar2.c:435:
+	udelay(1000);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: drivers/media/dvb/b2c2/skystar2.c:440:
+u32 SRAMSetMediaDest(struct adapter * adapter, u8 dest)

CHECK:CAMELCASE: Avoid CamelCase: <SRAMSetMediaDest>
#490: FILE: drivers/media/dvb/b2c2/skystar2.c:440:
+u32 SRAMSetMediaDest(struct adapter * adapter, u8 dest)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#494: FILE: drivers/media/dvb/b2c2/skystar2.c:444:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#498: FILE: drivers/media/dvb/b2c2/skystar2.c:448:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#499: FILE: drivers/media/dvb/b2c2/skystar2.c:449:
+	udelay(1000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#504: FILE: drivers/media/dvb/b2c2/skystar2.c:454:
+	udelay(1000);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: drivers/media/dvb/b2c2/skystar2.c:470:
+void FlexSramWrite(struct adapter *adapter, u32 bank, u32 addr, u8 * buf, u32 len)

CHECK:CAMELCASE: Avoid CamelCase: <FlexSramWrite>
#520: FILE: drivers/media/dvb/b2c2/skystar2.c:470:
+void FlexSramWrite(struct adapter *adapter, u32 bank, u32 addr, u8 * buf, u32 len)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: drivers/media/dvb/b2c2/skystar2.c:485:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#535: FILE: drivers/media/dvb/b2c2/skystar2.c:485:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#544: FILE: drivers/media/dvb/b2c2/skystar2.c:494:
+void FlexSramRead(struct adapter *adapter, u32 bank, u32 addr, u8 * buf, u32 len)

CHECK:CAMELCASE: Avoid CamelCase: <FlexSramRead>
#544: FILE: drivers/media/dvb/b2c2/skystar2.c:494:
+void FlexSramRead(struct adapter *adapter, u32 bank, u32 addr, u8 * buf, u32 len)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#559: FILE: drivers/media/dvb/b2c2/skystar2.c:509:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#559: FILE: drivers/media/dvb/b2c2/skystar2.c:509:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#571: FILE: drivers/media/dvb/b2c2/skystar2.c:521:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#571: FILE: drivers/media/dvb/b2c2/skystar2.c:521:
+			printk("%s: SRAM timeout\n", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#582: FILE: drivers/media/dvb/b2c2/skystar2.c:532:
+void SRAM_writeChunk(struct adapter *adapter, u32 addr, u8 * buf, u16 len)

CHECK:CAMELCASE: Avoid CamelCase: <SRAM_writeChunk>
#582: FILE: drivers/media/dvb/b2c2/skystar2.c:532:
+void SRAM_writeChunk(struct adapter *adapter, u32 addr, u8 * buf, u16 len)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#588: FILE: drivers/media/dvb/b2c2/skystar2.c:538:
+	if (adapter->dwSramType == 0x20000) {
+		bank = (addr & 0x18000) << 0x0D;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/media/dvb/b2c2/skystar2.c:552:
+void SRAM_readChunk(struct adapter *adapter, u32 addr, u8 * buf, u16 len)

CHECK:CAMELCASE: Avoid CamelCase: <SRAM_readChunk>
#602: FILE: drivers/media/dvb/b2c2/skystar2.c:552:
+void SRAM_readChunk(struct adapter *adapter, u32 addr, u8 * buf, u16 len)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#608: FILE: drivers/media/dvb/b2c2/skystar2.c:558:
+	if (adapter->dwSramType == 0x20000) {
+		bank = (addr & 0x18000) << 0x0D;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#622: FILE: drivers/media/dvb/b2c2/skystar2.c:572:
+void SRAM_read(struct adapter *adapter, u32 addr, u8 * buf, u32 len)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/media/dvb/b2c2/skystar2.c:579:
+^I^I// check if the address range belongs to the same $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: drivers/media/dvb/b2c2/skystar2.c:580:
+^I^I// 32K memory chip. If not, the data is read from $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#632: FILE: drivers/media/dvb/b2c2/skystar2.c:582:
+		if ((addr >> 0x0F) != ((addr + len - 1) >> 0x0F)) {
+			length = (((addr >> 0x0F) + 1) << 0x0F) - addr;
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#644: FILE: drivers/media/dvb/b2c2/skystar2.c:594:
+void SRAM_write(struct adapter *adapter, u32 addr, u8 * buf, u32 len)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: drivers/media/dvb/b2c2/skystar2.c:601:
+^I^I// check if the address range belongs to the same $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#654: FILE: drivers/media/dvb/b2c2/skystar2.c:604:
+		if ((addr >> 0x0F) != ((addr + len - 1) >> 0x0F)) {
+			length = (((addr >> 0x0F) + 1) << 0x0F) - addr;
+		}

CHECK:CAMELCASE: Avoid CamelCase: <SRAM_setSize>
#666: FILE: drivers/media/dvb/b2c2/skystar2.c:616:
+void SRAM_setSize(struct adapter *adapter, u32 mask)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#684: FILE: drivers/media/dvb/b2c2/skystar2.c:634:
+		dprintk("%s: dwSramType = %x\n", __FUNCTION__, adapter->dwSramType);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#687: FILE: drivers/media/dvb/b2c2/skystar2.c:637:
+	} else {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#690: FILE: drivers/media/dvb/b2c2/skystar2.c:640:
+		dprintk("%s: dwSramType = %x\n", __FUNCTION__, adapter->dwSramType);

CHECK:CAMELCASE: Avoid CamelCase: <SRAM_testLocation>
#696: FILE: drivers/media/dvb/b2c2/skystar2.c:646:
+int SRAM_testLocation(struct adapter *adapter, u32 mask, u32 addr)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#700: FILE: drivers/media/dvb/b2c2/skystar2.c:650:
+	dprintk("%s: mask = %x, addr = %x\n", __FUNCTION__, mask, addr);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#718: FILE: drivers/media/dvb/b2c2/skystar2.c:668:
+	dprintk("%s: wrote 0xA5, read 0x%2x\n", __FUNCTION__, tmp2);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#736: FILE: drivers/media/dvb/b2c2/skystar2.c:686:
+	dprintk("%s: wrote 0x5A, read 0x%2x\n", __FUNCTION__, tmp2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#744: FILE: drivers/media/dvb/b2c2/skystar2.c:694:
+u32 SRAM_length(struct adapter * adapter)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/media/dvb/b2c2/skystar2.c:699:
+^I^Ireturn 65536;^I//  64K        $

CHECK:CAMELCASE: Avoid CamelCase: <SramDetectForFlex2>
#771: FILE: drivers/media/dvb/b2c2/skystar2.c:721:
+int SramDetectForFlex2(struct adapter *adapter)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#775: FILE: drivers/media/dvb/b2c2/skystar2.c:725:
+	dprintk("%s:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#782: FILE: drivers/media/dvb/b2c2/skystar2.c:732:
+	dprintk("%s: tmp2 = %x\n", __FUNCTION__, tmp2);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#788: FILE: drivers/media/dvb/b2c2/skystar2.c:738:
+	dprintk("%s: tmp3 = %x\n", __FUNCTION__, tmp3);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#799: FILE: drivers/media/dvb/b2c2/skystar2.c:749:
+		dprintk("%s: sram size = 32K\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#809: FILE: drivers/media/dvb/b2c2/skystar2.c:759:
+		dprintk("%s: sram size = 128K\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#819: FILE: drivers/media/dvb/b2c2/skystar2.c:769:
+		dprintk("%s: sram size = 64K\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#829: FILE: drivers/media/dvb/b2c2/skystar2.c:779:
+		dprintk("%s: sram size = 32K\n", __FUNCTION__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#838: FILE: drivers/media/dvb/b2c2/skystar2.c:788:
+	dprintk("%s: SRAM detection failed. Set to 32K \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#838: FILE: drivers/media/dvb/b2c2/skystar2.c:788:
+	dprintk("%s: SRAM detection failed. Set to 32K \n", __FUNCTION__);

CHECK:CAMELCASE: Avoid CamelCase: <SLL_detectSramSize>
#843: FILE: drivers/media/dvb/b2c2/skystar2.c:793:
+void SLL_detectSramSize(struct adapter *adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#852: FILE: drivers/media/dvb/b2c2/skystar2.c:802:
+int EEPROM_write(struct adapter *adapter, u16 addr, u8 * buf, u16 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#857: FILE: drivers/media/dvb/b2c2/skystar2.c:807:
+int EEPROM_read(struct adapter *adapter, u16 addr, u8 * buf, u16 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#862: FILE: drivers/media/dvb/b2c2/skystar2.c:812:
+u8 calc_LRC(u8 * buf, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: drivers/media/dvb/b2c2/skystar2.c:825:
+int EEPROM_LRC_read(struct adapter *adapter, u32 addr, u32 len, u8 * buf, u32 retries)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#889: FILE: drivers/media/dvb/b2c2/skystar2.c:839:
+int EEPROM_LRC_write(struct adapter *adapter, u32 addr, u32 len, u8 * wbuf, u8 * rbuf, u32 retries)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#889: FILE: drivers/media/dvb/b2c2/skystar2.c:839:
+int EEPROM_LRC_write(struct adapter *adapter, u32 addr, u32 len, u8 * wbuf, u8 * rbuf, u32 retries)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: drivers/media/dvb/b2c2/skystar2.c:854:
+// These functions could be called from the initialization routine $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: drivers/media/dvb/b2c2/skystar2.c:856:
+//      $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#930: FILE: drivers/media/dvb/b2c2/skystar2.c:880:
+int EEPROM_writeKey(struct adapter *adapter, u8 * key, u32 len)

CHECK:CAMELCASE: Avoid CamelCase: <EEPROM_writeKey>
#930: FILE: drivers/media/dvb/b2c2/skystar2.c:880:
+int EEPROM_writeKey(struct adapter *adapter, u8 * key, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: drivers/media/dvb/b2c2/skystar2.c:898:
+int EEPROM_readKey(struct adapter *adapter, u8 * key, u32 len)

CHECK:CAMELCASE: Avoid CamelCase: <EEPROM_readKey>
#948: FILE: drivers/media/dvb/b2c2/skystar2.c:898:
+int EEPROM_readKey(struct adapter *adapter, u8 * key, u32 len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#963: FILE: drivers/media/dvb/b2c2/skystar2.c:913:
+int EEPROM_getMacAddr(struct adapter *adapter, char type, u8 * mac)

CHECK:CAMELCASE: Avoid CamelCase: <EEPROM_getMacAddr>
#963: FILE: drivers/media/dvb/b2c2/skystar2.c:913:
+int EEPROM_getMacAddr(struct adapter *adapter, char type, u8 * mac)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#979: FILE: drivers/media/dvb/b2c2/skystar2.c:929:
+		} else {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#991: FILE: drivers/media/dvb/b2c2/skystar2.c:941:
+	} else {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#992: FILE: drivers/media/dvb/b2c2/skystar2.c:942:
+		if (type == 0) {
[...]
+		} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#996: FILE: drivers/media/dvb/b2c2/skystar2.c:946:
+		} else {
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1004: FILE: drivers/media/dvb/b2c2/skystar2.c:954:
+char EEPROM_setMacAddr(struct adapter *adapter, char type, u8 * mac)

CHECK:CAMELCASE: Avoid CamelCase: <EEPROM_setMacAddr>
#1004: FILE: drivers/media/dvb/b2c2/skystar2.c:954:
+char EEPROM_setMacAddr(struct adapter *adapter, char type, u8 * mac)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1017: FILE: drivers/media/dvb/b2c2/skystar2.c:967:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableStream1Filter>
#1039: FILE: drivers/media/dvb/b2c2/skystar2.c:989:
+void FilterEnableStream1Filter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1041: FILE: drivers/media/dvb/b2c2/skystar2.c:991:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1043: FILE: drivers/media/dvb/b2c2/skystar2.c:993:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1047: FILE: drivers/media/dvb/b2c2/skystar2.c:997:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableStream2Filter>
#1052: FILE: drivers/media/dvb/b2c2/skystar2.c:1002:
+void FilterEnableStream2Filter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1054: FILE: drivers/media/dvb/b2c2/skystar2.c:1004:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1056: FILE: drivers/media/dvb/b2c2/skystar2.c:1006:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1060: FILE: drivers/media/dvb/b2c2/skystar2.c:1010:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnablePcrFilter>
#1065: FILE: drivers/media/dvb/b2c2/skystar2.c:1015:
+void FilterEnablePcrFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1067: FILE: drivers/media/dvb/b2c2/skystar2.c:1017:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1069: FILE: drivers/media/dvb/b2c2/skystar2.c:1019:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1073: FILE: drivers/media/dvb/b2c2/skystar2.c:1023:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnablePmtFilter>
#1078: FILE: drivers/media/dvb/b2c2/skystar2.c:1028:
+void FilterEnablePmtFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1080: FILE: drivers/media/dvb/b2c2/skystar2.c:1030:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1082: FILE: drivers/media/dvb/b2c2/skystar2.c:1032:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1086: FILE: drivers/media/dvb/b2c2/skystar2.c:1036:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableEmmFilter>
#1091: FILE: drivers/media/dvb/b2c2/skystar2.c:1041:
+void FilterEnableEmmFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1093: FILE: drivers/media/dvb/b2c2/skystar2.c:1043:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1095: FILE: drivers/media/dvb/b2c2/skystar2.c:1045:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1099: FILE: drivers/media/dvb/b2c2/skystar2.c:1049:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableEcmFilter>
#1104: FILE: drivers/media/dvb/b2c2/skystar2.c:1054:
+void FilterEnableEcmFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1106: FILE: drivers/media/dvb/b2c2/skystar2.c:1056:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1108: FILE: drivers/media/dvb/b2c2/skystar2.c:1058:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1112: FILE: drivers/media/dvb/b2c2/skystar2.c:1062:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableNullFilter>
#1117: FILE: drivers/media/dvb/b2c2/skystar2.c:1067:
+void FilterEnableNullFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1119: FILE: drivers/media/dvb/b2c2/skystar2.c:1069:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1121: FILE: drivers/media/dvb/b2c2/skystar2.c:1071:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1125: FILE: drivers/media/dvb/b2c2/skystar2.c:1075:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FilterEnableMaskFilter>
#1130: FILE: drivers/media/dvb/b2c2/skystar2.c:1080:
+void FilterEnableMaskFilter(struct adapter *adapter, u32 op)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1132: FILE: drivers/media/dvb/b2c2/skystar2.c:1082:
+	dprintk("%s: op=%x\n", __FUNCTION__, op);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1134: FILE: drivers/media/dvb/b2c2/skystar2.c:1084:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1138: FILE: drivers/media/dvb/b2c2/skystar2.c:1088:
+	} else {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1143: FILE: drivers/media/dvb/b2c2/skystar2.c:1093:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <CtrlEnableMAC>
#1144: FILE: drivers/media/dvb/b2c2/skystar2.c:1094:
+void CtrlEnableMAC(struct adapter *adapter, u32 op)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1146: FILE: drivers/media/dvb/b2c2/skystar2.c:1096:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1150: FILE: drivers/media/dvb/b2c2/skystar2.c:1100:
+	} else {
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1155: FILE: drivers/media/dvb/b2c2/skystar2.c:1105:
+int CASetMacDstAddrFilter(struct adapter *adapter, u8 * mac)

CHECK:CAMELCASE: Avoid CamelCase: <CASetMacDstAddrFilter>
#1155: FILE: drivers/media/dvb/b2c2/skystar2.c:1105:
+int CASetMacDstAddrFilter(struct adapter *adapter, u8 * mac)

CHECK:CAMELCASE: Avoid CamelCase: <SetIgnoreMACFilter>
#1168: FILE: drivers/media/dvb/b2c2/skystar2.c:1118:
+void SetIgnoreMACFilter(struct adapter *adapter, u8 op)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1176: FILE: drivers/media/dvb/b2c2/skystar2.c:1126:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <CheckNullFilterEnable>
#1185: FILE: drivers/media/dvb/b2c2/skystar2.c:1135:
+void CheckNullFilterEnable(struct adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <InitPIDsInfo>
#1191: FILE: drivers/media/dvb/b2c2/skystar2.c:1141:
+void InitPIDsInfo(struct adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <CheckPID>
#1199: FILE: drivers/media/dvb/b2c2/skystar2.c:1149:
+u32 CheckPID(struct adapter *adapter, u16 pid)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1214: FILE: drivers/media/dvb/b2c2/skystar2.c:1164:
+u32 PidSetGroupPID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetGroupPID>
#1214: FILE: drivers/media/dvb/b2c2/skystar2.c:1164:
+u32 PidSetGroupPID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1218: FILE: drivers/media/dvb/b2c2/skystar2.c:1168:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1227: FILE: drivers/media/dvb/b2c2/skystar2.c:1177:
+u32 PidSetGroupMASK(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetGroupMASK>
#1227: FILE: drivers/media/dvb/b2c2/skystar2.c:1177:
+u32 PidSetGroupMASK(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1231: FILE: drivers/media/dvb/b2c2/skystar2.c:1181:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1240: FILE: drivers/media/dvb/b2c2/skystar2.c:1190:
+u32 PidSetStream1PID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetStream1PID>
#1240: FILE: drivers/media/dvb/b2c2/skystar2.c:1190:
+u32 PidSetStream1PID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1244: FILE: drivers/media/dvb/b2c2/skystar2.c:1194:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1253: FILE: drivers/media/dvb/b2c2/skystar2.c:1203:
+u32 PidSetStream2PID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetStream2PID>
#1253: FILE: drivers/media/dvb/b2c2/skystar2.c:1203:
+u32 PidSetStream2PID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1257: FILE: drivers/media/dvb/b2c2/skystar2.c:1207:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1266: FILE: drivers/media/dvb/b2c2/skystar2.c:1216:
+u32 PidSetPcrPID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetPcrPID>
#1266: FILE: drivers/media/dvb/b2c2/skystar2.c:1216:
+u32 PidSetPcrPID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1270: FILE: drivers/media/dvb/b2c2/skystar2.c:1220:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1279: FILE: drivers/media/dvb/b2c2/skystar2.c:1229:
+u32 PidSetPmtPID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetPmtPID>
#1279: FILE: drivers/media/dvb/b2c2/skystar2.c:1229:
+u32 PidSetPmtPID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1283: FILE: drivers/media/dvb/b2c2/skystar2.c:1233:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1292: FILE: drivers/media/dvb/b2c2/skystar2.c:1242:
+u32 PidSetEmmPID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetEmmPID>
#1292: FILE: drivers/media/dvb/b2c2/skystar2.c:1242:
+u32 PidSetEmmPID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1296: FILE: drivers/media/dvb/b2c2/skystar2.c:1246:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1305: FILE: drivers/media/dvb/b2c2/skystar2.c:1255:
+u32 PidSetEcmPID(struct adapter * adapter, u32 pid)

CHECK:CAMELCASE: Avoid CamelCase: <PidSetEcmPID>
#1305: FILE: drivers/media/dvb/b2c2/skystar2.c:1255:
+u32 PidSetEcmPID(struct adapter * adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1309: FILE: drivers/media/dvb/b2c2/skystar2.c:1259:
+	dprintk("%s: pid=%x\n", __FUNCTION__, pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1318: FILE: drivers/media/dvb/b2c2/skystar2.c:1268:
+u32 PidGetStream1PID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetStream1PID>
#1318: FILE: drivers/media/dvb/b2c2/skystar2.c:1268:
+u32 PidGetStream1PID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1323: FILE: drivers/media/dvb/b2c2/skystar2.c:1273:
+u32 PidGetStream2PID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetStream2PID>
#1323: FILE: drivers/media/dvb/b2c2/skystar2.c:1273:
+u32 PidGetStream2PID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1328: FILE: drivers/media/dvb/b2c2/skystar2.c:1278:
+u32 PidGetPcrPID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetPcrPID>
#1328: FILE: drivers/media/dvb/b2c2/skystar2.c:1278:
+u32 PidGetPcrPID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1333: FILE: drivers/media/dvb/b2c2/skystar2.c:1283:
+u32 PidGetPmtPID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetPmtPID>
#1333: FILE: drivers/media/dvb/b2c2/skystar2.c:1283:
+u32 PidGetPmtPID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1338: FILE: drivers/media/dvb/b2c2/skystar2.c:1288:
+u32 PidGetEmmPID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetEmmPID>
#1338: FILE: drivers/media/dvb/b2c2/skystar2.c:1288:
+u32 PidGetEmmPID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1343: FILE: drivers/media/dvb/b2c2/skystar2.c:1293:
+u32 PidGetEcmPID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetEcmPID>
#1343: FILE: drivers/media/dvb/b2c2/skystar2.c:1293:
+u32 PidGetEcmPID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1348: FILE: drivers/media/dvb/b2c2/skystar2.c:1298:
+u32 PidGetGroupPID(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetGroupPID>
#1348: FILE: drivers/media/dvb/b2c2/skystar2.c:1298:
+u32 PidGetGroupPID(struct adapter * adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1353: FILE: drivers/media/dvb/b2c2/skystar2.c:1303:
+u32 PidGetGroupMASK(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <PidGetGroupMASK>
#1353: FILE: drivers/media/dvb/b2c2/skystar2.c:1303:
+u32 PidGetGroupMASK(struct adapter * adapter)

CHECK:CAMELCASE: Avoid CamelCase: <ResetHardwarePIDFilter>
#1358: FILE: drivers/media/dvb/b2c2/skystar2.c:1308:
+void ResetHardwarePIDFilter(struct adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <OpenWholeBandwidth>
#1378: FILE: drivers/media/dvb/b2c2/skystar2.c:1328:
+void OpenWholeBandwidth(struct adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <AddHwPID>
#1387: FILE: drivers/media/dvb/b2c2/skystar2.c:1337:
+int AddHwPID(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1389: FILE: drivers/media/dvb/b2c2/skystar2.c:1339:
+	dprintk("%s: pid=%d\n", __FUNCTION__, pid);

CHECK:CAMELCASE: Avoid CamelCase: <RemoveHwPID>
#1448: FILE: drivers/media/dvb/b2c2/skystar2.c:1398:
+int RemoveHwPID(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1450: FILE: drivers/media/dvb/b2c2/skystar2.c:1400:
+	dprintk("%s: pid=%d\n", __FUNCTION__, pid);

CHECK:CAMELCASE: Avoid CamelCase: <AddPID>
#1504: FILE: drivers/media/dvb/b2c2/skystar2.c:1454:
+int AddPID(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1508: FILE: drivers/media/dvb/b2c2/skystar2.c:1458:
+	dprintk("%s: pid=%d\n", __FUNCTION__, pid);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1517: FILE: drivers/media/dvb/b2c2/skystar2.c:1467:
+		if (adapter->pids[i] == 0x1FFF)	// find free pid filter
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <RemovePID>
#1531: FILE: drivers/media/dvb/b2c2/skystar2.c:1481:
+int RemovePID(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1535: FILE: drivers/media/dvb/b2c2/skystar2.c:1485:
+	dprintk("%s: pid=%d\n", __FUNCTION__, pid);

CHECK:CAMELCASE: Avoid CamelCase: <CtrlEnableSmc>
#1557: FILE: drivers/media/dvb/b2c2/skystar2.c:1507:
+void CtrlEnableSmc(struct adapter *adapter, u32 op)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1559: FILE: drivers/media/dvb/b2c2/skystar2.c:1509:
+	if (op == 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1563: FILE: drivers/media/dvb/b2c2/skystar2.c:1513:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <DmaEnableDisableIrq>
#1568: FILE: drivers/media/dvb/b2c2/skystar2.c:1518:
+u32 DmaEnableDisableIrq(struct adapter *adapter, u32 flag1, u32 flag2, u32 flag3)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1584: FILE: drivers/media/dvb/b2c2/skystar2.c:1534:
+	} else {
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1599: FILE: drivers/media/dvb/b2c2/skystar2.c:1549:
+u32 IrqDmaEnableDisableIrq(struct adapter * adapter, u32 op)

CHECK:CAMELCASE: Avoid CamelCase: <IrqDmaEnableDisableIrq>
#1599: FILE: drivers/media/dvb/b2c2/skystar2.c:1549:
+u32 IrqDmaEnableDisableIrq(struct adapter * adapter, u32 op)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1626: FILE: drivers/media/dvb/b2c2/skystar2.c:1576:
+//      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1641: FILE: drivers/media/dvb/b2c2/skystar2.c:1591:
+//      $

CHECK:CAMELCASE: Avoid CamelCase: <DmaInitDMA>
#1654: FILE: drivers/media/dvb/b2c2/skystar2.c:1604:
+int DmaInitDMA(struct adapter *adapter, u32 dma_channel)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1659: FILE: drivers/media/dvb/b2c2/skystar2.c:1609:
+		dprintk("%s: Initializing DMA1 channel\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1667: FILE: drivers/media/dvb/b2c2/skystar2.c:1617:
+		subbuf1 = ((adapter->DmaQ1.bus_addr + adapter->DmaQ1.buffer_size / 2) & 0xFFFFFFFC) | 1;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1669: FILE: drivers/media/dvb/b2c2/skystar2.c:1619:
+		dprintk("%s: first subbuffer address = 0x%x\n", __FUNCTION__, subbuf0);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1670: FILE: drivers/media/dvb/b2c2/skystar2.c:1620:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1673: FILE: drivers/media/dvb/b2c2/skystar2.c:1623:
+		dprintk("%s: subbuffer size = 0x%x\n", __FUNCTION__, (subbufsize >> 8) * 4);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1674: FILE: drivers/media/dvb/b2c2/skystar2.c:1624:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1677: FILE: drivers/media/dvb/b2c2/skystar2.c:1627:
+		dprintk("%s: second subbuffer address = 0x%x\n", __FUNCTION__, subbuf1);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1678: FILE: drivers/media/dvb/b2c2/skystar2.c:1628:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1681: FILE: drivers/media/dvb/b2c2/skystar2.c:1631:
+		dprintk("%s: counter = 0x%x\n", __FUNCTION__, adapter->DmaQ1.bus_addr & 0xFFFFFFFC);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1683: FILE: drivers/media/dvb/b2c2/skystar2.c:1633:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1699: FILE: drivers/media/dvb/b2c2/skystar2.c:1649:
+		dprintk("%s: Initializing DMA2 channel\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1707: FILE: drivers/media/dvb/b2c2/skystar2.c:1657:
+		subbuf1 = ((adapter->DmaQ2.bus_addr + adapter->DmaQ2.buffer_size / 2) & 0xFFFFFFFC) | 1;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1709: FILE: drivers/media/dvb/b2c2/skystar2.c:1659:
+		dprintk("%s: first subbuffer address = 0x%x\n", __FUNCTION__, subbuf0);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1710: FILE: drivers/media/dvb/b2c2/skystar2.c:1660:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1713: FILE: drivers/media/dvb/b2c2/skystar2.c:1663:
+		dprintk("%s: subbuffer size = 0x%x\n", __FUNCTION__, (subbufsize >> 8) * 4);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1714: FILE: drivers/media/dvb/b2c2/skystar2.c:1664:
+		udelay(1000);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1717: FILE: drivers/media/dvb/b2c2/skystar2.c:1667:
+		dprintk("%s: second buffer address = 0x%x\n", __FUNCTION__, subbuf1);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1718: FILE: drivers/media/dvb/b2c2/skystar2.c:1668:
+		udelay(1000);

CHECK:CAMELCASE: Avoid CamelCase: <CtrlEnableReceiveData>
#1727: FILE: drivers/media/dvb/b2c2/skystar2.c:1677:
+void CtrlEnableReceiveData(struct adapter *adapter, u32 op)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1735: FILE: drivers/media/dvb/b2c2/skystar2.c:1685:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <DmaStartStop0x2102>
#1746: FILE: drivers/media/dvb/b2c2/skystar2.c:1696:
+void DmaStartStop0x2102(struct adapter *adapter, u32 dma_mask, u32 start_stop)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1750: FILE: drivers/media/dvb/b2c2/skystar2.c:1700:
+	dprintk("%s: dma_mask=%x\n", __FUNCTION__, dma_mask);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1753: FILE: drivers/media/dvb/b2c2/skystar2.c:1703:
+		dprintk("%s: starting dma\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1758: FILE: drivers/media/dvb/b2c2/skystar2.c:1708:
+		if (((dma_mask & 1) != 0) && ((adapter->dma_status & 1) == 0) && (adapter->DmaQ1.bus_addr != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->DmaQ1.bus_addr != 0'
#1758: FILE: drivers/media/dvb/b2c2/skystar2.c:1708:
+		if (((dma_mask & 1) != 0) && ((adapter->dma_status & 1) == 0) && (adapter->DmaQ1.bus_addr != 0)) {

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1763: FILE: drivers/media/dvb/b2c2/skystar2.c:1713:
+		if (((dma_mask & 2) != 0) && ((adapter->dma_status & 2) == 0) && (adapter->DmaQ2.bus_addr != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->DmaQ2.bus_addr != 0'
#1763: FILE: drivers/media/dvb/b2c2/skystar2.c:1713:
+		if (((dma_mask & 2) != 0) && ((adapter->dma_status & 2) == 0) && (adapter->DmaQ2.bus_addr != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma1_enable == 1'
#1768: FILE: drivers/media/dvb/b2c2/skystar2.c:1718:
+		if ((dma1_enable == 1) && (dma2_enable == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma2_enable == 1'
#1768: FILE: drivers/media/dvb/b2c2/skystar2.c:1718:
+		if ((dma1_enable == 1) && (dma2_enable == 1)) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1770: FILE: drivers/media/dvb/b2c2/skystar2.c:1720:
+			WriteRegDW(adapter, 0x00C, (adapter->DmaQ1.bus_addr + adapter->DmaQ1.buffer_size / 2) | 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma1_enable == 1'
#1778: FILE: drivers/media/dvb/b2c2/skystar2.c:1728:
+		if ((dma1_enable == 1) && (dma2_enable == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma2_enable == 0'
#1778: FILE: drivers/media/dvb/b2c2/skystar2.c:1728:
+		if ((dma1_enable == 1) && (dma2_enable == 0)) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1780: FILE: drivers/media/dvb/b2c2/skystar2.c:1730:
+			WriteRegDW(adapter, 0x00C, (adapter->DmaQ1.bus_addr + adapter->DmaQ1.buffer_size / 2) | 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma1_enable == 0'
#1787: FILE: drivers/media/dvb/b2c2/skystar2.c:1737:
+		if ((dma1_enable == 0) && (dma2_enable == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma2_enable == 1'
#1787: FILE: drivers/media/dvb/b2c2/skystar2.c:1737:
+		if ((dma1_enable == 0) && (dma2_enable == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma1_enable == 0'
#1795: FILE: drivers/media/dvb/b2c2/skystar2.c:1745:
+		if ((dma1_enable == 0) && (dma2_enable == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma2_enable == 0'
#1795: FILE: drivers/media/dvb/b2c2/skystar2.c:1745:
+		if ((dma1_enable == 0) && (dma2_enable == 0)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1802: FILE: drivers/media/dvb/b2c2/skystar2.c:1752:
+	} else {
+

WARNING:TYPO_SPELLING: 'stoping' may be misspelled - perhaps 'stopping'?
#1803: FILE: drivers/media/dvb/b2c2/skystar2.c:1753:
+		dprintk("%s: stoping dma\n", __FUNCTION__);
 		             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1803: FILE: drivers/media/dvb/b2c2/skystar2.c:1753:
+		dprintk("%s: stoping dma\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1807: FILE: drivers/media/dvb/b2c2/skystar2.c:1757:
+		if (((dma_mask & 1) != 0) && ((adapter->dma_status & 1) != 0)) {
+			dma_enable = dma_enable & 0xFFFFFFFE;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1811: FILE: drivers/media/dvb/b2c2/skystar2.c:1761:
+		if (((dma_mask & 2) != 0) && ((adapter->dma_status & 2) != 0)) {
+			dma_enable = dma_enable & 0xFFFFFFFD;
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma_enable == 0'
#1815: FILE: drivers/media/dvb/b2c2/skystar2.c:1765:
+		if ((dma_enable == 0) && ((adapter->dma_status & 4) != 0)) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1818: FILE: drivers/media/dvb/b2c2/skystar2.c:1768:
+			udelay(3000);

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#1818: FILE: drivers/media/dvb/b2c2/skystar2.c:1768:
+			udelay(3000);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1821: FILE: drivers/media/dvb/b2c2/skystar2.c:1771:
+		if (((dma_mask & 1) != 0) && ((adapter->dma_status & 1) != 0) && (adapter->DmaQ1.bus_addr != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->DmaQ1.bus_addr != 0'
#1821: FILE: drivers/media/dvb/b2c2/skystar2.c:1771:
+		if (((dma_mask & 1) != 0) && ((adapter->dma_status & 1) != 0) && (adapter->DmaQ1.bus_addr != 0)) {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1823: FILE: drivers/media/dvb/b2c2/skystar2.c:1773:
+			WriteRegDW(adapter, 0x00C, (adapter->DmaQ1.bus_addr + adapter->DmaQ1.buffer_size / 2) | 1);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1828: FILE: drivers/media/dvb/b2c2/skystar2.c:1778:
+		if (((dma_mask & 2) != 0) && ((adapter->dma_status & 2) != 0) && (adapter->DmaQ2.bus_addr != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->DmaQ2.bus_addr != 0'
#1828: FILE: drivers/media/dvb/b2c2/skystar2.c:1778:
+		if (((dma_mask & 2) != 0) && ((adapter->dma_status & 2) != 0) && (adapter->DmaQ2.bus_addr != 0)) {

CHECK:CAMELCASE: Avoid CamelCase: <OpenStream>
#1836: FILE: drivers/media/dvb/b2c2/skystar2.c:1786:
+void OpenStream(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1847: FILE: drivers/media/dvb/b2c2/skystar2.c:1797:
+	dprintk("%s: adapter->dma_status=%x\n", __FUNCTION__, adapter->dma_status);

CHECK:CAMELCASE: Avoid CamelCase: <CloseStream>
#1876: FILE: drivers/media/dvb/b2c2/skystar2.c:1826:
+void CloseStream(struct adapter *adapter, u32 pid)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1883: FILE: drivers/media/dvb/b2c2/skystar2.c:1833:
+	dprintk("%s: dma_status=%x\n", __FUNCTION__, adapter->dma_status);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1892: FILE: drivers/media/dvb/b2c2/skystar2.c:1842:
+	if (dma_mask != 0) {
+		DmaStartStop0x2102(adapter, dma_mask, 0);
+	}

CHECK:CAMELCASE: Avoid CamelCase: <InterruptServiceDMA1>
#1899: FILE: drivers/media/dvb/b2c2/skystar2.c:1849:
+u32 InterruptServiceDMA1(struct adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <nCurDmaCounter>
#1904: FILE: drivers/media/dvb/b2c2/skystar2.c:1854:
+	int nCurDmaCounter;

CHECK:CAMELCASE: Avoid CamelCase: <nNumBytesParsed>
#1905: FILE: drivers/media/dvb/b2c2/skystar2.c:1855:
+	u32 nNumBytesParsed;

CHECK:CAMELCASE: Avoid CamelCase: <nNumNewBytesTransferred>
#1906: FILE: drivers/media/dvb/b2c2/skystar2.c:1856:
+	u32 nNumNewBytesTransferred;

CHECK:CAMELCASE: Avoid CamelCase: <dwDefaultPacketSize>
#1907: FILE: drivers/media/dvb/b2c2/skystar2.c:1857:
+	u32 dwDefaultPacketSize = 188;

CHECK:CAMELCASE: Avoid CamelCase: <gbTmpBuffer>
#1908: FILE: drivers/media/dvb/b2c2/skystar2.c:1858:
+	u8 gbTmpBuffer[188];

CHECK:CAMELCASE: Avoid CamelCase: <pbDMABufCurPos>
#1909: FILE: drivers/media/dvb/b2c2/skystar2.c:1859:
+	u8 *pbDMABufCurPos;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nCurDmaCounter < 0'
#1914: FILE: drivers/media/dvb/b2c2/skystar2.c:1864:
+	if ((nCurDmaCounter < 0) || (nCurDmaCounter > adapter->DmaQ1.buffer_size)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nCurDmaCounter > adapter->DmaQ1.buffer_size'
#1914: FILE: drivers/media/dvb/b2c2/skystar2.c:1864:
+	if ((nCurDmaCounter < 0) || (nCurDmaCounter > adapter->DmaQ1.buffer_size)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1915: FILE: drivers/media/dvb/b2c2/skystar2.c:1865:
+		dprintk("%s: dma counter outside dma buffer\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1922: FILE: drivers/media/dvb/b2c2/skystar2.c:1872:
+	if (adapter->DmaQ1.tail <= nCurDmaCounter) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1926: FILE: drivers/media/dvb/b2c2/skystar2.c:1876:
+	} else {
+

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1927: FILE: drivers/media/dvb/b2c2/skystar2.c:1877:
+		nNumNewBytesTransferred = (adapter->DmaQ1.buffer_size - adapter->DmaQ1.tail) + nCurDmaCounter;

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1942: FILE: drivers/media/dvb/b2c2/skystar2.c:1892:
+		if (adapter->DmaQ1.buffer + adapter->DmaQ1.buffer_size < adapter->DmaQ1.buffer + adapter->DmaQ1.tail + 188) {

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#1943: FILE: drivers/media/dvb/b2c2/skystar2.c:1893:
+			memcpy(gbTmpBuffer, adapter->DmaQ1.buffer + adapter->DmaQ1.tail, adapter->DmaQ1.buffer_size - adapter->DmaQ1.tail);

WARNING:LONG_LINE: line length of 180 exceeds 100 columns
#1944: FILE: drivers/media/dvb/b2c2/skystar2.c:1894:
+			memcpy(gbTmpBuffer + (adapter->DmaQ1.buffer_size - adapter->DmaQ1.tail), adapter->DmaQ1.buffer, (188 - (adapter->DmaQ1.buffer_size - adapter->DmaQ1.tail)));

CHECK:SPACING: No space is necessary after a cast
#1950: FILE: drivers/media/dvb/b2c2/skystar2.c:1900:
+			u32 *dq = (u32 *) pbDMABufCurPos;

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#1961: FILE: drivers/media/dvb/b2c2/skystar2.c:1911:
+			if ((packet_header.sync_byte == 0x47) && (packet_header.transport_error_indicator == 0) && (packet_header.pid != 0x1FFF)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'packet_header.sync_byte == 0x47'
#1961: FILE: drivers/media/dvb/b2c2/skystar2.c:1911:
+			if ((packet_header.sync_byte == 0x47) && (packet_header.transport_error_indicator == 0) && (packet_header.pid != 0x1FFF)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'packet_header.transport_error_indicator == 0'
#1961: FILE: drivers/media/dvb/b2c2/skystar2.c:1911:
+			if ((packet_header.sync_byte == 0x47) && (packet_header.transport_error_indicator == 0) && (packet_header.pid != 0x1FFF)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'packet_header.pid != 0x1FFF'
#1961: FILE: drivers/media/dvb/b2c2/skystar2.c:1911:
+			if ((packet_header.sync_byte == 0x47) && (packet_header.transport_error_indicator == 0) && (packet_header.pid != 0x1FFF)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1962: FILE: drivers/media/dvb/b2c2/skystar2.c:1912:
+				if (CheckPID(adapter, packet_header.pid & 0x0000FFFF) != 0) {
[...]
+				} else {
[...]

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1963: FILE: drivers/media/dvb/b2c2/skystar2.c:1913:
+					dvb_dmx_swfilter_packets(dvbdmx, pbDMABufCurPos, dwDefaultPacketSize / 188);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1966: FILE: drivers/media/dvb/b2c2/skystar2.c:1916:
+				} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <InterruptServiceDMA2>
#1983: FILE: drivers/media/dvb/b2c2/skystar2.c:1933:
+void InterruptServiceDMA2(struct adapter *adapter)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1985: FILE: drivers/media/dvb/b2c2/skystar2.c:1935:
+	printk("%s:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1985: FILE: drivers/media/dvb/b2c2/skystar2.c:1935:
+	printk("%s:\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2008: FILE: drivers/media/dvb/b2c2/skystar2.c:1958:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <InitDmaQueue>
#2009: FILE: drivers/media/dvb/b2c2/skystar2.c:1959:
+void InitDmaQueue(struct adapter *adapter)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2020: FILE: drivers/media/dvb/b2c2/skystar2.c:1970:
+	adapter->DmaQ1.buffer = pci_alloc_consistent(adapter->pdev, SizeOfBufDMA1 + 0x80, &dma_addr);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2032: FILE: drivers/media/dvb/b2c2/skystar2.c:1982:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ1.buffer, SizeOfBufDMA1);

CHECK:SPACING: No space is necessary after a cast
#2032: FILE: drivers/media/dvb/b2c2/skystar2.c:1982:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ1.buffer, SizeOfBufDMA1);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2032: FILE: drivers/media/dvb/b2c2/skystar2.c:1982:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ1.buffer, SizeOfBufDMA1);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2035: FILE: drivers/media/dvb/b2c2/skystar2.c:1985:
+	} else {
+

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2046: FILE: drivers/media/dvb/b2c2/skystar2.c:1996:
+	adapter->DmaQ2.buffer = pci_alloc_consistent(adapter->pdev, SizeOfBufDMA2 + 0x80, &dma_addr);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#2058: FILE: drivers/media/dvb/b2c2/skystar2.c:2008:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ2.buffer, (int) SizeOfBufDMA2);

CHECK:SPACING: No space is necessary after a cast
#2058: FILE: drivers/media/dvb/b2c2/skystar2.c:2008:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ2.buffer, (int) SizeOfBufDMA2);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2058: FILE: drivers/media/dvb/b2c2/skystar2.c:2008:
+		dprintk("%s: allocated dma buffer at 0x%x, length=%d\n", __FUNCTION__, (int) adapter->DmaQ2.buffer, (int) SizeOfBufDMA2);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2061: FILE: drivers/media/dvb/b2c2/skystar2.c:2011:
+	} else {
+

CHECK:CAMELCASE: Avoid CamelCase: <FreeDmaQueue>
#2066: FILE: drivers/media/dvb/b2c2/skystar2.c:2016:
+void FreeDmaQueue(struct adapter *adapter)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2069: FILE: drivers/media/dvb/b2c2/skystar2.c:2019:
+		pci_free_consistent(adapter->pdev, SizeOfBufDMA1 + 0x80, adapter->DmaQ1.buffer, adapter->DmaQ1.bus_addr);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2079: FILE: drivers/media/dvb/b2c2/skystar2.c:2029:
+		pci_free_consistent(adapter->pdev, SizeOfBufDMA2 + 0x80, adapter->DmaQ2.buffer, adapter->DmaQ2.bus_addr);

CHECK:CAMELCASE: Avoid CamelCase: <FreeAdapterObject>
#2089: FILE: drivers/media/dvb/b2c2/skystar2.c:2039:
+void FreeAdapterObject(struct adapter *adapter)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2091: FILE: drivers/media/dvb/b2c2/skystar2.c:2041:
+	dprintk("%s:\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2101: FILE: drivers/media/dvb/b2c2/skystar2.c:2051:
+		iounmap((void *) adapter->io_mem);

CHECK:CAMELCASE: Avoid CamelCase: <ClaimAdapter>
#2107: FILE: drivers/media/dvb/b2c2/skystar2.c:2057:
+int ClaimAdapter(struct adapter *adapter)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2121: FILE: drivers/media/dvb/b2c2/skystar2.c:2071:
+	dprintk("%s: card revision %x \n", __FUNCTION__, adapter->card_revision);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2121: FILE: drivers/media/dvb/b2c2/skystar2.c:2071:
+	dprintk("%s: card revision %x \n", __FUNCTION__, adapter->card_revision);

CHECK:SPACING: No space is necessary after a cast
#2133: FILE: drivers/media/dvb/b2c2/skystar2.c:2083:
+	adapter->io_mem = (u32) ioremap(pdev->resource[0].start, 0x800);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2136: FILE: drivers/media/dvb/b2c2/skystar2.c:2086:
+		dprintk("%s: can not map io memory\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'maped' may be misspelled - perhaps 'mapped'?
#2141: FILE: drivers/media/dvb/b2c2/skystar2.c:2091:
+	dprintk("%s: io memory maped at %x\n", __FUNCTION__, adapter->io_mem);
 	                       ^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2141: FILE: drivers/media/dvb/b2c2/skystar2.c:2091:
+	dprintk("%s: io memory maped at %x\n", __FUNCTION__, adapter->io_mem);

CHECK:CAMELCASE: Avoid CamelCase: <SLL_reset_FlexCOP>
#2146: FILE: drivers/media/dvb/b2c2/skystar2.c:2096:
+int SLL_reset_FlexCOP(struct adapter *adapter)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2154: FILE: drivers/media/dvb/b2c2/skystar2.c:2104:
+u32 DriverInitialize(struct pci_dev * pdev)

CHECK:CAMELCASE: Avoid CamelCase: <DriverInitialize>
#2154: FILE: drivers/media/dvb/b2c2/skystar2.c:2104:
+u32 DriverInitialize(struct pci_dev * pdev)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2160: FILE: drivers/media/dvb/b2c2/skystar2.c:2110:
+	if (!(adapter = kmalloc(sizeof(struct adapter), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*adapter)...) over kmalloc(sizeof(struct adapter)...)
#2160: FILE: drivers/media/dvb/b2c2/skystar2.c:2110:
+	if (!(adapter = kmalloc(sizeof(struct adapter), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2161: FILE: drivers/media/dvb/b2c2/skystar2.c:2111:
+		dprintk("%s: out of memory!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2182: FILE: drivers/media/dvb/b2c2/skystar2.c:2132:
+		dprintk("%s: unable to allocate irq=%d !\n", __FUNCTION__, pdev->irq);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->B2C2_revision != 0x82'
#2215: FILE: drivers/media/dvb/b2c2/skystar2.c:2165:
+	if ((adapter->B2C2_revision != 0x82) && (adapter->B2C2_revision != 0xC3))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->B2C2_revision != 0xC3'
#2215: FILE: drivers/media/dvb/b2c2/skystar2.c:2165:
+	if ((adapter->B2C2_revision != 0x82) && (adapter->B2C2_revision != 0xC3))

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2217: FILE: drivers/media/dvb/b2c2/skystar2.c:2167:
+			dprintk("%s: The revision of the FlexCopII chip on your card is - %d\n", __FUNCTION__, adapter->B2C2_revision);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2217: FILE: drivers/media/dvb/b2c2/skystar2.c:2167:
+			dprintk("%s: The revision of the FlexCopII chip on your card is - %d\n", __FUNCTION__, adapter->B2C2_revision);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2218: FILE: drivers/media/dvb/b2c2/skystar2.c:2168:
+			dprintk("%s: This driver works now only with FlexCopII(rev.130) and FlexCopIIB(rev.195).\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2218: FILE: drivers/media/dvb/b2c2/skystar2.c:2168:
+			dprintk("%s: This driver works now only with FlexCopII(rev.130) and FlexCopIIB(rev.195).\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2240: FILE: drivers/media/dvb/b2c2/skystar2.c:2190:
+	dprintk("%s sram length = %d, sram type= %x\n", __FUNCTION__, SRAM_length(adapter), adapter->dwSramType);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2240: FILE: drivers/media/dvb/b2c2/skystar2.c:2190:
+	dprintk("%s sram length = %d, sram type= %x\n", __FUNCTION__, SRAM_length(adapter), adapter->dwSramType);

WARNING:LONG_LINE: line length of 274 exceeds 100 columns
#2253: FILE: drivers/media/dvb/b2c2/skystar2.c:2203:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0], adapter->mac_addr[1], adapter->mac_addr[2], adapter->mac_addr[3], adapter->mac_addr[4], adapter->mac_addr[5], adapter->mac_addr[6], adapter->mac_addr[7]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2253: FILE: drivers/media/dvb/b2c2/skystar2.c:2203:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0], adapter->mac_addr[1], adapter->mac_addr[2], adapter->mac_addr[3], adapter->mac_addr[4], adapter->mac_addr[5], adapter->mac_addr[6], adapter->mac_addr[7]

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2253: FILE: drivers/media/dvb/b2c2/skystar2.c:2203:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0], adapter->mac_addr[1], adapter->mac_addr[2], adapter->mac_addr[3], adapter->mac_addr[4], adapter->mac_addr[5], adapter->mac_addr[6], adapter->mac_addr[7]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2253: FILE: drivers/media/dvb/b2c2/skystar2.c:2203:
+		printk("%s MAC address = %02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x \n", __FUNCTION__, adapter->mac_addr[0], adapter->mac_addr[1], adapter->mac_addr[2], adapter->mac_addr[3], adapter->mac_addr[4], adapter->mac_addr[5], adapter->mac_addr[6], adapter->mac_addr[7]

WARNING:LONG_LINE: line length of 268 exceeds 100 columns
#2262: FILE: drivers/media/dvb/b2c2/skystar2.c:2212:
+	printk("%s key = \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n", __FUNCTION__, key[0], key[1], key[2], key[3], key[4], key[5], key[6], key[7], key[8], key[9], key[10], key[11], key[12], key[13], key[14], key[15]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2262: FILE: drivers/media/dvb/b2c2/skystar2.c:2212:
+	printk("%s key = \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n", __FUNCTION__, key[0], key[1], key[2], key[3], key[4], key[5], key[6], key[7], key[8], key[9], key[10], key[11], key[12], key[13], key[14], key[15]

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2262: FILE: drivers/media/dvb/b2c2/skystar2.c:2212:
+	printk("%s key = \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n", __FUNCTION__, key[0], key[1], key[2], key[3], key[4], key[5], key[6], key[7], key[8], key[9], key[10], key[11], key[12], key[13], key[14], key[15]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2262: FILE: drivers/media/dvb/b2c2/skystar2.c:2212:
+	printk("%s key = \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n %02x %02x %02x %02x \n", __FUNCTION__, key[0], key[1], key[2], key[3], key[4], key[5], key[6], key[7], key[8], key[9], key[10], key[11], key[12], key[13], key[14], key[15]

CHECK:CAMELCASE: Avoid CamelCase: <DriverHalt>
#2270: FILE: drivers/media/dvb/b2c2/skystar2.c:2220:
+void DriverHalt(struct pci_dev *pdev)

CHECK:SPACING: No space is necessary after a cast
#2292: FILE: drivers/media/dvb/b2c2/skystar2.c:2242:
+	struct adapter *adapter = (struct adapter *) dvbdmx->priv;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2294: FILE: drivers/media/dvb/b2c2/skystar2.c:2244:
+	dprintk("%s: PID=%d, type=%d\n", __FUNCTION__, dvbdmxfeed->pid, dvbdmxfeed->type);

CHECK:SPACING: No space is necessary after a cast
#2304: FILE: drivers/media/dvb/b2c2/skystar2.c:2254:
+	struct adapter *adapter = (struct adapter *) dvbdmx->priv;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2306: FILE: drivers/media/dvb/b2c2/skystar2.c:2256:
+	dprintk("%s: PID=%d, type=%d\n", __FUNCTION__, dvbdmxfeed->pid, dvbdmxfeed->type);

CHECK:CAMELCASE: Avoid CamelCase: <wzHalfPeriodFor45MHz>
#2319: FILE: drivers/media/dvb/b2c2/skystar2.c:2269:
+	u16 wzHalfPeriodFor45MHz[] = { 0x01FF, 0x0154, 0x00FF, 0x00CC };

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2322: FILE: drivers/media/dvb/b2c2/skystar2.c:2272:
+	dprintk("%s: %u\n", __FUNCTION__, tone);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2342: FILE: drivers/media/dvb/b2c2/skystar2.c:2292:
+	if (ax != 0) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2346: FILE: drivers/media/dvb/b2c2/skystar2.c:2296:
+	} else {
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2355: FILE: drivers/media/dvb/b2c2/skystar2.c:2305:
+	dprintk("%s : polarity = %u \n", __FUNCTION__, polarity);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2355: FILE: drivers/media/dvb/b2c2/skystar2.c:2305:
+	dprintk("%s : polarity = %u \n", __FUNCTION__, polarity);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2360: FILE: drivers/media/dvb/b2c2/skystar2.c:2310:
+		dprintk("%s: LNB power off\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2384: FILE: drivers/media/dvb/b2c2/skystar2.c:2334:
+			printk("%s: FE_SLEEP\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2384: FILE: drivers/media/dvb/b2c2/skystar2.c:2334:
+			printk("%s: FE_SLEEP\n", __FUNCTION__);

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2388: FILE: drivers/media/dvb/b2c2/skystar2.c:2338:
+			// return -EOPNOTSUPP, to make DVB core also send "FE_SLEEP" command to frontend.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2394: FILE: drivers/media/dvb/b2c2/skystar2.c:2344:
+			dprintk("%s: FE_SET_VOLTAGE\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2396: FILE: drivers/media/dvb/b2c2/skystar2.c:2346:
+			switch ((fe_sec_voltage_t) arg) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2399: FILE: drivers/media/dvb/b2c2/skystar2.c:2349:
+				printk("%s: SEC_VOLTAGE_13, %x\n", __FUNCTION__, SEC_VOLTAGE_13);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2399: FILE: drivers/media/dvb/b2c2/skystar2.c:2349:
+				printk("%s: SEC_VOLTAGE_13, %x\n", __FUNCTION__, SEC_VOLTAGE_13);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2407: FILE: drivers/media/dvb/b2c2/skystar2.c:2357:
+				printk("%s: SEC_VOLTAGE_18, %x\n", __FUNCTION__, SEC_VOLTAGE_18);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2407: FILE: drivers/media/dvb/b2c2/skystar2.c:2357:
+				printk("%s: SEC_VOLTAGE_18, %x\n", __FUNCTION__, SEC_VOLTAGE_18);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2423: FILE: drivers/media/dvb/b2c2/skystar2.c:2373:
+			dprintk("%s: FE_SET_TONE\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2425: FILE: drivers/media/dvb/b2c2/skystar2.c:2375:
+			switch ((fe_sec_tone_mode_t) arg) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2428: FILE: drivers/media/dvb/b2c2/skystar2.c:2378:
+				printk("%s: SEC_TONE_ON, %x\n", __FUNCTION__, SEC_TONE_ON);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2428: FILE: drivers/media/dvb/b2c2/skystar2.c:2378:
+				printk("%s: SEC_TONE_ON, %x\n", __FUNCTION__, SEC_TONE_ON);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2436: FILE: drivers/media/dvb/b2c2/skystar2.c:2386:
+				printk("%s: SEC_TONE_OFF, %x\n", __FUNCTION__, SEC_TONE_OFF);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2436: FILE: drivers/media/dvb/b2c2/skystar2.c:2386:
+				printk("%s: SEC_TONE_OFF, %x\n", __FUNCTION__, SEC_TONE_OFF);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#2466: FILE: drivers/media/dvb/b2c2/skystar2.c:2416:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dvb_adapter"
#2474: FILE: drivers/media/dvb/b2c2/skystar2.c:2424:
+	if (dvb_adapter == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2475: FILE: drivers/media/dvb/b2c2/skystar2.c:2425:
+		printk("%s: Error registering DVB adapter\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2475: FILE: drivers/media/dvb/b2c2/skystar2.c:2425:
+		printk("%s: Error registering DVB adapter\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#2482: FILE: drivers/media/dvb/b2c2/skystar2.c:2432:
+	adapter = (struct adapter *) pdev->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2497: FILE: drivers/media/dvb/b2c2/skystar2.c:2447:
+	dvbdemux->priv = (void *) adapter;

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2503: FILE: drivers/media/dvb/b2c2/skystar2.c:2453:
+	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING | DMX_SECTION_FILTERING | DMX_MEMORY_BASED_FILTERING);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#2538: FILE: drivers/media/dvb/b2c2/skystar2.c:2488:
+	if (pdev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter"
#2543: FILE: drivers/media/dvb/b2c2/skystar2.c:2493:
+	if (adapter != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter->dvb_adapter"
#2554: FILE: drivers/media/dvb/b2c2/skystar2.c:2504:
+		if (adapter->dvb_adapter != NULL) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2555: FILE: drivers/media/dvb/b2c2/skystar2.c:2505:
+			dvb_remove_frontend_ioctls(adapter->dvb_adapter, flexcop_diseqc_ioctl, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adapter->i2c_bus"
#2557: FILE: drivers/media/dvb/b2c2/skystar2.c:2507:
+			if (adapter->i2c_bus != NULL)

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2558: FILE: drivers/media/dvb/b2c2/skystar2.c:2508:
+				dvb_unregister_i2c_bus(master_xfer, adapter->i2c_bus->adapter, adapter->i2c_bus->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2581: FILE: drivers/media/dvb/b2c2/skystar2.c:2531:
+	printk("\nTechnisat SkyStar2 driver loading\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2588: FILE: drivers/media/dvb/b2c2/skystar2.c:2538:
+	printk("\nTechnisat SkyStar2 driver unloading\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354634.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 165 warnings, 197 checks, 2559 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354634.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
