WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
In message <20020807192314.H24631@parcelfarce.linux.theplanet.co.uk> you write:

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#102: FILE: arch/ia64/kernel/perfmon.c:2224:
		/*

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/ia64/kernel/perfmon.c:2976:
+^I^I^I__get_cpu_var(pfm_syst_wide), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#152: FILE: arch/ia64/kernel/process.c:219:
+	if (__get_cpu_var(pfm_syst_wide)) pfm_syst_wide_update_task(task, 1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#211: FILE: include/asm-x86_64/percpu.h:7:
+#define __get_cpu_var(var)     (*RELOC_HIDE(&var, read_pda(cpudata_offset)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#385: FILE: include/asm-generic/percpu.h:12:
+#define DEFINE_PER_CPU(type, name) \
+    __attribute__((__section__(".percpu"))) __typeof__(type) name##__per_cpu

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: include/asm-generic/percpu.h:13:
+    __attribute__((__section__(".percpu"))) __typeof__(type) name##__per_cpu$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".percpu") over __attribute__((__section__(".percpu")))
#386: FILE: include/asm-generic/percpu.h:13:
+    __attribute__((__section__(".percpu"))) __typeof__(type) name##__per_cpu

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#398: FILE: include/asm-generic/percpu.h:24:
+#define DEFINE_PER_CPU(type, name) \
+    __typeof__(type) name##__per_cpu

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: include/asm-generic/percpu.h:25:
+    __typeof__(type) name##__per_cpu$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#406: FILE: include/asm-generic/percpu.h:32:
+#define DECLARE_PER_CPU(type, name) extern __typeof__(type) name##__per_cpu

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#417: FILE: include/asm-ia64/percpu.h:11:
+#define THIS_CPU(var)	(var##__per_cpu)	/* use this to mark accesses to per-CPU variables... */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#428: FILE: include/asm-ia64/percpu.h:20:
+#define DEFINE_PER_CPU(type, name) \
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) name##__per_cpu

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: include/asm-ia64/percpu.h:21:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) name##__per_cpu$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#429: FILE: include/asm-ia64/percpu.h:21:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) name##__per_cpu

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#431: FILE: include/asm-ia64/percpu.h:23:
+#define DECLARE_PER_CPU(type, name) extern __typeof__(type) name##__per_cpu

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441011.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 1 checks, 334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441011.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
