ERROR:SPACING: space prohibited after that open parenthesis '('
#67: FILE: fs/coda/cnode.c:153:
+	if ( !inode )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#67: FILE: fs/coda/cnode.c:153:
+	if ( !inode )

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#72: FILE: fs/coda/cnode.c:157:
+	 * fail in the initialization callback */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#73: FILE: fs/coda/cnode.c:158:
+	BUG_ON(inode->i_state & I_NEW);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that open parenthesis '('
#84: FILE: fs/coda/cnode.c:169:
+	if ( *inode && ((*inode)->i_state & I_NEW) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#84: FILE: fs/coda/cnode.c:169:
+	if ( *inode && ((*inode)->i_state & I_NEW) ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#121: FILE: fs/nfs/inode.c:667:
+	if (!(inode = iget5_locked(sb, ino, nfs_find_actor, nfs_init_locked, &desc)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#161: FILE: fs/reiserfs/inode.c:36:
+    if (!(inode->i_state & I_NEW) && INODE_PKEY(inode)->k_objectid != 0) { /* also handles bad_inode case */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/reiserfs/inode.c:36:
+    if (!(inode->i_state & I_NEW) && INODE_PKEY(inode)->k_objectid != 0) { /* also handles bad_inode case */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/reiserfs/inode.c:1143:
+    struct reiserfs_iget_args *args = (struct reiserfs_iget_args *)p ;$

WARNING:SPACING: space prohibited before semicolon
#170: FILE: fs/reiserfs/inode.c:1143:
+    struct reiserfs_iget_args *args = (struct reiserfs_iget_args *)p ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: fs/reiserfs/inode.c:1150:
+void reiserfs_read_locked_inode (struct inode * inode, struct reiserfs_iget_args *args)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: fs/reiserfs/inode.c:1150:
+void reiserfs_read_locked_inode (struct inode * inode, struct reiserfs_iget_args *args)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/reiserfs/inode.c:1227:
+    struct reiserfs_iget_args *args;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: fs/reiserfs/inode.c:1237:
+    struct reiserfs_iget_args args ;$

WARNING:SPACING: space prohibited before semicolon
#224: FILE: fs/reiserfs/inode.c:1237:
+    struct reiserfs_iget_args args ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: fs/reiserfs/inode.c:1240:
+    inode = iget5_locked (s, key->on_disk_key.k_objectid, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/reiserfs/inode.c:1240:
+    inode = iget5_locked (s, key->on_disk_key.k_objectid, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: fs/reiserfs/inode.c:1240:
+    inode = iget5_locked (s, key->on_disk_key.k_objectid, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: fs/reiserfs/inode.c:1241:
+    inode = iget5_locked (s, key->on_disk_key.k_objectid, 
 		   reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/reiserfs/inode.c:1245:
+    if (inode->i_state & I_NEW) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/reiserfs/inode.c:1248:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/reiserfs/super.c:1009:
+    struct reiserfs_iget_args args ;$

WARNING:SPACING: space prohibited before semicolon
#256: FILE: fs/reiserfs/super.c:1009:
+    struct reiserfs_iget_args args ;

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#265: FILE: fs/reiserfs/super.c:1072:
+    root_inode = iget5_locked (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/reiserfs/super.c:1072:
+    root_inode = iget5_locked (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: fs/reiserfs/super.c:1072:
+    root_inode = iget5_locked (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/reiserfs/super.c:1076:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/reiserfs/super.c:1078:
+    if (root_inode->i_state & I_NEW) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: include/linux/fs.h:1252:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: include/linux/reiserfs_fs.h:1822:
+void reiserfs_read_locked_inode(struct inode * inode, struct reiserfs_iget_args *args) ;

WARNING:SPACING: space prohibited before semicolon
#332: FILE: include/linux/reiserfs_fs.h:1822:
+void reiserfs_read_locked_inode(struct inode * inode, struct reiserfs_iget_args *args) ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 22 warnings, 1 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
