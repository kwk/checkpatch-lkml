WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
  o Removed blksize from decnet device parameters - use the device mtu like we

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: net/decnet/af_decnet.c:1929:
+	if (flags & ~(MSG_TRYHARD|MSG_OOB|MSG_DONTWAIT|MSG_EOR|MSG_NOSIGNAL|MSG_MORE))
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: net/decnet/af_decnet.c:1929:
+	if (flags & ~(MSG_TRYHARD|MSG_OOB|MSG_DONTWAIT|MSG_EOR|MSG_NOSIGNAL|MSG_MORE))
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: net/decnet/af_decnet.c:1929:
+	if (flags & ~(MSG_TRYHARD|MSG_OOB|MSG_DONTWAIT|MSG_EOR|MSG_NOSIGNAL|MSG_MORE))
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: net/decnet/af_decnet.c:1929:
+	if (flags & ~(MSG_TRYHARD|MSG_OOB|MSG_DONTWAIT|MSG_EOR|MSG_NOSIGNAL|MSG_MORE))
 	                                                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: net/decnet/af_decnet.c:1929:
+	if (flags & ~(MSG_TRYHARD|MSG_OOB|MSG_DONTWAIT|MSG_EOR|MSG_NOSIGNAL|MSG_MORE))
 	                                                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: net/decnet/af_decnet.c:2118:
+	for(state->bucket = 0;

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: net/decnet/af_decnet.c:2151:
+		while(*pos && (sk = dn_socket_get_next(seq, sk)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: net/decnet/af_decnet.c:2160:
+	void *rc;
+	read_lock_bh(&dn_hash_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#268: FILE: net/decnet/af_decnet.c:2162:
+	if (!rc) {
+		read_unlock_bh(&dn_hash_lock);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#276: FILE: net/decnet/af_decnet.c:2170:
+	return *pos ? dn_socket_get_idx(seq, *pos - 1) : (void*)1;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#283: FILE: net/decnet/af_decnet.c:2177:
+	if (v == (void*)1) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: net/decnet/af_decnet.c:2193:
+	if (v && v != (void*)1)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#318: FILE: net/decnet/af_decnet.c:2219:
+	switch(state) {
+		case DN_O:
[...]
+		case DN_CR:
[...]
+		case DN_DR:
[...]
+		case DN_DRC:
[...]
+		case DN_CC:
[...]
+		case DN_CI:
[...]
+		case DN_NR:
[...]
+		case DN_NC:
[...]
+		case DN_CD:
[...]
+		case DN_RJ:
[...]
+		case DN_RUN:
[...]
+		case DN_DI:
[...]
+		case DN_DIC:
[...]
+		case DN_DN:
[...]
+		case DN_CL:
[...]
+		case DN_CN:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#318: FILE: net/decnet/af_decnet.c:2219:
+	switch(state) {

WARNING:SPLIT_STRING: quoted string split across lines
#408: FILE: net/decnet/af_decnet.c:2270:
+		   "%6s/%04X %04d:%04d %04d:%04d %01d %-16s "
+		   "%6s/%04X %04d:%04d %04d:%04d %01d %-16s %4s %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#431: FILE: net/decnet/af_decnet.c:2293:
+	if (v == (void*)1) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#431: FILE: net/decnet/af_decnet.c:2293:
+	if (v == (void*)1) {
[...]
+	} else {
[...]

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#442: FILE: net/decnet/af_decnet.c:2301:
+static struct seq_operations dn_socket_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#475: FILE: net/decnet/af_decnet.c:2331:
+static struct file_operations dn_socket_seq_fops = {

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#496: FILE: net/decnet/af_decnet.c:2373:
+static char banner[] __initdata = KERN_INFO "NET4: DECnet for Linux: V.2.5.68s (C) 1995-2003 Linux DECnet Project Team\n";

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#505: FILE: net/decnet/af_decnet.c:2390:
+	proc_net_fops_create("decnet", S_IRUGO, &dn_socket_seq_fops);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#621: FILE: net/decnet/dn_dev.c:253:
+	u32 blksize = dev->mtu;
+	if (blksize > 0xffff)

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: net/decnet/dn_dev.c:869:
+        msg->blksize = dn_htons(mtu2blksize(dev));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: net/decnet/dn_dev.c:869:
+        msg->blksize = dn_htons(mtu2blksize(dev));$

ERROR:SPACING: space required before the open parenthesis '('
#700: FILE: net/decnet/dn_dev.c:1343:
+	} while(dev && !dev->dn_ptr);

ERROR:SPACING: space required before the open parenthesis '('
#713: FILE: net/decnet/dn_dev.c:1356:
+		while(dev && (dev = dn_dev_get_next(seq, dev)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#723: FILE: net/decnet/dn_dev.c:1366:
+		struct net_device *dev;
+		read_lock(&dev_base_lock);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#725: FILE: net/decnet/dn_dev.c:1368:
+		if (dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#729: FILE: net/decnet/dn_dev.c:1372:
+	return (void*)1;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#737: FILE: net/decnet/dn_dev.c:1380:
+	if (v == (void*)1) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#741: FILE: net/decnet/dn_dev.c:1384:
+		if (dev == NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#750: FILE: net/decnet/dn_dev.c:1393:
+	if (v && v != (void*)1)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#771: FILE: net/decnet/dn_dev.c:1413:
+	if (v == (void*)1)

CHECK:BRACES: braces {} should be used on all arms of this statement
#771: FILE: net/decnet/dn_dev.c:1413:
+	if (v == (void*)1)
[...]
+	else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: net/decnet/dn_dev.c:1414:
+        ^Iseq_puts(seq, "Name     Flags T1   Timer1 T3   Timer3 BlkSize Pri State DevType    Router Peer\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#772: FILE: net/decnet/dn_dev.c:1414:
+        ^Iseq_puts(seq, "Name     Flags T1   Timer1 T3   Timer3 BlkSize Pri State DevType    Router Peer\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: net/decnet/dn_dev.c:1414:
+        ^Iseq_puts(seq, "Name     Flags T1   Timer1 T3   Timer3 BlkSize Pri State DevType    Router Peer\n");$

CHECK:BRACES: Unbalanced braces around else statement
#773: FILE: net/decnet/dn_dev.c:1415:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: net/decnet/dn_dev.c:1421:
+                seq_printf(seq, "%-8s %1s     %04u %04u   %04lu %04lu"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: net/decnet/dn_dev.c:1421:
+                seq_printf(seq, "%-8s %1s     %04u %04u   %04lu %04lu"$

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hu' is unnecessary
#787: FILE: net/decnet/dn_dev.c:1421:
+                seq_printf(seq, "%-8s %1s     %04u %04u   %04lu %04lu"
+				"   %04hu    %03d %02x    %-10s %-7s %-7s\n",
                              	dev->name ? dev->name : "???",
                              	dn_type2asc(dn_db->parms.mode),
                              	0, 0,
 				dn_db->t3, dn_db->parms.t3,
+				mtu2blksize(dev),
+				mtu2blksize(dev),
 				dn_db->parms.priority,
 				dn_db->parms.state, dn_db->parms.name,
 				dn_db->router ? dn_addr2asc(dn_ntohs(*(dn_address *)dn_db->router->primary_key), router_buf) : "",

WARNING:SPLIT_STRING: quoted string split across lines
#788: FILE: net/decnet/dn_dev.c:1422:
+                seq_printf(seq, "%-8s %1s     %04u %04u   %04lu %04lu"
+				"   %04hu    %03d %02x    %-10s %-7s %-7s\n",

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#803: FILE: net/decnet/dn_dev.c:1436:
+static struct seq_operations dn_dev_seq_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#833: FILE: net/decnet/dn_dev.c:1448:
+static struct file_operations dn_dev_seq_fops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#850: FILE: net/decnet/dn_dev.c:1506:
+	proc_net_fops_create("decnet_dev", S_IRUGO, &dn_dev_seq_fops);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1009: FILE: net/decnet/dn_neigh.c:707:
+	proc_net_fops_create("decnet_neigh", S_IRUGO, &dn_neigh_seq_fops);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1108: FILE: net/decnet/dn_nsp_in.c:780:
+		unsigned short tmp = cb->dst_port;
+		cb->dst_port = cb->src_port;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1124: FILE: net/decnet/dn_nsp_in.c:800:
+		/*
+		 * We linearize everything except data segments here.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1164: FILE: net/decnet/dn_nsp_out.c:353:
+	BUG_ON(len < 5);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1174: FILE: net/decnet/dn_nsp_out.c:370:
+	BUG_ON(hlen < 9);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1242: FILE: net/decnet/dn_route.c:220:
+/*
+ * The decnet standards don't impose a particular minimum mtu, what they

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1262: FILE: net/decnet/dn_route.c:240:
+	if (dst->metrics[RTAX_MTU-1] > mtu && mtu >= min_mtu) {
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1264: FILE: net/decnet/dn_route.c:242:
+			dst->metrics[RTAX_MTU-1] = mtu;
 			                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1269: FILE: net/decnet/dn_route.c:247:
+			u32 mss = mtu - DN_MAX_NSP_DATA_HEADER;
+			if (dst->metrics[RTAX_ADVMSS-1] > mss)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1269: FILE: net/decnet/dn_route.c:247:
+			if (dst->metrics[RTAX_ADVMSS-1] > mss)
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1270: FILE: net/decnet/dn_route.c:248:
+				dst->metrics[RTAX_ADVMSS-1] = mss;
 				                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: net/decnet/dn_route.c:253:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1276: FILE: net/decnet/dn_route.c:254:
+/* 
+ * When a route has been marked obsolete. (e.g. routing cache flush)

ERROR:SPACING: space required before the open parenthesis '('
#1354: FILE: net/decnet/dn_route.c:839:
+	while(tmp) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1380: FILE: net/decnet/dn_route.c:961:
+			fl.fld_src = dnet_select_source(dev_out, 0,
+						       RT_SCOPE_HOST);

ERROR:SPACING: space required before the open parenthesis '('
#1506: FILE: net/decnet/dn_route.c:1680:
+	for(s->bucket = dn_rt_hash_mask; s->bucket >= 0; --s->bucket) {

ERROR:SPACING: space required before the open parenthesis '('
#1543: FILE: net/decnet/dn_route.c:1696:
+	while(!rt) {

ERROR:SPACING: space required before the open parenthesis '('
#1559: FILE: net/decnet/dn_route.c:1711:
+		while(*pos && (rt = dn_rt_cache_get_next(seq, rt)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1587: FILE: net/decnet/dn_route.c:1735:
+	seq_printf(seq, "%-8s %-7s %-7s %04d %04d %04d\n",
+			rt->u.dst.dev ? rt->u.dst.dev->name : "*",

CHECK:SPACING: No space is necessary after a cast
#1592: FILE: net/decnet/dn_route.c:1740:
+			(int) dst_metric(&rt->u.dst, RTAX_RTT));

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#1596: FILE: net/decnet/dn_route.c:1744:
+static struct seq_operations dn_rt_cache_seq_ops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1624: FILE: net/decnet/dn_route.c:1772:
+static struct file_operations dn_rt_cache_seq_fops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1641: FILE: net/decnet/dn_route.c:1836:
+	proc_net_fops_create("decnet_cache", S_IRUGO, &dn_rt_cache_seq_fops);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 31 warnings, 16 checks, 1574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
