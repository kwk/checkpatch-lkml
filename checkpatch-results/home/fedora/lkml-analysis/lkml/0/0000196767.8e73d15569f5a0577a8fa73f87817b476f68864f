ERROR:INITIALISED_STATIC: do not initialise statics to 0
#101: FILE: drivers/mmc/wbsd.c:96:
+static unsigned int nopnp = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: drivers/mmc/wbsd.c:110:
+	BUG_ON(host->config == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/mmc/wbsd.c:111:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: drivers/mmc/wbsd.c:118:
+	BUG_ON(host->config == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/mmc/wbsd.c:119:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#130: FILE: drivers/mmc/wbsd.c:125:
+	BUG_ON(host->config == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/mmc/wbsd.c:126:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#138: FILE: drivers/mmc/wbsd.c:133:
+	BUG_ON(host->config == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/mmc/wbsd.c:134:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/mmc/wbsd.c:172:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/mmc/wbsd.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/mmc/wbsd.c:693:
+^I$

WARNING:TYPO_SPELLING: 'disabed' may be misspelled - perhaps 'disabled'?
#253: FILE: drivers/mmc/wbsd.c:1023:
+	 * that needs to be disabed.
 	                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#256: FILE: drivers/mmc/wbsd.c:1026:
+	if ((ios->power_mode == MMC_POWER_ON) &&
+		(ios->bus_mode == MMC_BUSMODE_OPENDRAIN))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_ON'
#256: FILE: drivers/mmc/wbsd.c:1026:
+	if ((ios->power_mode == MMC_POWER_ON) &&
+		(ios->bus_mode == MMC_BUSMODE_OPENDRAIN))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->bus_mode == MMC_BUSMODE_OPENDRAIN'
#256: FILE: drivers/mmc/wbsd.c:1026:
+	if ((ios->power_mode == MMC_POWER_ON) &&
+		(ios->bus_mode == MMC_BUSMODE_OPENDRAIN))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/mmc/wbsd.c:1027:
+	if ((ios->power_mode == MMC_POWER_ON) &&
+		(ios->bus_mode == MMC_BUSMODE_OPENDRAIN))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#263: FILE: drivers/mmc/wbsd.c:1032:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#263: FILE: drivers/mmc/wbsd.c:1032:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/mmc/wbsd.c:1038:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#295: FILE: drivers/mmc/wbsd.c:1082:
+	if (host->flags & WBSD_FIGNORE_DETECT)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/mmc/wbsd.c:1087:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#308: FILE: drivers/mmc/wbsd.c:1093:
+		if (!(host->flags & WBSD_FCARD_PRESENT))
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#315: FILE: drivers/mmc/wbsd.c:1100:
+	else if (host->flags & WBSD_FCARD_PRESENT)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#315: FILE: drivers/mmc/wbsd.c:1100:
+	}
+	else if (host->flags & WBSD_FCARD_PRESENT)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#349: FILE: drivers/mmc/wbsd.c:1300:
+static int __devinit wbsd_alloc_mmc(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#349: FILE: drivers/mmc/wbsd.c:1300:
+static int __devinit wbsd_alloc_mmc(struct device* dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#351: FILE: drivers/mmc/wbsd.c:1302:
+	struct mmc_host* mmc;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#352: FILE: drivers/mmc/wbsd.c:1303:
+	struct wbsd_host* host;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: drivers/mmc/wbsd.c:1304:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/mmc/wbsd.c:1311:
+^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#372: FILE: drivers/mmc/wbsd.c:1323:
+	mmc->ocr_avail = MMC_VDD_32_33|MMC_VDD_33_34;
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/mmc/wbsd.c:1324:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/mmc/wbsd.c:1326:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/mmc/wbsd.c:1333:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: drivers/mmc/wbsd.c:1339:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/mmc/wbsd.c:1345:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/mmc/wbsd.c:1347:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#400: FILE: drivers/mmc/wbsd.c:1351:
+static void __devexit wbsd_free_mmc(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#400: FILE: drivers/mmc/wbsd.c:1351:
+static void __devexit wbsd_free_mmc(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#402: FILE: drivers/mmc/wbsd.c:1353:
+	struct mmc_host* mmc;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/mmc/wbsd.c:1354:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: drivers/mmc/wbsd.c:1358:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/mmc/wbsd.c:1360:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#417: FILE: drivers/mmc/wbsd.c:1368:
+static int __devinit wbsd_scan(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#417: FILE: drivers/mmc/wbsd.c:1368:
+static int __devinit wbsd_scan(struct wbsd_host* host)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#431: FILE: drivers/mmc/wbsd.c:1426:
+static int __devinit wbsd_request_region(struct wbsd_host* host, int base)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#431: FILE: drivers/mmc/wbsd.c:1426:
+static int __devinit wbsd_request_region(struct wbsd_host* host, int base)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#446: FILE: drivers/mmc/wbsd.c:1439:
+static void __devexit wbsd_release_regions(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#446: FILE: drivers/mmc/wbsd.c:1439:
+static void __devexit wbsd_release_regions(struct wbsd_host* host)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: drivers/mmc/wbsd.c:1443:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/mmc/wbsd.c:1448:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#464: FILE: drivers/mmc/wbsd.c:1456:
+static void __devinit wbsd_request_dma(struct wbsd_host* host, int dma)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#464: FILE: drivers/mmc/wbsd.c:1456:
+static void __devinit wbsd_request_dma(struct wbsd_host* host, int dma)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/mmc/wbsd.c:1469:
+	host->dma_buffer = kmalloc(WBSD_DMA_SIZE,
 		GFP_NOIO | GFP_DMA | __GFP_REPEAT | __GFP_NOWARN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/mmc/wbsd.c:1477:
+	host->dma_addr = dma_map_single(host->dev, host->dma_buffer,
+		WBSD_DMA_SIZE, DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/mmc/wbsd.c:1501:
+	dma_unmap_single(host->dev, host->dma_addr, WBSD_DMA_SIZE,
+		DMA_BIDIRECTIONAL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/mmc/wbsd.c:1503:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#509: FILE: drivers/mmc/wbsd.c:1515:
+static void __devexit wbsd_release_dma(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#509: FILE: drivers/mmc/wbsd.c:1515:
+static void __devexit wbsd_release_dma(struct wbsd_host* host)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/mmc/wbsd.c:1519:
+		dma_unmap_single(host->dev, host->dma_addr, WBSD_DMA_SIZE,
+			DMA_BIDIRECTIONAL);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#515: FILE: drivers/mmc/wbsd.c:1521:
+	if (host->dma_buffer)
+		kfree(host->dma_buffer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/mmc/wbsd.c:1524:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#530: FILE: drivers/mmc/wbsd.c:1534:
+static int __devinit wbsd_request_irq(struct wbsd_host* host, int irq)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#530: FILE: drivers/mmc/wbsd.c:1534:
+static int __devinit wbsd_request_irq(struct wbsd_host* host, int irq)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: drivers/mmc/wbsd.c:1557:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#575: FILE: drivers/mmc/wbsd.c:1561:
+static void __devexit wbsd_release_irq(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#575: FILE: drivers/mmc/wbsd.c:1561:
+static void __devexit wbsd_release_irq(struct wbsd_host* host)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: drivers/mmc/wbsd.c:1567:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/mmc/wbsd.c:1569:
+^I^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#596: FILE: drivers/mmc/wbsd.c:1582:
+static int __devinit wbsd_request_resources(struct wbsd_host* host,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#596: FILE: drivers/mmc/wbsd.c:1582:
+static int __devinit wbsd_request_resources(struct wbsd_host* host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/mmc/wbsd.c:1583:
+static int __devinit wbsd_request_resources(struct wbsd_host* host,
+	int base, int irq, int dma)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/mmc/wbsd.c:1586:
+^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#635: FILE: drivers/mmc/wbsd.c:1613:
+static void __devexit wbsd_release_resources(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#635: FILE: drivers/mmc/wbsd.c:1613:
+static void __devexit wbsd_release_resources(struct wbsd_host* host)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#646: FILE: drivers/mmc/wbsd.c:1624:
+static void __devinit wbsd_chip_config(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#646: FILE: drivers/mmc/wbsd.c:1624:
+static void __devinit wbsd_chip_config(struct wbsd_host* host)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/mmc/wbsd.c:1628:
+^I */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/mmc/wbsd.c:1663:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/mmc/wbsd.c:1663:
+ $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#707: FILE: drivers/mmc/wbsd.c:1664:
+static int __devinit wbsd_chip_validate(struct wbsd_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#707: FILE: drivers/mmc/wbsd.c:1664:
+static int __devinit wbsd_chip_validate(struct wbsd_host* host)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: drivers/mmc/wbsd.c:1682:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dma != host->dma'
#747: FILE: drivers/mmc/wbsd.c:1690:
+	if ((dma != host->dma) && (host->dma != -1))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#759: FILE: drivers/mmc/wbsd.c:1702:
+static int __devinit wbsd_init(struct device* dev, int base, int irq, int dma,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#759: FILE: drivers/mmc/wbsd.c:1702:
+static int __devinit wbsd_init(struct device* dev, int base, int irq, int dma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/mmc/wbsd.c:1703:
+static int __devinit wbsd_init(struct device* dev, int base, int irq, int dma,
+	int pnp)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#762: FILE: drivers/mmc/wbsd.c:1705:
+	struct wbsd_host* host = NULL;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#763: FILE: drivers/mmc/wbsd.c:1706:
+	struct mmc_host* mmc = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: drivers/mmc/wbsd.c:1708:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: drivers/mmc/wbsd.c:1712:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#772: FILE: drivers/mmc/wbsd.c:1715:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#780: FILE: drivers/mmc/wbsd.c:1720:
+	if (ret)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#782: FILE: drivers/mmc/wbsd.c:1722:
+		if (pnp && (ret == -ENODEV))
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#784: FILE: drivers/mmc/wbsd.c:1724:
+			printk(KERN_WARNING DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#786: FILE: drivers/mmc/wbsd.c:1726:
+				": Unable to confirm device presence. You may "
+				"experience lock-ups.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#788: FILE: drivers/mmc/wbsd.c:1728:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#788: FILE: drivers/mmc/wbsd.c:1728:
+		}
+		else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#801: FILE: drivers/mmc/wbsd.c:1739:
+	if (ret)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#813: FILE: drivers/mmc/wbsd.c:1749:
+	if (pnp && (host->config != 0))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->config != 0'
#813: FILE: drivers/mmc/wbsd.c:1749:
+	if (pnp && (host->config != 0))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#815: FILE: drivers/mmc/wbsd.c:1751:
+		if (!wbsd_chip_validate(host))
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#817: FILE: drivers/mmc/wbsd.c:1753:
+			printk(KERN_WARNING DRIVER_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#819: FILE: drivers/mmc/wbsd.c:1755:
+				": PnP active but chip not configured! "
+				"You probably have a buggy BIOS. "

WARNING:SPLIT_STRING: quoted string split across lines
#820: FILE: drivers/mmc/wbsd.c:1756:
+				"You probably have a buggy BIOS. "
+				"Configuring chip manually.\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#824: FILE: drivers/mmc/wbsd.c:1760:
+	}
+	else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#856: FILE: drivers/mmc/wbsd.c:1783:
+	printk(KERN_INFO "%s: W83L51xD", mmc->host_name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#858: FILE: drivers/mmc/wbsd.c:1785:
+		printk(" id %x", (int)host->chip_id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#859: FILE: drivers/mmc/wbsd.c:1786:
+	printk(" at 0x%x irq %d", (int)host->base, (int)host->irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#861: FILE: drivers/mmc/wbsd.c:1788:
+		printk(" dma %d", (int)host->dma);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#863: FILE: drivers/mmc/wbsd.c:1790:
+		printk(" FIFO");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#865: FILE: drivers/mmc/wbsd.c:1792:
+		printk(" PnP");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#866: FILE: drivers/mmc/wbsd.c:1793:
+	printk("\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#884: FILE: drivers/mmc/wbsd.c:1798:
+static void __devexit wbsd_shutdown(struct device* dev, int pnp)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#884: FILE: drivers/mmc/wbsd.c:1798:
+static void __devexit wbsd_shutdown(struct device* dev, int pnp)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#907: FILE: drivers/mmc/wbsd.c:1810:
+	if (!pnp)
+	{

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#935: FILE: drivers/mmc/wbsd.c:1830:
+static int __devinit wbsd_probe(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#935: FILE: drivers/mmc/wbsd.c:1830:
+static int __devinit wbsd_probe(struct device* dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#940: FILE: drivers/mmc/wbsd.c:1835:
+static int __devexit wbsd_remove(struct device* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#940: FILE: drivers/mmc/wbsd.c:1835:
+static int __devexit wbsd_remove(struct device* dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#953: FILE: drivers/mmc/wbsd.c:1848:
+static int __devinit

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#954: FILE: drivers/mmc/wbsd.c:1849:
+wbsd_pnp_probe(struct pnp_dev * pnpdev, const struct pnp_device_id *dev_id)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#982: FILE: drivers/mmc/wbsd.c:1868:
+static void __devexit wbsd_pnp_remove(struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#982: FILE: drivers/mmc/wbsd.c:1868:
+static void __devexit wbsd_pnp_remove(struct pnp_dev * dev)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1035: FILE: drivers/mmc/wbsd.c:1946:
+	if (!nopnp)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/mmc/wbsd.c:1953:
+#endif /* CONFIG_PNP */^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1047: FILE: drivers/mmc/wbsd.c:1955:
+	if (nopnp)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: drivers/mmc/wbsd.c:1976:
+#endif /* CONFIG_PNP */^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1075: FILE: drivers/mmc/wbsd.c:1978:
+	if (nopnp)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: drivers/mmc/wbsd.c:1981:
+^I$

ERROR:POINTER_LOCATION: "foo*		bar" should be "foo *bar"
#1128: FILE: drivers/mmc/wbsd.h:146:
+	struct device*		dev;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1135: FILE: drivers/mmc/wbsd.h:153:
+#define WBSD_FCARD_PRESENT	(1<<0)		/* Card is present */
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1135: FILE: drivers/mmc/wbsd.h:153:
+#define WBSD_FCARD_PRESENT	(1<<0)		/* Card is present */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1136: FILE: drivers/mmc/wbsd.h:154:
+#define WBSD_FIGNORE_DETECT	(1<<1)		/* Ignore card detection */
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1136: FILE: drivers/mmc/wbsd.h:154:
+#define WBSD_FIGNORE_DETECT	(1<<1)		/* Ignore card detection */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: drivers/mmc/wbsd.h:155:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 38 warnings, 16 checks, 1066 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
