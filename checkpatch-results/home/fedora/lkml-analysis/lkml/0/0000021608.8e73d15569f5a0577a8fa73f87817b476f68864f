ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: fs/pipe.c:976:
+ ^Ierror = audit_fd_pair(fdr, fdw);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#52: FILE: fs/pipe.c:976:
+ ^Ierror = audit_fd_pair(fdr, fdw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: fs/pipe.c:976:
+ ^Ierror = audit_fd_pair(fdr, fdw);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: fs/pipe.c:977:
+ ^Iif (error < 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#53: FILE: fs/pipe.c:977:
+ ^Iif (error < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: fs/pipe.c:977:
+ ^Iif (error < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: fs/pipe.c:978:
+ ^I^Igoto err_fdw;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: fs/pipe.c:978:
+ ^I^Igoto err_fdw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: fs/pipe.c:978:
+ ^I^Igoto err_fdw;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/audit.h:386:
+extern int __audit_fd_pair(int fd1, int fd2);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: include/linux/audit.h:401:
 }
+static inline int audit_fd_pair(int fd1, int fd2)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: include/linux/audit.h:464:
+#define audit_fd_pair(n,a) ({ 0; })
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: kernel/auditsc.c:966:
+			struct audit_aux_data_fd_pair *axs = (void *)aux;
+			audit_log_format(ab, "fd0=%d fd1=%d", axs->fd[0], axs->fd[1]);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#150: FILE: kernel/auditsc.c:1832:
+	if (likely(!context)) {
+		return 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#155: FILE: kernel/auditsc.c:1837:
+	if (!ax) {
+		return -ENOMEM;
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#217: FILE: net/socket.c:434:
+	return (err);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021608.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 2 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021608.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
