ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#54: FILE: kernel/power/swsusp.c:372:
+struct highmem_page *highmem_copy = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: kernel/power/swsusp.c:390:
+			printk("highmem reserved page?!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#73: FILE: kernel/power/swsusp.c:391:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#75: FILE: kernel/power/swsusp.c:393:
+		if ((chunk_size=is_head_of_free_region(page))!=0) {
 		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#75: FILE: kernel/power/swsusp.c:393:
+		if ((chunk_size=is_head_of_free_region(page))!=0) {
 		                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#75: FILE: kernel/power/swsusp.c:393:
+		if ((chunk_size=is_head_of_free_region(page))!=0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*save)...) over kmalloc(sizeof(struct highmem_page)...)
#79: FILE: kernel/power/swsusp.c:397:
+		save = kmalloc(sizeof(struct highmem_page), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#81: FILE: kernel/power/swsusp.c:399:
+		if (!save)
+			panic("Not enough memory");

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: kernel/power/swsusp.c:418:
+		void *kaddr;
+		highmem_copy = save->next;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: kernel/power/swsusp.c:419:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: kernel/power/swsusp.c:479:
 
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: kernel/power/swsusp.c:560:
+	printk( "/critical section: Handling highmem" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#139: FILE: kernel/power/swsusp.c:560:
+	printk( "/critical section: Handling highmem" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: kernel/power/swsusp.c:560:
+	printk( "/critical section: Handling highmem" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: kernel/power/swsusp.c:563:
+	printk(", counting pages to copy" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#142: FILE: kernel/power/swsusp.c:563:
+	printk(", counting pages to copy" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: kernel/power/swsusp.c:673:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#152: FILE: kernel/power/swsusp.c:673:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#152: FILE: kernel/power/swsusp.c:673:
+	printk( "Restoring highmem\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: kernel/power/swsusp.c:675:
+	printk("done, devices\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293506.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 2 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293506.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
