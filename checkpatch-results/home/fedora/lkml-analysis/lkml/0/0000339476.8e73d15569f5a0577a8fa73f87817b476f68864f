CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#72: FILE: drivers/block/as-iosched.c:1355:
+	if (unlikely(rq->flags & (REQ_HARDBARRIER|REQ_SOFTBARRIER)))
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#76: FILE: drivers/block/as-iosched.c:1358:
+	switch (where) {
+		case ELEVATOR_INSERT_BACK:
[...]
+		case ELEVATOR_INSERT_FRONT:
[...]
+		case ELEVATOR_INSERT_SORT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#108: FILE: drivers/block/as-iosched.c:1372:
+			BUG_ON(!blk_fs_request(rq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: drivers/block/as-iosched.c:1376:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: drivers/block/as-iosched.c:1376:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);
 			                                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#112: FILE: drivers/block/as-iosched.c:1376:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#240: FILE: drivers/block/deadline-iosched.c:634:
+	switch (where) {
+		case ELEVATOR_INSERT_BACK:
[...]
+		case ELEVATOR_INSERT_FRONT:
[...]
+		case ELEVATOR_INSERT_SORT:
[...]
+		default:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: drivers/block/deadline-iosched.c:644:
+			BUG_ON(!blk_fs_request(rq));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: drivers/block/deadline-iosched.c:648:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: drivers/block/deadline-iosched.c:648:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);
 			                                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#268: FILE: drivers/block/deadline-iosched.c:648:
+			printk("%s: bad insert point %d\n", __FUNCTION__,where);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#409: FILE: drivers/block/ll_rw_blk.c:1683:
+static inline void add_request(request_queue_t * q, struct request * req)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#409: FILE: drivers/block/ll_rw_blk.c:1683:
+static inline void add_request(request_queue_t * q, struct request * req)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#500: FILE: drivers/block/noop-iosched.c:27:
+	if ((ret = elv_try_last_merge(q, bio)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#616: FILE: include/linux/elevator.h:65:
+extern int elv_merge(request_queue_t *, struct request **, struct bio *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#616: FILE: include/linux/elevator.h:65:
+extern int elv_merge(request_queue_t *, struct request **, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request **' should also have an identifier name
#616: FILE: include/linux/elevator.h:65:
+extern int elv_merge(request_queue_t *, struct request **, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#616: FILE: include/linux/elevator.h:65:
+extern int elv_merge(request_queue_t *, struct request **, struct bio *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 9 warnings, 2 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
