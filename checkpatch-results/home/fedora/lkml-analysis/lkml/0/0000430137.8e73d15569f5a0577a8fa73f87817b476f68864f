WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .14496-linux-2.5.38/arch/i386/vmlinux.lds.S .14496-linux-2.5.38.updated/arch/i386/vmlinux.lds.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: include/linux/module.h:65:
+ * 1.^ISo modinfo can show license info for users wanting to vet their setup $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".license") over __attribute__((section(".license")))
#83: FILE: include/linux/module.h:72:
+		__attribute__((section(".license"))) = license

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#96: FILE: include/linux/module.h:103:
+#define EXPORT_SYMBOL_GPL(sym)				\

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sym' may be better as '(sym)' to avoid precedence issues
#96: FILE: include/linux/module.h:103:
+#define EXPORT_SYMBOL_GPL(sym)				\
+	const struct kernel_symbol __ksymtab_##sym	\
+	__attribute__((section("__gpl.ksymtab")))	\
+	= { (unsigned long)&sym, #sym }

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__gpl.ksymtab") over __attribute__((section("__gpl.ksymtab")))
#98: FILE: include/linux/module.h:105:
+	__attribute__((section("__gpl.ksymtab")))	\

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#99: FILE: include/linux/module.h:106:
+	__attribute__((section("__gpl.ksymtab")))	\
+	= { (unsigned long)&sym, #sym }

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#145: FILE: kernel/module.c:43:
+extern const struct kernel_symbol __start_gpl_ksymtab[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#146: FILE: kernel/module.c:44:
+extern const struct kernel_symbol __stop_gpl_ksymtab[];

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#208: FILE: kernel/module.c:516:
+	return (strcmp(mod->license, "GPL") == 0
+		|| strcmp(mod->license, "GPL and additional rights") == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#209: FILE: kernel/module.c:517:
+		|| strcmp(mod->license, "GPL and additional rights") == 0
+		|| strcmp(mod->license, "Dual BSD/GPL") == 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#210: FILE: kernel/module.c:518:
+		|| strcmp(mod->license, "Dual BSD/GPL") == 0
+		|| strcmp(mod->license, "Dual MPL/GPL") == 0);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#248: FILE: kernel/module.c:814:
+struct section_locate
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#254: FILE: kernel/module.c:820:
+static int find_secs(Elf_Shdr *sechdrs,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#267: FILE: kernel/module.c:833:
+		const char *secname = secstrings + sechdrs[i].sh_name;
+		for (j = 0; j < num; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: kernel/module.c:845:
+			printk(KERN_ERR "module has no %s\n", locate[j].name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#296: FILE: kernel/module.c:862:
+	printk(KERN_WARNING "%s: module license `%s' taints kernel.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#302: FILE: kernel/module.c:868:
+/* Allocate and load the module: note that size of section 0 is always
+   zero, and we rely on this for optional sections. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: kernel/module.c:868:
+   zero, and we rely on this for optional sections. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#321: FILE: kernel/module.c:885:
+	struct section_locate loc[]
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },

ERROR:SPACING: space required after that ',' (ctx:VxO)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		                                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: kernel/module.c:885:
+		= { { ".symtab",&symidx,1 }, { ".modulename",&modnameidx,1 },
 		                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: kernel/module.c:886:
+		    { "__ksymtab",&exportidx,0 }, {"__gpl.ksymtab",&gplidx,0 },
 		                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: kernel/module.c:887:
+		    { ".setup.init",&setupidx,0 }, { "__ex_table",&exidx,0 },
 		                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: kernel/module.c:888:
+		    { ".obsparm",&obsparmidx,0}, { ".license",&licenseidx,0 },
 		                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: kernel/module.c:889:
+		    { ".versions",&versionidx,0}, { ".strtab",&stridx,1 } };
 		                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: kernel/module.c:920:
+	err = find_secs(sechdrs, secstrings, hdr->e_shnum,loc,ARRAY_SIZE(loc));
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: kernel/module.c:920:
+	err = find_secs(sechdrs, secstrings, hdr->e_shnum,loc,ARRAY_SIZE(loc));
 	                                                     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#414: FILE: kernel/module.c:953:
+	mod->symbols.owner = mod->gpl_symbols.owner = mod;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#497: FILE: kernel/module.c:1038:
+		printk(KERN_ERR "%s: No init function.\n", mod->name);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: kernel/module.c:1208:
+	kernel_gpl_symbols.num_syms = (__stop_gpl_ksymtab-__start_gpl_ksymtab);
 	                                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 12 warnings, 9 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
