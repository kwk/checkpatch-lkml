WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > > 	http://www.us.kernel.org/pub/linux/kernel/people/andrea/kernels/v2.4/2.4.2

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: include/asm-i386/highmem.h:59:
+extern void * FASTCALL(kmap_high(struct page *page, int nonblocking));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/asm-i386/highmem.h:59:
+extern void * FASTCALL(kmap_high(struct page *page, int nonblocking));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/sunrpc/xdr.h:140:
+extern void xdr_kunmap(struct xdr_buf *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xdr_buf *' should also have an identifier name
#119: FILE: include/linux/sunrpc/xdr.h:140:
+extern void xdr_kunmap(struct xdr_buf *, unsigned int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#119: FILE: include/linux/sunrpc/xdr.h:140:
+extern void xdr_kunmap(struct xdr_buf *, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#119: FILE: include/linux/sunrpc/xdr.h:140:
+extern void xdr_kunmap(struct xdr_buf *, unsigned int, int);

CHECK:BRACES: braces {} should be used on all arms of this statement
#220: FILE: net/sunrpc/xdr.c:245:
+	if (base >= xdr->head[0].iov_len)
[...]
-	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#223: FILE: net/sunrpc/xdr.c:247:
+	else {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#236: FILE: net/sunrpc/xdr.c:265:
+	/*
+	 * In case we could only do a partial xdr_kmap, all remaining iovecs

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#252: FILE: net/sunrpc/xdr.c:344:
+	do {
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#294: FILE: net/sunrpc/xprt.c:235:
+		msg.msg_flags   = MSG_DONTWAIT|MSG_NOSIGNAL;
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#297: FILE: net/sunrpc/xprt.c:238:
+		msg.msg_name	= (struct sockaddr *) &xprt->addr;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 7 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391765.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
