WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -X ignore_files -Nur linux-2.6.7.orig/drivers/pci/hotplug/Kconfig linux-2.6.7-apci/drivers/pci/hotplug/Kconfig

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#94: FILE: drivers/pci/hotplug/acpiphp.h:184:
+struct acpiphp_attention_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: drivers/pci/hotplug/acpiphp.h:190:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#109: FILE: drivers/pci/hotplug/acpiphp.h:232:
+extern int acpiphp_register_attention_info(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: drivers/pci/hotplug/acpiphp.h:232:
+extern int acpiphp_register_attention_info(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#110: FILE: drivers/pci/hotplug/acpiphp.h:233:
+		struct acpiphp_attention_info*info);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#111: FILE: drivers/pci/hotplug/acpiphp.h:234:
+extern int acpiphp_unregister_attention_info(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: drivers/pci/hotplug/acpiphp.h:234:
+extern int acpiphp_unregister_attention_info(

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#124: FILE: drivers/pci/hotplug/acpiphp_core.c:54:
+static struct acpiphp_attention_info *attention_info = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#134: FILE: drivers/pci/hotplug/acpiphp_core.c:68:
+EXPORT_SYMBOL_GPL(acpiphp_unregister_attention_info);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: drivers/pci/hotplug/acpiphp_core.c:74:
+static int get_attention_status (struct hotplug_slot *slot, u8 *value);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: drivers/pci/hotplug/acpiphp_core.c:91:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#156: FILE: drivers/pci/hotplug/acpiphp_core.c:93:
+/**
+    * acpiphp_register_attention_info - set attention LED callback

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/pci/hotplug/acpiphp_core.c:105:
+	if (info && info->owner && info->set_attn &&
+			info->get_attn && !attention_info) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: drivers/pci/hotplug/acpiphp_core.c:112:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/pci/hotplug/acpiphp_core.c:117:
+ * that manipulates the attention LED.  The pointer to the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/pci/hotplug/acpiphp_core.c:132:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/pci/hotplug/acpiphp_core.c:185:
+	if (attention_info && attention_info->set_attn &&
+			try_module_get(attention_info->owner)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: drivers/pci/hotplug/acpiphp_core.c:221:
+static int get_attention_status (struct hotplug_slot *hotplug_slot, u8 *value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#255: FILE: drivers/pci/hotplug/acpiphp_core.c:225:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/pci/hotplug/acpiphp_core.c:228:
+	if (attention_info && attention_info->get_attn &&
+			try_module_get(attention_info->owner)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: drivers/pci/hotplug/acpiphp_core.c:235:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#307: FILE: drivers/pci/hotplug/acpiphp_ibm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#327: FILE: drivers/pci/hotplug/acpiphp_ibm.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#328: FILE: drivers/pci/hotplug/acpiphp_ibm.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#338: FILE: drivers/pci/hotplug/acpiphp_ibm.c:32:
+#include <asm/uaccess.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#363: FILE: drivers/pci/hotplug/acpiphp_ibm.c:57:
+		printk(KERN_DEBUG "%s: " format,	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#364: FILE: drivers/pci/hotplug/acpiphp_ibm.c:58:
+				MY_NAME , ## arg);	\
 				        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: drivers/pci/hotplug/acpiphp_ibm.c:103:
+static int ibm_set_attention_status (struct hotplug_slot *slot, u8 status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: drivers/pci/hotplug/acpiphp_ibm.c:104:
+static int ibm_get_attention_status (struct hotplug_slot *slot, u8 *status);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#420: FILE: drivers/pci/hotplug/acpiphp_ibm.c:114:
+static acpi_handle ibm_acpi_handle = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/pci/hotplug/acpiphp_ibm.c:116:
+static struct acpiphp_attention_info ibm_attention_info = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#423: FILE: drivers/pci/hotplug/acpiphp_ibm.c:117:
+static struct acpiphp_attention_info ibm_attention_info = 
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: drivers/pci/hotplug/acpiphp_ibm.c:123:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: drivers/pci/hotplug/acpiphp_ibm.c:131:
+static int ibm_set_attention_status (struct hotplug_slot *slot, u8 status)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/pci/hotplug/acpiphp_ibm.c:134:
+^Iunion acpi_object args[2]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/pci/hotplug/acpiphp_ibm.c:136:
+^Iacpi_status stat; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#452: FILE: drivers/pci/hotplug/acpiphp_ibm.c:146:
+	dbg("%s: set slot %d attention status to %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/pci/hotplug/acpiphp_ibm.c:147:
+	dbg("%s: set slot %d attention status to %d\n", __FUNCTION__,
+			acpi_slot->sun, (status ? 1 : 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/pci/hotplug/acpiphp_ibm.c:170:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: drivers/pci/hotplug/acpiphp_ibm.c:176:
+static int ibm_get_attention_status (struct hotplug_slot *slot, u8 *status)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/pci/hotplug/acpiphp_ibm.c:198:
+	while (ind < size && (des->generic.type != 0x82 ||
+			des->slot.slot_id != acpi_slot->sun))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/pci/hotplug/acpiphp_ibm.c:209:
+	dbg("%s: get slot %d attention status is %d retval=%x\n",
+			__FUNCTION__, acpi_slot->sun, *status, retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#515: FILE: drivers/pci/hotplug/acpiphp_ibm.c:209:
+			__FUNCTION__, acpi_slot->sun, *status, retval);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#519: FILE: drivers/pci/hotplug/acpiphp_ibm.c:213:
+	if (table)
+		kfree(table);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#543: FILE: drivers/pci/hotplug/acpiphp_ibm.c:237:
+	dbg("%s: Received notification %02x\n", __FUNCTION__, event);

CHECK:BRACES: braces {} should be used on all arms of this statement
#545: FILE: drivers/pci/hotplug/acpiphp_ibm.c:239:
+	if (subevent == 0x80) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#546: FILE: drivers/pci/hotplug/acpiphp_ibm.c:240:
+		dbg("%s: generationg bus event\n", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: drivers/pci/hotplug/acpiphp_ibm.c:242:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/pci/hotplug/acpiphp_ibm.c:248:
+ * $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#575: FILE: drivers/pci/hotplug/acpiphp_ibm.c:269:
+		err("%s:  APCI evaluation failed\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#579: FILE: drivers/pci/hotplug/acpiphp_ibm.c:273:
+	package = (union acpi_object *) buffer.pointer;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'package->type != ACPI_TYPE_PACKAGE'
#580: FILE: drivers/pci/hotplug/acpiphp_ibm.c:274:
+	if(!(package) ||
+			(package->type != ACPI_TYPE_PACKAGE) ||
+			!(package->package.elements)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#580: FILE: drivers/pci/hotplug/acpiphp_ibm.c:274:
+	if(!(package) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: drivers/pci/hotplug/acpiphp_ibm.c:275:
+	if(!(package) ||
+			(package->type != ACPI_TYPE_PACKAGE) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#583: FILE: drivers/pci/hotplug/acpiphp_ibm.c:277:
+		err("%s:  Invalid APCI object\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#587: FILE: drivers/pci/hotplug/acpiphp_ibm.c:281:
+	for(size = 0, i = 0; i < package->package.count; i++) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#589: FILE: drivers/pci/hotplug/acpiphp_ibm.c:283:
+			err("%s:  Invalid APCI element %d\n", __FUNCTION__, i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bufp"
#595: FILE: drivers/pci/hotplug/acpiphp_ibm.c:289:
+	if (bufp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/pci/hotplug/acpiphp_ibm.c:294:
+	dbg("%s: element count: %i, ASL table size: %i, &table = 0x%x\n",
+			__FUNCTION__, package->package.count, size, (int)lbuf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#600: FILE: drivers/pci/hotplug/acpiphp_ibm.c:294:
+			__FUNCTION__, package->package.count, size, (int)lbuf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#611: FILE: drivers/pci/hotplug/acpiphp_ibm.c:305:
+	for (i=0; i<package->package.count; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#611: FILE: drivers/pci/hotplug/acpiphp_ibm.c:305:
+	for (i=0; i<package->package.count; i++) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/pci/hotplug/acpiphp_ibm.c:307:
+		memcpy(&lbuf[size],
+				package->package.elements[i].buffer.pointer,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/pci/hotplug/acpiphp_ibm.c:317:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/pci/hotplug/acpiphp_ibm.c:328:
+^Iacpi_status status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: drivers/pci/hotplug/acpiphp_ibm.c:329:
+^Istruct acpi_device_info info; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#643: FILE: drivers/pci/hotplug/acpiphp_ibm.c:337:
+		err("%s:  Failed to get device information", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#648: FILE: drivers/pci/hotplug/acpiphp_ibm.c:342:
+	if(info.current_status && (info.valid & ACPI_VALID_HID) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/pci/hotplug/acpiphp_ibm.c:343:
+	if(info.current_status && (info.valid & ACPI_VALID_HID) &&
+			(!strcmp(info.hardware_id.value, IBM_HARDWARE_ID1) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/pci/hotplug/acpiphp_ibm.c:346:
+		dbg("found hardware: %s, handle: %x\n", info.hardware_id.value,
+				(unsigned int)handle);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/pci/hotplug/acpiphp_ibm.c:349:
+^I^I * and returns this value to the caller of $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#670: FILE: drivers/pci/hotplug/acpiphp_ibm.c:364:
+	dbg("%s\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: drivers/pci/hotplug/acpiphp_ibm.c:367:
+	if (acpi_walk_namespace(ACPI_TYPE_DEVICE, ACPI_ROOT_OBJECT,
+			ACPI_UINT32_MAX, ibm_find_acpi_device,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#675: FILE: drivers/pci/hotplug/acpiphp_ibm.c:369:
+		err("%s: acpi_walk_namespace failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#679: FILE: drivers/pci/hotplug/acpiphp_ibm.c:373:
+	dbg("%s: found IBM aPCI device\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#681: FILE: drivers/pci/hotplug/acpiphp_ibm.c:375:
+		err("%s: acpi_bus_get_device failed\n", __FUNCTION__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#690: FILE: drivers/pci/hotplug/acpiphp_ibm.c:384:
+	status = acpi_install_notify_handler(

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#695: FILE: drivers/pci/hotplug/acpiphp_ibm.c:389:
+	if (ACPI_FAILURE(status))
+	{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/pci/hotplug/acpiphp_ibm.c:392:
+		err("%s:  Failed to register notification handler\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#698: FILE: drivers/pci/hotplug/acpiphp_ibm.c:392:
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#715: FILE: drivers/pci/hotplug/acpiphp_ibm.c:409:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#718: FILE: drivers/pci/hotplug/acpiphp_ibm.c:412:
+		err("%s: attention info deregistration failed", __FUNCTION__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#720: FILE: drivers/pci/hotplug/acpiphp_ibm.c:414:
+	   status = acpi_remove_notify_handler(

WARNING:TABSTOP: Statements should start on a tabstop
#724: FILE: drivers/pci/hotplug/acpiphp_ibm.c:418:
+	   if (ACPI_FAILURE(status))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 19)
#724: FILE: drivers/pci/hotplug/acpiphp_ibm.c:418:
+	   if (ACPI_FAILURE(status))
+		   err("%s:  Notification handler removal failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: drivers/pci/hotplug/acpiphp_ibm.c:420:
+		   err("%s:  Notification handler removal failed\n",
+				   __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#726: FILE: drivers/pci/hotplug/acpiphp_ibm.c:420:
+				   __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#732: FILE: drivers/pci/hotplug/acpiphp_ibm.c:426:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 33 warnings, 33 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
