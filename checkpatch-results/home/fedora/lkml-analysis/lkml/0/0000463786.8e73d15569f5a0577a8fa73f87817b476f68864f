WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -uNr linux-2.5.8.boot.footprint/Makefile linux-2.5.8.boot.build/Makefile

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: arch/i386/boot/Makefile:15:
+zImage: $(CONFIGURE) tools/build $(TOPDIR)/vmlinux realmode compressed/vmlinux $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/i386/boot/Makefile:18:
+bzImage: $(CONFIGURE) tools/build $(TOPDIR)/vmlinux brealmode compressed/bvmlinux $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#195: FILE: arch/i386/boot/tools/build.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#213: FILE: arch/i386/boot/tools/build.c:17:
+ *    - setup: 8086 machine code, sets up system parm
                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Rewriten' may be misspelled - perhaps 'Rewritten'?
#226: FILE: arch/i386/boot/tools/build.c:30:
+ * Rewriten by Eric Biederman to remove the need for objcopy and
    ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: arch/i386/boot/tools/build.c:75:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#276: FILE: arch/i386/boot/tools/build.c:90:
+struct file_seg
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: arch/i386/boot/tools/build.c:106:
+#define RAMDISK_IMAGE_START_MASK  ^I0x07FF$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: arch/i386/boot/tools/build.c:108:
+#define RAMDISK_LOAD_FLAG^I^I0x4000^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#355: FILE: arch/i386/boot/tools/build.c:237:
 }
+static size_t compute_unzip_overhang(struct file_seg *iseg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: arch/i386/boot/tools/build.c:258:
+		die("Uncompressed kernel sizes(%d,%d) do not match!\n",
+			result_size, iseg[IKERN].data_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: arch/i386/boot/tools/build.c:271:
+static void die(const char * str, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: arch/i386/boot/tools/build.c:283:
+	int result;
+	result = open(pathname, flags, mode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: arch/i386/boot/tools/build.c:285:
+^I^Idie("Cannot open %s : %s", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: arch/i386/boot/tools/build.c:286:
+		die("Cannot open %s : %s", 
+			pathname,

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: arch/i386/boot/tools/build.c:295:
+	ssize_t result;
+	result = read(fd, buf, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: arch/i386/boot/tools/build.c:298:
+^I^I^Icount, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: arch/i386/boot/tools/build.c:298:
+		die("Cannot read %d bytes from %s: %s",
+			count, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: arch/i386/boot/tools/build.c:307:
+	ssize_t result;
+	result = write(fd, buf, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: arch/i386/boot/tools/build.c:310:
+^I^I^Icount, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: arch/i386/boot/tools/build.c:310:
+		die("Cannot write %d bytes from %s: %s",
+			count, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#470: FILE: arch/i386/boot/tools/build.c:319:
+	off_t result;
+	result = lseek(fd, offset, whence);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: arch/i386/boot/tools/build.c:322:
+		die("lseek failed on %s: %s",
+			pathname, strerror(errno));

WARNING:LINE_SPACING: Missing a blank line after declarations
#481: FILE: arch/i386/boot/tools/build.c:330:
+	void *result;
+	result = malloc(size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: arch/i386/boot/tools/build.c:333:
+		die("malloc of %d bytes failed: %s",
+			size, strerror(errno));

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#489: FILE: arch/i386/boot/tools/build.c:338:
+static void check_ehdr(Elf32_Ehdr *ehdr, char *name)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#492: FILE: arch/i386/boot/tools/build.c:341:
+	if (memcmp(ehdr->e_ident, ELFMAG, SELFMAG) != 0) {
+		die("%s is not an ELF binary", name);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#495: FILE: arch/i386/boot/tools/build.c:344:
+	if (ehdr->e_ident[EI_CLASS] != ELFCLASS32) {
+		die("%s is not a 32bit ELF object", name);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#498: FILE: arch/i386/boot/tools/build.c:347:
+	if (ehdr->e_ident[EI_DATA] != ELFDATA2LSB) {
+		die("%s does not have little endian data", name);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr->e_ident[EI_VERSION] != EV_CURRENT'
#501: FILE: arch/i386/boot/tools/build.c:350:
+	if ((ehdr->e_ident[EI_VERSION] != EV_CURRENT) ||
+		ehdr->e_version != EV_CURRENT) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: arch/i386/boot/tools/build.c:351:
+	if ((ehdr->e_ident[EI_VERSION] != EV_CURRENT) ||
+		ehdr->e_version != EV_CURRENT) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#505: FILE: arch/i386/boot/tools/build.c:354:
+	if (ehdr->e_type != ET_EXEC) {
+		die("%s is not an ELF executable", name);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#508: FILE: arch/i386/boot/tools/build.c:357:
+	if (ehdr->e_machine != EM_386) {
+		die("%s is not for x86", name);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr->e_phoff == 0'
#511: FILE: arch/i386/boot/tools/build.c:360:
+	if ((ehdr->e_phoff == 0) || (ehdr->e_phnum == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr->e_phnum == 0'
#511: FILE: arch/i386/boot/tools/build.c:360:
+	if ((ehdr->e_phoff == 0) || (ehdr->e_phnum == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#511: FILE: arch/i386/boot/tools/build.c:360:
+	if ((ehdr->e_phoff == 0) || (ehdr->e_phnum == 0)) {
+		die("%s has no program header", name);
+	}

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#514: FILE: arch/i386/boot/tools/build.c:363:
+	if (ehdr->e_phentsize != sizeof(Elf32_Phdr)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#514: FILE: arch/i386/boot/tools/build.c:363:
+	if (ehdr->e_phentsize != sizeof(Elf32_Phdr)) {
+		die("%s has invalid program header size", name);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: arch/i386/boot/tools/build.c:368:
+static Elf32_Phdr *read_sorted_phdr(char *name, int fd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: arch/i386/boot/tools/build.c:369:
+static Elf32_Phdr *read_sorted_phdr(char *name, int fd, 
+	Elf32_Ehdr *ehdr, struct file_seg *seg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#525: FILE: arch/i386/boot/tools/build.c:374:
+	size_t phdr_size;
+	seg->mem_addr = 0;

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: arch/i386/boot/tools/build.c:389:
+	for(i = 0; i < ehdr->e_phnum; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#542: FILE: arch/i386/boot/tools/build.c:391:
+		Elf32_Phdr *least;
+		least = phdr +i;

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#542: FILE: arch/i386/boot/tools/build.c:391:
+		least = phdr +i;
 		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#543: FILE: arch/i386/boot/tools/build.c:392:
+		for(j = i+1; j < ehdr->e_phnum; j++) {
 		         ^

ERROR:SPACING: space required before the open parenthesis '('
#543: FILE: arch/i386/boot/tools/build.c:392:
+		for(j = i+1; j < ehdr->e_phnum; j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: arch/i386/boot/tools/build.c:393:
+			if (phdr[j].p_type != PT_LOAD) {
+				continue;
 			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: arch/i386/boot/tools/build.c:396:
+^I^I^Iif ((least->p_type != PT_LOAD) || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'least->p_type != PT_LOAD'
#553: FILE: arch/i386/boot/tools/build.c:396:
+			if ((least->p_type != PT_LOAD) || 
+				(phdr[j].p_paddr < least->p_paddr)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phdr[j].p_paddr < least->p_paddr'
#553: FILE: arch/i386/boot/tools/build.c:396:
+			if ((least->p_type != PT_LOAD) || 
+				(phdr[j].p_paddr < least->p_paddr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: arch/i386/boot/tools/build.c:397:
+			if ((least->p_type != PT_LOAD) || 
+				(phdr[j].p_paddr < least->p_paddr)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#566: FILE: arch/i386/boot/tools/build.c:401:
+		if (least != phdr +i) {
 		                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: arch/i386/boot/tools/build.c:403:
+			Elf32_Phdr tmp;
+			tmp = phdr[i];

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: arch/i386/boot/tools/build.c:410:
+	for(i = 0; i < ehdr->e_phnum; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#578: FILE: arch/i386/boot/tools/build.c:413:
+		phigh = phdr +i;
 		             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#582: FILE: arch/i386/boot/tools/build.c:417:
+		size_t start, middle, end;
+		start = plow->p_paddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: arch/i386/boot/tools/build.c:425:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#592: FILE: arch/i386/boot/tools/build.c:426:
+	
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#662: FILE: arch/i386/boot/tools/build.c:433:
+	Elf32_Phdr *phdr;
+	fd = checked_open(name, O_RDONLY, 0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#667: FILE: arch/i386/boot/tools/build.c:438:
+	if (sizes->mem_addr != pstart) {
+		die("Low PHDR in %s not at 0x%08x", name, pstart);
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#701: FILE: arch/i386/boot/tools/build.c:461:
+	if (seg->mem_addr != pstart) {
+		die("Low PHDR in %s not at 0x%08x", name, pstart);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: arch/i386/boot/tools/build.c:464:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#708: FILE: arch/i386/boot/tools/build.c:468:
+	for(i = 0; i < ehdr.e_phnum; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#710: FILE: arch/i386/boot/tools/build.c:470:
+		size_t size;
+		if (phdr[i].p_type != PT_LOAD) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#710: FILE: arch/i386/boot/tools/build.c:470:
+		if (phdr[i].p_type != PT_LOAD) {
+			break;
+		}

WARNING:RETURN_VOID: void function return statements are not generally useful
#729: FILE: arch/i386/boot/tools/build.c:488:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#754: FILE: arch/i386/boot/tools/build.c:501:
+static void update_image(

WARNING:LINE_SPACING: Missing a blank line after declarations
#759: FILE: arch/i386/boot/tools/build.c:506:
+	struct zkernel_header *zhdr = info->zhdr;
+	info->setup_sectors &= 0xff;

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#781: FILE: arch/i386/boot/tools/build.c:528:
+int main(int argc, char ** argv)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#805: FILE: arch/i386/boot/tools/build.c:552:
+	if (argc != 5) {
+		usage();
+	}

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#826: FILE: arch/i386/boot/tools/build.c:573:
+	zkernel_base = info.is_big_kernel? HIGH_BASE : LOW_BASE;
 	                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/i386/boot/tools/build.c:577:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: arch/i386/boot/tools/build.c:588:
+^Ioseg[OKERN].mem_size = oseg[OKERN].data_size + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: arch/i386/boot/tools/build.c:589:
+^I^I(le32_to_cpu(info.zhdr->unzip_memsz) - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: arch/i386/boot/tools/build.c:602:
+^I^Ikern_end = (kern_end + 15) & ~15; $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#856: FILE: arch/i386/boot/tools/build.c:603:
+		if (kern_end > oseg[OREAL].mem_addr) {
+			die("System is to big.  Try using bzImage or modules");
+		}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: arch/i386/boot/tools/build.c:610:
+^I^Ioseg[OBSS1].mem_size = ^I(DEF_SYSSEG << 4) - oseg[OBSS1].mem_addr;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#871: FILE: arch/i386/boot/tools/build.c:618:
+		if (kern_end > oseg[OREAL].mem_addr) {
+			die("System is to big.  Try using bzImage or modules");
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: arch/i386/boot/tools/build.c:621:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: arch/i386/boot/tools/build.c:629:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#885: FILE: arch/i386/boot/tools/build.c:632:
+		if (unzip_bufsz > oseg[OKERN].mem_size) {
+			oseg[OKERN].mem_size = unzip_bufsz;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: arch/i386/boot/tools/build.c:637:
+^I^Ioseg[OREAL].mem_size += $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: arch/i386/boot/tools/build.c:638:
+^I^I^I((le32_to_cpu(info.zhdr->unzip_memsz) - $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: arch/i386/boot/tools/build.c:643:
+			die("Kernel requires %d bytes low memory %d available!\n",
+				oseg[OREAL].mem_size,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#900: FILE: arch/i386/boot/tools/build.c:647:
+		if (iseg[IKERN].mem_size > oseg[OKERN].mem_size) {
+			oseg[OKERN].mem_size = iseg[IKERN].mem_size;
+		}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#906: FILE: arch/i386/boot/tools/build.c:653:
+	info.setup_sectors = (oseg[OREAL].data_size - 512 + 511)/512;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#910: FILE: arch/i386/boot/tools/build.c:657:
+	oseg[OKERN].file_offset = oseg[OREAL].file_offset + (info.setup_sectors +1)*512;
 	                                                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#910: FILE: arch/i386/boot/tools/build.c:657:
+	oseg[OKERN].file_offset = oseg[OREAL].file_offset + (info.setup_sectors +1)*512;
 	                                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: arch/i386/boot/tools/build.c:660:
+^Iinfo.entry32 = oseg[OREAL].mem_addr + $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#918: FILE: arch/i386/boot/tools/build.c:665:
+	info.sys_size = (oseg[OKERN].data_size + 15)/16;
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/i386/boot/tools/build.c:666:
+^Iif ((iseg[IKERN].mem_addr + iseg[IKERN].mem_size) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: arch/i386/boot/tools/build.c:671:
+^I^Ifprintf(stderr, "warning: kernel is too big for standalone boot " $

WARNING:SPLIT_STRING: quoted string split across lines
#925: FILE: arch/i386/boot/tools/build.c:672:
+		fprintf(stderr, "warning: kernel is too big for standalone boot " 
+			"from floppy\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#927: FILE: arch/i386/boot/tools/build.c:674:
+	printf("System is %d KB\n", (info.sys_size*16)/1024);
 	                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#927: FILE: arch/i386/boot/tools/build.c:674:
+	printf("System is %d KB\n", (info.sys_size*16)/1024);
 	                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: arch/i386/boot/tools/build.c:676:
+^Iprintf("[real] base: %08x filesz %5d B  memsz= %5d KB\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: arch/i386/boot/tools/build.c:677:
+	printf("[real] base: %08x filesz %5d B  memsz= %5d KB\n", 
+		oseg[OREAL].mem_addr,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#932: FILE: arch/i386/boot/tools/build.c:679:
+		oseg[OREAL].mem_size/1024);
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: arch/i386/boot/tools/build.c:680:
+^Iprintf("[kern] base: %08x filesz %5d KB memsz= %5d KB\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: arch/i386/boot/tools/build.c:681:
+^I^Ioseg[OKERN].mem_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: arch/i386/boot/tools/build.c:681:
+	printf("[kern] base: %08x filesz %5d KB memsz= %5d KB\n", 
+		oseg[OKERN].mem_addr, 

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#935: FILE: arch/i386/boot/tools/build.c:682:
+		oseg[OKERN].data_size/1024,
 		                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: arch/i386/boot/tools/build.c:683:
+^I^Ioseg[OKERN].mem_size/1024); $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#936: FILE: arch/i386/boot/tools/build.c:683:
+		oseg[OKERN].mem_size/1024); 
 		                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: arch/i386/boot/tools/build.c:685:
+	printf("[bss1] base: %08x filesz %5d KB memsz= %5d KB\n",
+		oseg[OBSS1].mem_addr,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#939: FILE: arch/i386/boot/tools/build.c:686:
+		oseg[OBSS1].data_size/1024,
 		                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#940: FILE: arch/i386/boot/tools/build.c:687:
+		oseg[OBSS1].mem_size/1024);
 		                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#942: FILE: arch/i386/boot/tools/build.c:689:
+	printf("[bss2] base: %08x filesz %5d KB memsz= %5d KB\n",
+		oseg[OBSS2].mem_addr,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#943: FILE: arch/i386/boot/tools/build.c:690:
+		oseg[OBSS2].data_size/1024,
 		                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#944: FILE: arch/i386/boot/tools/build.c:691:
+		oseg[OBSS2].mem_size/1024);
 		                    ^

ERROR:SPACING: space required before the open parenthesis '('
#951: FILE: arch/i386/boot/tools/build.c:698:
+	for(i = 0; i < OSEGS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: include/asm-i386/boot_param.h:91:
+ ^I__u32 kern_base;^I^I^I/* 0x240 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#985: FILE: include/asm-i386/boot_param.h:91:
+ ^I__u32 kern_base;^I^I^I/* 0x240 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: include/asm-i386/boot_param.h:91:
+ ^I__u32 kern_base;^I^I^I/* 0x240 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: include/asm-i386/boot_param.h:92:
+ ^I__u32 kern_memsz;^I^I^I/* 0x244 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#986: FILE: include/asm-i386/boot_param.h:92:
+ ^I__u32 kern_memsz;^I^I^I/* 0x244 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: include/asm-i386/boot_param.h:92:
+ ^I__u32 kern_memsz;^I^I^I/* 0x244 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: include/asm-i386/boot_param.h:93:
+ ^I__u32 kern_filesz;^I^I^I/* 0x248 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#987: FILE: include/asm-i386/boot_param.h:93:
+ ^I__u32 kern_filesz;^I^I^I/* 0x248 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: include/asm-i386/boot_param.h:93:
+ ^I__u32 kern_filesz;^I^I^I/* 0x248 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: include/asm-i386/boot_param.h:94:
+ ^I__u8  reserved15[0x2d0 - 0x24c];^I/* 0x24c */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#988: FILE: include/asm-i386/boot_param.h:94:
+ ^I__u8  reserved15[0x2d0 - 0x24c];^I/* 0x24c */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: include/asm-i386/boot_param.h:94:
+ ^I__u8  reserved15[0x2d0 - 0x24c];^I/* 0x24c */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 44 warnings, 42 checks, 917 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
