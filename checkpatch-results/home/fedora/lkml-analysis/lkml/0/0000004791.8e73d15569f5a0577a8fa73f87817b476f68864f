WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#define EIO_ERROR ((void *) (return_EIO))

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#define EIO_ERROR_INT ((void *) (return_EIO_int))

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
actual op signature.  Since so few ops share a signature, I just went ahead 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: fs/bad_inode.h:1:
+/* fs/bad_inode.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: fs/bad_inode.h:1:
+/* fs/bad_inode.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: fs/bad_inode.h:16:
+static inline loff_t bad_file_llseek(struct file *file, loff_t offset,
+			int origin)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#107: FILE: fs/bad_inode.h:21:
+static inline ssize_t bad_file_read(struct file *filp, char __user *buf,
                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: fs/bad_inode.h:22:
+static inline ssize_t bad_file_read(struct file *filp, char __user *buf,
+			size_t size, loff_t *ppos)

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/bad_inode.h:24:
+        return -EIO;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/bad_inode.h:24:
+        return -EIO;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#113: FILE: fs/bad_inode.h:27:
+static inline ssize_t bad_file_write(struct file *filp, const char __user *buf,
                                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: fs/bad_inode.h:28:
+static inline ssize_t bad_file_write(struct file *filp, const char __user *buf,
+		size_t siz, loff_t *ppos)

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: fs/bad_inode.h:30:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/bad_inode.h:30:
+        return -EIO;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/bad_inode.h:34:
+static inline ssize_t bad_file_aio_read(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: fs/bad_inode.h:40:
+static inline ssize_t bad_file_aio_write(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#131: FILE: fs/bad_inode.h:45:
+static inline int bad_file_readdir(struct file * filp, void * dirent,
                                                  ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/bad_inode.h:45:
+static inline int bad_file_readdir(struct file * filp, void * dirent,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/bad_inode.h:45:
+static inline int bad_file_readdir(struct file * filp, void * dirent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: fs/bad_inode.h:46:
+static inline int bad_file_readdir(struct file * filp, void * dirent,
+			filldir_t filldir)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#137: FILE: fs/bad_inode.h:51:
+static inline unsigned int bad_file_poll(struct file *filp, poll_table *wait)
                                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#142: FILE: fs/bad_inode.h:56:
+static inline int bad_file_ioctl (struct inode * inode, struct file * filp,
                                                                       ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/bad_inode.h:56:
+static inline int bad_file_ioctl (struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/bad_inode.h:56:
+static inline int bad_file_ioctl (struct inode * inode, struct file * filp,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: fs/bad_inode.h:56:
+static inline int bad_file_ioctl (struct inode * inode, struct file * filp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/bad_inode.h:57:
+static inline int bad_file_ioctl (struct inode * inode, struct file * filp,
+			unsigned int cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: fs/bad_inode.h:62:
+static inline long bad_file_unlocked_ioctl(struct file *file, unsigned cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: fs/bad_inode.h:63:
+static inline long bad_file_unlocked_ioctl(struct file *file, unsigned cmd,
+			unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: fs/bad_inode.h:69:
+static inline long bad_file_compat_ioctl(struct file *file, unsigned int cmd,
+			unsigned long arg)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: fs/bad_inode.h:74:
+static inline int bad_file_mmap(struct file * file, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: fs/bad_inode.h:74:
+static inline int bad_file_mmap(struct file * file, struct vm_area_struct * vma)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#165: FILE: fs/bad_inode.h:79:
+static inline int bad_file_open(struct inode * inode, struct file * filp)
                                                                     ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: fs/bad_inode.h:79:
+static inline int bad_file_open(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: fs/bad_inode.h:79:
+static inline int bad_file_open(struct inode * inode, struct file * filp)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#175: FILE: fs/bad_inode.h:89:
+static inline int bad_file_release(struct inode * inode, struct file * filp)
                                                                        ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/bad_inode.h:89:
+static inline int bad_file_release(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/bad_inode.h:89:
+static inline int bad_file_release(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: fs/bad_inode.h:94:
+static inline int bad_file_fsync(struct file * file, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/bad_inode.h:95:
+static inline int bad_file_fsync(struct file * file, struct dentry *dentry,
+			int datasync)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#191: FILE: fs/bad_inode.h:105:
+static inline int bad_file_fasync(int fd, struct file *filp, int on)
                                                        ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/bad_inode.h:111:
+static inline int bad_file_lock(struct file *file, int cmd,
+			struct file_lock *fl)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: fs/bad_inode.h:117:
+static inline ssize_t bad_file_sendfile(struct file *in_file, loff_t *ppos,
+			size_t count, read_actor_t actor, void *target)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: fs/bad_inode.h:123:
+static inline ssize_t bad_file_sendpage(struct file *file, struct page *page,
+			int off, size_t len, loff_t *pos, int more)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: fs/bad_inode.h:129:
+static inline unsigned long bad_file_get_unmapped_area(struct file *file,
+				unsigned long addr, unsigned long len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/bad_inode.h:140:
+static inline int bad_file_dir_notify(struct file * file, unsigned long arg)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#231: FILE: fs/bad_inode.h:145:
+static inline int bad_file_flock(struct file *filp, int cmd,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: fs/bad_inode.h:146:
+static inline int bad_file_flock(struct file *filp, int cmd,
+			struct file_lock *fl)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: fs/bad_inode.h:152:
+static inline ssize_t bad_file_splice_write(struct pipe_inode_info *pipe,
+			struct file *out, loff_t *ppos, size_t len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: fs/bad_inode.h:159:
+static inline ssize_t bad_file_splice_read(struct file *in, loff_t *ppos,
+			struct pipe_inode_info *pipe, size_t len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: fs/bad_inode.h:167:
+static inline int bad_inode_create (struct inode * dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: fs/bad_inode.h:167:
+static inline int bad_inode_create (struct inode * dir,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#254: FILE: fs/bad_inode.h:168:
+			struct dentry * dentry, int mode, struct nameidata *nd)
 			                                                    ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: fs/bad_inode.h:168:
+static inline int bad_inode_create (struct inode * dir,
+			struct dentry * dentry, int mode, struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: fs/bad_inode.h:168:
+			struct dentry * dentry, int mode, struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: fs/bad_inode.h:173:
+static inline struct dentry *bad_inode_lookup(struct inode * dir,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#260: FILE: fs/bad_inode.h:174:
+				struct dentry *dentry, struct nameidata *nd)
 				                                         ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: fs/bad_inode.h:174:
+static inline struct dentry *bad_inode_lookup(struct inode * dir,
+				struct dentry *dentry, struct nameidata *nd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: fs/bad_inode.h:179:
+static inline int bad_inode_link (struct dentry * old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: fs/bad_inode.h:179:
+static inline int bad_inode_link (struct dentry * old_dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: fs/bad_inode.h:180:
+static inline int bad_inode_link (struct dentry * old_dentry,
+			struct inode * dir, struct dentry *dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: fs/bad_inode.h:180:
+			struct inode * dir, struct dentry *dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: fs/bad_inode.h:185:
+static inline int bad_inode_unlink(struct inode * dir, struct dentry *dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: fs/bad_inode.h:190:
+static inline int bad_inode_symlink (struct inode * dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: fs/bad_inode.h:190:
+static inline int bad_inode_symlink (struct inode * dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: fs/bad_inode.h:191:
+static inline int bad_inode_symlink (struct inode * dir,
+			struct dentry *dentry, const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: fs/bad_inode.h:191:
+			struct dentry *dentry, const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: fs/bad_inode.h:196:
+static inline int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: fs/bad_inode.h:196:
+static inline int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: fs/bad_inode.h:197:
+static inline int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,
+			int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: fs/bad_inode.h:202:
+static inline int bad_inode_rmdir (struct inode * dir, struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: fs/bad_inode.h:202:
+static inline int bad_inode_rmdir (struct inode * dir, struct dentry *dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: fs/bad_inode.h:207:
+static inline int bad_inode_mknod (struct inode * dir, struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: fs/bad_inode.h:207:
+static inline int bad_inode_mknod (struct inode * dir, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: fs/bad_inode.h:208:
+static inline int bad_inode_mknod (struct inode * dir, struct dentry *dentry,
+			int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: fs/bad_inode.h:213:
+static inline int bad_inode_rename (struct inode * old_dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: fs/bad_inode.h:213:
+static inline int bad_inode_rename (struct inode * old_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: fs/bad_inode.h:214:
+static inline int bad_inode_rename (struct inode * old_dir,
+			struct dentry *old_dentry, struct inode * new_dir,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: fs/bad_inode.h:214:
+			struct dentry *old_dentry, struct inode * new_dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: fs/bad_inode.h:221:
+static inline int bad_inode_readlink(struct dentry *dentry,
+			char __user *buffer, int buflen)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#313: FILE: fs/bad_inode.h:227:
+			struct nameidata *nd)
 			                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: fs/bad_inode.h:227:
+static inline int bad_inode_permission(struct inode *inode, int mask,
+			struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: fs/bad_inode.h:233:
+static inline int bad_inode_getattr(struct vfsmount *mnt, struct dentry *dentry,
+			struct kstat *stat)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: fs/bad_inode.h:239:
+static inline int bad_inode_setattr(struct dentry *direntry,
+			struct iattr *attrs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: fs/bad_inode.h:245:
+static inline int bad_inode_setxattr(struct dentry *dentry, const char *name,
+		const void *value, size_t size, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: fs/bad_inode.h:251:
+static inline ssize_t bad_inode_getxattr(struct dentry *dentry,
+			const char *name, void *buffer, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: fs/bad_inode.h:257:
+static inline ssize_t bad_inode_listxattr(struct dentry *dentry, char *buffer,
+		size_t buffer_size)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 27 warnings, 31 checks, 373 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
