WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#40: 
> > call code then just get the parms from the restart_block.
                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#81: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.50-bk4-kb/arch/i386/kernel/entry.S linux/arch/i386/kernel/entry.S

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#97: FILE: arch/i386/kernel/signal.c:508:
 		switch (regs->eax) {
[...]
+		        case -ERESTART_RESTARTBLOCK:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/i386/kernel/signal.c:510:
+^I^I        case -ERESTART_RESTARTBLOCK:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open brace '{'
#109: FILE: arch/i386/kernel/signal.c:595:
+		if (regs->eax == -ERESTART_RESTARTBLOCK){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#122: FILE: include/asm-i386/thread_info.h:24:
+	int (*fun)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#187: FILE: kernel/signal.c:1355:
+sys_restart_syscall( void *parm)
                            ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#187: FILE: kernel/signal.c:1355:
+sys_restart_syscall( void *parm)

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#189: FILE: kernel/signal.c:1357:
+	if ( ! current_thread_info()->restart_block.fun){
 	     ^

ERROR:SPACING: space required before the open brace '{'
#189: FILE: kernel/signal.c:1357:
+	if ( ! current_thread_info()->restart_block.fun){

ERROR:SPACING: space prohibited after that open parenthesis '('
#189: FILE: kernel/signal.c:1357:
+	if ( ! current_thread_info()->restart_block.fun){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#189: FILE: kernel/signal.c:1357:
+	if ( ! current_thread_info()->restart_block.fun){
+		return current_thread_info()->restart_block.fun(&parm);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#190: FILE: kernel/signal.c:1358:
+		return current_thread_info()->restart_block.fun(&parm);
 		                                                 ^^^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#192: FILE: kernel/signal.c:1360:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/timer.c:1024:
+^Istruct timespec *rqtp; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#210: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);
                                                                 ^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#210: FILE: kernel/timer.c:1028:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms);

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: kernel/timer.c:1037:
+		if(copy_from_user(&t, rqtp, sizeof(struct timespec)))

ERROR:SPACING: space required before the open brace '{'
#232: FILE: kernel/timer.c:1044:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#232: FILE: kernel/timer.c:1044:
+	}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: kernel/timer.c:1046:
+^I^Iif( restart_block->fun != $

ERROR:SPACING: space prohibited after that open parenthesis '('
#234: FILE: kernel/timer.c:1046:
+		if( restart_block->fun != 

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: kernel/timer.c:1046:
+		if( restart_block->fun != 

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#236: FILE: kernel/timer.c:1048:
+		    ! restart_block->arg0){
 		    ^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#260: FILE: kernel/timer.c:1073:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)
                                                                 ^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: kernel/timer.c:1073:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)

ERROR:SPACING: space prohibited after that open parenthesis '('
#260: FILE: kernel/timer.c:1073:
+asmlinkage long sys_nanosleep_restart( struct nano_sleep_call * parms)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 9 warnings, 0 checks, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
