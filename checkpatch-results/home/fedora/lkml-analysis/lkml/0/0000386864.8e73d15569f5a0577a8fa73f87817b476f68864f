WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#78: 
diff -ruN 2.5.64-2003030918-32bit.1/fs/compat.c 2.5.64-2003030918-32bit.2/fs/compat.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: fs/compat.c:184:
+asmlinkage long compat_sys_fcntl64(unsigned int fd, unsigned int cmd,
+		unsigned long arg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_GETLK'
#191: FILE: fs/compat.c:201:
+		if ((cmd == F_GETLK) && (ret == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#191: FILE: fs/compat.c:201:
+		if ((cmd == F_GETLK) && (ret == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f.l_start >= COMPAT_OFF_T_MAX'
#192: FILE: fs/compat.c:202:
+			if ((f.l_start >= COMPAT_OFF_T_MAX) ||
+			    ((f.l_start + f.l_len) >= COMPAT_OFF_T_MAX))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/compat.c:207:
+				ret = put_compat_flock(&f,
+						(struct compat_flock *)arg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_GETLK64'
#214: FILE: fs/compat.c:224:
+		if ((cmd == F_GETLK64) && (ret == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#214: FILE: fs/compat.c:224:
+		if ((cmd == F_GETLK64) && (ret == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'f.l_start >= COMPAT_LOFF_T_MAX'
#215: FILE: fs/compat.c:225:
+			if ((f.l_start >= COMPAT_LOFF_T_MAX) ||
+			    ((f.l_start + f.l_len) >= COMPAT_LOFF_T_MAX))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/compat.c:230:
+				ret = put_compat_flock64(&f,
+						(struct compat_flock64 *)arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: fs/compat.c:242:
+asmlinkage long compat_sys_fcntl(unsigned int fd, unsigned int cmd,
+		unsigned long arg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_GETLK64'
#234: FILE: fs/compat.c:244:
+	if ((cmd == F_GETLK64) || (cmd == F_SETLK64) || (cmd == F_SETLKW64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_SETLK64'
#234: FILE: fs/compat.c:244:
+	if ((cmd == F_GETLK64) || (cmd == F_SETLK64) || (cmd == F_SETLKW64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_SETLKW64'
#234: FILE: fs/compat.c:244:
+	if ((cmd == F_GETLK64) || (cmd == F_SETLK64) || (cmd == F_SETLKW64))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 13 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
