WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
diff -pu -urp linux-2.6.14/arch/i386/kernel/setup.c work-2.6.14/arch/i386/kernel/setup.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: arch/i386/kernel/setup.c:1438:
+^I^IBUG_ON(a->replacementlen > a->instrlen); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#66: FILE: arch/i386/kernel/setup.c:1438:
+		BUG_ON(a->replacementlen > a->instrlen); 

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: arch/i386/kernel/setup.c:1453:
+void apply_alternatives_smp(void *start, void *end) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/kernel/setup.c:1454:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/i386/kernel/setup.c:1455:
+^Istruct alt_instr *a; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/i386/kernel/setup.c:1457:
+^Ifor (a = start; (void *)a < end; a++) { $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#82: FILE: arch/i386/kernel/setup.c:1458:
+		if (X86_FEATURE_UP != a->cpuid)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: arch/i386/kernel/setup.c:1464:
+} $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#100: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#100: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		     ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: include/asm-i386/system.h:333:
+#define alternative_smp(smpinstr, upinstr, input) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: include/asm-i386/system.h:333:
+#define alternative_smp(smpinstr, upinstr, input) 	\
+	asm volatile ("661:\n\t" smpinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" upinstr "\n"     /* replacement */    \
+		      "664:\n\t" smpinstr "\n"    /* original again */ \
+		      ".previous" :: "i" (X86_FEATURE_UP), ##input)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'smpinstr' - possible side-effects?
#113: FILE: include/asm-i386/system.h:333:
+#define alternative_smp(smpinstr, upinstr, input) 	\
+	asm volatile ("661:\n\t" smpinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" upinstr "\n"     /* replacement */    \
+		      "664:\n\t" smpinstr "\n"    /* original again */ \
+		      ".previous" :: "i" (X86_FEATURE_UP), ##input)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: include/asm-i386/system.h:334:
+^Iasm volatile ("661:\n\t" smpinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: include/asm-i386/system.h:335:
+^I^I      ".section .altinstructions,\"a\"\n"     ^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: include/asm-i386/system.h:338:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134497.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 7 warnings, 3 checks, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134497.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
