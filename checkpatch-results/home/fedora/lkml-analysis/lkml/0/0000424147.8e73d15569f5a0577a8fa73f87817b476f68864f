ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#132: FILE: drivers/scsi/ips.c:1828:
+int
+ips_slave_attach(Scsi_Device *scsi_dev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#133: FILE: drivers/scsi/ips.c:1829:
+ips_slave_attach(Scsi_Device *scsi_dev) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/scsi/ips.c:1831:
+   int          queue_depth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/scsi/ips.c:1832:
+   int          min, per_logical;$

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/scsi/ips.c:1834:
+   ha = (ips_ha_t *) scsi_dev->host->hostdata;;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/scsi/ips.c:1834:
+   ha = (ips_ha_t *) scsi_dev->host->hostdata;;$

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#140: FILE: drivers/scsi/ips.c:1834:
+   ha = (ips_ha_t *) scsi_dev->host->hostdata;;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/scsi/ips.c:1837:
+   per_logical = ( ha->max_cmds -1 ) / ha->enq->ucLogDriveCount;$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#144: FILE: drivers/scsi/ips.c:1837:
+   per_logical = ( ha->max_cmds -1 ) / ha->enq->ucLogDriveCount;
                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#144: FILE: drivers/scsi/ips.c:1837:
+   per_logical = ( ha->max_cmds -1 ) / ha->enq->ucLogDriveCount;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#144: FILE: drivers/scsi/ips.c:1837:
+   per_logical = ( ha->max_cmds -1 ) / ha->enq->ucLogDriveCount;

CHECK:CAMELCASE: Avoid CamelCase: <ucLogDriveCount>
#144: FILE: drivers/scsi/ips.c:1837:
+   per_logical = ( ha->max_cmds -1 ) / ha->enq->ucLogDriveCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/scsi/ips.c:1839:
+   if ((scsi_dev->channel == 0) && (scsi_dev->type == 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#151: FILE: drivers/scsi/ips.c:1839:
+   if ((scsi_dev->channel == 0) && (scsi_dev->type == 0)) {
+      queue_depth = max(per_logical, min);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsi_dev->channel == 0'
#151: FILE: drivers/scsi/ips.c:1839:
+   if ((scsi_dev->channel == 0) && (scsi_dev->type == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scsi_dev->type == 0'
#151: FILE: drivers/scsi/ips.c:1839:
+   if ((scsi_dev->channel == 0) && (scsi_dev->type == 0)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#151: FILE: drivers/scsi/ips.c:1839:
+   if ((scsi_dev->channel == 0) && (scsi_dev->type == 0)) {
[...]
+   } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/scsi/ips.c:1840:
+      queue_depth = max(per_logical, min);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/scsi/ips.c:1841:
+   } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#153: FILE: drivers/scsi/ips.c:1841:
+   } else {
+      queue_depth = 2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/scsi/ips.c:1842:
+      queue_depth = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/scsi/ips.c:1845:
+   scsi_adjust_queue_depth(scsi_dev, 0, queue_depth);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/scsi/ips.c:1846:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/scsi/ips.c:1846:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/scsi/ips.c:1847:
+   return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/scsi/ips.h:65:
+   extern int ips_slave_attach(Scsi_Device *);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: drivers/scsi/ips.h:65:
+   extern int ips_slave_attach(Scsi_Device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Scsi_Device *' should also have an identifier name
#192: FILE: drivers/scsi/ips.h:65:
+   extern int ips_slave_attach(Scsi_Device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/scsi/ips.h:485:
+    slave_attach : ips_slave_attach,      \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 18 warnings, 7 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
