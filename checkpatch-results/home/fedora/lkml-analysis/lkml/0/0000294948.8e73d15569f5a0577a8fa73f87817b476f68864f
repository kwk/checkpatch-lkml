WARNING:TYPO_SPELLING: 'instad' may be misspelled - perhaps 'instead'?
#65: 
object per-mm instad of per-vma by losing some granularity in the
              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#142: FILE: include/linux/objrmap.h:56:
+void FASTCALL(page_add_rmap(struct page *, struct vm_area_struct *, unsigned long, int));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#142: FILE: include/linux/objrmap.h:56:
+void FASTCALL(page_add_rmap(struct page *, struct vm_area_struct *, unsigned long, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#142: FILE: include/linux/objrmap.h:56:
+void FASTCALL(page_add_rmap(struct page *, struct vm_area_struct *, unsigned long, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#142: FILE: include/linux/objrmap.h:56:
+void FASTCALL(page_add_rmap(struct page *, struct vm_area_struct *, unsigned long, int));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#168: FILE: mm/objrmap.c:259:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#186: FILE: mm/objrmap.c:277:
+	BUG_ON(!anon && last_anon);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#197: FILE: mm/objrmap.c:291:
+		BUG_ON(!page->as.mapping);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: mm/objrmap.c:298:
+static inline void anon_vma_page_unlink(struct page * page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#207: FILE: mm/objrmap.c:300:
+	BUG_ON(!page->as.mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: mm/objrmap.c:329:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 16 warnings, 0 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000294948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
