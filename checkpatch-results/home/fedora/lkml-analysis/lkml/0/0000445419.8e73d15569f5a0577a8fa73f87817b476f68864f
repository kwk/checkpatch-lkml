WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -urN linux-2.5.27/arch/s390/kernel/debug.c linux-2.5.27-s390/arch/s390/kernel/debug.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: arch/s390/kernel/debug.c:153:
+^I.write   = debug_input,^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#82: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#82: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#82: FILE: arch/s390/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: arch/s390/kernel/irq.c:71:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#109: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#109: FILE: arch/s390/kernel/setup.c:527:
+			       num_online_cpus(), loops_per_jiffy/(500000/HZ),
 			                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#142: FILE: arch/s390/kernel/smp.c:152:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#152: FILE: arch/s390/kernel/smp.c:187:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/s390/kernel/smp.c:188:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/s390/kernel/smp.c:188:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#163: FILE: arch/s390/kernel/smp.c:203:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/s390/kernel/smp.c:204:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/s390/kernel/smp.c:204:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#174: FILE: arch/s390/kernel/smp.c:349:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/s390/kernel/smp.c:350:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/s390/kernel/smp.c:350:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/s390/kernel/smp.c:461:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/s390/kernel/smp.c:461:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/s390/kernel/smp.c:464:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/s390/kernel/smp.c:464:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/s390/kernel/smp.c:468:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/s390/kernel/smp.c:468:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#198: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/s390/kernel/smp.c:471:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/s390/kernel/smp.c:472:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/s390/kernel/smp.c:472:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/s390/kernel/smp.c:476:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/s390/kernel/smp.c:476:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#208: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: arch/s390/kernel/smp.c:478:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#217: FILE: arch/s390/kernel/smp.c:593:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#251: FILE: arch/s390/mm/fault.c:248:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/s390x/kernel/debug.c:153:
+^I.write   = debug_input,^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#295: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#295: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#295: FILE: arch/s390x/kernel/irq.c:69:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: arch/s390x/kernel/irq.c:71:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: arch/s390x/kernel/linux32.c:525:
+	    __copy_from_user (p->mtext, &up->mtext, second))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#352: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#352: FILE: arch/s390x/kernel/setup.c:517:
+				num_online_cpus(), loops_per_jiffy/(500000/HZ),
 				                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#385: FILE: arch/s390x/kernel/smp.c:151:
+	int cpus = num_online_cpus()-1;
 	                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#395: FILE: arch/s390x/kernel/smp.c:186:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/s390x/kernel/smp.c:187:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/s390x/kernel/smp.c:187:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#406: FILE: arch/s390x/kernel/smp.c:202:
+        for (i =  0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/s390x/kernel/smp.c:203:
+                if (!cpu_online(i) || smp_processor_id() == i) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#417: FILE: arch/s390x/kernel/smp.c:344:
+        for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/s390x/kernel/smp.c:345:
+                if (!cpu_online(i) || smp_processor_id() == i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/s390x/kernel/smp.c:345:
+                if (!cpu_online(i) || smp_processor_id() == i)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: arch/s390x/kernel/smp.c:442:
+        int curr_cpu, num_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/s390x/kernel/smp.c:442:
+        int curr_cpu, num_cpus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: arch/s390x/kernel/smp.c:445:
+        num_cpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: arch/s390x/kernel/smp.c:445:
+        num_cpus = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: arch/s390x/kernel/smp.c:449:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/s390x/kernel/smp.c:449:
+             curr_cpu <= 65535 && num_cpus < max_cpus; curr_cpu++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

CHECK:SPACING: No space is necessary after a cast
#441: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/s390x/kernel/smp.c:452:
+                __cpu_logical_map[num_cpus] = (__u16) curr_cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: arch/s390x/kernel/smp.c:453:
+                if (signal_processor(num_cpus, sigp_sense) ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: arch/s390x/kernel/smp.c:453:
+                if (signal_processor(num_cpus, sigp_sense) ==$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: arch/s390x/kernel/smp.c:457:
+                num_cpus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: arch/s390x/kernel/smp.c:457:
+                num_cpus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

CHECK:SPACING: No space is necessary after a cast
#451: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/s390x/kernel/smp.c:459:
+        printk("Detected %d CPU's\n",(int) num_cpus);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#460: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#460: FILE: arch/s390x/kernel/smp.c:573:
+        for(i = 0; i < NR_CPUS; i++) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: arch/s390x/mm/fault.c:248:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: drivers/s390/block/dasd.c:436:
+ * get the kdev_t of a device $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#571: FILE: drivers/s390/block/dasd.c:442:
+	return to_kdev_t(device->bdev->bd_dev+partition);
 	                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#574: FILE: drivers/s390/block/dasd.c:445:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'device'
#600: FILE: drivers/s390/block/dasd.c:1564:
+		/* Rechain request on device device request queue */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#660: FILE: drivers/s390/block/dasd.c:2199:
+	.owner=THIS_MODULE,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#661: FILE: drivers/s390/block/dasd.c:2200:
+	.open=dasd_open,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#662: FILE: drivers/s390/block/dasd.c:2201:
+	.release=dasd_release,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#663: FILE: drivers/s390/block/dasd.c:2202:
+	.ioctl=dasd_ioctl,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#714: FILE: drivers/s390/block/dasd_diag.c:493:
+	.owner=THIS_MODULE,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#715: FILE: drivers/s390/block/dasd_diag.c:494:
+	.name="DIAG",
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#716: FILE: drivers/s390/block/dasd_diag.c:495:
+	.ebcname="DIAG",
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#717: FILE: drivers/s390/block/dasd_diag.c:496:
+	.max_blocks=240,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#718: FILE: drivers/s390/block/dasd_diag.c:497:
+	.check_device=dasd_diag_check_device,
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#719: FILE: drivers/s390/block/dasd_diag.c:498:
+	.fill_geometry=dasd_diag_fill_geometry,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#720: FILE: drivers/s390/block/dasd_diag.c:499:
+	.start_IO=dasd_start_diag,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#721: FILE: drivers/s390/block/dasd_diag.c:500:
+	.examine_error=dasd_diag_examine_error,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#722: FILE: drivers/s390/block/dasd_diag.c:501:
+	.erp_action=dasd_diag_erp_action,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#723: FILE: drivers/s390/block/dasd_diag.c:502:
+	.erp_postaction=dasd_diag_erp_postaction,
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#724: FILE: drivers/s390/block/dasd_diag.c:503:
+	.build_cp=dasd_diag_build_cp,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#725: FILE: drivers/s390/block/dasd_diag.c:504:
+	.dump_sense=dasd_diag_dump_sense,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#726: FILE: drivers/s390/block/dasd_diag.c:505:
+	.fill_info=dasd_diag_fill_info,
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#758: FILE: drivers/s390/block/dasd_eckd.c:84:
+		.flag =(DEVREG_MATCH_CU_TYPE | DEVREG_TYPE_DEVCHARS),
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#912: FILE: drivers/s390/block/dasd_eckd.c:1423:
+	.owner=THIS_MODULE,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#913: FILE: drivers/s390/block/dasd_eckd.c:1424:
+	.name="ECKD",
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#914: FILE: drivers/s390/block/dasd_eckd.c:1425:
+	.ebcname="ECKD",
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#915: FILE: drivers/s390/block/dasd_eckd.c:1426:
+	.max_blocks=240,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#916: FILE: drivers/s390/block/dasd_eckd.c:1427:
+	.check_device=dasd_eckd_check_device,
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#917: FILE: drivers/s390/block/dasd_eckd.c:1428:
+	.do_analysis=dasd_eckd_do_analysis,
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#918: FILE: drivers/s390/block/dasd_eckd.c:1429:
+	.fill_geometry=dasd_eckd_fill_geometry,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#919: FILE: drivers/s390/block/dasd_eckd.c:1430:
+	.start_IO=dasd_start_IO,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#920: FILE: drivers/s390/block/dasd_eckd.c:1431:
+	.term_IO=dasd_term_IO,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#921: FILE: drivers/s390/block/dasd_eckd.c:1432:
+	.format_device=dasd_eckd_format_device,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#922: FILE: drivers/s390/block/dasd_eckd.c:1433:
+	.examine_error=dasd_eckd_examine_error,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#923: FILE: drivers/s390/block/dasd_eckd.c:1434:
+	.erp_action=dasd_eckd_erp_action,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#924: FILE: drivers/s390/block/dasd_eckd.c:1435:
+	.erp_postaction=dasd_eckd_erp_postaction,
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#925: FILE: drivers/s390/block/dasd_eckd.c:1436:
+	.build_cp=dasd_eckd_build_cp,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#926: FILE: drivers/s390/block/dasd_eckd.c:1437:
+	.dump_sense=dasd_eckd_dump_sense,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#927: FILE: drivers/s390/block/dasd_eckd.c:1438:
+	.fill_info=dasd_eckd_fill_info,
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#984: FILE: drivers/s390/block/dasd_fba.c:397:
+	.owner=THIS_MODULE,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#985: FILE: drivers/s390/block/dasd_fba.c:398:
+	.name="FBA ",
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#986: FILE: drivers/s390/block/dasd_fba.c:399:
+	.ebcname="FBA ",
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#987: FILE: drivers/s390/block/dasd_fba.c:400:
+	.max_blocks=96,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#988: FILE: drivers/s390/block/dasd_fba.c:401:
+	.check_device=dasd_fba_check_device,
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#989: FILE: drivers/s390/block/dasd_fba.c:402:
+	.do_analysis=dasd_fba_do_analysis,
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#990: FILE: drivers/s390/block/dasd_fba.c:403:
+	.fill_geometry=dasd_fba_fill_geometry,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#991: FILE: drivers/s390/block/dasd_fba.c:404:
+	.start_IO=dasd_start_IO,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#992: FILE: drivers/s390/block/dasd_fba.c:405:
+	.term_IO=dasd_term_IO,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#993: FILE: drivers/s390/block/dasd_fba.c:406:
+	.examine_error=dasd_fba_examine_error,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#994: FILE: drivers/s390/block/dasd_fba.c:407:
+	.erp_action=dasd_fba_erp_action,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#995: FILE: drivers/s390/block/dasd_fba.c:408:
+	.erp_postaction=dasd_fba_erp_postaction,
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#996: FILE: drivers/s390/block/dasd_fba.c:409:
+	.build_cp=dasd_fba_build_cp,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#997: FILE: drivers/s390/block/dasd_fba.c:410:
+	.dump_sense=dasd_fba_dump_sense,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#998: FILE: drivers/s390/block/dasd_fba.c:411:
+	.fill_info=dasd_fba_fill_info,
 	          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1080: FILE: drivers/s390/block/dasd_int.h:144:
+	printk(d_loglevel PRINTK_HEADER " %s,%04x@%02x: " \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dasd_info"
#1317: FILE: drivers/s390/block/dasd_ioctl.c:374:
+	if (dasd_info == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#1389: FILE: drivers/s390/block/dasd_ioctl.c:429:
+	if (copy_to_user((long *) args, (long *) dasd_info,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'no == (unsigned int) BIODASDINFO2'
#1389: FILE: drivers/s390/block/dasd_ioctl.c:429:
+	if (copy_to_user((long *) args, (long *) dasd_info,
 			 ((no == (unsigned int) BIODASDINFO2) ?
 			  sizeof (dasd_information2_t) :
 			  sizeof (dasd_information_t))))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1553: FILE: drivers/s390/block/dasd_proc.c:278:
+	.read=dasd_generic_read,		/* read */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1554: FILE: drivers/s390/block/dasd_proc.c:279:
+	.write=dasd_devices_write,	/* write */
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1555: FILE: drivers/s390/block/dasd_proc.c:280:
+	.open=dasd_devices_open,		/* open */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1556: FILE: drivers/s390/block/dasd_proc.c:281:
+	.release=dasd_generic_close,	/* close */
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1568: FILE: drivers/s390/block/dasd_proc.c:434:
+	.read=dasd_generic_read,	/* read */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1569: FILE: drivers/s390/block/dasd_proc.c:435:
+	.write=dasd_statistics_write,	/* write */
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1570: FILE: drivers/s390/block/dasd_proc.c:436:
+	.open=dasd_statistics_open,	/* open */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1571: FILE: drivers/s390/block/dasd_proc.c:437:
+	.release=dasd_generic_close,	/* close */
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1696: FILE: drivers/s390/char/con3215.c:865:
+^I^Itasklet_init(&raw->tasklet, $

CHECK:SPACING: No space is necessary after a cast
#1698: FILE: drivers/s390/char/con3215.c:867:
+			     (unsigned long) raw);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1708: FILE: drivers/s390/char/con3215.c:1096:
+^Itasklet_init(&raw->tasklet, $

CHECK:SPACING: No space is necessary after a cast
#1710: FILE: drivers/s390/char/con3215.c:1098:
+		     (unsigned long) raw);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1738: FILE: drivers/s390/char/hwc_con.c:37:
+	.name=hwc_console_name,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1739: FILE: drivers/s390/char/hwc_con.c:38:
+	.write=hwc_console_write,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1740: FILE: drivers/s390/char/hwc_con.c:39:
+	.device=hwc_console_device,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1741: FILE: drivers/s390/char/hwc_con.c:40:
+	.unblank=hwc_console_unblank,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1742: FILE: drivers/s390/char/hwc_con.c:41:
+	.flags=CON_PRINTBUFFER,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1756: FILE: drivers/s390/char/tape.c:202:
+	.read=tape_proc_devices_read,		/* read */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1757: FILE: drivers/s390/char/tape.c:203:
+	.open=tape_proc_devices_open,		/* open */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1758: FILE: drivers/s390/char/tape.c:204:
+	.release=tape_proc_devices_release,	/* close */
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1774: FILE: drivers/s390/char/tapechar.c:43:
+	.read=tapechar_read,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1775: FILE: drivers/s390/char/tapechar.c:44:
+	.write=tapechar_write,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1776: FILE: drivers/s390/char/tapechar.c:45:
+	.ioctl=tapechar_ioctl,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1777: FILE: drivers/s390/char/tapechar.c:46:
+	.open=tapechar_open,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1778: FILE: drivers/s390/char/tapechar.c:47:
+	.release=tapechar_release,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1797: FILE: drivers/s390/char/tubfs.c:29:
+	.read=fs3270_read,	/* read */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1798: FILE: drivers/s390/char/tubfs.c:30:
+	.write=fs3270_write,	/* write */
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1799: FILE: drivers/s390/char/tubfs.c:31:
+	.ioctl=fs3270_ioctl,	/* ioctl */
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1800: FILE: drivers/s390/char/tubfs.c:32:
+	.open=fs3270_open,	/* open */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1801: FILE: drivers/s390/char/tubfs.c:33:
+	.release=fs3270_close,	/* release */
 	        ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1813: FILE: drivers/s390/cio/blacklist.c:4:
+ *   $Revision: 1.6 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1822: FILE: drivers/s390/cio/blacklist.c:246:
+#if 0

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1875: FILE: drivers/s390/cio/cio.c:4:
+ *   $Revision: 1.17 $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1884: FILE: drivers/s390/cio/cio.c:55:
+		debug_text_event (cio_debug_msg_id, level, buffer);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1905: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1905: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1905: FILE: drivers/s390/cio/cio_debug.h:23:
+                                    imp , \
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1913: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1913: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1913: FILE: drivers/s390/cio/cio_debug.h:30:
+                                    imp , \
                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1925: FILE: drivers/s390/cio/proc.c:157:
+	.read=chan_subch_read, .open=chan_subch_open, .release=chan_subch_close,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1925: FILE: drivers/s390/cio/proc.c:157:
+	.read=chan_subch_read, .open=chan_subch_open, .release=chan_subch_close,
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1925: FILE: drivers/s390/cio/proc.c:157:
+	.read=chan_subch_read, .open=chan_subch_open, .release=chan_subch_close,
 	                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1935: FILE: drivers/s390/cio/proc.c:248:
+	.read=cio_irq_proc_read, .open=cio_irq_proc_open,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1935: FILE: drivers/s390/cio/proc.c:248:
+	.read=cio_irq_proc_read, .open=cio_irq_proc_open,
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1936: FILE: drivers/s390/cio/proc.c:249:
+	.release=cio_irq_proc_close,
 	        ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1948: FILE: drivers/s390/cio/requestirq.c:4:
+ *   $Revision: 1.8 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1957: FILE: drivers/s390/cio/requestirq.c:144:
+^ICIO_DEBUG_NOCONS(irq,KERN_DEBUG, DBG, 2, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/s390/cio/requestirq.c:144:
+	CIO_DEBUG_NOCONS(irq,KERN_DEBUG, DBG, 2, 
 	                    ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1969: FILE: drivers/s390/cio/s390io.c:4:
+ *   $Revision: 1.12 $

WARNING:SPLIT_STRING: quoted string split across lines
#1984: FILE: drivers/s390/cio/s390io.c:1917:
+					  "PathVerification(%04X) "
+					  "- Device %04X is no longer there?!?\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1988: FILE: drivers/s390/cio/s390io.c:1921:
+			} else if (ret) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1991: FILE: drivers/s390/cio/s390io.c:1924:
+					  "PathVerification(%04X) - "
+					  "Unexpected error %d on device %04X\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2052: FILE: drivers/s390/net/ctctty.c:89:
+  struct tasklet_struct tasklet;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2140: FILE: drivers/s390/net/ctctty.c:1242:
+		tasklet_init(&info->tasklet, ctc_tty_task,
+				(unsigned long) info);

CHECK:SPACING: No space is necessary after a cast
#2140: FILE: drivers/s390/net/ctctty.c:1242:
+				(unsigned long) info);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2184: FILE: drivers/s390/net/iucv.c:108:
+static DECLARE_TASKLET(iucv_tasklet,iucv_tasklet_handler,0);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2184: FILE: drivers/s390/net/iucv.c:108:
+static DECLARE_TASKLET(iucv_tasklet,iucv_tasklet_handler,0);
                                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2194: FILE: drivers/s390/net/iucv.c:303:
+	printk(KERN_DEBUG "%s\n", title);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2203: FILE: drivers/s390/net/iucv.c:319:
+		printk(KERN_DEBUG "%s: " fmt "\n", __FUNCTION__ , ## args); \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2203: FILE: drivers/s390/net/iucv.c:319:
+		printk(KERN_DEBUG "%s: " fmt "\n", __FUNCTION__ , ## args); \
 		                                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2203: FILE: drivers/s390/net/iucv.c:319:
+		printk(KERN_DEBUG "%s: " fmt "\n", __FUNCTION__ , ## args); \

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionPending>
#2296: FILE: drivers/s390/net/netiucv.c:468:
+	.ConnectionPending  = netiucv_callback_connreq,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionComplete>
#2297: FILE: drivers/s390/net/netiucv.c:469:
+	.ConnectionComplete = netiucv_callback_connack,

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionSevered>
#2298: FILE: drivers/s390/net/netiucv.c:470:
+	.ConnectionSevered  = netiucv_callback_connrej,

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionQuiesced>
#2299: FILE: drivers/s390/net/netiucv.c:471:
+	.ConnectionQuiesced = netiucv_callback_connsusp,

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionResumed>
#2300: FILE: drivers/s390/net/netiucv.c:472:
+	.ConnectionResumed  = netiucv_callback_connres,

CHECK:CAMELCASE: Avoid CamelCase: <MessagePending>
#2301: FILE: drivers/s390/net/netiucv.c:473:
+	.MessagePending     = netiucv_callback_rx,

CHECK:CAMELCASE: Avoid CamelCase: <MessageComplete>
#2302: FILE: drivers/s390/net/netiucv.c:474:
+	.MessageComplete    = netiucv_callback_txdone

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2351: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2351: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2351: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2351: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#2352: FILE: include/asm-s390/debug.h:164:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2361: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2361: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2361: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2361: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#2362: FILE: include/asm-s390/debug.h:200:
+	__attribute__ ((format(printf, 3, 4)));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2412: FILE: include/asm-s390/smp.h:49:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

CHECK:SPACING: No space is necessary after a cast
#2467: FILE: include/asm-s390x/bitops.h:818:
+	__w = generic_hweight32((unsigned int) __x);		\

CHECK:SPACING: No space is necessary after a cast
#2468: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2468: FILE: include/asm-s390x/bitops.h:819:
+	__w += generic_hweight32((unsigned int) (__x>>32));	\
 	                                            ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2482: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2482: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2482: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2482: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#2483: FILE: include/asm-s390x/debug.h:164:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2492: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2492: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2492: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2492: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#2493: FILE: include/asm-s390x/debug.h:200:
+	__attribute__ ((format(printf, 3, 4)));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2547: FILE: include/asm-s390x/smp.h:49:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2574: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2574: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#2574: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#2574: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#2574: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445419.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 153 errors, 66 warnings, 35 checks, 2211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445419.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
