WARNING:TYPO_SPELLING: 'alignement' may be misspelled - perhaps 'alignment'?
#54: 
recalculate the necessary alignement to know that it has to add 0x400 to
                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#91: 
3 - pci_mmap_page_range() beeing called by both sysfs mmap and proc
                          ^^^^^^

WARNING:TYPO_SPELLING: 'consistant' may be misspelled - perhaps 'consistent'?
#99: 
they are consistant (which is cool). In both case, current ppc
         ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'paremeter' may be misspelled - perhaps 'parameter'?
#112: 
"write combine" parametre like /proc did. In fact, this paremeter was a
                                                        ^^^^^^^^^

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#120: 
wondering wether it would make sense to haev pci-sysfs.c pass 1 for
          ^^^^^^

WARNING:TYPO_SPELLING: 'haev' may be misspelled - perhaps 'have'?
#120: 
wondering wether it would make sense to haev pci-sysfs.c pass 1 for
                                        ^^^^

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#121: 
write_combine when the resource beeing mapped has the prefetchable bit ?
                                ^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#132: 
--- linux-work.orig/arch/ppc64/kernel/pci.c	2005-04-24 11:37:38.000000000 +1000

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: arch/ppc64/kernel/pci.c:355:
+		printk("offset: %lx, io_base_virt: %p, pci_io_base: %lx, io_offset: %lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: arch/ppc64/kernel/pci.c:359:
+		printk(" -> offset: %lx\n", *offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: arch/ppc64/kernel/pci.c:379:
+		printk(" r%d: %lx -> %lx\n", i, rp->start, rp->end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/ppc64/kernel/pci.c:385:
+^I^I       ^I*offset += hose->io_base_phys - io_offset;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: arch/ppc64/kernel/pci.c:385:
+^I^I       ^I*offset += hose->io_base_phys - io_offset;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#161: FILE: arch/ppc64/kernel/pci.c:386:
+			printk(" result: %lx\n", *offset);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#177: FILE: arch/ppc64/kernel/pci.c:957:
+	if (hose == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: drivers/pci/pci-sysfs.c:57:
+resources_show(struct device * dev, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: drivers/pci/pci-sysfs.c:57:
+resources_show(struct device * dev, char * buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/pci/pci-sysfs.c:70:
+		struct resource *res =  &pci_dev->resource[i];
+		pci_resource_to_user(pci_dev, i, res, &start, &end);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/pci/pci-sysfs.c:71:
+		str += sprintf(str,"0x%02x 0x%016llx 0x%016llx 0x%016llx\n", i,
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/asm-ppc64/pci.h:139:
+extern void pci_resource_to_user(const struct pci_dev *dev, int bar,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#278: FILE: drivers/pci/proc.c:357:
+	for(i=0; i<7; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#278: FILE: drivers/pci/proc.c:357:
+	for(i=0; i<7; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: drivers/pci/proc.c:357:
+	for(i=0; i<7; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: drivers/pci/proc.c:359:
+		u64 start, end;
+		pci_resource_to_user(dev, i, &dev->resource[i], &start, &end);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#287: FILE: drivers/pci/proc.c:364:
+	for(i=0; i<7; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#287: FILE: drivers/pci/proc.c:364:
+	for(i=0; i<7; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: drivers/pci/proc.c:364:
+	for(i=0; i<7; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#289: FILE: drivers/pci/proc.c:366:
+		u64 start, end;
+		pci_resource_to_user(dev, i, &dev->resource[i], &start, &end);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#308: FILE: drivers/pci/pci.c:774:
 static int __devinit pci_init(void)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: include/linux/pci.h:1020:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#333: FILE: include/linux/pci.h:1034:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/asm-ppc/pci.h:107:
+extern void pci_resource_to_user(const struct pci_dev *dev, int bar,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#350: FILE: include/asm-ppc/pci.h:111:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#387: FILE: arch/ppc/kernel/pci.c:1749:
+	if (hose == NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 17 warnings, 7 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
