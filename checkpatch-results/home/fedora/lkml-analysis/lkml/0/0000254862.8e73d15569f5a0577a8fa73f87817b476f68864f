WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
RCU technique. I found _significant_ reduction in profile count (~56% savings)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/net/sock.h:709:
+extern void			sk_free_rcu(struct rcu_head *head);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#228: FILE: include/net/tcp.h:48:
+	spinlock_t	  lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: include/net/tcp.h:310:
+extern void tcp_tw_free(struct rcu_head *head);

CHECK:BRACES: braces {} should be used on all arms of this statement
#329: FILE: net/ipv4/tcp_ipv4.c:369:
+	if (listen_possible && sk->sk_state == TCP_LISTEN) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#332: FILE: net/ipv4/tcp_ipv4.c:372:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#361: FILE: net/ipv4/tcp_ipv4.c:406:
+	if (sk->sk_state != TCP_LISTEN)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: net/ipv4/tcp_ipv4.c:408:
+	else {

WARNING:TYPO_SPELLING: 'carefull' may be misspelled - perhaps 'careful'?
#544: FILE: net/ipv4/tcp_minisocks.c:314:
+	 * We have to be carefull here since there could be racing
 	                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#544: FILE: net/ipv4/tcp_minisocks.c:314:
+	/*
+	 * We have to be carefull here since there could be racing

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#548: FILE: net/ipv4/tcp_minisocks.c:318:
+	 * table. Lookups occuring in that window can drop packets!
 	                  ^^^^^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#558: FILE: net/ipv4/tcp_minisocks.c:326:
+	smp_wmb();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#581: FILE: net/ipv4/tcp_minisocks.c:1092:
+		printk(KERN_DEBUG "tw_bucket %p released\n", tw);

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: net/ipv4/tcp_minisocks.c:1094:
+        ^Ikmem_cache_free(tcp_timewait_cachep, tw);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#583: FILE: net/ipv4/tcp_minisocks.c:1094:
+        ^Ikmem_cache_free(tcp_timewait_cachep, tw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: net/ipv4/tcp_minisocks.c:1094:
+        ^Ikmem_cache_free(tcp_timewait_cachep, tw);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#587: FILE: net/ipv4/tcp_minisocks.c:1098:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 8 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
