CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#77: FILE: include/linux/notifier.h:32:
+}
+extern int notifier_chain_unregister_lockfree(struct notifier_block **nl, struct notifier_block *n);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/notifier.h:32:
+extern int notifier_chain_unregister_lockfree(struct notifier_block **nl, struct notifier_block *n);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/linux/notifier.h:33:
+extern int notifier_call_chain_lockfree(struct notifier_block **n, unsigned long val, void *v);

WARNING:MEMORY_BARRIER: memory barrier without comment
#90: FILE: kernel/sys.c:119:
+	smp_wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: kernel/sys.c:233:
+	int i;
+	write_lock(&notifier_lock);

WARNING:MEMORY_BARRIER: memory barrier without comment
#144: FILE: kernel/sys.c:237:
+			smp_wmb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#145: FILE: kernel/sys.c:238:
+			for (i = 0; i < NR_CPUS; ++i) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: kernel/sys.c:254:
+EXPORT_SYMBOL(notifier_chain_unregister_lockfree);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: kernel/sys.c:277:
+	struct notifier_block *nb;
+	nested = notifier_chain_lockfree_inuse[cpu];

WARNING:MEMORY_BARRIER: memory barrier without comment
#186: FILE: kernel/sys.c:279:
+	wmb();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#200: FILE: kernel/sys.c:293:
+EXPORT_SYMBOL(notifier_call_chain_lockfree);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127943.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 3 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127943.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
