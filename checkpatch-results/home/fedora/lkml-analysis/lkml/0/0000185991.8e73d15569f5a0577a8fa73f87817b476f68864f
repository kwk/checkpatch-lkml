WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
--- linux-2.6.11.8/drivers/block/genhd.c=092005-04-30 03:27:21.000000000 +0=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#81: FILE: drivers/block/genhd.c=092005-05-02:18:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/block/genhd.c:81:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#327: FILE: drivers/block/genhd.c:83:
+		len ++;
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/block/genhd.c:85:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/block/genhd.c:92:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#339: FILE: drivers/block/genhd.c:95:
+			struct hd_struct *hd = sgp->part[n];
+			if (hd && hd->nr_sects) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: drivers/block/genhd.c:96:
+				names[i] = kmalloc(strlen(disk_name(sgp, n+1, buf)), GFP_KERNEL);
 				                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: drivers/block/genhd.c:97:
+				strcpy(names[i], disk_name(sgp, n+1, buf));
 				                                 ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#342: FILE: drivers/block/genhd.c:98:
+				i ++;
 				  ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#351: FILE: drivers/block/genhd.c:107:
+EXPORT_SYMBOL(get_blkdevs);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: drivers/block/genhd.c:245:
+	printk("Waking up queue on %s\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#406: FILE: include/linux/genhd.h:239:
+extern char **get_blkdevs(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#431: FILE: init/do_mounts.c:370:
+static int __init match_root_name(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: init/do_mounts.c:374:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "names[i]"
#437: FILE: init/do_mounts.c:376:
+	while (names[i] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#442: FILE: init/do_mounts.c:381:
+			printk("Block device %s matches %s root_device_name, continuing\n",

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#446: FILE: init/do_mounts.c:385:
+		i ++;
 		  ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#454: FILE: init/do_mounts.c:393:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: init/do_mounts.c:417:
+	 * already there, we just go on. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#466: FILE: init/do_mounts.c:419:
+		printk("Waiting for root device to wake us up\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: init/do_mounts.c:422:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: init/do_mounts.c:422:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: init/main.c:54:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 6 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
