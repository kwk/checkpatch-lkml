WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
Content-Type: TEXT/PLAIN; CHARSET=iso-8859-1; NAME="shpte-2.5.43-mm2-4.diff"

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#59: FILE: ./fs/exec.c:50:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#96: FILE: ./arch/i386/kernel/vm86.c:148:
+	ptepage =3D pmd_page(*pmd);
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: ./include/linux/mm.h:363:
+extern pte_t *pte_unshare(struct mm_struct *mm, pmd_t *pmd, unsigned long =

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: ./include/linux/mm.h:364:
+extern int share_page_range(struct mm_struct *dst, struct mm_struct *src, =

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#176: FILE: ./include/linux/rmap-locking.h:25:
 }
+static inline int pte_chain_trylock(struct page *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#219: FILE: ./include/linux/page-flags.h:243:
+#define TestSetPagePtepage(page)	test_and_set_bit(PG_ptepage, =

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#222: FILE: ./include/linux/page-flags.h:245:
+#define TestClearPagePtepage(page)	test_and_clear_bit(PG_ptepage, =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: ./include/linux/page-flags.h:62:
+extern void pgtable_add_rmap(struct page * page, struct mm_struct * mm, =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: ./include/linux/page-flags.h:62:
+extern void pgtable_add_rmap(struct page * page, struct mm_struct * mm, =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: ./include/linux/page-flags.h:62:
+extern void pgtable_add_rmap(struct page * page, struct mm_struct * mm, =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: ./include/linux/page-flags.h:63:
+extern void pgtable_add_rmap_locked(struct page * page, struct mm_struct * =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: ./include/linux/page-flags.h:63:
+extern void pgtable_add_rmap_locked(struct page * page, struct mm_struct * =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#273: FILE: ./include/linux/page-flags.h:63:
+extern void pgtable_add_rmap_locked(struct page * page, struct mm_struct * =

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'm' should also have an identifier name
#273: FILE: ./include/linux/page-flags.h:63:
+extern void pgtable_add_rmap_locked(struct page * page, struct mm_struct * =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: ./include/linux/page-flags.h:64:
+extern void pgtable_remove_rmap(struct page * page, struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: ./include/linux/page-flags.h:64:
+extern void pgtable_remove_rmap(struct page * page, struct mm_struct *mm);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: ./include/linux/page-flags.h:65:
+extern void pgtable_remove_rmap_locked(struct page * page, struct =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: ./include/linux/page-flags.h:65:
+extern void pgtable_remove_rmap_locked(struct page * page, struct =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'm' should also have an identifier name
#276: FILE: ./include/linux/page-flags.h:65:
+extern void pgtable_remove_rmap_locked(struct page * page, struct =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: ./include/linux/page-flags.h:66:
+extern void increment_rss(struct page *ptepage);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#310: FILE: ./include/asm-i386/pgtable.h:126:
+#define _PAGE_TABLE_RDONLY	(_PAGE_PRESENT | _PAGE_USER | _PAGE_ACCESSED | =

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#323: FILE: ./include/asm-i386/pgtable.h:188:
+#define	pmd_bad(x)	((pmd_val(x) & (~PAGE_MASK & ~_PAGE_USER & ~_PAGE_RW)) =

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#337: FILE: ./include/asm-i386/pgtable.h:214:
+static inline pmd_t pmd_wrprotect(pmd_t pmd)	{ (pmd).pmd &=3D ~_PAGE_RW; =

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#337: FILE: ./include/asm-i386/pgtable.h:214:
+static inline pmd_t pmd_wrprotect(pmd_t pmd)	{ (pmd).pmd &=3D ~_PAGE_RW; =
                                             	            ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#339: FILE: ./include/asm-i386/pgtable.h:215:
+static inline pmd_t pmd_mkwrite(pmd_t pmd)	{ (pmd).pmd |=3D _PAGE_RW; =

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#339: FILE: ./include/asm-i386/pgtable.h:215:
+static inline pmd_t pmd_mkwrite(pmd_t pmd)	{ (pmd).pmd |=3D _PAGE_RW; =
                                           	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#351: FILE: ./include/asm-i386/pgtable.h:273:
+	((pte_t *)kmap_atomic(__page,KM_PTE0) + __pte_offset(address))
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: ./include/asm-i386/pgtable.h:275:
+	((pte_t *)kmap_atomic(__page,KM_PTE1) + __pte_offset(address))
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#374: FILE: ./kernel/fork.c:214:
+	pmd_t *prev_pmd =3D 0;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#384: FILE: ./kernel/fork.c:280:
+		retval =3D share_page_range(mm, current->mm, tmp, &prev_pmd);
 		       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#390: FILE: ./kernel/fork.c:285:
 		if (tmp->vm_ops && tmp->vm_ops->open)
+++ 2.5.43-mm2-shpte/./mm/swapfile.c	2002-10-18 13:36:14.000000000 -0500

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#410: FILE: ./mm/swapfile.c:376:
+	pte_t *dir, swp_entry_t entry, struct page* page, pmd_t *pmd)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#435: FILE: ./mm/swapfile.c:407:
+	ptepage =3D pmd_page(*dir);
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: ./mm/swapfile.c:416:
+		unuse_pte(vma, offset+address-vma->vm_start, pte, entry, page, dir);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#445: FILE: ./mm/swapfile.c:416:
+		unuse_pte(vma, offset+address-vma->vm_start, pte, entry, page, dir);
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#475: FILE: ./mm/msync.c:58:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#517: FILE: ./mm/mprotect.c:42:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#526: FILE: ./mm/mprotect.c:51:
+		if ((address =3D=3D 0) && (end =3D=3D PMD_SIZE)) {
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#526: FILE: ./mm/mprotect.c:51:
+		if ((address =3D=3D 0) && (end =3D=3D PMD_SIZE)) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#526: FILE: ./mm/mprotect.c:51:
+		if ((address =3D=3D 0) && (end =3D=3D PMD_SIZE)) {
 		                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#526: FILE: ./mm/mprotect.c:51:
+		if ((address =3D=3D 0) && (end =3D=3D PMD_SIZE)) {
 		                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#526: FILE: ./mm/mprotect.c:51:
+		if ((address =3D=3D 0) && (end =3D=3D PMD_SIZE)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#527: FILE: ./mm/mprotect.c:52:
+			pmd_t	pmdval =3D *pmd;
 			     	       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#527: FILE: ./mm/mprotect.c:52:
+			pmd_t	pmdval =3D *pmd;
 			     	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#530: FILE: ./mm/mprotect.c:55:
+				pmdval =3D pmd_mkwrite(pmdval);
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#532: FILE: ./mm/mprotect.c:57:
+				pmdval =3D pmd_wrprotect(pmdval);
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#537: FILE: ./mm/mprotect.c:62:
+		pte =3D pte_unshare(vma->vm_mm, pmd, address);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#538: FILE: ./mm/mprotect.c:63:
+		ptepage =3D pmd_page(*pmd);
 		        ^

CHECK:BRACES: Unbalanced braces around else statement
#539: FILE: ./mm/mprotect.c:64:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#541: FILE: ./mm/mprotect.c:66:
+		pte =3D pte_offset_map(pmd, address);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#624: FILE: ./mm/memory.c:110:
+	ptepage =3D pmd_page(*dir);
 	        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#628: FILE: ./mm/memory.c:114:
+	BUG_ON(page_count(ptepage) !=3D 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#628: FILE: ./mm/memory.c:114:
+	BUG_ON(page_count(ptepage) !=3D 1);
 	                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#647: FILE: ./mm/memory.c:163:
 }
+#ifdef CONFIG_SHAREPTE

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#685: FILE: ./mm/memory.c:201:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#687: FILE: ./mm/memory.c:203:
+	    (vma->vm_start <=3D ptepage->index) &&
 	                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: ./mm/memory.c:204:
+	    (vma->vm_end >=3D (ptepage->index + PMD_SIZE))) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#688: FILE: ./mm/memory.c:204:
+	    (vma->vm_end >=3D (ptepage->index + PMD_SIZE))) {
 	                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#723: FILE: ./mm/memory.c:238:
+pte_t *pte_unshare(struct mm_struct *mm, pmd_t *pmd, unsigned long =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#731: FILE: ./mm/memory.c:246:
+	oldpage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#734: FILE: ./mm/memory.c:249:
+	if (page_count(oldpage) =3D=3D 1) {
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#734: FILE: ./mm/memory.c:249:
+	if (page_count(oldpage) =3D=3D 1) {
 	                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#734: FILE: ./mm/memory.c:249:
+	if (page_count(oldpage) =3D=3D 1) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#743: FILE: ./mm/memory.c:258:
+	newpage =3D pte_alloc_one(mm, address);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#752: FILE: ./mm/memory.c:267:
+	oldpage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#756: FILE: ./mm/memory.c:271:
+	if (page_count(oldpage) =3D=3D 1) {
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#756: FILE: ./mm/memory.c:271:
+	if (page_count(oldpage) =3D=3D 1) {
 	                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#756: FILE: ./mm/memory.c:271:
+	if (page_count(oldpage) =3D=3D 1) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#763: FILE: ./mm/memory.c:278:
+	base =3D addr =3D oldpage->index;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#763: FILE: ./mm/memory.c:278:
+	base =3D addr =3D oldpage->index;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#764: FILE: ./mm/memory.c:279:
+	page_end =3D base + PMD_SIZE;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#765: FILE: ./mm/memory.c:280:
+	vma =3D find_vma(mm, base);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#766: FILE: ./mm/memory.c:281:
+	src_unshare =3D page_count(oldpage) =3D=3D 2;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#766: FILE: ./mm/memory.c:281:
+	src_unshare =3D page_count(oldpage) =3D=3D 2;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#766: FILE: ./mm/memory.c:281:
+	src_unshare =3D page_count(oldpage) =3D=3D 2;
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#767: FILE: ./mm/memory.c:282:
+	dst_ptb =3D pte_page_map(newpage, base);
 	        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#769: FILE: ./mm/memory.c:284:
+	if (!vma || (page_end <=3D vma->vm_start)) {
 	                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#769: FILE: ./mm/memory.c:284:
+	if (!vma || (page_end <=3D vma->vm_start)) {
+		goto no_vma;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#774: FILE: ./mm/memory.c:289:
+		addr =3D vma->vm_start;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#777: FILE: ./mm/memory.c:292:
+		end =3D vma->vm_end;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#779: FILE: ./mm/memory.c:294:
+		end =3D page_end;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#781: FILE: ./mm/memory.c:296:
+	src_ptb =3D pte_page_map_nested(oldpage, base);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#784: FILE: ./mm/memory.c:299:
+		unsigned int cow =3D 0;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#785: FILE: ./mm/memory.c:300:
+		pte_t *src_pte =3D src_ptb + __pte_offset(addr);
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#786: FILE: ./mm/memory.c:301:
+		pte_t *dst_pte =3D dst_ptb + __pte_offset(addr);
 		               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: ./mm/memory.c:303:
+		cow =3D (vma->vm_flags & (VM_SHARED | VM_MAYWRITE)) =3D=3D VM_MAYWRITE;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#788: FILE: ./mm/memory.c:303:
+		cow =3D (vma->vm_flags & (VM_SHARED | VM_MAYWRITE)) =3D=3D VM_MAYWRITE;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#788: FILE: ./mm/memory.c:303:
+		cow =3D (vma->vm_flags & (VM_SHARED | VM_MAYWRITE)) =3D=3D VM_MAYWRITE;
 		                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#788: FILE: ./mm/memory.c:303:
+		cow =3D (vma->vm_flags & (VM_SHARED | VM_MAYWRITE)) =3D=3D VM_MAYWRITE;
 		                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#791: FILE: ./mm/memory.c:306:
+			pte_t pte =3D *src_pte;
 			          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#791: FILE: ./mm/memory.c:306:
+			pte_t pte =3D *src_pte;
 			              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#802: FILE: ./mm/memory.c:317:
+			page =3D pte_page(pte);
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#806: FILE: ./mm/memory.c:321:
+					pte =3D pte_wrprotect(pte);
 					    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#814: FILE: ./mm/memory.c:329:
+					pte =3D pte_mkclean(pte);
 					    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#815: FILE: ./mm/memory.c:330:
+				pte =3D pte_mkold(pte);
 				    ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#823: FILE: ./mm/memory.c:338:
+			addr +=3D PAGE_SIZE;
 			     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#826: FILE: ./mm/memory.c:341:
+		if (addr >=3D page_end)
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#829: FILE: ./mm/memory.c:344:
+		vma =3D vma->vm_next;
 		    ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#833: FILE: ./mm/memory.c:348:
+		if (page_end <=3D vma->vm_start)
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#836: FILE: ./mm/memory.c:351:
+		addr =3D vma->vm_start;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#838: FILE: ./mm/memory.c:353:
+			end =3D vma->vm_end;
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#840: FILE: ./mm/memory.c:355:
+			end =3D page_end;
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#853: FILE: ./mm/memory.c:368:
+	newpage->private =3D oldpage->private;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#890: FILE: ./mm/memory.c:404:
+	pte_t *pte =3D NULL;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#897: FILE: ./mm/memory.c:411:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#907: FILE: ./mm/memory.c:421:
+	base =3D address & ~((PTRS_PER_PTE * PAGE_SIZE) - 1);
 	     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base < vma->vm_start'
#908: FILE: ./mm/memory.c:422:
+	if ((base < vma->vm_start) || (vma->vm_end < (base + PMD_SIZE)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#911: FILE: ./mm/memory.c:425:
+	as =3D vma->vm_file->f_dentry->d_inode->i_mapping;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#921: FILE: ./mm/memory.c:435:
+		if (lvma =3D=3D vma)
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#921: FILE: ./mm/memory.c:435:
+		if (lvma =3D=3D vma)
 		            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#921: FILE: ./mm/memory.c:435:
+		if (lvma =3D=3D vma)

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#925: FILE: ./mm/memory.c:439:
+		if ((lvma->vm_start !=3D vma->vm_start) ||
 		                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#926: FILE: ./mm/memory.c:440:
+		    (lvma->vm_end !=3D vma->vm_end) ||
 		                  ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#927: FILE: ./mm/memory.c:441:
+		    (lvma->vm_pgoff !=3D vma->vm_pgoff))
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#930: FILE: ./mm/memory.c:444:
+		lpgd =3D pgd_offset(lvma->vm_mm, address);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#931: FILE: ./mm/memory.c:445:
+		lpmd =3D pmd_offset(lpgd, address);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#939: FILE: ./mm/memory.c:453:
+		ptepage =3D pmd_page(*lpmd);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#949: FILE: ./mm/memory.c:463:
+			pmdval =3D pmd_mkwrite(*lpmd);
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#951: FILE: ./mm/memory.c:465:
+			pmdval =3D pmd_wrprotect(*lpmd);
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#953: FILE: ./mm/memory.c:467:
+		pte =3D pte_page_map(ptepage, address);
 		    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1012: FILE: ./mm/memory.c:546:
+int share_page_range(struct mm_struct *dst, struct mm_struct *src,
+	struct vm_area_struct *vma, pmd_t **prev_pmd)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1015: FILE: ./mm/memory.c:549:
+	unsigned long address =3D vma->vm_start;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1016: FILE: ./mm/memory.c:550:
+	unsigned long end =3D vma->vm_end;
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1017: FILE: ./mm/memory.c:551:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1021: FILE: ./mm/memory.c:555:
+	src_pgd =3D pgd_offset(src, address)-1;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1021: FILE: ./mm/memory.c:555:
+	src_pgd =3D pgd_offset(src, address)-1;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1022: FILE: ./mm/memory.c:556:
+	dst_pgd =3D pgd_offset(dst, address)-1;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1022: FILE: ./mm/memory.c:556:
+	dst_pgd =3D pgd_offset(dst, address)-1;
 	                                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1025: FILE: ./mm/memory.c:559:
+		pmd_t * src_pmd, * dst_pmd;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1025: FILE: ./mm/memory.c:559:
+		pmd_t * src_pmd, * dst_pmd;
 		                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: ./mm/memory.c:562:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1034: FILE: ./mm/memory.c:568:
+skip_share_pmd_range:	address =3D (address + PGDIR_SIZE) & PGDIR_MASK;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1034: FILE: ./mm/memory.c:568:
+skip_share_pmd_range:	address =3D (address + PGDIR_SIZE) & PGDIR_MASK;
                      	        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1035: FILE: ./mm/memory.c:569:
+			if (!address || (address >=3D end))
 			                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1040: FILE: ./mm/memory.c:574:
+		src_pmd =3D pmd_offset(src_pgd, address);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1041: FILE: ./mm/memory.c:575:
+		dst_pmd =3D pmd_alloc(dst, dst_pgd, address);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1048: FILE: ./mm/memory.c:582:
+			pmd_t	pmdval =3D *src_pmd;
 			     	       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1048: FILE: ./mm/memory.c:582:
+			pmd_t	pmdval =3D *src_pmd;
 			     	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1049: FILE: ./mm/memory.c:583:
+			struct page *ptepage =3D pmd_page(pmdval);
 			                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1064: FILE: ./mm/memory.c:598:
+			if ((((vma->vm_flags & (VM_SHARED|VM_MAYWRITE)) !=3D
 			                                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1064: FILE: ./mm/memory.c:598:
+			if ((((vma->vm_flags & (VM_SHARED|VM_MAYWRITE)) !=3D
 			                                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptepage->index < vma->vm_start'
#1064: FILE: ./mm/memory.c:598:
+			if ((((vma->vm_flags & (VM_SHARED|VM_MAYWRITE)) !=3D
+			    (VM_SHARED|VM_MAYWRITE)) ||
+			    (ptepage->index < vma->vm_start) ||
+			    ((ptepage->index + PMD_SIZE) > vma->vm_end)) &&
+			    pmd_write(pmdval)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1065: FILE: ./mm/memory.c:599:
+			    (VM_SHARED|VM_MAYWRITE)) ||
 			              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1069: FILE: ./mm/memory.c:603:
+				pmdval =3D pmd_wrprotect(pmdval);
 				       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1075: FILE: ./mm/memory.c:609:
+			if (src_pmd !=3D *prev_pmd) {
 			            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1075: FILE: ./mm/memory.c:609:
+			if (src_pmd !=3D *prev_pmd) {
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1078: FILE: ./mm/memory.c:612:
+				*prev_pmd =3D src_pmd;
 				          ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1079: FILE: ./mm/memory.c:613:
+				dst->rss +=3D ptepage->private;
 				         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1082: FILE: ./mm/memory.c:616:
+skip_share_pte_range:	address =3D (address + PMD_SIZE) & PMD_MASK;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1082: FILE: ./mm/memory.c:616:
+skip_share_pte_range:	address =3D (address + PMD_SIZE) & PMD_MASK;
                      	        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1083: FILE: ./mm/memory.c:617:
+			if (address >=3D end)
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1116: FILE: ./mm/memory.c:705:
+			ptepage =3D pmd_page(*src_pmd);
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1131: FILE: ./mm/memory.c:723:
+				page =3D pte_page(pte);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1137: FILE: ./mm/memory.c:727:
+				page =3D pfn_to_page(pfn);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1178: FILE: ./mm/memory.c:776:
+	struct mm_struct *mm =3D tlb->mm;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1179: FILE: ./mm/memory.c:777:
+	struct page *ptepage =3D pmd_page(*pmd);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1195: FILE: ./mm/memory.c:784:
+	ptep =3D pte_offset_map(pmd, address);
 	     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1215: FILE: ./mm/memory.c:819:
 }
+static void zap_pmd_range(mmu_gather_t **tlb, pgd_t * dir, unsigned long =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1215: FILE: ./mm/memory.c:819:
+static void zap_pmd_range(mmu_gather_t **tlb, pgd_t * dir, unsigned long =

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1220: FILE: ./mm/memory.c:823:
+	struct mm_struct *mm =3D (*tlb)->mm;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1220: FILE: ./mm/memory.c:823:
+	struct mm_struct *mm =3D (*tlb)->mm;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1238: FILE: ./mm/memory.c:849:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#1242: FILE: ./mm/memory.c:853:
+			if ((address <=3D ptepage->index) &&
 			             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1243: FILE: ./mm/memory.c:854:
+			    (end >=3D (ptepage->index + PMD_SIZE))) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1243: FILE: ./mm/memory.c:854:
+			    (end >=3D (ptepage->index + PMD_SIZE))) {
 			         ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#1246: FILE: ./mm/memory.c:857:
+				mm->rss -=3D ptepage->private;
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1254: FILE: ./mm/memory.c:865:
+				pte =3D pte_unshare(mm, pmd, address);
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1256: FILE: ./mm/memory.c:867:
+				*tlb =3D tlb_gather_mmu(mm, 0);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1257: FILE: ./mm/memory.c:868:
+				ptepage =3D pmd_page(*pmd);
 				        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1271: FILE: ./mm/memory.c:879:
 }
+void unmap_page_range(mmu_gather_t **tlb, struct vm_area_struct *vma, =

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: ./mm/memory.c:937:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1296: FILE: ./mm/memory.c:937:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: ./mm/memory.c:937:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1304: FILE: ./mm/memory.c:948:
 }
+/**

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1323: FILE: ./mm/memory.c:967:
+	tlb =3D tlb_gather_mmu(mm, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1325: FILE: ./mm/memory.c:969:
+	vma =3D mm->mmap;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1330: FILE: ./mm/memory.c:974:
+		address =3D vma->vm_start;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1332: FILE: ./mm/memory.c:976:
+		vm_end =3D vma->vm_end;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1342: FILE: ./mm/memory.c:986:
+		vma =3D vma->vm_next;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1358: FILE: ./mm/memory.c:1002:
+			if (vma->vm_start =3D=3D vm_end) {
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1358: FILE: ./mm/memory.c:1002:
+			if (vma->vm_start =3D=3D vm_end) {
 			                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1358: FILE: ./mm/memory.c:1002:
+			if (vma->vm_start =3D=3D vm_end) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1358: FILE: ./mm/memory.c:1002:
+			if (vma->vm_start =3D=3D vm_end) {
+				goto next_vma;
+			}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1362: FILE: ./mm/memory.c:1006:
+		pgd =3D pgd_offset(mm, address);
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1371: FILE: ./mm/memory.c:1015:
+				address +=3D PGDIR_SIZE;
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1373: FILE: ./mm/memory.c:1017:
+					address =3D vm_end;
 					        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1376: FILE: ./mm/memory.c:1020:
+			pmd =3D pmd_offset(pgd, address);
 			    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1378: FILE: ./mm/memory.c:1022:
+				pmd_end =3D (address + PGDIR_SIZE) & PGDIR_MASK;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1378: FILE: ./mm/memory.c:1022:
+				pmd_end =3D (address + PGDIR_SIZE) & PGDIR_MASK;
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1380: FILE: ./mm/memory.c:1024:
+				pmd_end =3D vm_end;
 				        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1390: FILE: ./mm/memory.c:1034:
+^I^I^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1391: FILE: ./mm/memory.c:1035:
+				ptepage =3D pmd_page(*pmd);
 				        ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#1397: FILE: ./mm/memory.c:1041:
+					mm->rss -=3D ptepage->private;
 					        ^

CHECK:BRACES: Unbalanced braces around else statement
#1399: FILE: ./mm/memory.c:1043:
+				} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1406: FILE: ./mm/memory.c:1050:
+				address =3D  (address + PMD_SIZE) & PMD_MASK;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1406: FILE: ./mm/memory.c:1050:
+				address =3D  (address + PMD_SIZE) & PMD_MASK;
 				        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1407: FILE: ./mm/memory.c:1051:
+				if (address >=3D pmd_end) {
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1408: FILE: ./mm/memory.c:1052:
+					address =3D pmd_end;
 					        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1417: FILE: ./mm/memory.c:1061:
+
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1431: FILE: ./mm/memory.c:1396:
+	struct page *ptepage =3D pmd_page(*pmd);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1459: FILE: ./mm/memory.c:1430:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1490: FILE: ./mm/memory.c:1581:
+	struct page *ptepage =3D pmd_page(*pmd);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1506: FILE: ./mm/memory.c:1597:
+			ptepage =3D pmd_page(*pmd);
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1524: FILE: ./mm/memory.c:1621:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1556: FILE: ./mm/memory.c:1665:
+	struct page *ptepage =3D pmd_page(*pmd);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1573: FILE: ./mm/memory.c:1679:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1602: FILE: ./mm/memory.c:1727:
+	struct page *ptepage =3D pmd_page(*pmd);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1619: FILE: ./mm/memory.c:1757:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1663: FILE: ./mm/memory.c:1869:
+		pte_t * pte;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1668: FILE: ./mm/memory.c:1874:
+			pte =3D pte_unshare(mm, pmd, address);
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1670: FILE: ./mm/memory.c:1876:
+			pte =3D pte_try_to_share(mm, vma, pmd, address);
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1672: FILE: ./mm/memory.c:1878:
+				pte =3D pte_alloc_map(mm, pmd, address);
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1678: FILE: ./mm/memory.c:1884:
+		pte =3D pte_alloc_map(mm, pmd, address);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1713: FILE: ./mm/mremap.c:49:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1717: FILE: ./mm/mremap.c:53:
+		pte =3D pte_unshare(mm, pmd, addr);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1718: FILE: ./mm/mremap.c:54:
+		ptepage =3D pmd_page(*pmd);
 		        ^

CHECK:BRACES: Unbalanced braces around else statement
#1719: FILE: ./mm/mremap.c:55:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1721: FILE: ./mm/mremap.c:57:
+		pte =3D pte_offset_map_nested(pmd, addr);
 		    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1732: FILE: ./mm/mremap.c:68:
 }
+static inline void drop_pte_nested(struct mm_struct *mm, unsigned long =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1734: FILE: ./mm/mremap.c:69:
+static inline void drop_pte_nested(struct mm_struct *mm, unsigned long =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1739: FILE: ./mm/mremap.c:74:
+	pgd =3D pgd_offset(mm, addr);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1740: FILE: ./mm/mremap.c:75:
+	pmd =3D pmd_offset(pgd, addr);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1741: FILE: ./mm/mremap.c:76:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1748: FILE: ./mm/mremap.c:82:
+static inline void drop_pte(struct mm_struct *mm, unsigned long addr, =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1753: FILE: ./mm/mremap.c:87:
+	pgd =3D pgd_offset(mm, addr);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1754: FILE: ./mm/mremap.c:88:
+	pmd =3D pmd_offset(pgd, addr);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1755: FILE: ./mm/mremap.c:89:
+	ptepage =3D pmd_page(*pmd);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1776: FILE: ./mm/mremap.c:117:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1781: FILE: ./mm/mremap.c:122:
+			ptepage =3D pmd_page(*pmd);
 			        ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1818: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =
                                             ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1818: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mmu_gather_t **' should also have an identifier name
#1818: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ddress' should also have an identifier name
#1818: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1842: FILE: ./mm/mmap.c:1281:
 }
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1943: FILE: ./mm/rmap.c:56:
 };
+static kmem_cache_t	*mm_chain_cache;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1951: FILE: ./mm/rmap.c:110:
 }
+static inline struct mm_chain *mm_chain_alloc(void)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1955: FILE: ./mm/rmap.c:114:
+	ret =3D kmem_cache_alloc(mm_chain_cache, GFP_ATOMIC);
 	    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1960: FILE: ./mm/rmap.c:119:
+static void mm_chain_free(struct mm_chain *mc,
+		struct mm_chain *prev_mc, struct page *page)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1963: FILE: ./mm/rmap.c:122:
+		prev_mc->next =3D mc->next;
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1965: FILE: ./mm/rmap.c:124:
+		page->pte.mmchain =3D mc->next;
 		                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1977: FILE: ./mm/rmap.c:188:
 }
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1988: FILE: ./mm/rmap.c:199:
+void pgtable_add_rmap_locked(struct page * page, struct mm_struct * mm,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1988: FILE: ./mm/rmap.c:199:
+void pgtable_add_rmap_locked(struct page * page, struct mm_struct * mm,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1995: FILE: ./mm/rmap.c:206:
+	extern int mem_init_done;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2001: FILE: ./mm/rmap.c:212:
+	BUG_ON(mm =3D=3D NULL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2001: FILE: ./mm/rmap.c:212:
+	BUG_ON(mm =3D=3D NULL);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2001: FILE: ./mm/rmap.c:212:
+	BUG_ON(mm =3D=3D NULL);
 	             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2002: FILE: ./mm/rmap.c:213:
+	BUG_ON(!PagePtepage(page));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2004: FILE: ./mm/rmap.c:215:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2006: FILE: ./mm/rmap.c:217:
+		mc =3D mm_chain_alloc();
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2007: FILE: ./mm/rmap.c:218:
+		mc->mm =3D page->pte.mmdirect;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2008: FILE: ./mm/rmap.c:219:
+		mc->next =3D NULL;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2009: FILE: ./mm/rmap.c:220:
+		page->pte.mmchain =3D mc;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2014: FILE: ./mm/rmap.c:225:
+		mc =3D mm_chain_alloc();
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2015: FILE: ./mm/rmap.c:226:
+		mc->mm =3D mm;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2016: FILE: ./mm/rmap.c:227:
+		mc->next =3D page->pte.mmchain;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2017: FILE: ./mm/rmap.c:228:
+		page->pte.mmchain =3D mc;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2019: FILE: ./mm/rmap.c:230:
+		page->pte.mmdirect =3D mm;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2021: FILE: ./mm/rmap.c:232:
+		page->index =3D address & ~((PTRS_PER_PTE * PAGE_SIZE) - 1);
 		            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2036: FILE: ./mm/rmap.c:246:
+void pgtable_remove_rmap_locked(struct page * page, struct mm_struct *mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2038: FILE: ./mm/rmap.c:248:
+	struct mm_chain * mc, * prev_mc =3D NULL;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#2038: FILE: ./mm/rmap.c:248:
+	struct mm_chain * mc, * prev_mc =3D NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2038: FILE: ./mm/rmap.c:248:
+	struct mm_chain * mc, * prev_mc =3D NULL;
 	                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2041: FILE: ./mm/rmap.c:251:
+	BUG_ON(mm =3D=3D NULL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2041: FILE: ./mm/rmap.c:251:
+	BUG_ON(mm =3D=3D NULL);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2041: FILE: ./mm/rmap.c:251:
+	BUG_ON(mm =3D=3D NULL);
 	             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2042: FILE: ./mm/rmap.c:252:
+	BUG_ON(!PagePtepage(page));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2046: FILE: ./mm/rmap.c:256:
+		if (page->pte.mmdirect =3D=3D mm) {
 		                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2046: FILE: ./mm/rmap.c:256:
+		if (page->pte.mmdirect =3D=3D mm) {
 		                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2046: FILE: ./mm/rmap.c:256:
+		if (page->pte.mmdirect =3D=3D mm) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2047: FILE: ./mm/rmap.c:257:
+			page->pte.mmdirect =3D NULL;
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2049: FILE: ./mm/rmap.c:259:
+			page->index =3D 0;
 			            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2054: FILE: ./mm/rmap.c:264:
+		BUG_ON(page->pte.mmchain->next =3D=3D NULL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2054: FILE: ./mm/rmap.c:264:
+		BUG_ON(page->pte.mmchain->next =3D=3D NULL);
 		                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2054: FILE: ./mm/rmap.c:264:
+		BUG_ON(page->pte.mmchain->next =3D=3D NULL);
 		                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2056: FILE: ./mm/rmap.c:266:
+		for (mc =3D page->pte.mmchain; mc; prev_mc =3D mc, mc =3D mc->next) {
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2056: FILE: ./mm/rmap.c:266:
+		for (mc =3D page->pte.mmchain; mc; prev_mc =3D mc, mc =3D mc->next) {
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2056: FILE: ./mm/rmap.c:266:
+		for (mc =3D page->pte.mmchain; mc; prev_mc =3D mc, mc =3D mc->next) {
 		                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2057: FILE: ./mm/rmap.c:267:
+			if (mc->mm =3D=3D mm) {
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2057: FILE: ./mm/rmap.c:267:
+			if (mc->mm =3D=3D mm) {
 			              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2057: FILE: ./mm/rmap.c:267:
+			if (mc->mm =3D=3D mm) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2060: FILE: ./mm/rmap.c:270:
+				mc =3D page->pte.mmchain;
 				   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2062: FILE: ./mm/rmap.c:272:
+					page->pte.mmdirect =3D mc->mm;
 					                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2070: FILE: ./mm/rmap.c:280:
+	BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2082: FILE: ./mm/rmap.c:292:
+void pgtable_add_rmap(struct page * page, struct mm_struct * mm,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2082: FILE: ./mm/rmap.c:292:
+void pgtable_add_rmap(struct page * page, struct mm_struct * mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2083: FILE: ./mm/rmap.c:293:
+void pgtable_add_rmap(struct page * page, struct mm_struct * mm,
+			     unsigned long address)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2098: FILE: ./mm/rmap.c:307:
+void pgtable_remove_rmap(struct page * page, struct mm_struct *mm)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2122: FILE: ./mm/rmap.c:334:
+	BUG_ON(PagePtepage(page));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2130: FILE: ./mm/rmap.c:352:
+			int count =3D 0;
 			          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2133: FILE: ./mm/rmap.c:354:
+				for (i =3D 0; i < NRPTE; i++, count++) {
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2137: FILE: ./mm/rmap.c:356:
+					if (p && p =3D=3D pte_paddr) {
 					           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2137: FILE: ./mm/rmap.c:356:
+					if (p && p =3D=3D pte_paddr) {
 					              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2137: FILE: ./mm/rmap.c:356:
+					if (p && p =3D=3D pte_paddr) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#2138: FILE: ./mm/rmap.c:357:
+						printk(KERN_ERR "page_add_rmap: page %08lx (count %d), ptep %08lx, =

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2138: FILE: ./mm/rmap.c:357:
+						printk(KERN_ERR "page_add_rmap: page %08lx (count %d), ptep %08lx, =

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2159: FILE: ./mm/rmap.c:433:
+	BUG_ON(PagePtepage(page));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2169: FILE: ./mm/rmap.c:501:
 }
+static int pgtable_check_mlocked_mm(struct mm_struct *mm, unsigned long =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2171: FILE: ./mm/rmap.c:502:
+static int pgtable_check_mlocked_mm(struct mm_struct *mm, unsigned long =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2173: FILE: ./mm/rmap.c:504:
+	int ret =3D SWAP_SUCCESS;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2176: FILE: ./mm/rmap.c:507:
+	vma =3D find_vma(mm, address);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2178: FILE: ./mm/rmap.c:509:
+		ret =3D SWAP_FAIL;
 		    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2183: FILE: ./mm/rmap.c:514:
+	if (vma->vm_flags & VM_LOCKED) {
+		ret =3D SWAP_FAIL;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2184: FILE: ./mm/rmap.c:515:
+		ret =3D SWAP_FAIL;
 		    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2192: FILE: ./mm/rmap.c:522:
+static int pgtable_check_mlocked(struct page *ptepage, unsigned long =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2194: FILE: ./mm/rmap.c:524:
+	int ret =3D SWAP_SUCCESS;
 	        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2197: FILE: ./mm/rmap.c:527:
+	BUG_ON(!PagePtepage(ptepage));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2200: FILE: ./mm/rmap.c:530:
+		ret =3D pgtable_check_mlocked_mm(ptepage->pte.mmdirect, address);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2204: FILE: ./mm/rmap.c:534:
+	for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2204: FILE: ./mm/rmap.c:534:
+	for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {
 	                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2206: FILE: ./mm/rmap.c:536:
+		BUG_ON(mc->mm =3D=3D NULL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2206: FILE: ./mm/rmap.c:536:
+		BUG_ON(mc->mm =3D=3D NULL);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2206: FILE: ./mm/rmap.c:536:
+		BUG_ON(mc->mm =3D=3D NULL);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2208: FILE: ./mm/rmap.c:538:
+		ret =3D pgtable_check_mlocked_mm(mc->mm, address);
 		    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2209: FILE: ./mm/rmap.c:539:
+		if (ret !=3D SWAP_SUCCESS)
 		        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2228: FILE: ./mm/rmap.c:555:
+static int pgtable_unmap_one_mm(struct mm_struct *mm, unsigned long =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2230: FILE: ./mm/rmap.c:557:
+	int ret =3D SWAP_SUCCESS;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2233: FILE: ./mm/rmap.c:560:
+	vma =3D find_vma(mm, address);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2235: FILE: ./mm/rmap.c:562:
+		ret =3D SWAP_FAIL;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2258: FILE: ./mm/rmap.c:584:
+	int ret =3D SWAP_SUCCESS;
 	        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2261: FILE: ./mm/rmap.c:587:
+	BUG_ON(!PagePtepage(ptepage));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2265: FILE: ./mm/rmap.c:591:
+		ret =3D pgtable_unmap_one_mm(ptepage->pte.mmdirect, address);
 		    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2266: FILE: ./mm/rmap.c:592:
+		if (ret !=3D SWAP_SUCCESS)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2268: FILE: ./mm/rmap.c:594:
+	} else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2268: FILE: ./mm/rmap.c:594:
+	} else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {
 	                                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2268: FILE: ./mm/rmap.c:594:
+	} else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2268: FILE: ./mm/rmap.c:594:
+	} else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2269: FILE: ./mm/rmap.c:595:
+		ret =3D pgtable_unmap_one_mm(mc->mm, address);
 		    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2270: FILE: ./mm/rmap.c:596:
+		if (ret !=3D SWAP_SUCCESS)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2293: FILE: ./mm/rmap.c:619:
+	else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next)
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2293: FILE: ./mm/rmap.c:619:
+	else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next)
 	                                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2293: FILE: ./mm/rmap.c:619:
+	else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2293: FILE: ./mm/rmap.c:619:
+	else for (mc =3D ptepage->pte.mmchain; mc; mc =3D mc->next)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2317: FILE: ./mm/rmap.c:645:
+	struct page *ptepage =3D kmap_atomic_to_page(ptep);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2318: FILE: ./mm/rmap.c:646:
+	unsigned long address =3D ptep_to_address(ptep);
 	                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2330: FILE: ./mm/rmap.c:649:
+	BUG_ON(!PagePtepage(ptepage));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2342: FILE: ./mm/rmap.c:655:
+	ret =3D pgtable_check_mlocked(ptepage, address);
 	    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2343: FILE: ./mm/rmap.c:656:
+	if (ret !=3D SWAP_SUCCESS)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2346: FILE: ./mm/rmap.c:658:
+	pte =3D ptep_get_and_clear(ptep);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2351: FILE: ./mm/rmap.c:659:
+	ret =3D pgtable_unmap_one(ptepage, address);
 	    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2352: FILE: ./mm/rmap.c:660:
+	if (ret !=3D SWAP_SUCCESS) {
 	        ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2387: FILE: ./mm/rmap.c:796:
 {
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2388: FILE: ./mm/rmap.c:797:
+	mm_chain_cache =3D kmem_cache_create(	"mm_chain",
 	               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2388: FILE: ./mm/rmap.c:797:
+	mm_chain_cache =3D kmem_cache_create(	"mm_chain",

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2426: FILE: ./mm/fremap.c:65:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2428: FILE: ./mm/fremap.c:67:
+			pte =3D pte_unshare(mm, pmd, addr);
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2429: FILE: ./mm/fremap.c:68:
+			ptepage =3D pmd_page(*pmd);
 			        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2433: FILE: ./mm/fremap.c:72:
+#endif^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421653.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 274 errors, 37 warnings, 38 checks, 2273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421653.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
