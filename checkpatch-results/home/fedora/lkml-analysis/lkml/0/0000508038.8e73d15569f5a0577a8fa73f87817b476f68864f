WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#40: 
> prefered way to export events related to interface changes. So, I
  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
diff -u -p linux/include/linux/wireless.w12.h linux/include/linux/wireless.h

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#90: FILE: include/linux/wireless.h:584:
+struct iwinfomsg
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#109: FILE: include/linux/rtnetlink.h:50:
+#define RTM_SETWIRELESS	(RTM_BASE+32)
                        	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#111: FILE: include/linux/rtnetlink.h:52:
+#define	RTM_MAX		(RTM_BASE+33)
        	       		         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: include/linux/rtnetlink.h:575:
+extern void rtmsg_iwinfo(int type, struct net_device *dev, unsigned command);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/rtnetlink.h:575:
+extern void rtmsg_iwinfo(int type, struct net_device *dev, unsigned command);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: include/linux/rtnetlink.h:581:
+#define rtmsg_iwinfo(a,b,c) do { } while (0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: include/linux/rtnetlink.h:581:
+#define rtmsg_iwinfo(a,b,c) do { } while (0)
                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#142: FILE: net/core/dev.c:2249:
+					 * interesting configuration change */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!err'
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&
+					   ((cmd == SIOCSIWNWID) ||
+					    (cmd == SIOCSIWESSID) || 
+					    (cmd == SIOCSIWMODE) || 
+					    (cmd == SIOCSIWFREQ))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == SIOCSIWNWID'
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&
+					   ((cmd == SIOCSIWNWID) ||
+					    (cmd == SIOCSIWESSID) || 
+					    (cmd == SIOCSIWMODE) || 
+					    (cmd == SIOCSIWFREQ))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == SIOCSIWESSID'
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&
+					   ((cmd == SIOCSIWNWID) ||
+					    (cmd == SIOCSIWESSID) || 
+					    (cmd == SIOCSIWMODE) || 
+					    (cmd == SIOCSIWFREQ))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == SIOCSIWMODE'
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&
+					   ((cmd == SIOCSIWNWID) ||
+					    (cmd == SIOCSIWESSID) || 
+					    (cmd == SIOCSIWMODE) || 
+					    (cmd == SIOCSIWFREQ))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == SIOCSIWFREQ'
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&
+					   ((cmd == SIOCSIWNWID) ||
+					    (cmd == SIOCSIWESSID) || 
+					    (cmd == SIOCSIWMODE) || 
+					    (cmd == SIOCSIWFREQ))) {

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: net/core/dev.c:2250:
+					if((!err) && (dev->flags & IFF_UP) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: net/core/dev.c:2252:
+^I^I^I^I^I    (cmd == SIOCSIWESSID) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: net/core/dev.c:2253:
+^I^I^I^I^I    (cmd == SIOCSIWMODE) || $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#174: FILE: net/core/rtnetlink.c:274:
+void rtmsg_iwinfo(int type, struct net_device *dev, unsigned command)

WARNING:RETURN_VOID: void function return statements are not generally useful
#201: FILE: net/core/rtnetlink.c:301:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 6 warnings, 8 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
