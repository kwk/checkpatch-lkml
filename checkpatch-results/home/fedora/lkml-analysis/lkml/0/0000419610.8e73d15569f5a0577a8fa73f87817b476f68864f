ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: drivers/block/cciss.c:177:
+                h->Qdepth, h->maxQsinceinit, h->max_outstanding, h->maxSG,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/block/cciss.c:177:
+                h->Qdepth, h->maxQsinceinit, h->max_outstanding, h->maxSG,$

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#58: FILE: drivers/block/cciss.c:177:
+                h->Qdepth, h->maxQsinceinit, h->max_outstanding, h->maxSG,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <maxQsinceinit>
#58: FILE: drivers/block/cciss.c:177:
+                h->Qdepth, h->maxQsinceinit, h->max_outstanding, h->maxSG,

CHECK:CAMELCASE: Avoid CamelCase: <maxSG>
#58: FILE: drivers/block/cciss.c:177:
+                h->Qdepth, h->maxQsinceinit, h->max_outstanding, h->maxSG,

CHECK:CAMELCASE: Avoid CamelCase: <SGDescriptor_struct>
#86: FILE: drivers/block/cciss.c:272:
+		hba[ctlr]->sglist_pool = (SGDescriptor_struct *)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/block/cciss.c:274:
+		pci_alloc_consistent(hba[ctlr]->pdev,
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#88: FILE: drivers/block/cciss.c:274:
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *
 			                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hba[ctlr]->sglist_pool_dhandle
#90: FILE: drivers/block/cciss.c:276:
+			&(hba[ctlr]->sglist_pool_dhandle));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[ctlr]->sglist_pool"
#91: FILE: drivers/block/cciss.c:277:
+		if (hba[ctlr]->sglist_pool == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#92: FILE: drivers/block/cciss.c:278:
+			printk(KERN_WARNING "cciss%d: Scatter-gather list "

WARNING:SPLIT_STRING: quoted string split across lines
#93: FILE: drivers/block/cciss.c:279:
+			printk(KERN_WARNING "cciss%d: Scatter-gather list "
+				"chaining not enabled.", ctlr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hba[i]->sglist_pool"
#100: FILE: drivers/block/cciss.c:286:
+	if (supports_sg_chaining(hba[i]) && hba[i]->sglist_pool != NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: drivers/block/cciss.c:287:
+		return CONFIG_CISS_MAX_SG_PAGES * (MAXSGENTRIES-1);
 		                                               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->err_info"
#125: FILE: drivers/block/cciss.c:317:
+		if (c->err_info == NULL) {

CHECK:SPACING: No space is necessary after a cast
#132: FILE: drivers/block/cciss.c:324:
+			((void *) c->SG - (void *) c);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->sglist_pool"
#135: FILE: drivers/block/cciss.c:327:
+		if (h->sglist_pool != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->sgdlist[1].sgd"
#141: FILE: drivers/block/cciss.c:333:
+			if (c->sgdlist[1].sgd == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/block/cciss.c:335:
+				pci_free_consistent(h->pdev,
+					sizeof(ErrorInfo_struct), c->err_info,

CHECK:CAMELCASE: Avoid CamelCase: <ErrorInfo_struct>
#143: FILE: drivers/block/cciss.c:335:
+					sizeof(ErrorInfo_struct), c->err_info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/block/cciss.c:338:
+				pci_free_consistent(h->pdev,
+					sizeof(CommandList_struct), c,

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#146: FILE: drivers/block/cciss.c:338:
+					sizeof(CommandList_struct), c,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#151: FILE: drivers/block/cciss.c:343:
+			for (j=1;j<CONFIG_CISS_MAX_SG_PAGES-1; j++) {
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#151: FILE: drivers/block/cciss.c:343:
+			for (j=1;j<CONFIG_CISS_MAX_SG_PAGES-1; j++) {
 			        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#151: FILE: drivers/block/cciss.c:343:
+			for (j=1;j<CONFIG_CISS_MAX_SG_PAGES-1; j++) {
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#151: FILE: drivers/block/cciss.c:343:
+			for (j=1;j<CONFIG_CISS_MAX_SG_PAGES-1; j++) {
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: drivers/block/cciss.c:344:
+				c->sgdlist[j+1].sgd =
 				            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: drivers/block/cciss.c:345:
+					(void *)c->sgdlist[j].sgd+j*SGD_SIZE;
 					                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#153: FILE: drivers/block/cciss.c:345:
+					(void *)c->sgdlist[j].sgd+j*SGD_SIZE;
 					                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: drivers/block/cciss.c:346:
+				c->sgdlist[j+1].dma =
 				            ^

CHECK:SPACING: No space is necessary after a cast
#167: FILE: drivers/block/cciss.c:371:
+			((void *) c->SG - (void *) c);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->sglist_pool"
#168: FILE: drivers/block/cciss.c:372:
+		if (h->sglist_pool != NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: drivers/block/cciss.c:373:
+			for (j=0; j < CONFIG_CISS_MAX_SG_PAGES-1 ; j++) {
 			      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#169: FILE: drivers/block/cciss.c:373:
+			for (j=0; j < CONFIG_CISS_MAX_SG_PAGES-1 ; j++) {
 			                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#170: FILE: drivers/block/cciss.c:374:
+				c->sgdlist[j+1].sgd =
 				            ^

CHECK:SPACING: No space is necessary after a cast
#171: FILE: drivers/block/cciss.c:375:
+					(void *) h->sglist_pool +

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: drivers/block/cciss.c:377:
+					(i * (CONFIG_CISS_MAX_SG_PAGES - 1)+j);
 					                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/block/cciss.c:378:
+^I^I^I^I// This memset is paranoia. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#176: FILE: drivers/block/cciss.c:380:
+				c->sgdlist[j+1].dma =
 				            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: drivers/block/cciss.c:383:
+					(i * (CONFIG_CISS_MAX_SG_PAGES - 1)+j);
 					                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#223: FILE: drivers/block/cciss.c:1865:
+	/* this function gets called back by blk_rq_map_sg_one_by_one
+	   once for each scatter gather element. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: drivers/block/cciss.c:1865:
+	   once for each scatter gather element. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#232: FILE: drivers/block/cciss.c:1874:
+	if (sgs->sgelem == MAXSGENTRIES-1 && h->sglist_pool != NULL) {
 	                               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->sglist_pool"
#232: FILE: drivers/block/cciss.c:1874:
+	if (sgs->sgelem == MAXSGENTRIES-1 && h->sglist_pool != NULL) {

CHECK:SPACING: No space is necessary after a cast
#235: FILE: drivers/block/cciss.c:1877:
+		temp64.val = (__u64) sgs->c->sgdlist[sgs->sgd_number].dma;

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#236: FILE: drivers/block/cciss.c:1878:
+		sgd->Addr.lower = temp64.val32.lower;

CHECK:CAMELCASE: Avoid CamelCase: <Ext>
#238: FILE: drivers/block/cciss.c:1880:
+		sgd->Ext = 0x80000000;	// mark as a pointer to next SG page

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#239: FILE: drivers/block/cciss.c:1881:
+		sgd->Len = SGD_SIZE;	// total no. of bytes in a SG page.

CHECK:SPACING: No space is necessary after a cast
#245: FILE: drivers/block/cciss.c:1887:
+	temp64.val = (__u64) pci_map_page(h->pdev, sg->page, sg->offset,

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#294: FILE: drivers/block/cciss.c:1953:
+	sgs.dir = (c->Request.Type.Direction == XFER_READ) ?

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#294: FILE: drivers/block/cciss.c:1953:
+	sgs.dir = (c->Request.Type.Direction == XFER_READ) ?

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#294: FILE: drivers/block/cciss.c:1953:
+	sgs.dir = (c->Request.Type.Direction == XFER_READ) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/block/cciss.c:1956:
+	seg = blk_rq_map_sg_one_by_one(q, creq,
+			(consume_sg_callback) cciss_setup_sg, &sgs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: drivers/block/cciss.c:1959:
+	if( sgs.total_sgs > h->maxSG)

ERROR:SPACING: space required before the open parenthesis '('
#312: FILE: drivers/block/cciss.c:1959:
+	if( sgs.total_sgs > h->maxSG)

CHECK:BRACES: braces {} should be used on all arms of this statement
#320: FILE: drivers/block/cciss.c:1966:
+	if (sgs.total_sgs > MAXSGENTRIES) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#321: FILE: drivers/block/cciss.c:1967:
+		c->Header.SGList = MAXSGENTRIES;

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#321: FILE: drivers/block/cciss.c:1967:
+		c->Header.SGList = MAXSGENTRIES;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#323: FILE: drivers/block/cciss.c:1969:
+		c->sgdlist[sgs.sgd_number-1].sgd[MAXSGENTRIES-1].Len =
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#323: FILE: drivers/block/cciss.c:1969:
+		c->sgdlist[sgs.sgd_number-1].sgd[MAXSGENTRIES-1].Len =
 		                                             ^

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: drivers/block/cciss.c:1971:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#328: FILE: drivers/block/cciss.c:1974:
+	c->Header.SGTotal = sgs.total_sgs;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: drivers/block/cciss.c:2442:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: drivers/block/cciss.c:2445:
+	if(hba[i]->cmd_pool_bits)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#340: FILE: drivers/block/cciss.c:2446:
+	if(hba[i]->cmd_pool_bits)
+		kfree(hba[i]->cmd_pool_bits);

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: drivers/block/cciss.c:2447:
+	if(hba[i]->cmd_pool)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/block/cciss.c:2449:
+		pci_free_consistent(hba[i]->pdev,
+			NR_CMDS * sizeof(CommandList_struct),

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: drivers/block/cciss.c:2451:
+	if(hba[i]->errinfo_pool)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/block/cciss.c:2453:
+		pci_free_consistent(hba[i]->pdev,
+			NR_CMDS * sizeof( ErrorInfo_struct),

ERROR:SPACING: space prohibited after that open parenthesis '('
#347: FILE: drivers/block/cciss.c:2453:
+			NR_CMDS * sizeof( ErrorInfo_struct),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hba[i]->sglist_pool"
#350: FILE: drivers/block/cciss.c:2456:
+	if (hba[i]->sglist_pool != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/block/cciss.c:2458:
+		pci_free_consistent(hba[i]->pdev,
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#352: FILE: drivers/block/cciss.c:2458:
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *
 			                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#357: FILE: drivers/block/cciss.c:2463:
+	unregister_blkdev(MAJOR_NR+i, hba[i]->devname);
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: drivers/block/cciss.c:2466:
+	printk( KERN_ERR "cciss: out of memory");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#360: FILE: drivers/block/cciss.c:2466:
+	printk( KERN_ERR "cciss: out of memory");

ERROR:SPACING: space prohibited after that open parenthesis '('
#360: FILE: drivers/block/cciss.c:2466:
+	printk( KERN_ERR "cciss: out of memory");

CHECK:SPACING: No space is necessary after a cast
#372: FILE: drivers/block/cciss.c:2519:
+	hba[i]->sglist_pool_dhandle = (dma_addr_t) NULL;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#400: FILE: drivers/block/cciss.c:2544:
 		|| (hba[i]->cmd_pool == NULL)
+		|| (hba[i]->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[i]->errinfo_pool"
#400: FILE: drivers/block/cciss.c:2544:
+		|| (hba[i]->errinfo_pool == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hba[i]->sglist_pool"
#443: FILE: drivers/block/cciss.c:2646:
+	if (hba[i]->sglist_pool != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/block/cciss.c:2648:
+		pci_free_consistent(hba[i]->pdev,
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#445: FILE: drivers/block/cciss.c:2648:
+			(CONFIG_CISS_MAX_SG_PAGES-1) * MAXSGENTRIES *
 			                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: drivers/block/cciss_cmd.h:12:
+/* MAXSGENTRIES is the max scatter gather entries per SG page,
+   some adapters support chaining SG pages, using the last SG

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#460: FILE: drivers/block/cciss_cmd.h:13:
+   entry to point to the next SG page. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/block/cciss_cmd.h:255:
+  struct sgd_list_t sgdlist[CONFIG_CISS_MAX_SG_PAGES];$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#529: FILE: drivers/block/cciss_scsi.c:260:
+static int xmargin=24;
                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#549: FILE: drivers/block/cciss_scsi.c:336:
+	printk("SGS:\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#552: FILE: drivers/block/cciss_scsi.c:339:
+	for (i=0;i<cp->Header.SGTotal;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#552: FILE: drivers/block/cciss_scsi.c:339:
+	for (i=0;i<cp->Header.SGTotal;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#552: FILE: drivers/block/cciss_scsi.c:339:
+	for (i=0;i<cp->Header.SGTotal;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#552: FILE: drivers/block/cciss_scsi.c:339:
+	for (i=0;i<cp->Header.SGTotal;i++) {
 	                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#553: FILE: drivers/block/cciss_scsi.c:340:
+		printk("0x%08x%08x : %d: %d %s\n", sgd[sg].Addr.upper,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/block/cciss_scsi.c:341:
+		printk("0x%08x%08x : %d: %d %s\n", sgd[sg].Addr.upper,
+			sgd[sg].Addr.lower, sgd[sg].Len,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#555: FILE: drivers/block/cciss_scsi.c:342:
+			sgd[sg].Ext, sg >= MAXSGENTRIES-1 ? " chain" : "");
 			                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#557: FILE: drivers/block/cciss_scsi.c:344:
+		if (sg == MAXSGENTRIES-1 && ! sgd[sg].Ext &&
 		                      ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#557: FILE: drivers/block/cciss_scsi.c:344:
+		if (sg == MAXSGENTRIES-1 && ! sgd[sg].Ext &&
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/block/cciss_scsi.c:345:
+		if (sg == MAXSGENTRIES-1 && ! sgd[sg].Ext &&
+			cp->Header.SGTotal != cp->Header.SGList)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#559: FILE: drivers/block/cciss_scsi.c:346:
+			printk("Extended SG bit expected, but not set!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#567: FILE: drivers/block/cciss_scsi.c:354:
+	printk("Errorinfo:\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/block/Config.help:200:
+  This is the number of scatter gather pages to allocate for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/block/Config.help:201:
+  each command.  Each page can hold up to 31 address/length $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: drivers/block/Config.help:202:
+  pairs.  The minimum and default value is 1 page.  You may observe $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: drivers/block/Config.help:203:
+  the values reported in /proc/driver/cciss/cciss* for "Max SG $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/block/Config.help:204:
+  entries since init X/Y".  These two values, X and Y, are the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/block/Config.help:205:
+  maximum number of address/length pairs used by any one command $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: drivers/block/Config.help:206:
+  so far, and the total number of address/length pairs available $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 15 warnings, 66 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
