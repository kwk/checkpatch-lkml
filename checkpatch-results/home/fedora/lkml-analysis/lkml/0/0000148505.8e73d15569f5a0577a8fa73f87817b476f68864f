ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: fs/9p/fid.c:74:
+struct v9fs_fid *v9fs_fid_create(struct dentry *dentry, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: fs/9p/fid.c:75:
+struct v9fs_fid *v9fs_fid_create(struct dentry *dentry, 
+	struct v9fs_session_info *v9ses, int fid, int create)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: fs/9p/fid.c:119:
+ * v9fs_fid_walk_up - walks from the process current directory $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: fs/9p/fid.c:120:
+ * ^Iup to the specified dentry.$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfid"
#106: FILE: fs/9p/fid.c:131:
+	if (cfid == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#305: FILE: fs/9p/fid.h:57:
+struct v9fs_fid *v9fs_fid_get_created(struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: fs/9p/fid.h:59:
+struct v9fs_fid *v9fs_fid_create(struct dentry *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#308: FILE: fs/9p/fid.h:59:
+struct v9fs_fid *v9fs_fid_create(struct dentry *, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: fs/9p/fid.h:60:
+struct v9fs_fid *v9fs_fid_create(struct dentry *, 
+	struct v9fs_session_info *v9ses, int fid, int create);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#369: FILE: fs/9p/vfs_file.c:63:
+	dprintk(DEBUG_VFS, "inode: %p file: %p \n", inode, file);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fid)...) over kmalloc(sizeof(struct v9fs_fid)...)
#387: FILE: fs/9p/vfs_file.c:75:
+		fid = kmalloc(sizeof(struct v9fs_fid), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fid"
#388: FILE: fs/9p/vfs_file.c:76:
+		if (fid == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: fs/9p/vfs_inode.c:391:
+	result = v9fs_t_walk(v9ses, dirfidnum, wfidno,
+		(char *) file_dentry->d_name.name, NULL);

CHECK:SPACING: No space is necessary after a cast
#540: FILE: fs/9p/vfs_inode.c:391:
+		(char *) file_dentry->d_name.name, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CleanUpFid>
#545: FILE: fs/9p/vfs_inode.c:396:
+		goto CleanUpFid;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#549: FILE: fs/9p/vfs_inode.c:400:
+		if (!v9fs_t_clunk(v9ses, newfid, &fcall)) {
+			v9fs_put_idpool(wfidno, &v9ses->fidpool);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root_fid"
#758: FILE: fs/9p/vfs_super.c:165:
+		if (root_fid == NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148505.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 9 checks, 659 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148505.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
