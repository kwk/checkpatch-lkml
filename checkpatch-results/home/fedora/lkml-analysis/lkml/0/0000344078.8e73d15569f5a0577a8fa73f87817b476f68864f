WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
This patch was previously submitted against the 2.4.22-pre9 kernel. This patch adds failover support to the cciss driver when used along with the md driver.

WARNING:TYPO_SPELLING: 'acheived' may be misspelled - perhaps 'achieved'?
#49: FILE: Documentation/cciss.txt:133:
+For multipath configurations (acheived via a higher level driver, such
                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: Documentation/cciss.txt:139:
+reported as failed by the low level driver to trigger failing over to an $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: Documentation/cciss.txt:140:
+alternate controller.  The monitor threads allow the driver to detect such $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: Documentation/cciss.txt:141:
+situations and report outstanding i/o's as having failed so that recovery $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: Documentation/cciss.txt:142:
+actions such switching to an alternate controller can occur.  The monitor $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: Documentation/cciss.txt:143:
+threads periodically sends a trivial "no-operation" command down to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: Documentation/cciss.txt:147:
+"no-operation" command.  In the event that a deadline elapses before a no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: Documentation/cciss.txt:148:
+operation command completes, all outstanding commands on that controller $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: Documentation/cciss.txt:149:
+are reported back to the upper layers as having failed, and any new commands $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: Documentation/cciss.txt:150:
+sent to the controller are immediately reported back as failed. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: Documentation/cciss.txt:154:
+be enabled at runtime as well.  A system may have many adapters, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: Documentation/cciss.txt:155:
+perhaps only a single pair operating in a multipath configuration.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: Documentation/cciss.txt:156:
+In this way, it is possible to run monitoring threads only for those $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: Documentation/cciss.txt:168:
+(Note, the change will not take effect until the previous polling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: Documentation/Configure.help:6829:
+  is unable to receive interrupts from the adapter, thus enabling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: Documentation/Configure.help:6830:
+  fail-over to an alternate adapter in such situations.  See $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/block/cciss.c:115:
+static int start_monitor_thread(ctlr_info_t *h, unsigned char *cmd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/block/cciss.c:116:
+static int start_monitor_thread(ctlr_info_t *h, unsigned char *cmd, 
+		unsigned long count, int (*cciss_monitor)(void *), int *rc);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#145: FILE: drivers/block/cciss.c:117:
+static u32 heartbeat_timer = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/block/cciss.c:203:
+^I^IMONITOR_PERIOD_PATTERN $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/block/cciss.c:205:
+^I^IMONITOR_STATUS_PATTERN $

CHECK:CAMELCASE: Avoid CamelCase: <maxQsinceinit>
#172: FILE: drivers/block/cciss.c:214:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <maxSG>
#172: FILE: drivers/block/cciss.c:214:
+		h->maxQsinceinit, h->max_outstanding, h->maxSG,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/block/cciss.c:277:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[ctlr]"
#214: FILE: drivers/block/cciss.c:431:
+	if (ctlr > MAX_CTLR || hba[ctlr] == NULL || !CTLR_IS_ALIVE(hba[ctlr]))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#232: FILE: drivers/block/cciss.c:1156:
+	c->Request.CDB[0] = cmd;

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#233: FILE: drivers/block/cciss.c:1157:
+	c->Request.Type.Type = cmdtype;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#234: FILE: drivers/block/cciss.c:1158:
+	if (cmdtype == TYPE_CMD) {
 	switch (cmd) {

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#282: FILE: drivers/block/cciss.c:1215:
+			c->Request.CDBLen = 1;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#283: FILE: drivers/block/cciss.c:1216:
+			c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#284: FILE: drivers/block/cciss.c:1217:
+			c->Request.Type.Direction = XFER_WRITE;

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#285: FILE: drivers/block/cciss.c:1218:
+			c->Request.Timeout = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#289: FILE: drivers/block/cciss.c:1222:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#296: FILE: drivers/block/cciss.c:1229:
+		printk(KERN_WARNING

CHECK:CAMELCASE: Avoid CamelCase: <ReportLunData_struct>
#309: FILE: drivers/block/cciss.c:1396:
+			sizeof(ReportLunData_struct), 0, 0, 0, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#327: FILE: drivers/block/cciss.c:1526:
+		sizeof(InquiryData_struct), 1, logvol ,0xC1, TYPE_CMD);
 		                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:WxV)
#327: FILE: drivers/block/cciss.c:1526:
+		sizeof(InquiryData_struct), 1, logvol ,0xC1, TYPE_CMD);
 		                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#327: FILE: drivers/block/cciss.c:1526:
+		sizeof(InquiryData_struct), 1, logvol ,0xC1, TYPE_CMD);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/block/cciss.c:1634:
+^I^I^I^Isizeof( ReadCapdata_struct), 1, logvol, 0, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#336: FILE: drivers/block/cciss.c:1634:
+				sizeof( ReadCapdata_struct), 1, logvol, 0, 

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata_struct>
#336: FILE: drivers/block/cciss.c:1634:
+				sizeof( ReadCapdata_struct), 1, logvol, 0, 

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#346: FILE: drivers/block/cciss.c:1664:
+			sizeof(InquiryData_struct), 1, logvol ,0xC1, TYPE_CMD);
 			                                      ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#346: FILE: drivers/block/cciss.c:1664:
+			sizeof(InquiryData_struct), 1, logvol ,0xC1, TYPE_CMD);
 			                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/block/cciss.c:2283:
+                printk(KERN_WARNING "cciss%d: I/O quit ", h->ctlr);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/block/cciss.c:2283:
+                printk(KERN_WARNING "cciss%d: I/O quit ", h->ctlr);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#356: FILE: drivers/block/cciss.c:2283:
+                printk(KERN_WARNING "cciss%d: I/O quit ", h->ctlr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/block/cciss.c:2284:
+                blkdev_dequeue_request(creq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/block/cciss.c:2284:
+                blkdev_dequeue_request(creq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/block/cciss.c:2285:
+                complete_buffers(creq->bh, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/block/cciss.c:2285:
+                complete_buffers(creq->bh, 0);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: drivers/block/cciss.c:2887:
 }
+#ifdef CONFIG_CISS_MONITOR_THREAD

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#375: FILE: drivers/block/cciss.c:2892:
+	CommandList_struct *c;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#378: FILE: drivers/block/cciss.c:2895:
+	printk(KERN_WARNING "cciss%d: controller not responding.\n", h->ctlr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/block/cciss.c:2896:
+^Ih->alive = 0;^I/* the controller apparently died... */ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: drivers/block/cciss.c:2903:
+	while( (c = h->reqQ) != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#386: FILE: drivers/block/cciss.c:2903:
+	while( (c = h->reqQ) != NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: drivers/block/cciss.c:2903:
+	while( (c = h->reqQ) != NULL ) {

CHECK:CAMELCASE: Avoid CamelCase: <reqQ>
#386: FILE: drivers/block/cciss.c:2903:
+	while( (c = h->reqQ) != NULL ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reqQ
#387: FILE: drivers/block/cciss.c:2904:
+		removeQ(&(h->reqQ), c);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Qdepth>
#388: FILE: drivers/block/cciss.c:2905:
+		h->Qdepth--;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/block/cciss.c:2906:
+^I^IaddQ (&(h->cmpQ), c); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#389: FILE: drivers/block/cciss.c:2906:
+		addQ (&(h->cmpQ), c); 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cmpQ
#389: FILE: drivers/block/cciss.c:2906:
+		addQ (&(h->cmpQ), c); 

CHECK:CAMELCASE: Avoid CamelCase: <cmpQ>
#389: FILE: drivers/block/cciss.c:2906:
+		addQ (&(h->cmpQ), c); 

ERROR:SPACING: space prohibited after that open parenthesis '('
#393: FILE: drivers/block/cciss.c:2910:
+	while( (c = h->cmpQ) != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#393: FILE: drivers/block/cciss.c:2910:
+	while( (c = h->cmpQ) != NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#393: FILE: drivers/block/cciss.c:2910:
+	while( (c = h->cmpQ) != NULL ) {

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#395: FILE: drivers/block/cciss.c:2912:
+		c->err_info->CommandStatus = CMD_HARDWARE_ERR;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#396: FILE: drivers/block/cciss.c:2913:
+		if (c->cmd_type == CMD_RWREQ) {
[...]
+		} else if (c->cmd_type == CMD_IOCTL_PEND)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#407: FILE: drivers/block/cciss.c:2924:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#408: FILE: drivers/block/cciss.c:2925:
+}
+static int cciss_monitor(void *ctlr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: drivers/block/cciss.c:2927:
+^I/* If the board fails, we ought to detect that.  So we periodically $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: drivers/block/cciss.c:2928:
+^Isend down a No-Op message and expect it to complete quickly.  If it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#411: FILE: drivers/block/cciss.c:2928:
+	/* If the board fails, we ought to detect that.  So we periodically 
+	send down a No-Op message and expect it to complete quickly.  If it 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/block/cciss.c:2929:
+^Idoesn't, then we assume the board is dead, and fail all commands.  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#414: FILE: drivers/block/cciss.c:2931:
+	will happen. */

CHECK:SPACING: No space is necessary after a cast
#417: FILE: drivers/block/cciss.c:2934:
+	ctlr_info_t *h = (ctlr_info_t *) ctlr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/block/cciss.c:2942:
+^Iprintk("cciss%d: Monitor thread starting.\n", h->ctlr); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: drivers/block/cciss.c:2942:
+	printk("cciss%d: Monitor thread starting.\n", h->ctlr); 

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#428: FILE: drivers/block/cciss.c:2945:
+#define SHUTDOWN_SIGS   (sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGTERM))
                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#428: FILE: drivers/block/cciss.c:2945:
+#define SHUTDOWN_SIGS   (sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGTERM))
                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: drivers/block/cciss.c:2950:
+^Iinit_timer(&h->watchdog); $

CHECK:SPACING: No space is necessary after a cast
#435: FILE: drivers/block/cciss.c:2952:
+	h->watchdog.data = (unsigned long) h->ctlr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/block/cciss.c:2954:
+  ^I^I/* check heartbeat timer */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/block/cciss.c:2954:
+  ^I^I/* check heartbeat timer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/block/cciss.c:2954:
+  ^I^I/* check heartbeat timer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/block/cciss.c:2955:
+                current_timer = readl(&h->cfgtable->HeartBeat);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/block/cciss.c:2955:
+                current_timer = readl(&h->cfgtable->HeartBeat);$

CHECK:CAMELCASE: Avoid CamelCase: <HeartBeat>
#438: FILE: drivers/block/cciss.c:2955:
+                current_timer = readl(&h->cfgtable->HeartBeat);

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/block/cciss.c:2956:
+  ^I^Icurrent_timer &= 0x0fffffff;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: drivers/block/cciss.c:2956:
+  ^I^Icurrent_timer &= 0x0fffffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/block/cciss.c:2956:
+  ^I^Icurrent_timer &= 0x0fffffff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: drivers/block/cciss.c:2957:
+  ^I^Iif (heartbeat_timer == current_timer) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: drivers/block/cciss.c:2957:
+  ^I^Iif (heartbeat_timer == current_timer) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/block/cciss.c:2957:
+  ^I^Iif (heartbeat_timer == current_timer) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#440: FILE: drivers/block/cciss.c:2957:
+  		if (heartbeat_timer == current_timer) {
[...]
+  		else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: drivers/block/cciss.c:2958:
+  ^I^I^Ifail_all_cmds(h->ctlr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: drivers/block/cciss.c:2958:
+  ^I^I^Ifail_all_cmds(h->ctlr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/block/cciss.c:2958:
+  ^I^I^Ifail_all_cmds(h->ctlr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/block/cciss.c:2959:
+  ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: drivers/block/cciss.c:2959:
+  ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/block/cciss.c:2959:
+  ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/block/cciss.c:2960:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: drivers/block/cciss.c:2960:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/block/cciss.c:2960:
+  ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/block/cciss.c:2961:
+  ^I^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#444: FILE: drivers/block/cciss.c:2961:
+  ^I^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/block/cciss.c:2961:
+  ^I^Ielse$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#444: FILE: drivers/block/cciss.c:2961:
+  		}
+  		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/block/cciss.c:2962:
+  ^I^I^Iheartbeat_timer = current_timer;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: drivers/block/cciss.c:2962:
+  ^I^I^Iheartbeat_timer = current_timer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/block/cciss.c:2962:
+  ^I^I^Iheartbeat_timer = current_timer;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#457: FILE: drivers/block/cciss.c:2974:
+			printk(KERN_WARNING "%s received signal.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/block/cciss.c:2975:
+			printk(KERN_WARNING "%s received signal.\n",
+				current->comm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#464: FILE: drivers/block/cciss.c:2981:
+	printk(KERN_INFO "%s exiting.\n", current->comm);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/block/cciss.c:2988:
+static int start_monitor_thread(ctlr_info_t *h, unsigned char *cmd, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#471: FILE: drivers/block/cciss.c:2988:
+}
+static int start_monitor_thread(ctlr_info_t *h, unsigned char *cmd, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/block/cciss.c:2989:
+static int start_monitor_thread(ctlr_info_t *h, unsigned char *cmd, 
+		unsigned long count, int (*cciss_monitor)(void *), int *rc)

CHECK:BRACES: braces {} should be used on all arms of this statement
#477: FILE: drivers/block/cciss.c:2994:
+	if (strncmp("monitor", cmd, 7) == 0) {
[...]
+	} else if (strncmp("deadline", cmd, 8) == 0) {
[...]
+	} else
[...]

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#478: FILE: drivers/block/cciss.c:2995:
+		new_period = simple_strtol(cmd + 8, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#483: FILE: drivers/block/cciss.c:3000:
+		new_deadline = simple_strtol(cmd + 9, NULL, 10);

CHECK:BRACES: Unbalanced braces around else statement
#487: FILE: drivers/block/cciss.c:3004:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#495: FILE: drivers/block/cciss.c:3012:
+		printk(KERN_INFO "setting deadline to %d\n", new_deadline);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#505: FILE: drivers/block/cciss.c:3022:
+			printk(KERN_INFO "cciss%d: stopping monitor thread\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/block/cciss.c:3023:
+			printk(KERN_INFO "cciss%d: stopping monitor thread\n",
+				h->ctlr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/block/cciss.c:3027:
+^I^Iif (new_period != old_period) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#511: FILE: drivers/block/cciss.c:3028:
+			printk(KERN_INFO "cciss%d: adjusting monitor thread "

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: drivers/block/cciss.c:3029:
+			printk(KERN_INFO "cciss%d: adjusting monitor thread "
+				"period from %d to %d seconds\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: drivers/block/cciss.c:3031:
+^I^Iif (new_deadline != old_deadline) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#515: FILE: drivers/block/cciss.c:3032:
+			printk(KERN_INFO "cciss%d: adjusting monitor thread "

WARNING:SPLIT_STRING: quoted string split across lines
#516: FILE: drivers/block/cciss.c:3033:
+			printk(KERN_INFO "cciss%d: adjusting monitor thread "
+				"deadline from %d to %d seconds\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#558: FILE: drivers/block/cciss.c:3217:
+	if (CTLR_IS_ALIVE(hba[i])) {
[...]
  	memset(flush_buf, 0, 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/block/cciss.c:3222:
+		return_code = sendcmd(CCISS_CACHE_FLUSH, i, flush_buf,
+					4, 0, 0, 0, NULL);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#566: FILE: drivers/block/cciss.c:3223:
+		if (return_code != IO_OK)
  		printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/block/cciss.h:96:
+^Istruct task_struct *monitor_thread; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: drivers/block/cciss.h:102:
+#define CCISS_MAX_PERIOD 3600 $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#589: FILE: drivers/block/cciss.h:103:
+#define CTLR_IS_ALIVE(h) (h->alive)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'h' - possible side-effects?
#590: FILE: drivers/block/cciss.h:104:
+#define ASSERT_CTLR_ALIVE(h) {	h->alive = 1; \
+				h->monitor_period = 0; \
+				h->monitor_started = 0; }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#590: FILE: drivers/block/cciss.h:104:
+#define ASSERT_CTLR_ALIVE(h) {	h->alive = 1; \
+				h->monitor_period = 0; \
+				h->monitor_started = 0; }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#596: FILE: drivers/block/cciss.h:110:
+#define MONITOR_PERIOD_VALUE(h) (h->monitor_period)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#598: FILE: drivers/block/cciss.h:112:
+#define MONITOR_DEADLINE_VALUE(h) (h->monitor_deadline)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/block/cciss.h:125:
+#define START_MONITOR_THREAD(a,b,c,d,rc) (*rc == 0)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/block/cciss.h:125:
+#define START_MONITOR_THREAD(a,b,c,d,rc) (*rc == 0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/block/cciss.h:125:
+#define START_MONITOR_THREAD(a,b,c,d,rc) (*rc == 0)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: drivers/block/cciss.h:125:
+#define START_MONITOR_THREAD(a,b,c,d,rc) (*rc == 0)
                                     ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rc' may be better as '(rc)' to avoid precedence issues
#611: FILE: drivers/block/cciss.h:125:
+#define START_MONITOR_THREAD(a,b,c,d,rc) (*rc == 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000344078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 45 warnings, 41 checks, 547 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000344078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
