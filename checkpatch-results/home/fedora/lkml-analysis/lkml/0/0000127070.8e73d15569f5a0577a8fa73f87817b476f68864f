WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: arch/s390/oprofile/backtrace.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#43: FILE: arch/s390/oprofile/backtrace.c:2:
+ * arch/s390/oprofile/backtrace.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#52: FILE: arch/s390/oprofile/backtrace.c:11:
+#include <asm/processor.h> /* for struct stack_frame */

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:SPACING: No space is necessary after a cast
#65: FILE: arch/s390/oprofile/backtrace.c:24:
+		sf = (struct stack_frame *) sp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/s390/oprofile/backtrace.c:36:
+			sf = (struct stack_frame *) sp;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#81: FILE: arch/s390/oprofile/backtrace.c:40:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#87: FILE: arch/s390/oprofile/backtrace.c:46:
+		sp = (unsigned long) (sf + 1);

CHECK:SPACING: No space is necessary after a cast
#90: FILE: arch/s390/oprofile/backtrace.c:49:
+		regs = (struct pt_regs *) sp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#102: FILE: arch/s390/oprofile/backtrace.c:61:
+	struct stack_frame* head_sf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#104: FILE: arch/s390/oprofile/backtrace.c:63:
+	if (user_mode (regs))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#108: FILE: arch/s390/oprofile/backtrace.c:67:
+	head_sf = (struct stack_frame*)head;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: arch/s390/oprofile/init.c:15:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 7 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
