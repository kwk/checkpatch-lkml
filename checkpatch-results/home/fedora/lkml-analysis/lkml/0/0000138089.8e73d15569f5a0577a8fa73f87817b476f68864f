ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: Documentation/cciss.txt:148:
+changers are presented to the SCSI mid layer, and unlike more $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: Documentation/cciss.txt:152:
+resetting the device.  Additionally, most tape drives will not oblige $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: Documentation/cciss.txt:153:
+in aborting commands, and sometimes it appears they will not even $

WARNING:TYPO_SPELLING: 'coommand' may be misspelled - perhaps 'command'?
#65: FILE: Documentation/cciss.txt:154:
+obey a reset coommand, though in most circumstances they will.  In
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: Documentation/cciss.txt:155:
+the case that the command cannot be aborted and the device cannot be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: Documentation/cciss.txt:159:
+successfully reset or the tardy command is successfully aborted, the $

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#91: FILE: drivers/block/cciss.c:1591:
+			c->Request.CDBLen = 12;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#91: FILE: drivers/block/cciss.c:1591:
+			c->Request.CDBLen = 12;

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#92: FILE: drivers/block/cciss.c:1592:
+			c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Attribute>
#92: FILE: drivers/block/cciss.c:1592:
+			c->Request.Type.Attribute = ATTR_SIMPLE;

CHECK:CAMELCASE: Avoid CamelCase: <Direction>
#93: FILE: drivers/block/cciss.c:1593:
+			c->Request.Type.Direction = XFER_WRITE;

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#94: FILE: drivers/block/cciss.c:1594:
+			c->Request.Timeout = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/block/cciss.c:1898:
+^I   and gets some command back that it wasn't expecting -- $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: drivers/block/cciss.c:1898:
+	/* We get in here if sendcmd() is polling for completions
+	   and gets some command back that it wasn't expecting -- 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/block/cciss.c:1899:
+^I   something other than that which it just sent down.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/block/cciss.c:1900:
+^I   Ordinarily, that shouldn't happen, but it can happen when $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/block/cciss.c:1902:
+^I   starts using sendcmd() to try to abort commands and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/block/cciss.c:1905:
+^I   through the block i/o system, or cciss ioctls completing, etc. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/block/cciss.c:1911:
+^Istruct sendcmd_reject_list *srl = &hba[ctlr]->scsi_rejects;^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#138: FILE: drivers/block/cciss.c:1917:
+		printk( KERN_WARNING "cciss cciss%d: SendCmd "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: drivers/block/cciss.c:1917:
+		printk( KERN_WARNING "cciss cciss%d: SendCmd "

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: drivers/block/cciss.c:1917:
+		printk( KERN_WARNING "cciss cciss%d: SendCmd "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#139: FILE: drivers/block/cciss.c:1918:
+		printk( KERN_WARNING "cciss cciss%d: SendCmd "
+		      "Invalid command list address returned! (%lx)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: drivers/block/cciss.c:1926:
+	/* We've sent down an abort or reset, but something else
+	   has completed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#147: FILE: drivers/block/cciss.c:1926:
+	   has completed */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#150: FILE: drivers/block/cciss.c:1929:
+		printk(KERN_WARNING "cciss%d: Sendcmd: Invalid command addr, "

WARNING:SPLIT_STRING: quoted string split across lines
#151: FILE: drivers/block/cciss.c:1930:
+		printk(KERN_WARNING "cciss%d: Sendcmd: Invalid command addr, "
+			"reject list overflow, command lost!\n", ctlr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/block/cciss.c:1984:
+        /* Actually it should be completely empty at this time */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#195: FILE: drivers/block/cciss.c:2008:
+		printk(KERN_DEBUG "cciss: command completed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: drivers/block/cciss.c:2012:
+			printk( KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#200: FILE: drivers/block/cciss.c:2012:
+			printk( KERN_WARNING

ERROR:SPACING: space prohibited after that open parenthesis '('
#200: FILE: drivers/block/cciss.c:2012:
+			printk( KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: drivers/block/cciss.c:2014:
+				"cciss cciss%d: SendCmd Timeout out, "
+				"No command list address returned!\n",

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#217: FILE: drivers/block/cciss.c:2061:
+				} else if (c->err_info->CommandStatus == CMD_UNABORTABLE) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#218: FILE: drivers/block/cciss.c:2062:
+					printk(KERN_WARNING "cciss%d: command could not be aborted.\n", ctlr);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#218: FILE: drivers/block/cciss.c:2062:
+					printk(KERN_WARNING "cciss%d: command could not be aborted.\n", ctlr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#243: FILE: drivers/block/cciss.c:2081:
+			if (add_sendcmd_reject(cmd, ctlr, complete) != 0) {
+				BUG(); /* we are pretty much hosed if we get here. */
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: drivers/block/cciss.c:2082:
+				BUG(); /* we are pretty much hosed if we get here. */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/block/cciss.c:2085:
+                } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/block/cciss.c:2085:
+                } else$

CHECK:BRACES: Unbalanced braces around else statement
#247: FILE: drivers/block/cciss.c:2085:
+                } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/block/cciss.c:2087:
+        } while (!done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/block/cciss.c:2087:
+        } while (!done);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#273: FILE: drivers/block/cciss.c:2428:
+	if (h->scsi_rejects.ncompletions == 0)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#275: FILE: drivers/block/cciss.c:2430:
+		return h->access.command_completed(h);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#275: FILE: drivers/block/cciss.c:2430:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/block/cciss.c:2433:
+		int n;
+		srl = &h->scsi_rejects;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: drivers/block/cciss.c:2436:
+		printk("p");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/block/cciss.c:2447:
+^Ireturn ( h->access.intr_pending(h) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#292: FILE: drivers/block/cciss.c:2447:
+	return ( h->access.intr_pending(h) 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#293: FILE: drivers/block/cciss.c:2448:
+	return ( h->access.intr_pending(h) 
+		|| (h->scsi_rejects.ncompletions > 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/block/cciss.c:2457:
+^Ireturn (((h->access.intr_pending(h) == 0) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: drivers/block/cciss.c:2458:
+^I^I (h->interrupts_enabled == 0)) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#304: FILE: drivers/block/cciss.c:2459:
+		 (h->interrupts_enabled == 0)) 
+	      && (h->scsi_rejects.ncompletions == 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/block/cciss.c:2461:
+^Ireturn (((h->access.intr_pending(h) == 0) || $

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: drivers/block/cciss.c:2483:
+		while((a = get_next_completion(h)) != FIFO_EMPTY) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/block/cciss.c:3091:
+^Ihba[i]->scsi_rejects.complete = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/block/cciss.c:3092:
+^I^Ikmalloc(sizeof(hba[i]->scsi_rejects.complete[0]) * $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hba[i]->scsi_rejects.complete"
#346: FILE: drivers/block/cciss.c:3094:
+	if (hba[i]->scsi_rejects.complete == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/block/cciss.c:3095:
+                printk( KERN_ERR "cciss: out of memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/block/cciss.c:3095:
+                printk( KERN_ERR "cciss: out of memory");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#347: FILE: drivers/block/cciss.c:3095:
+                printk( KERN_ERR "cciss: out of memory");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#347: FILE: drivers/block/cciss.c:3095:
+                printk( KERN_ERR "cciss: out of memory");

ERROR:SPACING: space prohibited after that open parenthesis '('
#347: FILE: drivers/block/cciss.c:3095:
+                printk( KERN_ERR "cciss: out of memory");

ERROR:SPACING: space required before the open parenthesis '('
#359: FILE: drivers/block/cciss.c:3167:
+	if(hba[i]->scsi_rejects.complete)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#360: FILE: drivers/block/cciss.c:3168:
+	if(hba[i]->scsi_rejects.complete)
+		kfree(hba[i]->scsi_rejects.complete);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#428: FILE: drivers/block/cciss_scsi.c:95:
+	.eh_device_reset_handler= cciss_eh_device_reset_handler,
 	                        ^

WARNING:IF_1: Consider removing the #if 1 and its #endif
#438: FILE: drivers/block/cciss_scsi.c:254:
+#if 1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: drivers/block/cciss_scsi.c:1455:
+/* Need at least one of these error handlers to keep ../scsi/hosts.c from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: drivers/block/cciss_scsi.c:1456:
+ * complaining.  Doing a host- or bus-reset can't do anything good here. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/block/cciss_scsi.c:1461:
+ * don't know there are no commands on the controller, and it is likely $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#455: FILE: drivers/block/cciss_scsi.c:1464:
+ * as a boot device (embedded controller on HP/Compaq systems.)
+*/

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#460: FILE: drivers/block/cciss_scsi.c:1469:
+	CommandList_struct *cmd_in_trouble;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/block/cciss_scsi.c:1474:
+^Ic = (ctlr_info_t **) &scsicmd->device->host->hostdata[0];^I$

CHECK:SPACING: No space is necessary after a cast
#465: FILE: drivers/block/cciss_scsi.c:1474:
+	c = (ctlr_info_t **) &scsicmd->device->host->hostdata[0];	

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#466: FILE: drivers/block/cciss_scsi.c:1475:
+	if (c == NULL) /* paranoia */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#469: FILE: drivers/block/cciss_scsi.c:1478:
+	printk(KERN_WARNING "cciss%d: resetting tape drive or medium changer.\n", ctlr);

CHECK:SPACING: No space is necessary after a cast
#472: FILE: drivers/block/cciss_scsi.c:1481:
+	cmd_in_trouble = (CommandList_struct *) scsicmd->host_scribble;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd_in_trouble"
#473: FILE: drivers/block/cciss_scsi.c:1482:
+	if (cmd_in_trouble == NULL) { /* paranoia */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/block/cciss_scsi.c:1486:
+^Irc = sendcmd(CCISS_RESET_MSG, ctlr, NULL, 0, 2, 0, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/block/cciss_scsi.c:1487:
+^I^I(unsigned char *) &cmd_in_trouble->Header.LUN.LunAddrBytes[0], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/block/cciss_scsi.c:1487:
+	rc = sendcmd(CCISS_RESET_MSG, ctlr, NULL, 0, 2, 0, 0, 
+		(unsigned char *) &cmd_in_trouble->Header.LUN.LunAddrBytes[0], 

CHECK:SPACING: No space is necessary after a cast
#478: FILE: drivers/block/cciss_scsi.c:1487:
+		(unsigned char *) &cmd_in_trouble->Header.LUN.LunAddrBytes[0], 

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#478: FILE: drivers/block/cciss_scsi.c:1487:
+		(unsigned char *) &cmd_in_trouble->Header.LUN.LunAddrBytes[0], 

CHECK:CAMELCASE: Avoid CamelCase: <LunAddrBytes>
#478: FILE: drivers/block/cciss_scsi.c:1487:
+		(unsigned char *) &cmd_in_trouble->Header.LUN.LunAddrBytes[0], 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#484: FILE: drivers/block/cciss_scsi.c:1493:
+	printk(KERN_WARNING "cciss%d: resetting device failed.\n", ctlr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: drivers/block/cciss_scsi.c:1505:
+^Ic = (ctlr_info_t **) &scsicmd->device->host->hostdata[0];^I$

CHECK:SPACING: No space is necessary after a cast
#496: FILE: drivers/block/cciss_scsi.c:1505:
+	c = (ctlr_info_t **) &scsicmd->device->host->hostdata[0];	

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#497: FILE: drivers/block/cciss_scsi.c:1506:
+	if (c == NULL) /* paranoia */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#500: FILE: drivers/block/cciss_scsi.c:1509:
+	printk(KERN_WARNING "cciss%d: aborting tardy SCSI cmd\n", ctlr);

CHECK:SPACING: No space is necessary after a cast
#503: FILE: drivers/block/cciss_scsi.c:1512:
+	cmd_to_abort = (CommandList_struct *) scsicmd->host_scribble;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd_to_abort"
#504: FILE: drivers/block/cciss_scsi.c:1513:
+	if (cmd_to_abort == NULL) /* paranoia */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: drivers/block/cciss_scsi.c:1515:
+^Irc = sendcmd(CCISS_ABORT_MSG, ctlr, &cmd_to_abort->Header.Tag, $

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#506: FILE: drivers/block/cciss_scsi.c:1515:
+	rc = sendcmd(CCISS_ABORT_MSG, ctlr, &cmd_to_abort->Header.Tag, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/block/cciss_scsi.c:1516:
+^I^I0, 2, 0, 0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/block/cciss_scsi.c:1516:
+	rc = sendcmd(CCISS_ABORT_MSG, ctlr, &cmd_to_abort->Header.Tag, 
+		0, 2, 0, 0, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/block/cciss_scsi.c:1517:
+^I^I(unsigned char *) &cmd_to_abort->Header.LUN.LunAddrBytes[0], $

CHECK:SPACING: No space is necessary after a cast
#508: FILE: drivers/block/cciss_scsi.c:1517:
+		(unsigned char *) &cmd_to_abort->Header.LUN.LunAddrBytes[0], 

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#516: FILE: drivers/block/cciss_scsi.c:1525:
+
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 31 warnings, 30 checks, 450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
