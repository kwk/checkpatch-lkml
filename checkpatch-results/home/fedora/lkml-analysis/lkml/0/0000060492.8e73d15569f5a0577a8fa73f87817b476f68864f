WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
> > intentional. The assumptation is that time only goes forward so nothing 

WARNING:TYPO_SPELLING: 'convergance' may be misspelled - perhaps 'convergence'?
#225: FILE: kernel/timer.c:1021:
+#define MAXOFFADJ 4 /* vary max oscillation vs convergance speed */
                                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#225: FILE: kernel/timer.c:1021:
 }
+#define MAXOFFADJ 4 /* vary max oscillation vs convergance speed */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: kernel/timer.c:1029:
+static void clocksource_adjust(struct clocksource *clock, s64 offset,
+				s64 interval_cycs, s64 interval_error)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/timer.c:1032:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/timer.c:1034:
+^Iinterval_error = shift_right(interval_error, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: kernel/timer.c:1035:
+	interval_error = shift_right(interval_error, 
+					(TICK_LENGTH_SHIFT - clock->shift));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'error > interval'
#253: FILE: kernel/timer.c:1037:
+	if ((error > interval)
+		||(error < -(interval)) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#254: FILE: kernel/timer.c:1038:
+	if ((error > interval)
+		||(error < -(interval)) ) {

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#254: FILE: kernel/timer.c:1038:
+		||(error < -(interval)) ) {
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#254: FILE: kernel/timer.c:1038:
+		||(error < -(interval)) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#255: FILE: kernel/timer.c:1039:
+		||(error < -(interval)) ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: kernel/timer.c:1042:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: kernel/timer.c:1044:
+^I^I *   The idea here is to look at the error $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: kernel/timer.c:1045:
+^I^I *   accumulated since the last call to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: kernel/timer.c:1046:
+^I^I *   update_wall_time to determine the $

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: kernel/timer.c:1059:
+		if(interval_error >= 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: kernel/timer.c:1061:
+			adj = error_aproximation(interval_error,
+						interval_cycs, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: kernel/timer.c:1066:
+^I^I^Iadj = error_aproximation(-interval_error, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: kernel/timer.c:1067:
+			adj = error_aproximation(-interval_error, 
+						interval_cycs, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: kernel/timer.c:1071:
+^I        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TYPO_SPELLING: 'frequncy' may be misspelled - perhaps 'frequency'?
#289: FILE: kernel/timer.c:1073:
+		 *   Now that the frequncy is fixed, we
 		                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: kernel/timer.c:1076:
+^I^I *   However, we must be careful as if we make too $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: kernel/timer.c:1077:
+^I^I *   sudden an adjustment we might overshoot. So we $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: kernel/timer.c:1078:
+^I^I *   limit the amount of change to spread the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: kernel/timer.c:1079:
+^I^I *   adjustment (using MAXOFFADJ) over a longer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: kernel/timer.c:1086:
+^I^I *   hopes that the next sample will be similar in $

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: kernel/timer.c:1089:
+		if(error >= 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: kernel/timer.c:1090:
+^I^I^Iadj = error_aproximation(error, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: kernel/timer.c:1091:
+			adj = error_aproximation(error, 
+					interval_cycs, MAXOFFADJ);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#308: FILE: kernel/timer.c:1092:
+			multadj += 1<<adj;
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#309: FILE: kernel/timer.c:1093:
+			snsec_update += interval <<adj;
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: kernel/timer.c:1097:
+			adj = error_aproximation(-error,
+						interval_cycs, MAXOFFADJ);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: kernel/timer.c:1098:
+			multadj -= 1<<adj;
 			            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#315: FILE: kernel/timer.c:1099:
+			snsec_update -= interval <<adj;
 			                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: kernel/timer.c:1106:
+^I^Iclock->error += (offset_update) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: kernel/timer.c:1111:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: kernel/timer.c:1120:
+^Is64 interval_error = 0; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000060492.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 3 warnings, 15 checks, 205 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000060492.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
