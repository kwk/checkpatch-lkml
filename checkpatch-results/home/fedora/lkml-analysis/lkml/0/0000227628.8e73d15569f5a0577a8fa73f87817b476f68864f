CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: net/sctp/associola.c:71:
+static struct sctp_association *sctp_association_init(struct sctp_association *asoc,
 					  const struct sctp_endpoint *ep,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: net/sctp/associola.c:276:
+struct sctp_association *sctp_association_new(const struct sctp_endpoint *ep,
+					 const struct sock *sk,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#711: FILE: net/sctp/endpointola.c:260:
+static struct sctp_association *__sctp_endpoint_lookup_assoc(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: net/sctp/input.c:67:
+static struct sctp_association *__sctp_rcv_lookup(struct sk_buff *skb,
 				      const union sctp_addr *laddr,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#728: FILE: net/sctp/input.c:71:
+static struct sctp_association *__sctp_lookup_association(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#815: FILE: net/sctp/input.c:683:
+static struct sctp_association *__sctp_lookup_association(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: net/sctp/input.c:721:
+static struct sctp_association *sctp_lookup_association(const union sctp_addr *laddr,
 					    const union sctp_addr *paddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: net/sctp/input.c:829:
+static struct sctp_association *__sctp_rcv_lookup(struct sk_buff *skb,
 				      const union sctp_addr *paddr,

WARNING:CONST_STRUCT: struct proto_ops should normally be const
#1044: FILE: net/sctp/protocol.c:832:
+static struct proto_ops inet_seqpacket_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: net/sctp/sm_make_chunk.c:73:
+static sctp_cookie_param_t *sctp_pack_cookie(const struct sctp_endpoint *ep,
+					const struct sctp_association *asoc,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1154: FILE: net/sctp/sm_make_chunk.c:902:
+static struct sctp_chunk *sctp_make_op_error_space(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: net/sctp/sm_make_chunk.c:1231:
+static sctp_cookie_param_t *sctp_pack_cookie(const struct sctp_endpoint *ep,
 				      const struct sctp_association *asoc,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: net/sctp/sm_sideeffect.c:64:
+^I^I^I ^Isctp_disposition_t status,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1226: FILE: net/sctp/sm_sideeffect.c:64:
+^I^I^I ^Isctp_disposition_t status,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: net/sctp/sm_sideeffect.c:971:
+^I^I^I ^Isctp_disposition_t status,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1345: FILE: net/sctp/sm_sideeffect.c:971:
+^I^I^I ^Isctp_disposition_t status,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: net/sctp/sm_statefuns.c:69:
+static struct sctp_packet *sctp_abort_pkt_new(const struct sctp_endpoint *ep,
+				  const struct sctp_association *asoc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1453: FILE: net/sctp/sm_statefuns.c:4595:
+static struct sctp_packet *sctp_abort_pkt_new(const struct sctp_endpoint *ep,
 				  const struct sctp_association *asoc,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1513: FILE: net/sctp/sm_statetable.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1522: FILE: net/sctp/sm_statetable.c:433:
+static const sctp_sm_table_entry_t chunk_event_table[SCTP_NUM_BASE_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1531: FILE: net/sctp/sm_statetable.c:496:
+static const sctp_sm_table_entry_t addip_chunk_event_table[SCTP_NUM_ADDIP_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1540: FILE: net/sctp/sm_statetable.c:525:
+static const sctp_sm_table_entry_t prsctp_chunk_event_table[SCTP_NUM_PRSCTP_CHUNK_TYPES][SCTP_STATE_NUM_STATES] = {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1549: FILE: net/sctp/sm_statetable.c:698:
+static const sctp_sm_table_entry_t primitive_event_table[SCTP_NUM_PRIMITIVE_TYPES][SCTP_STATE_NUM_STATES] = {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1558: FILE: net/sctp/sm_statetable.c:730:
+static const sctp_sm_table_entry_t other_event_table[SCTP_NUM_OTHER_TYPES][SCTP_STATE_NUM_STATES] = {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1567: FILE: net/sctp/sm_statetable.c:945:
+static const sctp_sm_table_entry_t timeout_event_table[SCTP_NUM_TIMEOUT_TYPES][SCTP_STATE_NUM_STATES] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1577: FILE: net/sctp/sm_statetable.c:958:
+static const sctp_sm_table_entry_t *sctp_chunk_event_lookup(sctp_cid_t cid, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1590: FILE: net/sctp/socket.c:212:
+static struct sctp_transport *sctp_addr_id2transport(struct sock *sk,
 					      struct sockaddr_storage *addr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1672: FILE: net/sctp/transport.c:126:
+        struct sctp_transport *transport;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1672: FILE: net/sctp/transport.c:126:
+        struct sctp_transport *transport;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1674: FILE: net/sctp/transport.c:128:
+        transport = t_new(struct sctp_transport, gfp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1674: FILE: net/sctp/transport.c:128:
+        transport = t_new(struct sctp_transport, gfp);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 15 checks, 1634 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
