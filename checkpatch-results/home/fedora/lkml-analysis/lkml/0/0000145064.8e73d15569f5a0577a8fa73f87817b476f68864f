WARNING:TYPO_SPELLING: 'resest' may be misspelled - perhaps 'reset'?
#31: 
After a PCI device has been resest, the device BAR's and other config
                            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Te' may be misspelled - perhaps 'The'?
#38: 
the firmware has handed over the device.  Te state resore funcion 
                                          ^^

WARNING:TYPO_SPELLING: 'resore' may be misspelled - perhaps 'restore'?
#38: 
the firmware has handed over the device.  Te state resore funcion 
                                                   ^^^^^^

WARNING:TYPO_SPELLING: 'inteded' may be misspelled - perhaps 'intended'?
#39: 
is inteded for use by the EEH recovery routines.
   ^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: arch/ppc64/kernel/eeh.c:82:
+static void eeh_save_bars(struct pci_dev * pdev, struct pci_dn *pdn);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: arch/ppc64/kernel/eeh.c:793:
+ * configure the PCI devices ourselves.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: arch/ppc64/kernel/eeh.c:802:
+static inline void __restore_bars (struct pci_dn *pdn)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#100: FILE: arch/ppc64/kernel/eeh.c:806:
+	if (NULL==pdn->phb) return;
 	        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#100: FILE: arch/ppc64/kernel/eeh.c:806:
+	if (NULL==pdn->phb) return;

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#100: FILE: arch/ppc64/kernel/eeh.c:806:
+	if (NULL==pdn->phb) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#101: FILE: arch/ppc64/kernel/eeh.c:807:
+	for (i=4; i<10; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#101: FILE: arch/ppc64/kernel/eeh.c:807:
+	for (i=4; i<10; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#101: FILE: arch/ppc64/kernel/eeh.c:807:
+	for (i=4; i<10; i++) {
+		rtas_write_config(pdn, i*4, 4, pdn->config_space[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#102: FILE: arch/ppc64/kernel/eeh.c:808:
+		rtas_write_config(pdn, i*4, 4, pdn->config_space[i]);
 		                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#106: FILE: arch/ppc64/kernel/eeh.c:812:
+	rtas_write_config(pdn, 12*4, 4, pdn->config_space[12]);
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#108: FILE: arch/ppc64/kernel/eeh.c:814:
+#define BYTE_SWAP(OFF) (8*((OFF)/4)+3-(OFF))
                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#108: FILE: arch/ppc64/kernel/eeh.c:814:
+#define BYTE_SWAP(OFF) (8*((OFF)/4)+3-(OFF))
                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: arch/ppc64/kernel/eeh.c:814:
+#define BYTE_SWAP(OFF) (8*((OFF)/4)+3-(OFF))
                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: arch/ppc64/kernel/eeh.c:814:
+#define BYTE_SWAP(OFF) (8*((OFF)/4)+3-(OFF))
                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'OFF' - possible side-effects?
#108: FILE: arch/ppc64/kernel/eeh.c:814:
+#define BYTE_SWAP(OFF) (8*((OFF)/4)+3-(OFF))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: arch/ppc64/kernel/eeh.c:817:
+	rtas_write_config (pdn, PCI_CACHE_LINE_SIZE, 1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/ppc64/kernel/eeh.c:818:
+^I            SAVED_BYTE(PCI_CACHE_LINE_SIZE));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/ppc64/kernel/eeh.c:818:
+	rtas_write_config (pdn, PCI_CACHE_LINE_SIZE, 1,
+	            SAVED_BYTE(PCI_CACHE_LINE_SIZE));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: arch/ppc64/kernel/eeh.c:820:
+	rtas_write_config (pdn, PCI_LATENCY_TIMER, 1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/ppc64/kernel/eeh.c:821:
+^I            SAVED_BYTE(PCI_LATENCY_TIMER));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: arch/ppc64/kernel/eeh.c:821:
+	rtas_write_config (pdn, PCI_LATENCY_TIMER, 1,
+	            SAVED_BYTE(PCI_LATENCY_TIMER));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#118: FILE: arch/ppc64/kernel/eeh.c:824:
+	rtas_write_config(pdn, 15*4, 4, pdn->config_space[15]);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: arch/ppc64/kernel/eeh.c:836:
+^Iif (!pdn) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: arch/ppc64/kernel/eeh.c:836:
+	struct device_node *dn;
+	if (!pdn) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/ppc64/kernel/eeh.c:838:
+^I$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#133: FILE: arch/ppc64/kernel/eeh.c:839:
+	if (! pdn->eeh_is_bridge)
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: arch/ppc64/kernel/eeh.c:840:
+		__restore_bars (pdn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: arch/ppc64/kernel/eeh.c:844:
+		eeh_restore_bars (PCI_DN(dn));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: arch/ppc64/kernel/eeh.c:857:
+static void eeh_save_bars(struct pci_dev * pdev, struct pci_dn *pdn)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#155: FILE: arch/ppc64/kernel/eeh.c:861:
+	if (!pdev || !pdn )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/ppc64/kernel/eeh.c:863:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: arch/ppc64/kernel/eeh.c:874:
+	int token = rtas_token ("ibm,configure-bridge");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/ppc64/kernel/eeh.c:879:
+	rc = rtas_call(token,3,1, NULL,
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/ppc64/kernel/eeh.c:879:
+	rc = rtas_call(token,3,1, NULL,
 	                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/ppc64/kernel/eeh.c:880:
+^I               pdn->eeh_config_addr,$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#175: FILE: arch/ppc64/kernel/eeh.c:881:
+	               BUID_HI(pdn->phb->buid),
 	                                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/ppc64/kernel/eeh.c:881:
+^I               BUID_HI(pdn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#176: FILE: arch/ppc64/kernel/eeh.c:882:
+	               BUID_LO(pdn->phb->buid));
 	                                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/ppc64/kernel/eeh.c:882:
+^I               BUID_LO(pdn->phb->buid));$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#178: FILE: arch/ppc64/kernel/eeh.c:884:
+		printk (KERN_WARNING "EEH: Unable to configure device bridge (%d) for %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: arch/ppc64/kernel/eeh.c:884:
+		printk (KERN_WARNING "EEH: Unable to configure device bridge (%d) for %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/ppc64/kernel/eeh.c:885:
+^I^I        rc, pdn->node->full_name);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: arch/ppc64/kernel/pci.h:66:
+/** $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dn *' should also have an identifier name
#223: FILE: arch/ppc64/kernel/pci.h:74:
+void eeh_restore_bars(struct pci_dn *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/ppc64/kernel/pci.h:82:
+ * eeh_restore_bars, but for brdges, and lets firmware $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dn *' should also have an identifier name
#234: FILE: arch/ppc64/kernel/pci.h:85:
+void rtas_configure_bridge(struct pci_dn *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dn *' should also have an identifier name
#236: FILE: arch/ppc64/kernel/pci.h:87:
+int rtas_write_config(struct pci_dn *, int where, int size, u32 val);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 20 warnings, 10 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
