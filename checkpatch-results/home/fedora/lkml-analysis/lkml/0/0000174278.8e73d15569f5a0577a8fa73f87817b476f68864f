WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: drivers/i2c/chips/tps65010.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: drivers/i2c/chips/tps65010.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#126: FILE: drivers/i2c/chips/tps65010.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/i2c/chips/tps65010.c:117:
+	snprintf(buf, len, "%02x%s%s%s%s%s%s%s%s\n",
+		chgstatus,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#229: FILE: drivers/i2c/chips/tps65010.c:122:
+			((chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/i2c/chips/tps65010.c:133:
+	snprintf(buf, len, "%02x %s%s%s%s%s%s%s%s\n",
+		regstatus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/i2c/chips/tps65010.c:155:
+	snprintf(buf, len, "%02x %s%s%s AC=%d%% USB=%dmA %sCharge\n",
+		chgconfig, hibit,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: drivers/i2c/chips/tps65010.c:159:
+		case 3:		p = 100; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: drivers/i2c/chips/tps65010.c:160:
+		case 2:		p = 75; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: drivers/i2c/chips/tps65010.c:161:
+		case 1:		p = 50; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#269: FILE: drivers/i2c/chips/tps65010.c:162:
+		default:	p = 25; break;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#283: FILE: drivers/i2c/chips/tps65010.c:176:
+	char buf [100];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#285: FILE: drivers/i2c/chips/tps65010.c:178:
+	dbg_chgstat(buf, sizeof buf, chgstatus);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#291: FILE: drivers/i2c/chips/tps65010.c:184:
+	char buf [100];

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#293: FILE: drivers/i2c/chips/tps65010.c:186:
+	dbg_regstat(buf, sizeof buf, regstatus);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#299: FILE: drivers/i2c/chips/tps65010.c:192:
+	char buf [100];

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#301: FILE: drivers/i2c/chips/tps65010.c:194:
+	dbg_chgconf(por, buf, sizeof buf, chgconfig);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#319: FILE: drivers/i2c/chips/tps65010.c:212:
+	unsigned	i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#324: FILE: drivers/i2c/chips/tps65010.c:217:
+	case TPS65010:	chip = "tps65010"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: drivers/i2c/chips/tps65010.c:218:
+	case TPS65011:	chip = "tps65011"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#326: FILE: drivers/i2c/chips/tps65010.c:219:
+	case TPS65012:	chip = "tps65012"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: drivers/i2c/chips/tps65010.c:220:
+	case TPS65013:	chip = "tps65013"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#328: FILE: drivers/i2c/chips/tps65010.c:221:
+	default:	chip = NULL; break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/i2c/chips/tps65010.c:224:
+	seq_printf(s, "driver  %s\nversion %s\nchip    %s\n\n",
+			DRIVER_NAME, DRIVER_VERSION, chip);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: drivers/i2c/chips/tps65010.c:234:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#346: FILE: drivers/i2c/chips/tps65010.c:239:
+	dbg_chgconf(tps->por, buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#350: FILE: drivers/i2c/chips/tps65010.c:243:
+	dbg_chgstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#353: FILE: drivers/i2c/chips/tps65010.c:246:
+	dbg_chgstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#358: FILE: drivers/i2c/chips/tps65010.c:251:
+	dbg_regstat(buf, sizeof buf, value);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#361: FILE: drivers/i2c/chips/tps65010.c:254:
+	dbg_regstat(buf, sizeof buf, value);

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/i2c/chips/tps65010.c:258:
+	(void) schedule_delayed_work(&tps->work, POWER_POLL_DELAY);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: drivers/i2c/chips/tps65010.c:260:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: drivers/i2c/chips/tps65010.c:273:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/i2c/chips/tps65010.c:278:
+	seq_printf(s, "led1 %s, on=%02x, per=%02x, %d/%d msec\n",
+		(value & 0x80)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/i2c/chips/tps65010.c:287:
+	seq_printf(s, "led2 %s, on=%02x, per=%02x, %d/%d msec\n",
+		(value & 0x80)

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#405: FILE: drivers/i2c/chips/tps65010.c:298:
+		if (value & (1 << (4 +i)))
 		                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/i2c/chips/tps65010.c:300:
+			seq_printf(s, "  gpio%d-out %s\n", i + 1,
+				(value & (1 << i)) ? "low" : "hi ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/i2c/chips/tps65010.c:303:
+			seq_printf(s, "  gpio%d-in  %s %s %s\n", i + 1,
+				(value & (1 << i)) ? "hi " : "low",

WARNING:CONST_STRUCT: struct file_operations should normally be const
#424: FILE: drivers/i2c/chips/tps65010.c:317:
+static struct file_operations debug_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#431: FILE: drivers/i2c/chips/tps65010.c:324:
+#define	DEBUG_FOPS	&debug_fops

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: drivers/i2c/chips/tps65010.c:343:
+	if (tps->nmask2) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#455: FILE: drivers/i2c/chips/tps65010.c:348:
+	} else

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#464: FILE: drivers/i2c/chips/tps65010.c:357:
+#if 0

CHECK:BRACES: braces {} should be used on all arms of this statement
#475: FILE: drivers/i2c/chips/tps65010.c:368:
+	if (tps->nmask1) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#480: FILE: drivers/i2c/chips/tps65010.c:373:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#483: FILE: drivers/i2c/chips/tps65010.c:376:
+		unsigned	charging = 0;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#486: FILE: drivers/i2c/chips/tps65010.c:379:
+		if (tmp & (TPS_CHG_USB|TPS_CHG_AC))
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#493: FILE: drivers/i2c/chips/tps65010.c:386:
+		if (!(tps->chgstatus & ~(TPS_CHG_USB|TPS_CHG_AC))
 		                                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: drivers/i2c/chips/tps65010.c:387:
+		if (!(tps->chgstatus & ~(TPS_CHG_USB|TPS_CHG_AC))
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#494: FILE: drivers/i2c/chips/tps65010.c:387:
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 				                                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#495: FILE: drivers/i2c/chips/tps65010.c:388:
+				&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
+				&& (tps->chgconf & TPS_CHARGE_ENABLE)

CHECK:BRACES: braces {} should be used on all arms of this statement
#497: FILE: drivers/i2c/chips/tps65010.c:390:
+			if (tps->chgstatus & TPS_CHG_USB) {
[...]
+			} else if (tps->chgstatus & TPS_CHG_AC)
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#509: FILE: drivers/i2c/chips/tps65010.c:402:
+				((tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC))
 				                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#518: FILE: drivers/i2c/chips/tps65010.c:411:
+	if ((tps->model != TPS65013 || !tps->charging)
+			&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: drivers/i2c/chips/tps65010.c:411:
+			&& (tps->chgstatus & (TPS_CHG_USB|TPS_CHG_AC)))
 			                                 ^

CHECK:SPACING: No space is necessary after a cast
#521: FILE: drivers/i2c/chips/tps65010.c:414:
+		(void) schedule_delayed_work(&tps->work, POWER_POLL_DELAY);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/i2c/chips/tps65010.c:433:
+		chgconfig = i2c_smbus_read_byte_data(&tps->client,
+					TPS_CHGCONFIG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/i2c/chips/tps65010.c:441:
+		status = i2c_smbus_write_byte_data(&tps->client,
+				TPS_CHGCONFIG, chgconfig);

CHECK:SPACING: No space is necessary after a cast
#568: FILE: drivers/i2c/chips/tps65010.c:461:
+	(void) schedule_work(&tps->work);

WARNING:SIZEOF_PARENTHESIS: sizeof *tps should be sizeof(*tps)
#615: FILE: drivers/i2c/chips/tps65010.c:508:
+	tps = kmalloc(sizeof *tps, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *tps should be sizeof(*tps)
#619: FILE: drivers/i2c/chips/tps65010.c:512:
+	memset(tps, 0, sizeof *tps);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#627: FILE: drivers/i2c/chips/tps65010.c:520:
+	strlcpy(tps->client.name, DRIVER_NAME, I2C_NAME_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: drivers/i2c/chips/tps65010.c:525:
+		dev_dbg(&bus->dev, "can't attach %s to device %d, err %d\n",
+				DRIVER_NAME, address, status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#661: FILE: drivers/i2c/chips/tps65010.c:554:
+#define set_irq_type(num,trigger)	do{}while(0)
                         ^

ERROR:SPACING: space required before the open brace '{'
#661: FILE: drivers/i2c/chips/tps65010.c:554:
+#define set_irq_type(num,trigger)	do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#661: FILE: drivers/i2c/chips/tps65010.c:554:
+#define set_irq_type(num,trigger)	do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#661: FILE: drivers/i2c/chips/tps65010.c:554:
+#define set_irq_type(num,trigger)	do{}while(0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/i2c/chips/tps65010.c:560:
+		status = request_irq(tps->irq, tps65010_irq,
+			SA_SAMPLE_RANDOM, DRIVER_NAME, tps);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/i2c/chips/tps65010.c:563:
+			dev_dbg(&tps->client.dev, "can't get IRQ %d, err %d\n",
+					tps->irq, status);

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: drivers/i2c/chips/tps65010.c:574:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#682: FILE: drivers/i2c/chips/tps65010.c:575:
+		printk(KERN_WARNING "%s: IRQ not configured!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: drivers/i2c/chips/tps65010.c:576:
+		printk(KERN_WARNING "%s: IRQ not configured!\n",
+				DRIVER_NAME);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#685: FILE: drivers/i2c/chips/tps65010.c:578:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#692: FILE: drivers/i2c/chips/tps65010.c:585:
+		printk(KERN_WARNING "%s: unknown TPS chip\n", DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/i2c/chips/tps65010.c:593:
+	show_chgstatus("chg/init",
+		i2c_smbus_read_byte_data(&tps->client, TPS_CHGSTATUS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: drivers/i2c/chips/tps65010.c:595:
+	show_regstatus("reg/init",
+		i2c_smbus_read_byte_data(&tps->client, TPS_REGSTATUS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/i2c/chips/tps65010.c:598:
+	pr_debug("%s: vdcdc1 0x%02x, vdcdc2 %02x, vregs1 %02x\n", DRIVER_NAME,
+		i2c_smbus_read_byte_data(&tps->client, TPS_VDCDC1),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/i2c/chips/tps65010.c:602:
+	pr_debug("%s: defgpio 0x%02x, mask3 0x%02x\n", DRIVER_NAME,
+		i2c_smbus_read_byte_data(&tps->client, TPS_DEFGPIO),

CHECK:SPACING: No space is necessary after a cast
#728: FILE: drivers/i2c/chips/tps65010.c:621:
+	(void) i2c_smbus_write_byte_data(&tps->client, TPS_MASK1, ~tps->nmask1);

CHECK:SPACING: No space is necessary after a cast
#733: FILE: drivers/i2c/chips/tps65010.c:626:
+	(void) i2c_smbus_write_byte_data(&tps->client, TPS_MASK2, ~tps->nmask2);

CHECK:SPACING: No space is necessary after a cast
#735: FILE: drivers/i2c/chips/tps65010.c:628:
+	(void) i2c_smbus_write_byte_data(&tps->client, TPS_MASK3, 0x0f

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#740: FILE: drivers/i2c/chips/tps65010.c:633:
+	tps->file = debugfs_create_file(DRIVER_NAME, S_IRUGO, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: drivers/i2c/chips/tps65010.c:634:
+	tps->file = debugfs_create_file(DRIVER_NAME, S_IRUGO, NULL,
+				tps, DEBUG_FOPS);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#768: FILE: drivers/i2c/chips/tps65010.c:661:
+int tps65010_set_vbus_draw(unsigned mA)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#785: FILE: drivers/i2c/chips/tps65010.c:678:
+	if ((the_tps->chgstatus & TPS_CHG_USB)
+			&& test_and_set_bit(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#785: FILE: drivers/i2c/chips/tps65010.c:678:
+			&& test_and_set_bit(

CHECK:SPACING: No space is necessary after a cast
#788: FILE: drivers/i2c/chips/tps65010.c:681:
+		(void) schedule_work(&the_tps->work);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#801: FILE: drivers/i2c/chips/tps65010.c:694:
+int tps65010_set_gpio_out_value(unsigned gpio, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#801: FILE: drivers/i2c/chips/tps65010.c:694:
+int tps65010_set_gpio_out_value(unsigned gpio, unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#804: FILE: drivers/i2c/chips/tps65010.c:697:
+	unsigned defgpio;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < GPIO1'
#808: FILE: drivers/i2c/chips/tps65010.c:701:
+	if ((gpio < GPIO1) || (gpio > GPIO4))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio > GPIO4'
#808: FILE: drivers/i2c/chips/tps65010.c:701:
+	if ((gpio < GPIO1) || (gpio > GPIO4))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/i2c/chips/tps65010.c:723:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+		TPS_DEFGPIO, defgpio);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#832: FILE: drivers/i2c/chips/tps65010.c:725:
+	pr_debug("%s: gpio%dout = %s, defgpio 0x%02x\n", DRIVER_NAME,
 	                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/i2c/chips/tps65010.c:726:
+	pr_debug("%s: gpio%dout = %s, defgpio 0x%02x\n", DRIVER_NAME,
+		gpio, value ? "high" : "low",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#846: FILE: drivers/i2c/chips/tps65010.c:739:
+int tps65010_set_led(unsigned led, unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#846: FILE: drivers/i2c/chips/tps65010.c:739:
+int tps65010_set_led(unsigned led, unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#849: FILE: drivers/i2c/chips/tps65010.c:742:
+	unsigned led_on, led_per, offs;

ERROR:SPACING: space required before the open parenthesis '('
#854: FILE: drivers/i2c/chips/tps65010.c:747:
+	if(led == LED1)

CHECK:BRACES: braces {} should be used on all arms of this statement
#854: FILE: drivers/i2c/chips/tps65010.c:747:
+	if(led == LED1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#856: FILE: drivers/i2c/chips/tps65010.c:749:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#863: FILE: drivers/i2c/chips/tps65010.c:756:
+	dev_dbg (&the_tps->client.dev, "led%i_on   0x%02x\n", led,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/i2c/chips/tps65010.c:757:
+	dev_dbg (&the_tps->client.dev, "led%i_on   0x%02x\n", led,
+		i2c_smbus_read_byte_data(&the_tps->client, TPS_LED1_ON + offs));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: drivers/i2c/chips/tps65010.c:759:
+	dev_dbg (&the_tps->client.dev, "led%i_per  0x%02x\n", led,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: drivers/i2c/chips/tps65010.c:760:
+	dev_dbg (&the_tps->client.dev, "led%i_per  0x%02x\n", led,
+		i2c_smbus_read_byte_data(&the_tps->client, TPS_LED1_PER + offs));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#883: FILE: drivers/i2c/chips/tps65010.c:776:
+		printk(KERN_ERR "%s: Wrong mode parameter for tps65010_set_led()\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tps65010_set_led', this function's name, in a string
#883: FILE: drivers/i2c/chips/tps65010.c:776:
+		printk(KERN_ERR "%s: Wrong mode parameter for tps65010_set_led()\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#890: FILE: drivers/i2c/chips/tps65010.c:783:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_LED1_ON + offs, led_on);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#893: FILE: drivers/i2c/chips/tps65010.c:786:
+		printk(KERN_ERR "%s: Failed to write led%i_on register\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#899: FILE: drivers/i2c/chips/tps65010.c:792:
+	dev_dbg (&the_tps->client.dev, "led%i_on   0x%02x\n", led,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/i2c/chips/tps65010.c:793:
+	dev_dbg (&the_tps->client.dev, "led%i_on   0x%02x\n", led,
+		i2c_smbus_read_byte_data(&the_tps->client, TPS_LED1_ON + offs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/i2c/chips/tps65010.c:796:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_LED1_PER + offs, led_per);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#906: FILE: drivers/i2c/chips/tps65010.c:799:
+		printk(KERN_ERR "%s: Failed to write led%i_per register\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#912: FILE: drivers/i2c/chips/tps65010.c:805:
+	dev_dbg (&the_tps->client.dev, "led%i_per  0x%02x\n", led,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: drivers/i2c/chips/tps65010.c:806:
+	dev_dbg (&the_tps->client.dev, "led%i_per  0x%02x\n", led,
+		i2c_smbus_read_byte_data(&the_tps->client, TPS_LED1_PER + offs));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#925: FILE: drivers/i2c/chips/tps65010.c:818:
+int tps65010_set_vib(unsigned value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#928: FILE: drivers/i2c/chips/tps65010.c:821:
+	unsigned vdcdc2;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: drivers/i2c/chips/tps65010.c:833:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+		TPS_VDCDC2, vdcdc2);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#953: FILE: drivers/i2c/chips/tps65010.c:846:
+int tps65010_set_low_pwr(unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#956: FILE: drivers/i2c/chips/tps65010.c:849:
+	unsigned vdcdc1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: drivers/i2c/chips/tps65010.c:857:
+	pr_debug("%s: %s low_pwr, vdcdc1 0x%02x\n", DRIVER_NAME,
+		mode ? "enable" : "disable",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: drivers/i2c/chips/tps65010.c:873:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_VDCDC1, vdcdc1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#983: FILE: drivers/i2c/chips/tps65010.c:876:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: drivers/i2c/chips/tps65010.c:880:
+		pr_debug("%s: vdcdc1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(&the_tps->client, TPS_VDCDC1));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1000: FILE: drivers/i2c/chips/tps65010.c:893:
+int tps65010_config_vregs1(unsigned value)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: drivers/i2c/chips/tps65010.c:903:
+^I^I        i2c_smbus_read_byte_data(&the_tps->client, TPS_VREGS1));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/i2c/chips/tps65010.c:903:
+	pr_debug("%s: vregs1 0x%02x\n", DRIVER_NAME,
+		        i2c_smbus_read_byte_data(&the_tps->client, TPS_VREGS1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/i2c/chips/tps65010.c:906:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_VREGS1, value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: drivers/i2c/chips/tps65010.c:909:
+		printk(KERN_ERR "%s: Failed to write vregs1 register\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/i2c/chips/tps65010.c:910:
+^I^I        DRIVER_NAME);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/i2c/chips/tps65010.c:910:
+		printk(KERN_ERR "%s: Failed to write vregs1 register\n",
+		        DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: drivers/i2c/chips/tps65010.c:913:
+		pr_debug("%s: vregs1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(&the_tps->client, TPS_VREGS1));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1034: FILE: drivers/i2c/chips/tps65010.c:927:
+/* FIXME: Assumes AC or USB power is present. Setting AUA bit is not
+	required if power supply is through a battery */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1034: FILE: drivers/i2c/chips/tps65010.c:927:
+	required if power supply is through a battery */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1036: FILE: drivers/i2c/chips/tps65010.c:929:
+int tps65013_set_low_pwr(unsigned mode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1039: FILE: drivers/i2c/chips/tps65010.c:932:
+	unsigned vdcdc1, chgconfig;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1047: FILE: drivers/i2c/chips/tps65010.c:940:
+	pr_debug("%s: %s low_pwr, chgconfig 0x%02x vdcdc1 0x%02x\n",
+		DRIVER_NAME,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: drivers/i2c/chips/tps65010.c:961:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_CHGCONFIG, chgconfig);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1070: FILE: drivers/i2c/chips/tps65010.c:963:
+		printk(KERN_ERR "%s: Failed to write chconfig register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/i2c/chips/tps65010.c:964:
+		printk(KERN_ERR "%s: Failed to write chconfig register\n",
+	 DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: drivers/i2c/chips/tps65010.c:974:
+	status = i2c_smbus_write_byte_data(&the_tps->client,
+			TPS_VDCDC1, vdcdc1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1084: FILE: drivers/i2c/chips/tps65010.c:977:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1085: FILE: drivers/i2c/chips/tps65010.c:978:
+		printk(KERN_ERR "%s: Failed to write vdcdc1 register\n",
+	 DRIVER_NAME);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: drivers/i2c/chips/tps65010.c:981:
+		pr_debug("%s: vdcdc1 0x%02x\n", DRIVER_NAME,
+			i2c_smbus_read_byte_data(&the_tps->client, TPS_VDCDC1));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1103: FILE: drivers/i2c/chips/tps65010.c:996:
+	printk(KERN_INFO "%s: version %s\n", DRIVER_NAME, DRIVER_VERSION);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1112: FILE: drivers/i2c/chips/tps65010.c:1005:
+			printk(KERN_ERR "%s: no chip?\n", DRIVER_NAME);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1116: FILE: drivers/i2c/chips/tps65010.c:1009:
+		msleep(10);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1121: FILE: drivers/i2c/chips/tps65010.c:1014:
+	if (machine_is_omap_osk()) {
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1167: FILE: drivers/i2c/chips/tps65010.c:1060:
+}
+/* NOTE:  this MUST be initialized before the other parts of the system

CHECK:BIT_MACRO: Prefer using the BIT macro
#1192: FILE: include/asm-arm/arch-omap/tps65010.h:38:
+#	define	TPS_CHG_USB		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1193: FILE: include/asm-arm/arch-omap/tps65010.h:39:
+#	define	TPS_CHG_AC		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1194: FILE: include/asm-arm/arch-omap/tps65010.h:40:
+#	define	TPS_CHG_THERM		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1195: FILE: include/asm-arm/arch-omap/tps65010.h:41:
+#	define	TPS_CHG_TERM		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1196: FILE: include/asm-arm/arch-omap/tps65010.h:42:
+#	define	TPS_CHG_TAPER_TMO	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1197: FILE: include/asm-arm/arch-omap/tps65010.h:43:
+#	define	TPS_CHG_CHG_TMO		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1198: FILE: include/asm-arm/arch-omap/tps65010.h:44:
+#	define	TPS_CHG_PRECHG_TMO	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1199: FILE: include/asm-arm/arch-omap/tps65010.h:45:
+#	define	TPS_CHG_TEMP_ERR	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1201: FILE: include/asm-arm/arch-omap/tps65010.h:47:
+#	define	TPS_REG_ONOFF		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1202: FILE: include/asm-arm/arch-omap/tps65010.h:48:
+#	define	TPS_REG_COVER		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1203: FILE: include/asm-arm/arch-omap/tps65010.h:49:
+#	define	TPS_REG_UVLO		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1204: FILE: include/asm-arm/arch-omap/tps65010.h:50:
+#	define	TPS_REG_NO_CHG		(1 << 4)	/* tps65013 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1205: FILE: include/asm-arm/arch-omap/tps65010.h:51:
+#	define	TPS_REG_PG_LD02		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1206: FILE: include/asm-arm/arch-omap/tps65010.h:52:
+#	define	TPS_REG_PG_LD01		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1207: FILE: include/asm-arm/arch-omap/tps65010.h:53:
+#	define	TPS_REG_PG_MAIN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1208: FILE: include/asm-arm/arch-omap/tps65010.h:54:
+#	define	TPS_REG_PG_CORE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1214: FILE: include/asm-arm/arch-omap/tps65010.h:60:
+#	define	TPS_CHARGE_POR		(1 << 7)	/* 65010/65012 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1215: FILE: include/asm-arm/arch-omap/tps65010.h:61:
+#	define	TPS65013_AUA		(1 << 7)	/* 65011/65013 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1216: FILE: include/asm-arm/arch-omap/tps65010.h:62:
+#	define	TPS_CHARGE_RESET	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1217: FILE: include/asm-arm/arch-omap/tps65010.h:63:
+#	define	TPS_CHARGE_FAST		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1219: FILE: include/asm-arm/arch-omap/tps65010.h:65:
+#	define	TPS_VBUS_500MA		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1220: FILE: include/asm-arm/arch-omap/tps65010.h:66:
+#	define	TPS_VBUS_CHARGING	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1221: FILE: include/asm-arm/arch-omap/tps65010.h:67:
+#	define	TPS_CHARGE_ENABLE	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1227: FILE: include/asm-arm/arch-omap/tps65010.h:73:
+#	define	TPS_ENABLE_LP		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1230: FILE: include/asm-arm/arch-omap/tps65010.h:76:
+#	define	TPS_LDO2_ENABLE	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1231: FILE: include/asm-arm/arch-omap/tps65010.h:77:
+#	define	TPS_LDO2_OFF	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1234: FILE: include/asm-arm/arch-omap/tps65010.h:80:
+#	define	TPS_VLDO2_2_5V	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1236: FILE: include/asm-arm/arch-omap/tps65010.h:82:
+#	define	TPS_LDO1_ENABLE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1237: FILE: include/asm-arm/arch-omap/tps65010.h:83:
+#	define	TPS_LDO1_OFF	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1240: FILE: include/asm-arm/arch-omap/tps65010.h:86:
+#	define	TPS_VLDO1_2_5V	(1 << 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1257: FILE: include/asm-arm/arch-omap/tps65010.h:137:
+extern int tps65010_set_vib(unsigned value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1257: FILE: include/asm-arm/arch-omap/tps65010.h:137:
+extern int tps65010_set_vib(unsigned value);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1268: FILE: include/asm-arm/arch-omap/tps65010.h:148:
+extern int tps65010_config_vregs1(unsigned value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1268: FILE: include/asm-arm/arch-omap/tps65010.h:148:
+extern int tps65010_config_vregs1(unsigned value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1273: FILE: include/asm-arm/arch-omap/tps65010.h:153:
+extern int tps65013_set_low_pwr(unsigned mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1273: FILE: include/asm-arm/arch-omap/tps65010.h:153:
+extern int tps65013_set_low_pwr(unsigned mode);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 55 warnings, 109 checks, 1208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
