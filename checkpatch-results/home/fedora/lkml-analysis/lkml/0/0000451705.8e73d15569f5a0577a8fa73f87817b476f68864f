CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: include/linux/bio.h:201:
+extern int bio_append(struct bio **bio_p,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#68: FILE: include/linux/blkdev.h:194:
+^Iunsigned short^I^Imax_phys_segments; ^I/* <= max_sectors */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: include/linux/blkdev.h:195:
+^Iunsigned short^I^Imax_hw_segments; ^I/* <= max_sectors */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/blkdev.h:431:
+extern int bio_max_iovecs(request_queue_t *q, int *iovec_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: fs/bio.c:337:
+/* bio_append appends an IO vector to a bio.  bio_append expects to be
+   called with bio->bi_idx indicating the maximum number of IO vectors

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: fs/bio.c:340:
+   bio_append will submit the current bio and allocate a new one. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/bio.c:341:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/bio.c:341:
+   $

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: fs/bio.c:346:
+	struct bio_vec *vec;
+	if (bio->bi_idx == bio->bi_vcnt) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/bio.c:347:
+^I^Istruct bio *old = bio; $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bio"
#116: FILE: fs/bio.c:349:
+		if (bio != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#120: FILE: fs/bio.c:353:
+#define COPY(field)	bio->bi_ ## field = old->bi_ ## field

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#131: FILE: fs/bio.c:364:
+		if (bio == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#143: FILE: fs/bio.c:376:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#181: FILE: fs/bio.c:440:
+	if ((bio = bio_alloc(GFP_NOIO, nr_bvecs)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: fs/mpage.c:84:
+mpage_alloc(struct block_device *bdev, int rw,
 		sector_t first_sector, int nr_vecs, int gfp_flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: fs/mpage.c:166:
+	const unsigned max_bvecs = bio_max_iovecs(bdev->bd_queue, &bvec_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: fs/mpage.c:221:
+		bio = mpage_alloc(bdev, READ, blocks[0] << (blkbits - 9),
 					nr_bvecs, GFP_KERNEL);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#353: FILE: fs/mpage.c:225:
 	}
+	else if (*last_block_in_bio != blocks[0] - 1)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: fs/mpage.c:227:
+		bio->bi_idx = bio->bi_vcnt; /* force bio_append to
+					       allocate a new bio. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: fs/mpage.c:227:
+					       allocate a new bio. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#416: FILE: fs/mpage.c:324:
+	const unsigned max_bvecs = bio_max_iovecs(bdev->bd_queue, &bvec_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: fs/mpage.c:422:
+		bio = mpage_alloc(bdev, WRITE, blocks[0] << (blkbits - 9),
+					max_bvecs, GFP_NOFS);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#457: FILE: fs/mpage.c:426:
 	}
+	else if (*last_block_in_bio != blocks[0] - 1)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451705.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 8 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451705.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
