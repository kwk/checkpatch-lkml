WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#66: 
--- linux-2.4.23-mhf145/drivers/char/serial.c	2004-01-02 13:09:24.000000000 +0800

CHECK:BRACES: Unbalanced braces around else statement
#102: FILE: drivers/char/serial.c:1534:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'Verion' may be misspelled - perhaps 'Version'?
#129: FILE: drivers/char/serial.c:66:
+ * 01/04: Verion: 5.1
           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: drivers/char/serial.c:1222:
+int start_uart(struct async_struct * info)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/serial.c:1227:
+  if (uart_config[state->type].flags & UART_STARTECH) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 16)
#198: FILE: drivers/char/serial.c:1227:
+  if (uart_config[state->type].flags & UART_STARTECH) {
[...]
 		serial_outp(info, UART_LCR, 0xBF);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: drivers/char/serial.c:1327:
+int init_uart(struct async_struct * info)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#255: FILE: drivers/char/serial.c:1329:
+	int	retval=0;
 	   	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#256: FILE: drivers/char/serial.c:1330:
+	struct serial_state *state= info->state;
 	                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/char/serial.c:1335:
+  serial_outp(info, UART_LCR, UART_LCR_WLEN8);^I/* reset DLAB */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: drivers/char/serial.c:1408:
+static int startup(struct async_struct * info)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#279: FILE: drivers/char/serial.c:1411:
+	int	retval=0;
 	   	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#280: FILE: drivers/char/serial.c:1412:
+	void (*handler)(int, void *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#280: FILE: drivers/char/serial.c:1412:
+	void (*handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#280: FILE: drivers/char/serial.c:1412:
+	void (*handler)(int, void *, struct pt_regs *);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#281: FILE: drivers/char/serial.c:1413:
+	struct serial_state *state= info->state;
 	                          ^

CHECK:SPACING: No space is necessary after a cast
#304: FILE: drivers/char/serial.c:1436:
+		info->xmit.buf = (unsigned char *) page;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: drivers/char/serial.c:1439:
+	printk("starting up ttys%d (irq %d)...", info->line, state->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/char/serial.c:1448:
+	if (state->irq && (!IRQ_ports[state->irq] ||
+			  !IRQ_ports[state->irq]->next_port)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: drivers/char/serial.c:1452:
+#ifdef CONFIG_SERIAL_MULTIPORT^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/char/serial.c:1462:
+^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#330: FILE: drivers/char/serial.c:1462:
+		} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/char/serial.c:1489:
+^I * Now, initialize the UART $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: drivers/char/serial.c:1507:
+static void sleep_uart(struct async_struct * info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/char/serial.c:1510:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/char/serial.c:3302:
+	int retval = 0;
+	printk("serio: Suspending %lx\n", info->port);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: drivers/char/serial.c:3302:
+	printk("serio: Suspending %lx\n", info->port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: drivers/char/serial.c:3312:
+		serial_outp(info, UART_MCR,(info->MCR & ~(UART_MCR_DTR|UART_MCR_RTS)));
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#450: FILE: drivers/char/serial.c:3312:
+		serial_outp(info, UART_MCR,(info->MCR & ~(UART_MCR_DTR|UART_MCR_RTS)));
 		                                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#459: FILE: drivers/char/serial.c:3321:
+}
+static int rs_suspend(struct tty_struct *tty)

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: drivers/char/serial.c:3325:
+	unsigned long flags;
+	save_flags(flags); cli();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: drivers/char/serial.c:3343:
+	printk("serio: Resuming %lx\n", info->port);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/char/serial.c:3345:
+  if ((retval = start_uart(info)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 16)
#483: FILE: drivers/char/serial.c:3345:
+  if ((retval = start_uart(info)))
+		goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#483: FILE: drivers/char/serial.c:3345:
+  if ((retval = start_uart(info)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: drivers/char/serial.c:3358:
+	unsigned long flags;
+	save_flags(flags); cli();

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#512: FILE: drivers/char/serial.c:3374:
+	unsigned long flags; /* Interrupts will be reenabled once per iteration */
 	                                           ^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#514: FILE: drivers/char/serial.c:3376:
+	printk("serio: pm event 0x%x received\n", rqst);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: drivers/char/serial.c:3378:
+	for (i =0; i < NR_PORTS; i++, state++) {
 	       ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#581: FILE: include/linux/tty_driver.h:174:
+	int (*suspend) (struct tty_struct *tty);

WARNING:SPACING: Unnecessary space before function pointer arguments
#582: FILE: include/linux/tty_driver.h:175:
+	int (*resume) (struct tty_struct *tty);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 20 warnings, 6 checks, 490 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
