CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#57: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#57: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#57: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#57: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#68: FILE: mm/filemap.c:1750:
+ssize_t do_generic_direct_read(struct file * filp, char * buf, size_t count, loff_t *ppos)
                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: mm/filemap.c:1750:
+ssize_t do_generic_direct_read(struct file * filp, char * buf, size_t count, loff_t *ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: mm/filemap.c:1750:
+ssize_t do_generic_direct_read(struct file * filp, char * buf, size_t count, loff_t *ppos)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 1 checks, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
