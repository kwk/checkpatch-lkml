WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -uNr linux-2.5.59/drivers/char/Kconfig linux-2.5.59-hangcheck/drivers/char/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/char/Kconfig:995:
+config HANGCHECK_TIMER
+	tristate "Hangcheck timer"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/char/hangcheck-timer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/char/hangcheck-timer.c:13:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/char/hangcheck-timer.c:18:
+ * $

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#94: FILE: drivers/char/hangcheck-timer.c:19:
+ * You should have recieved a copy of the GNU General Public
                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: drivers/char/hangcheck-timer.c:21:
+ * Free Software Foundation, Inc., 59 Temple Place - Suite 330,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#104: FILE: drivers/char/hangcheck-timer.c:29:
+ * margin of error.  The hangcheck_tick module paramter takes the timer
                                                ^^^^^^^^

WARNING:TYPO_SPELLING: 'alloted' may be misspelled - perhaps 'allotted'?
#110: FILE: drivers/char/hangcheck-timer.c:35:
+ * alloted time and margin (here 60 + 180, or 240 seconds), the machine
    ^^^^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#124: FILE: drivers/char/hangcheck-timer.c:49:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: drivers/char/hangcheck-timer.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#131: FILE: drivers/char/hangcheck-timer.c:56:
+	printk(KERN_INFO "I/O fencing modules %s\n", VERSION_STR);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#139: FILE: drivers/char/hangcheck-timer.c:64:
+static int hangcheck_reboot = 0;  /* Do not reboot */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: drivers/char/hangcheck-timer.c:67:
+MODULE_PARM(hangcheck_tick,"i");
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: drivers/char/hangcheck-timer.c:69:
+MODULE_PARM(hangcheck_margin,"i");
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: drivers/char/hangcheck-timer.c:71:
+MODULE_PARM(hangcheck_reboot,"i");
                             ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#153: FILE: drivers/char/hangcheck-timer.c:78:
+static int __init hangcheck_parse_tick(char *str) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: drivers/char/hangcheck-timer.c:80:
+	int par;
+	if (get_option(&str,&par))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#155: FILE: drivers/char/hangcheck-timer.c:80:
+	if (get_option(&str,&par))
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#155: FILE: drivers/char/hangcheck-timer.c:80:
+	if (get_option(&str,&par))
 	                    ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#160: FILE: drivers/char/hangcheck-timer.c:85:
+static int __init hangcheck_parse_margin(char *str) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: drivers/char/hangcheck-timer.c:87:
+	int par;
+	if (get_option(&str,&par))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#162: FILE: drivers/char/hangcheck-timer.c:87:
+	if (get_option(&str,&par))
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#162: FILE: drivers/char/hangcheck-timer.c:87:
+	if (get_option(&str,&par))
 	                    ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#167: FILE: drivers/char/hangcheck-timer.c:92:
+static int __init hangcheck_parse_reboot(char *str) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: drivers/char/hangcheck-timer.c:94:
+	int par;
+	if (get_option(&str,&par))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#169: FILE: drivers/char/hangcheck-timer.c:94:
+	if (get_option(&str,&par))
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#169: FILE: drivers/char/hangcheck-timer.c:94:
+	if (get_option(&str,&par))
 	                    ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#174: FILE: drivers/char/hangcheck-timer.c:99:
+__setup("hcheck_tick", hangcheck_parse_tick);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#175: FILE: drivers/char/hangcheck-timer.c:100:
+__setup("hcheck_margin", hangcheck_parse_margin);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#176: FILE: drivers/char/hangcheck-timer.c:101:
+__setup("hcheck_reboot", hangcheck_parse_reboot);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#179: FILE: drivers/char/hangcheck-timer.c:104:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#186: FILE: drivers/char/hangcheck-timer.c:111:
+	function:	hangcheck_fire,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: drivers/char/hangcheck-timer.c:114:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#201: FILE: drivers/char/hangcheck-timer.c:126:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#202: FILE: drivers/char/hangcheck-timer.c:127:
+	printk(KERN_CRIT "tsc_diff = %lu.%lu, predicted diff is %lu.%lu.\n",

CHECK:SPACING: No space is necessary after a cast
#203: FILE: drivers/char/hangcheck-timer.c:128:
+	       (unsigned long) ((tsc_diff >> 32) & 0xFFFFFFFFULL),

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/char/hangcheck-timer.c:129:
+	       (unsigned long) (tsc_diff & 0xFFFFFFFFULL),

CHECK:SPACING: No space is necessary after a cast
#205: FILE: drivers/char/hangcheck-timer.c:130:
+	       (unsigned long) ((hangcheck_tsc_margin >> 32) & 0xFFFFFFFFULL),

CHECK:SPACING: No space is necessary after a cast
#206: FILE: drivers/char/hangcheck-timer.c:131:
+	       (unsigned long) (hangcheck_tsc_margin & 0xFFFFFFFFULL));

WARNING:LONG_LINE: line length of 160 exceeds 100 columns
#207: FILE: drivers/char/hangcheck-timer.c:132:
+	printk(KERN_CRIT "hangcheck_margin = %lu, HZ = %lu, current_cpu_data.loops_per_jiffy = %lu.\n", hangcheck_margin, HZ, current_cpu_data.loops_per_jiffy);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#207: FILE: drivers/char/hangcheck-timer.c:132:
+	printk(KERN_CRIT "hangcheck_margin = %lu, HZ = %lu, current_cpu_data.loops_per_jiffy = %lu.\n", hangcheck_margin, HZ, current_cpu_data.loops_per_jiffy);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/char/hangcheck-timer.c:134:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#212: FILE: drivers/char/hangcheck-timer.c:137:
+			printk(KERN_CRIT "Hangcheck: hangcheck is restarting the machine.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#215: FILE: drivers/char/hangcheck-timer.c:140:
+			printk(KERN_CRIT "Hangcheck: hangcheck value past margin!\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#218: FILE: drivers/char/hangcheck-timer.c:143:
+	mod_timer(&hangcheck_ticktock, jiffies + (hangcheck_tick*HZ));
 	                                                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: drivers/char/hangcheck-timer.c:147:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/char/hangcheck-timer.c:150:
+        version_hash_print();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/hangcheck-timer.c:150:
+        version_hash_print();$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: drivers/char/hangcheck-timer.c:151:
+	printk("Hangcheck: starting hangcheck timer (tick is %d seconds, margin is %d seconds).\n",

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#229: FILE: drivers/char/hangcheck-timer.c:154:
+	hangcheck_tsc_margin = (unsigned long long)(hangcheck_margin + hangcheck_tick) * (unsigned long long)HZ * (unsigned long long)current_cpu_data.loops_per_jiffy;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#232: FILE: drivers/char/hangcheck-timer.c:157:
+	mod_timer(&hangcheck_ticktock, jiffies + (hangcheck_tick*HZ));
 	                                                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: drivers/char/hangcheck-timer.c:162:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/char/hangcheck-timer.c:165:
+	printk("Stopping hangcheck timer.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 22 warnings, 14 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
