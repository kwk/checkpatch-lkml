WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
USB HID buttons quirk for Chic Technology Corp. Browser Mice (ID 05FE:0011).

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#95: FILE: drivers/usb/input/hid-core.c:1573:
+	{ USB_VENDOR_ID_CHIC, USB_DEVICE_ID_CHIC_BROWSER_MOUSE, HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->type == EV_KEY'
#106: FILE: drivers/usb/input/hid-input.c:410:
+	if ((device->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK) &&
+		 (usage->type == EV_KEY) && (usage->code == BTN_EXTRA)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->code == BTN_EXTRA'
#106: FILE: drivers/usb/input/hid-input.c:410:
+	if ((device->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK) &&
+		 (usage->type == EV_KEY) && (usage->code == BTN_EXTRA)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/usb/input/hid-input.c:411:
+	if ((device->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK) &&
+		 (usage->type == EV_KEY) && (usage->code == BTN_EXTRA)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->type == EV_KEY'
#121: FILE: drivers/usb/input/hid-input.c:534:
+	if ((usage->type == EV_KEY) && (usage->hid > 0x00090000) && (usage->hid <= 0x00090010)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->hid > 0x00090000'
#121: FILE: drivers/usb/input/hid-input.c:534:
+	if ((usage->type == EV_KEY) && (usage->hid > 0x00090000) && (usage->hid <= 0x00090010)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->hid <= 0x00090010'
#121: FILE: drivers/usb/input/hid-input.c:534:
+	if ((usage->type == EV_KEY) && (usage->hid > 0x00090000) && (usage->hid <= 0x00090010)) {

WARNING:LONG_LINE_COMMENT: line length of 160 exceeds 100 columns
#131: FILE: drivers/usb/input/hid-input.c:544:
+	if ((usage->type == EV_KEY) && (hid->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK)) /* some buttons may have quirks - *don't* generate events just yet */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage->type == EV_KEY'
#131: FILE: drivers/usb/input/hid-input.c:544:
+	if ((usage->type == EV_KEY) && (hid->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK)) /* some buttons may have quirks - *don't* generate events just yet */

CHECK:BRACES: braces {} should be used on all arms of this statement
#157: FILE: drivers/usb/input/hid-input.c:577:
+	if (hid->quirks & HID_QUIRK_CHIC_2BUTTON_COMBOS_HACK) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(meta)
#169: FILE: drivers/usb/input/hid-input.c:589:
+		for (i = 0; i < sizeof(meta) / sizeof(meta[0]); ++i) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#172: FILE: drivers/usb/input/hid-input.c:592:
+			if (!(hid->btn_quirks & (1 << i))
+			    && ((previous & meta[i].mask) == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#173: FILE: drivers/usb/input/hid-input.c:593:
+			    && ((previous & meta[i].mask) == 0)
+			    && ((buttons & meta[i].mask) == meta[i].mask)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/usb/input/hid-input.c:596:
+				input_event (input, meta[i].type, meta[i].button, meta[i].value);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#179: FILE: drivers/usb/input/hid-input.c:599:
+			else
+			if ((hid->btn_quirks & (1 << i))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#181: FILE: drivers/usb/input/hid-input.c:601:
+			if ((hid->btn_quirks & (1 << i))
+			    && ((previous & meta[i].mask) == meta[i].mask)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#182: FILE: drivers/usb/input/hid-input.c:602:
+			    && ((previous & meta[i].mask) == meta[i].mask)
+			    && ((buttons & meta[i].mask) != meta[i].mask)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: drivers/usb/input/hid-input.c:605:
+				input_event (input, meta[i].type, meta[i].button, 0);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#189: FILE: drivers/usb/input/hid-input.c:609:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: drivers/usb/input/hid-input.c:614:
+			input_event (input, EV_KEY, BTN_MOUSE + i, (buttons >> i) & 1);

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#229: FILE: drivers/usb/input/hid.h:438:
+	__u32 btn_quirks;						/* Which of the extra buttons are active */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: drivers/usb/input/hid.h:487:
+extern void hidinput_hid_quirks(struct hid_device *, struct hid_field *, struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#237: FILE: drivers/usb/input/hid.h:487:
+extern void hidinput_hid_quirks(struct hid_device *, struct hid_field *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#237: FILE: drivers/usb/input/hid.h:487:
+extern void hidinput_hid_quirks(struct hid_device *, struct hid_field *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#237: FILE: drivers/usb/input/hid.h:487:
+extern void hidinput_hid_quirks(struct hid_device *, struct hid_field *, struct pt_regs *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 12 warnings, 13 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
