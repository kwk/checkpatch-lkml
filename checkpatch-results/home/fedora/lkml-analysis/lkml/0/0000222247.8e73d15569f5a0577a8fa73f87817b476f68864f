WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This new version reduces the number of changes required by users of the agpgart

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#   Run Lindent on generic.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#48: 
--- a/drivers/char/agp/generic.c	2004-12-17 11:17:31 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#56: FILE: drivers/char/agp/generic.c:65:
+EXPORT_SYMBOL(agp_free_key);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'curr->bridge->driver->agp_destroy_page'
#82: FILE: drivers/char/agp/generic.c:133:
+			curr->bridge->driver->
+			    agp_destroy_page(phys_to_virt(curr->memory[i]));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#128: FILE: drivers/char/agp/generic.c:199:
+EXPORT_SYMBOL(agp_allocate_memory);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#165: FILE: drivers/char/agp/generic.c:271:
+EXPORT_SYMBOL_GPL(agp_num_entries);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#175: FILE: drivers/char/agp/generic.c:304:
+EXPORT_SYMBOL(agp_copy_info);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#188: FILE: drivers/char/agp/generic.c:331:
+		printk(KERN_INFO PFX "memory %p is already bound!\n", curr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#207: FILE: drivers/char/agp/generic.c:349:
+EXPORT_SYMBOL(agp_bind_memory);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#216: FILE: drivers/char/agp/generic.c:367:
+		printk(KERN_INFO PFX "memory %p was not bound!\n", curr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: drivers/char/agp/generic.c:388:
+static void agp_v2_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: drivers/char/agp/generic.c:388:
+static void agp_v2_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: drivers/char/agp/generic.c:388:
+static void agp_v2_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#245: FILE: drivers/char/agp/generic.c:393:
+	    ((*cmd & AGPSTAT_SBA) && (*tmp & AGPSTAT_SBA)
+	     && (*mode & AGPSTAT_SBA)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#252: FILE: drivers/char/agp/generic.c:399:
+	    ((*cmd & AGPSTAT2_4X) && (*tmp & AGPSTAT2_4X)
+	     && (*mode & AGPSTAT2_4X)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#258: FILE: drivers/char/agp/generic.c:404:
+	    ((*cmd & AGPSTAT2_2X) && (*tmp & AGPSTAT2_2X)
+	     && (*mode & AGPSTAT2_2X)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#264: FILE: drivers/char/agp/generic.c:409:
+	    ((*cmd & AGPSTAT2_1X) && (*tmp & AGPSTAT2_1X)
+	     && (*mode & AGPSTAT2_1X)))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: drivers/char/agp/generic.c:428:
+static void agp_v3_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: drivers/char/agp/generic.c:428:
+static void agp_v3_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: drivers/char/agp/generic.c:428:
+static void agp_v3_parse_one(u32 * mode, u32 * cmd, u32 * tmp)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#299: FILE: drivers/char/agp/generic.c:458:
+			printk(KERN_INFO PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: drivers/char/agp/generic.c:470:
+		printk(KERN_INFO PFX

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: drivers/char/agp/generic.c:481:
+			printk("%s requested AGPx8 but bridge not capable.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#347: FILE: drivers/char/agp/generic.c:508:
+			printk(KERN_INFO PFX

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: drivers/char/agp/generic.c:510:
+			       "Badness. Don't know which AGP mode to set. "
+			       "[cmd:%x tmp:%x fell back to:- cmd:%x tmp:%x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#353: FILE: drivers/char/agp/generic.c:513:
+				printk(KERN_INFO PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#357: FILE: drivers/char/agp/generic.c:516:
+				printk(KERN_INFO PFX

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#391: FILE: drivers/char/agp/generic.c:554:
+		    ((cmd & AGPSTAT_FW) && (tmp & AGPSTAT_FW)
+		     && (mode & AGPSTAT_FW)))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#406: FILE: drivers/char/agp/generic.c:568:
+EXPORT_SYMBOL(agp_collect_device_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#423: FILE: drivers/char/agp/generic.c:585:
+		printk(KERN_INFO PFX

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#431: FILE: drivers/char/agp/generic.c:592:
+EXPORT_SYMBOL(agp_device_command);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#441: FILE: drivers/char/agp/generic.c:607:
+EXPORT_SYMBOL(get_agp_version);

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#480: FILE: drivers/char/agp/generic.c:639:
+			/* Disable calibration cycle in RX91<1> when not in AGP3.0 mode of operation. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#492: FILE: drivers/char/agp/generic.c:649:
+			printk(KERN_INFO PFX "Device is in legacy mode,"

WARNING:SPLIT_STRING: quoted string split across lines
#493: FILE: drivers/char/agp/generic.c:650:
+			printk(KERN_INFO PFX "Device is in legacy mode,"
+			       " falling back to 2.x\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#502: FILE: drivers/char/agp/generic.c:658:
+EXPORT_SYMBOL(agp_generic_enable);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#554: FILE: drivers/char/agp/generic.c:737:
+		} while (!table
+			 && (i < agp_bridge->driver->num_aperture_sizes));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#635: FILE: drivers/char/agp/generic.c:837:
+EXPORT_SYMBOL(agp_generic_free_gatt_table);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'agp_bridge->driver->mask_memory'
#669: FILE: drivers/char/agp/generic.c:898:
+		writel(agp_bridge->driver->
+		       mask_memory(mem->memory[i], mem->type),

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#677: FILE: drivers/char/agp/generic.c:905:
+EXPORT_SYMBOL(agp_generic_insert_memory);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#693: FILE: drivers/char/agp/generic.c:924:
+EXPORT_SYMBOL(agp_generic_remove_memory);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#701: FILE: drivers/char/agp/generic.c:931:
+EXPORT_SYMBOL(agp_generic_alloc_by_type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#711: FILE: drivers/char/agp/generic.c:942:
+EXPORT_SYMBOL(agp_generic_free_by_type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#730: FILE: drivers/char/agp/generic.c:967:
+EXPORT_SYMBOL(agp_generic_alloc_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#876: FILE: drivers/char/agp/generic.c:1138:
+EXPORT_SYMBOL(agp3_generic_sizes);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 36 warnings, 6 checks, 778 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
