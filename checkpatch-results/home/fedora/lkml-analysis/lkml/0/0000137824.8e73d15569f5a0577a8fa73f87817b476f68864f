WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#303: FILE: fs/ncpfs/ioctl.c:22:
+#include <asm/uaccess.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#335: FILE: fs/ncpfs/ioctl.c:674:
+struct ncp_objectname_ioctl_32
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'an userspace' may be misspelled - perhaps 'a userspace'?
#338: FILE: fs/ncpfs/ioctl.c:677:
+	compat_caddr_t	object_name;	/* an userspace data, in most cases user name */
 	              	            	   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#342: FILE: fs/ncpfs/ioctl.c:681:
+struct ncp_privatedata_ioctl_32
+{

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#355: FILE: fs/ncpfs/ioctl.c:694:
+static int do_ncp_ncprequest(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#369: FILE: fs/ncpfs/ioctl.c:708:
+static int do_ncp_getmountuid2(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#383: FILE: fs/ncpfs/ioctl.c:722:
+			       (unsigned int __user *) compat_ptr(arg));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#388: FILE: fs/ncpfs/ioctl.c:727:
+static int do_ncp_getfsinfo2(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#420: FILE: fs/ncpfs/ioctl.c:759:
+static int do_ncp_getobjectname(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: fs/ncpfs/ioctl.c:773:
+        if (err)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: fs/ncpfs/ioctl.c:773:
+        if (err)$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#446: FILE: fs/ncpfs/ioctl.c:785:
+static int do_ncp_setobjectname(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#460: FILE: fs/ncpfs/ioctl.c:799:
+static int do_ncp_getprivatedata(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: fs/ncpfs/ioctl.c:813:
+        if (err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: fs/ncpfs/ioctl.c:813:
+        if (err)$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#484: FILE: fs/ncpfs/ioctl.c:823:
+static int do_ncp_setprivatedata(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#540: FILE: fs/ncpfs/ioctl.c:879:
+		arg = (unsigned long) compat_ptr(arg);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#579: FILE: include/linux/ncp_fs.h:247:
+long ncp_compat_ioctl(struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#579: FILE: include/linux/ncp_fs.h:247:
+long ncp_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#579: FILE: include/linux/ncp_fs.h:247:
+long ncp_compat_ioctl(struct file *, unsigned int, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 2 checks, 514 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137824.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
