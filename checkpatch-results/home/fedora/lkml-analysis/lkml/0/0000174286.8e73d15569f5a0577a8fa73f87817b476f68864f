WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#71: FILE: drivers/w1/Kconfig:6:
+	  Dallas's 1-wire bus is usefull to connect slow 1-pin devices
 	                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#149: FILE: drivers/w1/matrox_w1.c:181:
+	 * True for G400, for some other we need resource 0, see drivers/video/matrox/matroxfb_base.c

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#172: FILE: drivers/w1/w1.c:103:
+	__ATTR(name, S_IRUGO, w1_default_read_name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#175: FILE: drivers/w1/w1.c:106:
+	__ATTR(value, S_IRUGO, w1_default_read_name, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#180: FILE: drivers/w1/w1.c:111:
+		.mode = S_IRUGO,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#187: FILE: drivers/w1/w1.c:118:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#361: FILE: drivers/w1/w1.c:249:
+static W1_MASTER_ATTR_RO(name, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#362: FILE: drivers/w1/w1.c:250:
+static W1_MASTER_ATTR_RO(slaves, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#363: FILE: drivers/w1/w1.c:251:
+static W1_MASTER_ATTR_RO(slave_count, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#364: FILE: drivers/w1/w1.c:252:
+static W1_MASTER_ATTR_RO(max_slave_count, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#365: FILE: drivers/w1/w1.c:253:
+static W1_MASTER_ATTR_RO(attempts, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#366: FILE: drivers/w1/w1.c:254:
+static W1_MASTER_ATTR_RO(timeout, S_IRUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#367: FILE: drivers/w1/w1.c:255:
+static W1_MASTER_ATTR_RO(pointer, S_IRUGO);

CHECK:BRACES: Unbalanced braces around else statement
#494: FILE: drivers/w1/w1.c:563:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#610: FILE: drivers/w1/w1.c:675:
+		list_for_each_entry(sl, &dev->slist, w1_slave_entry)
 				clear_bit(W1_SLAVE_ACTIVE, (long *)&sl->flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#622: FILE: drivers/w1/w1.c:681:
+			if (!test_bit(W1_SLAVE_ACTIVE, (unsigned long *)&sl->flags) && !--sl->ttl) {
[...]
-			}
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: drivers/w1/w1.h:28:
+  ^I__u64^Ifamily:8,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: drivers/w1/w1.h:28:
+  ^I__u64^Ifamily:8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/w1/w1.h:28:
+  ^I__u64^Ifamily:8,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: drivers/w1/w1.h:29:
+  ^I^Iid:48,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: drivers/w1/w1.h:29:
+  ^I^Iid:48,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/w1/w1.h:29:
+  ^I^Iid:48,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: drivers/w1/w1.h:30:
+  ^I^Icrc:8;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: drivers/w1/w1.h:30:
+  ^I^Icrc:8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: drivers/w1/w1.h:30:
+  ^I^Icrc:8;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#717: FILE: drivers/w1/w1.h:95:
+	void			(*write_byte)(unsigned long, u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#717: FILE: drivers/w1/w1.h:95:
+	void			(*write_byte)(unsigned long, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#726: FILE: drivers/w1/w1.h:100:
+	u8			(*touch_bit)(unsigned long, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#726: FILE: drivers/w1/w1.h:100:
+	u8			(*touch_bit)(unsigned long, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#728: FILE: drivers/w1/w1.h:102:
+	u8			(*reset_bus)(unsigned long);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#828: FILE: drivers/w1/w1_int.c:42:
+static struct w1_master * w1_alloc_dev(u32 id, int slave_count, int slave_ttl,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 24 warnings, 3 checks, 876 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
