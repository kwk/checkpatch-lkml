WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#27: 
   I broke up the cursor patch. This patch creates a seperate cursor 
                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urN -X /home/jsimmons/dontdiff linus-2.6/drivers/video/console/fbcon.c fbdev-2.6/drivers/video/console/fbcon.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/video/console/fbcon.c:347:
+^I^I^I^I^I^Iidx, image->height, shift_high, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: drivers/video/console/fbcon.c:347:
+			fb_move_buf_unaligned(info, &info->pixmap, dst, pitch, src,
+						idx, image->height, shift_high, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/video/console/fbcon.c:389:
+^I^I^Ifb_move_buf_aligned(info, &info->pixmap, dst, pitch, src, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/video/console/fbcon.c:390:
+			fb_move_buf_aligned(info, &info->pixmap, dst, pitch, src, 
+						width, image->height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: drivers/video/fbmem.c:424:
+void fb_move_buf_aligned(struct fb_info *info, struct fb_pixmap *buf,
+			u8 *dst, u32 d_pitch, u8 *src, u32 s_pitch,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/video/fbmem.c:437:
+void fb_move_buf_unaligned(struct fb_info *info, struct fb_pixmap *buf,
+			u8 *dst, u32 d_pitch, u8 *src, u32 idx,

CHECK:SPACING: No space is necessary after a cast
#146: FILE: drivers/video/fbmem.c:441:
+	u8 mask = (u8) (0xfff << shift_high), tmp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: drivers/video/fbmem.c:446:
+			tmp = buf->inbuf(info, dst+j);
 			                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: drivers/video/fbmem.c:449:
+			buf->outbuf(info, dst+j, &tmp, 1);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: drivers/video/fbmem.c:451:
+			buf->outbuf(info, dst+j+1, &tmp, 1);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: drivers/video/fbmem.c:451:
+			buf->outbuf(info, dst+j+1, &tmp, 1);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#164: FILE: drivers/video/fbmem.c:454:
+		tmp = buf->inbuf(info, dst+idx);
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: drivers/video/fbmem.c:457:
+		buf->outbuf(info, dst+idx, &tmp, 1);
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: drivers/video/fbmem.c:460:
+			buf->outbuf(info, dst+idx+1, &tmp, 1);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: drivers/video/fbmem.c:460:
+			buf->outbuf(info, dst+idx+1, &tmp, 1);
 			                         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#181: FILE: drivers/video/fbmem.c:471:
+char* fb_get_buffer_offset(struct fb_info *info, struct fb_pixmap *buf, u32 size)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#217: FILE: drivers/video/fbmem.c:877:
+	u8 *data = (u8 *) info->cursor.image.data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fb_info->sprite.addr"
#229: FILE: drivers/video/fbmem.c:1289:
+	if (fb_info->sprite.addr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fb_info->sprite.outbuf"
#239: FILE: drivers/video/fbmem.c:1299:
+	if (fb_info->sprite.outbuf == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fb_info->sprite.inbuf"
#241: FILE: drivers/video/fbmem.c:1301:
+	if (fb_info->sprite.inbuf == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#266: FILE: drivers/video/fbmem.c:1491:
+EXPORT_SYMBOL(fb_move_buf_aligned);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#267: FILE: drivers/video/fbmem.c:1492:
+EXPORT_SYMBOL(fb_load_cursor_image);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#299: FILE: drivers/video/softcursor.c:76:
+	fb_move_buf_aligned(info, &info->sprite, dst, d_pitch, src, s_pitch, info->cursor.image.height);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: Unnecessary space before function pointer arguments
#329: FILE: include/linux/fb.h:383:
+	u8   (*inbuf) (struct fb_info *info, u8 *addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: include/linux/fb.h:396:
+^I/* For framebuffers with strange non linear layouts */^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: include/linux/fb.h:407:
+	int (*fb_setcolreg)(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: include/linux/fb.h:407:
+	int (*fb_setcolreg)(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: include/linux/fb.h:407:
+	int (*fb_setcolreg)(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#407: FILE: include/linux/fb.h:408:
+			    unsigned blue, unsigned transp, struct fb_info *info);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#407: FILE: include/linux/fb.h:408:
+			    unsigned blue, unsigned transp, struct fb_info *info);

WARNING:SPACING: Unnecessary space before function pointer arguments
#416: FILE: include/linux/fb.h:417:
+	void (*fb_fillrect) (struct fb_info *info, const struct fb_fillrect *rect);

WARNING:SPACING: Unnecessary space before function pointer arguments
#418: FILE: include/linux/fb.h:419:
+	void (*fb_copyarea) (struct fb_info *info, const struct fb_copyarea *region);

WARNING:SPACING: Unnecessary space before function pointer arguments
#420: FILE: include/linux/fb.h:421:
+	void (*fb_imageblit) (struct fb_info *info, const struct fb_image *image);

WARNING:SPACING: Unnecessary space before function pointer arguments
#423: FILE: include/linux/fb.h:424:
+	int (*fb_cursor) (struct fb_info *info, struct fb_cursor *cursor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: include/linux/fb.h:430:
+^Iint (*fb_sync)(struct fb_info *info);^I^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#459: FILE: include/linux/fb.h:530:
+extern char* fb_get_buffer_offset(struct fb_info *info, struct fb_pixmap *buf, u32 size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: include/linux/fb.h:530:
+extern char* fb_get_buffer_offset(struct fb_info *info, struct fb_pixmap *buf, u32 size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: include/linux/fb.h:531:
+extern void fb_move_buf_unaligned(struct fb_info *info, struct fb_pixmap *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: include/linux/fb.h:532:
+extern void fb_move_buf_unaligned(struct fb_info *info, struct fb_pixmap *buf,
+				u8 *dst, u32 d_pitch, u8 *src, u32 idx,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#463: FILE: include/linux/fb.h:534:
+extern void fb_move_buf_aligned(struct fb_info *info, struct fb_pixmap *buf,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: include/linux/fb.h:537:
+extern void fb_load_cursor_image(struct fb_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#466: FILE: include/linux/fb.h:537:
+extern void fb_load_cursor_image(struct fb_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 16 warnings, 22 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000303531.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
