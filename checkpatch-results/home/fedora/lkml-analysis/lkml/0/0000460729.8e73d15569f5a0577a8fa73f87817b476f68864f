WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
operation is called with an unlock for each of the locks on the i_flock list.

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: fs/locks.c:512:
+        struct file_lock ufl;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/locks.c:512:
+        struct file_lock ufl;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#68: FILE: fs/locks.c:514:
        if (fl->fl_file->f_op &&
[...]
+               ufl = *fl;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#72: FILE: fs/locks.c:516:
            (lock = fl->fl_file->f_op->lock) != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: fs/locks.c:517:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: fs/locks.c:518:
+                * The filesystem defined its own lock operation.  Make a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: fs/locks.c:519:
+                * copy of the lock before changing its type to unlock so that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: fs/locks.c:520:
+                * the file_lock being removed stays valid.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: fs/locks.c:521:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/locks.c:522:
+               ufl = *fl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/locks.c:522:
+               ufl = *fl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: fs/locks.c:523:
+               ufl.fl_type = F_UNLCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/locks.c:523:
+               ufl.fl_type = F_UNLCK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: fs/locks.c:524:
+               lock(ufl.fl_file, F_SETLK, &ufl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/locks.c:524:
+               lock(ufl.fl_file, F_SETLK, &ufl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: fs/locks.c:526:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/locks.c:527:
+                * If the file_lock was removed, we are done.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/locks.c:528:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/locks.c:529:
+               if (*thisfl_p != fl)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/locks.c:529:
+               if (*thisfl_p != fl)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#85: FILE: fs/locks.c:529:
+               if (*thisfl_p != fl)
+                       return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: fs/locks.c:530:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/locks.c:530:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: fs/locks.c:1658:
+       void *lockOp;$

CHECK:CAMELCASE: Avoid CamelCase: <lockOp>
#94: FILE: fs/locks.c:1658:
+       void *lockOp;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/locks.c:1673:
+       lockOp = filp->f_op? filp->f_op->lock: NULL;$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#102: FILE: fs/locks.c:1673:
+       lockOp = filp->f_op? filp->f_op->lock: NULL;
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#102: FILE: fs/locks.c:1673:
+       lockOp = filp->f_op? filp->f_op->lock: NULL;
                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/locks.c:1679:
+                       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/locks.c:1680:
+                        * If there is a possibility that the kernel lock was$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/locks.c:1681:
+                        * released, start back at the beginning.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/locks.c:1682:
+                        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: fs/locks.c:1683:
+                       if (lockOp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/locks.c:1683:
+                       if (lockOp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#112: FILE: fs/locks.c:1683:
+                       if (lockOp)
+                               goto restart;

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: fs/locks.c:1684:
+                               goto restart;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/locks.c:1684:
+                               goto restart;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 14 warnings, 2 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
