WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#93: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#110: FILE: drivers/platform/Kconfig:7:
+config PLATFORM_MQ11XX
+	tristate "MediaQ 1100/32/68/78/88 SoC support"
+	---help---
+	  MediaQ 1100/32/68/78/88 are system-on-chips that implement a
+	  graphics engine, flat panel controller, USB function controller,
+	  OHCI-compliant USB host controller (1132 only), I2S and SPI
+	  controllers (also 1132 only).
+
+	  This driver implements only the basic support for MediaQ chips;
+	  after you select this option the subdevice drivers will appear
+	  in the respective submenus: MediaQ 1100/32/68/78/88 framebuffer
+	  support, Dell Axim X5 LCD support and so on.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called mq11xx_base.o.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: drivers/platform/mq11xx.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: drivers/platform/mq11xx.h:15:
+#define MQ11xx_REG_SIZE		(8*1024)
                        		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: drivers/platform/mq11xx.h:16:
+#define MQ11xx_FB_SIZE		(256*1024)
                       		    ^

WARNING:TYPO_SPELLING: 'contants' may be misspelled - perhaps 'constants'?
#179: FILE: drivers/platform/mq11xx.h:38:
+ * The following contants are IRQ offsets relative to the base IRQ number
                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/platform/mq11xx.h:54:
+#define IRQ_MQ_COMMAND_FIFO_HALF_EMPTY    ^I8$

CHECK:BIT_MACRO: Prefer using the BIT macro
#218: FILE: drivers/platform/mq11xx.h:77:
+#define MQ_CPU_CONTROL_MIU_READ_REQUEST_GENERATOR_ON	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#219: FILE: drivers/platform/mq11xx.h:78:
+#define MQ_CPU_CONTROL_DISBABLE_FB_READ_CACHE		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#220: FILE: drivers/platform/mq11xx.h:79:
+#define MQ_CPU_CONTROL_ENABLE_CLKRUN			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#226: FILE: drivers/platform/mq11xx.h:85:
+#define MQ_CPU_GE_BUSY					(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#240: FILE: drivers/platform/mq11xx.h:99:
+#define MQ_MIU_ENABLE					(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#241: FILE: drivers/platform/mq11xx.h:100:
+#define MQ_MIU_RESET_ENABLE				(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: drivers/platform/mq11xx.h:102:
+#define MQ_MIU_MEMORY_CLOCK_SOURCE_BUS			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#246: FILE: drivers/platform/mq11xx.h:105:
+#define MQ_MIU_MEMORY_CLOCK_DIVIDER_1_5			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#255: FILE: drivers/platform/mq11xx.h:114:
+#define MQ_MIU_DISPLAY_BURST_COUNT_4			(1 << 5)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: drivers/platform/mq11xx.h:117:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_MASK^I    ^I(3 << 7)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: drivers/platform/mq11xx.h:118:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_COUNT_2^I    ^I(0 << 7)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/platform/mq11xx.h:119:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_COUNT_4^I    ^I(1 << 7)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: drivers/platform/mq11xx.h:119:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_COUNT_4	    	(1 << 7)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: drivers/platform/mq11xx.h:120:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_COUNT_6^I    ^I(2 << 7)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/platform/mq11xx.h:121:
+#define MQ_MIU_GRAPHICS_ENGINE_BURST_COUNT_8^I    ^I(3 << 7)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: drivers/platform/mq11xx.h:123:
+#define MQ_MIU_CPU_BURST_COUNT_2^I    ^I^I(0 << 9)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: drivers/platform/mq11xx.h:124:
+#define MQ_MIU_CPU_BURST_COUNT_4^I    ^I^I(1 << 9)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#265: FILE: drivers/platform/mq11xx.h:124:
+#define MQ_MIU_CPU_BURST_COUNT_4	    		(1 << 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#266: FILE: drivers/platform/mq11xx.h:125:
+#define MQ_MIU_CPU_BURST_COUNT_6^I    ^I^I(2 << 9)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: drivers/platform/mq11xx.h:126:
+#define MQ_MIU_CPU_BURST_COUNT_8^I    ^I^I(3 << 9)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: drivers/platform/mq11xx.h:128:
+#define MQ_MIU_I2S_BURST_COUNT_2    ^I^I^I(0 << 11)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/platform/mq11xx.h:129:
+#define MQ_MIU_I2S_BURST_COUNT_4    ^I^I^I(1 << 11)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#270: FILE: drivers/platform/mq11xx.h:129:
+#define MQ_MIU_I2S_BURST_COUNT_4    			(1 << 11)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: drivers/platform/mq11xx.h:130:
+#define MQ_MIU_I2S_BURST_COUNT_6    ^I^I^I(2 << 11)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: drivers/platform/mq11xx.h:131:
+#define MQ_MIU_I2S_BURST_COUNT_8    ^I^I^I(3 << 11)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: drivers/platform/mq11xx.h:133:
+#define MQ_MIU_UDC_BURST_COUNT_2    ^I^I^I(0 << 13)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: drivers/platform/mq11xx.h:134:
+#define MQ_MIU_UDC_BURST_COUNT_4    ^I^I^I(1 << 13)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#275: FILE: drivers/platform/mq11xx.h:134:
+#define MQ_MIU_UDC_BURST_COUNT_4    			(1 << 13)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: drivers/platform/mq11xx.h:135:
+#define MQ_MIU_UDC_BURST_COUNT_6    ^I^I^I(2 << 13)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: drivers/platform/mq11xx.h:136:
+#define MQ_MIU_UDC_BURST_COUNT_8    ^I^I^I(3 << 13)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: drivers/platform/mq11xx.h:144:
+#define MQ_MIU_I2S_TRANSMIT_THRESHOLD_(v)    ^I^I((v) << 26)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: drivers/platform/mq11xx.h:158:
+#define MQ_INTERRUPT_CONTROL_INTERRUPT_ENABLE		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#300: FILE: drivers/platform/mq11xx.h:159:
+#define MQ_INTERRUPT_CONTROL_INTERRUPT_POLARITY		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#301: FILE: drivers/platform/mq11xx.h:160:
+#define MQ_INTERRUPT_CONTROL_GPIO_0_INTERRUPT_POLARITY	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#302: FILE: drivers/platform/mq11xx.h:161:
+#define MQ_INTERRUPT_CONTROL_GPIO_1_INTERRUPT_POLARITY	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: drivers/platform/mq11xx.h:162:
+#define MQ_INTERRUPT_CONTROL_GPIO_2_INTERRUPT_POLARITY	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#305: FILE: drivers/platform/mq11xx.h:164:
+#define MQ_INTERRUPT_MASK_VSYNC_RISING			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: drivers/platform/mq11xx.h:165:
+#define MQ_INTERRUPT_MASK_VSYNC_FALLING			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: drivers/platform/mq11xx.h:166:
+#define MQ_INTERRUPT_MASK_VENABLE_RISING		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: drivers/platform/mq11xx.h:167:
+#define MQ_INTERRUPT_MASK_VENABLE_FALLING		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#309: FILE: drivers/platform/mq11xx.h:168:
+#define MQ_INTERRUPT_MASK_BUS_CYCLE_ABORT		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#310: FILE: drivers/platform/mq11xx.h:169:
+#define MQ_INTERRUPT_MASK_GPIO_0			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#311: FILE: drivers/platform/mq11xx.h:170:
+#define MQ_INTERRUPT_MASK_GPIO_1			(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#312: FILE: drivers/platform/mq11xx.h:171:
+#define MQ_INTERRUPT_MASK_GPIO_2			(1 << 7)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: drivers/platform/mq11xx.h:172:
+#define MQ_INTERRUPT_MASK_COMMAND_FIFO_HALF_EMPTY    ^I(1 << 8)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: drivers/platform/mq11xx.h:172:
+#define MQ_INTERRUPT_MASK_COMMAND_FIFO_HALF_EMPTY    	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#314: FILE: drivers/platform/mq11xx.h:173:
+#define MQ_INTERRUPT_MASK_COMMAND_FIFO_EMPTY		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#315: FILE: drivers/platform/mq11xx.h:174:
+#define MQ_INTERRUPT_MASK_SOURCE_FIFO_HALF_EMPTY	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#316: FILE: drivers/platform/mq11xx.h:175:
+#define MQ_INTERRUPT_MASK_SOURCE_FIFO_EMPTY		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#317: FILE: drivers/platform/mq11xx.h:176:
+#define MQ_INTERRUPT_MASK_GRAPHICS_ENGINE_IDLE		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#318: FILE: drivers/platform/mq11xx.h:177:
+#define MQ_INTERRUPT_MASK_UHC_GLOBAL_SUSPEND_MODE	(1 << 13)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: drivers/platform/mq11xx.h:178:
+#define MQ_INTERRUPT_MASK_UHC_REMOTE_WAKE_UP    ^I(1 << 14)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#319: FILE: drivers/platform/mq11xx.h:178:
+#define MQ_INTERRUPT_MASK_UHC_REMOTE_WAKE_UP    	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: drivers/platform/mq11xx.h:179:
+#define MQ_INTERRUPT_MASK_UHC				(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#321: FILE: drivers/platform/mq11xx.h:180:
+#define MQ_INTERRUPT_MASK_UDC				(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#322: FILE: drivers/platform/mq11xx.h:181:
+#define MQ_INTERRUPT_MASK_I2S				(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#323: FILE: drivers/platform/mq11xx.h:182:
+#define MQ_INTERRUPT_MASK_SPI				(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#324: FILE: drivers/platform/mq11xx.h:183:
+#define MQ_INTERRUPT_MASK_UDC_WAKE_UP			(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#326: FILE: drivers/platform/mq11xx.h:185:
+#define MQ_INTERRUPT_STATUS_VSYNC_RISING		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#327: FILE: drivers/platform/mq11xx.h:186:
+#define MQ_INTERRUPT_STATUS_VSYNC_FALLING		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#328: FILE: drivers/platform/mq11xx.h:187:
+#define MQ_INTERRUPT_STATUS_VENABLE_RISING		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#329: FILE: drivers/platform/mq11xx.h:188:
+#define MQ_INTERRUPT_STATUS_VENABLE_FALLING		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#330: FILE: drivers/platform/mq11xx.h:189:
+#define MQ_INTERRUPT_STATUS_BUS_CYCLE_ABORT		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#331: FILE: drivers/platform/mq11xx.h:190:
+#define MQ_INTERRUPT_STATUS_GPIO_0			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#332: FILE: drivers/platform/mq11xx.h:191:
+#define MQ_INTERRUPT_STATUS_GPIO_1			(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#333: FILE: drivers/platform/mq11xx.h:192:
+#define MQ_INTERRUPT_STATUS_GPIO_2			(1 << 7)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: drivers/platform/mq11xx.h:193:
+#define MQ_INTERRUPT_STATUS_COMMAND_FIFO_HALF_EMPTY    ^I(1 << 8)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#334: FILE: drivers/platform/mq11xx.h:193:
+#define MQ_INTERRUPT_STATUS_COMMAND_FIFO_HALF_EMPTY    	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#335: FILE: drivers/platform/mq11xx.h:194:
+#define MQ_INTERRUPT_STATUS_COMMAND_FIFO_EMPTY		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#336: FILE: drivers/platform/mq11xx.h:195:
+#define MQ_INTERRUPT_STATUS_SOURCE_FIFO_HALF_EMPTY	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#337: FILE: drivers/platform/mq11xx.h:196:
+#define MQ_INTERRUPT_STATUS_SOURCE_FIFO_EMPTY		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#338: FILE: drivers/platform/mq11xx.h:197:
+#define MQ_INTERRUPT_STATUS_GRAPHICS_ENGINE_IDLE	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#339: FILE: drivers/platform/mq11xx.h:198:
+#define MQ_INTERRUPT_STATUS_UHC_GLOBAL_SUSPEND_MODE	(1 << 13)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: drivers/platform/mq11xx.h:199:
+#define MQ_INTERRUPT_STATUS_UHC_REMOTE_WAKE_UP    ^I(1 << 14)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#340: FILE: drivers/platform/mq11xx.h:199:
+#define MQ_INTERRUPT_STATUS_UHC_REMOTE_WAKE_UP    	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#341: FILE: drivers/platform/mq11xx.h:200:
+#define MQ_INTERRUPT_STATUS_UHC				(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#342: FILE: drivers/platform/mq11xx.h:201:
+#define MQ_INTERRUPT_STATUS_UDC				(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#343: FILE: drivers/platform/mq11xx.h:202:
+#define MQ_INTERRUPT_STATUS_I2S				(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#344: FILE: drivers/platform/mq11xx.h:203:
+#define MQ_INTERRUPT_STATUS_SPI				(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#345: FILE: drivers/platform/mq11xx.h:204:
+#define MQ_INTERRUPT_STATUS_UDC_WAKE_UP			(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#347: FILE: drivers/platform/mq11xx.h:206:
+#define MQ_INTERRUPT_RAWSTATUS_VSYNC			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#348: FILE: drivers/platform/mq11xx.h:207:
+#define MQ_INTERRUPT_RAWSTATUS_VENABLE			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#349: FILE: drivers/platform/mq11xx.h:208:
+#define MQ_INTERRUPT_RAWSTATUS_SCC			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#350: FILE: drivers/platform/mq11xx.h:209:
+#define MQ_INTERRUPT_RAWSTATUS_SPI			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#351: FILE: drivers/platform/mq11xx.h:210:
+#define MQ_INTERRUPT_RAWSTATUS_GPIO_0			(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#352: FILE: drivers/platform/mq11xx.h:211:
+#define MQ_INTERRUPT_RAWSTATUS_GPIO_1			(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: drivers/platform/mq11xx.h:212:
+#define MQ_INTERRUPT_RAWSTATUS_GPIO_2			(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#354: FILE: drivers/platform/mq11xx.h:213:
+#define MQ_INTERRUPT_RAWSTATUS_GRAPHICS_ENGINE_BUSY	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#355: FILE: drivers/platform/mq11xx.h:214:
+#define MQ_INTERRUPT_RAWSTATUS_SOURCE_FIFO_EMPTY	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#356: FILE: drivers/platform/mq11xx.h:215:
+#define MQ_INTERRUPT_RAWSTATUS_SOURCE_FIFO_HALF_EMPTY	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#357: FILE: drivers/platform/mq11xx.h:216:
+#define MQ_INTERRUPT_RAWSTATUS_COMMAND_FIFO_EMPTY	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#358: FILE: drivers/platform/mq11xx.h:217:
+#define MQ_INTERRUPT_RAWSTATUS_COMMAND_FIFO_HALF_EMPTY	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#359: FILE: drivers/platform/mq11xx.h:218:
+#define MQ_INTERRUPT_RAWSTATUS_UHC			(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#360: FILE: drivers/platform/mq11xx.h:219:
+#define MQ_INTERRUPT_RAWSTATUS_UHC_GLOBAL_SUSPEND	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#361: FILE: drivers/platform/mq11xx.h:220:
+#define MQ_INTERRUPT_RAWSTATUS_UHC_REMOTE_WAKE_UP	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#362: FILE: drivers/platform/mq11xx.h:221:
+#define MQ_INTERRUPT_RAWSTATUS_UDC			(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#363: FILE: drivers/platform/mq11xx.h:222:
+#define MQ_INTERRUPT_RAWSTATUS_UDC_WAKE_UP		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#374: FILE: drivers/platform/mq11xx.h:233:
+#define MQ_GC_CONTROL_ENABLE				(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#375: FILE: drivers/platform/mq11xx.h:234:
+#define MQ_GC_HORIZONTAL_COUNTER_RESET			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#376: FILE: drivers/platform/mq11xx.h:235:
+#define MQ_GC_VERTICAL_COUNTER_RESET			(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#377: FILE: drivers/platform/mq11xx.h:236:
+#define MQ_GC_IMAGE_WINDOW_ENABLE			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#388: FILE: drivers/platform/mq11xx.h:247:
+#define MQ_GC_HARDWARE_CURSOR_ENABLE			(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#390: FILE: drivers/platform/mq11xx.h:249:
+#define MQ_GC_X_SCANNING_DIRECTION			(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#391: FILE: drivers/platform/mq11xx.h:250:
+#define MQ_GC_LINE_SCANNING_DIRECTION			(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#392: FILE: drivers/platform/mq11xx.h:251:
+#define MQ_GC_HORIZONTAL_DOUBLING			(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#393: FILE: drivers/platform/mq11xx.h:252:
+#define MQ_GC_VERTICAL_DOUBLING				(1 << 15)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#396: FILE: drivers/platform/mq11xx.h:255:
+#define MQ_GC_GRCLK_SOURCE_FIRST    ^I^I^I(1 << 16)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#396: FILE: drivers/platform/mq11xx.h:255:
+#define MQ_GC_GRCLK_SOURCE_FIRST    			(1 << 16)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#397: FILE: drivers/platform/mq11xx.h:256:
+#define MQ_GC_GRCLK_SOURCE_SECON    ^I^I^I(2 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#398: FILE: drivers/platform/mq11xx.h:257:
+#define MQ_GC_GRCLK_SOURCE_THIRD    ^I^I^I(3 << 16)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#399: FILE: drivers/platform/mq11xx.h:258:
+#define MQ_GC_ENABLE_TEST_MODE				(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#400: FILE: drivers/platform/mq11xx.h:259:
+#define MQ_GC_ENABLE_POLY_SI_TFT			(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#403: FILE: drivers/platform/mq11xx.h:262:
+#define MQ_GC_GMCLK_FIRST_DIVISOR_1_5			(1 << 20)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: drivers/platform/mq11xx.h:270:
+#define MQ_GC_SHARP_160x160_HR_TFT_ENABLE    ^I^I(1 << 31)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#411: FILE: drivers/platform/mq11xx.h:270:
+#define MQ_GC_SHARP_160x160_HR_TFT_ENABLE    		(1 << 31)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/platform/mq11xx.h:273:
+#define MQ_GC_POWER_UP_INTERVAL_1^I    ^I^I(0 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#415: FILE: drivers/platform/mq11xx.h:274:
+#define MQ_GC_POWER_UP_INTERVAL_2^I    ^I^I(1 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#415: FILE: drivers/platform/mq11xx.h:274:
+#define MQ_GC_POWER_UP_INTERVAL_2	    		(1 << 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: drivers/platform/mq11xx.h:275:
+#define MQ_GC_POWER_UP_INTERVAL_4^I    ^I^I(2 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: drivers/platform/mq11xx.h:276:
+#define MQ_GC_POWER_UP_INTERVAL_8^I    ^I^I(3 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#418: FILE: drivers/platform/mq11xx.h:277:
+#define MQ_GC_POWER_UP_INTERVAL_16    ^I^I^I(4 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#419: FILE: drivers/platform/mq11xx.h:278:
+#define MQ_GC_POWER_UP_INTERVAL_32    ^I^I^I(5 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#420: FILE: drivers/platform/mq11xx.h:279:
+#define MQ_GC_POWER_UP_INTERVAL_48    ^I^I^I(6 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#421: FILE: drivers/platform/mq11xx.h:280:
+#define MQ_GC_POWER_UP_INTERVAL_64    ^I^I^I(7 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#422: FILE: drivers/platform/mq11xx.h:281:
+#define MQ_GC_FAST_POWER_UP				(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#423: FILE: drivers/platform/mq11xx.h:282:
+#define MQ_GC_POWER_DOWN_INTERVAL			(1 << 4)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#424: FILE: drivers/platform/mq11xx.h:283:
+#define MQ_GC_POWER_DOWN_INTERVAL_1^I    ^I^I(0 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#425: FILE: drivers/platform/mq11xx.h:284:
+#define MQ_GC_POWER_DOWN_INTERVAL_2^I    ^I^I(1 << 4)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#425: FILE: drivers/platform/mq11xx.h:284:
+#define MQ_GC_POWER_DOWN_INTERVAL_2	    		(1 << 4)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#426: FILE: drivers/platform/mq11xx.h:285:
+#define MQ_GC_POWER_DOWN_INTERVAL_4^I    ^I^I(2 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: drivers/platform/mq11xx.h:286:
+#define MQ_GC_POWER_DOWN_INTERVAL_8^I    ^I^I(3 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: drivers/platform/mq11xx.h:287:
+#define MQ_GC_POWER_DOWN_INTERVAL_16    ^I^I(4 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#429: FILE: drivers/platform/mq11xx.h:288:
+#define MQ_GC_POWER_DOWN_INTERVAL_32    ^I^I(5 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: drivers/platform/mq11xx.h:289:
+#define MQ_GC_POWER_DOWN_INTERVAL_48    ^I^I(6 << 4)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#431: FILE: drivers/platform/mq11xx.h:290:
+#define MQ_GC_POWER_DOWN_INTERVAL_64    ^I^I(7 << 4)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#432: FILE: drivers/platform/mq11xx.h:291:
+#define MQ_GC_FAST_POWER_DOWN				(1 << 7)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: drivers/platform/mq11xx.h:294:
+#define MQ_GC_HORIZONTAL_DISPLAY_TOTAL_(s)    ^I^I((s) << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/platform/mq11xx.h:296:
+#define MQ_GC_HORIZONTAL_DISPLAY_END_(s)    ^I^I((s) << 16)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/platform/mq11xx.h:319:
+                        u32 vertical_window;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/platform/mq11xx.h:319:
+                        u32 vertical_window;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: drivers/platform/mq11xx.h:351:
+#define MQ_GC_FRAME_CLOCK_START_(s)^I    ^I^I((s) << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#494: FILE: drivers/platform/mq11xx.h:353:
+#define MQ_GC_FRAME_CLOCK_END_(s)^I    ^I^I((s) << 16)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/platform/mq11xx.h:387:
+                        u32 count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/platform/mq11xx.h:387:
+                        u32 count;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#542: FILE: drivers/platform/mq11xx.h:401:
+#define MQ_CONFIG_LITTLE_ENDIAN_ENABLE			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#543: FILE: drivers/platform/mq11xx.h:402:
+#define MQ_CONFIG_BYTE_SWAPPING				(1 << 1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#546: FILE: drivers/platform/mq11xx.h:405:
+#define MQ_CONFIG_18_OSCILLATOR_DISABLED    ^I^I(0 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#547: FILE: drivers/platform/mq11xx.h:406:
+#define MQ_CONFIG_18_OSCILLATOR_OSCFO			(1 << 0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#548: FILE: drivers/platform/mq11xx.h:407:
+#define MQ_CONFIG_18_OSCILLATOR_INTERNAL    ^I^I(3 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#549: FILE: drivers/platform/mq11xx.h:408:
+#define MQ_CONFIG_CPU_CLOCK_DIVISOR			(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#550: FILE: drivers/platform/mq11xx.h:409:
+#define MQ_CONFIG_DTACK_CONTROL				(1 << 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: drivers/platform/mq11xx.h:410:
+#define MQ_CONFIG_INTERFACE_SYNCHRONIZER_CONTROL    ^I(1 << 10)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#551: FILE: drivers/platform/mq11xx.h:410:
+#define MQ_CONFIG_INTERFACE_SYNCHRONIZER_CONTROL    	(1 << 10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#552: FILE: drivers/platform/mq11xx.h:411:
+#define MQ_CONFIG_WRITE_DATA_LATCH    ^I^I^I(1 << 11)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#552: FILE: drivers/platform/mq11xx.h:411:
+#define MQ_CONFIG_WRITE_DATA_LATCH    			(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#553: FILE: drivers/platform/mq11xx.h:412:
+#define MQ_CONFIG_CPU_TEST_MODE				(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#554: FILE: drivers/platform/mq11xx.h:413:
+#define MQ_CONFIG_SOFTWARE_CHIP_RESET			(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#555: FILE: drivers/platform/mq11xx.h:414:
+#define MQ_CONFIG_WEAK_PULL_DOWN_FMOD			(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#556: FILE: drivers/platform/mq11xx.h:415:
+#define MQ_CONFIG_WEAK_PULL_DOWN_FLCLK			(1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#557: FILE: drivers/platform/mq11xx.h:416:
+#define MQ_CONFIG_WEAK_PULL_DOWN_PWM0			(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#558: FILE: drivers/platform/mq11xx.h:417:
+#define MQ_CONFIG_WEAK_PULL_DOWN_PWM1			(1 << 31)

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: drivers/platform/mq11xx.h:418:
+                        u32 config_2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/platform/mq11xx.h:418:
+                        u32 config_2;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#560: FILE: drivers/platform/mq11xx.h:419:
+#define MQ_CONFIG_CC_MODULE_ENABLE			(1 << 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: drivers/platform/mq11xx.h:420:
+                        u32 config_3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/platform/mq11xx.h:420:
+                        u32 config_3;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#563: FILE: drivers/platform/mq11xx.h:422:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_SH7750    ^I^I(0x01 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: drivers/platform/mq11xx.h:423:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_SH7709    ^I^I(0x02 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: drivers/platform/mq11xx.h:424:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_VR4111    ^I^I(0x04 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#566: FILE: drivers/platform/mq11xx.h:425:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_SA1110    ^I^I(0x08 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#567: FILE: drivers/platform/mq11xx.h:426:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_PCI    ^I^I(0x20 << 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: drivers/platform/mq11xx.h:427:
+#define MQ_CONFIG_BUS_INTERFACE_MODE_DRAGONBALL_EZ    ^I(0x40 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#570: FILE: drivers/platform/mq11xx.h:429:
+#define MQ_CONFIG_GE_FORCE_BUSY_GLOBAL			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#571: FILE: drivers/platform/mq11xx.h:430:
+#define MQ_CONFIG_GE_FORCE_BUSY_LOCAL			(1 << 1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: drivers/platform/mq11xx.h:431:
+#define MQ_CONFIG_GE_CLOCK_SELECT    ^I^I^I(1 << 2)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#572: FILE: drivers/platform/mq11xx.h:431:
+#define MQ_CONFIG_GE_CLOCK_SELECT    			(1 << 2)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#573: FILE: drivers/platform/mq11xx.h:432:
+#define MQ_CONFIG_GE_CLOCK_DIVIDER    ^I^I^I(7 << 3)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#575: FILE: drivers/platform/mq11xx.h:434:
+#define MQ_CONFIG_GE_CLOCK_DIVIDER_1_5			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#582: FILE: drivers/platform/mq11xx.h:441:
+#define MQ_CONFIG_GE_FIFO_RESET				(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#583: FILE: drivers/platform/mq11xx.h:442:
+#define MQ_CONFIG_GE_SOURCE_FIFO_RESET			(1 << 7)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#584: FILE: drivers/platform/mq11xx.h:443:
+#define MQ_CONFIG_USB_SE0_DETECT    ^I^I^I(1 << 8)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#584: FILE: drivers/platform/mq11xx.h:443:
+#define MQ_CONFIG_USB_SE0_DETECT    			(1 << 8)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#585: FILE: drivers/platform/mq11xx.h:444:
+#define MQ_CONFIG_UHC_DYNAMIC_POWER ^I   ^I^I(1 << 9)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#585: FILE: drivers/platform/mq11xx.h:444:
+#define MQ_CONFIG_UHC_DYNAMIC_POWER 	   		(1 << 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#586: FILE: drivers/platform/mq11xx.h:445:
+#define MQ_CONFIG_USB_COUNTER_SCALE_ENABLE    ^I^I(1 << 10)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#586: FILE: drivers/platform/mq11xx.h:445:
+#define MQ_CONFIG_USB_COUNTER_SCALE_ENABLE    		(1 << 10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: drivers/platform/mq11xx.h:446:
+#define MQ_CONFIG_UHC_READ_TEST_ENABLE    ^I^I(1 << 11)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#587: FILE: drivers/platform/mq11xx.h:446:
+#define MQ_CONFIG_UHC_READ_TEST_ENABLE    		(1 << 11)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: drivers/platform/mq11xx.h:447:
+#define MQ_CONFIG_UHC_TEST_MODE_DATA    ^I^I(0xf << 12)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#589: FILE: drivers/platform/mq11xx.h:448:
+#define MQ_CONFIG_UHC_TRANSCEIVER_TEST_ENABLE		(1 << 16)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: drivers/platform/mq11xx.h:449:
+#define MQ_CONFIG_UHC_OVER_CURRENT_DETECT  ^I  ^I(1 << 17)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#590: FILE: drivers/platform/mq11xx.h:449:
+#define MQ_CONFIG_UHC_OVER_CURRENT_DETECT  	  	(1 << 17)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: drivers/platform/mq11xx.h:450:
+#define MQ_CONFIG_UDC_DYNAMIC_POWER_ENABLE    ^I^I(1 << 18)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#591: FILE: drivers/platform/mq11xx.h:450:
+#define MQ_CONFIG_UDC_DYNAMIC_POWER_ENABLE    		(1 << 18)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: drivers/platform/mq11xx.h:451:
+#define MQ_CONFIG_UHC_TRANSCEIVER_ENABLE    ^I^I(1 << 19)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#592: FILE: drivers/platform/mq11xx.h:451:
+#define MQ_CONFIG_UHC_TRANSCEIVER_ENABLE    		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#593: FILE: drivers/platform/mq11xx.h:452:
+#define MQ_CONFIG_UDC_TRANSCEIVER_ENABLE		(1 << 20)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/platform/mq11xx.h:453:
+#define MQ_CONFIG_USB_TEST_VECTOR_GENERATION_ENABLE    ^I(1 << 21)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#594: FILE: drivers/platform/mq11xx.h:453:
+#define MQ_CONFIG_USB_TEST_VECTOR_GENERATION_ENABLE    	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#596: FILE: drivers/platform/mq11xx.h:455:
+#define MQ_CONFIG_GE_ENABLE				(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#597: FILE: drivers/platform/mq11xx.h:456:
+#define MQ_CONFIG_UHC_CLOCK_ENABLE			(1 << 1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: drivers/platform/mq11xx.h:457:
+#define MQ_CONFIG_UDC_CLOCK_ENABLE   ^I ^I^I(1 << 2)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#598: FILE: drivers/platform/mq11xx.h:457:
+#define MQ_CONFIG_UDC_CLOCK_ENABLE   	 		(1 << 2)

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/platform/mq11xx.h:473:
+                        u16 device_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/platform/mq11xx.h:473:
+                        u16 device_id;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#668: FILE: drivers/platform/mq11xx.h:527:
+#define MQ_FP_MONOCHROME_SELECT				(1 << 4)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#669: FILE: drivers/platform/mq11xx.h:528:
+#define MQ_FP_FLAT_PANEL_INTERFACE    ^I^I^I(7 << 5)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#670: FILE: drivers/platform/mq11xx.h:529:
+#define MQ_FP_FLAT_PANEL_INTERFACE_4_BIT    ^I^I(0 << 5)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: drivers/platform/mq11xx.h:530:
+#define MQ_FP_FLAT_PANEL_INTERFACE_6_BIT    ^I^I(1 << 5)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#671: FILE: drivers/platform/mq11xx.h:530:
+#define MQ_FP_FLAT_PANEL_INTERFACE_6_BIT    		(1 << 5)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#672: FILE: drivers/platform/mq11xx.h:531:
+#define MQ_FP_FLAT_PANEL_INTERFACE_8_BIT    ^I^I(2 << 5)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/platform/mq11xx.h:532:
+#define MQ_FP_FLAT_PANEL_INTERFACE_16_BIT    ^I^I(3 << 5)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#675: FILE: drivers/platform/mq11xx.h:534:
+#define MQ_FP_DITHER_PATTERN_1				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#682: FILE: drivers/platform/mq11xx.h:541:
+#define MQ_FP_ALTERNATE_WINDOW_CONTROL			(1 << 15)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: drivers/platform/mq11xx.h:543:
+#define MQ_FP_FRC_CONTROL_2_LEVEL    ^I^I^I(0 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#685: FILE: drivers/platform/mq11xx.h:544:
+#define MQ_FP_FRC_CONTROL_4_LEVEL    ^I^I^I(1 << 16)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#685: FILE: drivers/platform/mq11xx.h:544:
+#define MQ_FP_FRC_CONTROL_4_LEVEL    			(1 << 16)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: drivers/platform/mq11xx.h:545:
+#define MQ_FP_FRC_CONTROL_8_LEVEL    ^I^I^I(2 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: drivers/platform/mq11xx.h:546:
+#define MQ_FP_FRC_CONTROL_16_LEVEL    ^I^I^I(3 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#688: FILE: drivers/platform/mq11xx.h:547:
+#define MQ_FP_POLY_SI_TFT_ENABLE    ^I^I^I(1 << 19)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#688: FILE: drivers/platform/mq11xx.h:547:
+#define MQ_FP_POLY_SI_TFT_ENABLE    			(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#689: FILE: drivers/platform/mq11xx.h:548:
+#define MQ_FP_POLY_SI_TFT_FIRST_LINE			(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#690: FILE: drivers/platform/mq11xx.h:549:
+#define MQ_FP_POLY_SI_TFT_DISPLAY_DATA_CONTROL		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#691: FILE: drivers/platform/mq11xx.h:550:
+#define MQ_FP_APP_NOTE_SAYS_SET_THIS			(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#693: FILE: drivers/platform/mq11xx.h:552:
+#define MQ_FP_DISABLE_FLAT_PANEL_PINS			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#694: FILE: drivers/platform/mq11xx.h:553:
+#define MQ_FP_DISPLAY_ENABLE				(1 << 2)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: drivers/platform/mq11xx.h:554:
+#define MQ_FP_AC_MODULATION_ENABLE    ^I^I^I(1 << 3)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#695: FILE: drivers/platform/mq11xx.h:554:
+#define MQ_FP_AC_MODULATION_ENABLE    			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#696: FILE: drivers/platform/mq11xx.h:555:
+#define MQ_FP_PWM_CLOCK_ENABLE				(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#697: FILE: drivers/platform/mq11xx.h:556:
+#define MQ_FP_TFT_SHIFT_CLOCK_SELECT			(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#698: FILE: drivers/platform/mq11xx.h:557:
+#define MQ_FP_SHIFT_CLOCK_MASK				(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#699: FILE: drivers/platform/mq11xx.h:558:
+#define MQ_FP_FHSYNC_CONTROL				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#700: FILE: drivers/platform/mq11xx.h:559:
+#define MQ_FP_STN_SHIFT_CLOCK_CONTROL			(1 << 9)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: drivers/platform/mq11xx.h:560:
+#define MQ_FP_STN_EXTRA_LP_ENABLE    ^I^I^I(1 << 10)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#701: FILE: drivers/platform/mq11xx.h:560:
+#define MQ_FP_STN_EXTRA_LP_ENABLE    			(1 << 10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#703: FILE: drivers/platform/mq11xx.h:562:
+#define MQ_FP_TFT_DISPLAY_ENABLE_SELECT_00    ^I^I(0 << 12)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#704: FILE: drivers/platform/mq11xx.h:563:
+#define MQ_FP_TFT_DISPLAY_ENABLE_SELECT_01    ^I^I(1 << 12)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#704: FILE: drivers/platform/mq11xx.h:563:
+#define MQ_FP_TFT_DISPLAY_ENABLE_SELECT_01    		(1 << 12)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#705: FILE: drivers/platform/mq11xx.h:564:
+#define MQ_FP_TFT_DISPLAY_ENABLE_SELECT_10    ^I^I(2 << 12)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#706: FILE: drivers/platform/mq11xx.h:565:
+#define MQ_FP_TFT_DISPLAY_ENABLE_SELECT_11    ^I^I(3 << 12)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#707: FILE: drivers/platform/mq11xx.h:566:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT    ^I^I(3 << 14)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#708: FILE: drivers/platform/mq11xx.h:567:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT_00    ^I^I(0 << 14)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: drivers/platform/mq11xx.h:568:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT_01    ^I^I(1 << 14)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#709: FILE: drivers/platform/mq11xx.h:568:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT_01    		(1 << 14)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#710: FILE: drivers/platform/mq11xx.h:569:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT_10    ^I^I(2 << 14)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#711: FILE: drivers/platform/mq11xx.h:570:
+#define MQ_FP_TFT_HORIZONTAL_SYNC_SELECT_11    ^I^I(3 << 14)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: drivers/platform/mq11xx.h:571:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT    ^I^I(3 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#713: FILE: drivers/platform/mq11xx.h:572:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT_00    ^I^I(0 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#714: FILE: drivers/platform/mq11xx.h:573:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT_01    ^I^I(1 << 16)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#714: FILE: drivers/platform/mq11xx.h:573:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT_01    		(1 << 16)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#715: FILE: drivers/platform/mq11xx.h:574:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT_10    ^I^I(2 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#716: FILE: drivers/platform/mq11xx.h:575:
+#define MQ_FP_TFT_VERTICAL_SYNC_SELECT_11    ^I^I(3 << 16)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#717: FILE: drivers/platform/mq11xx.h:576:
+#define MQ_FP_LINE_CLOCK_CONTROL    ^I^I^I(1 << 18)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#717: FILE: drivers/platform/mq11xx.h:576:
+#define MQ_FP_LINE_CLOCK_CONTROL    			(1 << 18)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: drivers/platform/mq11xx.h:577:
+#define MQ_FP_ALTERNATE_LINE_CLOCK_CONTROL    ^I^I(1 << 19)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#718: FILE: drivers/platform/mq11xx.h:577:
+#define MQ_FP_ALTERNATE_LINE_CLOCK_CONTROL    		(1 << 19)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#719: FILE: drivers/platform/mq11xx.h:578:
+#define MQ_FP_FMOD_CLOCK_CONTROL    ^I^I^I(1 << 20)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#719: FILE: drivers/platform/mq11xx.h:578:
+#define MQ_FP_FMOD_CLOCK_CONTROL    			(1 << 20)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#720: FILE: drivers/platform/mq11xx.h:579:
+#define MQ_FP_FMOD_FRAME_INVERSION    ^I^I^I(1 << 21)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#720: FILE: drivers/platform/mq11xx.h:579:
+#define MQ_FP_FMOD_FRAME_INVERSION    			(1 << 21)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#721: FILE: drivers/platform/mq11xx.h:580:
+#define MQ_FP_FMOD_FREQUENCY_CONTROL ^I^I^I(1 << 22)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#721: FILE: drivers/platform/mq11xx.h:580:
+#define MQ_FP_FMOD_FREQUENCY_CONTROL 			(1 << 22)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#722: FILE: drivers/platform/mq11xx.h:581:
+#define MQ_FP_FMOD_SYNCHRONOUS_RESET  ^I^I^I(1 << 23)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#722: FILE: drivers/platform/mq11xx.h:581:
+#define MQ_FP_FMOD_SYNCHRONOUS_RESET  			(1 << 23)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#723: FILE: drivers/platform/mq11xx.h:582:
+#define MQ_FP_SHIFT_CLOCK_DELAY   ^I^I^I(7 << 24)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#724: FILE: drivers/platform/mq11xx.h:583:
+#define MQ_FP_EXTENDED_LINE_CLOCK_CONTROL    ^I^I(1 << 27)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#724: FILE: drivers/platform/mq11xx.h:583:
+#define MQ_FP_EXTENDED_LINE_CLOCK_CONTROL    		(1 << 27)

CHECK:BIT_MACRO: Prefer using the BIT macro
#727: FILE: drivers/platform/mq11xx.h:586:
+#define MQ_FP_ENVDD					(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#728: FILE: drivers/platform/mq11xx.h:587:
+#define MQ_FP_ENVEE					(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#729: FILE: drivers/platform/mq11xx.h:588:
+#define MQ_FP_FD2					(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#730: FILE: drivers/platform/mq11xx.h:589:
+#define MQ_FP_FD3					(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#731: FILE: drivers/platform/mq11xx.h:590:
+#define MQ_FP_FD4					(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#732: FILE: drivers/platform/mq11xx.h:591:
+#define MQ_FP_FD5					(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#733: FILE: drivers/platform/mq11xx.h:592:
+#define MQ_FP_FD6					(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#734: FILE: drivers/platform/mq11xx.h:593:
+#define MQ_FP_FD7					(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#735: FILE: drivers/platform/mq11xx.h:594:
+#define MQ_FP_FD10					(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#736: FILE: drivers/platform/mq11xx.h:595:
+#define MQ_FP_FD11					(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#737: FILE: drivers/platform/mq11xx.h:596:
+#define MQ_FP_FD12					(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#738: FILE: drivers/platform/mq11xx.h:597:
+#define MQ_FP_FD13					(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#739: FILE: drivers/platform/mq11xx.h:598:
+#define MQ_FP_FD14					(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#740: FILE: drivers/platform/mq11xx.h:599:
+#define MQ_FP_FD15					(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#741: FILE: drivers/platform/mq11xx.h:600:
+#define MQ_FP_FD18					(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#742: FILE: drivers/platform/mq11xx.h:601:
+#define MQ_FP_FD19					(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#743: FILE: drivers/platform/mq11xx.h:602:
+#define MQ_FP_FD20					(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#744: FILE: drivers/platform/mq11xx.h:603:
+#define MQ_FP_FD21					(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#745: FILE: drivers/platform/mq11xx.h:604:
+#define MQ_FP_FD22					(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#746: FILE: drivers/platform/mq11xx.h:605:
+#define MQ_FP_FD23					(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#747: FILE: drivers/platform/mq11xx.h:606:
+#define MQ_FP_FSCLK					(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#748: FILE: drivers/platform/mq11xx.h:607:
+#define MQ_FP_FDE					(1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#749: FILE: drivers/platform/mq11xx.h:608:
+#define MQ_FP_FHSYNC					(1 << 26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#750: FILE: drivers/platform/mq11xx.h:609:
+#define MQ_FP_FVSYNC					(1 << 27)

CHECK:BIT_MACRO: Prefer using the BIT macro
#751: FILE: drivers/platform/mq11xx.h:610:
+#define MQ_FP_FMOD					(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#752: FILE: drivers/platform/mq11xx.h:611:
+#define MQ_FP_FLCLK					(1 << 29)

CHECK:BIT_MACRO: Prefer using the BIT macro
#753: FILE: drivers/platform/mq11xx.h:612:
+#define MQ_FP_PWM0					(1 << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#754: FILE: drivers/platform/mq11xx.h:613:
+#define MQ_FP_PWM1					(1 << 31)

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: drivers/platform/mq11xx.h:652:
+                u32 a[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/platform/mq11xx.h:652:
+                u32 a[256];$

CHECK:BIT_MACRO: Prefer using the BIT macro
#802: FILE: drivers/platform/mq11xx.h:661:
+#define MQ_UDC_SUSPEND_ENABLE				(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#803: FILE: drivers/platform/mq11xx.h:662:
+#define MQ_UDC_REMOTEHOST_WAKEUP_ENABLE			(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#804: FILE: drivers/platform/mq11xx.h:663:
+#define MQ_UDC_EP2_ISOCHRONOUS				(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#805: FILE: drivers/platform/mq11xx.h:664:
+#define MQ_UDC_EP3_ISOCHRONOUS				(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#806: FILE: drivers/platform/mq11xx.h:665:
+#define MQ_UDC_WAKEUP_USBHOST				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#807: FILE: drivers/platform/mq11xx.h:666:
+#define MQ_UDC_IEN_SOF					(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#808: FILE: drivers/platform/mq11xx.h:667:
+#define MQ_UDC_IEN_EP0_TX				(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#809: FILE: drivers/platform/mq11xx.h:668:
+#define MQ_UDC_IEN_EP0_RX				(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#810: FILE: drivers/platform/mq11xx.h:669:
+#define MQ_UDC_IEN_EP1_TX				(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#811: FILE: drivers/platform/mq11xx.h:670:
+#define MQ_UDC_IEN_EP2_TX_EOT				(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#812: FILE: drivers/platform/mq11xx.h:671:
+#define MQ_UDC_IEN_EP3_RX_EOT				(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#813: FILE: drivers/platform/mq11xx.h:672:
+#define MQ_UDC_IEN_DMA_TX				(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#814: FILE: drivers/platform/mq11xx.h:673:
+#define MQ_UDC_IEN_DMA_RX				(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#815: FILE: drivers/platform/mq11xx.h:674:
+#define MQ_UDC_IEN_DMA_RX_EOT				(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#816: FILE: drivers/platform/mq11xx.h:675:
+#define MQ_UDC_IEN_GLOBAL_SUSPEND			(1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#817: FILE: drivers/platform/mq11xx.h:676:
+#define MQ_UDC_IEN_WAKEUP				(1 << 26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#818: FILE: drivers/platform/mq11xx.h:677:
+#define MQ_UDC_IEN_RESET				(1 << 27)

CHECK:BIT_MACRO: Prefer using the BIT macro
#823: FILE: drivers/platform/mq11xx.h:682:
+#define MQ_UDC_FRAME_CORRUPTED				(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#824: FILE: drivers/platform/mq11xx.h:683:
+#define MQ_UDC_FRAME_NEW				(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#825: FILE: drivers/platform/mq11xx.h:684:
+#define MQ_UDC_FRAME_MISSING				(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#826: FILE: drivers/platform/mq11xx.h:685:
+#define MQ_UDC_EP2_DATA_MISSING				(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#827: FILE: drivers/platform/mq11xx.h:686:
+#define MQ_UDC_EP3_DATA_MISSING				(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#829: FILE: drivers/platform/mq11xx.h:688:
+#define MQ_UDC_TX_EDT					(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#830: FILE: drivers/platform/mq11xx.h:689:
+#define MQ_UDC_STALL					(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#831: FILE: drivers/platform/mq11xx.h:690:
+#define MQ_UDC_TX_PID_DATA1				(1 << 3)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#834: FILE: drivers/platform/mq11xx.h:693:
+#define MQ_UDC_TX_LAST_ENABLE(x)  			(((1 << (1 + (((x) - 1) & 3))) - 1) << MQ_UDC_TX_LAST_ENABLE_SHIFT)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#834: FILE: drivers/platform/mq11xx.h:693:
+#define MQ_UDC_TX_LAST_ENABLE(x)  ^I^I^I(((1 << (1 + (((x) - 1) & 3))) - 1) << MQ_UDC_TX_LAST_ENABLE_SHIFT)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#835: FILE: drivers/platform/mq11xx.h:694:
+#define MQ_UDC_CLEAR_FIFO				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#837: FILE: drivers/platform/mq11xx.h:696:
+#define MQ_UDC_ACK					(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#838: FILE: drivers/platform/mq11xx.h:697:
+#define MQ_UDC_ERR					(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#839: FILE: drivers/platform/mq11xx.h:698:
+#define MQ_UDC_TIMEOUT					(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#840: FILE: drivers/platform/mq11xx.h:699:
+#define MQ_UDC_EOT					(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#841: FILE: drivers/platform/mq11xx.h:700:
+#define MQ_UDC_FIFO_OVERRUN				(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#842: FILE: drivers/platform/mq11xx.h:701:
+#define MQ_UDC_NAK					(1 << 7)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#845: FILE: drivers/platform/mq11xx.h:704:
+#define MQ_UDC_FIFO(x)					(((x) >> MQ_UDC_FIFO_SHIFT) & MQ_UDC_FIFO_MASK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#850: FILE: drivers/platform/mq11xx.h:709:
+#define MQ_UDC_RX_PID_DATA1				(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#851: FILE: drivers/platform/mq11xx.h:710:
+#define MQ_UDC_RX_TOKEN_SETUP				(1 << 5)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#854: FILE: drivers/platform/mq11xx.h:713:
+#define MQ_UDC_RX_VALID_BYTES(x)			(((x) >> MQ_UDC_RX_VALID_BYTES_SHIFT) & MQ_UDC_RX_VALID_BYTES_MASK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#859: FILE: drivers/platform/mq11xx.h:718:
+#define MQ_UDC_EP_ENABLE				(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#865: FILE: drivers/platform/mq11xx.h:724:
+#define MQ_UDC_FORCE_DATA0				(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#876: FILE: drivers/platform/mq11xx.h:735:
+#define MQ_UDC_INT_SOF					(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#877: FILE: drivers/platform/mq11xx.h:736:
+#define MQ_UDC_INT_EP0_TX				(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#878: FILE: drivers/platform/mq11xx.h:737:
+#define MQ_UDC_INT_EP0_RX				(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#879: FILE: drivers/platform/mq11xx.h:738:
+#define MQ_UDC_INT_EP1_TX				(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#880: FILE: drivers/platform/mq11xx.h:739:
+#define MQ_UDC_INT_EP2_TX_EOT				(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#881: FILE: drivers/platform/mq11xx.h:740:
+#define MQ_UDC_INT_EP3_RX_EOT				(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#882: FILE: drivers/platform/mq11xx.h:741:
+#define MQ_UDC_INT_DMA_TX				(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#883: FILE: drivers/platform/mq11xx.h:742:
+#define MQ_UDC_INT_DMA_RX				(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#884: FILE: drivers/platform/mq11xx.h:743:
+#define MQ_UDC_INT_DMA_RX_EOT				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#885: FILE: drivers/platform/mq11xx.h:744:
+#define MQ_UDC_INT_GLOBAL_SUSPEND			(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#886: FILE: drivers/platform/mq11xx.h:745:
+#define MQ_UDC_INT_WAKEUP				(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#887: FILE: drivers/platform/mq11xx.h:746:
+#define MQ_UDC_INT_RESET				(1 << 11)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#895: FILE: drivers/platform/mq11xx.h:754:
+			u32 unused [5];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:BIT_MACRO: Prefer using the BIT macro
#898: FILE: drivers/platform/mq11xx.h:757:
+#define MQ_UDC_DMA_ENABLE				(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#899: FILE: drivers/platform/mq11xx.h:758:
+#define MQ_UDC_DMA_PINGPONG				(1 << 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#902: FILE: drivers/platform/mq11xx.h:761:
+#define MQ_UDC_DMA_NUMBUFF(x)				((x - 1) << MQ_UDC_DMA_NUMBUFF_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#903: FILE: drivers/platform/mq11xx.h:762:
+#define MQ_UDC_DMA_BUFF1_OWNER				(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#904: FILE: drivers/platform/mq11xx.h:763:
+#define MQ_UDC_DMA_BUFF2_OWNER				(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#905: FILE: drivers/platform/mq11xx.h:764:
+#define MQ_UDC_DMA_BUFF1_EOT				(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#906: FILE: drivers/platform/mq11xx.h:765:
+#define MQ_UDC_DMA_BUFF2_EOT				(1 << 11)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#913: FILE: drivers/platform/mq11xx.h:772:
+#define MQ_UDC_DMA_BUFFER_SIZE(x)			((x - 1) << MQ_UDC_DMA_BUFFER_SIZE_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#914: FILE: drivers/platform/mq11xx.h:773:
+#define MQ_UDC_DMA_BUFFER_LAST				(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#918: FILE: drivers/platform/mq11xx.h:777:
+#define MQ_UDC_ISO_TRANSFER_END				(1 << 16)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#922: FILE: drivers/platform/mq11xx.h:781:
+#define MQ_UDC_DMA_BUFFER_EADDR(x)			(((x - 1) >> 3) << MQ_UDC_DMA_BUFFER_EADDR_SHIFT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#922: FILE: drivers/platform/mq11xx.h:781:
+#define MQ_UDC_DMA_BUFFER_EADDR(x)			(((x - 1) >> 3) << MQ_UDC_DMA_BUFFER_EADDR_SHIFT)

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: drivers/platform/mq11xx.h:801:
+        u32 GE[0x14];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: drivers/platform/mq11xx.h:801:
+        u32 GE[0x14];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: drivers/platform/mq11xx.h:802:
+        u32 SPI[0x9];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/platform/mq11xx.h:802:
+        u32 SPI[0x9];$

WARNING:SPACING: Unnecessary space before function pointer arguments
#944: FILE: drivers/platform/mq11xx.h:803:
+	void (*set_power) (int on);

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#949: FILE: drivers/platform/mq11xx.h:808:
+enum
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#971: FILE: drivers/platform/mq11xx.h:830:
+	volatile u8 *ram;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#973: FILE: drivers/platform/mq11xx.h:832:
+	volatile struct mediaq11xx_regs *regs;

WARNING:SPACING: Unnecessary space before function pointer arguments
#990: FILE: drivers/platform/mq11xx.h:849:
+	int (*set_GPIO) (struct mediaq11xx_base *zis, int num, int state);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1016: FILE: drivers/platform/mq11xx.h:875:
+	int (*get_GPIO) (struct mediaq11xx_base *zis, int num);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: drivers/platform/mq11xx.h:881:
+         * constants in soc-device.h. When all counts for all subdevices$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: drivers/platform/mq11xx.h:882:
+         * reaches zero, the MediaQ chip is totally powered off.$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1025: FILE: drivers/platform/mq11xx.h:884:
+	void (*set_power) (struct mediaq11xx_base *zis, int subdev_id, int enable);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1028: FILE: drivers/platform/mq11xx.h:887:
+	int (*get_power) (struct mediaq11xx_base *zis, int subdev_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: drivers/platform/mq11xx.h:893:
+^I * Memory allocated with the 'gfx=1' flag should be always accessed $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1040: FILE: drivers/platform/mq11xx.h:899:
+	u32 (*alloc) (struct mediaq11xx_base *zis, unsigned bytes, int gfx);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1040: FILE: drivers/platform/mq11xx.h:899:
+	u32 (*alloc) (struct mediaq11xx_base *zis, unsigned bytes, int gfx);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1043: FILE: drivers/platform/mq11xx.h:902:
+	void (*free) (struct mediaq11xx_base *zis, u32 addr, unsigned bytes);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1043: FILE: drivers/platform/mq11xx.h:902:
+	void (*free) (struct mediaq11xx_base *zis, u32 addr, unsigned bytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1052: FILE: drivers/platform/mq11xx.h:911:
+extern int mq_driver_get (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1052: FILE: drivers/platform/mq11xx.h:911:
+extern int mq_driver_get (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1057: FILE: drivers/platform/mq11xx.h:916:
+extern void mq_driver_put (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1057: FILE: drivers/platform/mq11xx.h:916:
+extern void mq_driver_put (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: drivers/platform/mq11xx.h:923:
+extern int mq_device_enum (struct mediaq11xx_base **list, int list_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1064: FILE: drivers/platform/mq11xx.h:923:
+extern int mq_device_enum (struct mediaq11xx_base **list, int list_size);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1072: FILE: drivers/platform/mq11xx_base.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1092: FILE: drivers/platform/mq11xx_base.c:21:
+#include <asm/io.h>

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1101: FILE: drivers/platform/mq11xx_base.c:30:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1102: FILE: drivers/platform/mq11xx_base.c:31:
+#  define debug(s, args...) printk (KERN_INFO s, ##args)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1102: FILE: drivers/platform/mq11xx_base.c:31:
+#  define debug(s, args...) printk (KERN_INFO s, ##args)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1102: FILE: drivers/platform/mq11xx_base.c:31:
+#  define debug(s, args...) printk (KERN_INFO s, ##args)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1106: FILE: drivers/platform/mq11xx_base.c:35:
+#define debug_func(s, args...) debug ("%s: " s, __FUNCTION__, ##args)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1106: FILE: drivers/platform/mq11xx_base.c:35:
+#define debug_func(s, args...) debug ("%s: " s, __FUNCTION__, ##args)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1106: FILE: drivers/platform/mq11xx_base.c:35:
+#define debug_func(s, args...) debug ("%s: " s, __FUNCTION__, ##args)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1109: FILE: drivers/platform/mq11xx_base.c:38:
+#define MQ_MASK_1100		(1 << CHIP_MEDIAQ_1100)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1110: FILE: drivers/platform/mq11xx_base.c:39:
+#define MQ_MASK_1132		(1 << CHIP_MEDIAQ_1132)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1111: FILE: drivers/platform/mq11xx_base.c:40:
+#define MQ_MASK_1168		(1 << CHIP_MEDIAQ_1168)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1112: FILE: drivers/platform/mq11xx_base.c:41:
+#define MQ_MASK_1178		(1 << CHIP_MEDIAQ_1178)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1113: FILE: drivers/platform/mq11xx_base.c:42:
+#define MQ_MASK_1188		(1 << CHIP_MEDIAQ_1188)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1122: FILE: drivers/platform/mq11xx_base.c:51:
+struct mq_block
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: drivers/platform/mq11xx_base.c:52:
+        struct mq11xx_subdevice_id id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: drivers/platform/mq11xx_base.c:52:
+        struct mq11xx_subdevice_id id;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1125: FILE: drivers/platform/mq11xx_base.c:54:
+	unsigned start, end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1126: FILE: drivers/platform/mq11xx_base.c:55:
+	unsigned mask;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: drivers/platform/mq11xx_base.c:62:
+                /* Graphics Controller */$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1194: FILE: drivers/platform/mq11xx_base.c:123:
+} mq_device_id [] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1195: FILE: drivers/platform/mq11xx_base.c:124:
+} mq_device_id [] =
+{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1204: FILE: drivers/platform/mq11xx_base.c:133:
+#define MEMBLOCK_MINCOUNT	(32 / sizeof (struct mq_freemem_list))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1211: FILE: drivers/platform/mq11xx_base.c:140:
+} __attribute__((packed));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1214: FILE: drivers/platform/mq11xx_base.c:143:
+struct mq_data
+{

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1226: FILE: drivers/platform/mq11xx_base.c:155:
+	u8 power_on [MQ_SUBDEVS_REAL_COUNT];

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1234: FILE: drivers/platform/mq11xx_base.c:163:
+	/* The amount of RAM at the beginning of address space that
+	   is not accessible through the unsynced window */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1234: FILE: drivers/platform/mq11xx_base.c:163:
+	   is not accessible through the unsynced window */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1245: FILE: drivers/platform/mq11xx_base.c:174:
+static struct mediaq11xx_base *mq_device_list [MAX_MQ11XX_DEVICES];

CHECK:CAMELCASE: Avoid CamelCase: <mqInitValid>
#1263: FILE: drivers/platform/mq11xx_base.c:192:
+static struct mediaq11xx_init_data mqInitValid = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: drivers/platform/mq11xx_base.c:194:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: drivers/platform/mq11xx_base.c:201:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/platform/mq11xx_base.c:203:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/platform/mq11xx_base.c:209:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: drivers/platform/mq11xx_base.c:211:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: drivers/platform/mq11xx_base.c:219:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: drivers/platform/mq11xx_base.c:221:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: drivers/platform/mq11xx_base.c:249:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: drivers/platform/mq11xx_base.c:251:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: drivers/platform/mq11xx_base.c:372:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: drivers/platform/mq11xx_base.c:374:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: drivers/platform/mq11xx_base.c:395:
+    },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: drivers/platform/mq11xx_base.c:397:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: drivers/platform/mq11xx_base.c:407:
+    },$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1482: FILE: drivers/platform/mq11xx_base.c:411:
+mq11xx_loadvals (char *name, int chipmask, volatile u32 *reg,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1482: FILE: drivers/platform/mq11xx_base.c:411:
+mq11xx_loadvals (char *name, int chipmask, volatile u32 *reg,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: drivers/platform/mq11xx_base.c:416:
+        for (t = 0; t < n; t++){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/platform/mq11xx_base.c:416:
+        for (t = 0; t < n; t++){$

ERROR:SPACING: space required before the open brace '{'
#1487: FILE: drivers/platform/mq11xx_base.c:416:
+        for (t = 0; t < n; t++){

WARNING:LINE_SPACING: Missing a blank line after declarations
#1490: FILE: drivers/platform/mq11xx_base.c:419:
+			int tries;
+			for (tries = 0; tries < 10; tries++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1494: FILE: drivers/platform/mq11xx_base.c:423:
+				mdelay (1);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1497: FILE: drivers/platform/mq11xx_base.c:426:
+				debug ("mq11xx_loadvals %s%02x %08x FAILED (got %08x)\n", name, t, src[t], reg[t]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1497: FILE: drivers/platform/mq11xx_base.c:426:
+				debug ("mq11xx_loadvals %s%02x %08x FAILED (got %08x)\n", name, t, src[t], reg[t]);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mq11xx_loadvals', this function's name, in a string
#1497: FILE: drivers/platform/mq11xx_base.c:426:
+				debug ("mq11xx_loadvals %s%02x %08x FAILED (got %08x)\n", name, t, src[t], reg[t]);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1500: FILE: drivers/platform/mq11xx_base.c:429:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: drivers/platform/mq11xx_base.c:429:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: drivers/platform/mq11xx_base.c:430:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: drivers/platform/mq11xx_base.c:430:
+        }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1506: FILE: drivers/platform/mq11xx_base.c:435:
+mq11xx_init (struct mq_data *mqdata)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1515: FILE: drivers/platform/mq11xx_base.c:444:
+	/* Set up chip endianness - see mq docs for notes on special care
+	   when writing to this register */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1515: FILE: drivers/platform/mq11xx_base.c:444:
+	   when writing to this register */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1516: FILE: drivers/platform/mq11xx_base.c:445:
+	endian = mqdata->mq_init->DC [0] & 3;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1522: FILE: drivers/platform/mq11xx_base.c:451:
+	mqdata->base.regs->DC.config_1 = mqdata->mq_init->DC [1];

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#1523: FILE: drivers/platform/mq11xx_base.c:452:
+	/* Wait for oscillator to run - 30ms doesnt suffice */
 	                                     ^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1524: FILE: drivers/platform/mq11xx_base.c:453:
+	mdelay (100);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1526: FILE: drivers/platform/mq11xx_base.c:455:
+	mqdata->base.regs->DC.config_2 = mqdata->mq_init->DC [2];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1527: FILE: drivers/platform/mq11xx_base.c:456:
+	mdelay (10);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1536: FILE: drivers/platform/mq11xx_base.c:465:
+	if (mqdata->base.regs->PCI.vendor_id != MQ_PCI_VENDORID) {
[...]
+			__FILE__, __LINE__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1537: FILE: drivers/platform/mq11xx_base.c:466:
+unkchip:	printk (KERN_ERR "%s:%d Unknown device ID (%04x:%04x)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1537: FILE: drivers/platform/mq11xx_base.c:466:
+unkchip:	printk (KERN_ERR "%s:%d Unknown device ID (%04x:%04x)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1544: FILE: drivers/platform/mq11xx_base.c:473:
+	for (i = 0; i < ARRAY_SIZE (mq_device_id); i++)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1545: FILE: drivers/platform/mq11xx_base.c:474:
+		if (mqdata->base.regs->PCI.device_id == mq_device_id [i].id) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1546: FILE: drivers/platform/mq11xx_base.c:475:
+			mqdata->base.chip = mq_device_id [i].chip;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1547: FILE: drivers/platform/mq11xx_base.c:476:
+			mqdata->base.chipname = mq_device_id [i].name;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1556: FILE: drivers/platform/mq11xx_base.c:485:
+#define INIT_REGS(id) \
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \
+		mqdata->mq_init->id, mqInitValid.id, \
+		ARRAY_SIZE (mqdata->mq_init->id))) \
+		return -ENODEV

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#1556: FILE: drivers/platform/mq11xx_base.c:485:
+#define INIT_REGS(id) \
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \
+		mqdata->mq_init->id, mqInitValid.id, \
+		ARRAY_SIZE (mqdata->mq_init->id))) \
+		return -ENODEV

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'id' may be better as '(id)' to avoid precedence issues
#1556: FILE: drivers/platform/mq11xx_base.c:485:
+#define INIT_REGS(id) \
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \
+		mqdata->mq_init->id, mqInitValid.id, \
+		ARRAY_SIZE (mqdata->mq_init->id))) \
+		return -ENODEV

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1556: FILE: drivers/platform/mq11xx_base.c:485:
+#define INIT_REGS(id) \
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \
+		mqdata->mq_init->id, mqInitValid.id, \
+		ARRAY_SIZE (mqdata->mq_init->id))) \
+		return -ENODEV

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1557: FILE: drivers/platform/mq11xx_base.c:486:
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mqdata->mq_init->id'
#1557: FILE: drivers/platform/mq11xx_base.c:486:
+	if (mq11xx_loadvals (#id, chipmask, mqdata->base.regs->id.a, \
+		mqdata->mq_init->id, mqInitValid.id, \
+		ARRAY_SIZE (mqdata->mq_init->id))) \

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1559: FILE: drivers/platform/mq11xx_base.c:488:
+		ARRAY_SIZE (mqdata->mq_init->id))) \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1562: FILE: drivers/platform/mq11xx_base.c:491:
+	INIT_REGS (DC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: drivers/platform/mq11xx_base.c:492:
+	INIT_REGS (CC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1564: FILE: drivers/platform/mq11xx_base.c:493:
+	INIT_REGS (MIU);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1567: FILE: drivers/platform/mq11xx_base.c:496:
+	INIT_REGS (GC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: drivers/platform/mq11xx_base.c:497:
+	INIT_REGS (FP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1569: FILE: drivers/platform/mq11xx_base.c:498:
+	INIT_REGS (GE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1577: FILE: drivers/platform/mq11xx_base.c:506:
+mq_release (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1585: FILE: drivers/platform/mq11xx_base.c:514:
+mq_set_GPIO (struct mediaq11xx_base *zis, int num, int state)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1589: FILE: drivers/platform/mq11xx_base.c:518:
+	debug ("mq_set_GPIO (num:%d state:%x)\n", num, state);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mq_set_GPIO', this function's name, in a string
#1589: FILE: drivers/platform/mq11xx_base.c:518:
+	debug ("mq_set_GPIO (num:%d state:%x)\n", num, state);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num <= 7'
#1591: FILE: drivers/platform/mq11xx_base.c:520:
+	if ((num <= 7) || ((num >= 20) && (num <= 25))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num >= 20'
#1591: FILE: drivers/platform/mq11xx_base.c:520:
+	if ((num <= 7) || ((num >= 20) && (num <= 25))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num <= 25'
#1591: FILE: drivers/platform/mq11xx_base.c:520:
+	if ((num <= 7) || ((num >= 20) && (num <= 25))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1591: FILE: drivers/platform/mq11xx_base.c:520:
+	if ((num <= 7) || ((num >= 20) && (num <= 25))) {
[...]
+	} else if (num >= 50 && num <= 55) {
[...]
+	} else if (num >= 60 && num <= 66) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num <= 53'
#1639: FILE: drivers/platform/mq11xx_base.c:568:
+		if ((state & MQ_GPIO_PULLUP) && (num <= 53))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: drivers/platform/mq11xx_base.c:569:
+                        ormask |= 0x1000 << (num - 50);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: drivers/platform/mq11xx_base.c:569:
+                        ormask |= 0x1000 << (num - 50);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1645: FILE: drivers/platform/mq11xx_base.c:574:
+		int shft = (num - 60);
+		if (state & MQ_GPIO_0)

CHECK:BRACES: Unbalanced braces around else statement
#1659: FILE: drivers/platform/mq11xx_base.c:588:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1666: FILE: drivers/platform/mq11xx_base.c:595:
+mq_get_GPIO (struct mediaq11xx_base *zis, int num)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: drivers/platform/mq11xx_base.c:597:
+        u32 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: drivers/platform/mq11xx_base.c:597:
+        u32 val;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1685: FILE: drivers/platform/mq11xx_base.c:614:
+	if (val) val = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1691: FILE: drivers/platform/mq11xx_base.c:620:
+global_power (struct mq_data *mqdata)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1694: FILE: drivers/platform/mq11xx_base.c:623:
+	int i;
+	for (i = 0; i < sizeof (mqdata->power_on); i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1694: FILE: drivers/platform/mq11xx_base.c:623:
+	for (i = 0; i < sizeof (mqdata->power_on); i++)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1695: FILE: drivers/platform/mq11xx_base.c:624:
+		if (mqdata->power_on [i])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1701: FILE: drivers/platform/mq11xx_base.c:630:
+mq_power_on (struct mediaq11xx_base *zis, int subdev_id)

WARNING:TYPO_SPELLING: 'contstants' may be misspelled - perhaps 'constants'?
#1705: FILE: drivers/platform/mq11xx_base.c:634:
+	 * contstants with sequential values in their lower 4 bits!
 	   ^^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1707: FILE: drivers/platform/mq11xx_base.c:636:
+	unsigned idx = (subdev_id & 0x0f) - 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1708: FILE: drivers/platform/mq11xx_base.c:637:
+	struct mq_data *mqdata = to_mq_data (zis);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1710: FILE: drivers/platform/mq11xx_base.c:639:
+	debug_func ("subdev:%x curstate:%d\n", subdev_id, mqdata->power_on [idx]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1710: FILE: drivers/platform/mq11xx_base.c:639:
+	debug_func ("subdev:%x curstate:%d\n", subdev_id, mqdata->power_on [idx]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1713: FILE: drivers/platform/mq11xx_base.c:642:
+	if (!global_power (mqdata)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1714: FILE: drivers/platform/mq11xx_base.c:643:
+		debug ("-*- Global POWER ON to the MediaQ chip -*-\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1715: FILE: drivers/platform/mq11xx_base.c:644:
+		mq11xx_init (mqdata);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1718: FILE: drivers/platform/mq11xx_base.c:647:
+	if (!mqdata->power_on [idx])

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1728: FILE: drivers/platform/mq11xx_base.c:657:
+			zis->regs->FP.output_control = mqdata->mq_init->FP [2];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1743: FILE: drivers/platform/mq11xx_base.c:672:
+	mqdata->power_on [idx]++;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1747: FILE: drivers/platform/mq11xx_base.c:676:
+mq_power_off (struct mediaq11xx_base *zis, int subdev_id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1749: FILE: drivers/platform/mq11xx_base.c:678:
+	unsigned idx = (subdev_id & 0x0f) - 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1750: FILE: drivers/platform/mq11xx_base.c:679:
+	struct mq_data *mqdata = to_mq_data (zis);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1752: FILE: drivers/platform/mq11xx_base.c:681:
+	debug_func ("subdev:%x curstate:%d\n", subdev_id, mqdata->power_on [idx]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1752: FILE: drivers/platform/mq11xx_base.c:681:
+	debug_func ("subdev:%x curstate:%d\n", subdev_id, mqdata->power_on [idx]);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1754: FILE: drivers/platform/mq11xx_base.c:683:
+	if (!mqdata->power_on [idx]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1755: FILE: drivers/platform/mq11xx_base.c:684:
+		printk (KERN_ERR "mq11xx: mismatch power on/off request count for subdevice %x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1755: FILE: drivers/platform/mq11xx_base.c:684:
+		printk (KERN_ERR "mq11xx: mismatch power on/off request count for subdevice %x\n",

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1785: FILE: drivers/platform/mq11xx_base.c:714:
+	mqdata->power_on [idx]--;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1788: FILE: drivers/platform/mq11xx_base.c:717:
+	if (!global_power (mqdata)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1789: FILE: drivers/platform/mq11xx_base.c:718:
+		debug ("-*- Global POWER OFF to MediaQ chip -*-\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1803: FILE: drivers/platform/mq11xx_base.c:732:
+mq_set_power (struct mediaq11xx_base *zis, int subdev_id, int state)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1806: FILE: drivers/platform/mq11xx_base.c:735:
+		mq_power_on (zis, subdev_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1808: FILE: drivers/platform/mq11xx_base.c:737:
+		mq_power_off (zis, subdev_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1812: FILE: drivers/platform/mq11xx_base.c:741:
+mq_get_power (struct mediaq11xx_base *zis, int subdev_id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1814: FILE: drivers/platform/mq11xx_base.c:743:
+	unsigned idx = (subdev_id & 0x0f) - 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1815: FILE: drivers/platform/mq11xx_base.c:744:
+	struct mq_data *mqdata = to_mq_data (zis);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1816: FILE: drivers/platform/mq11xx_base.c:745:
+	struct mq_data *mqdata = to_mq_data (zis);
+	return mqdata->power_on [idx];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1816: FILE: drivers/platform/mq11xx_base.c:745:
+	return mqdata->power_on [idx];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1839: FILE: drivers/platform/mq11xx_base.c:768:
+mq_setfreeblocks (struct mq_data *mqdata, int nblocks)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1845: FILE: drivers/platform/mq11xx_base.c:774:
+	/* Increase maximum number of free memory descriptors in power-of-two
+	   steps. This is due to the fact, that Linux allocates memory in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1849: FILE: drivers/platform/mq11xx_base.c:778:
+	   number of free block descriptors. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1850: FILE: drivers/platform/mq11xx_base.c:779:
+	newmax = (nblocks > 0) ? (1 << fls (nblocks - 1)) : 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1851: FILE: drivers/platform/mq11xx_base.c:780:
+	if (likely (newmax < MEMBLOCK_MINCOUNT))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'newmax < MEMBLOCK_MINCOUNT'
#1851: FILE: drivers/platform/mq11xx_base.c:780:
+	if (likely (newmax < MEMBLOCK_MINCOUNT))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1856: FILE: drivers/platform/mq11xx_base.c:785:
+		int nfb = mqdata->nfreeblocks;
+		if (nfb > nblocks) nfb = nblocks;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1856: FILE: drivers/platform/mq11xx_base.c:785:
+		if (nfb > nblocks) nfb = nblocks;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1857: FILE: drivers/platform/mq11xx_base.c:786:
+		temp = kmalloc (newmax * sizeof (struct mq_freemem_list),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1857: FILE: drivers/platform/mq11xx_base.c:786:
+		temp = kmalloc (newmax * sizeof (struct mq_freemem_list),

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1857: FILE: drivers/platform/mq11xx_base.c:786:
+		temp = kmalloc (newmax * sizeof (struct mq_freemem_list),
+				GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1859: FILE: drivers/platform/mq11xx_base.c:788:
+		memcpy (temp, mqdata->freelist, nfb * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1859: FILE: drivers/platform/mq11xx_base.c:788:
+		memcpy (temp, mqdata->freelist, nfb * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1860: FILE: drivers/platform/mq11xx_base.c:789:
+		kfree (mqdata->freelist);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1869: FILE: drivers/platform/mq11xx_base.c:798:
+static int mq_suitable_ram (struct mq_data *mqdata, int fbn, unsigned size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1869: FILE: drivers/platform/mq11xx_base.c:798:
+static int mq_suitable_ram (struct mq_data *mqdata, int fbn, unsigned size)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1873: FILE: drivers/platform/mq11xx_base.c:802:
+	delta = mqdata->unsynced_ram_skip - mqdata->freelist [fbn].addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1877: FILE: drivers/platform/mq11xx_base.c:806:
+	if (mqdata->freelist [fbn].size < size + delta)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1882: FILE: drivers/platform/mq11xx_base.c:811:
+	mq_setfreeblocks (mqdata, n + 1);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1883: FILE: drivers/platform/mq11xx_base.c:812:
+	mqdata->freelist [n].addr = mqdata->freelist [fbn].addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1883: FILE: drivers/platform/mq11xx_base.c:812:
+	mqdata->freelist [n].addr = mqdata->freelist [fbn].addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1884: FILE: drivers/platform/mq11xx_base.c:813:
+	mqdata->freelist [n].size = delta;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1885: FILE: drivers/platform/mq11xx_base.c:814:
+	mqdata->freelist [fbn].addr += delta;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1886: FILE: drivers/platform/mq11xx_base.c:815:
+	mqdata->freelist [fbn].size -= delta;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1897: FILE: drivers/platform/mq11xx_base.c:826:
+mq_alloc (struct mediaq11xx_base *zis, unsigned size, int gfx)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1897: FILE: drivers/platform/mq11xx_base.c:826:
+mq_alloc (struct mediaq11xx_base *zis, unsigned size, int gfx)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1899: FILE: drivers/platform/mq11xx_base.c:828:
+	struct mq_data *mqdata = to_mq_data (zis);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1902: FILE: drivers/platform/mq11xx_base.c:831:
+        size = (size + MEMBLOCK_ALIGN - 1) & ~(MEMBLOCK_ALIGN - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1902: FILE: drivers/platform/mq11xx_base.c:831:
+        size = (size + MEMBLOCK_ALIGN - 1) & ~(MEMBLOCK_ALIGN - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1904: FILE: drivers/platform/mq11xx_base.c:833:
+        spin_lock (&mqdata->mem_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1904: FILE: drivers/platform/mq11xx_base.c:833:
+        spin_lock (&mqdata->mem_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1904: FILE: drivers/platform/mq11xx_base.c:833:
+        spin_lock (&mqdata->mem_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1907: FILE: drivers/platform/mq11xx_base.c:836:
+		if ((mqdata->freelist [i].size >= size) &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1908: FILE: drivers/platform/mq11xx_base.c:837:
+		    (gfx || mq_suitable_ram (mqdata, i, size))) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1909: FILE: drivers/platform/mq11xx_base.c:838:
+			u32 addr = mqdata->freelist [i].addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1910: FILE: drivers/platform/mq11xx_base.c:839:
+			u32 addr = mqdata->freelist [i].addr;
+			mqdata->freelist [i].size -= size;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1910: FILE: drivers/platform/mq11xx_base.c:839:
+			mqdata->freelist [i].size -= size;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1911: FILE: drivers/platform/mq11xx_base.c:840:
+			if (mqdata->freelist [i].size)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1911: FILE: drivers/platform/mq11xx_base.c:840:
+			if (mqdata->freelist [i].size)
[...]
+			else {
[...]

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1912: FILE: drivers/platform/mq11xx_base.c:841:
+				mqdata->freelist [i].addr += size;

CHECK:BRACES: Unbalanced braces around else statement
#1913: FILE: drivers/platform/mq11xx_base.c:842:
+			else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1914: FILE: drivers/platform/mq11xx_base.c:843:
+				memcpy (mqdata->freelist + i, mqdata->freelist + i + 1,

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1915: FILE: drivers/platform/mq11xx_base.c:844:
+					(mqdata->nfreeblocks - 1 - i) * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1915: FILE: drivers/platform/mq11xx_base.c:844:
+					(mqdata->nfreeblocks - 1 - i) * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1916: FILE: drivers/platform/mq11xx_base.c:845:
+				mq_setfreeblocks (mqdata, mqdata->nfreeblocks - 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1918: FILE: drivers/platform/mq11xx_base.c:847:
+			spin_unlock (&mqdata->mem_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1919: FILE: drivers/platform/mq11xx_base.c:848:
+                        return addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1919: FILE: drivers/platform/mq11xx_base.c:848:
+                        return addr;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1923: FILE: drivers/platform/mq11xx_base.c:852:
+	spin_unlock (&mqdata->mem_lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1929: FILE: drivers/platform/mq11xx_base.c:858:
+mq_free (struct mediaq11xx_base *zis, u32 addr, unsigned size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1929: FILE: drivers/platform/mq11xx_base.c:858:
+mq_free (struct mediaq11xx_base *zis, u32 addr, unsigned size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1933: FILE: drivers/platform/mq11xx_base.c:862:
+	struct mq_data *mqdata = to_mq_data (zis);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1938: FILE: drivers/platform/mq11xx_base.c:867:
+	spin_lock (&mqdata->mem_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1942: FILE: drivers/platform/mq11xx_base.c:871:
+		if (mqdata->freelist [i].addr == eaddr) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1943: FILE: drivers/platform/mq11xx_base.c:872:
+			mqdata->freelist [i].size += size;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1944: FILE: drivers/platform/mq11xx_base.c:873:
+			mqdata->freelist [i].addr = addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1947: FILE: drivers/platform/mq11xx_base.c:876:
+				if (mqdata->freelist [j].addr + mqdata->freelist [j].size == addr) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1947: FILE: drivers/platform/mq11xx_base.c:876:
+				if (mqdata->freelist [j].addr + mqdata->freelist [j].size == addr) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1949: FILE: drivers/platform/mq11xx_base.c:878:
+					mqdata->freelist [i].addr = mqdata->freelist [j].addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1949: FILE: drivers/platform/mq11xx_base.c:878:
+					mqdata->freelist [i].addr = mqdata->freelist [j].addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1950: FILE: drivers/platform/mq11xx_base.c:879:
+					mqdata->freelist [i].size += mqdata->freelist [j].size;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1950: FILE: drivers/platform/mq11xx_base.c:879:
+					mqdata->freelist [i].size += mqdata->freelist [j].size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1951: FILE: drivers/platform/mq11xx_base.c:880:
+					memcpy (mqdata->freelist + j, mqdata->freelist + j + 1,

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1952: FILE: drivers/platform/mq11xx_base.c:881:
+						(mqdata->nfreeblocks - 1 - j) * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1952: FILE: drivers/platform/mq11xx_base.c:881:
+						(mqdata->nfreeblocks - 1 - j) * sizeof (struct mq_freemem_list));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1953: FILE: drivers/platform/mq11xx_base.c:882:
+					mq_setfreeblocks (mqdata, mqdata->nfreeblocks - 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1957: FILE: drivers/platform/mq11xx_base.c:886:
+			spin_unlock (&mqdata->mem_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1962: FILE: drivers/platform/mq11xx_base.c:891:
+		if (mqdata->freelist [i].addr + mqdata->freelist [i].size == addr) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1962: FILE: drivers/platform/mq11xx_base.c:891:
+		if (mqdata->freelist [i].addr + mqdata->freelist [i].size == addr) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1963: FILE: drivers/platform/mq11xx_base.c:892:
+			mqdata->freelist [i].size += size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1964: FILE: drivers/platform/mq11xx_base.c:893:
+			spin_unlock (&mqdata->mem_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1970: FILE: drivers/platform/mq11xx_base.c:899:
+	mq_setfreeblocks (mqdata, i + 1);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1971: FILE: drivers/platform/mq11xx_base.c:900:
+	mqdata->freelist [i].addr = addr;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1972: FILE: drivers/platform/mq11xx_base.c:901:
+	mqdata->freelist [i].size = size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1974: FILE: drivers/platform/mq11xx_base.c:903:
+	spin_unlock (&mqdata->mem_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1982: FILE: drivers/platform/mq11xx_base.c:911:
+mq_irq_demux (unsigned int irq, struct irqdesc *desc, struct pt_regs *regs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1992: FILE: drivers/platform/mq11xx_base.c:921:
+	debug ("mq_irq_demux ENTER\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mq_irq_demux', this function's name, in a string
#1992: FILE: drivers/platform/mq11xx_base.c:921:
+	debug ("mq_irq_demux ENTER\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2010: FILE: drivers/platform/mq11xx_base.c:939:
+		while ((i = ffs (mask))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2014: FILE: drivers/platform/mq11xx_base.c:943:
+			debug ("mq_irq_demux (irq:%d)\n", mq_irq);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mq_irq_demux', this function's name, in a string
#2014: FILE: drivers/platform/mq11xx_base.c:943:
+			debug ("mq_irq_demux (irq:%d)\n", mq_irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2015: FILE: drivers/platform/mq11xx_base.c:944:
+			desc->handle (mq_irq, desc, regs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2021: FILE: drivers/platform/mq11xx_base.c:950:
+		printk (KERN_ERR "mq11xx: IRQ continuously triggered, mask %08x\n", mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2021: FILE: drivers/platform/mq11xx_base.c:950:
+		printk (KERN_ERR "mq11xx: IRQ continuously triggered, mask %08x\n", mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2023: FILE: drivers/platform/mq11xx_base.c:952:
+	debug ("mq_irq_demux LEAVE\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mq_irq_demux', this function's name, in a string
#2023: FILE: drivers/platform/mq11xx_base.c:952:
+	debug ("mq_irq_demux LEAVE\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2030: FILE: drivers/platform/mq11xx_base.c:959:
+mq_irq_ack (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2032: FILE: drivers/platform/mq11xx_base.c:961:
+	struct mq_data *mqdata = get_irq_chipdata (irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2041: FILE: drivers/platform/mq11xx_base.c:970:
+mq_irq_mask (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2043: FILE: drivers/platform/mq11xx_base.c:972:
+	struct mq_data *mqdata = get_irq_chipdata (irq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2045: FILE: drivers/platform/mq11xx_base.c:974:
+	u32 mask = 1 << (irq - mqdata->base.irq_base);
+	mqdata->base.regs->IC.interrupt_mask &= ~mask;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2049: FILE: drivers/platform/mq11xx_base.c:978:
+mq_irq_unmask (unsigned int irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2051: FILE: drivers/platform/mq11xx_base.c:980:
+	struct mq_data *mqdata = get_irq_chipdata (irq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2053: FILE: drivers/platform/mq11xx_base.c:982:
+	u32 mask = 1 << (irq - mqdata->base.irq_base);
+	mqdata->base.regs->IC.interrupt_mask |= mask;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2057: FILE: drivers/platform/mq11xx_base.c:986:
+mq_irq_type (unsigned int irq, unsigned int type)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2059: FILE: drivers/platform/mq11xx_base.c:988:
+	struct mq_data *mqdata = get_irq_chipdata (irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2085: FILE: drivers/platform/mq11xx_base.c:1014:
+mq_irq_init (struct mq_data *mqdata)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2095: FILE: drivers/platform/mq11xx_base.c:1024:
+	mqdata->base.irq_base = alloc_irq_space (MQ11xx_NUMIRQS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2097: FILE: drivers/platform/mq11xx_base.c:1026:
+		printk (KERN_ERR "There is no space for %d IRQs in core IRQ table!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2097: FILE: drivers/platform/mq11xx_base.c:1026:
+		printk (KERN_ERR "There is no space for %d IRQs in core IRQ table!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2102: FILE: drivers/platform/mq11xx_base.c:1031:
+	debug_func ("base IRQ number is %d\n", mqdata->base.irq_base);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2106: FILE: drivers/platform/mq11xx_base.c:1035:
+		int irq = mqdata->base.irq_base + i;
+		set_irq_flags (irq, IRQF_VALID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2106: FILE: drivers/platform/mq11xx_base.c:1035:
+		set_irq_flags (irq, IRQF_VALID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2107: FILE: drivers/platform/mq11xx_base.c:1036:
+		set_irq_chip (irq, &mq_irq_chip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2109: FILE: drivers/platform/mq11xx_base.c:1038:
+		set_irq_chipdata (irq, mqdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2114: FILE: drivers/platform/mq11xx_base.c:1043:
+	set_irq_type (mqdata->irq_nr, i ? IRQT_RISING : IRQT_FALLING);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2115: FILE: drivers/platform/mq11xx_base.c:1044:
+	set_irq_data (mqdata->irq_nr, mqdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2124: FILE: drivers/platform/mq11xx_base.c:1053:
+mq_irq_free (struct mq_data *mqdata)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2134: FILE: drivers/platform/mq11xx_base.c:1063:
+	free_irq_space (mqdata->base.irq_base, MQ11xx_NUMIRQS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2139: FILE: drivers/platform/mq11xx_base.c:1068:
+mq_device_enum (struct mediaq11xx_base **list, int list_size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2146: FILE: drivers/platform/mq11xx_base.c:1075:
+	spin_lock (&mq_device_list_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2148: FILE: drivers/platform/mq11xx_base.c:1077:
+		if (mq_device_list [i]) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2149: FILE: drivers/platform/mq11xx_base.c:1078:
+			list [j++] = mq_device_list [i];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2149: FILE: drivers/platform/mq11xx_base.c:1078:
+			list [j++] = mq_device_list [i];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2153: FILE: drivers/platform/mq11xx_base.c:1082:
+	spin_unlock (&mq_device_list_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2155: FILE: drivers/platform/mq11xx_base.c:1084:
+        return j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2155: FILE: drivers/platform/mq11xx_base.c:1084:
+        return j;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2157: FILE: drivers/platform/mq11xx_base.c:1086:
+EXPORT_SYMBOL (mq_device_enum);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2160: FILE: drivers/platform/mq11xx_base.c:1089:
+mq_driver_get (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2162: FILE: drivers/platform/mq11xx_base.c:1091:
+	return try_module_get (THIS_MODULE) ? 0 : -ENXIO;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2164: FILE: drivers/platform/mq11xx_base.c:1093:
+EXPORT_SYMBOL (mq_driver_get);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2167: FILE: drivers/platform/mq11xx_base.c:1096:
+mq_driver_put (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2169: FILE: drivers/platform/mq11xx_base.c:1098:
+	module_put (THIS_MODULE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2171: FILE: drivers/platform/mq11xx_base.c:1100:
+EXPORT_SYMBOL (mq_driver_put);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2186: FILE: drivers/platform/mq11xx_base.c:1115:
+mq_initialize (struct device *dev, int num_resources,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2195: FILE: drivers/platform/mq11xx_base.c:1124:
+		printk (KERN_ERR "mq11xx_base: Incorrect platform resources!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2195: FILE: drivers/platform/mq11xx_base.c:1124:
+		printk (KERN_ERR "mq11xx_base: Incorrect platform resources!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2199: FILE: drivers/platform/mq11xx_base.c:1128:
+	mqdata = kmalloc (sizeof (struct mq_data), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2199: FILE: drivers/platform/mq11xx_base.c:1128:
+	mqdata = kmalloc (sizeof (struct mq_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mqdata)...) over kmalloc(sizeof (struct mq_data)...)
#2199: FILE: drivers/platform/mq11xx_base.c:1128:
+	mqdata = kmalloc (sizeof (struct mq_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2202: FILE: drivers/platform/mq11xx_base.c:1131:
+	memset (mqdata, 0, sizeof (struct mq_data));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2202: FILE: drivers/platform/mq11xx_base.c:1131:
+	memset (mqdata, 0, sizeof (struct mq_data));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2203: FILE: drivers/platform/mq11xx_base.c:1132:
+	dev_set_drvdata (dev, mqdata);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#2205: FILE: drivers/platform/mq11xx_base.c:1134:
+#define IOREMAP(v, n, el) \
+	mqdata->base.v = ioremap (resource[n].start, \
+		resource[n].end - resource[n].start + 1); \
+	if (!mqdata->base.v) goto el; \
+	mqdata->base.paddr_##v = resource[n].start;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2205: FILE: drivers/platform/mq11xx_base.c:1134:
+#define IOREMAP(v, n, el) \
+	mqdata->base.v = ioremap (resource[n].start, \
+		resource[n].end - resource[n].start + 1); \
+	if (!mqdata->base.v) goto el; \
+	mqdata->base.paddr_##v = resource[n].start;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2205: FILE: drivers/platform/mq11xx_base.c:1134:
+#define IOREMAP(v, n, el) \
+	mqdata->base.v = ioremap (resource[n].start, \
+		resource[n].end - resource[n].start + 1); \
+	if (!mqdata->base.v) goto el; \
+	mqdata->base.paddr_##v = resource[n].start;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2206: FILE: drivers/platform/mq11xx_base.c:1135:
+	mqdata->base.v = ioremap (resource[n].start, \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2208: FILE: drivers/platform/mq11xx_base.c:1137:
+	if (!mqdata->base.v) goto el; \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2211: FILE: drivers/platform/mq11xx_base.c:1140:
+	IOREMAP (gfxram, 0, err0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2212: FILE: drivers/platform/mq11xx_base.c:1141:
+	IOREMAP (ram, 1, err1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2213: FILE: drivers/platform/mq11xx_base.c:1142:
+	IOREMAP (regs, 2, err2);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2219: FILE: drivers/platform/mq11xx_base.c:1148:
+		(resource [0].end - resource [0].start) -

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2219: FILE: drivers/platform/mq11xx_base.c:1148:
+		(resource [0].end - resource [0].start) -

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2220: FILE: drivers/platform/mq11xx_base.c:1149:
+		(resource [1].end - resource [1].start);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2220: FILE: drivers/platform/mq11xx_base.c:1149:
+		(resource [1].end - resource [1].start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2225: FILE: drivers/platform/mq11xx_base.c:1154:
+	mqdata->devices = kmalloc (mqdata->ndevices *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2226: FILE: drivers/platform/mq11xx_base.c:1155:
+		(sizeof (struct platform_device)), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2231: FILE: drivers/platform/mq11xx_base.c:1160:
+	if (mq11xx_init (mqdata)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2232: FILE: drivers/platform/mq11xx_base.c:1161:
+		printk (KERN_ERR "MediaQ device initialization failed!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2232: FILE: drivers/platform/mq11xx_base.c:1161:
+		printk (KERN_ERR "MediaQ device initialization failed!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2245: FILE: drivers/platform/mq11xx_base.c:1174:
+	spin_lock_init (&mqdata->mem_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2248: FILE: drivers/platform/mq11xx_base.c:1177:
+	mqdata->freelist = kmalloc (MEMBLOCK_MINCOUNT * sizeof (struct mq_freemem_list),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2248: FILE: drivers/platform/mq11xx_base.c:1177:
+	mqdata->freelist = kmalloc (MEMBLOCK_MINCOUNT * sizeof (struct mq_freemem_list),

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2248: FILE: drivers/platform/mq11xx_base.c:1177:
+	mqdata->freelist = kmalloc (MEMBLOCK_MINCOUNT * sizeof (struct mq_freemem_list),
+				    GFP_KERNEL);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2250: FILE: drivers/platform/mq11xx_base.c:1179:
+	mqdata->freelist [0].addr = 0;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2251: FILE: drivers/platform/mq11xx_base.c:1180:
+	mqdata->freelist [0].size = MQ11xx_FB_SIZE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2254: FILE: drivers/platform/mq11xx_base.c:1183:
+	if ((mqdata->irq_nr != -1) && mq_irq_init (mqdata))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2264: FILE: drivers/platform/mq11xx_base.c:1193:
+		memset (sdev, 0, sizeof (struct platform_device));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2264: FILE: drivers/platform/mq11xx_base.c:1193:
+		memset (sdev, 0, sizeof (struct platform_device));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2274: FILE: drivers/platform/mq11xx_base.c:1203:
+		while (mq_blocks [++j].id.id == sdev->id)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2278: FILE: drivers/platform/mq11xx_base.c:1207:
+		res = kmalloc (sdev->num_resources * sizeof (struct resource), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2278: FILE: drivers/platform/mq11xx_base.c:1207:
+		res = kmalloc (sdev->num_resources * sizeof (struct resource), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2278: FILE: drivers/platform/mq11xx_base.c:1207:
+		res = kmalloc (sdev->num_resources * sizeof (struct resource), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2280: FILE: drivers/platform/mq11xx_base.c:1209:
+		memset (res, 0, sdev->num_resources * sizeof (struct resource));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2280: FILE: drivers/platform/mq11xx_base.c:1209:
+		memset (res, 0, sdev->num_resources * sizeof (struct resource));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2282: FILE: drivers/platform/mq11xx_base.c:1211:
+		for (j = old_j, k = 0; mq_blocks [j].id.id == sdev->id; j++) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2288: FILE: drivers/platform/mq11xx_base.c:1217:
+			res[k].start = (unsigned)mqdata->base.regs + blk->start;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2289: FILE: drivers/platform/mq11xx_base.c:1218:
+			res[k].end = (unsigned)mqdata->base.regs + blk->end;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2290: FILE: drivers/platform/mq11xx_base.c:1219:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2290: FILE: drivers/platform/mq11xx_base.c:1219:
+                }$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2292: FILE: drivers/platform/mq11xx_base.c:1221:
+		mqdata->power_on [i] = 1;;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#2292: FILE: drivers/platform/mq11xx_base.c:1221:
+		mqdata->power_on [i] = 1;;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2299: FILE: drivers/platform/mq11xx_base.c:1228:
+                const struct mq_block *blk = &mq_blocks[j];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2299: FILE: drivers/platform/mq11xx_base.c:1228:
+                const struct mq_block *blk = &mq_blocks[j];$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2301: FILE: drivers/platform/mq11xx_base.c:1230:
+		while (mq_blocks [++j].id.id == sdev->id)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2305: FILE: drivers/platform/mq11xx_base.c:1234:
+		mq_power_off (&mqdata->base, sdev->id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2311: FILE: drivers/platform/mq11xx_base.c:1240:
+		rc = platform_device_register (sdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2313: FILE: drivers/platform/mq11xx_base.c:1242:
+			printk (KERN_ERR "Failed to register MediaQ subdevice `%s', code %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2313: FILE: drivers/platform/mq11xx_base.c:1242:
+			printk (KERN_ERR "Failed to register MediaQ subdevice `%s', code %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2314: FILE: drivers/platform/mq11xx_base.c:1243:
+^I^I^I        blk->name, rc);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2319: FILE: drivers/platform/mq11xx_base.c:1248:
+	printk (KERN_INFO "MediaQ %s chip detected, ", mqdata->base.chipname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2319: FILE: drivers/platform/mq11xx_base.c:1248:
+	printk (KERN_INFO "MediaQ %s chip detected, ", mqdata->base.chipname);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2322: FILE: drivers/platform/mq11xx_base.c:1251:
+		printk ("base IRQ %d\n", mqdata->base.irq_base);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2322: FILE: drivers/platform/mq11xx_base.c:1251:
+		printk ("base IRQ %d\n", mqdata->base.irq_base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2324: FILE: drivers/platform/mq11xx_base.c:1253:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2324: FILE: drivers/platform/mq11xx_base.c:1253:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2327: FILE: drivers/platform/mq11xx_base.c:1256:
+	spin_lock (&mq_device_list_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2329: FILE: drivers/platform/mq11xx_base.c:1258:
+		if (!mq_device_list [i]) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2330: FILE: drivers/platform/mq11xx_base.c:1259:
+			mq_device_list [i] = &mqdata->base;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2333: FILE: drivers/platform/mq11xx_base.c:1262:
+	spin_unlock (&mq_device_list_lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#2337: FILE: drivers/platform/mq11xx_base.c:1266:
+err5:	while (--i >= 0) {
+		platform_device_unregister (&mqdata->devices[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2338: FILE: drivers/platform/mq11xx_base.c:1267:
+		platform_device_unregister (&mqdata->devices[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2339: FILE: drivers/platform/mq11xx_base.c:1268:
+		kfree (mqdata->devices[i].resource);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2344: FILE: drivers/platform/mq11xx_base.c:1273:
+		mq_irq_free (mqdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2347: FILE: drivers/platform/mq11xx_base.c:1276:
+err4:	kfree (mqdata->devices);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2349: FILE: drivers/platform/mq11xx_base.c:1278:
+err3:	iounmap ((void *)mqdata->base.regs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2350: FILE: drivers/platform/mq11xx_base.c:1279:
+err2:	iounmap ((void *)mqdata->base.ram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2351: FILE: drivers/platform/mq11xx_base.c:1280:
+err1:	iounmap (mqdata->base.gfxram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2352: FILE: drivers/platform/mq11xx_base.c:1281:
+err0:	kfree (mqdata);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2354: FILE: drivers/platform/mq11xx_base.c:1283:
+	printk (KERN_ERR "MediaQ base SoC driver initialization failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2354: FILE: drivers/platform/mq11xx_base.c:1283:
+	printk (KERN_ERR "MediaQ base SoC driver initialization failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2360: FILE: drivers/platform/mq11xx_base.c:1289:
+mq_finalize (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2363: FILE: drivers/platform/mq11xx_base.c:1292:
+	struct mq_data *mqdata = dev_get_drvdata (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2365: FILE: drivers/platform/mq11xx_base.c:1294:
+	spin_lock (&mq_device_list_lock);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2367: FILE: drivers/platform/mq11xx_base.c:1296:
+		if (mq_device_list [i] == &mqdata->base) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#2368: FILE: drivers/platform/mq11xx_base.c:1297:
+			mq_device_list [i] = NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2371: FILE: drivers/platform/mq11xx_base.c:1300:
+	spin_unlock (&mq_device_list_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2374: FILE: drivers/platform/mq11xx_base.c:1303:
+		platform_device_unregister (&mqdata->devices[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2375: FILE: drivers/platform/mq11xx_base.c:1304:
+		kfree (mqdata->devices[i].resource);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2380: FILE: drivers/platform/mq11xx_base.c:1309:
+		mq_irq_free (mqdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2383: FILE: drivers/platform/mq11xx_base.c:1312:
+	kfree (mqdata->devices);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2385: FILE: drivers/platform/mq11xx_base.c:1314:
+	iounmap ((void *)mqdata->base.regs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2386: FILE: drivers/platform/mq11xx_base.c:1315:
+	iounmap ((void *)mqdata->base.ram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2387: FILE: drivers/platform/mq11xx_base.c:1316:
+	iounmap (mqdata->base.gfxram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2389: FILE: drivers/platform/mq11xx_base.c:1318:
+	kfree (mqdata);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2400: FILE: drivers/platform/mq11xx_base.c:1329:
+mq_probe (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2402: FILE: drivers/platform/mq11xx_base.c:1331:
+	struct platform_device *pdev = to_platform_device (dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2403: FILE: drivers/platform/mq11xx_base.c:1332:
+	struct platform_device *pdev = to_platform_device (dev);
+	return mq_initialize (dev, pdev->num_resources, pdev->resource,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2403: FILE: drivers/platform/mq11xx_base.c:1332:
+	return mq_initialize (dev, pdev->num_resources, pdev->resource,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2408: FILE: drivers/platform/mq11xx_base.c:1337:
+mq_remove (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2410: FILE: drivers/platform/mq11xx_base.c:1339:
+	return mq_finalize (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2414: FILE: drivers/platform/mq11xx_base.c:1343:
+mq_shutdown (struct device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2420: FILE: drivers/platform/mq11xx_base.c:1349:
+mq_suspend (struct device *dev, u32 state, u32 level)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2427: FILE: drivers/platform/mq11xx_base.c:1356:
+mq_resume (struct device *dev, u32 level)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2445: FILE: drivers/platform/mq11xx_base.c:1374:
+mq_base_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2447: FILE: drivers/platform/mq11xx_base.c:1376:
+	return driver_register (&mq_device_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2451: FILE: drivers/platform/mq11xx_base.c:1380:
+mq_base_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2453: FILE: drivers/platform/mq11xx_base.c:1382:
+	driver_unregister (&mq_device_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2456: FILE: drivers/platform/mq11xx_base.c:1385:
+module_init (mq_base_init)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2457: FILE: drivers/platform/mq11xx_base.c:1386:
+module_exit (mq_base_exit)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000163054.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 98 errors, 397 warnings, 268 checks, 2369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000163054.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
