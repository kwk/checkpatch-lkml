WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#16: 
Subject: Re: [PATCH] sparse fix: add many lock annotations

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> > warnings from sparse. In almost every case, it quiets the warning caused

CHECK:SPACING: No space is necessary after a cast
#397: FILE: include/asm-i386/smp.h:41:
+extern void lock_ipi_call_lock(void) __acquires(call_lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#397: FILE: include/asm-i386/smp.h:41:
+extern void lock_ipi_call_lock(void) __acquires(call_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#397: FILE: include/asm-i386/smp.h:41:
+extern void lock_ipi_call_lock(void) __acquires(call_lock);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#398: FILE: include/asm-i386/smp.h:42:
+extern void unlock_ipi_call_lock(void) __releases(call_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: include/asm-i386/smp.h:42:
+extern void unlock_ipi_call_lock(void) __releases(call_lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#398: FILE: include/asm-i386/smp.h:42:
+extern void unlock_ipi_call_lock(void) __releases(call_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/linux/netdevice.h:992:
+extern void *dev_seq_start(struct seq_file *seq, loff_t *pos) __acquires(dev_base_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#414: FILE: include/linux/netdevice.h:994:
+extern void dev_seq_stop(struct seq_file *seq, void *v) __releases(dev_base_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#428: FILE: include/linux/wanrouter.h:530:
+extern void lock_adapter_irq(spinlock_t *lock, unsigned long *smp_flags) __acquires(lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: include/linux/wanrouter.h:531:
+extern void unlock_adapter_irq(spinlock_t *lock, unsigned long *smp_flags) __releases(lock);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#442: FILE: include/net/neighbour.h:240:
 };
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct neigh_table *' should also have an identifier name
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#442: FILE: include/net/neighbour.h:240:
+extern void *neigh_seq_start(struct seq_file *, loff_t *, struct neigh_table *, unsigned int) __acquires(tbl->lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#445: FILE: include/net/neighbour.h:242:
+extern void neigh_seq_stop(struct seq_file *, void *) __releases(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#445: FILE: include/net/neighbour.h:242:
+extern void neigh_seq_stop(struct seq_file *, void *) __releases(tbl->lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#445: FILE: include/net/neighbour.h:242:
+extern void neigh_seq_stop(struct seq_file *, void *) __releases(tbl->lock);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#459: FILE: include/net/sch_generic.h:158:
+extern void qdisc_lock_tree(struct net_device *dev) __acquires(qdisc_tree_lock) __acquires(dev->queue_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: include/net/sch_generic.h:158:
+extern void qdisc_lock_tree(struct net_device *dev) __acquires(qdisc_tree_lock) __acquires(dev->queue_lock);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#460: FILE: include/net/sch_generic.h:159:
+extern void qdisc_unlock_tree(struct net_device *dev) __releases(qdisc_tree_lock) __releases(dev->queue_lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: include/net/sch_generic.h:159:
+extern void qdisc_unlock_tree(struct net_device *dev) __releases(qdisc_tree_lock) __releases(dev->queue_lock);

CHECK:SPACING: No space is necessary after a cast
#473: FILE: kernel/rcutorture.c:404:
+static int srcu_torture_read_lock(void) __acquires(srcu_ctl)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000015733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 14 checks, 1134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000015733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
