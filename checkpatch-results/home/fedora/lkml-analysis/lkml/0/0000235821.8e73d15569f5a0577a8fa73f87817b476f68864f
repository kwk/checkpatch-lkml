ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/serial/8250.c:2403:
+        struct uart_8250_port *up;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/serial/8250.c:2403:
+        struct uart_8250_port *up;$

ERROR:SPACING: space required before the open brace '{'
#108: FILE: drivers/serial/8250.c:2410:
+	for (ttyS = 0; ttyS < UART_NR; ttyS++){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ttyS>
#109: FILE: drivers/serial/8250.c:2411:
+		up =  &serial8250_ports[ttyS];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: drivers/serial/8250.c:2414:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/serial/8250.c:2414:
+        }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#145: FILE: drivers/serial/kgdb_8250.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#169: FILE: drivers/serial/kgdb_8250.c:25:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#195: FILE: drivers/serial/kgdb_8250.c:51:
+static int kgdb8250_ttyS = 0;		/* Start with this if not given */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'existant' may be misspelled - perhaps 'existent'?
#202: FILE: drivers/serial/kgdb_8250.c:58:
+/* Old-style serial definitions, if existant, and a counter. */
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <kgdb8250_ttyS>
#229: FILE: drivers/serial/kgdb_8250.c:85:
+#define CURRENTPORT		kgdb8250_ports[kgdb8250_ttyS]

WARNING:SPACING: Unnecessary space before function pointer arguments
#236: FILE: drivers/serial/kgdb_8250.c:92:
+static void (*serial_outb) (unsigned char val, unsigned long addr);

WARNING:SPACING: Unnecessary space before function pointer arguments
#237: FILE: drivers/serial/kgdb_8250.c:93:
+static unsigned long (*serial_inb) (unsigned long addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#241: FILE: drivers/serial/kgdb_8250.c:97:
+extern int serial8250_release_irq(int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#243: FILE: drivers/serial/kgdb_8250.c:99:
+extern atomic_t debugger_active;

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: drivers/serial/kgdb_8250.c:173:
+	unsigned long flags;
+	local_irq_save(flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: drivers/serial/kgdb_8250.c:206:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/serial/kgdb_8250.c:207:
+         * If  there is some other CPU in KGDB then this is a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/serial/kgdb_8250.c:208:
+         * spurious interrupt. so return without even checking a byte$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/serial/kgdb_8250.c:209:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/serial/kgdb_8250.c:210:
+        if (atomic_read(&debugger_active))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/serial/kgdb_8250.c:210:
+        if (atomic_read(&debugger_active))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#354: FILE: drivers/serial/kgdb_8250.c:210:
+        if (atomic_read(&debugger_active))
+               return IRQ_NONE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/serial/kgdb_8250.c:211:
+               return IRQ_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/serial/kgdb_8250.c:211:
+               return IRQ_NONE;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#371: FILE: drivers/serial/kgdb_8250.c:227:
+	unsigned cval;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#404: FILE: drivers/serial/kgdb_8250.c:260:
+		/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#500: FILE: drivers/serial/kgdb_8250.c:356:
+ * Perform static initalization tasks which we need to always do,
                   ^^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: drivers/serial/kgdb_8250.c:375:
+			CURRENTPORT.membase = ioremap(CURRENTPORT.mapbase,
+					8 << KGDB8250_REG_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/serial/kgdb_8250.c:417:
+	request_irq(KGDB8250_IRQ, kgdb8250_interrupt, SA_SHIRQ,
+			"GDB-stub", &CURRENTPORT);

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#564: FILE: drivers/serial/kgdb_8250.c:420:
+struct kgdb_io kgdb_io_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#596: FILE: drivers/serial/kgdb_8250.c:452:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#605: FILE: drivers/serial/kgdb_8250.c:461:
+		KGDB8250_IRQ = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#610: FILE: drivers/serial/kgdb_8250.c:466:
+				(unsigned char *)simple_strtoul(str, &str, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#618: FILE: drivers/serial/kgdb_8250.c:474:
+	printk(KERN_ERR "Invalid syntax for option kgdb8250=\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#621: FILE: drivers/serial/kgdb_8250.c:477:
+}
+early_param("kgdb8250", kgdb8250_opt);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#646: FILE: lib/Kconfig.debug:128:
+choice
+	prompt "Method for KGDB communication"
+	depends on KGDB
+	default KGDB_8250
+	help
+	  There are a number of different ways in which you can communicate
+	  with KGDB.  The oldest is using a serial driver.  A newer method
+	  is to use UDP packets and a special network driver.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#655: FILE: lib/Kconfig.debug:137:
+config KGDB_8250
+	bool "KGDB: On generic serial port (8250)"
+	help
+	  Uses generic serial port (8250) for kgdb. This is independent of the
+	  option 9250/16550 and compatible serial port.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#673: FILE: lib/Kconfig.debug:155:
+choice
+	depends on KGDB_8250
+    	prompt "Debug serial port BAUD"
+	default KGDB_115200BAUD
+	help
+	  Gdb and the kernel stub need to agree on the baud rate to be
+	  used.  Some systems (x86 family at this writing) allow this to
+	  be configured.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#682: FILE: lib/Kconfig.debug:164:
+config KGDB_9600BAUD
+	bool "9600"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#685: FILE: lib/Kconfig.debug:167:
+config KGDB_19200BAUD
+	bool "19200"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#688: FILE: lib/Kconfig.debug:170:
+config KGDB_38400BAUD
+	bool "38400"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#691: FILE: lib/Kconfig.debug:173:
+config KGDB_57600BAUD
+	bool "57600"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#694: FILE: lib/Kconfig.debug:176:
+config KGDB_115200BAUD
+	bool "115200"

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#698: FILE: lib/Kconfig.debug:180:
+choice
+	prompt "Serial port for KGDB"
+	depends on KGDB_SIMPLE_SERIAL
+	default KGDB_TTYS0
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#703: FILE: lib/Kconfig.debug:185:
+config KGDB_TTYS0
+	bool "ttyS0"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#706: FILE: lib/Kconfig.debug:188:
+config KGDB_TTYS1
+	bool "ttyS1"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#709: FILE: lib/Kconfig.debug:191:
+config KGDB_TTYS2
+	bool "ttyS2"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#712: FILE: lib/Kconfig.debug:194:
+config KGDB_TTYS3
+	bool "ttyS3"
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 34 warnings, 5 checks, 676 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
