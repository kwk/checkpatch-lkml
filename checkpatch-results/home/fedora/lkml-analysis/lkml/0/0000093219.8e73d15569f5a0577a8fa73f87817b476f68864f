WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
The directory was fs/9p, but MAINTAINERS and Documentation referred to v9fs.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: Documentation/filesystems/9p.txt:83:
+Bug reports may be issued through the kernel.org bugzilla $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#272: FILE: MAINTAINERS:151:
+P:      Eric Van Hensbergen

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#273: FILE: MAINTAINERS:152:
+M:      ericvh@gmail.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#273: FILE: MAINTAINERS:152:
+P:      Eric Van Hensbergen
+M:      ericvh@gmail.com

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#274: FILE: MAINTAINERS:153:
+P:      Ron Minnich

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#275: FILE: MAINTAINERS:154:
+M:      rminnich@lanl.gov

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#275: FILE: MAINTAINERS:154:
+P:      Ron Minnich
+M:      rminnich@lanl.gov

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#276: FILE: MAINTAINERS:155:
+P:      Latchesar Ionkov

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#277: FILE: MAINTAINERS:156:
+M:      lucho@ionkov.net

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#277: FILE: MAINTAINERS:156:
+P:      Latchesar Ionkov
+M:      lucho@ionkov.net

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#278: FILE: MAINTAINERS:157:
+L:      v9fs-developer@lists.sourceforge.net

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#279: FILE: MAINTAINERS:158:
+W:      http://v9fs.sf.net

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#280: FILE: MAINTAINERS:159:
+T:      git kernel.org:/pub/scm/linux/kernel/ericvh/v9fs.git

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#281: FILE: MAINTAINERS:160:
+S:      Maintained

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'T:'
#281: FILE: MAINTAINERS:160:
+T:      git kernel.org:/pub/scm/linux/kernel/ericvh/v9fs.git
+S:      Maintained

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#763: FILE: fs/9p/fcall.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#764: FILE: fs/9p/fcall.c:2:
+ *  linux/fs/9p/fcall.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#784: FILE: fs/9p/fcall.c:22:
+ *  51 Franklin Street, Fifth Floor$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#820: FILE: fs/9p/fcall.c:58:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#823: FILE: fs/9p/fcall.c:61:
+	} else

WARNING:TYPO_SPELLING: 'attatch' may be misspelled - perhaps 'attach'?
#834: FILE: fs/9p/fcall.c:72:
+ * @fid: mount fid to attatch to root node
                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#845: FILE: fs/9p/fcall.c:83:
+	struct v9fs_fcall* tc;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#851: FILE: fs/9p/fcall.c:89:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#854: FILE: fs/9p/fcall.c:92:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: fs/9p/fcall.c:99:
+static void v9fs_t_clunk_cb(void *a, struct v9fs_fcall *tc,
+	struct v9fs_fcall *rc, int err)

CHECK:BRACES: braces {} should be used on all arms of this statement
#927: FILE: fs/9p/fcall.c:165:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#930: FILE: fs/9p/fcall.c:168:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#954: FILE: fs/9p/fcall.c:192:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#957: FILE: fs/9p/fcall.c:195:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#982: FILE: fs/9p/fcall.c:220:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#985: FILE: fs/9p/fcall.c:223:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1019: FILE: fs/9p/fcall.c:257:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1022: FILE: fs/9p/fcall.c:260:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1048: FILE: fs/9p/fcall.c:286:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1051: FILE: fs/9p/fcall.c:289:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1075: FILE: fs/9p/fcall.c:313:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1078: FILE: fs/9p/fcall.c:316:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: fs/9p/fcall.c:334:
+v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, u32 perm, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: fs/9p/fcall.c:335:
+v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, u32 perm, 
+	u8 mode, char *extension, struct v9fs_fcall **rcp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: fs/9p/fcall.c:343:
+^Itc = v9fs_create_tcreate(fid, name, perm, mode, extension, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: fs/9p/fcall.c:344:
+	tc = v9fs_create_tcreate(fid, name, perm, mode, extension, 
+		v9ses->extended);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1108: FILE: fs/9p/fcall.c:346:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1111: FILE: fs/9p/fcall.c:349:
+	} else

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#1134: FILE: fs/9p/fcall.c:372:
+	dprintk(DEBUG_9P, "fid %d offset 0x%llux count 0x%x\n", fid,

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:SPACING: No space is necessary after a cast
#1135: FILE: fs/9p/fcall.c:373:
+		(long long unsigned) offset, count);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISORDERED_TYPE: type 'long long unsigned' should be specified in [[un]signed] [short|int|long|long long] order
#1135: FILE: fs/9p/fcall.c:373:
+		(long long unsigned) offset, count);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1138: FILE: fs/9p/fcall.c:376:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1148: FILE: fs/9p/fcall.c:386:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1166: FILE: fs/9p/fcall.c:404:
+v9fs_t_write(struct v9fs_session_info *v9ses, u32 fid, u64 offset, u32 count,
+	const char __user *data, struct v9fs_fcall **rcp)

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#1171: FILE: fs/9p/fcall.c:409:
+	dprintk(DEBUG_9P, "fid %d offset 0x%llux count 0x%x\n", fid,

CHECK:SPACING: No space is necessary after a cast
#1172: FILE: fs/9p/fcall.c:410:
+		(long long unsigned) offset, count);

WARNING:MISORDERED_TYPE: type 'long long unsigned' should be specified in [[un]signed] [short|int|long|long long] order
#1172: FILE: fs/9p/fcall.c:410:
+		(long long unsigned) offset, count);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1175: FILE: fs/9p/fcall.c:413:
+	if (!IS_ERR(tc)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1186: FILE: fs/9p/fcall.c:424:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uname>
#1201: FILE: fs/9p/v9fs.c:53:
+	Opt_uname, Opt_remotename,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_remotename>
#1201: FILE: fs/9p/v9fs.c:53:
+	Opt_uname, Opt_remotename,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093219.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 20 warnings, 30 checks, 616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093219.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
