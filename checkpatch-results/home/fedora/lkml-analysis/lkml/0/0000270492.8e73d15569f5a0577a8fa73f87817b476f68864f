CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#120: FILE: fs/aio.c:1336:
+	if ((ret == 0) || (iocb->ki_left == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocb->ki_left == 0'
#120: FILE: fs/aio.c:1336:
+	if ((ret == 0) || (iocb->ki_left == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#120: FILE: fs/aio.c:1336:
+	if ((ret == 0) || (iocb->ki_left == 0)) {
 		ret = iocb->ki_nbytes - iocb->ki_left;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <kiocbTrySync>
#136: FILE: include/linux/aio.h:36:
+#define kiocbTrySync(iocb)	test_and_set_bit(KIF_SYNCED, &(iocb)->ki_flags)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <kiocbSetSynced>
#141: FILE: include/linux/aio.h:41:
+#define kiocbSetSynced(iocb)	set_bit(KIF_SYNCED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbClearSynced>
#146: FILE: include/linux/aio.h:46:
+#define kiocbClearSynced(iocb)	clear_bit(KIF_SYNCED, &(iocb)->ki_flags)

CHECK:CAMELCASE: Avoid CamelCase: <kiocbIsSynced>
#151: FILE: include/linux/aio.h:51:
+#define kiocbIsSynced(iocb)	test_bit(KIF_SYNCED, &(iocb)->ki_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: mm/filemap.c:301:
+		ret = wait_on_page_writeback_range_wq(mapping, start, end,
+			current->io_wait);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#236: FILE: mm/filemap.c:333:
+	if (ret >= 0) {
+		ret = generic_osync_inode(inode, mapping, OSYNC_METADATA);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/filemap.c:339:
+		ret = wait_on_page_writeback_range_wq(mapping, start, end,
+			current->io_wait);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: mm/filemap.c:357:
+	int ret = wait_on_page_writeback_range(mapping, 0, -1);
+	if (ret > 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: mm/filemap.c:2233:
+generic_file_aio_write_nolock(struct kiocb *iocb, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: mm/filemap.c:2258:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: mm/filemap.c:2261:
+__generic_file_write_nolock(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: mm/filemap.c:2307:
+	ret = __generic_file_aio_write_nolock(iocb, &local_iov, 1,
 						&iocb->ki_pos);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270492.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 12 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270492.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
