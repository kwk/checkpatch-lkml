Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#52: 
   There are 4 bytes in the MSDOS master boot record, at offset 0x1b8,
                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#88: 
  There are 4 bytes in the MSDOS master boot record, at offset 0x1b8,
                           ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#118: 
diff -Nru a/Documentation/i386/zero-page.txt b/Documentation/i386/zero-page.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#119: 
--- a/Documentation/i386/zero-page.txt	Tue Jan 20 15:49:42 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: arch/i386/kernel/edd.c:267:
+	char *p = buf;
+	p += snprintf(p, left, "0x%08x\n", edd_disk80_sig);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: arch/i386/kernel/edd.c:445:
+	struct edd_info *info = edd_dev_get_info(edev);
+	if (!edev || !info)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#271: FILE: arch/i386/kernel/setup.c:453:
+EXPORT_SYMBOL(edd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#272: FILE: arch/i386/kernel/setup.c:454:
+EXPORT_SYMBOL(edd_disk80_sig);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/i386/kernel/setup.c:465:
+     edd_disk80_sig = DISK80_SIGNATURE;$

CHECK:SPACING: No space is necessary after a cast
#321: FILE: include/asm-i386/setup.h:47:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#321: FILE: include/asm-i386/setup.h:47:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: include/asm-i386/setup.h:47:
+#define DISK80_SIGNATURE (*(unsigned int*) (PARAM+DISK80_SIG_BUFFER))
                                                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 2 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
