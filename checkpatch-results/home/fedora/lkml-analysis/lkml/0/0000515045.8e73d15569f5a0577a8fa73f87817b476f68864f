WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
On Thursday, August 30, 2001 11:50:05 PM +0200 Pavel Machek <pavel@suse.cz> wrote:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: include/linux/reiserfs_fs_sb.h:390:
+#define REISERFS_NO_REPLAY 15 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#81: FILE: include/linux/reiserfs_fs.h:1726:
+int reiserfs_replay_error(struct super_block *s) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#99: FILE: fs/reiserfs/journal.c:110:
+int reiserfs_replay_error(struct super_block *s) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/reiserfs/journal.c:111:
+    return test_bit(REPLAY_ERROR, &SB_JOURNAL(s)->j_state) ;$

WARNING:SPACING: space prohibited before semicolon
#100: FILE: fs/reiserfs/journal.c:111:
+    return test_bit(REPLAY_ERROR, &SB_JOURNAL(s)->j_state) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/reiserfs/journal.c:1659:
+  if (continue_replay) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#116: FILE: fs/reiserfs/journal.c:1659:
+  if (continue_replay) {
+    if (is_read_only(p_s_sb->s_dev)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/reiserfs/journal.c:1660:
+    if (is_read_only(p_s_sb->s_dev)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#117: FILE: fs/reiserfs/journal.c:1660:
+    if (is_read_only(p_s_sb->s_dev)) {
+      printk("clm-2076: device is readonly, unable to replay log\n") ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/reiserfs/journal.c:1661:
+      printk("clm-2076: device is readonly, unable to replay log\n") ;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: fs/reiserfs/journal.c:1661:
+      printk("clm-2076: device is readonly, unable to replay log\n") ;

WARNING:SPACING: space prohibited before semicolon
#118: FILE: fs/reiserfs/journal.c:1661:
+      printk("clm-2076: device is readonly, unable to replay log\n") ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/reiserfs/journal.c:1662:
+      return -1 ;$

WARNING:SPACING: space prohibited before semicolon
#119: FILE: fs/reiserfs/journal.c:1662:
+      return -1 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/reiserfs/journal.c:1663:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/reiserfs/journal.c:1664:
+    if (reiserfs_noreplay(p_s_sb)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#121: FILE: fs/reiserfs/journal.c:1664:
+    if (reiserfs_noreplay(p_s_sb)) {
+      printk("-o noreplay used to force unclean mount.  FS set to readonly\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/reiserfs/journal.c:1665:
+      printk("-o noreplay used to force unclean mount.  FS set to readonly\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: fs/reiserfs/journal.c:1665:
+      printk("-o noreplay used to force unclean mount.  FS set to readonly\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/reiserfs/journal.c:1666:
+      p_s_sb->s_flags |= MS_RDONLY ;$

WARNING:SPACING: space prohibited before semicolon
#123: FILE: fs/reiserfs/journal.c:1666:
+      p_s_sb->s_flags |= MS_RDONLY ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/reiserfs/journal.c:1667:
+      set_bit(REPLAY_ERROR, &SB_JOURNAL(p_s_sb)->j_state) ;$

WARNING:SPACING: space prohibited before semicolon
#124: FILE: fs/reiserfs/journal.c:1667:
+      set_bit(REPLAY_ERROR, &SB_JOURNAL(p_s_sb)->j_state) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/reiserfs/journal.c:1668:
+      return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#125: FILE: fs/reiserfs/journal.c:1668:
+      return 0 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/reiserfs/journal.c:1669:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/reiserfs/journal.c:1670:
+    if (p_s_sb->s_flags & MS_RDONLY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#127: FILE: fs/reiserfs/journal.c:1670:
+    if (p_s_sb->s_flags & MS_RDONLY) {
+      printk("Warning, log replay starting on readonly filesystem\n") ;    

WARNING:BRACES: braces {} are not necessary for single statement blocks
#127: FILE: fs/reiserfs/journal.c:1670:
+    if (p_s_sb->s_flags & MS_RDONLY) {
+      printk("Warning, log replay starting on readonly filesystem\n") ;    
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: fs/reiserfs/journal.c:1671:
+      printk("Warning, log replay starting on readonly filesystem\n") ;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/reiserfs/journal.c:1671:
+      printk("Warning, log replay starting on readonly filesystem\n") ;    $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: fs/reiserfs/journal.c:1671:
+      printk("Warning, log replay starting on readonly filesystem\n") ;    

WARNING:SPACING: space prohibited before semicolon
#128: FILE: fs/reiserfs/journal.c:1671:
+      printk("Warning, log replay starting on readonly filesystem\n") ;    

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/reiserfs/journal.c:1672:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/reiserfs/journal.c:2039:
+  if (test_bit(REPLAY_ERROR, &SB_JOURNAL(p_s_sb)->j_state)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#138: FILE: fs/reiserfs/journal.c:2039:
+  if (test_bit(REPLAY_ERROR, &SB_JOURNAL(p_s_sb)->j_state)) {
+    printk("clm-2100: calling journal_begin after replay errors\n") ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/reiserfs/journal.c:2040:
+    printk("clm-2100: calling journal_begin after replay errors\n") ;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: fs/reiserfs/journal.c:2040:
+    printk("clm-2100: calling journal_begin after replay errors\n") ;

WARNING:SPACING: space prohibited before semicolon
#139: FILE: fs/reiserfs/journal.c:2040:
+    printk("clm-2100: calling journal_begin after replay errors\n") ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: fs/reiserfs/journal.c:2041:
+    BUG() ;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: fs/reiserfs/journal.c:2041:
+    BUG() ;

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited before semicolon
#140: FILE: fs/reiserfs/journal.c:2041:
+    BUG() ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/reiserfs/journal.c:2042:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/reiserfs/journal.c:2043:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/reiserfs/journal.c:2043:
+  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#152: FILE: fs/reiserfs/super.c:179:
+	} else if (!strcmp (this_char, "noreplay")) {
+	    set_bit (REISERFS_NO_REPLAY, mount_options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: fs/reiserfs/super.c:179:
+	} else if (!strcmp (this_char, "noreplay")) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: fs/reiserfs/super.c:180:
+	    set_bit (REISERFS_NO_REPLAY, mount_options);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#160: FILE: fs/reiserfs/super.c:272:
   } else {
[...]
+    if (reiserfs_replay_error(s)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: fs/reiserfs/super.c:273:
+    /* if we are currently readonly, and were mounted with noreplay, $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#162: FILE: fs/reiserfs/super.c:274:
+    /* if we are currently readonly, and were mounted with noreplay, 
+    ** we need to check if replay failed and the journal params are not

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/reiserfs/super.c:278:
+    if (reiserfs_replay_error(s)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#166: FILE: fs/reiserfs/super.c:278:
+    if (reiserfs_replay_error(s)) {
+      return -EIO ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#166: FILE: fs/reiserfs/super.c:278:
+    if (reiserfs_replay_error(s)) {
+      return -EIO ;
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/reiserfs/super.c:279:
+      return -EIO ;$

WARNING:SPACING: space prohibited before semicolon
#167: FILE: fs/reiserfs/super.c:279:
+      return -EIO ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/reiserfs/super.c:280:
+    }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 54 warnings, 0 checks, 98 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
