WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#36: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#76: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:36:
+ * $Id: ipath_layer.c 4365 2005-12-10 00:04:16Z rjwalsh $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#94: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:54:
+	uint32_t lstate;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#138: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:98:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:131:
+	unsigned unit = (arg >> 16) & 0xffff;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#172: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:132:
+	uint32_t piosize;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#193: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:153:
+	if (devdata[unit].ipath_ibmtu == arg) {
+		return 0;	/* same as current */
+	}

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:165:
+	if (arg >= (piosize - 128)) {
[...]
+	} else if ((arg + 128) == devdata[unit].ipath_ibmaxlen)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#211: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:171:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#220: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:180:
+	else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#233: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:193:
+		uint64_t ibc = devdata[unit].ipath_ibcctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:194:
+		uint64_t ibc = devdata[unit].ipath_ibcctrl;
+		ibc &= ~(INFINIPATH_IBCC_MAXPKTLEN_MASK <<

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#261: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:221:
+	ipath_stats.sps_lid[unit] = devdata[unit].ipath_lid = arg;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:258:
+int ipath_layer_query_device(const ipath_type device, uint32_t * vendor,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:259:
+			     uint32_t * boardrev, uint32_t * majrev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:259:
+			     uint32_t * boardrev, uint32_t * majrev,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#299: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:259:
+			     uint32_t * boardrev, uint32_t * majrev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:260:
+			     uint32_t * minrev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around devdata[device].pcidev->dev
#335: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:295:
+	return &(devdata[device].pcidev->dev);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: Unnecessary space before function pointer arguments
#372: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:332:
+			 int (*l_intr) (const ipath_type, uint32_t),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#373: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:333:
+			 int (*l_rcv) (const ipath_type, void *,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#374: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:334:
+				       struct sk_buff *), uint16_t l_rcv_opcode,

WARNING:SPACING: Unnecessary space before function pointer arguments
#375: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:335:
+			 int (*l_rcv_lid) (const ipath_type, void *),

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#392: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:352:
+	if (devdata[device].ipath_layer.l_intr
+	    || devdata[device].ipath_layer.l_rcv) {

ERROR:SPACING: space required before the open parenthesis '('
#399: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:359:
+	if(!(*devdata[device].ipath_statusp & IPATH_STATUS_SMA))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:388:
+int ipath_verbs_register(const ipath_type device,
+			  int (*l_piobufavail) (const ipath_type device),

WARNING:SPACING: Unnecessary space before function pointer arguments
#428: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:388:
+			  int (*l_piobufavail) (const ipath_type device),

WARNING:SPACING: Unnecessary space before function pointer arguments
#429: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:389:
+			  void (*l_rcv) (const ipath_type device, void *rhdr,

WARNING:SPACING: Unnecessary space before function pointer arguments
#431: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:391:
+			  void (*l_timer_cb) (const ipath_type device))

WARNING:SPLIT_STRING: quoted string split across lines
#447: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:407:
+		_IPATH_DBG("Verbs layer already registered on unit %u, "
+			   "failing\n", device);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#478: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:438:
+int ipath_layer_open(const ipath_type device, uint32_t * pktmax)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#481: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:441:
+	uint32_t intval = 0;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#488: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:448:
+	if (!devdata[device].ipath_layer.l_intr
+	    || !devdata[device].ipath_layer.l_rcv) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#493: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:453:
+	if ((ret =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#538: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:498:
+int ipath_layer_get_mac(const ipath_type device, uint8_t * mac)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#540: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:500:
+	uint8_t *guid;

CHECK:SPACING: No space is necessary after a cast
#546: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:506:
+	guid = (uint8_t *) & devdata[device].ipath_guid;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#546: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:506:
+	guid = (uint8_t *) & devdata[device].ipath_guid;
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#554: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:514:
+	if((guid[3] || guid[4]) && !(guid[3] == 0xff && guid[4] == 0xff))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:516:
+		_IPATH_DBG("Warning, guid bytes 3 and 4 not 0 or 0xffff: %x %x\n",
+			guid[3], guid[4]);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#591: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:551:
+	if (!devdata[device].ipath_layer.l_intr
+	    || !devdata[device].ipath_layer.l_rcv) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#603: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:563:
+static inline void copy_aligned(uint32_t *piobuf, struct ipath_sge_state *ss,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#612: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:572:
+		BUG_ON(len == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sge->mr"
#625: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:585:
+		} else if (sge->length == 0 && sge->mr != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#638: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:598:
+static inline void copy_unaligned(uint32_t *piobuf, struct ipath_sge_state *ss,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#651: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:611:
+		BUG_ON(len == 0);

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:616:
+			u.wbuf[extra++] = *(u8 *) sge->vaddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#692: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:652:
+		     uint32_t *hdr, uint32_t len, struct ipath_sge_state *ss)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#696: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:656:
+	uint32_t *piobuf, plen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#697: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:657:
+	uint64_t pboff;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#717: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:677:
+	if ((whichpb = ipath_getpiobuf(device)) < 0)

CHECK:SPACING: No space is necessary after a cast
#721: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:681:
+	piobuf = (uint32_t *) (((char *)(dd->ipath_kregbase)) + pboff

CHECK:SPACING: No space is necessary after a cast
#726: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:686:
+	*((uint64_t *) piobuf) = (uint64_t) plen;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:706:
+void ipath_layer_snapshot_counters(const ipath_type device, u64 * swords,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:707:
+				   u64 * rwords, u64 * spkts, u64 * rpkts)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:707:
+				   u64 * rwords, u64 * spkts, u64 * rpkts)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:707:
+				   u64 * rwords, u64 * spkts, u64 * rpkts)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#810: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:770:
+	uint32_t *piobuf, plen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#811: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:771:
+	uint16_t vlsllnh;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#812: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:772:
+	uint64_t pboff;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#821: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:781:
+	} else
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))

CHECK:BRACES: Unbalanced braces around else statement
#821: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:781:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#822: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:782:
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#823: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:783:
+	    if ((devdata[device].ipath_flags & (IPATH_LINKUNK | IPATH_LINKDOWN))
+		|| devdata[device].ipath_lid == 0) {

CHECK:SPACING: No space is necessary after a cast
#836: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:796:
+	vlsllnh = *((uint16_t *) hdr);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#846: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:806:
+	if ((whichpb = ipath_getpiobuf(device)) < 0) {

CHECK:SPACING: No space is necessary after a cast
#853: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:813:
+	    (uint32_t *) (((char *)(devdata[device].ipath_kregbase)) + pboff +

CHECK:SPACING: No space is necessary after a cast
#858: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:818:
+	*((uint64_t *) piobuf) = (uint64_t) plen;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#930: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:890:
+unsigned ipath_verbs_get_flags(const ipath_type device)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#943: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:903:
+void ipath_verbs_set_flags(const ipath_type device, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#969: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:929:
+unsigned ipath_layer_get_npkeys(const ipath_type device)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#982: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:942:
+unsigned ipath_layer_get_pkey(const ipath_type device, unsigned index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#982: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:942:
+unsigned ipath_layer_get_pkey(const ipath_type device, unsigned index)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1039: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:999:
+	uint16_t lkey = key & 0x7FFF;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1096: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1056:
+		uint16_t key = pkeys[i];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1097: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1057:
+		uint16_t okey = pd->port_pkeys[i];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1118: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1078:
+		uint64_t pkey;

CHECK:SPACING: No space is necessary after a cast
#1120: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1080:
+		pkey = (uint64_t) dd->ipath_pkeys[0] |

CHECK:SPACING: No space is necessary after a cast
#1121: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1081:
+		    ((uint64_t) dd->ipath_pkeys[1] << 16) |

CHECK:SPACING: No space is necessary after a cast
#1122: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1082:
+		    ((uint64_t) dd->ipath_pkeys[2] << 32) |

CHECK:SPACING: No space is necessary after a cast
#1123: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1083:
+		    ((uint64_t) dd->ipath_pkeys[3] << 48);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1135: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1095:
+				unsigned port)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1141: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1101:
+	    ((port < devdata[stype].ipath_portcnt
+	      && regno == kr_rcvhdrtailaddr) ? regno + port : __kr_invalid);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1150: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1110:
+			  unsigned port, uint64_t value)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1156: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1116:
+	    ((port < devdata[stype].ipath_portcnt
+	      && regno == kr_rcvhdrtailaddr) ? regno + port : __kr_invalid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1160: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1120:
+EXPORT_SYMBOL(ipath_kset_linkstate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1161: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1121:
+EXPORT_SYMBOL(ipath_kset_mtu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1162: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1122:
+EXPORT_SYMBOL(ipath_layer_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1163: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1123:
+EXPORT_SYMBOL(ipath_layer_get_bcast);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1164: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1124:
+EXPORT_SYMBOL(ipath_layer_get_cr_errpkey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1165: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1125:
+EXPORT_SYMBOL(ipath_layer_get_deviceid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1166: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1126:
+EXPORT_SYMBOL(ipath_layer_get_flags);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1167: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1127:
+EXPORT_SYMBOL(ipath_layer_get_guid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1168: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1128:
+EXPORT_SYMBOL(ipath_layer_get_ibmtu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1169: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1129:
+EXPORT_SYMBOL(ipath_layer_get_lastibcstat);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1170: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1130:
+EXPORT_SYMBOL(ipath_layer_get_lid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1171: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1131:
+EXPORT_SYMBOL(ipath_layer_get_mac);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1172: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1132:
+EXPORT_SYMBOL(ipath_layer_get_nguid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1173: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1133:
+EXPORT_SYMBOL(ipath_layer_get_num_of_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1174: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1134:
+EXPORT_SYMBOL(ipath_layer_get_pcidev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1175: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1135:
+EXPORT_SYMBOL(ipath_layer_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1176: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1136:
+EXPORT_SYMBOL(ipath_layer_query_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1177: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1137:
+EXPORT_SYMBOL(ipath_layer_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1178: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1138:
+EXPORT_SYMBOL(ipath_layer_send);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1179: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1139:
+EXPORT_SYMBOL(ipath_layer_set_guid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1180: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1140:
+EXPORT_SYMBOL(ipath_layer_set_piointbufavail_int);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1181: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1141:
+EXPORT_SYMBOL(ipath_layer_snapshot_counters);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1182: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1142:
+EXPORT_SYMBOL(ipath_layer_get_counters);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1183: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1143:
+EXPORT_SYMBOL(ipath_layer_want_buffer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1184: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1144:
+EXPORT_SYMBOL(ipath_verbs_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1185: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1145:
+EXPORT_SYMBOL(ipath_verbs_send);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1186: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1146:
+EXPORT_SYMBOL(ipath_verbs_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1187: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1147:
+EXPORT_SYMBOL(ipath_set_sps_lid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1188: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1148:
+EXPORT_SYMBOL(ipath_layer_enable_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1189: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1149:
+EXPORT_SYMBOL(ipath_layer_disable_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1190: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1150:
+EXPORT_SYMBOL(ipath_verbs_get_flags);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1191: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1151:
+EXPORT_SYMBOL(ipath_verbs_set_flags);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1192: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1152:
+EXPORT_SYMBOL(ipath_layer_get_npkeys);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1193: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1153:
+EXPORT_SYMBOL(ipath_layer_get_pkey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1194: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1154:
+EXPORT_SYMBOL(ipath_layer_get_pkeys);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1195: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1155:
+EXPORT_SYMBOL(ipath_layer_set_pkeys);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 60 warnings, 46 checks, 1155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
