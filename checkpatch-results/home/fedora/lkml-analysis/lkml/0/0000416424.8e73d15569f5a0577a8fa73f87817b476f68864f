WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#130: FILE: drivers/net/irda/Kconfig:103:
+config DONGLE_OLD
+	bool "Old Serial dongle support"
 	help
 	  Say Y here if you have an infrared device that connects to your
 	  computer's serial port. These devices are called dongles. Then say Y

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#281: FILE: drivers/net/irda/actisys-sir.c:1:
+/*********************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/net/irda/actisys-sir.c:2:
+ *                $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/net/irda/actisys-sir.c:5:
+ * Description:   Implementation for the ACTiSYS IR-220L and IR-220L+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/net/irda/actisys-sir.c:14:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: drivers/net/irda/actisys-sir.c:18:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/net/irda/actisys-sir.c:19:
+ *     This program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/net/irda/actisys-sir.c:20:
+ *     modify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: drivers/net/irda/actisys-sir.c:21:
+ *     published by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: drivers/net/irda/actisys-sir.c:23:
+ *  $

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#304: FILE: drivers/net/irda/actisys-sir.c:24:
+ *     Neither Dag Brattli nor University of Tromsø admit liability nor
                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/net/irda/actisys-sir.c:25:
+ *     provide warranty for any of this software. This material is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: drivers/net/irda/actisys-sir.c:27:
+ *     $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#311: FILE: drivers/net/irda/actisys-sir.c:31:
+/*
+ * Changelog

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/net/irda/actisys-sir.c:51:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#332: FILE: drivers/net/irda/actisys-sir.c:52:
+/* 
+ * Define the timing of the pulses we send to the dongle (to reset it, and

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#343: FILE: drivers/net/irda/actisys-sir.c:63:
+static int actisys_change_speed(struct sir_dev *, unsigned);

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(baud_rates)
#350: FILE: drivers/net/irda/actisys-sir.c:70:
+#define MAX_SPEEDS (sizeof(baud_rates)/sizeof(baud_rates[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#350: FILE: drivers/net/irda/actisys-sir.c:70:
+#define MAX_SPEEDS (sizeof(baud_rates)/sizeof(baud_rates[0]))
                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: drivers/net/irda/actisys-sir.c:124:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: drivers/net/irda/actisys-sir.c:124:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: drivers/net/irda/actisys-sir.c:124:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: drivers/net/irda/actisys-sir.c:124:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                         ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#425: FILE: drivers/net/irda/actisys-sir.c:145:
+/*
+ * Function actisys_change_speed (task)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#441: FILE: drivers/net/irda/actisys-sir.c:161:
+static int actisys_change_speed(struct sir_dev *dev, unsigned speed)

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: drivers/net/irda/actisys-sir.c:166:
+        IRDA_DEBUG(4, "%s(), speed=%d (was %d)\n", __FUNCTION__,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/net/irda/actisys-sir.c:166:
+        IRDA_DEBUG(4, "%s(), speed=%d (was %d)\n", __FUNCTION__,$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#446: FILE: drivers/net/irda/actisys-sir.c:166:
+        IRDA_DEBUG(4, "%s(), speed=%d (was %d)\n", __FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/net/irda/actisys-sir.c:167:
+        ^Ispeed, dev->speed);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: drivers/net/irda/actisys-sir.c:167:
+        ^Ispeed, dev->speed);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/net/irda/actisys-sir.c:167:
+        IRDA_DEBUG(4, "%s(), speed=%d (was %d)\n", __FUNCTION__,
+        	speed, dev->speed);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/net/irda/actisys-sir.c:167:
+        ^Ispeed, dev->speed);$

WARNING:TYPO_SPELLING: 'resetted' may be misspelled - perhaps 'reset'?
#449: FILE: drivers/net/irda/actisys-sir.c:169:
+	/* dongle was already resetted from irda_request state machine,
 	                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: drivers/net/irda/actisys-sir.c:173:
+^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#454: FILE: drivers/net/irda/actisys-sir.c:174:
+	/* 
+	 * Now, we can set the speed requested. Send RTS pulses until we

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/net/irda/actisys-sir.c:175:
+         * reach the target speed $

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/net/irda/actisys-sir.c:175:
+         * reach the target speed $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#457: FILE: drivers/net/irda/actisys-sir.c:177:
+	for (i=0; i<MAX_SPEEDS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#457: FILE: drivers/net/irda/actisys-sir.c:177:
+	for (i=0; i<MAX_SPEEDS; i++) {
 	           ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#480: FILE: drivers/net/irda/actisys-sir.c:200:
+/*
+ * Function actisys_reset (task)

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#490: FILE: drivers/net/irda/actisys-sir.c:210:
+ * is a big capacitor to accomodate the current spikes. This capacitor
                          ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/net/irda/actisys-sir.c:229:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/net/irda/actisys-sir.c:236:
+MODULE_DESCRIPTION("ACTiSYS IR-220L and IR-220L+ dongle driver");^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: drivers/net/irda/esi-sir.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: drivers/net/irda/esi-sir.c:2:
+ *                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: drivers/net/irda/esi-sir.c:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: drivers/net/irda/esi-sir.c:16:
+ *     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/net/irda/esi-sir.c:17:
+ *     This program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: drivers/net/irda/esi-sir.c:18:
+ *     modify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/net/irda/esi-sir.c:19:
+ *     published by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: drivers/net/irda/esi-sir.c:21:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/net/irda/esi-sir.c:26:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: drivers/net/irda/esi-sir.c:27:
+ *     You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/net/irda/esi-sir.c:28:
+ *     along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#552: FILE: drivers/net/irda/esi-sir.c:28:
+ *     along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/net/irda/esi-sir.c:29:
+ *     Foundation, Inc., 59 Temple Place, Suite 330, Boston, $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#553: FILE: drivers/net/irda/esi-sir.c:29:
+ *     Foundation, Inc., 59 Temple Place, Suite 330, Boston, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/net/irda/esi-sir.c:31:
+ *     $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#568: FILE: drivers/net/irda/esi-sir.c:44:
+static int esi_change_speed(struct sir_dev *, unsigned);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#595: FILE: drivers/net/irda/esi-sir.c:71:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_115200;
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#595: FILE: drivers/net/irda/esi-sir.c:71:
+	qos->baud_rate.bits &= IR_9600|IR_19200|IR_115200;
 	                                       ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#613: FILE: drivers/net/irda/esi-sir.c:89:
+/*
+ * Function esi_change_speed (task)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#618: FILE: drivers/net/irda/esi-sir.c:94:
+static int esi_change_speed(struct sir_dev *dev, unsigned speed)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: drivers/net/irda/esi-sir.c:97:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#628: FILE: drivers/net/irda/esi-sir.c:104:
+		dtr = rts = TRUE;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#632: FILE: drivers/net/irda/esi-sir.c:108:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#649: FILE: drivers/net/irda/esi-sir.c:125:
+/*
+ * Function esi_reset (task)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#674: FILE: drivers/net/irda/irtty-sir.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/net/irda/irtty-sir.c:2:
+ *                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/net/irda/irtty-sir.c:13:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/net/irda/irtty-sir.c:17:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: drivers/net/irda/irtty-sir.c:18:
+ *     This program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: drivers/net/irda/irtty-sir.c:19:
+ *     modify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/net/irda/irtty-sir.c:20:
+ *     published by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/net/irda/irtty-sir.c:22:
+ *  $

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#696: FILE: drivers/net/irda/irtty-sir.c:23:
+ *     Neither Dag Brattli nor University of Tromsø admit liability nor
                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: drivers/net/irda/irtty-sir.c:24:
+ *     provide warranty for any of this software. This material is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/net/irda/irtty-sir.c:26:
+ *     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/net/irda/irtty-sir.c:27:
+ ********************************************************************/    $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#706: FILE: drivers/net/irda/irtty-sir.c:33:
+#include <asm/uaccess.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#735: FILE: drivers/net/irda/irtty-sir.c:62:
+	ASSERT(priv != NULL, return -1;);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#741: FILE: drivers/net/irda/irtty-sir.c:68:
+/* Wait (sleep) until underlaying hardware finished transmission
                       ^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#763: FILE: drivers/net/irda/irtty-sir.c:90:
+	ASSERT(priv != NULL, return;);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#772: FILE: drivers/net/irda/irtty-sir.c:99:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#772: FILE: drivers/net/irda/irtty-sir.c:99:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#778: FILE: drivers/net/irda/irtty-sir.c:105:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#779: FILE: drivers/net/irda/irtty-sir.c:106:
+/* 
+ *  Function irtty_change_speed (dev, speed)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#788: FILE: drivers/net/irda/irtty-sir.c:115:
+static int irtty_change_speed(struct sir_dev *dev, unsigned speed)

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: drivers/net/irda/irtty-sir.c:119:
+        struct termios old_termios;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/net/irda/irtty-sir.c:119:
+        struct termios old_termios;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#795: FILE: drivers/net/irda/irtty-sir.c:122:
+	ASSERT(priv != NULL, return -1;);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tty->termios
#801: FILE: drivers/net/irda/irtty-sir.c:128:
+	old_termios = *(tty->termios);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#806: FILE: drivers/net/irda/irtty-sir.c:133:
+	IRDA_DEBUG(2, "%s(), Setting speed to %d\n", __FUNCTION__, speed);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: drivers/net/irda/irtty-sir.c:161:
+^I}^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#847: FILE: drivers/net/irda/irtty-sir.c:174:
+/*
+ * Function irtty_set_dtr_rts (dev, dtr, rts)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#858: FILE: drivers/net/irda/irtty-sir.c:185:
+	ASSERT(priv != NULL, return -1;);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#870: FILE: drivers/net/irda/irtty-sir.c:197:
+	/*
+	 * The ioctl() function, or actually set_modem_info() in serial.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/net/irda/irtty-sir.c:205:
+^Iif (priv->tty->driver.ioctl(priv->tty, NULL, TIOCMSET, (unsigned long) &arg)) { $

CHECK:SPACING: No space is necessary after a cast
#878: FILE: drivers/net/irda/irtty-sir.c:205:
+	if (priv->tty->driver.ioctl(priv->tty, NULL, TIOCMSET, (unsigned long) &arg)) { 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#878: FILE: drivers/net/irda/irtty-sir.c:205:
+	if (priv->tty->driver.ioctl(priv->tty, NULL, TIOCMSET, (unsigned long) &arg)) { 
+		IRDA_DEBUG(2, "%s(), error doing ioctl!\n", __FUNCTION__);
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#879: FILE: drivers/net/irda/irtty-sir.c:206:
+		IRDA_DEBUG(2, "%s(), error doing ioctl!\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#906: FILE: drivers/net/irda/irtty-sir.c:233:
+	ASSERT(priv != NULL, return -1;);

CHECK:BRACES: braces {} should be used on all arms of this statement
#913: FILE: drivers/net/irda/irtty-sir.c:240:
+	if (tty->driver.write_room) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#918: FILE: drivers/net/irda/irtty-sir.c:245:
+	}
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: drivers/net/irda/irtty-sir.c:254:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#928: FILE: drivers/net/irda/irtty-sir.c:255:
+/* 
+ *  Function irtty_receive_buf( tty, cp, count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: drivers/net/irda/irtty-sir.c:260:
+ *    further processing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: drivers/net/irda/irtty-sir.c:269:
+^I^I^I      char *fp, int count) $

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#948: FILE: drivers/net/irda/irtty-sir.c:275:
+	if (unlikely(!priv || priv->magic!=IRTTY_MAGIC))
 	                                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#952: FILE: drivers/net/irda/irtty-sir.c:279:
+	if (unlikely(count==0))		/* yes, this happens */
 	                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#957: FILE: drivers/net/irda/irtty-sir.c:284:
+		printk(KERN_ERR "%s(), not ready yet!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#957: FILE: drivers/net/irda/irtty-sir.c:284:
+		printk(KERN_ERR "%s(), not ready yet!\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#962: FILE: drivers/net/irda/irtty-sir.c:289:
+^I^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#963: FILE: drivers/net/irda/irtty-sir.c:290:
+		/* 
+		 *  Characters received with a parity error, etc?

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/net/irda/irtty-sir.c:292:
+ ^I^Iif (fp && *fp++) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: drivers/net/irda/irtty-sir.c:292:
+ ^I^Iif (fp && *fp++) { $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#965: FILE: drivers/net/irda/irtty-sir.c:292:
+ ^I^Iif (fp && *fp++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: drivers/net/irda/irtty-sir.c:292:
+ ^I^Iif (fp && *fp++) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: drivers/net/irda/irtty-sir.c:296:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#969: FILE: drivers/net/irda/irtty-sir.c:296:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: drivers/net/irda/irtty-sir.c:296:
+ ^I^I}$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#976: FILE: drivers/net/irda/irtty-sir.c:303:
+/*
+ * Function irtty_receive_room (tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: drivers/net/irda/irtty-sir.c:306:
+ * $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#980: FILE: drivers/net/irda/irtty-sir.c:307:
+ * 
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/net/irda/irtty-sir.c:308:
+static int irtty_receive_room(struct tty_struct *tty) $

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#985: FILE: drivers/net/irda/irtty-sir.c:312:
+	if (unlikely(!priv || priv->magic!=IRTTY_MAGIC))
 	                                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#992: FILE: drivers/net/irda/irtty-sir.c:319:
+/*
+ * Function irtty_write_wakeup (tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: drivers/net/irda/irtty-sir.c:325:
+static void irtty_write_wakeup(struct tty_struct *tty) $

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1002: FILE: drivers/net/irda/irtty-sir.c:329:
+	if (unlikely(!priv || priv->magic!=IRTTY_MAGIC))
 	                                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1014: FILE: drivers/net/irda/irtty-sir.c:341:
+/*
+ * Function irtty_stop_receiver (tty, stop)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tty->termios
#1024: FILE: drivers/net/irda/irtty-sir.c:351:
+	old_termios = *(tty->termios);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: drivers/net/irda/irtty-sir.c:353:
+^I$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1053: FILE: drivers/net/irda/irtty-sir.c:380:
+	if (unlikely(!priv || priv->magic!=IRTTY_MAGIC)) {
 	                                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1080: FILE: drivers/net/irda/irtty-sir.c:407:
+	if (unlikely(!priv || priv->magic!=IRTTY_MAGIC)) {
 	                                 ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1114: FILE: drivers/net/irda/irtty-sir.c:441:
+/*
+ * Function irtty_ioctl (tty, file, cmd, arg)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1119: FILE: drivers/net/irda/irtty-sir.c:446:
+static int irtty_ioctl(struct tty_struct *tty, struct file *file, unsigned int cmd, unsigned long arg)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv"
#1127: FILE: drivers/net/irda/irtty-sir.c:454:
+	ASSERT(priv != NULL, return -ENODEV;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1130: FILE: drivers/net/irda/irtty-sir.c:457:
+	IRDA_DEBUG(3, "%s(cmd=0x%X)\n", __FUNCTION__, cmd);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1133: FILE: drivers/net/irda/irtty-sir.c:460:
+	ASSERT(dev != NULL, return -1;);

CHECK:SPACING: No space is necessary after a cast
#1136: FILE: drivers/net/irda/irtty-sir.c:463:
+		err = verify_area(VERIFY_WRITE, (void *) arg, size);

CHECK:SPACING: No space is necessary after a cast
#1138: FILE: drivers/net/irda/irtty-sir.c:465:
+		err = verify_area(VERIFY_READ, (void *) arg, size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/net/irda/irtty-sir.c:468:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->netdev"
#1154: FILE: drivers/net/irda/irtty-sir.c:481:
+		ASSERT(dev->netdev != NULL, return -1;);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: drivers/net/irda/irtty-sir.c:483:
+^I^Imemset(&info, 0, sizeof(info)); $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1157: FILE: drivers/net/irda/irtty-sir.c:484:
+		strncpy(info.name, dev->netdev->name, sizeof(info.name)-1);
 		                                                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1169: FILE: drivers/net/irda/irtty-sir.c:496:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: drivers/net/irda/irtty-sir.c:497:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1171: FILE: drivers/net/irda/irtty-sir.c:498:
+/* 
+ *  Function irtty_open(tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: drivers/net/irda/irtty-sir.c:502:
+ *    we only have to link it to a free IrDA channel.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1177: FILE: drivers/net/irda/irtty-sir.c:504:
+static int irtty_open(struct tty_struct *tty) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tty->disc_data"
#1190: FILE: drivers/net/irda/irtty-sir.c:517:
+	if (tty->disc_data != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: drivers/net/irda/irtty-sir.c:533:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1214: FILE: drivers/net/irda/irtty-sir.c:541:
+
+

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1222: FILE: drivers/net/irda/irtty-sir.c:549:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1222: FILE: drivers/net/irda/irtty-sir.c:549:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1256: FILE: drivers/net/irda/irtty-sir.c:583:
+	printk(KERN_INFO "%s - done\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1256: FILE: drivers/net/irda/irtty-sir.c:583:
+	printk(KERN_INFO "%s - done\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: drivers/net/irda/irtty-sir.c:594:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1268: FILE: drivers/net/irda/irtty-sir.c:595:
+/* 
+ *  Function irtty_close (tty)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: drivers/net/irda/irtty-sir.c:599:
+ *    hooked to IrDA (which usually is TTY again).  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: drivers/net/irda/irtty-sir.c:601:
+static void irtty_close(struct tty_struct *tty) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1316: FILE: drivers/net/irda/irtty-sir.c:643:
+ ^I.name^I^I= "irda",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1316: FILE: drivers/net/irda/irtty-sir.c:643:
+ ^I.name^I^I= "irda",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: drivers/net/irda/irtty-sir.c:643:
+ ^I.name^I^I= "irda",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/net/irda/irtty-sir.c:650:
+ ^I.poll^I^I= NULL,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1323: FILE: drivers/net/irda/irtty-sir.c:650:
+ ^I.poll^I^I= NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: drivers/net/irda/irtty-sir.c:650:
+ ^I.poll^I^I= NULL,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1335: FILE: drivers/net/irda/irtty-sir.c:662:
+	if ((err = tty_register_ldisc(N_IRDA, &irda_ldisc)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1337: FILE: drivers/net/irda/irtty-sir.c:664:
+		ERROR("IrDA: can't register line discipline (err = %d)\n",
+			err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: drivers/net/irda/irtty-sir.c:668:
+static void __exit irtty_sir_cleanup(void) $

CHECK:SPACING: No space is necessary after a cast
#1341: FILE: drivers/net/irda/irtty-sir.c:668:
+static void __exit irtty_sir_cleanup(void) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1345: FILE: drivers/net/irda/irtty-sir.c:672:
+	if ((err = tty_register_ldisc(N_IRDA, NULL))) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1347: FILE: drivers/net/irda/irtty-sir.c:674:
+		      __FUNCTION__, err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1362: FILE: drivers/net/irda/irtty-sir.h:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1368: FILE: drivers/net/irda/irtty-sir.h:7:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: drivers/net/irda/irtty-sir.h:8:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: drivers/net/irda/irtty-sir.h:9:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1400: FILE: drivers/net/irda/sir-dev.h:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: drivers/net/irda/sir-dev.h:7:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: drivers/net/irda/sir-dev.h:8:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1408: FILE: drivers/net/irda/sir-dev.h:9:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1426: FILE: drivers/net/irda/sir-dev.h:27:
+	void (*func)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1434: FILE: drivers/net/irda/sir-dev.h:35:
+	unsigned		state, substate;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1472: FILE: drivers/net/irda/sir-dev.h:73:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1476: FILE: drivers/net/irda/sir-dev.h:77:
+struct dongle_driver {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1486: FILE: drivers/net/irda/sir-dev.h:87:
+	int	(*set_speed)(struct sir_dev *dev, unsigned speed);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1492: FILE: drivers/net/irda/sir-dev.h:93:
+struct sir_driver {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1501: FILE: drivers/net/irda/sir-dev.h:102:
+	int (*set_speed)(struct sir_dev *dev, unsigned speed);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1510: FILE: drivers/net/irda/sir-dev.h:111:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1513: FILE: drivers/net/irda/sir-dev.h:114:
+extern int irda_register_dongle(struct dongle_driver *new);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1514: FILE: drivers/net/irda/sir-dev.h:115:
+extern int irda_unregister_dongle(struct dongle_driver *drv);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1516: FILE: drivers/net/irda/sir-dev.h:117:
+extern struct sir_dev * sirdev_get_instance(const struct sir_driver *drv, const char *name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1516: FILE: drivers/net/irda/sir-dev.h:117:
+extern struct sir_dev * sirdev_get_instance(const struct sir_driver *drv, const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1517: FILE: drivers/net/irda/sir-dev.h:118:
+extern int sirdev_put_instance(struct sir_dev *self);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1519: FILE: drivers/net/irda/sir-dev.h:120:
+extern int sirdev_set_dongle(struct sir_dev *dev, IRDA_DONGLE type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1520: FILE: drivers/net/irda/sir-dev.h:121:
+extern void sirdev_write_complete(struct sir_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1521: FILE: drivers/net/irda/sir-dev.h:122:
+extern int sirdev_receive(struct sir_dev *dev, const unsigned char *cp, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1525: FILE: drivers/net/irda/sir-dev.h:126:
+extern int sirdev_get_dongle(struct sir_dev *self, IRDA_DONGLE type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1526: FILE: drivers/net/irda/sir-dev.h:127:
+extern int sirdev_put_dongle(struct sir_dev *self);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1528: FILE: drivers/net/irda/sir-dev.h:129:
+extern int sirdev_raw_write(struct sir_dev *dev, const char *buf, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1529: FILE: drivers/net/irda/sir-dev.h:130:
+extern int sirdev_raw_read(struct sir_dev *dev, char *buf, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1530: FILE: drivers/net/irda/sir-dev.h:131:
+extern void sirdev_enable_rx(struct sir_dev *dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1532: FILE: drivers/net/irda/sir-dev.h:133:
+extern int sirdev_schedule_request(struct sir_dev *dev, int state, unsigned param);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1532: FILE: drivers/net/irda/sir-dev.h:133:
+extern int sirdev_schedule_request(struct sir_dev *dev, int state, unsigned param);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1533: FILE: drivers/net/irda/sir-dev.h:134:
+extern int __init irda_thread_create(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1534: FILE: drivers/net/irda/sir-dev.h:135:
+extern void __exit irda_thread_join(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1538: FILE: drivers/net/irda/sir-dev.h:139:
+static inline int sirdev_schedule_speed(struct sir_dev *dev, unsigned speed)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1561: FILE: drivers/net/irda/sir-dev.h:162:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1568: FILE: drivers/net/irda/sir-dev.h:169:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1581: FILE: drivers/net/irda/sir-dev.h:182:
+	spinlock_t tx_lock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: drivers/net/irda/sir-dev.h:185:
+ ^Iu32 flags;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1584: FILE: drivers/net/irda/sir-dev.h:185:
+ ^Iu32 flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/net/irda/sir-dev.h:185:
+ ^Iu32 flags;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1586: FILE: drivers/net/irda/sir-dev.h:187:
+	unsigned	speed;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1592: FILE: drivers/net/irda/sir-dev.h:193:
+	const struct dongle_driver * dongle_drv;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1593: FILE: drivers/net/irda/sir-dev.h:194:
+	const struct sir_driver * drv;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sir_dev *' should also have an identifier name
#1597: FILE: drivers/net/irda/sir-dev.h:198:
+	int (*read)(struct sir_dev *, char *buf, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sir_dev *' should also have an identifier name
#1598: FILE: drivers/net/irda/sir-dev.h:199:
+	int (*write)(struct sir_dev *, const char *buf, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sir_dev *' should also have an identifier name
#1599: FILE: drivers/net/irda/sir-dev.h:200:
+	int (*set_dtr_rts)(struct sir_dev *, int dtr, int rts);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1607: FILE: drivers/net/irda/sir_core.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1612: FILE: drivers/net/irda/sir_core.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1613: FILE: drivers/net/irda/sir_core.c:7:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1614: FILE: drivers/net/irda/sir_core.c:8:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: drivers/net/irda/sir_core.c:9:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1618: FILE: drivers/net/irda/sir_core.c:12:
+ ********************************************************************/    $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1636: FILE: drivers/net/irda/sir_core.c:30:
+EXPORT_SYMBOL(irda_register_dongle);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1637: FILE: drivers/net/irda/sir_core.c:31:
+EXPORT_SYMBOL(irda_unregister_dongle);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1639: FILE: drivers/net/irda/sir_core.c:33:
+EXPORT_SYMBOL(sirdev_get_instance);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1640: FILE: drivers/net/irda/sir_core.c:34:
+EXPORT_SYMBOL(sirdev_put_instance);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1642: FILE: drivers/net/irda/sir_core.c:36:
+EXPORT_SYMBOL(sirdev_set_dongle);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1643: FILE: drivers/net/irda/sir_core.c:37:
+EXPORT_SYMBOL(sirdev_write_complete);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1644: FILE: drivers/net/irda/sir_core.c:38:
+EXPORT_SYMBOL(sirdev_receive);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1663: FILE: drivers/net/irda/sir_dev.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1666: FILE: drivers/net/irda/sir_dev.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1668: FILE: drivers/net/irda/sir_dev.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1669: FILE: drivers/net/irda/sir_dev.c:7:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1670: FILE: drivers/net/irda/sir_dev.c:8:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1671: FILE: drivers/net/irda/sir_dev.c:9:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1674: FILE: drivers/net/irda/sir_dev.c:12:
+ ********************************************************************/    $

WARNING:TYPO_SPELLING: 'cancelation' may be misspelled - perhaps 'cancellation'?
#1694: FILE: drivers/net/irda/sir_dev.c:32:
+	/* flush rx-buffer - should also help in case of problems with echo cancelation */
 	                                                                    ^^^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1712: FILE: drivers/net/irda/sir_dev.c:50:
+	IRDA_DEBUG(3, "%s : requesting dongle %d.\n", __FUNCTION__, type);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1741: FILE: drivers/net/irda/sir_dev.c:79:
+^Imemcpy(dev->tx_buff.data, buf, len);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1782: FILE: drivers/net/irda/sir_dev.c:120:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1786: FILE: drivers/net/irda/sir_dev.c:124:
+		   __FUNCTION__, dev->tx_buff.len);

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1792: FILE: drivers/net/irda/sir_dev.c:130:
+		if (likely(actual>0)) {
 		                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1796: FILE: drivers/net/irda/sir_dev.c:134:
+		else if (unlikely(actual<0)) {
 		                        ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1796: FILE: drivers/net/irda/sir_dev.c:134:
+		}
+		else if (unlikely(actual<0)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1798: FILE: drivers/net/irda/sir_dev.c:136:
+			ERROR("%s: drv->do_write failed (%d)\n", __FUNCTION__, actual);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1799: FILE: drivers/net/irda/sir_dev.c:137:
+			if ((skb=dev->tx_skb) != NULL) {
 			        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1799: FILE: drivers/net/irda/sir_dev.c:137:
+			if ((skb=dev->tx_skb) != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1802: FILE: drivers/net/irda/sir_dev.c:140:
+^I^I^I^Idev->stats.tx_errors++;^I^I      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1803: FILE: drivers/net/irda/sir_dev.c:141:
+^I^I^I^Idev->stats.tx_dropped++;^I^I      $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1825: FILE: drivers/net/irda/sir_dev.c:163:
+	IRDA_DEBUG(5, "%s(), finished with frame!\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1826: FILE: drivers/net/irda/sir_dev.c:164:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1827: FILE: drivers/net/irda/sir_dev.c:165:
+	if ((skb=dev->tx_skb) != NULL) {
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1827: FILE: drivers/net/irda/sir_dev.c:165:
+	if ((skb=dev->tx_skb) != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1829: FILE: drivers/net/irda/sir_dev.c:167:
+^I^Idev->stats.tx_packets++;^I^I      $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1835: FILE: drivers/net/irda/sir_dev.c:173:
+		IRDA_DEBUG(5, "%s(), Changing speed!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1841: FILE: drivers/net/irda/sir_dev.c:179:
+			ERROR("%s - schedule speed change failed: %d\n", __FUNCTION__, err);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1850: FILE: drivers/net/irda/sir_dev.c:188:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1850: FILE: drivers/net/irda/sir_dev.c:188:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1863: FILE: drivers/net/irda/sir_dev.c:201:
+int sirdev_receive(struct sir_dev *dev, const unsigned char *cp, size_t count) $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1866: FILE: drivers/net/irda/sir_dev.c:204:
+		IRDA_DEBUG(0, "%s(), not ready yet!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1872: FILE: drivers/net/irda/sir_dev.c:210:
+		IRDA_DEBUG(0, "%s - too early: %p / %d!\n", __FUNCTION__, cp, count);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1877: FILE: drivers/net/irda/sir_dev.c:215:
+	if (cp==NULL) {
 	      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp"
#1877: FILE: drivers/net/irda/sir_dev.c:215:
+	if (cp==NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1883: FILE: drivers/net/irda/sir_dev.c:221:
+		printk(KERN_INFO "%s; rx-drop: %d\n", __FUNCTION__, count);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1883: FILE: drivers/net/irda/sir_dev.c:221:
+		printk(KERN_INFO "%s; rx-drop: %d\n", __FUNCTION__, count);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1888: FILE: drivers/net/irda/sir_dev.c:226:
+ ^Iwhile (count--) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1888: FILE: drivers/net/irda/sir_dev.c:226:
+ ^Iwhile (count--) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1888: FILE: drivers/net/irda/sir_dev.c:226:
+ ^Iwhile (count--) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1891: FILE: drivers/net/irda/sir_dev.c:229:
+^I^I^Iasync_unwrap_char(dev->netdev, &dev->stats, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: drivers/net/irda/sir_dev.c:230:
+			async_unwrap_char(dev->netdev, &dev->stats, 
+				  &dev->rx_buff, *cp++);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1894: FILE: drivers/net/irda/sir_dev.c:232:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1894: FILE: drivers/net/irda/sir_dev.c:232:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1906: FILE: drivers/net/irda/sir_dev.c:244:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1907: FILE: drivers/net/irda/sir_dev.c:245:
+			
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1930: FILE: drivers/net/irda/sir_dev.c:268:
+	ASSERT(dev != NULL, return 0;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1934: FILE: drivers/net/irda/sir_dev.c:272:
+	IRDA_DEBUG(3, "%s(), skb->len = %d\n", __FUNCTION__, skb->len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed != dev->speed'
#1937: FILE: drivers/net/irda/sir_dev.c:275:
+	if ((speed != dev->speed) && (speed != -1)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1938: FILE: drivers/net/irda/sir_dev.c:276:
+		if (!skb->len) {
[...]
+		} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#1940: FILE: drivers/net/irda/sir_dev.c:278:
+			if (unlikely(err == -EWOULDBLOCK)) {
[...]
+				 return 1;

WARNING:TABSTOP: Statements should start on a tabstop
#1947: FILE: drivers/net/irda/sir_dev.c:285:
+				 return 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#1949: FILE: drivers/net/irda/sir_dev.c:287:
+			else if (unlikely(err)) {
[...]
+				 netif_start_queue(ndev);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1949: FILE: drivers/net/irda/sir_dev.c:287:
+			}
+			else if (unlikely(err)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1962: FILE: drivers/net/irda/sir_dev.c:300:
+			return 0;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#1962: FILE: drivers/net/irda/sir_dev.c:300:
+		} else

ERROR:SPACING: space required before the open parenthesis '('
#1970: FILE: drivers/net/irda/sir_dev.c:308:
+	if(spin_is_locked(&dev->tx_lock)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1970: FILE: drivers/net/irda/sir_dev.c:308:
+	if(spin_is_locked(&dev->tx_lock)) {
+		IRDA_DEBUG(3, "%s(), write not completed\n", __FUNCTION__);
+	}

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1970: FILE: drivers/net/irda/sir_dev.c:308:
+	if(spin_is_locked(&dev->tx_lock)) {

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1971: FILE: drivers/net/irda/sir_dev.c:309:
+		IRDA_DEBUG(3, "%s(), write not completed\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1977: FILE: drivers/net/irda/sir_dev.c:315:
+        /* Copy skb to tx_buff while wrapping, stuffing and making CRC */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1978: FILE: drivers/net/irda/sir_dev.c:316:
+^Idev->tx_buff.len = async_wrap_skb(skb, dev->tx_buff.data, dev->tx_buff.truesize); $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1997: FILE: drivers/net/irda/sir_dev.c:335:
+	}
+	else if (unlikely(actual < 0)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1999: FILE: drivers/net/irda/sir_dev.c:337:
+		ERROR("%s: drv->do_write failed (%d)\n", __FUNCTION__, actual);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2001: FILE: drivers/net/irda/sir_dev.c:339:
+^I^Idev->stats.tx_errors++;^I^I      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2002: FILE: drivers/net/irda/sir_dev.c:340:
+^I^Idev->stats.tx_dropped++;^I^I      $

CHECK:SPACING: No space is necessary after a cast
#2014: FILE: drivers/net/irda/sir_dev.c:352:
+	struct if_irda_req *irq = (struct if_irda_req *) rq;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#2018: FILE: drivers/net/irda/sir_dev.c:356:
+	ASSERT(dev != NULL, return -1;);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2020: FILE: drivers/net/irda/sir_dev.c:358:
+	IRDA_DEBUG(3, "%s(), %s, (cmd=0x%X)\n", __FUNCTION__, ndev->name, cmd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: drivers/net/irda/sir_dev.c:359:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2065: FILE: drivers/net/irda/sir_dev.c:403:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2078: FILE: drivers/net/irda/sir_dev.c:416:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2088: FILE: drivers/net/irda/sir_dev.c:426:
+^Idev->rx_buff.truesize = SIRBUF_ALLOCSIZE; $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->rx_buff.head"
#2092: FILE: drivers/net/irda/sir_dev.c:430:
+	if (dev->rx_buff.head == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->tx_buff.head"
#2097: FILE: drivers/net/irda/sir_dev.c:435:
+	if (dev->tx_buff.head == NULL) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2117: FILE: drivers/net/irda/sir_dev.c:455:
+	if (dev->rx_buff.head)
+		kfree(dev->rx_buff.head);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2119: FILE: drivers/net/irda/sir_dev.c:457:
+	if (dev->tx_buff.head)
+		kfree(dev->tx_buff.head);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2120: FILE: drivers/net/irda/sir_dev.c:458:
+	dev->rx_buff.head = dev->tx_buff.head = NULL;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2139: FILE: drivers/net/irda/sir_dev.c:477:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2156: FILE: drivers/net/irda/sir_dev.c:494:
+	printk(KERN_INFO "%s - done, speed = %d\n", __FUNCTION__, dev->speed);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2156: FILE: drivers/net/irda/sir_dev.c:494:
+	printk(KERN_INFO "%s - done, speed = %d\n", __FUNCTION__, dev->speed);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2177: FILE: drivers/net/irda/sir_dev.c:515:
+	printk(KERN_INFO "%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2177: FILE: drivers/net/irda/sir_dev.c:515:
+	printk(KERN_INFO "%s\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2233: FILE: drivers/net/irda/sir_dev.c:571:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2234: FILE: drivers/net/irda/sir_dev.c:572:
+struct sir_dev * sirdev_get_instance(const struct sir_driver *drv, const char *name)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2239: FILE: drivers/net/irda/sir_dev.c:577:
+	printk(KERN_INFO "%s - %s\n", __FUNCTION__, name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2239: FILE: drivers/net/irda/sir_dev.c:577:
+	printk(KERN_INFO "%s - %s\n", __FUNCTION__, name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2249: FILE: drivers/net/irda/sir_dev.c:587:
+	/*
+	 *  Allocate new instance of the device

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2252: FILE: drivers/net/irda/sir_dev.c:590:
+	if (dev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2253: FILE: drivers/net/irda/sir_dev.c:591:
+		printk(KERN_ERR "IrDA: Can't allocate memory for "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2253: FILE: drivers/net/irda/sir_dev.c:591:
+	if (dev == NULL) {
+		printk(KERN_ERR "IrDA: Can't allocate memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#2254: FILE: drivers/net/irda/sir_dev.c:592:
+		printk(KERN_ERR "IrDA: Can't allocate memory for "
+		       "IrDA control block!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2260: FILE: drivers/net/irda/sir_dev.c:598:
+	dev->qos.baud_rate.bits = IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2260: FILE: drivers/net/irda/sir_dev.c:598:
+	dev->qos.baud_rate.bits = IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2260: FILE: drivers/net/irda/sir_dev.c:598:
+	dev->qos.baud_rate.bits = IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2260: FILE: drivers/net/irda/sir_dev.c:598:
+	dev->qos.baud_rate.bits = IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 	                                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2264: FILE: drivers/net/irda/sir_dev.c:602:
+	strncpy(dev->hwname, name, sizeof(dev->hwname)-1);
 	                                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ndev"
#2267: FILE: drivers/net/irda/sir_dev.c:605:
+	if (ndev == NULL)

CHECK:SPACING: No space is necessary after a cast
#2284: FILE: drivers/net/irda/sir_dev.c:622:
+	ndev->priv = (void *) dev;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2289: FILE: drivers/net/irda/sir_dev.c:627:
+		ERROR("%s(), register_netdev() failed!\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2307: FILE: drivers/net/irda/sir_dev.c:645:
+	printk(KERN_INFO "%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2307: FILE: drivers/net/irda/sir_dev.c:645:
+	printk(KERN_INFO "%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2317: FILE: drivers/net/irda/sir_dev.c:655:
+		ERROR("%s - error %d\n", __FUNCTION__, err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2340: FILE: drivers/net/irda/sir_dongle.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2346: FILE: drivers/net/irda/sir_dongle.c:7:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2347: FILE: drivers/net/irda/sir_dongle.c:8:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2348: FILE: drivers/net/irda/sir_dongle.c:9:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2351: FILE: drivers/net/irda/sir_dongle.c:12:
+ ********************************************************************/    $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2378: FILE: drivers/net/irda/sir_dongle.c:39:
+		   __FUNCTION__, new->driver_name, new->type);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->dongle_drv"
#2414: FILE: drivers/net/irda/sir_dongle.c:75:
+	if (dev->dongle_drv != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2416: FILE: drivers/net/irda/sir_dongle.c:77:
+^I$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2424: FILE: drivers/net/irda/sir_dongle.c:85:
+			break;
+		else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2455: FILE: drivers/net/irda/sir_dongle.c:116:
+	if (!drv->open  ||  (err=drv->open(dev))!=0)
 	                        ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#2455: FILE: drivers/net/irda/sir_dongle.c:116:
+	if (!drv->open  ||  (err=drv->open(dev))!=0)
 	                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2455: FILE: drivers/net/irda/sir_dongle.c:116:
+	if (!drv->open  ||  (err=drv->open(dev))!=0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2490: FILE: drivers/net/irda/sir_kthread.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2497: FILE: drivers/net/irda/sir_kthread.c:8:
+ *^IThis program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2498: FILE: drivers/net/irda/sir_kthread.c:9:
+ *^Imodify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2499: FILE: drivers/net/irda/sir_kthread.c:10:
+ *^Ipublished by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2502: FILE: drivers/net/irda/sir_kthread.c:13:
+ ********************************************************************/    $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2525: FILE: drivers/net/irda/sir_kthread.c:36:
+	spinlock_t lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2554: FILE: drivers/net/irda/sir_kthread.c:65:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2598: FILE: drivers/net/irda/sir_kthread.c:109:
+}^I^I$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2600: FILE: drivers/net/irda/sir_kthread.c:111:
+static int irda_rt_prio = 0;		/* MODULE_PARM? */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2617: FILE: drivers/net/irda/sir_kthread.c:128:
+#if 0		/* works but requires EXPORT_SYMBOL(setscheduler) */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2624: FILE: drivers/net/irda/sir_kthread.c:135:
+#if 0		/* doesn't work - has some tendency to trigger instant reboot!

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2636: FILE: drivers/net/irda/sir_kthread.c:147:
+		current->rt_priority = (irda_rt_prio<MAX_RT_PRIO)
 		                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2637: FILE: drivers/net/irda/sir_kthread.c:148:
+					? irda_rt_prio : MAX_RT_PRIO-1;
 					                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2639: FILE: drivers/net/irda/sir_kthread.c:150:
+		current->prio = MAX_USER_RT_PRIO-1 - irda_rt_prio;
 		                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irda_rq_queue.thread"
#2648: FILE: drivers/net/irda/sir_kthread.c:159:
+	while (irda_rq_queue.thread != NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2649: FILE: drivers/net/irda/sir_kthread.c:160:
+	while (irda_rq_queue.thread != NULL) {
+

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#2661: FILE: drivers/net/irda/sir_kthread.c:172:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,35)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2661: FILE: drivers/net/irda/sir_kthread.c:172:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,35)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2661: FILE: drivers/net/irda/sir_kthread.c:172:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,35)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2661: FILE: drivers/net/irda/sir_kthread.c:172:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,35)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2669: FILE: drivers/net/irda/sir_kthread.c:180:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2673: FILE: drivers/net/irda/sir_kthread.c:184:
+	if (atomic_read(&irda_rq_queue.num_pending)) {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2696: FILE: drivers/net/irda/sir_kthread.c:207:
+	unsigned next_state, delay;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2697: FILE: drivers/net/irda/sir_kthread.c:208:
+	unsigned bytes_left;

ERROR:SPACING: space required before the open parenthesis '('
#2703: FILE: drivers/net/irda/sir_kthread.c:214:
+		switch(fsm->substate) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2704: FILE: drivers/net/irda/sir_kthread.c:215:
+		switch(fsm->substate) {
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2716: FILE: drivers/net/irda/sir_kthread.c:227:
+				delay = (bytes_left*8*10000) / (dev->speed/100);
 				                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2716: FILE: drivers/net/irda/sir_kthread.c:227:
+				delay = (bytes_left*8*10000) / (dev->speed/100);
 				                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2716: FILE: drivers/net/irda/sir_kthread.c:227:
+				delay = (bytes_left*8*10000) / (dev->speed/100);
 				                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2718: FILE: drivers/net/irda/sir_kthread.c:229:
+				delay = (bytes_left*10*10000) / (dev->speed/100);
 				                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2718: FILE: drivers/net/irda/sir_kthread.c:229:
+				delay = (bytes_left*10*10000) / (dev->speed/100);
 				                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2718: FILE: drivers/net/irda/sir_kthread.c:229:
+				delay = (bytes_left*10*10000) / (dev->speed/100);
 				                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2728: FILE: drivers/net/irda/sir_kthread.c:239:
+			delay = (delay+999) / 1000;
 			              ^

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#2732: FILE: drivers/net/irda/sir_kthread.c:243:
+			/* block until underlaying hardware buffer are empty */
 			               ^^^^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2742: FILE: drivers/net/irda/sir_kthread.c:253:
+			ERROR("%s - undefined state\n", __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2751: FILE: drivers/net/irda/sir_kthread.c:262:
+/*
+ * Function irda_config_fsm

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2767: FILE: drivers/net/irda/sir_kthread.c:278:
+	unsigned delay;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2769: FILE: drivers/net/irda/sir_kthread.c:280:
+^IIRDA_DEBUG(2, "%s(), <%ld>\n", __FUNCTION__, jiffies); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2769: FILE: drivers/net/irda/sir_kthread.c:280:
+	IRDA_DEBUG(2, "%s(), <%ld>\n", __FUNCTION__, jiffies); 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2773: FILE: drivers/net/irda/sir_kthread.c:284:
+		IRDA_DEBUG(3, "%s - state=0x%04x / substate=0x%04x\n",
+			__FUNCTION__, fsm->state, fsm->substate);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2773: FILE: drivers/net/irda/sir_kthread.c:284:
+			__FUNCTION__, fsm->state, fsm->substate);

ERROR:SPACING: space required before the open parenthesis '('
#2778: FILE: drivers/net/irda/sir_kthread.c:289:
+		switch(fsm->state) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2779: FILE: drivers/net/irda/sir_kthread.c:290:
+		switch(fsm->state) {
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->dongle_drv"
#2781: FILE: drivers/net/irda/sir_kthread.c:292:
+			if (dev->dongle_drv != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->dongle_drv"
#2814: FILE: drivers/net/irda/sir_kthread.c:325:
+			if (dev->dongle_drv == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2830: FILE: drivers/net/irda/sir_kthread.c:341:
+			if (dev->drv->set_dtr_rts) {
[...]
+			else
[...]

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2833: FILE: drivers/net/irda/sir_kthread.c:344:
+				dtr = (fsm->param&0x02) ? TRUE : FALSE;
 				                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2834: FILE: drivers/net/irda/sir_kthread.c:345:
+				rts = (fsm->param&0x01) ? TRUE : FALSE;
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2835: FILE: drivers/net/irda/sir_kthread.c:346:
+				ret = dev->drv->set_dtr_rts(dev,dtr,rts);
 				                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2835: FILE: drivers/net/irda/sir_kthread.c:346:
+				ret = dev->drv->set_dtr_rts(dev,dtr,rts);
 				                                   ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2837: FILE: drivers/net/irda/sir_kthread.c:348:
+			}
+			else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2854: FILE: drivers/net/irda/sir_kthread.c:365:
+			if ((delay=ret) != 0)
 			          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2854: FILE: drivers/net/irda/sir_kthread.c:365:
+			if ((delay=ret) != 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2861: FILE: drivers/net/irda/sir_kthread.c:372:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#2861: FILE: drivers/net/irda/sir_kthread.c:372:
+			else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2868: FILE: drivers/net/irda/sir_kthread.c:379:
+			if (dev->dongle_drv->reset) {
[...]
+			else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2869: FILE: drivers/net/irda/sir_kthread.c:380:
+^I^I^I^Iret = dev->dongle_drv->reset(dev);^I$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2876: FILE: drivers/net/irda/sir_kthread.c:387:
+			}
+			else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2878: FILE: drivers/net/irda/sir_kthread.c:389:
+			if ((delay=ret) == 0) {
 			          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2878: FILE: drivers/net/irda/sir_kthread.c:389:
+			if ((delay=ret) == 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2887: FILE: drivers/net/irda/sir_kthread.c:398:
+^I^Icase SIRDEV_STATE_DONGLE_SPEED:^I^I^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2888: FILE: drivers/net/irda/sir_kthread.c:399:
+			if (dev->dongle_drv->reset) {
[...]
+			else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2896: FILE: drivers/net/irda/sir_kthread.c:407:
+			}
+			else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2898: FILE: drivers/net/irda/sir_kthread.c:409:
+			if ((delay=ret) == 0)
 			          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2898: FILE: drivers/net/irda/sir_kthread.c:409:
+			if ((delay=ret) == 0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2917: FILE: drivers/net/irda/sir_kthread.c:428:
+			ERROR("%s - undefined state\n", __FUNCTION__);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2919: FILE: drivers/net/irda/sir_kthread.c:430:
+			/* fall thru */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2922: FILE: drivers/net/irda/sir_kthread.c:433:
+			ERROR("%s - error: %d\n", __FUNCTION__, fsm->result);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2924: FILE: drivers/net/irda/sir_kthread.c:435:
+#if 0	/* don't enable this before we have netdev->tx_timeout to recover */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2929: FILE: drivers/net/irda/sir_kthread.c:440:
+			/* fall thru */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2934: FILE: drivers/net/irda/sir_kthread.c:445:
+			printk(KERN_INFO "%s - up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2934: FILE: drivers/net/irda/sir_kthread.c:445:
+			printk(KERN_INFO "%s - up\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#2939: FILE: drivers/net/irda/sir_kthread.c:450:
+	} while(!delay);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2949: FILE: drivers/net/irda/sir_kthread.c:460:
+int sirdev_schedule_request(struct sir_dev *dev, int initial_state, unsigned param)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2956: FILE: drivers/net/irda/sir_kthread.c:467:
+	printk(KERN_INFO "%s - state=0x%04x / param=%u\n", __FUNCTION__, initial_state, param);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2956: FILE: drivers/net/irda/sir_kthread.c:467:
+	printk(KERN_INFO "%s - state=0x%04x / param=%u\n", __FUNCTION__, initial_state, param);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2958: FILE: drivers/net/irda/sir_kthread.c:469:
+	if (in_interrupt()) {
[...]
+	else
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2960: FILE: drivers/net/irda/sir_kthread.c:471:
+			IRDA_DEBUG(1, "%s(), state machine busy!\n", __FUNCTION__);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2964: FILE: drivers/net/irda/sir_kthread.c:475:
+	}
+	else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2966: FILE: drivers/net/irda/sir_kthread.c:477:
+	printk(KERN_INFO "%s - down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2966: FILE: drivers/net/irda/sir_kthread.c:477:
+	printk(KERN_INFO "%s - down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2970: FILE: drivers/net/irda/sir_kthread.c:481:
+		ERROR("%s(), instance staled!\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2971: FILE: drivers/net/irda/sir_kthread.c:482:
+		printk(KERN_INFO "%s - up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2971: FILE: drivers/net/irda/sir_kthread.c:482:
+		printk(KERN_INFO "%s - up\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2992: FILE: drivers/net/irda/sir_kthread.c:503:
+^I^I^Inetif_wake_queue(dev->netdev);^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2993: FILE: drivers/net/irda/sir_kthread.c:504:
+		printk(KERN_INFO "%s - up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2993: FILE: drivers/net/irda/sir_kthread.c:504:
+		printk(KERN_INFO "%s - up\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3013: FILE: drivers/net/irda/sir_kthread.c:524:
+	pid = kernel_thread(irda_thread, &startup, CLONE_FS|CLONE_FILES);
 	                                                   ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#3016: FILE: drivers/net/irda/sir_kthread.c:527:
+		return -EAGAIN;
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3022: FILE: drivers/net/irda/sir_kthread.c:533:
+void __exit irda_thread_join(void) $

CHECK:SPACING: No space is necessary after a cast
#3022: FILE: drivers/net/irda/sir_kthread.c:533:
+void __exit irda_thread_join(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3028: FILE: drivers/net/irda/sir_kthread.c:539:
+^I^Iwake_up(&irda_rq_queue.kick);^I^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3037: FILE: drivers/net/irda/tekram-sir.c:1:
+/*********************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3038: FILE: drivers/net/irda/tekram-sir.c:2:
+ *                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3047: FILE: drivers/net/irda/tekram-sir.c:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3051: FILE: drivers/net/irda/tekram-sir.c:15:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3052: FILE: drivers/net/irda/tekram-sir.c:16:
+ *     This program is free software; you can redistribute it and/or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3053: FILE: drivers/net/irda/tekram-sir.c:17:
+ *     modify it under the terms of the GNU General Public License as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3054: FILE: drivers/net/irda/tekram-sir.c:18:
+ *     published by the Free Software Foundation; either version 2 of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3056: FILE: drivers/net/irda/tekram-sir.c:20:
+ *  $

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#3057: FILE: drivers/net/irda/tekram-sir.c:21:
+ *     Neither Dag Brattli nor University of Tromsø admit liability nor
                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3058: FILE: drivers/net/irda/tekram-sir.c:22:
+ *     provide warranty for any of this software. This material is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3060: FILE: drivers/net/irda/tekram-sir.c:24:
+ *     $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3077: FILE: drivers/net/irda/tekram-sir.c:41:
+static int tekram_change_speed(struct sir_dev *, unsigned);

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#3100: FILE: drivers/net/irda/tekram-sir.c:64:
+	if (tekram_delay < 1  ||  tekram_delay>500)
 	                                      ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3114: FILE: drivers/net/irda/tekram-sir.c:78:
+	unsigned delay = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3115: FILE: drivers/net/irda/tekram-sir.c:79:
+	unsigned next_state = dev->fsm.substate;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3118: FILE: drivers/net/irda/tekram-sir.c:82:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#3120: FILE: drivers/net/irda/tekram-sir.c:84:
+	switch(dev->fsm.substate) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3121: FILE: drivers/net/irda/tekram-sir.c:85:
+	switch(dev->fsm.substate) {
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3129: FILE: drivers/net/irda/tekram-sir.c:93:
+		qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3129: FILE: drivers/net/irda/tekram-sir.c:93:
+		qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3129: FILE: drivers/net/irda/tekram-sir.c:93:
+		qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3129: FILE: drivers/net/irda/tekram-sir.c:93:
+		qos->baud_rate.bits &= IR_9600|IR_19200|IR_38400|IR_57600|IR_115200;
 		                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3130: FILE: drivers/net/irda/tekram-sir.c:94:
+^I^Iqos->min_turn_time.bits = 0x01; /* Needs at least 10 ms */^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3135: FILE: drivers/net/irda/tekram-sir.c:99:
+		ERROR("%s - undefined state\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3146: FILE: drivers/net/irda/tekram-sir.c:110:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3155: FILE: drivers/net/irda/tekram-sir.c:119:
+/*
+ * Function tekram_change_speed (dev, state, speed)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3157: FILE: drivers/net/irda/tekram-sir.c:121:
+ *    Set the speed for the Tekram IRMate 210 type dongle. Warning, this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3161: FILE: drivers/net/irda/tekram-sir.c:125:
+ *    1. clear DTR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3164: FILE: drivers/net/irda/tekram-sir.c:128:
+ *       wait until the stop bit of Control Byte is sent (for 9600 baud rate, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3171: FILE: drivers/net/irda/tekram-sir.c:135:
+ *    6. wait at least 50 us, new setting (baud rate, etc) takes effect here $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3177: FILE: drivers/net/irda/tekram-sir.c:141:
+static int tekram_change_speed(struct sir_dev *dev, unsigned speed)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3179: FILE: drivers/net/irda/tekram-sir.c:143:
+	unsigned delay = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3180: FILE: drivers/net/irda/tekram-sir.c:144:
+	unsigned next_state = dev->fsm.substate;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3182: FILE: drivers/net/irda/tekram-sir.c:146:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3183: FILE: drivers/net/irda/tekram-sir.c:147:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#3185: FILE: drivers/net/irda/tekram-sir.c:149:
+	switch(dev->fsm.substate) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3186: FILE: drivers/net/irda/tekram-sir.c:150:
+	switch(dev->fsm.substate) {
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#3192: FILE: drivers/net/irda/tekram-sir.c:156:
+			/* fall thru */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3194: FILE: drivers/net/irda/tekram-sir.c:158:
+			byte = TEKRAM_PW|TEKRAM_9600;
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3197: FILE: drivers/net/irda/tekram-sir.c:161:
+			byte = TEKRAM_PW|TEKRAM_19200;
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3200: FILE: drivers/net/irda/tekram-sir.c:164:
+			byte = TEKRAM_PW|TEKRAM_38400;
 			                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3203: FILE: drivers/net/irda/tekram-sir.c:167:
+			byte = TEKRAM_PW|TEKRAM_57600;
 			                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3212: FILE: drivers/net/irda/tekram-sir.c:176:
+^I$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3214: FILE: drivers/net/irda/tekram-sir.c:178:
+		udelay(14);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3218: FILE: drivers/net/irda/tekram-sir.c:182:
+^I^I$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3229: FILE: drivers/net/irda/tekram-sir.c:193:
+		udelay(50);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3234: FILE: drivers/net/irda/tekram-sir.c:198:
+		ERROR("%s - undefined state\n", __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3244: FILE: drivers/net/irda/tekram-sir.c:208:
+/*
+ * Function tekram_reset (driver)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3246: FILE: drivers/net/irda/tekram-sir.c:210:
+ *      This function resets the tekram dongle. Warning, this function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3247: FILE: drivers/net/irda/tekram-sir.c:211:
+ *      must be called with a process context!! $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3250: FILE: drivers/net/irda/tekram-sir.c:214:
+ *    ^I  0. Clear RTS and DTR, and wait 50 ms (power off the IR-210 )$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3251: FILE: drivers/net/irda/tekram-sir.c:215:
+ *        1. clear RTS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3252: FILE: drivers/net/irda/tekram-sir.c:216:
+ *        2. set DTR, and wait at least 1 ms $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3253: FILE: drivers/net/irda/tekram-sir.c:217:
+ *        3. clear DTR to SPACE state, wait at least 50 us for further $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3257: FILE: drivers/net/irda/tekram-sir.c:221:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3262: FILE: drivers/net/irda/tekram-sir.c:226:
+	unsigned delay = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3263: FILE: drivers/net/irda/tekram-sir.c:227:
+	unsigned next_state = dev->fsm.substate;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3265: FILE: drivers/net/irda/tekram-sir.c:229:
+	IRDA_DEBUG(2, "%s()\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#3267: FILE: drivers/net/irda/tekram-sir.c:231:
+	switch(dev->fsm.substate) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3268: FILE: drivers/net/irda/tekram-sir.c:232:
+	switch(dev->fsm.substate) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3271: FILE: drivers/net/irda/tekram-sir.c:235:
+^I^Idev->set_dtr_rts(dev, FALSE, TRUE); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3280: FILE: drivers/net/irda/tekram-sir.c:244:
+^I$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3282: FILE: drivers/net/irda/tekram-sir.c:246:
+		udelay(75);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#3287: FILE: drivers/net/irda/tekram-sir.c:251:
+		ERROR("%s - undefined state\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3299: FILE: drivers/net/irda/tekram-sir.c:263:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 204 errors, 177 warnings, 122 checks, 3202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
