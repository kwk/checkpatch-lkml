WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
diff -Naur -X /home/muli/w/dontdiff 2.6.0/include/linux/skbuff.h 2.6.0-skb-dest/include/linux/skbuff.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: include/linux/skbuff.h:30:
+#include <asm/hardirq.h> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: include/linux/skbuff.h:151:
+typedef void (*skb_destructor_t) (struct sk_buff* skb); $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#75: FILE: include/linux/skbuff.h:151:
+typedef void (*skb_destructor_t) (struct sk_buff* skb); 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: include/linux/skbuff.h:153:
+#define MAX_NUM_SKB_DESTRUCTORS 3 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: include/linux/skbuff.h:250:
+^Iskb_destructor_t        destructors[MAX_NUM_SKB_DESTRUCTORS]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: include/linux/skbuff.h:251:
+^Isize_t                  numdests; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: include/linux/skbuff.h:1006:
+static inline void skb_init_destructors(struct sk_buff* skb)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: include/linux/skbuff.h:1008:
+^Imemset(skb->destructors, 0, sizeof(skb->destructors)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: include/linux/skbuff.h:1009:
+^Iskb->numdests = 0; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#113: FILE: include/linux/skbuff.h:1012:
+static inline void skb_call_destructors(struct sk_buff* skb)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: include/linux/skbuff.h:1014:
+^Iint in_irq_warn = 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/linux/skbuff.h:1016:
+^Iwhile (skb->numdests--) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: include/linux/skbuff.h:1017:
+^I^Iskb_destructor_t dest; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: include/linux/skbuff.h:1018:
+^I^Isize_t idx = skb->numdests; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: include/linux/skbuff.h:1020:
+^I^Iif (in_irq() && in_irq_warn) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#122: FILE: include/linux/skbuff.h:1021:
+			printk(KERN_WARNING "Warning: kfree_skb on "

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: include/linux/skbuff.h:1022:
+			printk(KERN_WARNING "Warning: kfree_skb on "
+			       "hard IRQ %p\n", NET_CALLER(skb));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: include/linux/skbuff.h:1023:
+^I^I^Iin_irq_warn = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: include/linux/skbuff.h:1026:
+^I^Idest = skb->destructors[idx]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: include/linux/skbuff.h:1027:
+^I^IBUG_ON(!dest); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: include/linux/skbuff.h:1027:
+		BUG_ON(!dest); 

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: include/linux/skbuff.h:1028:
+^I^Idest(skb); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: include/linux/skbuff.h:1030:
+^I^Iskb->destructors[idx] = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: include/linux/skbuff.h:1033:
+^Iskb->numdests = 0; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#137: FILE: include/linux/skbuff.h:1036:
+static inline void skb_add_destructor(struct sk_buff* skb, skb_destructor_t dest)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: include/linux/skbuff.h:1038:
+^Isize_t idx = skb->numdests++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: include/linux/skbuff.h:1040:
+^IBUG_ON(idx >= MAX_NUM_SKB_DESTRUCTORS); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: include/linux/skbuff.h:1040:
+	BUG_ON(idx >= MAX_NUM_SKB_DESTRUCTORS); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: include/linux/skbuff.h:1041:
+^IBUG_ON(skb->destructors[idx]); /* if it's already set */ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#142: FILE: include/linux/skbuff.h:1041:
+	BUG_ON(skb->destructors[idx]); /* if it's already set */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: include/linux/skbuff.h:1043:
+^Iskb->destructors[idx] = dest; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: include/linux/skbuff.h:1050:
+ *^IIf a buffer has any destructors registered, we call them. Then $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: include/linux/skbuff.h:1056:
+^Iskb_call_destructors(skb); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: include/net/sock.h:906:
+^Iskb_add_destructor(skb, sock_wfree); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: include/net/sock.h:913:
+^Iskb_add_destructor(skb, sock_rfree); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: include/net/tcp.h:1892:
+^Iskb_add_destructor(skb, tcp_rfree); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: net/core/skbuff.c:232:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: net/core/skbuff.c:233:
+^Iskb_call_destructors(skb); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: net/core/skbuff.c:293:
+^Iskb_init_destructors(n); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: net/core/skbuff.c:350:
+^Iskb_init_destructors(new); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: net/unix/af_unix.c:1168:
+^Iskb_add_destructor(skb, unix_destruct_fds); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 6 warnings, 0 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
