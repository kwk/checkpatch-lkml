WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
--- 2.6.5.bitmap.orig/include/asm-ia64/bitops.h	2004-04-08 03:02:48.000000000 -0700

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#51: FILE: include/asm-ia64/bitops.h:14:
+#include <asm/bitops.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: include/asm-ia64/bitops.h:362:
+extern int __find_next_zero_bit (void *addr, unsigned long size, \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#108: FILE: include/asm-ia64/bitops.h:362:
+extern int __find_next_zero_bit (void *addr, unsigned long size, \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/asm-ia64/bitops.h:362:
+extern int __find_next_zero_bit (void *addr, unsigned long size, \

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#110: FILE: include/asm-ia64/bitops.h:364:
+extern int __find_next_bit(const void *addr, unsigned long size, \

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/asm-ia64/bitops.h:364:
+extern int __find_next_bit(const void *addr, unsigned long size, \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#233: FILE: arch/ia64/lib/bitop.c:1:
+#include <linux/compiler.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bitops.h> instead of <asm/bitops.h>
#237: FILE: arch/ia64/lib/bitop.c:5:
+#include <asm/bitops.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: arch/ia64/lib/bitop.c:11:
+int __find_next_zero_bit (void *addr, unsigned long size, unsigned long offset)

CHECK:SPACING: No space is necessary after a cast
#245: FILE: arch/ia64/lib/bitop.c:13:
+	unsigned long *p = ((unsigned long *) addr) + (offset >> 6);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: arch/ia64/lib/bitop.c:23:
+		tmp |= ~0UL >> (64-offset);
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#264: FILE: arch/ia64/lib/bitop.c:32:
+		if (~(tmp = *(p++)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#286: FILE: arch/ia64/lib/bitop.c:54:
+	unsigned long *p = ((unsigned long *) addr) + (offset >> 6);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#305: FILE: arch/ia64/lib/bitop.c:73:
+		if ((tmp = *(p++)))

WARNING:INDENTED_LABEL: labels should not be indented
#313: FILE: arch/ia64/lib/bitop.c:81:
+  found_first:

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: arch/ia64/lib/bitop.c:82:
+	tmp &= ~0UL >> (64-size);
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#317: FILE: arch/ia64/lib/bitop.c:85:
+  found_middle:

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 7 checks, 254 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
