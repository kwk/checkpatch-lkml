WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: arch/s390/lib/div64.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#68: FILE: arch/s390/lib/div64.c:2:
+ *  arch/s390/lib/div64.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#85: FILE: arch/s390/lib/div64.c:19:
+static uint32_t __div64_31(uint64_t *n, uint32_t base)

CHECK:SPACING: No space is necessary after a cast
#89: FILE: arch/s390/lib/div64.c:23:
+	uint32_t *words = (uint32_t *) n;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#89: FILE: arch/s390/lib/div64.c:23:
+	uint32_t *words = (uint32_t *) n;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#90: FILE: arch/s390/lib/div64.c:24:
+	uint32_t tmp;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#104: FILE: arch/s390/lib/div64.c:38:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#106: FILE: arch/s390/lib/div64.c:40:
+		: "+d" (reg2), "+d" (reg3) : "d" (base) : "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#120: FILE: arch/s390/lib/div64.c:54:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: arch/s390/lib/div64.c:67:
+		: "d" (base), "2" (1UL) : "cc" );

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#142: FILE: arch/s390/lib/div64.c:76:
+uint32_t __div64_32(uint64_t *n, uint32_t base)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#144: FILE: arch/s390/lib/div64.c:78:
+	uint32_t r;

CHECK:SPACING: No space is necessary after a cast
#153: FILE: arch/s390/lib/div64.c:87:
+	r = __div64_31(n, ((signed) base < 0) ? (base/2) : base);

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#153: FILE: arch/s390/lib/div64.c:87:
+	r = __div64_31(n, ((signed) base < 0) ? (base/2) : base);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#153: FILE: arch/s390/lib/div64.c:87:
+	r = __div64_31(n, ((signed) base < 0) ? (base/2) : base);
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/s390/lib/div64.c:88:
+	if ((signed) base < 0) {

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#154: FILE: arch/s390/lib/div64.c:88:
+	if ((signed) base < 0) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#155: FILE: arch/s390/lib/div64.c:89:
+		uint64_t q = *n;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#165: FILE: arch/s390/lib/div64.c:99:
+			r += base/2;
 			         ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#174: FILE: arch/s390/lib/div64.c:108:
+			int64_t rx = r - q;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#195: FILE: arch/s390/lib/div64.c:129:
+uint32_t __div64_32(uint64_t *n, uint32_t base)

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/s390/lib/div64.c:133:
+	uint32_t *words = (uint32_t *) n;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#199: FILE: arch/s390/lib/div64.c:133:
+	uint32_t *words = (uint32_t *) n;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#203: FILE: arch/s390/lib/div64.c:137:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#205: FILE: arch/s390/lib/div64.c:139:
+		: "+d" (reg2), "+d" (reg3) : "d" (base) : "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#208: FILE: arch/s390/lib/div64.c:142:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#210: FILE: arch/s390/lib/div64.c:144:
+		: "+d" (reg2), "+d" (reg3) : "d" (base) : "cc" );

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#217: FILE: arch/s390/lib/div64.c:151:
+EXPORT_SYMBOL(__div64_32);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000034004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 5 warnings, 19 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000034004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
