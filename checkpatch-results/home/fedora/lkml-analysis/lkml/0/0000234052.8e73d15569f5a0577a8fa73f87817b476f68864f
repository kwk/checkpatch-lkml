WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#29: 
"uml_mconsole proc <somefile>" a few times.  I havn't tracked what
                                               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#35: 
the function alot.  It also doesn't crash any more ;)
             ^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
/proc. And within UML, often this is false, because when building honeypots we

WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#48: 
the procfs within a kernel thread with a private namespace, but I havn't
                                                                  ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#72: FILE: arch/um/drivers/mconsole_kern.c:125:
+ * show the real procfs content, not the ones from hppfs.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#73: FILE: arch/um/drivers/mconsole_kern.c:126:
+#if 0

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#76: FILE: arch/um/drivers/mconsole_kern.c:129:
+	struct nameidata nd;
 	                 ^^

ERROR:SPACING: space required before the open parenthesis '('
#84: FILE: arch/um/drivers/mconsole_kern.c:137:
+	while(isspace(*ptr)) ptr++;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#84: FILE: arch/um/drivers/mconsole_kern.c:137:
+	while(isspace(*ptr)) ptr++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#87: FILE: arch/um/drivers/mconsole_kern.c:140:
+	if(proc == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#87: FILE: arch/um/drivers/mconsole_kern.c:140:
+	if(proc == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc"
#87: FILE: arch/um/drivers/mconsole_kern.c:140:
+	if(proc == NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#94: FILE: arch/um/drivers/mconsole_kern.c:147:
+	if(super == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#94: FILE: arch/um/drivers/mconsole_kern.c:147:
+	if(super == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!super"
#94: FILE: arch/um/drivers/mconsole_kern.c:147:
+	if(super == NULL){

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#100: FILE: arch/um/drivers/mconsole_kern.c:153:
+	nd.dentry = super->s_root;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#101: FILE: arch/um/drivers/mconsole_kern.c:154:
+	nd.mnt = NULL;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#102: FILE: arch/um/drivers/mconsole_kern.c:155:
+	nd.flags = O_RDONLY + 1;
 	^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#103: FILE: arch/um/drivers/mconsole_kern.c:156:
+	nd.last_type = LAST_ROOT;
 	^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: arch/um/drivers/mconsole_kern.c:160:
+	 * make UML crash again, it was enough to readd either one.*/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#108: FILE: arch/um/drivers/mconsole_kern.c:161:
+	err = link_path_walk(ptr, &nd);
 	                           ^^

ERROR:SPACING: space required before the open brace '{'
#109: FILE: arch/um/drivers/mconsole_kern.c:162:
+	if(err){

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: arch/um/drivers/mconsole_kern.c:162:
+	if(err){

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#114: FILE: arch/um/drivers/mconsole_kern.c:167:
+	file = dentry_open(nd.dentry, nd.mnt, O_RDONLY);
 	                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#114: FILE: arch/um/drivers/mconsole_kern.c:167:
+	file = dentry_open(nd.dentry, nd.mnt, O_RDONLY);
 	                              ^^

ERROR:SPACING: space required before the open brace '{'
#115: FILE: arch/um/drivers/mconsole_kern.c:168:
+	if(IS_ERR(file)){

ERROR:SPACING: space required before the open parenthesis '('
#115: FILE: arch/um/drivers/mconsole_kern.c:168:
+	if(IS_ERR(file)){

ERROR:SPACING: space required before the open brace '{'
#122: FILE: arch/um/drivers/mconsole_kern.c:175:
+	if(buf == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: arch/um/drivers/mconsole_kern.c:175:
+	if(buf == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#122: FILE: arch/um/drivers/mconsole_kern.c:175:
+	if(buf == NULL){

ERROR:SPACING: space required before the open brace '{'
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_op != NULL'
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->f_op->read != NULL'
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){
[...]
+	else mconsole_reply(req, "", 0, 0);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "file->f_op"
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "file->f_op->read"
#127: FILE: arch/um/drivers/mconsole_kern.c:180:
+	if((file->f_op != NULL) && (file->f_op->read != NULL)){

ERROR:SPACING: space required before the open brace '{'
#131: FILE: arch/um/drivers/mconsole_kern.c:184:
+			if(n >= 0){

ERROR:SPACING: space required before the open parenthesis '('
#131: FILE: arch/um/drivers/mconsole_kern.c:184:
+			if(n >= 0){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#135: FILE: arch/um/drivers/mconsole_kern.c:188:
+			}
+			else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#135: FILE: arch/um/drivers/mconsole_kern.c:188:
+			else {

ERROR:SPACING: space required before the open parenthesis '('
#140: FILE: arch/um/drivers/mconsole_kern.c:193:
+		} while(n > 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#142: FILE: arch/um/drivers/mconsole_kern.c:195:
+	else mconsole_reply(req, "", 0, 0);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#142: FILE: arch/um/drivers/mconsole_kern.c:195:
+	}
+	else mconsole_reply(req, "", 0, 0);

WARNING:SPACING: space prohibited before semicolon
#150: FILE: arch/um/drivers/mconsole_kern.c:203:
+ out: ;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#175: FILE: arch/um/drivers/mconsole_kern.c:244:
+		if (len == PAGE_SIZE-1) {
 		                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 16 warnings, 10 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
