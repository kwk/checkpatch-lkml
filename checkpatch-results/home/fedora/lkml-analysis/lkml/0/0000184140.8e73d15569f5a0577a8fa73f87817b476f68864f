WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > > > But the flip is an integral part of detecting a grace period.  So, if I

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#120: FILE: include/linux/init_task.h:82:
+    cpu_preempt_cntr:	NULL,					\
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#120: FILE: include/linux/init_task.h:82:
+    cpu_preempt_cntr:	NULL,					\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: include/linux/rcupdate.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: include/linux/rcupdate.h:2:
+ * Read-Copy Update mechanism for mutual exclusion $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#142: FILE: include/linux/rcupdate.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#143: FILE: include/linux/rcupdate.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: include/linux/rcupdate.h:21:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: include/linux/rcupdate.h:29:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: include/linux/rcupdate.h:40:
+ * Callback structure for use with call_rcu(). $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#176: FILE: include/linux/rcupdate.h:49:
+#define RCU_HEAD(head) struct rcu_head head = RCU_HEAD_INIT(head)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#177: FILE: include/linux/rcupdate.h:50:
+#define INIT_RCU_HEAD(ptr) do { \
+	INIT_LIST_HEAD(&(ptr)->list); (ptr)->func = NULL; (ptr)->arg = NULL; \
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#182: FILE: include/linux/rcupdate.h:55:
+typedef long rcu_batch_t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: include/linux/rcupdate.h:59:
+ * $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/rcupdate.h:70:
+extern void call_rcu(struct rcu_head *head, void (*func)(void *arg), void *arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/rcupdate.h:71:
+extern void synchronize_kernel(void);

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: include/linux/sched.h:898:
+	atomic_t *tmp;
+	tmp = per_cpu(curr_preempt_cntr, cpu);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#245: FILE: include/linux/sched.h:902:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->cpu_preempt_cntr"
#249: FILE: include/linux/sched.h:906:
+	if (unlikely(current->cpu_preempt_cntr != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->cpu_preempt_cntr"
#258: FILE: include/linux/sched.h:915:
+	if (likely(current->cpu_preempt_cntr == NULL)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: include/linux/sched.h:916:
+^I^Icurrent->cpu_preempt_cntr = $

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: include/linux/sched.h:928:
+#define rcu_init_preempt_cntr(cpu) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: include/linux/sched.h:929:
+#define rcu_switch_preempt_cntr(cpu) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: include/linux/sched.h:930:
+#define rcu_preempt_put() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: include/linux/sched.h:931:
+#define rcu_preempt_get() do { } while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#315: FILE: kernel/rcupdate.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#329: FILE: kernel/rcupdate.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#330: FILE: kernel/rcupdate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: kernel/rcupdate.c:21:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: kernel/rcupdate.c:30:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#354: FILE: kernel/rcupdate.c:40:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#355: FILE: kernel/rcupdate.c:41:
+#include <asm/bitops.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: kernel/rcupdate.c:76:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/rcupdate.c:78:
+static unsigned long^Ircu_cpumask = 0; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: kernel/rcupdate.c:78:
+static unsigned long^Ircu_cpumask = 0; ^I$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#392: FILE: kernel/rcupdate.c:78:
+static unsigned long	rcu_cpumask = 0; 	

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#394: FILE: kernel/rcupdate.c:80:
+static unsigned long	rcu_active_cpumask = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: kernel/rcupdate.c:82:
+static struct timer_list rcu_timer;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: kernel/rcupdate.c:127:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#442: FILE: kernel/rcupdate.c:128:
+	if (RCU_BATCH_LT(rcu_maxbatch, newbatch)) {
+		rcu_maxbatch = newbatch;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rcu_cpumask != 0'
#445: FILE: kernel/rcupdate.c:131:
+	if (RCU_BATCH_LT(rcu_maxbatch, rcu_curbatch) || (rcu_cpumask != 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#445: FILE: kernel/rcupdate.c:131:
+	if (RCU_BATCH_LT(rcu_maxbatch, rcu_curbatch) || (rcu_cpumask != 0)) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#461: FILE: kernel/rcupdate.c:147:
+	if (!test_bit(cpu, &rcu_cpumask)) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: kernel/rcupdate.c:151:
+^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: kernel/rcupdate.c:161:
+	if (this_cpu(cpu_quiescent) == this_cpu(rcu_last_qsctr) ||
+		rcu_cpu_preempted(cpu)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: kernel/rcupdate.c:188:
+^Iif (!list_empty(&this_cpu(rcu_nextlist)) && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: kernel/rcupdate.c:189:
+	if (!list_empty(&this_cpu(rcu_nextlist)) && 
+			list_empty(&this_cpu(rcu_currlist))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: kernel/rcupdate.c:201:
+^I^Iif (!rcu_timer_active && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: kernel/rcupdate.c:230:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: kernel/rcupdate.c:232:
+         * call_rcu() will anyway reschedule the tasklet so if the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: kernel/rcupdate.c:235:
+^Iif (list_empty(&this_cpu(rcu_nextlist)) && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: kernel/rcupdate.c:236:
+	if (list_empty(&this_cpu(rcu_nextlist)) && 
+			list_empty(&this_cpu(rcu_currlist))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#557: FILE: kernel/rcupdate.c:243:
+	if (!list_empty(&this_cpu(rcu_donelist))) {
+		rcu_invoke_callbacks(&this_cpu(rcu_donelist));
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: kernel/rcupdate.c:259:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#579: FILE: kernel/rcupdate.c:265:
+	for (cpu = 0; cpu < smp_num_cpus; cpu++) {
+		up(&per_cpu(rcu_sema, cpu));
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#604: FILE: kernel/rcupdate.c:290:
+
+}

WARNING:TYPO_SPELLING: 'dameon' may be misspelled - perhaps 'daemon'?
#608: FILE: kernel/rcupdate.c:294:
+ * Per-CPU RCU dameon. It runs at an absurdly high priority so
                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#612: FILE: kernel/rcupdate.c:298:
+static int krcud(void * __bind_cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#614: FILE: kernel/rcupdate.c:300:
+	int bind_cpu = *(int *) __bind_cpu;

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: kernel/rcupdate.c:304:
+        current->policy = SCHED_FIFO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: kernel/rcupdate.c:304:
+        current->policy = SCHED_FIFO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: kernel/rcupdate.c:305:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: kernel/rcupdate.c:305:
+        current->rt_priority = 1001 + sys_sched_get_priority_max(SCHED_FIFO);$

WARNING:CONSIDER_COMPLETION: consider using a completion
#627: FILE: kernel/rcupdate.c:313:
+	sema_init(&this_cpu(rcu_sema), 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#632: FILE: kernel/rcupdate.c:318:
+		while (down_interruptible(&this_cpu(rcu_sema)));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#644: FILE: kernel/rcupdate.c:330:
+		if (kernel_thread(krcud, (void *) &cpu,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: kernel/rcupdate.c:332:
+^I^I^Iprintk(KERN_ERR "spawn_krcud() failed for cpu %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#646: FILE: kernel/rcupdate.c:332:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spawn_krcud', this function's name, in a string
#646: FILE: kernel/rcupdate.c:332:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: kernel/rcupdate.c:333:
+			printk(KERN_ERR "spawn_krcud() failed for cpu %d\n", 
+									cpu);

CHECK:BRACES: Unbalanced braces around else statement
#648: FILE: kernel/rcupdate.c:334:
+		else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#649: FILE: kernel/rcupdate.c:335:
+			while (!per_cpu(rcu_task, cpu)) {
+				schedule();
+			}

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#668: FILE: kernel/rcupdate.c:354:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: kernel/rcupdate.c:355:
+^I^Itasklet_init(&per_cpu(rcu_tasklet, i), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: kernel/rcupdate.c:356:
+		tasklet_init(&per_cpu(rcu_tasklet, i), 
+				rcu_process_callbacks, 0UL);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#704: FILE: kernel/rcupdate.c:390:
+__initcall(rcu_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#706: FILE: kernel/rcupdate.c:392:
+EXPORT_SYMBOL(call_rcu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#707: FILE: kernel/rcupdate.c:393:
+EXPORT_SYMBOL(synchronize_kernel);

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: kernel/sched.c:172:
+        atomic_set(&per_cpu(rcu_preempt_cntr[0], cpu), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: kernel/sched.c:172:
+        atomic_set(&per_cpu(rcu_preempt_cntr[0], cpu), 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: kernel/sched.c:173:
+        atomic_set(&per_cpu(rcu_preempt_cntr[1], cpu), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: kernel/sched.c:173:
+        atomic_set(&per_cpu(rcu_preempt_cntr[1], cpu), 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: kernel/sched.c:174:
+^Iper_cpu(curr_preempt_cntr, cpu) = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: kernel/sched.c:176:
+^Iper_cpu(next_preempt_cntr, cpu) = $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#807: FILE: include/linux/init_task.h:82:
+    cpu_preempt_cntr:	NULL,					\
                     ^

WARNING:INDENTED_LABEL: labels should not be indented
#807: FILE: include/linux/init_task.h:82:
+    cpu_preempt_cntr:	NULL,					\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#815: FILE: include/linux/rcupdate.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: include/linux/rcupdate.h:2:
+ * Read-Copy Update mechanism for mutual exclusion $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#829: FILE: include/linux/rcupdate.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#830: FILE: include/linux/rcupdate.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: include/linux/rcupdate.h:21:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#843: FILE: include/linux/rcupdate.h:29:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: include/linux/rcupdate.h:39:
+ * Callback structure for use with call_rcu(). $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#862: FILE: include/linux/rcupdate.h:48:
+#define RCU_HEAD(head) struct rcu_head head = RCU_HEAD_INIT(head)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#863: FILE: include/linux/rcupdate.h:49:
+#define INIT_RCU_HEAD(ptr) do { \
+	INIT_LIST_HEAD(&(ptr)->list); (ptr)->func = NULL; (ptr)->arg = NULL; \
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#867: FILE: include/linux/rcupdate.h:53:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#868: FILE: include/linux/rcupdate.h:54:
+extern void FASTCALL(call_rcu(struct rcu_head *head, void (*func)(void *arg), void *arg));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#871: FILE: include/linux/rcupdate.h:57:
+extern void FASTCALL(call_rcu_preempt(struct rcu_head *head, void (*func)(void *arg), void *arg));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: include/linux/rcupdate.h:59:
+static inline void call_rcu_preempt(struct rcu_head *head, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: include/linux/rcupdate.h:60:
+                               void (*func)(void *arg), void *arg)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: include/linux/rcupdate.h:60:
+static inline void call_rcu_preempt(struct rcu_head *head, 
+                               void (*func)(void *arg), void *arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: include/linux/rcupdate.h:60:
+                               void (*func)(void *arg), void *arg)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#880: FILE: include/linux/rcupdate.h:66:
+extern void synchronize_kernel(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#881: FILE: include/linux/rcupdate.h:67:
+extern void synchronize_kernel(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#883: FILE: include/linux/rcupdate.h:69:
+extern void rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#901: FILE: include/linux/sched.h:166:
+extern void force_cpu_reschedule(int cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#934: FILE: include/linux/sched.h:892:
+	atomic_t *tmp;
+	tmp = per_cpu(curr_preempt_cntr, cpu);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#938: FILE: include/linux/sched.h:896:
+
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->cpu_preempt_cntr"
#942: FILE: include/linux/sched.h:900:
+	if (unlikely(current->cpu_preempt_cntr != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->cpu_preempt_cntr"
#951: FILE: include/linux/sched.h:909:
+	if (likely(current->cpu_preempt_cntr == NULL)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: include/linux/sched.h:910:
+^I^Icurrent->cpu_preempt_cntr = $

ERROR:SPACING: space required before the open parenthesis '('
#964: FILE: include/linux/sched.h:922:
+#define rcu_init_preempt_cntr(cpu) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#965: FILE: include/linux/sched.h:923:
+#define rcu_switch_preempt_cntr(cpu) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#966: FILE: include/linux/sched.h:924:
+#define rcu_preempt_put() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#967: FILE: include/linux/sched.h:925:
+#define rcu_preempt_get() do { } while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1038: FILE: kernel/rcupdate.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1052: FILE: kernel/rcupdate.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1053: FILE: kernel/rcupdate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: kernel/rcupdate.c:23:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1068: FILE: kernel/rcupdate.c:31:
+ * ^I^Ihttp://lse.sourceforge.net/locking/rcupdate.html$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1085: FILE: kernel/rcupdate.c:48:
+	spinlock_t lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: kernel/rcupdate.c:57:
+struct rcu_data rcu_data; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1138: FILE: kernel/rcupdate.c:101:
+}
+static inline void rcu_setup_grace_period(struct rcu_data *rdata, int cpu)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1146: FILE: kernel/rcupdate.c:109:
+}
+static inline int rcu_grace_period_complete(struct rcu_data *rdata, int cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: kernel/rcupdate.c:113:
+^I^I^I(rdata->quiescent_checkpoint[cpu] != $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: kernel/rcupdate.c:117:
+^I^I^I(rdata->quiescent_checkpoint[cpu] != $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1156: FILE: kernel/rcupdate.c:119:
+              ^I^I!rcu_cpu_preempted(cpu));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1156: FILE: kernel/rcupdate.c:119:
+              ^I^I!rcu_cpu_preempted(cpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: kernel/rcupdate.c:119:
+              ^I^I!rcu_cpu_preempted(cpu));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1166: FILE: kernel/rcupdate.c:129:
+}
+static inline int rcu_grace_period_complete(struct rcu_data *rdata, int cpu)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1173: FILE: kernel/rcupdate.c:136:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1181: FILE: kernel/rcupdate.c:144:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#1193: FILE: kernel/rcupdate.c:156:
+			int cpu = cpu_logical_map(i);
+			rcu_setup_grace_period(rdata, cpu);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1211: FILE: kernel/rcupdate.c:174:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1284: FILE: kernel/rcupdate.c:247:
+^Itasklet_init(&rdata->tasklet, rcu_process_callbacks, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: kernel/rcupdate.c:248:
+	tasklet_init(&rdata->tasklet, rcu_process_callbacks, 
+			(unsigned long)rdata);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1318: FILE: kernel/rcupdate.c:281:
+EXPORT_SYMBOL(call_rcu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1355: FILE: kernel/sched.c:177:
+        atomic_set(&per_cpu(rcu_preempt_cntr[0], cpu), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: kernel/sched.c:177:
+        atomic_set(&per_cpu(rcu_preempt_cntr[0], cpu), 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1356: FILE: kernel/sched.c:178:
+        atomic_set(&per_cpu(rcu_preempt_cntr[1], cpu), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: kernel/sched.c:178:
+        atomic_set(&per_cpu(rcu_preempt_cntr[1], cpu), 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1357: FILE: kernel/sched.c:179:
+^Iper_cpu(curr_preempt_cntr, cpu) = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: kernel/sched.c:181:
+^Iper_cpu(next_preempt_cntr, cpu) = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1414: FILE: kernel/sched.c:1074:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184140.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 44 warnings, 39 checks, 1224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184140.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
