WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
Trivial fix for __FUNCTION__ pasting in arch/arm stuff against current bk tree.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	           ChangeSet	1.555   -> 1.556  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	arch/arm/mach-sa1100/dma.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#	arch/arm/mach-sa1100/badge4.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#	arch/arm/mach-sa1100/h3600.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# 02/08/29	plars@austin.ibm.com	1.556

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# fix __FUNCTION__ pasting in arch/arm code

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/arch/arm/mach-sa1100/badge4.c	Thu Aug 29 15:17:30 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: arch/arm/mach-sa1100/badge4.c:60:
+^I^Iprintk(KERN_ERR "%s: SA-1111 initialization failed (%d)\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#50: FILE: arch/arm/mach-sa1100/badge4.c:60:
+		printk(KERN_ERR "%s: SA-1111 initialization failed (%d)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: arch/arm/mach-sa1100/badge4.c:61:
+		printk(KERN_ERR "%s: SA-1111 initialization failed (%d)\n", 
+			__FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#51: FILE: arch/arm/mach-sa1100/badge4.c:61:
+			__FUNCTION__, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#60: FILE: arch/arm/mach-sa1100/badge4.c:135:
+		printk(KERN_INFO "%s: enabling 5V supply rail\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#60: FILE: arch/arm/mach-sa1100/badge4.c:135:
+		printk(KERN_INFO "%s: enabling 5V supply rail\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#65: FILE: arch/arm/mach-sa1100/badge4.c:139:
+		printk(KERN_INFO "%s: disabling 5V supply rail\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#65: FILE: arch/arm/mach-sa1100/badge4.c:139:
+		printk(KERN_INFO "%s: disabling 5V supply rail\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/arm/mach-sa1100/dma.c:129:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: arch/arm/mach-sa1100/dma.c:129:
+		printk(KERN_ERR 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#81: FILE: arch/arm/mach-sa1100/dma.c:131:
+		       __FUNCTION__, IRQ_DMA0 + i, device_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#90: FILE: arch/arm/mach-sa1100/dma.c:167:
+		printk(KERN_ERR "%s: bad DMA identifier\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#90: FILE: arch/arm/mach-sa1100/dma.c:167:
+		printk(KERN_ERR "%s: bad DMA identifier\n", __FUNCTION__);

WARNING:REPEATED_WORD: Possible repeated word: 'free'
#96: FILE: arch/arm/mach-sa1100/dma.c:172:
+		printk(KERN_ERR "%s Trying to free free DMA\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#96: FILE: arch/arm/mach-sa1100/dma.c:172:
+		printk(KERN_ERR "%s Trying to free free DMA\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#96: FILE: arch/arm/mach-sa1100/dma.c:172:
+		printk(KERN_ERR "%s Trying to free free DMA\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#105: FILE: arch/arm/mach-sa1100/dma.c:327:
+		printk(KERN_ERR "%s: bad DMA identifier\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#105: FILE: arch/arm/mach-sa1100/dma.c:327:
+		printk(KERN_ERR "%s: bad DMA identifier\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 31 warnings, 1 checks, 67 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
