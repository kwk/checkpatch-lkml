CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pud' - possible side-effects?
#65: FILE: include/asm-generic/4level-fixup.h:13:
+#define pmd_alloc(mm, pud, address) \
+	((unlikely(pgd_none(*(pud))) && __pmd_alloc(mm, pud, address))? \
+ 		NULL: pmd_offset(pud, address))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'address' - possible side-effects?
#65: FILE: include/asm-generic/4level-fixup.h:13:
+#define pmd_alloc(mm, pud, address) \
+	((unlikely(pgd_none(*(pud))) && __pmd_alloc(mm, pud, address))? \
+ 		NULL: pmd_offset(pud, address))

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#66: FILE: include/asm-generic/4level-fixup.h:14:
+	((unlikely(pgd_none(*(pud))) && __pmd_alloc(mm, pud, address))? \
 	                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: include/asm-generic/4level-fixup.h:15:
+ ^I^INULL: pmd_offset(pud, address))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: include/asm-generic/4level-fixup.h:15:
+ ^I^INULL: pmd_offset(pud, address))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/asm-generic/4level-fixup.h:15:
+ ^I^INULL: pmd_offset(pud, address))$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#67: FILE: include/asm-generic/4level-fixup.h:15:
+ 		NULL: pmd_offset(pud, address))
  		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#67: FILE: include/asm-generic/4level-fixup.h:15:
+ 		NULL: pmd_offset(pud, address))

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#110: FILE: include/linux/mm.h:776:
+	return (unlikely(pgd_none(*pgd)) && __pud_alloc(mm, pgd, address))?
 	                                                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#111: FILE: include/linux/mm.h:777:
+		NULL: pud_offset(pgd, address);
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#111: FILE: include/linux/mm.h:777:
+		NULL: pud_offset(pgd, address);

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#119: FILE: include/linux/mm.h:782:
+	return (unlikely(pud_none(*pud)) && __pmd_alloc(mm, pud, address))?
 	                                                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#120: FILE: include/linux/mm.h:783:
+		NULL: pmd_offset(pud, address);
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#120: FILE: include/linux/mm.h:783:
+		NULL: pmd_offset(pud, address);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pmd' - possible side-effects?
#126: FILE: include/linux/mm.h:787:
+#define pte_alloc_map(mm, pmd, address)			\
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc(mm, pmd, address))? \
+		NULL: pte_offset_map(pmd, address))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'address' - possible side-effects?
#126: FILE: include/linux/mm.h:787:
+#define pte_alloc_map(mm, pmd, address)			\
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc(mm, pmd, address))? \
+		NULL: pte_offset_map(pmd, address))

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#127: FILE: include/linux/mm.h:788:
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc(mm, pmd, address))? \
 	                                                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#128: FILE: include/linux/mm.h:789:
+		NULL: pte_offset_map(pmd, address))
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#128: FILE: include/linux/mm.h:789:
+		NULL: pte_offset_map(pmd, address))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pmd' - possible side-effects?
#130: FILE: include/linux/mm.h:791:
+#define pte_alloc_kernel(pmd, address)			\
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc_kernel(pmd, address))? \
+		NULL: pte_offset_kernel(pmd, address))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'address' - possible side-effects?
#130: FILE: include/linux/mm.h:791:
+#define pte_alloc_kernel(pmd, address)			\
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc_kernel(pmd, address))? \
+		NULL: pte_offset_kernel(pmd, address))

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#131: FILE: include/linux/mm.h:792:
+	((unlikely(!pmd_present(*(pmd))) && __pte_alloc_kernel(pmd, address))? \
 	                                                                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#132: FILE: include/linux/mm.h:793:
+		NULL: pte_offset_kernel(pmd, address))
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#132: FILE: include/linux/mm.h:793:
+		NULL: pte_offset_kernel(pmd, address))

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: mm/memory.c:295:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: mm/memory.c:306:
+	pte_t *new = pte_alloc_one_kernel(&init_mm, address);
+	if (!new)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 8 warnings, 7 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
