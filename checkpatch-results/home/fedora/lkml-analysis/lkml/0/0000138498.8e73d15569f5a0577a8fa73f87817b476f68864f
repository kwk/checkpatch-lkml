CHECK:SPACING: No space is necessary after a cast
#102: FILE: include/linux/mm.h:808:
+	page->private = (unsigned long) page;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#103: FILE: include/linux/mm.h:809:
+	page->mapping = (struct address_space *) page;

CHECK:SPACING: No space is necessary after a cast
#104: FILE: include/linux/mm.h:810:
+	page->index   = (pgoff_t) page;

CHECK:SPACING: No space is necessary after a cast
#111: FILE: include/linux/mm.h:817:
+	BUG_ON(page->private != (unsigned long) page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#111: FILE: include/linux/mm.h:817:
+	BUG_ON(page->private != (unsigned long) page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#112: FILE: include/linux/mm.h:818:
+	BUG_ON(page->mapping != (struct address_space *) page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#112: FILE: include/linux/mm.h:818:
+	BUG_ON(page->mapping != (struct address_space *) page);

CHECK:SPACING: No space is necessary after a cast
#113: FILE: include/linux/mm.h:819:
+	BUG_ON(page->index   != (pgoff_t) page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: include/linux/mm.h:819:
+	BUG_ON(page->index   != (pgoff_t) page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#114: FILE: include/linux/mm.h:820:
+	BUG_ON(page->lru.next != LIST_POISON2);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: include/linux/mm.h:821:
+	BUG_ON(page->lru.prev != LIST_POISON1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 6 checks, 107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
