WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
controller (see Documentation/spi/spi_summary).  The driver has the following

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#187: FILE: Documentation/spi/pxa2xx:127:
+slave device.  Please note the the PXA2xx SSP 1 does not support trailing byte

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#192: FILE: Documentation/spi/pxa2xx:132:
+connects the SSPTX pin the the SSPRX pin.  This is useful for initial setup

WARNING:TYPO_SPELLING: 'hardward' may be misspelled - perhaps 'hardware'?
#225: FILE: Documentation/spi/pxa2xx:165:
+	.tx_threshold = 12, /* SSP hardward FIFO threshold */
 	                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hardward' may be misspelled - perhaps 'hardware'?
#226: FILE: Documentation/spi/pxa2xx:166:
+	.rx_threshold = 4, /* SSP hardward FIFO threshold */
 	                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'hardward' may be misspelled - perhaps 'hardware'?
#233: FILE: Documentation/spi/pxa2xx:173:
+	.tx_threshold = 12, /* SSP hardward FIFO threshold */
 	                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'hardward' may be misspelled - perhaps 'hardware'?
#234: FILE: Documentation/spi/pxa2xx:174:
+	.rx_threshold = 4, /* SSP hardward FIFO threshold */
 	                          ^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#303: FILE: drivers/spi/Kconfig:78:
+config SPI_PXA2XX
+	tristate "PXA2xx SSP SPI master"
+	depends on SPI_MASTER && ARCH_PXA && EXPERIMENTAL
+	help
+	  This enables using a PXA2xx SSP port as a SPI master controller.
+	  The driver can be configured to use any SSP port and additional
+	  documentation can be found a Documentation/spi/pxa2xx.
+
 #
 # Add new SPI master controllers in alphabetical order above this line
 #

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#332: FILE: drivers/spi/pxa2xx_spi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#346: FILE: drivers/spi/pxa2xx_spi.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#347: FILE: drivers/spi/pxa2xx_spi.c:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#363: FILE: drivers/spi/pxa2xx_spi.c:32:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#366: FILE: drivers/spi/pxa2xx_spi.c:35:
+#include <asm/delay.h>

WARNING:TYPO_SPELLING: 'Contoller' may be misspelled - perhaps 'Controller'?
#374: FILE: drivers/spi/pxa2xx_spi.c:43:
+MODULE_DESCRIPTION("PXA2xx SSP SPI Contoller");
                                    ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#381: FILE: drivers/spi/pxa2xx_spi.c:50:
+#define IS_DMA_ALIGNED(x) (((u32)(x)&0x07)==0)
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#381: FILE: drivers/spi/pxa2xx_spi.c:50:
+#define IS_DMA_ALIGNED(x) (((u32)(x)&0x07)==0)
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#383: FILE: drivers/spi/pxa2xx_spi.c:52:
+#define DEFINE_SSP_REG(reg, off) \
+static inline u32 read_##reg(void *p) { return __raw_readl(p + (off)); } \
+static inline void write_##reg(u32 v, void *p) { __raw_writel(v, p + (off)); }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#395: FILE: drivers/spi/pxa2xx_spi.c:64:
+#define START_STATE ((void*)0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#396: FILE: drivers/spi/pxa2xx_spi.c:65:
+#define RUNNING_STATE ((void*)1)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#397: FILE: drivers/spi/pxa2xx_spi.c:66:
+#define DONE_STATE ((void*)2)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#398: FILE: drivers/spi/pxa2xx_spi.c:67:
+#define ERROR_STATE ((void*)-1)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#432: FILE: drivers/spi/pxa2xx_spi.c:101:
+	spinlock_t lock;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#441: FILE: drivers/spi/pxa2xx_spi.c:110:
+	struct spi_message* cur_msg;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#442: FILE: drivers/spi/pxa2xx_spi.c:111:
+	struct spi_transfer* cur_transfer;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#487: FILE: drivers/spi/pxa2xx_spi.c:156:
+		while (read_SSSR(reg) & SSSR_RNE) {
+			read_SSDR(reg);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#523: FILE: drivers/spi/pxa2xx_spi.c:192:
+	while ((read_SSSR(reg) & SSSR_TNF)
+			&& (drv_data->tx < drv_data->tx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#535: FILE: drivers/spi/pxa2xx_spi.c:204:
+	while ((read_SSSR(reg) & SSSR_RNE)
+			&& (drv_data->rx < drv_data->rx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#546: FILE: drivers/spi/pxa2xx_spi.c:215:
+	while ((read_SSSR(reg) & SSSR_TNF)
+			&& (drv_data->tx < drv_data->tx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#557: FILE: drivers/spi/pxa2xx_spi.c:226:
+	while ((read_SSSR(reg) & SSSR_RNE)
+			&& (drv_data->rx < drv_data->rx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#568: FILE: drivers/spi/pxa2xx_spi.c:237:
+	while ((read_SSSR(reg) & SSSR_TNF)
+			&& (drv_data->tx < drv_data->tx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#579: FILE: drivers/spi/pxa2xx_spi.c:248:
+	while ((read_SSSR(reg) & SSSR_RNE)
+			&& (drv_data->rx < drv_data->rx_end)) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#584: FILE: drivers/spi/pxa2xx_spi.c:253:
+}
+static void u32_writer(struct driver_data *drv_data)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#589: FILE: drivers/spi/pxa2xx_spi.c:258:
+	while ((read_SSSR(reg) & SSSR_TNF)
+			&& (drv_data->tx < drv_data->tx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#600: FILE: drivers/spi/pxa2xx_spi.c:269:
+	while ((read_SSSR(reg) & SSSR_RNE)
+			&& (drv_data->rx < drv_data->rx_end)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#612: FILE: drivers/spi/pxa2xx_spi.c:281:
+	if (trans->transfer_list.next != &msg->transfers) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: drivers/spi/pxa2xx_spi.c:284:
+			list_entry(trans->transfer_list.next,
+					struct spi_transfer,

CHECK:BRACES: Unbalanced braces around else statement
#618: FILE: drivers/spi/pxa2xx_spi.c:287:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#637: FILE: drivers/spi/pxa2xx_spi.c:306:
+	if (drv_data->rx == NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->rx"
#637: FILE: drivers/spi/pxa2xx_spi.c:306:
+	if (drv_data->rx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#641: FILE: drivers/spi/pxa2xx_spi.c:310:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#644: FILE: drivers/spi/pxa2xx_spi.c:313:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#646: FILE: drivers/spi/pxa2xx_spi.c:315:
+	if (drv_data->tx == NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->tx"
#646: FILE: drivers/spi/pxa2xx_spi.c:315:
+	if (drv_data->tx == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#650: FILE: drivers/spi/pxa2xx_spi.c:319:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/spi/pxa2xx_spi.c:324:
+	drv_data->rx_dma = dma_map_single(dev, drv_data->rx,
+						drv_data->rx_map_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/spi/pxa2xx_spi.c:331:
+	drv_data->tx_dma = dma_map_single(dev, drv_data->tx,
+						drv_data->tx_map_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/spi/pxa2xx_spi.c:336:
+		dma_unmap_single(dev, drv_data->rx_dma,
+					drv_data->rx_map_len, DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/spi/pxa2xx_spi.c:353:
+		dma_unmap_single(dev, drv_data->rx_dma,
+					drv_data->rx_map_len, DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: drivers/spi/pxa2xx_spi.c:355:
+		dma_unmap_single(dev, drv_data->tx_dma,
+					drv_data->tx_map_len, DMA_TO_DEVICE);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#695: FILE: drivers/spi/pxa2xx_spi.c:364:
+	struct spi_transfer* last_transfer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/spi/pxa2xx_spi.c:367:
+	last_transfer = list_entry(message->transfers.prev,
+					struct spi_transfer,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#743: FILE: drivers/spi/pxa2xx_spi.c:412:
+	if (irq_status & DCSR_BUSERR) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: drivers/spi/pxa2xx_spi.c:423:
+			dev_err(&drv_data->pdev->dev,
+					"dma_handler: flush fail\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_handler', this function's name, in a string
#754: FILE: drivers/spi/pxa2xx_spi.c:423:
+					"dma_handler: flush fail\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_handler', this function's name, in a string
#760: FILE: drivers/spi/pxa2xx_spi.c:429:
+				"dma_handler: bad bus address on "

WARNING:SPLIT_STRING: quoted string split across lines
#761: FILE: drivers/spi/pxa2xx_spi.c:430:
+				"dma_handler: bad bus address on "
+				"tx channel %d, source %x target = %x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_handler', this function's name, in a string
#765: FILE: drivers/spi/pxa2xx_spi.c:434:
+				"dma_handler: bad bus address on "

WARNING:SPLIT_STRING: quoted string split across lines
#766: FILE: drivers/spi/pxa2xx_spi.c:435:
+				"dma_handler: bad bus address on "
+				"rx channel %d, source %x target = %x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_data->ssp_type == PXA25x_SSP'
#774: FILE: drivers/spi/pxa2xx_spi.c:443:
+	if ((drv_data->ssp_type == PXA25x_SSP)
+		&& (channel == drv_data->tx_channel)
+		&& (irq_status & DCSR_ENDINTR)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel == drv_data->tx_channel'
#774: FILE: drivers/spi/pxa2xx_spi.c:443:
+	if ((drv_data->ssp_type == PXA25x_SSP)
+		&& (channel == drv_data->tx_channel)
+		&& (irq_status & DCSR_ENDINTR)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#775: FILE: drivers/spi/pxa2xx_spi.c:444:
+	if ((drv_data->ssp_type == PXA25x_SSP)
+		&& (channel == drv_data->tx_channel)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#776: FILE: drivers/spi/pxa2xx_spi.c:445:
+		&& (channel == drv_data->tx_channel)
+		&& (irq_status & DCSR_ENDINTR)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#777: FILE: drivers/spi/pxa2xx_spi.c:446:
+		&& (irq_status & DCSR_ENDINTR)) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_handler', this function's name, in a string
#781: FILE: drivers/spi/pxa2xx_spi.c:450:
+				"dma_handler: ssp rx stall failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_handler', this function's name, in a string
#790: FILE: drivers/spi/pxa2xx_spi.c:459:
+				"dma_handler: dma rx channel stop failed\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#805: FILE: drivers/spi/pxa2xx_spi.c:474:
+		 * handled in pump_transfers */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: drivers/spi/pxa2xx_spi.c:506:
+			dev_err(&drv_data->pdev->dev,
+					"dma_transfer: flush fail\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#837: FILE: drivers/spi/pxa2xx_spi.c:506:
+					"dma_transfer: flush fail\n");

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#839: FILE: drivers/spi/pxa2xx_spi.c:508:
+		dev_warn(&drv_data->pdev->dev, "dma_transfer: fifo overun\n");
 		                                                   ^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#839: FILE: drivers/spi/pxa2xx_spi.c:508:
+		dev_warn(&drv_data->pdev->dev, "dma_transfer: fifo overun\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#854: FILE: drivers/spi/pxa2xx_spi.c:523:
+	if (irq_status & SSSR_TINT || drv_data->rx == drv_data->rx_end) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#865: FILE: drivers/spi/pxa2xx_spi.c:534:
+				"dma_transfer: dma rx channel stop failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#869: FILE: drivers/spi/pxa2xx_spi.c:538:
+				"dma_transfer: ssp rx stall failed\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#883: FILE: drivers/spi/pxa2xx_spi.c:552:
+		 * handled in pump_transfers */

WARNING:TYPO_SPELLING: 'Opps' may be misspelled - perhaps 'Oops'?
#896: FILE: drivers/spi/pxa2xx_spi.c:565:
+	/* Opps problem detected */
 	   ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#909: FILE: drivers/spi/pxa2xx_spi.c:578:
+	while ((irq_status = (read_SSSR(reg) & drv_data->mask_sr))) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#911: FILE: drivers/spi/pxa2xx_spi.c:580:
+		if (irq_status & SSSR_ROR) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#920: FILE: drivers/spi/pxa2xx_spi.c:589:
+					"interrupt_transfer: flush fail\n");

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#923: FILE: drivers/spi/pxa2xx_spi.c:592:
+					"interrupt_transfer: fifo overun\n");
 					                          ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: drivers/spi/pxa2xx_spi.c:592:
+			dev_warn(&drv_data->pdev->dev,
+					"interrupt_transfer: fifo overun\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#923: FILE: drivers/spi/pxa2xx_spi.c:592:
+					"interrupt_transfer: fifo overun\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_data->rx < drv_data->rx_end'
#932: FILE: drivers/spi/pxa2xx_spi.c:601:
+		if ((irq_status & SSSR_TINT)
+				&& (drv_data->rx < drv_data->rx_end))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#933: FILE: drivers/spi/pxa2xx_spi.c:602:
+		if ((irq_status & SSSR_TINT)
+				&& (drv_data->rx < drv_data->rx_end))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#951: FILE: drivers/spi/pxa2xx_spi.c:620:
+						"interrupt_transfer: "

WARNING:SPLIT_STRING: quoted string split across lines
#952: FILE: drivers/spi/pxa2xx_spi.c:621:
+						"interrupt_transfer: "
+						"trailing byte read failed\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_data->rx == drv_data->rx_end'
#956: FILE: drivers/spi/pxa2xx_spi.c:625:
+		if ((irq_status & SSSR_TINT)
+				|| (drv_data->rx == drv_data->rx_end)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#957: FILE: drivers/spi/pxa2xx_spi.c:626:
+		if ((irq_status & SSSR_TINT)
+				|| (drv_data->rx == drv_data->rx_end)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#958: FILE: drivers/spi/pxa2xx_spi.c:627:
+				|| (drv_data->rx == drv_data->rx_end)) {
+

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#965: FILE: drivers/spi/pxa2xx_spi.c:634:
+			/* Update total byte transfered */
 			                     ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#969: FILE: drivers/spi/pxa2xx_spi.c:638:
+			 * handled in pump_transfers */

WARNING:SPLIT_STRING: quoted string split across lines
#995: FILE: drivers/spi/pxa2xx_spi.c:664:
+		dev_err(&drv_data->pdev->dev, "bad message state "
+				"in interrupt handler\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/spi/pxa2xx_spi.c:703:
+		previous = list_entry(transfer->transfer_list.prev,
+					struct spi_transfer,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pump_transfers', this function's name, in a string
#1042: FILE: drivers/spi/pxa2xx_spi.c:711:
+		dev_err(&drv_data->pdev->dev, "pump_transfers: flush failed\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1061: FILE: drivers/spi/pxa2xx_spi.c:730:
+	if ((drv_data->dma_mapped = map_dma_buffers(drv_data))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1062: FILE: drivers/spi/pxa2xx_spi.c:731:
+	if ((drv_data->dma_mapped = map_dma_buffers(drv_data))) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1156: FILE: drivers/spi/pxa2xx_spi.c:825:
+	drv_data->cur_msg = list_entry(drv_data->queue.next,
+					struct spi_message, queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1164: FILE: drivers/spi/pxa2xx_spi.c:833:
+	drv_data->cur_transfer = list_entry(drv_data->cur_msg->transfers.next,
+						struct spi_transfer,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1212: FILE: drivers/spi/pxa2xx_spi.c:881:
+	if (drv_data->ssp_type != PXA25x_SSP
+			&& (spi->bits_per_word < 4 || spi->bits_per_word > 32))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#1219: FILE: drivers/spi/pxa2xx_spi.c:888:
+	if (chip == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chip)...) over kzalloc(sizeof(struct chip_data)...)
#1220: FILE: drivers/spi/pxa2xx_spi.c:889:
+		chip = kzalloc(sizeof(struct chip_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <SSCR1_RxTresh>
#1227: FILE: drivers/spi/pxa2xx_spi.c:896:
+		chip->threshold = SSCR1_RxTresh(1) | SSCR1_TxTresh(1);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SSCR1_TxTresh>
#1227: FILE: drivers/spi/pxa2xx_spi.c:896:
+		chip->threshold = SSCR1_RxTresh(1) | SSCR1_TxTresh(1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1245: FILE: drivers/spi/pxa2xx_spi.c:914:
+		chip->enable_dma = chip_info->dma_burst_size != 0
+					&& drv_data->master_info->enable_dma;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1264: FILE: drivers/spi/pxa2xx_spi.c:933:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <SSP1_SerClkDiv>
#1270: FILE: drivers/spi/pxa2xx_spi.c:939:
+		clk_div = SSP1_SerClkDiv(spi->max_speed_hz);

CHECK:CAMELCASE: Avoid CamelCase: <SSP2_SerClkDiv>
#1272: FILE: drivers/spi/pxa2xx_spi.c:941:
+		clk_div = SSP2_SerClkDiv(spi->max_speed_hz);

CHECK:CAMELCASE: Avoid CamelCase: <SSP3_SerClkDiv>
#1274: FILE: drivers/spi/pxa2xx_spi.c:943:
+		clk_div = SSP3_SerClkDiv(spi->max_speed_hz);

CHECK:CAMELCASE: Avoid CamelCase: <SSCR0_Motorola>
#1279: FILE: drivers/spi/pxa2xx_spi.c:948:
+			| SSCR0_Motorola

CHECK:CAMELCASE: Avoid CamelCase: <SSCR0_DataSize>
#1280: FILE: drivers/spi/pxa2xx_spi.c:949:
+			| SSCR0_DataSize(spi->bits_per_word & 0x0f)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1289: FILE: drivers/spi/pxa2xx_spi.c:958:
+		dev_dbg(&spi->dev, "%d bits/word, %d Hz, mode %d\n",
+				spi->bits_per_word,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/spi/pxa2xx_spi.c:964:
+		dev_dbg(&spi->dev, "%d bits/word, %d Hz, mode %d\n",
+				spi->bits_per_word,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1296: FILE: drivers/spi/pxa2xx_spi.c:965:
+				(CLOCK_SPEED_HZ/2)
 				               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1343: FILE: drivers/spi/pxa2xx_spi.c:1012:
+	tasklet_init(&drv_data->pump_transfers,
+			pump_transfers,	(unsigned long)drv_data);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1346: FILE: drivers/spi/pxa2xx_spi.c:1015:
+	drv_data->workqueue = create_singlethread_workqueue(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->workqueue"
#1348: FILE: drivers/spi/pxa2xx_spi.c:1017:
+	if (drv_data->workqueue == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1379: FILE: drivers/spi/pxa2xx_spi.c:1048:
+	unsigned limit = 500;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1387: FILE: drivers/spi/pxa2xx_spi.c:1056:
+	 * friends on every SPI message. Do this instead */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1391: FILE: drivers/spi/pxa2xx_spi.c:1060:
+		msleep(10);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1494: FILE: drivers/spi/pxa2xx_spi.c:1163:
+	if (platform_info->enable_dma) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1497: FILE: drivers/spi/pxa2xx_spi.c:1166:
+		drv_data->rx_channel = pxa_request_dma("pxa2xx_spi_ssp_rx",
+							DMA_PRIO_HIGH,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1507: FILE: drivers/spi/pxa2xx_spi.c:1176:
+		drv_data->tx_channel = pxa_request_dma("pxa2xx_spi_ssp_tx",
+							DMA_PRIO_MEDIUM,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1517: FILE: drivers/spi/pxa2xx_spi.c:1186:
+		if (drv_data->ioaddr == SSP1_VIRT) {
+				DRCMRRXSSDR = DRCMR_MAPVLD

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1522: FILE: drivers/spi/pxa2xx_spi.c:1191:
+		} else if (drv_data->ioaddr == SSP2_VIRT) {
+				DRCMRRXSS2DR = DRCMR_MAPVLD

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1527: FILE: drivers/spi/pxa2xx_spi.c:1196:
+		} else if (drv_data->ioaddr == SSP3_VIRT) {
+				DRCMRRXSS3DR = DRCMR_MAPVLD

CHECK:CAMELCASE: Avoid CamelCase: <SSCR0_SerClkDiv>
#1544: FILE: drivers/spi/pxa2xx_spi.c:1213:
+	write_SSCR0(SSCR0_SerClkDiv(2)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1646: FILE: drivers/spi/pxa2xx_spi.c:1315:
+	if ((status = pxa2xx_spi_remove(pdev)) != 0)

WARNING:TYPO_SPELLING: 'childern' may be misspelled - perhaps 'children'?
#1668: FILE: drivers/spi/pxa2xx_spi.c:1337:
+	/* Check all childern for current power state */
 	             ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1737: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1751: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1752: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)
                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)
                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)
                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)
                                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)
                                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1763: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:27:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/2/(x+1))<<8)&0x0000ff00)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1764: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:28:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1764: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:28:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1764: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:28:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1764: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:28:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1764: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:28:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1765: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:29:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1765: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:29:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1765: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:29:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1765: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:29:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1765: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:29:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1768: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:32:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1768: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:32:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1768: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:32:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1768: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:32:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1768: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:32:
+#define SSP1_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1769: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:33:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1769: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:33:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1769: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:33:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1769: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:33:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1769: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:33:
+#define SSP2_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1770: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:34:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1770: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:34:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1770: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:34:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1770: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:34:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)
                                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1770: FILE: include/asm-arm/arch-pxa/pxa2xx_spi.h:34:
+#define SSP3_SerClkDiv(x) (((CLOCK_SPEED_HZ/(x+1))<<8)&0x000fff00)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076841.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 46 warnings, 102 checks, 1722 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076841.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
