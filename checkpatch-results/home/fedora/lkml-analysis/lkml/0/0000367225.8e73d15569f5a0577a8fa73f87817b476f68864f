WARNING:TYPO_SPELLING: 'Proccess' may be misspelled - perhaps 'Process'?
#21: 
Subject: Re: 2.4.20: Proccess stuck in __lock_page ...
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > On Tue, May 27, 2003 at 08:08:43PM +0200, Marc-Christian Petersen wrote:

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#72: 
> > Also make sure that you elvtune -r 0 -w 0 /dev/hda, also the journaling
                                                   ^^^

WARNING:TYPO_SPELLING: 'throught' may be misspelled - perhaps 'thought'?
#84: 
> miss, right? (I looked quickly throught it). Could you explain me the
                                 ^^^^^^^^

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Linus Torvalds <torvalds@transmeta.com>,', should be: 'Linus Torvalds <torvalds@transmeta.com>'
#114: 
To: Linus Torvalds <torvalds@transmeta.com>,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'misterious' may be misspelled - perhaps 'mysterious'?
#131: 
I recently found and fixed a misterious hang that could hang the
                             ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'infact' may be misspelled - perhaps 'in fact'?
#224: 
infact the wrong assumption that allowed the other races to trigger in the
^^^^^^

WARNING:TYPO_SPELLING: 'infact' may be misspelled - perhaps 'in fact'?
#249: 
place. That may have the same race, I heard infact of some report with
                                            ^^^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#300: FILE: drivers/block/ll_rw_blk.c:841:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#301: FILE: drivers/block/ll_rw_blk.c:842:
+			if (waitqueue_active(&q->wait_for_requests[rw]))

WARNING:TYPO_SPELLING: 'suprious' may be misspelled - perhaps 'spurious'?
#338: FILE: fs/buffer.c:167:
+		 * don't do a suprious unplug if we get a racy
 		              ^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: include/linux/pagemap.h:100:
+extern void wakeup_page_waiters(struct page * page);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: include/linux/pagemap.h:100:
+extern void wakeup_page_waiters(struct page * page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: mm/filemap.c:916:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#429: FILE: mm/filemap.c:918:
+	wait_queue_head_t * head;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#432: FILE: mm/filemap.c:921:
+	if (waitqueue_active(head))

ERROR:SPACING: space required before the open brace '{'
#457: FILE: drivers/block/ll_rw_blk.c:1287:
+		if (!rl->count){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#471: FILE: drivers/block/ll_rw_blk.c:1492:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#472: FILE: drivers/block/ll_rw_blk.c:1493:
+			if (waitqueue_active(&rl->wait))

CHECK:BRACES: Unbalanced braces around else statement
#499: FILE: fs/buffer.c:1731:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#555: FILE: include/linux/pagemap.h:126:
+extern void wakeup_page_waiters(struct page * page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: include/linux/pagemap.h:126:
+extern void wakeup_page_waiters(struct page * page);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#594: FILE: mm/filemap.c:354:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: mm/filemap.c:356:
+	wait_queue_head_t * wqh;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#599: FILE: mm/filemap.c:359:
+	if (waitqueue_active(wqh))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 15 warnings, 3 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
