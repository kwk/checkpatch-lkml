WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
* Print the offset in hexadecimal instead of decimal! (similar to other arches)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/x86_64/kernel/process.c:305:
+       printk("RIP: %04lx:", regs->cs & 0xffff);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#78: FILE: arch/x86_64/kernel/process.c:305:
+       printk("RIP: %04lx:", regs->cs & 0xffff);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/x86_64/kernel/process.c:307:
+       printk("RSP: %04lx:%016lx  EFLAGS: %08lx\n", regs->ss, regs->rsp,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#81: FILE: arch/x86_64/kernel/process.c:307:
+       printk("RSP: %04lx:%016lx  EFLAGS: %08lx\n", regs->ss, regs->rsp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: arch/x86_64/kernel/process.c:308:
+       printk("RSP: %04lx:%016lx  EFLAGS: %08lx\n", regs->ss, regs->rsp,
                regs->eflags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/x86_64/kernel/traps.c:98:
+       int i = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/x86_64/kernel/traps.c:99:
+       int i = 0;
+       i += printk("[<%08lx>] ", addr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/x86_64/kernel/traps.c:99:
+       i += printk("[<%08lx>] ", addr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/x86_64/kernel/traps.c:99:
+       i += printk("[<%08lx>] ", addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/x86_64/kernel/traps.c:100:
+       i += __print_symbol("%s", addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/x86_64/kernel/traps.c:101:
+       i += printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: arch/x86_64/kernel/traps.c:101:
+       i += printk("\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/x86_64/kernel/traps.c:103:
+       return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/x86_64/kernel/traps.c:176:
+       printk("Call Trace:\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: arch/x86_64/kernel/traps.c:176:
+       printk("Call Trace:\n");

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#167: FILE: arch/x86_64/kernel/traps.c:178:
+#define HANDLE_STACK(cond)                          \
+       do while (cond) {                           \
+               unsigned long addr = *stack++;      \
+               if (kernel_text_address(addr)) {    \
+                       printk("        ");         \
+                       printk_address(addr);       \
+               }                                   \
        } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/x86_64/kernel/traps.c:179:
+       do while (cond) {                           \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#168: FILE: arch/x86_64/kernel/traps.c:179:
+       do while (cond) {                           \
+               unsigned long addr = *stack++;      \

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/x86_64/kernel/traps.c:180:
+               unsigned long addr = *stack++;      \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/x86_64/kernel/traps.c:180:
+               unsigned long addr = *stack++;      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/x86_64/kernel/traps.c:181:
+               if (kernel_text_address(addr)) {    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/x86_64/kernel/traps.c:181:
+               if (kernel_text_address(addr)) {    \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#170: FILE: arch/x86_64/kernel/traps.c:181:
+               if (kernel_text_address(addr)) {    \
+                       printk("        ");         \

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/x86_64/kernel/traps.c:182:
+                       printk("        ");         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/x86_64/kernel/traps.c:182:
+                       printk("        ");         \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: arch/x86_64/kernel/traps.c:182:
+                       printk("        ");         \

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/x86_64/kernel/traps.c:183:
+                       printk_address(addr);       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/x86_64/kernel/traps.c:183:
+                       printk_address(addr);       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/x86_64/kernel/traps.c:184:
+               }                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/x86_64/kernel/traps.c:184:
+               }                                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/x86_64/kernel/traps.c:187:
+       for( ; ; ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#177: FILE: arch/x86_64/kernel/traps.c:187:
+       for( ; ; ) {
                const char *id;

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: arch/x86_64/kernel/traps.c:187:
+       for( ; ; ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#183: FILE: arch/x86_64/kernel/traps.c:193:
                if (estack_end) {
+                       printk(" <%s>", id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/x86_64/kernel/traps.c:194:
+                       printk(" <%s>", id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/x86_64/kernel/traps.c:194:
+                       printk(" <%s>", id);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: arch/x86_64/kernel/traps.c:194:
+                       printk(" <%s>", id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/x86_64/kernel/traps.c:196:
+                       printk(" <EOE>");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/x86_64/kernel/traps.c:196:
+                       printk(" <EOE>");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#188: FILE: arch/x86_64/kernel/traps.c:196:
+                       printk(" <EOE>");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#195: FILE: arch/x86_64/kernel/traps.c:205:
                        if (stack >= irqstack && stack < irqstack_end) {
+                               printk(" <IRQ>");

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/x86_64/kernel/traps.c:206:
+                               printk(" <IRQ>");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/x86_64/kernel/traps.c:206:
+                               printk(" <IRQ>");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#197: FILE: arch/x86_64/kernel/traps.c:206:
+                               printk(" <IRQ>");

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/x86_64/kernel/traps.c:210:
+                               printk(" <EOI>");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/x86_64/kernel/traps.c:210:
+                               printk(" <EOI>");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: arch/x86_64/kernel/traps.c:210:
+                               printk(" <EOI>");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/kallsyms.h:23:
+extern int __print_symbol(const char *fmt, unsigned long address);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: include/linux/kallsyms.h:43:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: kernel/kallsyms.c:254:
+       return printk(fmt, buffer);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: kernel/kallsyms.c:254:
+       return printk(fmt, buffer);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 39 warnings, 2 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
