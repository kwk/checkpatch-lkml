WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#55: FILE: include/linux/workqueue.h:77:
+int execute_in_process_context(void (*fn)(void *), void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#77: FILE: kernel/workqueue.c:482:
+	void			(*fn)(void *);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wqw)...) over kmalloc(sizeof(struct work_queue_work)...)
#115: FILE: kernel/workqueue.c:520:
+	wqw = kmalloc(sizeof(struct work_queue_work), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#118: FILE: kernel/workqueue.c:523:
+		printk(KERN_ERR "Failed to allocate memory\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 1 checks, 77 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
