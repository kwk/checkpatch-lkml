CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_h8300
#101: FILE: include/asm-h8300/semaphore.h:85:
+	count = &(sem->count_h8300);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_h8300
#110: FILE: include/asm-h8300/semaphore.h:111:
+	count = &(sem->count_h8300);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_h8300
#119: FILE: include/asm-h8300/semaphore.h:137:
+	count = &(sem->count_h8300);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_h8300
#128: FILE: include/asm-h8300/semaphore.h:173:
+	count = &(sem->count_h8300);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: arch/sparc64/kernel/semaphore.c:53:
+^I * ^Iold_val = sem->count_sparc64;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: arch/sparc64/kernel/semaphore.c:116:
+^I * ^Iold_val = sem->count_sparc64;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: arch/sparc64/kernel/semaphore.c:161:
+^I * ^Iold_val = sem->count_sparc64;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: arch/sparc64/kernel/semaphore.c:226:
+^I * ^Iold_val = sem->count_sparc64;$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#488: FILE: include/asm-i386/semaphore.h:118:
+		:"=m" (sem->count_i386)
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#506: FILE: include/asm-i386/semaphore.h:143:
+		:"=a" (result), "=m" (sem->count_i386)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#524: FILE: include/asm-i386/semaphore.h:168:
+		:"=a" (result), "=m" (sem->count_i386)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#542: FILE: include/asm-i386/semaphore.h:193:
+		:"=m" (sem->count_i386)
 		^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_sparc.counter
#581: FILE: include/asm-sparc/semaphore.h:63:
+	ptr = &(sem->count_sparc.counter);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_sparc.counter
#590: FILE: include/asm-sparc/semaphore.h:97:
+	ptr = &(sem->count_sparc.counter);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_sparc.counter
#599: FILE: include/asm-sparc/semaphore.h:132:
+	ptr = &(sem->count_sparc.counter);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sem->count_sparc.counter
#608: FILE: include/asm-sparc/semaphore.h:167:
+	ptr = &(sem->count_sparc.counter);

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#647: FILE: include/asm-x86_64/semaphore.h:119:
+		:"=m" (sem->count_x86_64)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#665: FILE: include/asm-x86_64/semaphore.h:144:
+		:"=a" (result), "=m" (sem->count_x86_64)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#683: FILE: include/asm-x86_64/semaphore.h:168:
+		:"=a" (result), "=m" (sem->count_x86_64)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#700: FILE: include/asm-x86_64/semaphore.h:191:
+		:"=m" (sem->count_x86_64)
 		^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: include/asm-alpha/semaphore.h:26:
+  ^I.wait^I^I= __WAIT_QUEUE_HEAD_INITIALIZER((name).wait),^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1134: FILE: include/asm-alpha/semaphore.h:26:
+  ^I.wait^I^I= __WAIT_QUEUE_HEAD_INITIALIZER((name).wait),^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: include/asm-alpha/semaphore.h:26:
+  ^I.wait^I^I= __WAIT_QUEUE_HEAD_INITIALIZER((name).wait),^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1287: FILE: include/asm-v850/semaphore.h:61:
+	if (atomic_dec_return (&sem->count_v850) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count_v850'
#1287: FILE: include/asm-v850/semaphore.h:61:
+	if (atomic_dec_return (&sem->count_v850) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1296: FILE: include/asm-v850/semaphore.h:69:
+	if (atomic_dec_return (&sem->count_v850) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count_v850'
#1296: FILE: include/asm-v850/semaphore.h:69:
+	if (atomic_dec_return (&sem->count_v850) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1305: FILE: include/asm-v850/semaphore.h:77:
+	if (atomic_dec_return (&sem->count_v850) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count_v850'
#1305: FILE: include/asm-v850/semaphore.h:77:
+	if (atomic_dec_return (&sem->count_v850) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1313: FILE: include/asm-v850/semaphore.h:84:
+	if (atomic_inc_return (&sem->count_v850) <= 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count_v850'
#1313: FILE: include/asm-v850/semaphore.h:84:
+	if (atomic_inc_return (&sem->count_v850) <= 0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1353: FILE: arch/i386/kernel/semaphore.c:171:
+	if (!atomic_add_negative(sleepers, &sem->count_i386)) {
 		wake_up_locked(&sem->wait);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1646: FILE: arch/ia64/kernel/semaphore.c:159:
+	if (!atomic_add_negative(sleepers, &sem->count_ia64)) {
 		wake_up_locked(&sem->wait);
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1836: FILE: arch/m32r/kernel/semaphore.c:180:
+	if (!atomic_add_negative(sleepers, &sem->count_m32r)) {
 		wake_up_locked(&sem->wait);
 	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1916: FILE: arch/x86_64/kernel/semaphore.c:172:
+	if (!atomic_add_negative(sleepers, &sem->count_x86_64)) {
 		wake_up_locked(&sem->wait);
 	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 14 warnings, 12 checks, 1564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
