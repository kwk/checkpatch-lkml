WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> that if you disable the cachable settings in the BIOS for the BIOS/VGA/ROM

WARNING:TYPO_SPELLING: 'cachable' may be misspelled - perhaps 'cacheable'?
#31: 
> that if you disable the cachable settings in the BIOS for the BIOS/VGA/ROM
                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: arch/i386/kernel/mtrr.c:506:
+    unsigned long mask_lo, mask_hi, base_lo, base_hi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/i386/kernel/mtrr.c:508:
+    rdmsr (MTRRphysMask_MSR(reg), mask_lo, mask_hi);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#57: FILE: arch/i386/kernel/mtrr.c:508:
+    rdmsr (MTRRphysMask_MSR(reg), mask_lo, mask_hi);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <MTRRphysMask_MSR>
#57: FILE: arch/i386/kernel/mtrr.c:508:
+    rdmsr (MTRRphysMask_MSR(reg), mask_lo, mask_hi);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: arch/i386/kernel/mtrr.c:518:
+    rdmsr(MTRRphysBase_MSR(reg), base_lo, base_hi);$

CHECK:CAMELCASE: Avoid CamelCase: <MTRRphysBase_MSR>
#66: FILE: arch/i386/kernel/mtrr.c:518:
+    rdmsr(MTRRphysBase_MSR(reg), base_lo, base_hi);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/i386/kernel/mtrr.c:521:
+    mask_lo = 0xff000000 | mask_hi << (32 - PAGE_SHIFT)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/kernel/mtrr.c:526:
+    *size = -mask_lo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/i386/kernel/mtrr.c:527:
+    *base = base_hi << (32 - PAGE_SHIFT) | base_lo >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/i386/kernel/mtrr.c:528:
+    *type = base_lo & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/i386/kernel/mtrr.c:553:
+    *base >>= PAGE_SHIFT;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#99: FILE: arch/i386/kernel/mtrr.c:558:
     if (shift)
+      *size = (reg < 7 ? 0x1UL : 0x40UL) << (shift - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/i386/kernel/mtrr.c:559:
+      *size = (reg < 7 ? 0x1UL : 0x40UL) << (shift - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/i386/kernel/mtrr.c:596:
+    *base = (low & 0xFFFE0000) >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/i386/kernel/mtrr.c:621:
+    *size = (low + 4) << (15 - PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/i386/kernel/mtrr.c:634:
+    *base = centaur_mcr[reg].high >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/mtrr.c:635:
+    *size = -(centaur_mcr[reg].low & 0xfffff000) >> PAGE_SHIFT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: arch/i386/kernel/mtrr.c:665:
+	wrmsr (MTRRphysBase_MSR (reg), base << PAGE_SHIFT | type,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: arch/i386/kernel/mtrr.c:665:
+	wrmsr (MTRRphysBase_MSR (reg), base << PAGE_SHIFT | type,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/i386/kernel/mtrr.c:667:
+	wrmsr (MTRRphysMask_MSR (reg), -size << PAGE_SHIFT | 0x800,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/i386/kernel/mtrr.c:667:
+	wrmsr (MTRRphysMask_MSR (reg), -size << PAGE_SHIFT | 0x800,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/mtrr.c:682:
+    if (reg >= 7)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/i386/kernel/mtrr.c:709:
+    base <<= PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/i386/kernel/mtrr.c:729:
+    u32 regs[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/i386/kernel/mtrr.c:736:
+    rdmsr (0xC0000085, regs[0], regs[1]);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: arch/i386/kernel/mtrr.c:736:
+    rdmsr (0xC0000085, regs[0], regs[1]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: arch/i386/kernel/mtrr.c:744:
+	/* Set the register to the base, the type (off by one) and an
+	   inverted bitmask of the size The size is the only odd

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: arch/i386/kernel/mtrr.c:749:
+	   But ~(x - 1) == ~x + 1 == -x. Two's complement rocks!  */

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#202: FILE: arch/i386/kernel/mtrr.c:750:
+	regs[reg] = (-size>>(15-PAGE_SHIFT) & 0x0001FFFC)
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#202: FILE: arch/i386/kernel/mtrr.c:750:
+	regs[reg] = (-size>>(15-PAGE_SHIFT) & 0x0001FFFC)
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/i386/kernel/mtrr.c:751:
+^I    ^I^I^I| (base<<PAGE_SHIFT) | (type+1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: arch/i386/kernel/mtrr.c:751:
+^I    ^I^I^I| (base<<PAGE_SHIFT) | (type+1);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: arch/i386/kernel/mtrr.c:751:
+	    			| (base<<PAGE_SHIFT) | (type+1);
 	    			       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: arch/i386/kernel/mtrr.c:751:
+	    			| (base<<PAGE_SHIFT) | (type+1);
 	    			                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/mtrr.c:758:
+    wrmsr (0xC0000085, regs[0], regs[1]);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: arch/i386/kernel/mtrr.c:758:
+    wrmsr (0xC0000085, regs[0], regs[1]);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: arch/i386/kernel/mtrr.c:1085:
+	if (lsize == 0) return i;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/i386/kernel/mtrr.c:1102:
+    if (size > 0x2000)$

WARNING:TABSTOP: Statements should start on a tabstop
#251: FILE: arch/i386/kernel/mtrr.c:1114:
+	    if (lsize == 0) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#251: FILE: arch/i386/kernel/mtrr.c:1114:
+	    if (lsize == 0) return i;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lsize == 0'
#256: FILE: arch/i386/kernel/mtrr.c:1118:
+	if ((lsize == 0) && (size >= 0x40)) return i;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size >= 0x40'
#256: FILE: arch/i386/kernel/mtrr.c:1118:
+	if ((lsize == 0) && (size >= 0x40)) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#256: FILE: arch/i386/kernel/mtrr.c:1118:
+	if ((lsize == 0) && (size >= 0x40)) return i;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#265: FILE: arch/i386/kernel/mtrr.c:1212:
+	if ( (base & (PAGE_SIZE - 1)) || (size & (PAGE_SIZE - 1)) )
 	{

ERROR:SPACING: space prohibited after that open parenthesis '('
#265: FILE: arch/i386/kernel/mtrr.c:1212:
+	if ( (base & (PAGE_SIZE - 1)) || (size & (PAGE_SIZE - 1)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#265: FILE: arch/i386/kernel/mtrr.c:1212:
+	if ( (base & (PAGE_SIZE - 1)) || (size & (PAGE_SIZE - 1)) )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#275: FILE: arch/i386/kernel/mtrr.c:1255:
+    /* For all CPU types, the checks above should have ensured that
+       base and size are page aligned */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#275: FILE: arch/i386/kernel/mtrr.c:1255:
+       base and size are page aligned */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/i386/kernel/mtrr.c:1256:
+    base >>= PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/i386/kernel/mtrr.c:1257:
+    size >>= PAGE_SHIFT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: arch/i386/kernel/mtrr.c:1278:
+ ^I    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: arch/i386/kernel/mtrr.c:1278:
+ ^I    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/i386/kernel/mtrr.c:1278:
+ ^I    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#287: FILE: arch/i386/kernel/mtrr.c:1278:
+ 	    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: arch/i386/kernel/mtrr.c:1278:
+ 	    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/i386/kernel/mtrr.c:1279:
+ ^I^I    " 0x%lx000,0x%lx000\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: arch/i386/kernel/mtrr.c:1279:
+ ^I^I    " 0x%lx000,0x%lx000\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/i386/kernel/mtrr.c:1279:
+ ^I^I    " 0x%lx000,0x%lx000\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: arch/i386/kernel/mtrr.c:1279:
+ 	    printk (KERN_WARNING "mtrr: 0x%lx000,0x%lx000 overlaps existing"
+ 		    " 0x%lx000,0x%lx000\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ ^I    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ ^I    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ ^I    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ 	    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ 	    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#297: FILE: arch/i386/kernel/mtrr.c:1288:
+ 	    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/i386/kernel/mtrr.c:1289:
+ 	    printk ( "mtrr: type mismatch for %lx000,%lx000 old: %s new: %s\n",
 		     base, size, attrib_to_str (ltype), attrib_to_str (type) );

WARNING:TABSTOP: Statements should start on a tabstop
#314: FILE: arch/i386/kernel/mtrr.c:1352:
+	    if (lbase < 0x100000 && lbase << PAGE_SHIFT == base

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#315: FILE: arch/i386/kernel/mtrr.c:1353:
+	    if (lbase < 0x100000 && lbase << PAGE_SHIFT == base
+		&& lsize < 0x100000 && lsize << PAGE_SHIFT == size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/i386/kernel/mtrr.c:1362:
+ ^I    printk ("mtrr: no MTRR for %lx000,%lx000 found\n", base, size);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: arch/i386/kernel/mtrr.c:1362:
+ ^I    printk ("mtrr: no MTRR for %lx000,%lx000 found\n", base, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/i386/kernel/mtrr.c:1362:
+ ^I    printk ("mtrr: no MTRR for %lx000,%lx000 found\n", base, size);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: arch/i386/kernel/mtrr.c:1362:
+ 	    printk ("mtrr: no MTRR for %lx000,%lx000 found\n", base, size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: arch/i386/kernel/mtrr.c:1362:
+ 	    printk ("mtrr: no MTRR for %lx000,%lx000 found\n", base, size);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#335: FILE: arch/i386/kernel/mtrr.c:1554:
+	if (gentry.base + gentry.size > 0x100000 || gentry.size == 0x100000)
+	    gentry.base = gentry.size = gentry.type = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#335: FILE: arch/i386/kernel/mtrr.c:1554:
+	if (gentry.base + gentry.size > 0x100000 || gentry.size == 0x100000)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#336: FILE: arch/i386/kernel/mtrr.c:1555:
+	    gentry.base = gentry.size = gentry.type = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#337: FILE: arch/i386/kernel/mtrr.c:1556:
+	else {
+	    gentry.base <<= PAGE_SHIFT;

CHECK:BRACES: Unbalanced braces around else statement
#337: FILE: arch/i386/kernel/mtrr.c:1556:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/i386/kernel/mtrr.c:1561:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#351: FILE: arch/i386/kernel/mtrr.c:1620:
+	if (size == 0) usage_table[i] = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#351: FILE: arch/i386/kernel/mtrr.c:1620:
+	if (size == 0) usage_table[i] = 0;
[...]
 	else
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#355: FILE: arch/i386/kernel/mtrr.c:1623:
+	    if (size < 0x100000 >> PAGE_SHIFT)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000568622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 57 warnings, 14 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000568622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
