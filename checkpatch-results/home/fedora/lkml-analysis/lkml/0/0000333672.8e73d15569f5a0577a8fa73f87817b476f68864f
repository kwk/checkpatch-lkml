WARNING:TYPO_SPELLING: 'pre-empt' may be misspelled - perhaps 'preempt'?
#40: 
>      on a pre-empt kernel.
            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
>   2. segment_base sets "desc = (u32 *)&cpu_gdt_table[smp_processor_id()]".

WARNING:TYPO_SPELLING: 'Pre-empt' may be misspelled - perhaps 'Preempt'?
#60: 
>      Pre-empt switches CPU.
       ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/mm/fault.c:58:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/i386/mm/fault.c:60:
+ * Don't need to do any boundary checking because the CPU did that already $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: arch/i386/mm/fault.c:61:
+ * when the instruction was executed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: arch/i386/mm/fault.c:63:
+static unsigned long segment_base(unsigned seg) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: arch/i386/mm/fault.c:63:
+static unsigned long segment_base(unsigned seg) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/i386/mm/fault.c:64:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: arch/i386/mm/fault.c:66:
+^I/* $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#145: FILE: arch/i386/mm/fault.c:70:
+	if (seg & (1<<2))
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/i386/mm/fault.c:74:
+^Idesc = (void *)desc + (seg & ~7); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: arch/i386/mm/fault.c:74:
+^Idesc = (void *)desc + (seg & ~7); ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/i386/mm/fault.c:75:
+^Ireturn  (desc[0] >> 16) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: arch/i386/mm/fault.c:76:
+^I       ((desc[1] & 0xFF) << 16) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/i386/mm/fault.c:77:
+^I        (desc[1] & 0xFF000000);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: arch/i386/mm/fault.c:78:
+}  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/i386/mm/fault.c:80:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/i386/mm/fault.c:85:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/i386/mm/fault.c:88:
+^Iint prefetch = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/i386/mm/fault.c:91:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/i386/mm/fault.c:93:
+^I * More complicated races with unmapped EIP are handled elsewhere for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/i386/mm/fault.c:97:
+^I^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: arch/i386/mm/fault.c:100:
+^I^Iaddr += regs->xcs << 4; $

ERROR:SPACING: spaces required around that '&&' (ctx:WxV)
#176: FILE: arch/i386/mm/fault.c:101:
+	else if (unlikely(regs->xcs != __USER_CS &&regs->xcs != __KERNEL_CS))
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: arch/i386/mm/fault.c:104:
+^Ifor (i = 0; scan_more && i < 15; i++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/mm/fault.c:112:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: arch/i386/mm/fault.c:114:
+^I^Iinstr_hi = opcode & 0xf0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/i386/mm/fault.c:115:
+^I^Iinstr_lo = opcode & 0x0f; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/i386/mm/fault.c:118:
+^I^Iswitch (instr_hi) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: arch/i386/mm/fault.c:124:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/mm/fault.c:128:
+^I^I^Ibreak;^I^I$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#206: FILE: arch/i386/mm/fault.c:131:
+			scan_more = !instr_lo || (instr_lo>>1) == 1;
 			                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/i386/mm/fault.c:132:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: arch/i386/mm/fault.c:138:
+^I^I^Iif (__get_user(opcode, instr)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/i386/mm/fault.c:142:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/i386/mm/fault.c:146:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/i386/mm/fault.c:153:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: arch/i386/mm/fault.c:157:
+^Ireturn __is_prefetch(regs, addr); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: arch/i386/mm/fault.c:158:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: arch/i386/mm/fault.c:306:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: arch/i386/mm/fault.c:307:
+^I^I * Valid to do another page fault here because this one came $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: arch/i386/mm/fault.c:345:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: arch/i386/mm/fault.c:347:
+^I * had been triggered by is_prefetch fixup_exception would have $

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/i386/mm/fault.c:350:
+ ^Iif (is_prefetch(regs, address))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: arch/i386/mm/fault.c:350:
+ ^Iif (is_prefetch(regs, address))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/i386/mm/fault.c:350:
+ ^Iif (is_prefetch(regs, address))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/i386/mm/fault.c:351:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: arch/i386/mm/fault.c:351:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/i386/mm/fault.c:351:
+ ^I^Ireturn;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 9 warnings, 2 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
