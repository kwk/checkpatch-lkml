WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/asm-arm/mutex.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#56: FILE: include/asm-arm/mutex.h:2:
+ * include/asm-arm/mutex.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#80: FILE: include/asm-arm/mutex.h:26:
+#define __mutex_fastpath_lock(count, fail_fn)				\
+do {									\
+	/* type-check the function too: */				\
+	void fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res;						\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%2]	\n"				\
+		"sub	%0, %0, #1	\n"				\
+		"strex	%1, %0, [%2]	\n"				\
+									\
+		: "=&r" (__res), "=&r" (__ex_flag)			\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	if (unlikely(__res || __ex_flag))				\
+		fail_fn(count);						\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fail_fn' - possible side-effects?
#80: FILE: include/asm-arm/mutex.h:26:
+#define __mutex_fastpath_lock(count, fail_fn)				\
+do {									\
+	/* type-check the function too: */				\
+	void fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res;						\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%2]	\n"				\
+		"sub	%0, %0, #1	\n"				\
+		"strex	%1, %0, [%2]	\n"				\
+									\
+		: "=&r" (__res), "=&r" (__ex_flag)			\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	if (unlikely(__res || __ex_flag))				\
+		fail_fn(count);						\
+} while (0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#90: FILE: include/asm-arm/mutex.h:36:
+		"ldrex	%0, [%2]	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#91: FILE: include/asm-arm/mutex.h:37:
+		"sub	%0, %0, #1	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#92: FILE: include/asm-arm/mutex.h:38:
+		"strex	%1, %0, [%2]	\n"				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: include/asm-arm/mutex.h:42:
+		: "cc","memory" );					\
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: include/asm-arm/mutex.h:42:
+		: "cc","memory" );					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#102: FILE: include/asm-arm/mutex.h:48:
+#define __mutex_fastpath_lock_retval(count, fail_fn)			\
+({									\
+	/* type-check the function too: */				\
+	int fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res;						\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%2]	\n"				\
+		"sub	%0, %0, #1	\n"				\
+		"strex	%1, %0, [%2]	\n"				\
+									\
+		: "=&r" (__res), "=&r" (__ex_flag)			\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	__res |= __ex_flag;						\
+	if (unlikely(__res != 0))					\
+		__res = fail_fn(count);					\
+	__res;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fail_fn' - possible side-effects?
#102: FILE: include/asm-arm/mutex.h:48:
+#define __mutex_fastpath_lock_retval(count, fail_fn)			\
+({									\
+	/* type-check the function too: */				\
+	int fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res;						\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%2]	\n"				\
+		"sub	%0, %0, #1	\n"				\
+		"strex	%1, %0, [%2]	\n"				\
+									\
+		: "=&r" (__res), "=&r" (__ex_flag)			\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	__res |= __ex_flag;						\
+	if (unlikely(__res != 0))					\
+		__res = fail_fn(count);					\
+	__res;								\
+})

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#112: FILE: include/asm-arm/mutex.h:58:
+		"ldrex	%0, [%2]	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#113: FILE: include/asm-arm/mutex.h:59:
+		"sub	%0, %0, #1	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#114: FILE: include/asm-arm/mutex.h:60:
+		"strex	%1, %0, [%2]	\n"				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-arm/mutex.h:64:
+		: "cc","memory" );					\
 		      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: include/asm-arm/mutex.h:64:
+		: "cc","memory" );					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#131: FILE: include/asm-arm/mutex.h:77:
+#define __mutex_fastpath_unlock(count, fail_fn)				\
+do {									\
+	/* type-check the function too: */				\
+	void fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res, __orig;					\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%3]	\n"				\
+		"add	%1, %0, #1	\n"				\
+		"strex	%2, %1, [%3]	\n"				\
+									\
+		: "=&r" (__orig), "=&r" (__res), "=&r" (__ex_flag)	\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	if (unlikely(__orig || __ex_flag))				\
+		fail_fn(count);						\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fail_fn' - possible side-effects?
#131: FILE: include/asm-arm/mutex.h:77:
+#define __mutex_fastpath_unlock(count, fail_fn)				\
+do {									\
+	/* type-check the function too: */				\
+	void fastcall (*__tmp)(atomic_t *) = fail_fn;			\
+	int __ex_flag, __res, __orig;					\
+									\
+	(void)__tmp;							\
+	typecheck(atomic_t *, count);					\
+									\
+	__asm__ (							\
+		"ldrex	%0, [%3]	\n"				\
+		"add	%1, %0, #1	\n"				\
+		"strex	%2, %1, [%3]	\n"				\
+									\
+		: "=&r" (__orig), "=&r" (__res), "=&r" (__ex_flag)	\
+		: "r" (&(count)->counter)				\
+		: "cc","memory" );					\
+									\
+	if (unlikely(__orig || __ex_flag))				\
+		fail_fn(count);						\
+} while (0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#141: FILE: include/asm-arm/mutex.h:87:
+		"ldrex	%0, [%3]	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#142: FILE: include/asm-arm/mutex.h:88:
+		"add	%1, %0, #1	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#143: FILE: include/asm-arm/mutex.h:89:
+		"strex	%2, %1, [%3]	\n"				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#147: FILE: include/asm-arm/mutex.h:93:
+		: "cc","memory" );					\
 		      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#147: FILE: include/asm-arm/mutex.h:93:
+		: "cc","memory" );					\

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#171: FILE: include/asm-arm/mutex.h:117:
+	__asm__ (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#173: FILE: include/asm-arm/mutex.h:119:
+		"1: ldrex	%0, [%3]	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#174: FILE: include/asm-arm/mutex.h:120:
+		"subs		%1, %0, #1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#175: FILE: include/asm-arm/mutex.h:121:
+		"strexeq	%2, %1, [%3]	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#176: FILE: include/asm-arm/mutex.h:122:
+		"movlt		%0, #0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#177: FILE: include/asm-arm/mutex.h:123:
+		"cmpeq		%2, #0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#178: FILE: include/asm-arm/mutex.h:124:
+		"bgt		1b		\n"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#182: FILE: include/asm-arm/mutex.h:128:
+		: "cc", "memory" );

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 17 warnings, 7 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
