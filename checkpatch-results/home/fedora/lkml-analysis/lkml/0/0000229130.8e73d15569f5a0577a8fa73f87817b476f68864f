WARNING:LINE_SPACING: Missing a blank line after declarations
#45: FILE: fs/fuse/dir.c:206:
+	struct fuse_inode *fi = INO_FI(inode);
+	fi->i_time = jiffies - 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: fs/fuse/dir.c:216:
+^Iinode = fuse_iget(dir->i_sb, outarg->nodeid, outarg->generation, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#55: FILE: fs/fuse/dir.c:216:
+	struct fuse_inode *fi;
+	inode = fuse_iget(dir->i_sb, outarg->nodeid, outarg->generation, 

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#65: FILE: fs/fuse/dir.c:226:
+		iput(inode);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#66: FILE: fs/fuse/dir.c:227:
+		printk("fuse_mknod: inode has wrong type\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#119: FILE: fs/fuse/dir.c:280:
+		       struct nameidata *nd)
 		                         ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: fs/fuse/dir.c:328:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/fuse/dir.c:362:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: fs/fuse/dir.c:375:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: fs/fuse/dir.c:377:
+                   the inode does have more links this will be$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#216: FILE: fs/fuse/dir.c:377:
+		/* Set nlink to zero so the inode can be cleared, if
+                   the inode does have more links this will be

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: fs/fuse/dir.c:378:
+                   discovered at the next lookup/getattr */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#217: FILE: fs/fuse/dir.c:378:
+                   discovered at the next lookup/getattr */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: fs/fuse/dir.c:393:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: fs/fuse/dir.c:476:
+	if (!err) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#320: FILE: fs/fuse/dir.c:481:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: fs/fuse/dir.c:719:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: fs/fuse/dir.c:721:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: fs/fuse/dir.c:750:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#371: FILE: fs/fuse/dir.c:753:
+		unsigned long limit;
+		is_truncate = 1;

CHECK:SPACING: No space is necessary after a cast
#373: FILE: fs/fuse/dir.c:755:
+		if (limit != RLIM_INFINITY && attr->ia_size > (loff_t) limit) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: fs/fuse/dir.c:782:
+			loff_t origsize = i_size_read(inode);
+			i_size_write(inode, outarg.attr.size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: fs/fuse/dir.c:790:
+^I^I$

CHECK:BIT_MACRO: Prefer using the BIT macro
#451: FILE: include/linux/fuse.h:53:
+#define FATTR_MODE	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#452: FILE: include/linux/fuse.h:54:
+#define FATTR_UID	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#453: FILE: include/linux/fuse.h:55:
+#define FATTR_GID	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#454: FILE: include/linux/fuse.h:56:
+#define FATTR_SIZE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#455: FILE: include/linux/fuse.h:57:
+#define FATTR_ATIME	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#456: FILE: include/linux/fuse.h:58:
+#define FATTR_MTIME	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#457: FILE: include/linux/fuse.h:59:
+#define FATTR_CTIME	(1 << 6)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 9 warnings, 10 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
