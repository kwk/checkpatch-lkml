WARNING:TYPO_SPELLING: 'cheked' may be misspelled - perhaps 'checked'?
#38: 
yet cheked such scenarios in 2.5).
    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/ide/ide-cd.c:3256:
+/* Power Management state machine. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#63: FILE: drivers/ide/ide-cd.c:3261:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#64: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#64: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: drivers/ide/ide-cd.c:3266:
+static ide_startstop_t ide_cdrom_start_power_step (ide_drive_t *drive, struct request *rq)

ERROR:SPACING: space required before the open parenthesis '('
#74: FILE: drivers/ide/ide-cd.c:3272:
+	switch(rq->pm->pm_step) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#87: FILE: drivers/ide/ide-cd.c:3285:
+		if (HWIF(drive)->ide_dma_check == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: drivers/ide/ide-disk.c:1501:
+static void idedisk_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: drivers/ide/ide-disk.c:1503:
+	switch(rq->pm->pm_step) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: drivers/ide/ide-disk.c:1516:
+static ide_startstop_t idedisk_start_power_step (ide_drive_t *drive, struct request *rq)

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: drivers/ide/ide-disk.c:1522:
+	switch(rq->pm->pm_step) {

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#225: FILE: drivers/ide/ide-disk.c:1530:
+			args->tfRegister[IDE_COMMAND_OFFSET]	= WIN_FLUSH_CACHE_EXT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: drivers/ide/ide-disk.c:1533:
+^I^Iargs->command_type^I^I ^I^I= ide_cmd_type_parser(args);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#244: FILE: drivers/ide/ide-disk.c:1549:
+		if (HWIF(drive)->ide_dma_check == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/ide/ide-io.c:143:
+ *^I@drive: target drive $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/ide/ide-io.c:147:
+ *^Iif necessary. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/ide/ide-io.c:149:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/ide/ide-io.c:149:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: drivers/ide/ide-io.c:150:
+static void ide_complete_pm_request (ide_drive_t *drive, struct request *rq)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/ide/ide-io.c:154:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: drivers/ide/ide-io.c:156:
+	printk("%s: completing PM request, suspend: %d\n", drive->name, suspend);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/ide/ide-io.c:157:
+#endif^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: drivers/ide/ide-io.c:172:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: drivers/ide/ide-io.c:251:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/ide/ide-io.c:252:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",
+			drive->name, rq->pm->pm_step, stat, err);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#331: FILE: drivers/ide/ide-io.c:660:
+	if ((rq->flags & REQ_PM_SUSPEND)
+	  && rq->pm->pm_step == ide_pm_state_start_suspend)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#335: FILE: drivers/ide/ide-io.c:664:
+	else if ((rq->flags & REQ_PM_RESUME)
+	  && rq->pm->pm_step == ide_pm_state_start_resume) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: drivers/ide/ide-io.c:673:
+		printk("%s: Wakeup request inited, waiting for !BSY...\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/ide/ide-io.c:674:
+#endif^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#348: FILE: drivers/ide/ide-io.c:677:
+			printk(KERN_WARNING "%s: bus not ready on wakeup\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#353: FILE: drivers/ide/ide-io.c:682:
+			printk(KERN_WARNING "%s: drive not ready on wakeup\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/ide/ide-io.c:685:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#366: FILE: drivers/ide/ide-io.c:697:
+			printk("%s: start_power_step(step: %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/ide/ide-io.c:698:
+			printk("%s: start_power_step(step: %d)\n",
+				drive->name, rq->pm->pm_step);

CHECK:BRACES: braces {} should be used on all arms of this statement
#370: FILE: drivers/ide/ide-io.c:701:
+			if (startstop == ide_stopped
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#371: FILE: drivers/ide/ide-io.c:702:
+			if (startstop == ide_stopped
+			  && rq->pm->pm_step == ide_pm_state_completed) {

CHECK:BRACES: Unbalanced braces around else statement
#374: FILE: drivers/ide/ide-io.c:705:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/ide/ide-io.c:925:
+^I^I * $

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#396: FILE: drivers/ide/ide-io.c:932:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#396: FILE: drivers/ide/ide-io.c:932:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/ide/ide-io.c:937:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/ide/ide-io.c:1386:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/ide/ide-io.c:1392:
+^I *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: drivers/ide/ide-iops.c:1328:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: drivers/ide/ide-iops.c:1329:
+	while(timeout--) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#485: FILE: drivers/ide/ide-iops.c:1347:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#588: FILE: drivers/ide/ide.c:1466:
+EXPORT_SYMBOL(generic_ide_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#612: FILE: drivers/ide/ide.c:1490:
+EXPORT_SYMBOL(generic_ide_resume);

CHECK:BIT_MACRO: Prefer using the BIT macro
#655: FILE: include/linux/blkdev.h:164:
+#define REQ_PREEMPT	(1 << __REQ_PREEMPT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#656: FILE: include/linux/blkdev.h:165:
+#define REQ_PM_SUSPEND	(1 << __REQ_PM_SUSPEND)

CHECK:BIT_MACRO: Prefer using the BIT macro
#657: FILE: include/linux/blkdev.h:166:
+#define REQ_PM_RESUME	(1 << __REQ_PM_RESUME)

CHECK:BIT_MACRO: Prefer using the BIT macro
#658: FILE: include/linux/blkdev.h:167:
+#define REQ_PM_SHUTDOWN	(1 << __REQ_PM_SHUTDOWN)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#660: FILE: include/linux/blkdev.h:169:
+#define blk_request_is_pm(rq)	\
+	((rq->flags & (REQ_PM_SUSPEND | REQ_PM_RESUME)) != 0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#667: FILE: include/linux/blkdev.h:176:
+struct request_pm_state
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#670: FILE: include/linux/blkdev.h:179:
+	void*	data;		/* for driver use */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#691: FILE: include/linux/ide.h:1148:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: include/linux/ide.h:1150:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: include/linux/ide.h:1154:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: include/linux/ide.h:1163:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: include/linux/ide.h:1169:
+ * $

WARNING:TYPO_SPELLING: 'epxected' may be misspelled - perhaps 'expected'?
#713: FILE: include/linux/ide.h:1170:
+ * Subdrivers are epxected to define their own additional power
                   ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#724: FILE: include/linux/ide.h:1181:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#732: FILE: include/linux/ide.h:1211:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#732: FILE: include/linux/ide.h:1211:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#733: FILE: include/linux/ide.h:1212:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#733: FILE: include/linux/ide.h:1212:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#733: FILE: include/linux/ide.h:1212:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#733: FILE: include/linux/ide.h:1212:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: include/linux/ide.h:1221:
+extern int generic_ide_suspend(struct device *dev, u32 state, u32 level);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: include/linux/ide.h:1222:
+extern int generic_ide_resume(struct device *dev, u32 level);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: include/linux/ide.h:1575:
+extern int ide_wait_not_busy(ide_hwif_t *hwif, unsigned long timeout);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 26 warnings, 23 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
