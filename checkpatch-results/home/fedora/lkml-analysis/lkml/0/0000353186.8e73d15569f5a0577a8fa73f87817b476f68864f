WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#141: 
> > +     hwif->selectproc = NULL;        /* Use the default selection routine to select drive */

WARNING:TYPO_SPELLING: 'doesnot' may be misspelled - perhaps 'doesn't'?
#358: 
The IOC4 doesnot support the generic IDE Multiword-2 DMA scatter-gather
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#485: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#486: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#487: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#488: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#489: 
#	           ChangeSet	1.1016  -> 1.1017 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#490: 
#	drivers/ide/pci/Makefile	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#491: 
#	include/linux/pci_ids.h	1.66    -> 1.67   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#492: 
#	         MAINTAINERS	1.102   -> 1.103  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#493: 
#	drivers/ide/Config.in	1.34    -> 1.35   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#494: 
#	Documentation/Configure.help	1.171   -> 1.172  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#495: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#496: 
#	               (new)	        -> 1.2     drivers/ide/pci/sgiioc4.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#497: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#498: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#499: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#500: 
# 03/07/17	cw@taniwha.engr.sgi.com	1.1017

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#501: 
# foo

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#502: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#503: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#505: 
--- a/Documentation/Configure.help	Thu Jul 17 17:43:20 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#529: FILE: MAINTAINERS:955:
+P:	Aniket Malatpure
+M:	aniket@sgi.com

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#561: FILE: drivers/ide/pci/sgiioc4.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#581: FILE: drivers/ide/pci/sgiioc4.c:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#600: FILE: drivers/ide/pci/sgiioc4.c:40:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#608: FILE: drivers/ide/pci/sgiioc4.c:48:
+extern int dma_timer_expiry(ide_drive_t * drive);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#611: FILE: drivers/ide/pci/sgiioc4.c:51:
+static u8 sgiioc4_proc = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#614: FILE: drivers/ide/pci/sgiioc4.c:54:
+static int n_sgiioc4_devs = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: drivers/ide/pci/sgiioc4.c:91:
+		memcpy(hwif->io_ports, hwif->hw.io_ports, sizeof (hwif->io_ports));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#663: FILE: drivers/ide/pci/sgiioc4.c:103:
+	(void) ide_init_sgiioc4(hwif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#668: FILE: drivers/ide/pci/sgiioc4.c:108:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n", hwif->name, name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#668: FILE: drivers/ide/pci/sgiioc4.c:108:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n", hwif->name, name);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#674: FILE: drivers/ide/pci/sgiioc4.c:114:
+	extern pciio_endian_t snia_pciio_endian_set(struct pci_dev *pci_dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#679: FILE: drivers/ide/pci/sgiioc4.c:119:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",name,dev->slot_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: drivers/ide/pci/sgiioc4.c:119:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",name,dev->slot_name);
 		                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#679: FILE: drivers/ide/pci/sgiioc4.c:119:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",name,dev->slot_name);
 		                                                                ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#679: FILE: drivers/ide/pci/sgiioc4.c:119:
+		printk(KERN_INFO "Failed to enable device %s at slot %s \n",name,dev->slot_name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#700: FILE: drivers/ide/pci/sgiioc4.c:140:
+sgiioc4_init_hwif_ports(hw_regs_t * hw, ide_ioreg_t data_port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#717: FILE: drivers/ide/pci/sgiioc4.c:157:
+sgiioc4_resetproc(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#724: FILE: drivers/ide/pci/sgiioc4.c:164:
+sgiioc4_maskproc(ide_drive_t * drive, int mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: drivers/ide/pci/sgiioc4.c:167:
+	ide_hwif_t *hwif = HWIF(drive);
+	hwif->OUTB(mask ? (drive->ctl | 2) : (drive->ctl & ~2), IDE_CONTROL_REG);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#731: FILE: drivers/ide/pci/sgiioc4.c:171:
+ide_init_sgiioc4(ide_hwif_t * hwif)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#746: FILE: drivers/ide/pci/sgiioc4.c:186:
+	hwif->resetproc = &sgiioc4_resetproc;	/* Reset the IOC4 DMA engine, clear interrupts etc */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#774: FILE: drivers/ide/pci/sgiioc4.c:214:
+sgiioc4_ide_dma_read(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#783: FILE: drivers/ide/pci/sgiioc4.c:223:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_FROMDEVICE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#794: FILE: drivers/ide/pci/sgiioc4.c:234:
+	/* Hard Disks not supported on IOC4 as yet (05/22/2003) ... this code will be useful when Disks are supported */

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/ide/pci/sgiioc4.c:238:
+		ide_task_t *args = rq->special;
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#798: FILE: drivers/ide/pci/sgiioc4.c:238:
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#811: FILE: drivers/ide/pci/sgiioc4.c:251:
+sgiioc4_ide_dma_write(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#820: FILE: drivers/ide/pci/sgiioc4.c:260:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_TODEVICE))) {

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#832: FILE: drivers/ide/pci/sgiioc4.c:272:
+	/* Hard Disks not supported on IOC4 as yet (05/22/2003) ... this code will be useful when Disks are supported */

WARNING:LINE_SPACING: Missing a blank line after declarations
#836: FILE: drivers/ide/pci/sgiioc4.c:276:
+		ide_task_t *args = rq->special;
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#849: FILE: drivers/ide/pci/sgiioc4.c:289:
+sgiioc4_ide_dma_begin(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#862: FILE: drivers/ide/pci/sgiioc4.c:302:
+sgiioc4_ide_dma_end(ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#866: FILE: drivers/ide/pci/sgiioc4.c:306:
+	uint64_t dma_base = hwif->dma_base;

CHECK:SPACING: No space is necessary after a cast
#868: FILE: drivers/ide/pci/sgiioc4.c:308:
+	unsigned long *ending_dma = (unsigned long *) hwif->dma_base2;

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#880: FILE: drivers/ide/pci/sgiioc4.c:320:
+		printk(KERN_ERR "sgiioc4_stopdma(%s): IOC4 DMA STOP bit is still 1 : ioc4_dma_reg 0x%x\n", drive->name, ioc4_dma);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#880: FILE: drivers/ide/pci/sgiioc4.c:320:
+		printk(KERN_ERR "sgiioc4_stopdma(%s): IOC4 DMA STOP bit is still 1 : ioc4_dma_reg 0x%x\n", drive->name, ioc4_dma);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#897: FILE: drivers/ide/pci/sgiioc4.c:337:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA Data in Memory\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#897: FILE: drivers/ide/pci/sgiioc4.c:337:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA Data in Memory\n", drive->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_ide_dma_end', this function's name, in a string
#897: FILE: drivers/ide/pci/sgiioc4.c:337:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA Data in Memory\n", drive->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#904: FILE: drivers/ide/pci/sgiioc4.c:344:
+			printk(KERN_ERR "sgiioc4_ide_dma_end(%s) : WARNING!!! byte_count_at_dev %d != byte_count_at_mem %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_ide_dma_end', this function's name, in a string
#904: FILE: drivers/ide/pci/sgiioc4.c:344:
+			printk(KERN_ERR "sgiioc4_ide_dma_end(%s) : WARNING!!! byte_count_at_dev %d != byte_count_at_mem %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#916: FILE: drivers/ide/pci/sgiioc4.c:356:
+sgiioc4_ide_dma_check(ide_drive_t * drive)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#918: FILE: drivers/ide/pci/sgiioc4.c:358:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
 	                                ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#918: FILE: drivers/ide/pci/sgiioc4.c:358:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
 	                                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#918: FILE: drivers/ide/pci/sgiioc4.c:358:
+	if (ide_config_drive_speed(drive,XFER_MW_DMA_2)!=0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#919: FILE: drivers/ide/pci/sgiioc4.c:359:
+		printk(KERN_INFO "Couldnot set %s in Multimode-2 DMA mode | Drive %s using PIO instead\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: drivers/ide/pci/sgiioc4.c:360:
+		printk(KERN_INFO "Couldnot set %s in Multimode-2 DMA mode | Drive %s using PIO instead\n",
+				drive->name, drive->name);

CHECK:BRACES: Unbalanced braces around else statement
#922: FILE: drivers/ide/pci/sgiioc4.c:362:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#929: FILE: drivers/ide/pci/sgiioc4.c:369:
+sgiioc4_ide_dma_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#937: FILE: drivers/ide/pci/sgiioc4.c:377:
+sgiioc4_ide_dma_off(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#939: FILE: drivers/ide/pci/sgiioc4.c:379:
+	printk(KERN_INFO "%s: DMA disabled\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#945: FILE: drivers/ide/pci/sgiioc4.c:385:
+sgiioc4_ide_dma_off_quietly(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#954: FILE: drivers/ide/pci/sgiioc4.c:394:
+sgiioc4_ide_dma_test_irq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#960: FILE: drivers/ide/pci/sgiioc4.c:400:
+sgiioc4_ide_dma_host_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#969: FILE: drivers/ide/pci/sgiioc4.c:409:
+sgiioc4_ide_dma_host_off(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#977: FILE: drivers/ide/pci/sgiioc4.c:417:
+sgiioc4_ide_dma_count(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#983: FILE: drivers/ide/pci/sgiioc4.c:423:
+sgiioc4_ide_dma_verbose(ide_drive_t * drive)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#986: FILE: drivers/ide/pci/sgiioc4.c:426:
+		printk(", UDMA(16)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#988: FILE: drivers/ide/pci/sgiioc4.c:428:
+		printk(", PIO");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#994: FILE: drivers/ide/pci/sgiioc4.c:434:
+sgiioc4_ide_dma_lostirq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1002: FILE: drivers/ide/pci/sgiioc4.c:442:
+sgiioc4_ide_dma_timeout(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1004: FILE: drivers/ide/pci/sgiioc4.c:444:
+	printk(KERN_ERR "%s: timeout waiting for DMA\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: drivers/ide/pci/sgiioc4.c:454:
+	u8 reg = (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: drivers/ide/pci/sgiioc4.c:459:
+			unsigned int intr_reg = (u32) inl(other_ir);

CHECK:SPACING: No space is necessary after a cast
#1024: FILE: drivers/ide/pci/sgiioc4.c:464:
+				intr_reg = (u32) inl(other_ir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1034: FILE: drivers/ide/pci/sgiioc4.c:474:
+ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1036: FILE: drivers/ide/pci/sgiioc4.c:476:
+	int num_ports = sizeof (ioc4_dma_regs_t);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1038: FILE: drivers/ide/pci/sgiioc4.c:478:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name, dma_base, dma_base + num_ports - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1038: FILE: drivers/ide/pci/sgiioc4.c:478:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name, dma_base, dma_base + num_ports - 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1041: FILE: drivers/ide/pci/sgiioc4.c:481:
+		printk(KERN_ERR "ide_dma_sgiioc4(%s) -- Error, Port Addresses 0x%p to 0x%p ALREADY in use\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_dma_sgiioc4', this function's name, in a string
#1041: FILE: drivers/ide/pci/sgiioc4.c:481:
+		printk(KERN_ERR "ide_dma_sgiioc4(%s) -- Error, Port Addresses 0x%p to 0x%p ALREADY in use\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1054: FILE: drivers/ide/pci/sgiioc4.c:494:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hwif->sg_table)...) over kmalloc(sizeof (struct scatterlist)...)
#1054: FILE: drivers/ide/pci/sgiioc4.c:494:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1057: FILE: drivers/ide/pci/sgiioc4.c:497:
+		pci_free_consistent(hwif->pci_dev, IOC4_PRD_ENTRIES * IOC4_PRD_BYTES, hwif->dmatable_cpu, hwif->dmatable_dma);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1061: FILE: drivers/ide/pci/sgiioc4.c:501:
+	hwif->dma_base2 = (unsigned long) pci_alloc_consistent(hwif->pci_dev, IOC4_IDE_CACHELINE_SIZE,

CHECK:SPACING: No space is necessary after a cast
#1061: FILE: drivers/ide/pci/sgiioc4.c:501:
+	hwif->dma_base2 = (unsigned long) pci_alloc_consistent(hwif->pci_dev, IOC4_IDE_CACHELINE_SIZE,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1062: FILE: drivers/ide/pci/sgiioc4.c:502:
+							       (dma_addr_t*)&(hwif->dma_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hwif->dma_status
#1062: FILE: drivers/ide/pci/sgiioc4.c:502:
+							       (dma_addr_t*)&(hwif->dma_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1065: FILE: drivers/ide/pci/sgiioc4.c:505:
+		pci_free_consistent(hwif->pci_dev, IOC4_PRD_ENTRIES * IOC4_PRD_BYTES, hwif->dmatable_cpu, hwif->dmatable_dma);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1073: FILE: drivers/ide/pci/sgiioc4.c:513:
+	printk(KERN_INFO "ide_dma_sgiioc4() -- Error! Unable to allocate DMA Maps for drive %s\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1073: FILE: drivers/ide/pci/sgiioc4.c:513:
+	printk(KERN_INFO "ide_dma_sgiioc4() -- Error! Unable to allocate DMA Maps for drive %s\n", hwif->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_dma_sgiioc4', this function's name, in a string
#1073: FILE: drivers/ide/pci/sgiioc4.c:513:
+	printk(KERN_INFO "ide_dma_sgiioc4() -- Error! Unable to allocate DMA Maps for drive %s\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1074: FILE: drivers/ide/pci/sgiioc4.c:514:
+	printk(KERN_INFO "Changing from DMA to PIO mode for Drive %s \n", hwif->name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1074: FILE: drivers/ide/pci/sgiioc4.c:514:
+	printk(KERN_INFO "Changing from DMA to PIO mode for Drive %s \n", hwif->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1083: FILE: drivers/ide/pci/sgiioc4.c:523:
+sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1088: FILE: drivers/ide/pci/sgiioc4.c:528:
+	uint64_t dma_base = hwif->dma_base;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1089: FILE: drivers/ide/pci/sgiioc4.c:529:
+	uint32_t dma_addr, ending_dma_addr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1094: FILE: drivers/ide/pci/sgiioc4.c:534:
+		printk(KERN_WARNING "sgiioc4_configure_for_dma(%s):Warning!! IOC4 DMA from previous transfer was still active\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_configure_for_dma', this function's name, in a string
#1094: FILE: drivers/ide/pci/sgiioc4.c:534:
+		printk(KERN_WARNING "sgiioc4_configure_for_dma(%s):Warning!! IOC4 DMA from previous transfer was still active\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1095: FILE: drivers/ide/pci/sgiioc4.c:535:
+		printk(KERN_WARNING "sgiioc4_configure_for_dma(%s):Warning!! IOC4 DMA from previous transfer was still active\n",
+			drive->name);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1105: FILE: drivers/ide/pci/sgiioc4.c:545:
+			printk(KERN_ERR "sgiioc4_configure_for__dma(%s) : IOC4 Dma STOP bit is still 1\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1105: FILE: drivers/ide/pci/sgiioc4.c:545:
+			printk(KERN_ERR "sgiioc4_configure_for__dma(%s) : IOC4 Dma STOP bit is still 1\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1110: FILE: drivers/ide/pci/sgiioc4.c:550:
+		printk(KERN_WARNING "sgiioc4_configure_for__dma(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1110: FILE: drivers/ide/pci/sgiioc4.c:550:
+		printk(KERN_WARNING "sgiioc4_configure_for__dma(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1121: FILE: drivers/ide/pci/sgiioc4.c:561:
+			printk(KERN_ERR "sgiioc4_configure_for__dma(%s) : IOC4 DMA STOP bit is still 1\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1121: FILE: drivers/ide/pci/sgiioc4.c:561:
+			printk(KERN_ERR "sgiioc4_configure_for__dma(%s) : IOC4 DMA STOP bit is still 1\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#1129: FILE: drivers/ide/pci/sgiioc4.c:569:
+	memset((unsigned int *) hwif->dma_base2, 0,IOC4_IDE_CACHELINE_SIZE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/ide/pci/sgiioc4.c:569:
+	memset((unsigned int *) hwif->dma_base2, 0,IOC4_IDE_CACHELINE_SIZE);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/ide/pci/sgiioc4.c:571:
+	hwif->OUTL(ending_dma_addr,dma_base + IOC4_DMA_END_ADDR * 4);
 	                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1137: FILE: drivers/ide/pci/sgiioc4.c:577:
+/* IOC4 Scatter Gather list Format ^I^I^I^I^I^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1141: FILE: drivers/ide/pci/sgiioc4.c:581:
+/* | Upper 32 bits - Zero ^I^I| ^ILower 32 bits- address^I     |^I*/$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1148: FILE: drivers/ide/pci/sgiioc4.c:588:
+sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq, int ddir)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1156: FILE: drivers/ide/pci/sgiioc4.c:596:
+		hwif->sg_nents = i = sgiioc4_ide_raw_build_sglist(hwif, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1158: FILE: drivers/ide/pci/sgiioc4.c:598:
+		hwif->sg_nents = i = sgiioc4_ide_build_sglist(hwif, rq, ddir);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1167: FILE: drivers/ide/pci/sgiioc4.c:607:
+		int cur_len;
+		cur_addr = sg_dma_address(sg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1172: FILE: drivers/ide/pci/sgiioc4.c:612:
+				printk(KERN_WARNING "%s: DMA table too small\n", drive->name);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1175: FILE: drivers/ide/pci/sgiioc4.c:615:
+				uint32_t xcount, bcount = 0x10000 - (cur_addr & 0xffff);

WARNING:INDENTED_LABEL: labels should not be indented
#1207: FILE: drivers/ide/pci/sgiioc4.c:647:
+      use_pio_instead:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1215: FILE: drivers/ide/pci/sgiioc4.c:655:
+sgiioc4_checkirq(ide_hwif_t * hwif)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1217: FILE: drivers/ide/pci/sgiioc4.c:657:
+	uint8_t intr_reg = hwif->INL(hwif->io_ports[IDE_IRQ_OFFSET] + IOC4_INTR_REG * 4);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1226: FILE: drivers/ide/pci/sgiioc4.c:666:
+sgiioc4_clearirq(ide_drive_t * drive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1238: FILE: drivers/ide/pci/sgiioc4.c:678:
+		int count = 0;
+		do {

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1240: FILE: drivers/ide/pci/sgiioc4.c:680:
+			stat = hwif->INB(IDE_STATUS_REG);	/* Removes Interrupt from IDE Device */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1245: FILE: drivers/ide/pci/sgiioc4.c:685:
+			uint32_t pci_err_addr_low, pci_err_addr_high, pci_stat_cmd_reg;

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#1250: FILE: drivers/ide/pci/sgiioc4.c:690:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", drive->name, pci_stat_cmd_reg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1250: FILE: drivers/ide/pci/sgiioc4.c:690:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", drive->name, pci_stat_cmd_reg);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_clearirq', this function's name, in a string
#1250: FILE: drivers/ide/pci/sgiioc4.c:690:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", drive->name, pci_stat_cmd_reg);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1250: FILE: drivers/ide/pci/sgiioc4.c:690:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n", drive->name, pci_stat_cmd_reg);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#1251: FILE: drivers/ide/pci/sgiioc4.c:691:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n", drive->name, pci_err_addr_high, pci_err_addr_low);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1251: FILE: drivers/ide/pci/sgiioc4.c:691:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n", drive->name, pci_err_addr_high, pci_err_addr_low);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_clearirq', this function's name, in a string
#1251: FILE: drivers/ide/pci/sgiioc4.c:691:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n", drive->name, pci_err_addr_high, pci_err_addr_low);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1251: FILE: drivers/ide/pci/sgiioc4.c:691:
+			printk(KERN_ERR "sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n", drive->name, pci_err_addr_high, pci_err_addr_low);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1265: FILE: drivers/ide/pci/sgiioc4.c:705:
+ * ^I"Copied from drivers/ide/ide-dma.c"$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1271: FILE: drivers/ide/pci/sgiioc4.c:711:
+ *	Perform the PCI mapping magic neccessary to access the source
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1273: FILE: drivers/ide/pci/sgiioc4.c:713:
+ *	of the kernel provide the neccessary cache management so that
   	                          ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#1278: FILE: drivers/ide/pci/sgiioc4.c:718:
+ *	dependancy problems for modular drivers.
   	^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1281: FILE: drivers/ide/pci/sgiioc4.c:721:
+sgiioc4_ide_build_sglist(ide_hwif_t * hwif, struct request *rq, int ddir)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1289: FILE: drivers/ide/pci/sgiioc4.c:729:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#1299: FILE: drivers/ide/pci/sgiioc4.c:739:
+			if ((unsigned long) bh->b_data == lastdataend)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1312: FILE: drivers/ide/pci/sgiioc4.c:752:
+		memset(&sg[nents], 0, sizeof (*sg));

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: drivers/ide/pci/sgiioc4.c:759:
+			if ((unsigned long) bh->b_data < PAGE_SIZE)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1320: FILE: drivers/ide/pci/sgiioc4.c:760:
+				BUG();

CHECK:SPACING: No space is necessary after a cast
#1323: FILE: drivers/ide/pci/sgiioc4.c:763:
+			lastdataend = (unsigned long) bh->b_data + bh->b_size;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1331: FILE: drivers/ide/pci/sgiioc4.c:771:
+		BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1338: FILE: drivers/ide/pci/sgiioc4.c:778:
+ * ^ICopied from drivers/ide/ide-dma.c$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1343: FILE: drivers/ide/pci/sgiioc4.c:783:
+ *	Perform the PCI mapping magic neccessary to access the source or
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1345: FILE: drivers/ide/pci/sgiioc4.c:785:
+ *	of the  kernel provide the neccessary cache management so that we can
   	                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#1350: FILE: drivers/ide/pci/sgiioc4.c:790:
+ *	dependancy problems for modular drivers.
   	^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1353: FILE: drivers/ide/pci/sgiioc4.c:793:
+sgiioc4_ide_raw_build_sglist(ide_hwif_t * hwif, struct request *rq)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1365: FILE: drivers/ide/pci/sgiioc4.c:805:
+#if 1

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1367: FILE: drivers/ide/pci/sgiioc4.c:807:
+		memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1374: FILE: drivers/ide/pci/sgiioc4.c:814:
+	memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1380: FILE: drivers/ide/pci/sgiioc4.c:820:
+		memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1387: FILE: drivers/ide/pci/sgiioc4.c:827:
+	memset(&sg[nents], 0, sizeof (*sg));

WARNING:LONG_LINE_STRING: line length of 116 exceeds 100 columns
#1411: FILE: drivers/ide/pci/sgiioc4.c:851:
+			p += sprintf(p, "\n	Chipset has 1 IDE channel and supports 2 devices on that channel.");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#1412: FILE: drivers/ide/pci/sgiioc4.c:852:
+			p += sprintf(p, "\n	Chipset supports DMA in MultiMode-2 data transfer protocol.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1423: FILE: drivers/ide/pci/sgiioc4.c:863:
+static int __devinit

WARNING:LINE_SPACING: Missing a blank line after declarations
#1428: FILE: drivers/ide/pci/sgiioc4.c:868:
+	ide_pci_device_t *d = &sgiioc4_chipsets[id->driver_data];
+	if (dev->device != d->device) {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1429: FILE: drivers/ide/pci/sgiioc4.c:869:
+		printk(KERN_ERR "Error in sgiioc4_init_one(dev 0x%p | id 0x%p )\n", (void *) dev, (void *) id);

CHECK:SPACING: No space is necessary after a cast
#1429: FILE: drivers/ide/pci/sgiioc4.c:869:
+		printk(KERN_ERR "Error in sgiioc4_init_one(dev 0x%p | id 0x%p )\n", (void *) dev, (void *) id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1429: FILE: drivers/ide/pci/sgiioc4.c:869:
+		printk(KERN_ERR "Error in sgiioc4_init_one(dev 0x%p | id 0x%p )\n", (void *) dev, (void *) id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_init_one', this function's name, in a string
#1429: FILE: drivers/ide/pci/sgiioc4.c:869:
+		printk(KERN_ERR "Error in sgiioc4_init_one(dev 0x%p | id 0x%p )\n", (void *) dev, (void *) id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1430: FILE: drivers/ide/pci/sgiioc4.c:870:
+		BUG();

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1437: FILE: drivers/ide/pci/sgiioc4.c:877:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1437: FILE: drivers/ide/pci/sgiioc4.c:877:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1437: FILE: drivers/ide/pci/sgiioc4.c:877:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);
 		                                                                                       ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1437: FILE: drivers/ide/pci/sgiioc4.c:877:
+		printk(KERN_INFO "Disabling the IOC4 IDE Part due to unsupported Firmware Rev (%d). \n",class_rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1438: FILE: drivers/ide/pci/sgiioc4.c:878:
+		printk(KERN_INFO "Please upgrade to Firmware Rev 46 or higher \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1438: FILE: drivers/ide/pci/sgiioc4.c:878:
+		printk(KERN_INFO "Please upgrade to Firmware Rev 46 or higher \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1442: FILE: drivers/ide/pci/sgiioc4.c:882:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s\n", d->name, dev->slot_name);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1452: FILE: drivers/ide/pci/sgiioc4.c:892:
+static struct pci_device_id sgiioc4_pci_tbl[] __devinitdata = {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1453: FILE: drivers/ide/pci/sgiioc4.c:893:
+	{ PCI_VENDOR_ID_SGI, PCI_DEVICE_ID_SGI_IOC4, PCI_ANY_ID, PCI_ANY_ID, 0x0b4000, 0xFFFFFF, 0 },

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1487: FILE: drivers/ide/pci/sgiioc4.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1507: FILE: drivers/ide/pci/sgiioc4.h:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1561: FILE: drivers/ide/pci/sgiioc4.h:75:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#1563: FILE: drivers/ide/pci/sgiioc4.h:77:
+#define ide_ack_intr(hwif)      ((hwif)->hw.ack_intr ? (hwif)->hw.ack_intr(hwif) : 1)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1586: FILE: drivers/ide/pci/sgiioc4.h:100:
+typedef volatile struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1586: FILE: drivers/ide/pci/sgiioc4.h:100:
+typedef volatile struct {

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#1601: FILE: drivers/ide/pci/sgiioc4.h:115:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /IOC4_PRD_BYTES)
                                         ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1603: FILE: drivers/ide/pci/sgiioc4.h:117:
+typedef enum pciio_endian_e {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1608: FILE: drivers/ide/pci/sgiioc4.h:122:
+static void sgiioc4_init_hwif_ports(hw_regs_t * hw, ide_ioreg_t data_port, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1608: FILE: drivers/ide/pci/sgiioc4.h:122:
+static void sgiioc4_init_hwif_ports(hw_regs_t * hw, ide_ioreg_t data_port, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1611: FILE: drivers/ide/pci/sgiioc4.h:125:
+static void sgiioc4_resetproc(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1612: FILE: drivers/ide/pci/sgiioc4.h:126:
+static void sgiioc4_maskproc(ide_drive_t * drive, int mask);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1613: FILE: drivers/ide/pci/sgiioc4.h:127:
+static void sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1614: FILE: drivers/ide/pci/sgiioc4.h:128:
+static void __init ide_init_sgiioc4(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1615: FILE: drivers/ide/pci/sgiioc4.h:129:
+static void __init ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1616: FILE: drivers/ide/pci/sgiioc4.h:130:
+static int sgiioc4_checkirq(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1617: FILE: drivers/ide/pci/sgiioc4.h:131:
+static int sgiioc4_clearirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1619: FILE: drivers/ide/pci/sgiioc4.h:133:
+static int sgiioc4_ide_dma_read(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1620: FILE: drivers/ide/pci/sgiioc4.h:134:
+static int sgiioc4_ide_dma_write(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1621: FILE: drivers/ide/pci/sgiioc4.h:135:
+static int sgiioc4_ide_dma_begin(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1622: FILE: drivers/ide/pci/sgiioc4.h:136:
+static int sgiioc4_ide_dma_end(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1623: FILE: drivers/ide/pci/sgiioc4.h:137:
+static int sgiioc4_ide_dma_check(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1624: FILE: drivers/ide/pci/sgiioc4.h:138:
+static int sgiioc4_ide_dma_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1625: FILE: drivers/ide/pci/sgiioc4.h:139:
+static int sgiioc4_ide_dma_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1626: FILE: drivers/ide/pci/sgiioc4.h:140:
+static int sgiioc4_ide_dma_off_quietly(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1627: FILE: drivers/ide/pci/sgiioc4.h:141:
+static int sgiioc4_ide_dma_test_irq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1628: FILE: drivers/ide/pci/sgiioc4.h:142:
+static int sgiioc4_ide_dma_host_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1629: FILE: drivers/ide/pci/sgiioc4.h:143:
+static int sgiioc4_ide_dma_host_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1630: FILE: drivers/ide/pci/sgiioc4.h:144:
+static int sgiioc4_ide_dma_count(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1631: FILE: drivers/ide/pci/sgiioc4.h:145:
+static int sgiioc4_ide_dma_verbose(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: drivers/ide/pci/sgiioc4.h:146:
+static int sgiioc4_ide_dma_lostirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1633: FILE: drivers/ide/pci/sgiioc4.h:147:
+static int sgiioc4_ide_dma_timeout(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1634: FILE: drivers/ide/pci/sgiioc4.h:148:
+static int sgiioc4_ide_build_sglist(ide_hwif_t * hwif, struct request *rq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1636: FILE: drivers/ide/pci/sgiioc4.h:150:
+static int sgiioc4_ide_raw_build_sglist(ide_hwif_t * hwif, struct request *rq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1640: FILE: drivers/ide/pci/sgiioc4.h:154:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1640: FILE: drivers/ide/pci/sgiioc4.h:154:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#1640: FILE: drivers/ide/pci/sgiioc4.h:154:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#1640: FILE: drivers/ide/pci/sgiioc4.h:154:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1640: FILE: drivers/ide/pci/sgiioc4.h:154:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1641: FILE: drivers/ide/pci/sgiioc4.h:155:
+static unsigned int sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1645: FILE: drivers/ide/pci/sgiioc4.h:159:
+static ide_pci_device_t sgiioc4_chipsets[] __devinitdata = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1646: FILE: drivers/ide/pci/sgiioc4.h:160:
+^I{^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 70 errors, 128 warnings, 29 checks, 1143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
