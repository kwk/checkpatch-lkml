WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -rupN -X /home/daniel_nfs/dontdiff linux-2.5.70/drivers/block/loop.c linux-2.5.70-isize/drivers/block/loop.c

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#84: FILE: fs/binfmt_aout.c:272:
+	    i_size_read(bprm->file->f_dentry->d_inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: fs/binfmt_aout.c:272:
+	    i_size_read(bprm->file->f_dentry->d_inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: fs/binfmt_aout.c:272:
+	    i_size_read(bprm->file->f_dentry->d_inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: fs/binfmt_aout.c:272:
+	    i_size_read(bprm->file->f_dentry->d_inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: fs/binfmt_aout.c:457:
+	    i_size_read(inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: fs/binfmt_aout.c:457:
+	    i_size_read(inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: fs/binfmt_aout.c:457:
+	    i_size_read(inode) < ex.a_text+ex.a_data+N_SYMSIZE(ex)+N_TXTOFF(ex)) {
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: fs/buffer.c:2048:
+	lblock = (i_size_read(inode)+blocksize-1) >> inode->i_blkbits;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: fs/buffer.c:2048:
+	lblock = (i_size_read(inode)+blocksize-1) >> inode->i_blkbits;
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#186: FILE: fs/buffer.c:2570:
+	offset = i_size & (PAGE_CACHE_SIZE-1);
 	                                  ^

CHECK:SPACING: No space is necessary after a cast
#230: FILE: fs/ioctl.c:43:
+			return put_user(i_size_read(inode) - filp->f_pos, (int *) arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: fs/mpage.c:494:
+		unsigned offset = i_size_read(inode) & (PAGE_CACHE_SIZE - 1);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#360: FILE: include/linux/fs.h:355:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#363: FILE: include/linux/fs.h:358:
+#define i_size_ordered_init(inode) seqcnt_init(&inode->i_size_seqcnt)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#381: FILE: include/linux/fs.h:419:
+ * NOTE: in a 32bit arch with a preemptable kernel and
                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: include/linux/fs.h:428:
+static inline loff_t i_size_read(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#392: FILE: include/linux/fs.h:430:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#401: FILE: include/linux/fs.h:439:
+#elif BITS_PER_LONG==32 && defined(CONFIG_PREEMPT)
                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#413: FILE: include/linux/fs.h:451:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#414: FILE: include/linux/fs.h:452:
+static inline void i_size_write(struct inode * inode, loff_t i_size)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#416: FILE: include/linux/fs.h:454:
+#if BITS_PER_LONG==32 && defined(CONFIG_SMP)
                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#420: FILE: include/linux/fs.h:458:
+#elif BITS_PER_LONG==32 && defined(CONFIG_PREEMPT)
                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: mm/filemap.c:1514:
+                        *pos = i_size_read(inode);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: mm/filemap.c:1514:
+                        *pos = i_size_read(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: mm/readahead.c:216:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#608: FILE: mm/readahead.c:216:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: mm/readahead.c:216:
+ ^Iend_index = ((isize - 1) >> PAGE_CACHE_SHIFT);$

CHECK:SPACING: No space is necessary after a cast
#620: FILE: mm/shmem.c:300:
+	    ((loff_t) index << PAGE_CACHE_SHIFT) >= i_size_read(inode))

CHECK:SPACING: No space is necessary after a cast
#629: FILE: mm/shmem.c:333:
+		    ((loff_t) index << PAGE_CACHE_SHIFT) >= i_size_read(inode)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 7 warnings, 14 checks, 490 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
