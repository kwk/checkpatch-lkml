WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -ur ../linux-2.6.12-RT-51-23/arch/i386/kernel/io_apic.c ./arch/i386/kernel/io_apic.c

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: arch/i386/kernel/io_apic.c:132:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#112: FILE: arch/i386/kernel/io_apic.c:136:
+	volatile unsigned int *base;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: arch/i386/kernel/io_apic.c:146:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: arch/i386/kernel/io_apic.c:156:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: arch/i386/kernel/io_apic.c:161:
+	int reg;
+	for (reg = 0; reg < (ioapic->nr_registers + 10); reg++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: arch/i386/kernel/io_apic.c:166:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: arch/i386/kernel/io_apic.c:198:
 
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#279: FILE: arch/i386/kernel/io_apic.c:248:
+		val = io_apic_read(ioapic, 0x10 + pin*2);
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#283: FILE: arch/i386/kernel/io_apic.c:251:
+		io_apic_modify(ioapic, 0x10 + pin*2, val);
 		                                 ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#301: FILE: arch/i386/kernel/io_apic.c:295:
+	*(((int*)&entry) + 0) = io_apic_read(ioapic, 0x10 + 2 * pin);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#302: FILE: arch/i386/kernel/io_apic.c:296:
+	*(((int*)&entry) + 1) = io_apic_read(ioapic, 0x11 + 2 * pin);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#338: FILE: arch/i386/kernel/io_apic.c:341:
+		io_apic_write(ioapic_data[entry->apic], 0x10 + 1 + pin*2, apicid_value);
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#390: FILE: arch/i386/kernel/io_apic.c:1352:
+		io_apic_write(ioapic, 0x11+2*pin, *(((int *)&entry)+1));
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: arch/i386/kernel/io_apic.c:1352:
+		io_apic_write(ioapic, 0x11+2*pin, *(((int *)&entry)+1));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#390: FILE: arch/i386/kernel/io_apic.c:1352:
+		io_apic_write(ioapic, 0x11+2*pin, *(((int *)&entry)+1));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#391: FILE: arch/i386/kernel/io_apic.c:1353:
+		io_apic_write(ioapic, 0x10+2*pin, *(((int *)&entry)+0));
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#391: FILE: arch/i386/kernel/io_apic.c:1353:
+		io_apic_write(ioapic, 0x10+2*pin, *(((int *)&entry)+0));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#391: FILE: arch/i386/kernel/io_apic.c:1353:
+		io_apic_write(ioapic, 0x10+2*pin, *(((int *)&entry)+0));
 		                                                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#415: FILE: arch/i386/kernel/io_apic.c:1434:
 	for (apic = 0; apic < nr_ioapics; apic++) {
+	ioapic = ioapic_data[apic];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#438: FILE: arch/i386/kernel/io_apic.c:1513:
+		*(((int *)&entry)+0) = raw_io_apic_read(ioapic, 0x10+i*2);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#438: FILE: arch/i386/kernel/io_apic.c:1513:
+		*(((int *)&entry)+0) = raw_io_apic_read(ioapic, 0x10+i*2);
 		                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#438: FILE: arch/i386/kernel/io_apic.c:1513:
+		*(((int *)&entry)+0) = raw_io_apic_read(ioapic, 0x10+i*2);
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: arch/i386/kernel/io_apic.c:1514:
+		*(((int *)&entry)+1) = raw_io_apic_read(ioapic, 0x11+i*2);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: arch/i386/kernel/io_apic.c:1514:
+		*(((int *)&entry)+1) = raw_io_apic_read(ioapic, 0x11+i*2);
 		                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#439: FILE: arch/i386/kernel/io_apic.c:1514:
+		*(((int *)&entry)+1) = raw_io_apic_read(ioapic, 0x11+i*2);
 		                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <unlock_ExtINT_logic>
#513: FILE: arch/i386/kernel/io_apic.c:2206:
+static void __init unlock_ExtINT_logic(void)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#535: FILE: arch/i386/kernel/io_apic.c:2383:
+	volatile int *ioapic;

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: arch/i386/kernel/io_apic.c:2384:
+	volatile int *ioapic;
+	if (ioapic_data[_ioapic]) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#537: FILE: arch/i386/kernel/io_apic.c:2385:
+		printk("been in %s before !!!!!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#537: FILE: arch/i386/kernel/io_apic.c:2385:
+		printk("been in %s before !!!!!\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#549: FILE: arch/i386/kernel/io_apic.c:2397:
+	nr_ioapic_registers = reg_01.bits.entries+1;
 	                                         ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#598: FILE: arch/i386/kernel/io_apic.c:2475:
+	for (i = 0; i < ioapic_data[dev->id]->nr_registers; i ++, entry ++) {
 	                                                                ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#632: FILE: arch/i386/kernel/io_apic.c:2503:
+	for (i = 0; i < ioapic_data[dev->id]->nr_registers; i ++, entry ++) {
 	                                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#633: FILE: arch/i386/kernel/io_apic.c:2504:
+		io_apic_write(ioapic, 0x11+2*i, *(((int *)entry)+1));
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#633: FILE: arch/i386/kernel/io_apic.c:2504:
+		io_apic_write(ioapic, 0x11+2*i, *(((int *)entry)+1));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#633: FILE: arch/i386/kernel/io_apic.c:2504:
+		io_apic_write(ioapic, 0x11+2*i, *(((int *)entry)+1));
 		                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: arch/i386/kernel/io_apic.c:2505:
+		io_apic_write(ioapic, 0x10+2*i, *(((int *)entry)+0));
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#634: FILE: arch/i386/kernel/io_apic.c:2505:
+		io_apic_write(ioapic, 0x10+2*i, *(((int *)entry)+0));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#634: FILE: arch/i386/kernel/io_apic.c:2505:
+		io_apic_write(ioapic, 0x10+2*i, *(((int *)entry)+0));
 		                                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#672: FILE: arch/i386/kernel/io_apic.c:2558:
+int __init io_apic_get_unique_id (int apic, int apic_id)

WARNING:SPLIT_STRING: quoted string split across lines
#688: FILE: arch/i386/kernel/io_apic.c:2585:
 		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "
+			"%d\n", apic, apic_id, reg_00.bits.ID);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#697: FILE: arch/i386/kernel/io_apic.c:2604:
 		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "
+			"trying %d\n", apic, apic_id, i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#718: FILE: arch/i386/kernel/io_apic.c:2632:
+int __init io_apic_get_version (int apic)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: arch/i386/kernel/io_apic.c:2645:
+int __init io_apic_get_redir_entries (int apic)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: arch/i386/kernel/io_apic.c:2658:
+int io_apic_set_pci_routing (int apic, int pin, int irq, int edge_level, int active_high_low)

WARNING:SPLIT_STRING: quoted string split across lines
#773: FILE: arch/i386/kernel/io_apic.c:2693:
 	apic_printk(APIC_DEBUG, KERN_DEBUG "IOAPIC[%d]: Set PCI routing entry "
+		"(%d-%d -> 0x%x -> IRQ %d Mode:%i Active:%i)\n", apic,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq < 16'
#780: FILE: arch/i386/kernel/io_apic.c:2699:
+	if (!apic && (irq < 16))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#821: FILE: include/asm-i386/io_apic.h:161:
+extern void setup_IO_APIC_early(int ioapic);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#828: FILE: include/asm-i386/io_apic.h:166:
	

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 18 warnings, 30 checks, 719 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
