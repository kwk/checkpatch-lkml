ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#41: FILE: fs/proc/array.c:303:
+static int do_task_stat(struct task_struct *task, char * buffer, int whole)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#78: FILE: fs/proc/array.c:366:
+	if (!whole || num_threads<2)
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: fs/proc/array.c:436:
+int proc_tid_stat(struct task_struct *task, char * buffer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: fs/proc/array.c:441:
+int proc_tgid_stat(struct task_struct *task, char * buffer)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#141: FILE: fs/proc/base.c:180:
+int proc_tid_stat(struct task_struct*,char*);
                                      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#142: FILE: fs/proc/base.c:181:
+int proc_tgid_stat(struct task_struct*,char*);
                                       ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#142: FILE: fs/proc/base.c:181:
+int proc_tgid_stat(struct task_struct*,char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#142: FILE: fs/proc/base.c:181:
+int proc_tgid_stat(struct task_struct*,char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#142: FILE: fs/proc/base.c:181:
+int proc_tgid_stat(struct task_struct*,char*);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254652.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 3 warnings, 0 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254652.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
