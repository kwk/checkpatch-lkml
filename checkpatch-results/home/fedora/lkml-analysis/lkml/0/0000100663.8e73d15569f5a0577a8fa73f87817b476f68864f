WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
>  >  Current 2.6.16 queue.  Some of these are a bit questionable at this stage.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#147: FILE: drivers/isdn/hysdn/hysdn_defs.h:169:
+	unsigned char volatile irq_enabled;/* interrupt enabled if != 0 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#148: FILE: drivers/isdn/hysdn/hysdn_defs.h:170:
+	unsigned char volatile hw_lock;/* hardware is currently locked -> no access */

WARNING:SPACING: Unnecessary space before function pointer arguments
#154: FILE: drivers/isdn/hysdn/hysdn_defs.h:174:
+	int (*writebootimg) (struct HYSDN_CARD *, unsigned char *, unsigned long);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct HYSDN_CARD *' should also have an identifier name
#154: FILE: drivers/isdn/hysdn/hysdn_defs.h:174:
+	int (*writebootimg) (struct HYSDN_CARD *, unsigned char *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#154: FILE: drivers/isdn/hysdn/hysdn_defs.h:174:
+	int (*writebootimg) (struct HYSDN_CARD *, unsigned char *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#154: FILE: drivers/isdn/hysdn/hysdn_defs.h:174:
+	int (*writebootimg) (struct HYSDN_CARD *, unsigned char *, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#155: FILE: drivers/isdn/hysdn/hysdn_defs.h:175:
+	int (*writebootseq) (struct HYSDN_CARD *, unsigned char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct HYSDN_CARD *' should also have an identifier name
#155: FILE: drivers/isdn/hysdn/hysdn_defs.h:175:
+	int (*writebootseq) (struct HYSDN_CARD *, unsigned char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#155: FILE: drivers/isdn/hysdn/hysdn_defs.h:175:
+	int (*writebootseq) (struct HYSDN_CARD *, unsigned char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#155: FILE: drivers/isdn/hysdn/hysdn_defs.h:175:
+	int (*writebootseq) (struct HYSDN_CARD *, unsigned char *, int);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#164: FILE: drivers/isdn/hysdn/hysdn_defs.h:181:
+	unsigned short volatile async_len;/* length of data to sent */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#165: FILE: drivers/isdn/hysdn/hysdn_defs.h:182:
+	unsigned short volatile async_channel;/* channel number for async transfer */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: drivers/isdn/hysdn/hysdn_defs.h:246:
+extern int pof_write_open(hysdn_card *, unsigned char **);	/* open proc file for writing pof */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#174: FILE: drivers/isdn/hysdn/hysdn_defs.h:246:
+extern int pof_write_open(hysdn_card *, unsigned char **);	/* open proc file for writing pof */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char **' should also have an identifier name
#174: FILE: drivers/isdn/hysdn/hysdn_defs.h:246:
+extern int pof_write_open(hysdn_card *, unsigned char **);	/* open proc file for writing pof */

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <EvalSysrTokData>
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#177: FILE: drivers/isdn/hysdn/hysdn_defs.h:248:
+extern int EvalSysrTokData(hysdn_card *, unsigned char *, int);		/* Check Sysready Token Data */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short volatile *' should also have an identifier name
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short volatile *' should also have an identifier name
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#184: FILE: drivers/isdn/hysdn/hysdn_defs.h:251:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/isdn/hysdn/hysdn_defs.h:252:
+extern int hysdn_sched_tx(hysdn_card *, unsigned char *,
+			unsigned short volatile *, unsigned short volatile *,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#185: FILE: drivers/isdn/hysdn/hysdn_defs.h:252:
+			unsigned short volatile *, unsigned short volatile *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: drivers/isdn/hysdn/hysdn_defs.h:254:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#187: FILE: drivers/isdn/hysdn/hysdn_defs.h:254:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#187: FILE: drivers/isdn/hysdn/hysdn_defs.h:254:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#187: FILE: drivers/isdn/hysdn/hysdn_defs.h:254:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#187: FILE: drivers/isdn/hysdn/hysdn_defs.h:254:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/isdn/hysdn/hysdn_defs.h:255:
+extern int hysdn_sched_rx(hysdn_card *, unsigned char *, unsigned short,
+			unsigned short);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: drivers/isdn/hysdn/hysdn_defs.h:256:
+extern int hysdn_tx_cfgline(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#189: FILE: drivers/isdn/hysdn/hysdn_defs.h:256:
+extern int hysdn_tx_cfgline(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#189: FILE: drivers/isdn/hysdn/hysdn_defs.h:256:
+extern int hysdn_tx_cfgline(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#189: FILE: drivers/isdn/hysdn/hysdn_defs.h:256:
+extern int hysdn_tx_cfgline(hysdn_card *, unsigned char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/isdn/hysdn/hysdn_defs.h:257:
+extern int hysdn_tx_cfgline(hysdn_card *, unsigned char *,
+			unsigned short);	/* send one cfg line */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/isdn/hysdn/hysdn_defs.h:267:
+extern void hysdn_rx_netpkt(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'hysdn_card *' should also have an identifier name
#199: FILE: drivers/isdn/hysdn/hysdn_defs.h:267:
+extern void hysdn_rx_netpkt(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#199: FILE: drivers/isdn/hysdn/hysdn_defs.h:267:
+extern void hysdn_rx_netpkt(hysdn_card *, unsigned char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#199: FILE: drivers/isdn/hysdn/hysdn_defs.h:267:
+extern void hysdn_rx_netpkt(hysdn_card *, unsigned char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/isdn/hysdn/hysdn_defs.h:268:
+extern void hysdn_rx_netpkt(hysdn_card *, unsigned char *,
+			unsigned short);	/* rxed packet from network */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/isdn/hysdn/hysdn_defs.h:275:
+extern void hycapi_rx_capipkt(hysdn_card * card, unsigned char * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/isdn/hysdn/hysdn_defs.h:275:
+extern void hycapi_rx_capipkt(hysdn_card * card, unsigned char * buf,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: drivers/isdn/hysdn/hysdn_defs.h:275:
+extern void hycapi_rx_capipkt(hysdn_card * card, unsigned char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/isdn/hysdn/hysdn_defs.h:276:
+extern void hycapi_rx_capipkt(hysdn_card * card, unsigned char * buf,
+				unsigned short len);

CHECK:CAMELCASE: Avoid CamelCase: <ulErrType>
#230: FILE: drivers/isdn/hysdn/ince1pc.h:88:
+/*00 */ unsigned long ulErrType;

CHECK:CAMELCASE: Avoid CamelCase: <ulErrSubtype>
#233: FILE: drivers/isdn/hysdn/ince1pc.h:90:
+/*04 */ unsigned long ulErrSubtype;

CHECK:CAMELCASE: Avoid CamelCase: <ucTextSize>
#236: FILE: drivers/isdn/hysdn/ince1pc.h:92:
+/*08 */ unsigned char ucTextSize;

CHECK:CAMELCASE: Avoid CamelCase: <ucText>
#239: FILE: drivers/isdn/hysdn/ince1pc.h:94:
+	/*09 */ unsigned char ucText[ERRLOG_TEXT_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#248: FILE: drivers/isdn/hysdn/ince1pc.h:114:
+/*00 */ unsigned char Len;

CHECK:CAMELCASE: Avoid CamelCase: <RdPtr>
#251: FILE: drivers/isdn/hysdn/ince1pc.h:116:
+/*01 */ volatile unsigned char RdPtr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#251: FILE: drivers/isdn/hysdn/ince1pc.h:116:
+/*01 */ volatile unsigned char RdPtr;

CHECK:CAMELCASE: Avoid CamelCase: <WrPtr>
#254: FILE: drivers/isdn/hysdn/ince1pc.h:118:
+/*02 */ unsigned char WrPtr;

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#257: FILE: drivers/isdn/hysdn/ince1pc.h:120:
+/*03 */ unsigned char Data[DPRAM_SPOOLER_DATA_SIZE];

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#275: FILE: drivers/isdn/hysdn/hysdn_net.c:91:
+				memcpy(dev->dev_addr + (ETH_ALEN - sizeof(unsigned long)), &ifa->ifa_local, sizeof(unsigned long));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#284: FILE: drivers/isdn/hysdn/hysdn_net.c:200:
+hysdn_rx_netpkt(hysdn_card * card, unsigned char *buf, unsigned short len)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#298: FILE: drivers/isdn/hysdn/boardergo.c:42:
+	unsigned char volatile b;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/isdn/hysdn/boardergo.c:221:
+ergo_writebootimg(struct HYSDN_CARD *card, unsigned char *buf,
+			unsigned long offs)

CHECK:SPACING: No space is necessary after a cast
#378: FILE: drivers/isdn/hysdn/boardergo.c:349:
+			    ((*(unsigned long *) dpr->ToPcBuf) != RDY_MAGIC))

CHECK:CAMELCASE: Avoid CamelCase: <ToPcBuf>
#378: FILE: drivers/isdn/hysdn/boardergo.c:349:
+			    ((*(unsigned long *) dpr->ToPcBuf) != RDY_MAGIC))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: drivers/isdn/hysdn/hycapi.c:526:
+hycapi_rx_capipkt(hysdn_card * card, unsigned char *buf, unsigned short len)

CHECK:CAMELCASE: Avoid CamelCase: <Cryptor>
#405: FILE: drivers/isdn/hysdn/hysdn_boot.c:33:
+	unsigned short Cryptor;	/* for use with Decrypt function */

CHECK:CAMELCASE: Avoid CamelCase: <Nrecs>
#406: FILE: drivers/isdn/hysdn/hysdn_boot.c:34:
+	unsigned short Nrecs;	/* records remaining in file */

WARNING:TYPO_SPELLING: 'crypted' may be misspelled - perhaps 'encrypted'?
#408: FILE: drivers/isdn/hysdn/hysdn_boot.c:36:
+	unsigned char is_crypted;/* card data is crypted */
 	                                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <BootBuf>
#419: FILE: drivers/isdn/hysdn/hysdn_boot.c:43:
+		unsigned char BootBuf[BOOT_BUF_SIZE];/* buffer as byte count */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#451: FILE: drivers/isdn/hysdn/hysdn_boot.c:200:
+			boot->Nrecs = (unsigned short)(boot->buf.PofFileHdr.N_PofRecs);	/* limited to 65535 */

CHECK:CAMELCASE: Avoid CamelCase: <PofFileHdr>
#451: FILE: drivers/isdn/hysdn/hysdn_boot.c:200:
+			boot->Nrecs = (unsigned short)(boot->buf.PofFileHdr.N_PofRecs);	/* limited to 65535 */

CHECK:CAMELCASE: Avoid CamelCase: <N_PofRecs>
#451: FILE: drivers/isdn/hysdn/hysdn_boot.c:200:
+			boot->Nrecs = (unsigned short)(boot->buf.PofFileHdr.N_PofRecs);	/* limited to 65535 */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: drivers/isdn/hysdn/hysdn_boot.c:271:
+pof_write_open(hysdn_card * card, unsigned char **bufp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/isdn/hysdn/hysdn_sched.c:34:
+hysdn_sched_rx(hysdn_card *card, unsigned char *buf, unsigned short len,
+			unsigned short chan)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/isdn/hysdn/hysdn_sched.c:77:
+hysdn_sched_tx(hysdn_card *card, unsigned char *buf,
+		unsigned short volatile *len, unsigned short volatile *chan,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#600: FILE: drivers/isdn/hysdn/hysdn_sched.c:77:
+		unsigned short volatile *len, unsigned short volatile *chan,

CHECK:CAMELCASE: Avoid CamelCase: <ToHyBuf>
#627: FILE: drivers/isdn/hysdn/boardergo.h:26:
+/*0000 */ unsigned char ToHyBuf[ERG_TO_HY_BUF_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <bSoftUart>
#631: FILE: drivers/isdn/hysdn/boardergo.h:29:
+	/*1C00 */ unsigned char bSoftUart[SIZE_RSV_SOFT_UART];

CHECK:CAMELCASE: Avoid CamelCase: <ErrLogMsg>
#635: FILE: drivers/isdn/hysdn/boardergo.h:32:
+	/*1DB0 *//* tErrLogEntry */ unsigned char volatile ErrLogMsg[64];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#635: FILE: drivers/isdn/hysdn/boardergo.h:32:
+	/*1DB0 *//* tErrLogEntry */ unsigned char volatile ErrLogMsg[64];

CHECK:CAMELCASE: Avoid CamelCase: <ToHyChannel>
#650: FILE: drivers/isdn/hysdn/boardergo.h:40:
+/*1DF0 */ unsigned short volatile ToHyChannel;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#650: FILE: drivers/isdn/hysdn/boardergo.h:40:
+/*1DF0 */ unsigned short volatile ToHyChannel;

CHECK:CAMELCASE: Avoid CamelCase: <ToHySize>
#651: FILE: drivers/isdn/hysdn/boardergo.h:41:
+/*1DF2 */ unsigned short volatile ToHySize;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#651: FILE: drivers/isdn/hysdn/boardergo.h:41:
+/*1DF2 */ unsigned short volatile ToHySize;

WARNING:TABSTOP: Statements should start on a tabstop
#652: FILE: drivers/isdn/hysdn/boardergo.h:42:
+	/*1DF4 */ unsigned char volatile ToHyFlag;

CHECK:CAMELCASE: Avoid CamelCase: <ToHyFlag>
#652: FILE: drivers/isdn/hysdn/boardergo.h:42:
+	/*1DF4 */ unsigned char volatile ToHyFlag;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#652: FILE: drivers/isdn/hysdn/boardergo.h:42:
+	/*1DF4 */ unsigned char volatile ToHyFlag;

WARNING:TABSTOP: Statements should start on a tabstop
#655: FILE: drivers/isdn/hysdn/boardergo.h:44:
+	/*1DF5 */ unsigned char volatile ToPcFlag;

CHECK:CAMELCASE: Avoid CamelCase: <ToPcFlag>
#655: FILE: drivers/isdn/hysdn/boardergo.h:44:
+	/*1DF5 */ unsigned char volatile ToPcFlag;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#655: FILE: drivers/isdn/hysdn/boardergo.h:44:
+	/*1DF5 */ unsigned char volatile ToPcFlag;

CHECK:CAMELCASE: Avoid CamelCase: <ToPcChannel>
#660: FILE: drivers/isdn/hysdn/boardergo.h:46:
+/*1DF6 */ unsigned short volatile ToPcChannel;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#660: FILE: drivers/isdn/hysdn/boardergo.h:46:
+/*1DF6 */ unsigned short volatile ToPcChannel;

CHECK:CAMELCASE: Avoid CamelCase: <ToPcSize>
#661: FILE: drivers/isdn/hysdn/boardergo.h:47:
+/*1DF8 */ unsigned short volatile ToPcSize;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#661: FILE: drivers/isdn/hysdn/boardergo.h:47:
+/*1DF8 */ unsigned short volatile ToPcSize;

CHECK:CAMELCASE: Avoid CamelCase: <bRes1DBA>
#662: FILE: drivers/isdn/hysdn/boardergo.h:48:
+	/*1DFA */ unsigned char bRes1DBA[0x1E00 - 0x1DFA];

CHECK:CAMELCASE: Avoid CamelCase: <bRestOfEntryTbl>
#668: FILE: drivers/isdn/hysdn/boardergo.h:51:
+/*1E00 */ unsigned char bRestOfEntryTbl[0x1F00 - 0x1E00];

CHECK:CAMELCASE: Avoid CamelCase: <TrapTable>
#669: FILE: drivers/isdn/hysdn/boardergo.h:52:
+/*1F00 */ unsigned long TrapTable[62];

CHECK:CAMELCASE: Avoid CamelCase: <bRes1FF8>
#670: FILE: drivers/isdn/hysdn/boardergo.h:53:
+	/*1FF8 */ unsigned char bRes1FF8[0x1FFB - 0x1FF8];

CHECK:CAMELCASE: Avoid CamelCase: <ToPcIntMetro>
#673: FILE: drivers/isdn/hysdn/boardergo.h:55:
+/*1FFB */ unsigned char ToPcIntMetro;

CHECK:CAMELCASE: Avoid CamelCase: <ToHyNoDpramErrLog>
#682: FILE: drivers/isdn/hysdn/boardergo.h:68:
+/*1FFC */ unsigned char volatile ToHyNoDpramErrLog;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#682: FILE: drivers/isdn/hysdn/boardergo.h:68:
+/*1FFC */ unsigned char volatile ToHyNoDpramErrLog;

CHECK:CAMELCASE: Avoid CamelCase: <bRes1FFD>
#690: FILE: drivers/isdn/hysdn/boardergo.h:74:
+/*1FFD */ unsigned char bRes1FFD;

WARNING:TABSTOP: Statements should start on a tabstop
#691: FILE: drivers/isdn/hysdn/boardergo.h:75:
+	/*1FFE */ unsigned char ToPcInt;

CHECK:CAMELCASE: Avoid CamelCase: <ToPcInt>
#691: FILE: drivers/isdn/hysdn/boardergo.h:75:
+	/*1FFE */ unsigned char ToPcInt;

WARNING:TABSTOP: Statements should start on a tabstop
#694: FILE: drivers/isdn/hysdn/boardergo.h:77:
+	/*1FFF */ unsigned char ToHyInt;

CHECK:CAMELCASE: Avoid CamelCase: <ToHyInt>
#694: FILE: drivers/isdn/hysdn/boardergo.h:77:
+	/*1FFF */ unsigned char ToHyInt;

CHECK:CAMELCASE: Avoid CamelCase: <Magic>
#707: FILE: drivers/isdn/hysdn/hysdn_pof.h:50:
+/*00 */ unsigned long Magic __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#707: FILE: drivers/isdn/hysdn/hysdn_pof.h:50:
+/*00 */ unsigned long Magic __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#708: FILE: drivers/isdn/hysdn/hysdn_pof.h:51:
+/*04 */ unsigned long N_PofRecs __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <PofRecId>
#715: FILE: drivers/isdn/hysdn/hysdn_pof.h:56:
+/*00 */ unsigned short PofRecId __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#715: FILE: drivers/isdn/hysdn/hysdn_pof.h:56:
+/*00 */ unsigned short PofRecId __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <PofRecDataLen>
#716: FILE: drivers/isdn/hysdn/hysdn_pof.h:57:
+/*02 */ unsigned long PofRecDataLen __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#716: FILE: drivers/isdn/hysdn/hysdn_pof.h:57:
+/*02 */ unsigned long PofRecDataLen __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <UnixTime>
#723: FILE: drivers/isdn/hysdn/hysdn_pof.h:62:
+/*00 */ unsigned long UnixTime __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#723: FILE: drivers/isdn/hysdn/hysdn_pof.h:62:
+/*00 */ unsigned long UnixTime __attribute__((packed));

CHECK:CAMELCASE: Avoid CamelCase: <DateTimeText>
#724: FILE: drivers/isdn/hysdn/hysdn_pof.h:63:
+	/*04 */ unsigned char DateTimeText[0x28] __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#724: FILE: drivers/isdn/hysdn/hysdn_pof.h:63:
+	/*04 */ unsigned char DateTimeText[0x28] __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 59 warnings, 54 checks, 567 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
