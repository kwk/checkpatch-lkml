WARNING:TYPO_SPELLING: 'differents' may be misspelled - perhaps 'different'?
#42: 
that aims are differents (of course it's open to discussion). As already 
              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#55: 
Also, it allows to recover accounting informations (taken from BSD 
                                      ^^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#76: 
diff -uprN -X elsa_import/dontdiff linux-2.6.5/drivers/elsacct/bank.c linux-2.6.5-elsa/drivers/elsacct/bank.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/elsacct/bank.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/elsacct/bank.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/elsacct/bank.c:7:
+ *  This file implements Enhanced Linux System Accounting. It $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/elsacct/bank.c:8:
+ *  provides structure and functions to manipulate "BANK". $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/elsacct/bank.c:10:
+ * $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#105: FILE: drivers/elsacct/bank.c:26:
+ /*********************************************
+ * structures and macros used to manage banks *

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/elsacct/bank.c:36:
+ * Here are declaration of functions that are only * $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#115: FILE: drivers/elsacct/bank.c:36:
+ /**************************************************
+ * Here are declaration of functions that are only * 

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#119: FILE: drivers/elsacct/bank.c:40:
+/* get informations */
        ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#133: FILE: drivers/elsacct/bank.c:54:
+ /************************************************
+ * Following functions can be use by a module or *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/elsacct/bank.c:59:
+ * elsa_bank_set_info - Set pointer to information in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/elsacct/bank.c:60:
+ *                      bank structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/elsacct/bank.c:88:
+ * Initializes callbacks when bank and data are removed from a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/elsacct/bank.c:105:
+ * If an error is encountered, a negative value is returned. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/elsacct/bank.c:109:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/elsacct/bank.c:122:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/elsacct/bank.c:123:
+^I * Create a new bank if bid is equal to zero, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#211: FILE: drivers/elsacct/bank.c:132:
+			printk("elsa_bank_add: found a bug !!!");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#211: FILE: drivers/elsacct/bank.c:132:
+			printk("elsa_bank_add: found a bug !!!");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#217: FILE: drivers/elsacct/bank.c:138:
+			printk("elsa_bank_add: Bank ID#%d not found\n", bid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#217: FILE: drivers/elsacct/bank.c:138:
+			printk("elsa_bank_add: Bank ID#%d not found\n", bid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/elsacct/bank.c:143:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/elsacct/bank.c:144:
+^I * At this point, bank exists, we check if process is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/elsacct/bank.c:145:
+^I * already present $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "elsa_get_data"
#226: FILE: drivers/elsacct/bank.c:147:
+	if (elsa_get_data(bank, p) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#232: FILE: drivers/elsacct/bank.c:153:
+	    (struct elsa_data_s *)kmalloc(sizeof(struct elsa_data_s),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: drivers/elsacct/bank.c:157:
+		printk("elsa_bank_add: cannot allocate space for data\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#236: FILE: drivers/elsacct/bank.c:157:
+		printk("elsa_bank_add: cannot allocate space for data\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->data_list
#244: FILE: drivers/elsacct/bank.c:165:
+	list_add(&(data->data_list), &(bank->data_head));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#244: FILE: drivers/elsacct/bank.c:165:
+	list_add(&(data->data_list), &(bank->data_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->bank_list
#245: FILE: drivers/elsacct/bank.c:166:
+	list_add(&(data->bank_list), &(p->bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#245: FILE: drivers/elsacct/bank.c:166:
+	list_add(&(data->bank_list), &(p->bank_head));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: drivers/elsacct/bank.c:169:
+	printk("elsa_bank_add: Add process #%d to bank #%d\n", p->pid, bid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_add', this function's name, in a string
#248: FILE: drivers/elsacct/bank.c:169:
+	printk("elsa_bank_add: Add process #%d to bank #%d\n", p->pid, bid);

WARNING:TYPO_SPELLING: 'paramater' may be misspelled - perhaps 'parameter'?
#258: FILE: drivers/elsacct/bank.c:179:
+ * Removes data found in a bank given in paramater. It go through the
                                          ^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/elsacct/bank.c:190:
+		printk("elsa_bank_clean: bank doesn't exist\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_clean', this function's name, in a string
#269: FILE: drivers/elsacct/bank.c:190:
+		printk("elsa_bank_clean: bank doesn't exist\n");

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#273: FILE: drivers/elsacct/bank.c:194:
+	/* release all datas and remove the bank */
 	               ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#274: FILE: drivers/elsacct/bank.c:195:
+	while (!list_empty(&(bank->data_head))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/elsacct/bank.c:209:
+ * @pid: identifier of the process to be removed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/elsacct/bank.c:211:
+ * Removes a given process from a given list. If parameter bid is equal to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/elsacct/bank.c:212:
+ * zero, the process is removed from all banks. It returns the identifier $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/elsacct/bank.c:213:
+ * of the bank from which it is removed. $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#306: FILE: drivers/elsacct/bank.c:227:
+	if (!list_empty(&(p->bank_head)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#307: FILE: drivers/elsacct/bank.c:228:
+		list_for_each_entry(data, &(p->bank_head), bank_list)
+		    if (data->bid == bid) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#307: FILE: drivers/elsacct/bank.c:228:
+		list_for_each_entry(data, &(p->bank_head), bank_list)

WARNING:TABSTOP: Statements should start on a tabstop
#308: FILE: drivers/elsacct/bank.c:229:
+		    if (data->bid == bid) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#319: FILE: drivers/elsacct/bank.c:240:
+EXPORT_SYMBOL(elsa_bank_set_info);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#320: FILE: drivers/elsacct/bank.c:241:
+EXPORT_SYMBOL(elsa_bank_get_info);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#321: FILE: drivers/elsacct/bank.c:242:
+EXPORT_SYMBOL(elsa_bank_init_cb);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#322: FILE: drivers/elsacct/bank.c:243:
+EXPORT_SYMBOL(elsa_bank_add);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#323: FILE: drivers/elsacct/bank.c:244:
+EXPORT_SYMBOL(elsa_bank_clean);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#324: FILE: drivers/elsacct/bank.c:245:
+EXPORT_SYMBOL(elsa_bank_remove);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#327: FILE: drivers/elsacct/bank.c:248:
+ /*****************************************************************************
+ * Following functions are called from kernel function.                       *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: drivers/elsacct/bank.c:254:
+ * elsa_copy_parent_bank - Add a given process to the same banks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/elsacct/bank.c:257:
+ * @to: Process to where we will copy information $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/elsacct/bank.c:258:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/elsacct/bank.c:259:
+ * Goes through the banks to which "from" process belong and add $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/elsacct/bank.c:260:
+ * the process in those banks. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/elsacct/bank.c:262:
+ * It is used when doing a fork (kernel/fork.c - copy_process()). $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#349: FILE: drivers/elsacct/bank.c:270:
+		list_for_each_entry(data, &(from->bank_head), bank_list) {
[...]
+		printk("elsa_copy_parent_bank: from pid#%d to pid#%d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around from->bank_head
#349: FILE: drivers/elsacct/bank.c:270:
+		list_for_each_entry(data, &(from->bank_head), bank_list) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: drivers/elsacct/bank.c:272:
+		printk("elsa_copy_parent_bank: from pid#%d to pid#%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#351: FILE: drivers/elsacct/bank.c:272:
+		printk("elsa_copy_parent_bank: from pid#%d to pid#%d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: drivers/elsacct/bank.c:275:
+			printk("elsa_copy_parent_bank: Find a bug\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_copy_parent_bank', this function's name, in a string
#354: FILE: drivers/elsacct/bank.c:275:
+			printk("elsa_copy_parent_bank: Find a bug\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: drivers/elsacct/bank.c:287:
+ * only to allow to remove a processus from all banks to which it belongs. $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#383: FILE: drivers/elsacct/bank.c:304:
+ /******************************************************************
+ * As said at the begin of this file, following functions are only *

WARNING:TYPO_SPELLING: 'Retruns' may be misspelled - perhaps 'Returns'?
#390: FILE: drivers/elsacct/bank.c:311:
+ * Retruns an available bank identifier. It first looks
    ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/elsacct/bank.c:313:
+ * if there is still free id (equivalent to next_bid > 0). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/elsacct/bank.c:314:
+ * If yes, it update next_bid returns the identifier. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/elsacct/bank.c:315:
+ * If an error is encountered, a negative value is returned. $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.freebid_head
#405: FILE: drivers/elsacct/bank.c:326:
+	if (!list_empty(&(elsa_broot.freebid_head))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around freebid->bid_list
#415: FILE: drivers/elsacct/bank.c:336:
+		list_del(&(freebid->bid_list));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#425: FILE: drivers/elsacct/bank.c:346:
+		} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/elsacct/bank.c:359:
+ * $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.bank_head
#446: FILE: drivers/elsacct/bank.c:367:
+	if (!list_empty(&(elsa_broot.bank_head)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#447: FILE: drivers/elsacct/bank.c:368:
+		list_for_each_entry(bank, &(elsa_broot.bank_head), bank_list)
+		    if (bank->bid == bid) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.bank_head
#447: FILE: drivers/elsacct/bank.c:368:
+		list_for_each_entry(bank, &(elsa_broot.bank_head), bank_list)

WARNING:TABSTOP: Statements should start on a tabstop
#448: FILE: drivers/elsacct/bank.c:369:
+		    if (bank->bid == bid) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/elsacct/bank.c:381:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/elsacct/bank.c:382:
+ * Finds a data that points to a process if it exists.  $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#469: FILE: drivers/elsacct/bank.c:390:
+	if (!list_empty(&(bank->data_head))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#470: FILE: drivers/elsacct/bank.c:391:
+		list_for_each_entry(data, &(bank->data_head), data_list) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#473: FILE: drivers/elsacct/bank.c:394:
+				printk("elsa_get_data: found PID#%d\n", p->pid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_get_data', this function's name, in a string
#473: FILE: drivers/elsacct/bank.c:394:
+				printk("elsa_get_data: found PID#%d\n", p->pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: drivers/elsacct/bank.c:408:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/elsacct/bank.c:410:
+ * If an error is encountered, a negative value is returned. $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#506: FILE: drivers/elsacct/bank.c:427:
+	    (struct elsa_bank_s *)kmalloc(sizeof(struct elsa_bank_s),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#510: FILE: drivers/elsacct/bank.c:431:
+		printk("elsa_bank_alloc: cannot allocate space for new_bank\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#510: FILE: drivers/elsacct/bank.c:431:
+		printk("elsa_bank_alloc: cannot allocate space for new_bank\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: drivers/elsacct/bank.c:442:
+		printk("elsa_bank_alloc: can not find bank identifier\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#521: FILE: drivers/elsacct/bank.c:442:
+		printk("elsa_bank_alloc: can not find bank identifier\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#524: FILE: drivers/elsacct/bank.c:445:
+		return -ENODATA;
+	} else {

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#531: FILE: drivers/elsacct/bank.c:452:
+	/* Initialize head (list of datas) */
 	                            ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_bank->data_head
#532: FILE: drivers/elsacct/bank.c:453:
+	INIT_LIST_HEAD(&(new_bank->data_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_bank->bank_list
#535: FILE: drivers/elsacct/bank.c:456:
+	list_add(&(new_bank->bank_list), &(elsa_broot.bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.bank_head
#535: FILE: drivers/elsacct/bank.c:456:
+	list_add(&(new_bank->bank_list), &(elsa_broot.bank_head));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_alloc', this function's name, in a string
#539: FILE: drivers/elsacct/bank.c:460:
+	    ("elsa_bank_alloc: bank #%d created and added to the list\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: drivers/elsacct/bank.c:469:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/elsacct/bank.c:471:
+ * When this function is called bank MUST be empty $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: drivers/elsacct/bank.c:472:
+ * If an error is encountered, a negative value is returned. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/elsacct/bank.c:473:
+ * If there is no corresponding BANK_ID, 0 is returned.  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#566: FILE: drivers/elsacct/bank.c:487:
+		printk("elsa_bank_free: BUG found - lists isn't empty\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_free', this function's name, in a string
#566: FILE: drivers/elsacct/bank.c:487:
+		printk("elsa_bank_free: BUG found - lists isn't empty\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (elsa_broot.bank_cb)
#573: FILE: drivers/elsacct/bank.c:494:
+		(elsa_broot.bank_cb) (bank->bid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#581: FILE: drivers/elsacct/bank.c:502:
+		printk("elsa_bank_free: cannot allocate space for freebid\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_free', this function's name, in a string
#581: FILE: drivers/elsacct/bank.c:502:
+		printk("elsa_bank_free: cannot allocate space for freebid\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_freebid->bid_list
#586: FILE: drivers/elsacct/bank.c:507:
+	list_add(&(new_freebid->bid_list), &(elsa_broot.freebid_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around elsa_broot.freebid_head
#586: FILE: drivers/elsacct/bank.c:507:
+	list_add(&(new_freebid->bid_list), &(elsa_broot.freebid_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->bank_list
#589: FILE: drivers/elsacct/bank.c:510:
+	list_del(&(bank->bank_list));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#591: FILE: drivers/elsacct/bank.c:512:
+	printk("elsa_bank_free: bank #%d removed from the list\n", bank->bid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_bank_free', this function's name, in a string
#591: FILE: drivers/elsacct/bank.c:512:
+	printk("elsa_bank_free: bank #%d removed from the list\n", bank->bid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/elsacct/bank.c:522:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: drivers/elsacct/bank.c:523:
+ * Frees memory space used by data. If it is the last element present in a $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#606: FILE: drivers/elsacct/bank.c:527:
+#define __elsa_data_free(data) do { \
+	list_del(&data->data_list); \
+	list_del(&data->bank_list); \
+	kfree(data);                \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#606: FILE: drivers/elsacct/bank.c:527:
+#define __elsa_data_free(data) do { \
+	list_del(&data->data_list); \
+	list_del(&data->bank_list); \
+	kfree(data);                \
+} while (0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_data_free', this function's name, in a string
#618: FILE: drivers/elsacct/bank.c:539:
+	    ("elsa_data_free: process #%d removed from bank #%d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (elsa_broot.data_cb)
#623: FILE: drivers/elsacct/bank.c:544:
+		(elsa_broot.data_cb) (data->bid, data->process);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#636: FILE: drivers/elsacct/bank.c:557:
+ /*********************************
+ * functions used to manage /proc *

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#642: FILE: drivers/elsacct/bank.c:563:
+ * Add an entry in /proc to get informations concerning
                                 ^^^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: drivers/elsacct/bank.c:567:
+static void *b_start(struct seq_file *m, loff_t * pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: drivers/elsacct/bank.c:596:
+static void *b_next(struct seq_file *m, void *v, loff_t * pos)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#690: FILE: drivers/elsacct/bank.c:611:
+		seq_printf(m, "There is no banks\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#695: FILE: drivers/elsacct/bank.c:616:
+		seq_printf(m, "\t");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#697: FILE: drivers/elsacct/bank.c:618:
+		if (list_empty(&(bank->data_head))) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#698: FILE: drivers/elsacct/bank.c:619:
+			seq_printf(m, "Empty");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#700: FILE: drivers/elsacct/bank.c:621:
+			list_for_each_entry(data, &(bank->data_head), data_list)
+			    seq_printf(m, "%d ", data->process->pid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bank->data_head
#700: FILE: drivers/elsacct/bank.c:621:
+			list_for_each_entry(data, &(bank->data_head), data_list)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#704: FILE: drivers/elsacct/bank.c:625:
+		seq_printf(m, "\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#715: FILE: drivers/elsacct/bank.c:636:
+struct seq_operations bankinfo_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#727: FILE: drivers/elsacct/bank.c:648:
+struct file_operations proc_bankinfo_ops = {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#734: FILE: drivers/elsacct/bank.c:655:
+EXPORT_SYMBOL(proc_bankinfo_ops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#741: FILE: drivers/elsacct/elsacct.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: drivers/elsacct/elsacct.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: drivers/elsacct/elsacct.c:7:
+ *  This module implements Enhanced Linux System Accounting. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: drivers/elsacct/elsacct.c:8:
+ *  We implement a character driver to transfer data between $

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#749: FILE: drivers/elsacct/elsacct.c:9:
+ *  BANK that are in the kernel adress space and the user 
                                 ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/elsacct/elsacct.c:9:
+ *  BANK that are in the kernel adress space and the user $

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#750: FILE: drivers/elsacct/elsacct.c:10:
+ *  adress space. 
     ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: drivers/elsacct/elsacct.c:10:
+ *  adress space. $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#766: FILE: drivers/elsacct/elsacct.c:26:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: drivers/elsacct/elsacct.c:39:
+ *  is a 13-bit fraction with a 3-bit (base 8) exponent. $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#794: FILE: drivers/elsacct/elsacct.c:54:
+	exp = rnd = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#819: FILE: drivers/elsacct/elsacct.c:79:
+ * @info: pointer to accounting informations
                                 ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#851: FILE: drivers/elsacct/elsacct.c:111:
+ * $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#863: FILE: drivers/elsacct/elsacct.c:123:
+		printk("elsa_acct: error BID == %d\n", bid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsa_acct', this function's name, in a string
#863: FILE: drivers/elsacct/elsacct.c:123:
+		printk("elsa_acct: error BID == %d\n", bid);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'info' - possible side-effects?
#866: FILE: drivers/elsacct/elsacct.c:126:
+#define display_elsa_info(info) do {                             \
+	printk("\tNumber of Processes : %d\n",info->eac_ptot);   \
+	printk("\tElapsed Time        : %d\n",info->eac_etime);  \
+	printk("\tUser Time           : %d\n",info->eac_utime);  \
+	printk("\tSystem Time         : %d\n",info->eac_stime);  \
+	printk("\tMinor page faults   : %d\n",info->eac_minflt); \
+	printk("\tMajor page faults   : %d\n",info->eac_majflt); \
+	printk("\tNumber of swaps     : %d\n",info->eac_swaps);  \
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'info' may be better as '(info)' to avoid precedence issues
#866: FILE: drivers/elsacct/elsacct.c:126:
+#define display_elsa_info(info) do {                             \
+	printk("\tNumber of Processes : %d\n",info->eac_ptot);   \
+	printk("\tElapsed Time        : %d\n",info->eac_etime);  \
+	printk("\tUser Time           : %d\n",info->eac_utime);  \
+	printk("\tSystem Time         : %d\n",info->eac_stime);  \
+	printk("\tMinor page faults   : %d\n",info->eac_minflt); \
+	printk("\tMajor page faults   : %d\n",info->eac_majflt); \
+	printk("\tNumber of swaps     : %d\n",info->eac_swaps);  \
+} while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#867: FILE: drivers/elsacct/elsacct.c:127:
+	printk("\tNumber of Processes : %d\n",info->eac_ptot);   \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#867: FILE: drivers/elsacct/elsacct.c:127:
+	printk("\tNumber of Processes : %d\n",info->eac_ptot);   \
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#868: FILE: drivers/elsacct/elsacct.c:128:
+	printk("\tElapsed Time        : %d\n",info->eac_etime);  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: drivers/elsacct/elsacct.c:128:
+	printk("\tElapsed Time        : %d\n",info->eac_etime);  \
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#869: FILE: drivers/elsacct/elsacct.c:129:
+	printk("\tUser Time           : %d\n",info->eac_utime);  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#869: FILE: drivers/elsacct/elsacct.c:129:
+	printk("\tUser Time           : %d\n",info->eac_utime);  \
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#870: FILE: drivers/elsacct/elsacct.c:130:
+	printk("\tSystem Time         : %d\n",info->eac_stime);  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#870: FILE: drivers/elsacct/elsacct.c:130:
+	printk("\tSystem Time         : %d\n",info->eac_stime);  \
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#871: FILE: drivers/elsacct/elsacct.c:131:
+	printk("\tMinor page faults   : %d\n",info->eac_minflt); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: drivers/elsacct/elsacct.c:131:
+	printk("\tMinor page faults   : %d\n",info->eac_minflt); \
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#872: FILE: drivers/elsacct/elsacct.c:132:
+	printk("\tMajor page faults   : %d\n",info->eac_majflt); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#872: FILE: drivers/elsacct/elsacct.c:132:
+	printk("\tMajor page faults   : %d\n",info->eac_majflt); \
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#873: FILE: drivers/elsacct/elsacct.c:133:
+	printk("\tNumber of swaps     : %d\n",info->eac_swaps);  \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: drivers/elsacct/elsacct.c:133:
+	printk("\tNumber of swaps     : %d\n",info->eac_swaps);  \
 	                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#874: FILE: drivers/elsacct/elsacct.c:134:
+} while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: drivers/elsacct/elsacct.c:141:
+ * information to a buffer and release memory space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: drivers/elsacct/elsacct.c:150:
+^I/* $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#895: FILE: drivers/elsacct/elsacct.c:155:
+		printk("free_elsa_info: ELSA information about bank #%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_elsa_info', this function's name, in a string
#895: FILE: drivers/elsacct/elsacct.c:155:
+		printk("free_elsa_info: ELSA information about bank #%d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#900: FILE: drivers/elsacct/elsacct.c:160:
+		printk("free_elsa_info: ERROR, info == NULL\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_elsa_info', this function's name, in a string
#900: FILE: drivers/elsacct/elsacct.c:160:
+		printk("free_elsa_info: ERROR, info == NULL\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#909: FILE: drivers/elsacct/elsacct.c:169:
+ * equal to bid. $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#915: FILE: drivers/elsacct/elsacct.c:175:
+	info = (struct elsa_acct_s *)kmalloc(sizeof(struct elsa_acct_s),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct elsa_acct_s)...)
#915: FILE: drivers/elsacct/elsacct.c:175:
+	info = (struct elsa_acct_s *)kmalloc(sizeof(struct elsa_acct_s),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#919: FILE: drivers/elsacct/elsacct.c:179:
+		printk("Bank #id%d created: info hung\n", bid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#927: FILE: drivers/elsacct/elsacct.c:187:
+		printk(KERN_WARNING "Bank #id%d created: info error\n", bid);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#930: FILE: drivers/elsacct/elsacct.c:190:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#933: FILE: drivers/elsacct/elsacct.c:193:
+ /**************************************************************
+ * functions used to manipulate the device                     *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: drivers/elsacct/elsacct.c:199:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: drivers/elsacct/elsacct.c:200:
+ * The process context, represented as a typical driver method - ioctl(), must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: drivers/elsacct/elsacct.c:201:
+ * use spin_lock_irq() because it knows that interrupts are always enabled while $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: drivers/elsacct/elsacct.c:211:
+ * @ppos : pointer to long offset type that indicates the file $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: drivers/elsacct/elsacct.c:214:
+ * Copy data from the device to user space. $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#957: FILE: drivers/elsacct/elsacct.c:217:
+ssize_t elsacct_read(struct file *file, char *buf, size_t count, loff_t * ppos)

CHECK:SPACING: No space is necessary after a cast
#959: FILE: drivers/elsacct/elsacct.c:219:
+	return (ssize_t) 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: drivers/elsacct/elsacct.c:227:
+ * @ppos : pointer to long offset type that indicates the file $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/elsacct/elsacct.c:230:
+ * Copy data from user space to the device. $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#973: FILE: drivers/elsacct/elsacct.c:233:
+ssize_t elsacct_write(struct file * file, const char *buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#974: FILE: drivers/elsacct/elsacct.c:234:
+		      size_t count, loff_t * ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1002: FILE: drivers/elsacct/elsacct.c:262:
+			printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1003: FILE: drivers/elsacct/elsacct.c:263:
+			       "elsacct_ioctl: ELSACCT_CLEAN wrong parameter\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1006: FILE: drivers/elsacct/elsacct.c:266:
+			printk(KERN_INFO "elsacct_ioctl: clean bank ID#%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1006: FILE: drivers/elsacct/elsacct.c:266:
+			printk(KERN_INFO "elsacct_ioctl: clean bank ID#%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1017: FILE: drivers/elsacct/elsacct.c:277:
+			printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1018: FILE: drivers/elsacct/elsacct.c:278:
+			       "elsacct_ioctl: ELSACCT_CLEAN wrong parameter\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1021: FILE: drivers/elsacct/elsacct.c:281:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1022: FILE: drivers/elsacct/elsacct.c:282:
+			       "elsacct_ioctl: add process #%d to bank #%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1027: FILE: drivers/elsacct/elsacct.c:287:
+				printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1044: FILE: drivers/elsacct/elsacct.c:304:
+			printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1045: FILE: drivers/elsacct/elsacct.c:305:
+			       "elsacct_ioctl: ELSACCT_CLEAN wrong parameter\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1048: FILE: drivers/elsacct/elsacct.c:308:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1049: FILE: drivers/elsacct/elsacct.c:309:
+			       "elsacct_ioctl: remove process #%d to bank #%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1058: FILE: drivers/elsacct/elsacct.c:318:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_ioctl', this function's name, in a string
#1059: FILE: drivers/elsacct/elsacct.c:319:
+		       "elsacct_ioctl: 0x%x unsupported ioctl command\n", cmd);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1076: FILE: drivers/elsacct/elsacct.c:336:
+struct file_operations elsa_fops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: drivers/elsacct/elsacct.c:347:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: drivers/elsacct/elsacct.c:348:
+ * Initializes "callbacks" to bank and data. Those $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1100: FILE: drivers/elsacct/elsacct.c:360:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_init', this function's name, in a string
#1101: FILE: drivers/elsacct/elsacct.c:361:
+		       "elsacct_init: can't get major %d\n", elsa_major);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1104: FILE: drivers/elsacct/elsacct.c:364:
+	printk(KERN_INFO "elsacct_init: get major %d\n", elsa_major);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elsacct_init', this function's name, in a string
#1104: FILE: drivers/elsacct/elsacct.c:364:
+	printk(KERN_INFO "elsacct_init: get major %d\n", elsa_major);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/elsacct/elsacct.c:383:
+^I   but we add it because when init will become more $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1123: FILE: drivers/elsacct/elsacct.c:383:
+	/* currently, we know that this code can not be run
+	   but we add it because when init will become more 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1125: FILE: drivers/elsacct/elsacct.c:385:
+	   created before the problem */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1133: FILE: drivers/elsacct/elsacct.c:393:
+ /************************
+ * Module initialization *

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: drivers/elsacct/elsacct.c:399:
+ * Display a message in dmesg and call the real $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1144: FILE: drivers/elsacct/elsacct.c:404:
+	printk(KERN_INFO "ELSA accounting started\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/elsacct/elsacct.c:411:
+ * Display a message in dmesg $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1157: FILE: drivers/elsacct/elsacct.c:417:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1160: FILE: drivers/elsacct/elsacct.c:420:
+		printk(KERN_INFO "elsacct_cleanup: accounting terminated\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1187: FILE: drivers/elsacct/Kconfig:8:
+config BANK
+	bool "ELSA bank support"
+	depends on EXPERIMENTAL
+	default n
+	---help---
+	  BANK structures are needed if you want to do enhanced 
+	  linux system accounting
+
+	  say Y if you want to use Enhanced Linux Sytem Accounting
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1192: FILE: drivers/elsacct/Kconfig:13:
+^I  BANK structures are needed if you want to do enhanced $

WARNING:TYPO_SPELLING: 'Sytem' may be misspelled - perhaps 'System'?
#1195: FILE: drivers/elsacct/Kconfig:16:
+	  say Y if you want to use Enhanced Linux Sytem Accounting
 	                                          ^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1197: FILE: drivers/elsacct/Kconfig:18:
+config ELSACCT
+	tristate "Enhanced Linux System Accounting"
+	depends on EXPERIMENTAL
+	requires BANK
+	default n
+	---help---
+  	  The goal of accounting is to collect and report the use of various 
+  	  system resources by applications. Informations, like process time, 
+  	  CPU usage, connect time or disk space usage, provides data that helps 
+  	  the system to adjust the use of resources between processes.
+  	
+  	  The current BSD-like process accounting that already exists in Linux 
+  	  collects informations on individual users or groups of users. The ELSA 
+  	  project aims to improve and extend the monitoring of resources with 
+  	  different criteria like groups of processes. Another target for this 
+  	  project is to give Linux an homogeneous set of commands for all kinds 
+  	  of accounting (memory, CPU and I/O).
+  	
+     	  To compile this driver as a module, choose M here: the module will be 
+  	  called elsa-acct.
+  
+  	  Documentation about ELSA is available from
+  	  <http://elsa.sourceforge.net>
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: drivers/elsacct/Kconfig:24:
+  ^I  The goal of accounting is to collect and report the use of various $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1204: FILE: drivers/elsacct/Kconfig:25:
+  	  system resources by applications. Informations, like process time, 
   	                                    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: drivers/elsacct/Kconfig:25:
+  ^I  system resources by applications. Informations, like process time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: drivers/elsacct/Kconfig:26:
+  ^I  CPU usage, connect time or disk space usage, provides data that helps $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: drivers/elsacct/Kconfig:28:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1208: FILE: drivers/elsacct/Kconfig:29:
+  ^I  The current BSD-like process accounting that already exists in Linux $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1209: FILE: drivers/elsacct/Kconfig:30:
+  	  collects informations on individual users or groups of users. The ELSA 
   	           ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: drivers/elsacct/Kconfig:30:
+  ^I  collects informations on individual users or groups of users. The ELSA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: drivers/elsacct/Kconfig:31:
+  ^I  project aims to improve and extend the monitoring of resources with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/elsacct/Kconfig:32:
+  ^I  different criteria like groups of processes. Another target for this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: drivers/elsacct/Kconfig:33:
+  ^I  project is to give Linux an homogeneous set of commands for all kinds $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1214: FILE: drivers/elsacct/Kconfig:35:
+  ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/elsacct/Kconfig:36:
+     ^I  To compile this driver as a module, choose M here: the module will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1217: FILE: drivers/elsacct/Kconfig:38:
+  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1221: FILE: drivers/elsacct/Kconfig:42:
+config ELSACCT_DEBUG
+	bool "ELSA bank debugging support"
+	depends on ELSACCT
+	default n
+	---help---
+          This option allows you to enable debugging output when using 
+	  banks structure. Currently, such structure is used by Enhanced
+	  Linux System Accounting (ELSA). Informations are sent to the 
+	  console.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: drivers/elsacct/Kconfig:47:
+          This option allows you to enable debugging output when using $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1228: FILE: drivers/elsacct/Kconfig:49:
+	  Linux System Accounting (ELSA). Informations are sent to the 
 	                                  ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1228: FILE: drivers/elsacct/Kconfig:49:
+^I  Linux System Accounting (ELSA). Informations are sent to the $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1265: FILE: include/linux/bank.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: include/linux/bank.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: include/linux/bank.h:6:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1271: FILE: include/linux/bank.h:7:
+ *  Provides structures and functions to manipulate "BANK". $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: include/linux/bank.h:8:
+ *  They are containers that store a set of processes. $

WARNING:TYPO_SPELLING: 'Informations' may be misspelled - perhaps 'Information'?
#1274: FILE: include/linux/bank.h:10:
+ *  mations are stored in a file. Informations are about 
                                   ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: include/linux/bank.h:10:
+ *  mations are stored in a file. Informations are about $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: include/linux/bank.h:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1277: FILE: include/linux/bank.h:13:
+ *  The idea is to provide a mechanism that allows to group $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#1283: FILE: include/linux/bank.h:19:
+ *    o When the last process of a bank exits, informations about all processes
                                                ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: include/linux/bank.h:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: include/linux/bank.h:25:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1290: FILE: include/linux/bank.h:26:
+ *         elsa_broot          BANK #1           BANK #2  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1291: FILE: include/linux/bank.h:27:
+ *        bank_root_s         elsa_bank_s       elsa_bank_s  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1292: FILE: include/linux/bank.h:28:
+ *       --------------       -----------       ----------- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: include/linux/bank.h:39:
+ *                                   |  ================= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: include/linux/bank.h:40:
+ *    PROCESS            DATA #1     |     DATA #2       |  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: include/linux/bank.h:70:
+^I/* $

WARNING:SPACING: Unnecessary space before function pointer arguments
#1341: FILE: include/linux/bank.h:77:
+	void (*bank_cb) (int bid);	/* action to perform when bank is removed */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1342: FILE: include/linux/bank.h:78:
+	void (*data_cb) (int bid, struct task_struct * p);	/* action to perform when data is removed */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1342: FILE: include/linux/bank.h:78:
+	void (*data_cb) (int bid, struct task_struct * p);	/* action to perform when data is removed */

WARNING:SPACING: Unnecessary space before function pointer arguments
#1342: FILE: include/linux/bank.h:78:
+	void (*data_cb) (int bid, struct task_struct * p);	/* action to perform when data is removed */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'root' - possible side-effects?
#1345: FILE: include/linux/bank.h:81:
+#define BANK_ROOT_INIT(root) {                     \
+		1,                                 \
+		LIST_HEAD_INIT(root.freebid_head), \
+		LIST_HEAD_INIT(root.bank_head),    \
+		NULL,				   \
+		NULL 				   \
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1350: FILE: include/linux/bank.h:86:
+^I^INULL ^I^I^I^I   \$

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#1363: FILE: include/linux/bank.h:99:
+	struct list_head data_head;	/* head of the list of datas in the 
 	                           	                       ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1363: FILE: include/linux/bank.h:99:
+^Istruct list_head data_head;^I/* head of the list of datas in the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1364: FILE: include/linux/bank.h:100:
+	struct list_head data_head;	/* head of the list of datas in the 
+					   bank */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1364: FILE: include/linux/bank.h:100:
+					   bank */

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#1370: FILE: include/linux/bank.h:106:
+	struct list_head data_list;	/* link between datas in a bank */
 	                           	                ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: include/linux/bank.h:107:
+^Istruct list_head bank_list;^I/* used by a process to link banks $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1372: FILE: include/linux/bank.h:108:
+	struct list_head bank_list;	/* used by a process to link banks 
+					   that contains it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1372: FILE: include/linux/bank.h:108:
+					   that contains it */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1376: FILE: include/linux/bank.h:112:
+extern struct file_operations proc_bankinfo_ops;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1380: FILE: include/linux/bank.h:116:
+ /*********************************************
+ * Following functions can be use by a module *

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1392: FILE: include/linux/bank.h:128:
+ /*****************************************************************************
+ * Following functions are called from kernel function.                       *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1397: FILE: include/linux/bank.h:133:
+extern void elsa_copy_parent_bank(struct task_struct *from,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1399: FILE: include/linux/bank.h:135:
+extern void elsa_bank_remove_all(struct task_struct *p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1401: FILE: include/linux/bank.h:137:
+#define elsa_copy_parent_bank(a,b) do {} while(0)
                                ^

ERROR:SPACING: space required before the open parenthesis '('
#1401: FILE: include/linux/bank.h:137:
+#define elsa_copy_parent_bank(a,b) do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1402: FILE: include/linux/bank.h:138:
+#define elsa_bank_remove_all(a)    do {} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1410: FILE: include/linux/elsacct.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1412: FILE: include/linux/elsacct.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: include/linux/elsacct.h:6:
+ *      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1422: FILE: include/linux/elsacct.h:13:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1423: FILE: include/linux/elsacct.h:14:
+ * Remove all process present in a bank. It needs one argument which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1430: FILE: include/linux/elsacct.h:21:
+ * ARG1 the pid of the process to add. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1432: FILE: include/linux/elsacct.h:23:
+#define ELSACCT_ADD ^I0x1$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1433: FILE: include/linux/elsacct.h:24:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: include/linux/elsacct.h:26:
+ * ARG0 is the identifier of the bank. If it is equal to zero, it means $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: include/linux/elsacct.h:28:
+ * ARG1 is the pid of the process to remove. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1447: FILE: include/linux/elsacct.h:38:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1448: FILE: include/linux/elsacct.h:39:
+ * Currently, we take as a starting point the BSD-style $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1449: FILE: include/linux/elsacct.h:40:
+ * process accounting. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1511: FILE: kernel/fork.c:237:
+^I/* $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current->bank_head
#1516: FILE: kernel/fork.c:242:
+	INIT_LIST_HEAD(&(current->bank_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->bank_head
#1524: FILE: kernel/fork.c:1064:
+	INIT_LIST_HEAD(&(p->bank_head));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1534: FILE: kernel/fork.c:1201:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: kernel/fork.c:1203:
+^I^I * the list of banks from parent (current) to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1537: FILE: kernel/fork.c:1204:
+^I^I * child (p)  $

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#1551: FILE: Makefile:4:
+EXTRAVERSION = -elsa
 ^^^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283961.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 126 errors, 140 warnings, 39 checks, 1427 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000283961.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
