WARNING:TYPO_SPELLING: 'intersting' may be misspelled - perhaps 'interesting'?
#26: 
> I think your benchmark is very intersting.
                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#49: FILE: mm/vmscan.c:47:
+int vm_swappiness = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: mm/vmscan.c:591:
+       swap_tendency = mapped_ratio / 2 + distress;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: mm/vmscan.c:593:
+        vm_swap_feedback = (swap_tendency - 50)/10;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: mm/vmscan.c:593:
+        vm_swap_feedback = (swap_tendency - 50)/10;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#61: FILE: mm/vmscan.c:593:
+        vm_swap_feedback = (swap_tendency - 50)/10;
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: mm/vmscan.c:594:
+        vm_swappiness += vm_swap_feedback;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: mm/vmscan.c:594:
+        vm_swappiness += vm_swap_feedback;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: mm/vmscan.c:595:
+        if (vm_swappiness < 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: mm/vmscan.c:595:
+        if (vm_swappiness < 0){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#63: FILE: mm/vmscan.c:595:
+        if (vm_swappiness < 0){
+               vm_swappiness = 0;

ERROR:SPACING: space required before the open brace '{'
#63: FILE: mm/vmscan.c:595:
+        if (vm_swappiness < 0){

CHECK:BRACES: braces {} should be used on all arms of this statement
#63: FILE: mm/vmscan.c:595:
+        if (vm_swappiness < 0){
[...]
+       else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: mm/vmscan.c:596:
+               vm_swappiness = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: mm/vmscan.c:596:
+               vm_swappiness = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: mm/vmscan.c:597:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: mm/vmscan.c:598:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#66: FILE: mm/vmscan.c:598:
+       else
+       if (vm_swappiness > 100){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#66: FILE: mm/vmscan.c:598:
+       }
+       else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: mm/vmscan.c:599:
+       if (vm_swappiness > 100){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#67: FILE: mm/vmscan.c:599:
+       if (vm_swappiness > 100){
+               vm_swappiness = 100;

ERROR:SPACING: space required before the open brace '{'
#67: FILE: mm/vmscan.c:599:
+       if (vm_swappiness > 100){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#67: FILE: mm/vmscan.c:599:
+       if (vm_swappiness > 100){
+               vm_swappiness = 100;
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: mm/vmscan.c:600:
+               vm_swappiness = 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: mm/vmscan.c:600:
+               vm_swappiness = 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: mm/vmscan.c:601:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: mm/vmscan.c:602:
+        swap_tendency += vm_swappiness;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: mm/vmscan.c:602:
+        swap_tendency += vm_swappiness;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 16 warnings, 2 checks, 28 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
