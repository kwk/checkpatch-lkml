WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -ur -X dontdiff linux-2.4.19-pre4/fs/block_dev.c linux-2.4.19-pre4-390/fs/block_dev.c

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#52: FILE: fs/block_dev.c:546:
+	struct block_device_operations *bdops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#141: FILE: fs/partitions/check.c:252:
+		printk(" unable to open\n");

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#247: FILE: fs/partitions/ibm.c:66:
+	Sector sect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#274: FILE: fs/partitions/ibm.c:71:
+	if ((info = kmalloc(sizeof(dasd_information_t), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#276: FILE: fs/partitions/ibm.c:73:
+	if ((geo = kmalloc(sizeof(struct hd_geometry), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*geo)...) over kmalloc(sizeof(struct hd_geometry)...)
#276: FILE: fs/partitions/ibm.c:73:
+	if ((geo = kmalloc(sizeof(struct hd_geometry), GFP_KERNEL)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: fs/partitions/ibm.c:75:
+	if ((vlabel = kmalloc(sizeof(volume_label_t), GFP_KERNEL)) == NULL)

CHECK:SPACING: No space is necessary after a cast
#281: FILE: fs/partitions/ibm.c:78:
+	if (ioctl_by_bdev(bdev, BIODASDINFO, (unsigned long) info) != 0 ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#282: FILE: fs/partitions/ibm.c:79:
+	    ioctl_by_bdev(bdev, HDIO_GETGEO, (unsigned long) geo) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#285: FILE: fs/partitions/ibm.c:82:
+	if ((blocksize = get_hardsect_size(to_kdev_t(bdev->bd_dev))) <= 0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#291: FILE: fs/partitions/ibm.c:88:
+	data = read_dev_sector(bdev, info->label_block*(blocksize/512), &sect);
 	                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: fs/partitions/ibm.c:88:
+	data = read_dev_sector(bdev, info->label_block*(blocksize/512), &sect);
 	                                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#292: FILE: fs/partitions/ibm.c:89:
+	if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!info->FBA_layout'
#301: FILE: fs/partitions/ibm.c:92:
+	if ((!info->FBA_layout) && (!strcmp(info->type, "ECKD")))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: fs/partitions/ibm.c:96:
+	memcpy (vlabel, data, sizeof(volume_label_t));

CHECK:SPACING: No space is necessary after a cast
#326: FILE: fs/partitions/ibm.c:109:
+		int *label = (int *) data;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#329: FILE: fs/partitions/ibm.c:112:
+			printk("CMS1/%8s(MDSK):", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#337: FILE: fs/partitions/ibm.c:116:
+			size = (label[7] - 1)*(blocksize >> 9);
 			                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: fs/partitions/ibm.c:118:
+			printk("CMS1/%8s:", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#365: FILE: fs/partitions/ibm.c:124:
+				 offset*(blocksize >> 9),
 				       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#366: FILE: fs/partitions/ibm.c:125:
+				 size-offset*(blocksize >> 9));
 				     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#366: FILE: fs/partitions/ibm.c:125:
+				 size-offset*(blocksize >> 9));
 				            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: fs/partitions/ibm.c:133:
+		printk("VOL1/%8s:", name);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#376: FILE: fs/partitions/ibm.c:135:
+^I^I// ^I^I hd->sizes[first_part_minor - 1]<<1);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#382: FILE: fs/partitions/ibm.c:140:
+		while ((data = read_dev_sector(bdev, blk*(blocksize/512),
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#382: FILE: fs/partitions/ibm.c:140:
+		while ((data = read_dev_sector(bdev, blk*(blocksize/512),
 		                                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#391: FILE: fs/partitions/ibm.c:149:
+			if (f1.DS1FMTID == _ascebc['4']
+			    || f1.DS1FMTID == _ascebc['5']

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#392: FILE: fs/partitions/ibm.c:150:
+			    || f1.DS1FMTID == _ascebc['5']
+			    || f1.DS1FMTID == _ascebc['7']) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: fs/partitions/ibm.c:151:
+^I^I^I        blk++;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: fs/partitions/ibm.c:161:
+^I^I^Isize  = cchh2blk(&f1.DS1EXT1.ulimit, geo) - $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: fs/partitions/ibm.c:165:
+^I^I^Iadd_gd_partition(hd, first_part_minor + counter, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#433: FILE: fs/partitions/ibm.c:176:
+			printk ("LNX1/%8s:", name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: fs/partitions/ibm.c:176:
+			printk ("LNX1/%8s:", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#435: FILE: fs/partitions/ibm.c:178:
+			printk("(nonl)/%8s:", name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#440: FILE: fs/partitions/ibm.c:183:
+				 offset*(blocksize >> 9),
 				       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#441: FILE: fs/partitions/ibm.c:184:
+				  size-offset*(blocksize >> 9));
 				      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#441: FILE: fs/partitions/ibm.c:184:
+				  size-offset*(blocksize >> 9));
 				             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#447: FILE: fs/partitions/ibm.c:187:
+	printk("\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 20 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468024.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
