WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
>     This patch makes sure that indirect pointers for holes are correctly filled in by zeroes at

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: fs/buffer.c:1765:
+       struct address_space *mapping = inode->i_mapping;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: fs/buffer.c:1766:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: fs/buffer.c:1767:
+       unsigned long index, offset, limit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: fs/buffer.c:1768:
+       int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/buffer.c:1770:
+       limit = current->rlim[RLIMIT_FSIZE].rlim_cur;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/buffer.c:1771:
+       if (limit != RLIM_INFINITY) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#61: FILE: fs/buffer.c:1771:
+       if (limit != RLIM_INFINITY) {
+               if (size > limit) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: fs/buffer.c:1772:
+               if (size > limit) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: fs/buffer.c:1772:
+               if (size > limit) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#62: FILE: fs/buffer.c:1772:
+               if (size > limit) {
+                       send_sig(SIGXFSZ, current, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: fs/buffer.c:1773:
+                       send_sig(SIGXFSZ, current, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/buffer.c:1773:
+                       send_sig(SIGXFSZ, current, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/buffer.c:1774:
+                       size = limit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/buffer.c:1774:
+                       size = limit;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: fs/buffer.c:1775:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/buffer.c:1775:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/buffer.c:1776:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/buffer.c:1777:
+       offset = (size & (PAGE_CACHE_SIZE-1)); /* Within page */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: fs/buffer.c:1777:
+       offset = (size & (PAGE_CACHE_SIZE-1)); /* Within page */
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: fs/buffer.c:1779:
+       /* ugh.  in prepare/commit_write, if from==to==start of block, we $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#70: FILE: fs/buffer.c:1780:
+       /* ugh.  in prepare/commit_write, if from==to==start of block, we 
+       ** skip the prepare.  make sure we never send an offset for the start

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: fs/buffer.c:1783:
+       if ((offset & (inode->i_sb->s_blocksize - 1)) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#73: FILE: fs/buffer.c:1783:
+       if ((offset & (inode->i_sb->s_blocksize - 1)) == 0) {
+           offset++ ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#73: FILE: fs/buffer.c:1783:
+       if ((offset & (inode->i_sb->s_blocksize - 1)) == 0) {
+           offset++ ;
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: fs/buffer.c:1784:
+           offset++ ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: fs/buffer.c:1784:
+           offset++ ;$

WARNING:SPACING: space prohibited before semicolon
#74: FILE: fs/buffer.c:1784:
+           offset++ ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/buffer.c:1785:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/buffer.c:1786:
+       index = size >> PAGE_CACHE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/buffer.c:1787:
+       err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/buffer.c:1788:
+       page = grab_cache_page(mapping, index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/buffer.c:1789:
+       if (!page)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#79: FILE: fs/buffer.c:1789:
+       if (!page)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: fs/buffer.c:1790:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/buffer.c:1790:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/buffer.c:1791:
+       err = mapping->a_ops->prepare_write(NULL, page, offset, offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/buffer.c:1792:
+       if (!err) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#82: FILE: fs/buffer.c:1792:
+       if (!err) {
+               err = mapping->a_ops->commit_write(NULL, page, offset, offset);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#82: FILE: fs/buffer.c:1792:
+       if (!err) {
+               err = mapping->a_ops->commit_write(NULL, page, offset, offset);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: fs/buffer.c:1793:
+               err = mapping->a_ops->commit_write(NULL, page, offset, offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: fs/buffer.c:1793:
+               err = mapping->a_ops->commit_write(NULL, page, offset, offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/buffer.c:1794:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/buffer.c:1795:
+       UnlockPage(page);$

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#85: FILE: fs/buffer.c:1795:
+       UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/buffer.c:1796:
+       page_cache_release(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/buffer.c:1797:
+       if (err > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#87: FILE: fs/buffer.c:1797:
+       if (err > 0)
+               err = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: fs/buffer.c:1798:
+               err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/buffer.c:1798:
+               err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/buffer.c:1800:
+       return err;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 40 warnings, 2 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488192.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
