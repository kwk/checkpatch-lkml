WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/hwmon/ams-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: drivers/hwmon/ams-core.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#73: FILE: drivers/hwmon/ams-core.c:19:
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#98: FILE: drivers/hwmon/ams-core.c:44:
+	orient = ams.vflag? ams.orient1 : ams.orient2;
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/hwmon/ams-core.c:68:
+static ssize_t ams_show_xyz(struct device *dev,
+	struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ams_show_xyz' to 'xyz_show'
#131: FILE: drivers/hwmon/ams-core.c:77:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#133: FILE: drivers/hwmon/ams-core.c:79:
+static DEVICE_ATTR(xyz, S_IRUGO, ams_show_xyz, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#171: FILE: drivers/hwmon/ams-core.c:117:
+				printk(KERN_INFO "ams: freefall detected!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: drivers/hwmon/ams-core.c:127:
+				printk(KERN_INFO "ams: shock detected!\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#203: FILE: drivers/hwmon/ams-core.c:149:
+	prop = (u32*)get_property(ams.of_node, "orientation", NULL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/hwmon/ams-core.c:157:
+	result = pmf_register_irq_client(ams.of_node,
+			"accel-int-1",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/hwmon/ams-core.c:167:
+	result = pmf_register_irq_client(ams.of_node,
+			"accel-int-2",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#272: FILE: drivers/hwmon/ams-core.c:218:
+	printk(KERN_ERR "ams: No motion sensor found.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#323: FILE: drivers/hwmon/ams.h:1:
+#include <linux/i2c.h>

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#343: FILE: drivers/hwmon/ams.h:21:
+	struct mutex lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#392: FILE: drivers/hwmon/ams.h:70:
+extern void ams_sensors(s8 *x, s8 *y, s8 *z);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: drivers/hwmon/ams.h:71:
+extern int ams_sensor_attach(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: drivers/hwmon/ams.h:73:
+extern int ams_pmu_init(struct device_node *np);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#396: FILE: drivers/hwmon/ams.h:74:
+extern int ams_i2c_init(struct device_node *np);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: drivers/hwmon/ams.h:77:
+extern void ams_mouse_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#400: FILE: drivers/hwmon/ams.h:78:
+extern void ams_mouse_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: drivers/hwmon/ams.h:85:
+extern void ams_hdpark_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#408: FILE: drivers/hwmon/ams.h:86:
+extern void ams_hdpark_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: drivers/hwmon/ams.h:87:
+extern void ams_hdpark(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#419: FILE: drivers/hwmon/ams-hdpark.c:1:
+/*

CHECK:BRACES: Unbalanced braces around else statement
#450: FILE: drivers/hwmon/ams-hdpark.c:32:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void ams_hdpark() should probably be void ams_hdpark(void)
#459: FILE: drivers/hwmon/ams-hdpark.c:41:
+void ams_hdpark()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void ams_hdpark_init() should probably be void ams_hdpark_init(void)
#475: FILE: drivers/hwmon/ams-hdpark.c:57:
+void ams_hdpark_init()

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void ams_hdpark_exit() should probably be void ams_hdpark_exit(void)
#481: FILE: drivers/hwmon/ams-hdpark.c:63:
+void ams_hdpark_exit()

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#495: FILE: drivers/hwmon/ams-i2c.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#598: FILE: drivers/hwmon/ams-i2c.c:104:
+		u8 val = ams_i2c_read(AMS_CTRLX);
+		if (enable)     val |= 0x80;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#598: FILE: drivers/hwmon/ams-i2c.c:104:
+		if (enable)     val |= 0x80;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#599: FILE: drivers/hwmon/ams-i2c.c:105:
+		else            val &= ~0x80;

WARNING:LINE_SPACING: Missing a blank line after declarations
#605: FILE: drivers/hwmon/ams-i2c.c:111:
+		u8 val = ams_i2c_read(AMS_CTRLY);
+		if (enable)     val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#605: FILE: drivers/hwmon/ams-i2c.c:111:
+		if (enable)     val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#606: FILE: drivers/hwmon/ams-i2c.c:112:
+		else            val &= ~0x80;

WARNING:LINE_SPACING: Missing a blank line after declarations
#612: FILE: drivers/hwmon/ams-i2c.c:118:
+		u8 val = ams_i2c_read(AMS_CTRLZ);
+		if (enable)     val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#612: FILE: drivers/hwmon/ams-i2c.c:118:
+		if (enable)     val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#613: FILE: drivers/hwmon/ams-i2c.c:119:
+		else            val &= ~0x80;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#648: FILE: drivers/hwmon/ams-i2c.c:154:
+	bus = simple_strtoul(adapter->name + 6, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#658: FILE: drivers/hwmon/ams-i2c.c:164:
+		printk(KERN_INFO "ams: Failed to reset the device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#663: FILE: drivers/hwmon/ams-i2c.c:169:
+		printk(KERN_INFO "ams: Failed to start the device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#677: FILE: drivers/hwmon/ams-i2c.c:183:
+		printk(KERN_INFO "ams: Incorrect device version (%d.%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/hwmon/ams-i2c.c:184:
+		printk(KERN_INFO "ams: Incorrect device version (%d.%d)\n",
+			vmaj, vmin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#687: FILE: drivers/hwmon/ams-i2c.c:193:
+		printk(KERN_INFO "ams: Incorrect firmware version (%d.%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/hwmon/ams-i2c.c:194:
+		printk(KERN_INFO "ams: Incorrect firmware version (%d.%d)\n",
+			vmaj, vmin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#715: FILE: drivers/hwmon/ams-i2c.c:221:
+	printk(KERN_INFO "ams: Found I2C based motion sensor\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#732: FILE: drivers/hwmon/ams-i2c.c:238:
+	printk(KERN_INFO "ams: Unloading\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#758: FILE: drivers/hwmon/ams-i2c.c:264:
+	prop = (u32*)get_property(ams.of_node, "reg", NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#783: FILE: drivers/hwmon/ams-mouse.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: drivers/hwmon/ams-mouse.c:100:
+static ssize_t ams_mouse_show_mouse(struct device *dev,
+	struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/hwmon/ams-mouse.c:106:
+static ssize_t ams_mouse_store_mouse(struct device *dev,
+	struct device_attribute *attr, const char *buf, size_t count)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ams_mouse_show_mouse' to 'mouse_show' 'ams_mouse_store_mouse' to 'mouse_store'
#909: FILE: drivers/hwmon/ams-mouse.c:127:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#911: FILE: drivers/hwmon/ams-mouse.c:129:
+static DEVICE_ATTR(mouse, S_IRUGO | S_IWUSR,

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void ams_mouse_init() should probably be void ams_mouse_init(void)
#915: FILE: drivers/hwmon/ams-mouse.c:133:
+void ams_mouse_init()

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void ams_mouse_exit() should probably be void ams_mouse_exit(void)
#924: FILE: drivers/hwmon/ams-mouse.c:142:
+void ams_mouse_exit()

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#933: FILE: drivers/hwmon/ams-pmu.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#1019: FILE: drivers/hwmon/ams-pmu.c:87:
+		u8 val = ams_pmu_get_register(AMS_FF_ENABLE);
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1019: FILE: drivers/hwmon/ams-pmu.c:87:
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1020: FILE: drivers/hwmon/ams-pmu.c:88:
+		else		val &= ~0x80;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1026: FILE: drivers/hwmon/ams-pmu.c:94:
+		u8 val = ams_pmu_get_register(AMS_SHOCK_ENABLE);
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1026: FILE: drivers/hwmon/ams-pmu.c:94:
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1027: FILE: drivers/hwmon/ams-pmu.c:95:
+		else		val &= ~0x80;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1033: FILE: drivers/hwmon/ams-pmu.c:101:
+		u8 val = ams_pmu_get_register(AMS_CONTROL);
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1033: FILE: drivers/hwmon/ams-pmu.c:101:
+		if (enable)	val |= 0x80;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1034: FILE: drivers/hwmon/ams-pmu.c:102:
+		else		val &= ~0x80;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1070: FILE: drivers/hwmon/ams-pmu.c:138:
+	printk(KERN_INFO "ams: Unloading\n");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1089: FILE: drivers/hwmon/ams-pmu.c:157:
+	prop = (u32*)get_property(ams.of_node, "reg", NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1103: FILE: drivers/hwmon/ams-pmu.c:171:
+	if (result < 0) {
+		goto exit;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1126: FILE: drivers/hwmon/ams-pmu.c:194:
+	printk(KERN_INFO "ams: Found PMU based motion sensor\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1142: FILE: drivers/hwmon/Kconfig:510:
+config SENSORS_AMS
+	tristate "Motion sensor driver"
+	default y
+	help
+	  Support for the motion sensor included in PowerBooks.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1148: FILE: drivers/hwmon/Kconfig:516:
+config SENSORS_AMS_PMU
+	bool "PMU variant"
+	depends on SENSORS_AMS && ADB_PMU
+	default y
+	help
+	  PMU variant of motion sensor, found in late 2005 PowerBooks.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1155: FILE: drivers/hwmon/Kconfig:523:
+config SENSORS_AMS_I2C
+	bool "I2C variant"
+	depends on SENSORS_AMS && I2C
+	default y
+	help
+	  I2C variant of motion sensor, found in early 2005 PowerBooks and
+	  iBooks.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1163: FILE: drivers/hwmon/Kconfig:531:
+config SENSORS_AMS_MOUSE
+	bool "Support for mouse mode with motion sensor"
+	depends on SENSORS_AMS && INPUT
+	help
+	  Support for mouse emulation with motion sensor.
+

WARNING:TYPO_SPELLING: 'altough' may be misspelled - perhaps 'although'?
#1176: FILE: drivers/hwmon/Kconfig:544:
+	  head crash, altough nobody can guarantee anything.
 	              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000061502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 34 warnings, 18 checks, 1115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000061502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
