ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#69: 
--- a/drivers/usb/core/config.c	Fri Aug  9 16:59:55 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#76: FILE: drivers/usb/core/config.c:92:
+static int usb_parse_interface(struct usb_interface *interface, int ifnum, unsigned char *buffer, int size)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: drivers/usb/core/hcd.c:729:
+	retval = usb_new_device (usb_dev, parent_dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#114: FILE: drivers/usb/core/hcd.c:731:
+		dbg("%s - retval = %d", __FUNCTION__, retval);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: drivers/usb/core/hcd.h:233:
+extern int usb_new_device(struct usb_device *dev, struct device *parent);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/usb/core/hub.c:186:
+		status = hub_clear_tt_buffer (hub->intf->usb_device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/usb/core/hub.c:187:
+		status = hub_clear_tt_buffer (hub->intf->usb_device,
 				clear->devinfo, clear->tt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: drivers/usb/core/hub.c:450:
+		flush_scheduled_tasks ();

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#207: FILE: drivers/usb/core/hub.c:459:
+	if (hub->descriptor) {
+		kfree(hub->descriptor);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 0'
#232: FILE: drivers/usb/core/hub.c:481:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->bInterfaceSubClass != 1'
#232: FILE: drivers/usb/core/hub.c:481:
+	if ((desc->bInterfaceSubClass != 0) &&
+	    (desc->bInterfaceSubClass != 1)) {

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#232: FILE: drivers/usb/core/hub.c:481:
+	if ((desc->bInterfaceSubClass != 0) &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#243: FILE: drivers/usb/core/hub.c:489:
+	if (desc->bNumEndpoints != 1) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: drivers/usb/core/hub.c:543:
+	hub_disconnect (intf);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#307: FILE: drivers/usb/core/hub.c:545:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: drivers/usb/core/usb.c:64:
+static int generic_probe (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#428: FILE: drivers/usb/core/usb.c:68:
+}
+static int generic_remove (struct device *dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: drivers/usb/core/usb.c:68:
+static int generic_remove (struct device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#432: FILE: drivers/usb/core/usb.c:72:
+}
+static void generic_release (struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: drivers/usb/core/usb.c:72:
+static void generic_release (struct device_driver * drv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: drivers/usb/core/usb.c:72:
+static void generic_release (struct device_driver * drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/usb/core/usb.c:82:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#443: FILE: drivers/usb/core/usb.c:83:
+	
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/usb/core/usb.c:84:
+static int usb_device_probe(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#446: FILE: drivers/usb/core/usb.c:86:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: drivers/usb/core/usb.c:86:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: drivers/usb/core/usb.c:86:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                                                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#447: FILE: drivers/usb/core/usb.c:87:
+	struct usb_driver * drv = list_entry(dev->driver,struct usb_driver,driver);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/usb/core/usb.c:87:
+	struct usb_driver * drv = list_entry(dev->driver,struct usb_driver,driver);
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/usb/core/usb.c:87:
+	struct usb_driver * drv = list_entry(dev->driver,struct usb_driver,driver);
 	                                                                  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#450: FILE: drivers/usb/core/usb.c:90:
+	dbg("%s", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#459: FILE: drivers/usb/core/usb.c:99:
+static int usb_device_remove(struct device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#461: FILE: drivers/usb/core/usb.c:101:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: drivers/usb/core/usb.c:101:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: drivers/usb/core/usb.c:101:
+	struct usb_interface * intf = list_entry(dev,struct usb_interface,dev);
 	                                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/usb/core/usb.c:143:
+		err("problem %d when registering driver %s",
+			retval, new_driver->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#509: FILE: drivers/usb/core/usb.c:661:
+static int usb_device_bind (struct device *dev, struct device_driver *drv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: drivers/usb/core/usb.c:673:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#523: FILE: drivers/usb/core/usb.c:675:
+	/* It is important to check that id->driver_info is nonzero,
+	   since an entry that is all zeroes except for a nonzero

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: drivers/usb/core/usb.c:678:
+	   device and interface. */

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#527: FILE: drivers/usb/core/usb.c:679:
+	for (; (id) && (id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#527: FILE: drivers/usb/core/usb.c:679:
+	for (; (id) && (id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#527: FILE: drivers/usb/core/usb.c:679:
+	for (; (id) && (id->idVendor || id->bDeviceClass || id->bInterfaceClass ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/usb/core/usb.c:680:
+	for (; (id) && (id->idVendor || id->bDeviceClass || id->bInterfaceClass ||
+	       id->driver_info); id++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#529: FILE: drivers/usb/core/usb.c:681:
+	       id->driver_info); id++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#535: FILE: drivers/usb/core/usb.c:687:
+		    id->idProduct != usb_dev->descriptor.idProduct)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#539: FILE: drivers/usb/core/usb.c:691:
+		/* No need to test id->bcdDevice_lo != 0, since 0 is never
+		   greater than any unsigned number. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: drivers/usb/core/usb.c:691:
+		   greater than any unsigned number. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_lo > usb_dev->descriptor.bcdDevice'
#540: FILE: drivers/usb/core/usb.c:692:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_LO) &&
+		    (id->bcdDevice_lo > usb_dev->descriptor.bcdDevice))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_lo>
#541: FILE: drivers/usb/core/usb.c:693:
+		    (id->bcdDevice_lo > usb_dev->descriptor.bcdDevice))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#541: FILE: drivers/usb/core/usb.c:693:
+		    (id->bcdDevice_lo > usb_dev->descriptor.bcdDevice))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_hi < usb_dev->descriptor.bcdDevice'
#544: FILE: drivers/usb/core/usb.c:696:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_HI) &&
+		    (id->bcdDevice_hi < usb_dev->descriptor.bcdDevice))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_hi>
#545: FILE: drivers/usb/core/usb.c:697:
+		    (id->bcdDevice_hi < usb_dev->descriptor.bcdDevice))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceClass != usb_dev->descriptor.bDeviceClass'
#548: FILE: drivers/usb/core/usb.c:700:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_CLASS) &&
+		    (id->bDeviceClass != usb_dev->descriptor.bDeviceClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceSubClass!= usb_dev->descriptor.bDeviceSubClass'
#552: FILE: drivers/usb/core/usb.c:704:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_SUBCLASS) &&
+		    (id->bDeviceSubClass!= usb_dev->descriptor.bDeviceSubClass))

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#553: FILE: drivers/usb/core/usb.c:705:
+		    (id->bDeviceSubClass!= usb_dev->descriptor.bDeviceSubClass))
 		                        ^

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceSubClass>
#553: FILE: drivers/usb/core/usb.c:705:
+		    (id->bDeviceSubClass!= usb_dev->descriptor.bDeviceSubClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceProtocol != usb_dev->descriptor.bDeviceProtocol'
#556: FILE: drivers/usb/core/usb.c:708:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_PROTOCOL) &&
+		    (id->bDeviceProtocol != usb_dev->descriptor.bDeviceProtocol))

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceProtocol>
#557: FILE: drivers/usb/core/usb.c:709:
+		    (id->bDeviceProtocol != usb_dev->descriptor.bDeviceProtocol))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceClass != desc->bInterfaceClass'
#560: FILE: drivers/usb/core/usb.c:712:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_CLASS) &&
+		    (id->bInterfaceClass != desc->bInterfaceClass))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#564: FILE: drivers/usb/core/usb.c:716:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_SUBCLASS) &&
[...]
+		    continue;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceSubClass != desc->bInterfaceSubClass'
#564: FILE: drivers/usb/core/usb.c:716:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_SUBCLASS) &&
+		    (id->bInterfaceSubClass != desc->bInterfaceSubClass))

WARNING:TABSTOP: Statements should start on a tabstop
#566: FILE: drivers/usb/core/usb.c:718:
+		    continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#568: FILE: drivers/usb/core/usb.c:720:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_PROTOCOL) &&
[...]
+		    continue;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bInterfaceProtocol != desc->bInterfaceProtocol'
#568: FILE: drivers/usb/core/usb.c:720:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_INT_PROTOCOL) &&
+		    (id->bInterfaceProtocol != desc->bInterfaceProtocol))

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceProtocol>
#569: FILE: drivers/usb/core/usb.c:721:
+		    (id->bInterfaceProtocol != desc->bInterfaceProtocol))

WARNING:TABSTOP: Statements should start on a tabstop
#570: FILE: drivers/usb/core/usb.c:722:
+		    continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: drivers/usb/core/usb.c:1568:
+	sprintf (&dev->dev.bus_id[0], "%s-%s",

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#616: FILE: drivers/usb/core/usb.c:1585:
+	for (ifnum = 0; ifnum < dev->actconfig->bNumInterfaces; ifnum++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#624: FILE: drivers/usb/core/usb.c:1593:
+		sprintf (&interface->dev.bus_id[0], "%s-%s:%d",

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#626: FILE: drivers/usb/core/usb.c:1595:
+			 interface->altsetting->bInterfaceNumber);

CHECK:CAMELCASE: Avoid CamelCase: <iInterface>
#627: FILE: drivers/usb/core/usb.c:1596:
+		if (!desc->iInterface

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#628: FILE: drivers/usb/core/usb.c:1597:
+		if (!desc->iInterface
+				|| usb_string (dev, desc->iInterface,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: drivers/usb/core/usb.c:1597:
+				|| usb_string (dev, desc->iInterface,

WARNING:SIZEOF_PARENTHESIS: sizeof interface->dev.name should be sizeof(interface->dev.name)
#630: FILE: drivers/usb/core/usb.c:1599:
+					sizeof interface->dev.name) <= 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: drivers/usb/core/usb.c:1605:
+			sprintf (&interface->dev.name[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/usb/core/usb.c:1606:
+			sprintf (&interface->dev.name[0],
+				"usb-%s-%s interface %d",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#641: FILE: drivers/usb/core/usb.c:1610:
+		dbg("%s - registering %s", __FUNCTION__, interface->dev.bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: drivers/usb/core/usb.c:1611:
+		device_register (&interface->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#643: FILE: drivers/usb/core/usb.c:1612:
+		device_create_file (&interface->dev, &dev_attr_altsetting);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#646: FILE: drivers/usb/core/usb.c:1615:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#646: FILE: drivers/usb/core/usb.c:1615:
+
+	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#706: FILE: drivers/usb/input/hid-core.c:1498:
+static int hid_probe (struct usb_interface *intf)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#718: FILE: drivers/usb/input/hid-core.c:1507:
+	if (!(hid = usb_hid_configure(intf)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: Unnecessary space before function pointer arguments
#783: FILE: include/linux/usb.h:689:
+	int	(*new_probe)	(struct usb_interface *intf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#784: FILE: include/linux/usb.h:690:
+	int	(*init)		(struct usb_interface *intf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#785: FILE: include/linux/usb.h:691:
+	void	(*new_disco)	(struct usb_interface *intf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 33 warnings, 36 checks, 664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
