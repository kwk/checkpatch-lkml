WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
- In the remaining cases, everything from the first misaligned block onwards

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#63: 
	- properly intialized 'bh->bi_next' to NULL in
	           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#121: FILE: drivers/scsi/ide-scsi.c:84:
+	unsigned request_transfer;		/* Bytes to transfer */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: drivers/scsi/ide-scsi.c:85:
+	unsigned actually_transferred;		/* Bytes actually transferred */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#123: FILE: drivers/scsi/ide-scsi.c:86:
+	unsigned buffer_size;			/* Size of our data buffer */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: drivers/scsi/ide-scsi.c:91:
+	unsigned b_count;			/* Bytes transferred from current entry */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: drivers/scsi/ide-scsi.c:165:
+	unsigned count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#153: FILE: drivers/scsi/ide-scsi.c:187:
+	unsigned count;

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: drivers/scsi/ide-scsi.c:292:
+	unsigned long i;
+	for (i=0; i < p_bounce->size; i++) kfree(p_bounce->list[i].alloc);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: drivers/scsi/ide-scsi.c:292:
+	for (i=0; i < p_bounce->size; i++) kfree(p_bounce->list[i].alloc);
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#164: FILE: drivers/scsi/ide-scsi.c:292:
+	for (i=0; i < p_bounce->size; i++) kfree(p_bounce->list[i].alloc);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: drivers/scsi/ide-scsi.c:298:
+
+

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#171: FILE: drivers/scsi/ide-scsi.c:299:
+static inline void idescsi_bounce_dma_copy(void *client, void *bounce, unsigned long length, int direction)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: drivers/scsi/ide-scsi.c:301:
+	if (bounce == client || !length) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: drivers/scsi/ide-scsi.c:322:
+	if (!pc->bounce.size) return;	/* Anything to do? */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: drivers/scsi/ide-scsi.c:323:
+	if ((test_bit(PC_WRITING, &pc->flags) != 0 ) != direction) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: drivers/scsi/ide-scsi.c:323:
+	if ((test_bit(PC_WRITING, &pc->flags) != 0 ) != direction) return;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#201: FILE: drivers/scsi/ide-scsi.c:329:
+	cs = cb = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/scsi/ide-scsi.c:330:
+^Iif (direction) for (;;) { ^I/* Writing, must go backwards. */$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: drivers/scsi/ide-scsi.c:330:
+	if (direction) for (;;) { 	/* Writing, must go backwards. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#203: FILE: drivers/scsi/ide-scsi.c:331:
+		if (!(ts = cs)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#204: FILE: drivers/scsi/ide-scsi.c:332:
+			if (!seg_count--) break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: drivers/scsi/ide-scsi.c:342:
+		if (!(tb = cb)) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#215: FILE: drivers/scsi/ide-scsi.c:343:
+			if (!buf_count--) break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: drivers/scsi/ide-scsi.c:350:
+^I} else for (;;) { ^I^I/* Reading, must go forward. */$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#222: FILE: drivers/scsi/ide-scsi.c:350:
+	} else for (;;) { 		/* Reading, must go forward. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#222: FILE: drivers/scsi/ide-scsi.c:350:
+	} else for (;;) { 		/* Reading, must go forward. */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#227: FILE: drivers/scsi/ide-scsi.c:355:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: drivers/scsi/ide-scsi.c:355:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: drivers/scsi/ide-scsi.c:361:
+			if (!--seg_count) break;

CHECK:BRACES: braces {} should be used on all arms of this statement
#233: FILE: drivers/scsi/ide-scsi.c:361:
+			if (!--seg_count) break;
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#234: FILE: drivers/scsi/ide-scsi.c:362:
+			else {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#240: FILE: drivers/scsi/ide-scsi.c:368:
+			if (!--buf_count) break;

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#277: FILE: drivers/scsi/ide-scsi.c:716:
+	bcount.all = min(pc->request_transfer, 63u * 1024);		/* Request to transfer the entire buffer at once */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#296: FILE: drivers/scsi/ide-scsi.c:925:
 	switch (pc->c[0]) {
[...]
+		case GPCMD_READ_CD: case GPCMD_READ_CD_MSF:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#308: FILE: drivers/scsi/ide-scsi.c:940:
+	unsigned partial = __pa(buf) % IDE_DMA_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: drivers/scsi/ide-scsi.c:941:
+	unsigned partial = __pa(buf) % IDE_DMA_SIZE;
+	return buf - partial;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#314: FILE: drivers/scsi/ide-scsi.c:946:
+	unsigned partial = __pa(buf) % IDE_DMA_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: drivers/scsi/ide-scsi.c:947:
+	unsigned partial = __pa(buf) % IDE_DMA_SIZE;
+	return buf + (partial ? (IDE_DMA_SIZE - partial) : 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/scsi/ide-scsi.c:957:
+        unsigned long listsize_max, seg_count;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/scsi/ide-scsi.c:957:
+        unsigned long listsize_max, seg_count;$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#351: FILE: drivers/scsi/ide-scsi.c:968:
+	if (!(pc->bounce.list = kmalloc(listsize_max * sizeof(struct bounce_list_entry), GFP_ATOMIC))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: drivers/scsi/ide-scsi.c:968:
+	if (!(pc->bounce.list = kmalloc(listsize_max * sizeof(struct bounce_list_entry), GFP_ATOMIC))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: drivers/scsi/ide-scsi.c:969:
+		printk("ide-scsi: couldn't allocate DMA list\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: drivers/scsi/ide-scsi.c:979:
+		unsigned long length, usable_length;
+		if (segments) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#368: FILE: drivers/scsi/ide-scsi.c:983:
 		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#368: FILE: drivers/scsi/ide-scsi.c:983:
+		else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: drivers/scsi/ide-scsi.c:991:
+			if (!(*prev_bh = bh = idescsi_kmalloc_bio(1))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#377: FILE: drivers/scsi/ide-scsi.c:992:
+				printk("ide-scsi: couldn't allocate DMA table\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#385: FILE: drivers/scsi/ide-scsi.c:1000:
+			bh->bi_io_vec[0].bv_len = bh->bi_size = usable_length;

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: drivers/scsi/ide-scsi.c:1012:
+		unsigned long newsize, newsize_pad;
+		newsize = min(excess, BOUNCE_ALLOC_MAX);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#399: FILE: drivers/scsi/ide-scsi.c:1014:
+		if ( !(next_bounce->alloc = kmalloc(newsize_pad + IDE_DMA_SIZE, GFP_ATOMIC | GFP_DMA))

ERROR:SPACING: space prohibited after that open parenthesis '('
#399: FILE: drivers/scsi/ide-scsi.c:1014:
+		if ( !(next_bounce->alloc = kmalloc(newsize_pad + IDE_DMA_SIZE, GFP_ATOMIC | GFP_DMA))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: drivers/scsi/ide-scsi.c:1014:
+		if ( !(next_bounce->alloc = kmalloc(newsize_pad + IDE_DMA_SIZE, GFP_ATOMIC | GFP_DMA))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#400: FILE: drivers/scsi/ide-scsi.c:1015:
+		if ( !(next_bounce->alloc = kmalloc(newsize_pad + IDE_DMA_SIZE, GFP_ATOMIC | GFP_DMA))
+		  || !(*prev_bh = bh = idescsi_kmalloc_bio(1)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#400: FILE: drivers/scsi/ide-scsi.c:1015:
+		  || !(*prev_bh = bh = idescsi_kmalloc_bio(1)) ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#401: FILE: drivers/scsi/ide-scsi.c:1016:
+			printk("ide-scsi: couldn't allocate DMA buffer\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/scsi/ide-scsi.c:1017:
+                        pc->bounce.size = (next_bounce - pc->bounce.list) + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/scsi/ide-scsi.c:1017:
+                        pc->bounce.size = (next_bounce - pc->bounce.list) + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/scsi/ide-scsi.c:1018:
+                        idescsi_free_bounce_list(&pc->bounce);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/scsi/ide-scsi.c:1018:
+                        idescsi_free_bounce_list(&pc->bounce);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#421: FILE: drivers/scsi/ide-scsi.c:1029:
+		bh->bi_io_vec[0].bv_len = bh->bi_size = newsize_pad;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233578.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 27 warnings, 9 checks, 370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233578.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
