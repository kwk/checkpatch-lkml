WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
and PowerMac9,1 machines (SMU based), that is iMac G5 and single CPU desktop.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/macintosh/Kconfig:172:
+config WINDFARM
+	tristate "New PowerMac thermal control infrastructure"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/macintosh/Kconfig:175:
+config WINDFARM_SMU
+	tristate "Support for thermal management on SMU based PowerMacs"
+	depends on WINDFARM && I2C && CPU_FREQ_PMAC && PMAC_SMU
+	select I2C_PMAC_SMU
+	help
+	  This driver provides thermal control for iMacG5 and newer
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/macintosh/windfarm.h:1:
+#ifndef __WINDFARM_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/macintosh/windfarm.h:10:
+#define FIX32TOPRINT(f)	((f) >> 16),((((f) & 0xffff) * 1000) >> 16)
                        	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#96: FILE: drivers/macintosh/windfarm.h:10:
+#define FIX32TOPRINT(f)	((f) >> 16),((((f) & 0xffff) * 1000) >> 16)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'f' - possible side-effects?
#96: FILE: drivers/macintosh/windfarm.h:10:
+#define FIX32TOPRINT(f)	((f) >> 16),((((f) & 0xffff) * 1000) >> 16)

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: drivers/macintosh/windfarm.h:24:
+        struct module           *owner;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/macintosh/windfarm.h:24:
+        struct module           *owner;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: drivers/macintosh/windfarm.h:39:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: drivers/macintosh/windfarm.h:46:
+extern int wf_register_control(struct wf_control *ct);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: drivers/macintosh/windfarm.h:47:
+extern void wf_unregister_control(struct wf_control *ct);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: drivers/macintosh/windfarm.h:48:
+extern struct wf_control * wf_find_control(const char *name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: drivers/macintosh/windfarm.h:48:
+extern struct wf_control * wf_find_control(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: drivers/macintosh/windfarm.h:49:
+extern int wf_get_control(struct wf_control *ct);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: drivers/macintosh/windfarm.h:50:
+extern void wf_put_control(struct wf_control *ct);

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: drivers/macintosh/windfarm.h:55:
+	s32 vmax = ct->ops->get_max(ct);
+	return ct->ops->set_value(ct, vmax);

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/macintosh/windfarm.h:61:
+	s32 vmin = ct->ops->get_min(ct);
+	return ct->ops->set_value(ct, vmin);

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/macintosh/windfarm.h:73:
+        struct module           *owner;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/macintosh/windfarm.h:73:
+        struct module           *owner;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: drivers/macintosh/windfarm.h:84:
+extern int wf_register_sensor(struct wf_sensor *sr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: drivers/macintosh/windfarm.h:85:
+extern void wf_unregister_sensor(struct wf_sensor *sr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/macintosh/windfarm.h:86:
+extern struct wf_sensor * wf_find_sensor(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: drivers/macintosh/windfarm.h:86:
+extern struct wf_sensor * wf_find_sensor(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: drivers/macintosh/windfarm.h:87:
+extern int wf_get_sensor(struct wf_sensor *sr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: drivers/macintosh/windfarm.h:88:
+extern void wf_put_sensor(struct wf_sensor *sr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: drivers/macintosh/windfarm.h:102:
+extern int wf_register_client(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: drivers/macintosh/windfarm.h:103:
+extern int wf_unregister_client(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: drivers/macintosh/windfarm.h:106:
+extern void wf_set_overtemp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: drivers/macintosh/windfarm.h:107:
+extern void wf_clear_overtemp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: drivers/macintosh/windfarm.h:108:
+extern int wf_is_overtemp(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: drivers/macintosh/windfarm_core.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: drivers/macintosh/windfarm_core.c:44:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: drivers/macintosh/windfarm_core.c:46:
+#define DBG(args...)	do { } while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: drivers/macintosh/windfarm_core.c:69:
+	static char * critical_overtemp_path = "/sbin/critical_overtemp";

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#283: FILE: drivers/macintosh/windfarm_core.c:70:
+	char *argv[] = { critical_overtemp_path, NULL };

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#284: FILE: drivers/macintosh/windfarm_core.c:71:
+	static char *envp[] = { "HOME=/",

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: drivers/macintosh/windfarm_core.c:88:
+	while(!kthread_should_stop()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#313: FILE: drivers/macintosh/windfarm_core.c:100:
+					printk(KERN_ERR "windfarm: Overtemp "

WARNING:SPLIT_STRING: quoted string split across lines
#314: FILE: drivers/macintosh/windfarm_core.c:101:
+					printk(KERN_ERR "windfarm: Overtemp "
+					       "for more than 30"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#315: FILE: drivers/macintosh/windfarm_core.c:102:
+					       "for more than 30"
+					       " seconds, shutting down\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#330: FILE: drivers/macintosh/windfarm_core.c:117:
+			printk(KERN_WARNING "windfarm: thread got sigl !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#344: FILE: drivers/macintosh/windfarm_core.c:131:
+		printk(KERN_ERR "windfarm: failed to create thread,err %ld\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#350: FILE: drivers/macintosh/windfarm_core.c:137:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#381: FILE: drivers/macintosh/windfarm_core.c:168:
+			printk(KERN_WARNING "windfarm: trying to register"

WARNING:SPLIT_STRING: quoted string split across lines
#382: FILE: drivers/macintosh/windfarm_core.c:169:
+			printk(KERN_WARNING "windfarm: trying to register"
+			       " duplicate control %s\n", ct->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#411: FILE: drivers/macintosh/windfarm_core.c:198:
+struct wf_control * wf_find_control(const char *name)

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/macintosh/windfarm_core.c:228:
+	struct module *mod = ct->ops->owner;
+	kref_put(&ct->ref, wf_control_release);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#446: FILE: drivers/macintosh/windfarm_core.c:233:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#451: FILE: drivers/macintosh/windfarm_core.c:238:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#471: FILE: drivers/macintosh/windfarm_core.c:258:
+			printk(KERN_WARNING "windfarm: trying to register"

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: drivers/macintosh/windfarm_core.c:259:
+			printk(KERN_WARNING "windfarm: trying to register"
+			       " duplicate sensor %s\n", sr->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: drivers/macintosh/windfarm_core.c:288:
+struct wf_sensor * wf_find_sensor(const char *name)

WARNING:LINE_SPACING: Missing a blank line after declarations
#531: FILE: drivers/macintosh/windfarm_core.c:318:
+	struct module *mod = sr->ops->owner;
+	kref_put(&sr->ref, wf_sensor_release);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#536: FILE: drivers/macintosh/windfarm_core.c:323:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#582: FILE: drivers/macintosh/windfarm_core.c:369:
+		printk(KERN_WARNING "windfarm: Overtemp condition detected !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#600: FILE: drivers/macintosh/windfarm_core.c:387:
+		printk(KERN_WARNING "windfarm: Overtemp condition cleared !\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#627: FILE: drivers/macintosh/windfarm_core.c:414:
+	BUG_ON(wf_client_count != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: drivers/macintosh/windfarm_core.c:421:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#647: FILE: drivers/macintosh/windfarm_smu_controls.c:1:
+#include <linux/config.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#657: FILE: drivers/macintosh/windfarm_smu_controls.c:11:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#669: FILE: drivers/macintosh/windfarm_smu_controls.c:23:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#671: FILE: drivers/macintosh/windfarm_smu_controls.c:25:
+#define DBG(args...)	do { } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#682: FILE: drivers/macintosh/windfarm_smu_controls.c:36:
+^Iint    ^I^I^Ifan_type;^I/* 0 = rpm, 1 = pwm */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#688: FILE: drivers/macintosh/windfarm_smu_controls.c:42:
+};
+#define to_smu_fan(c) container_of(c, struct smu_fan_control, ctrl)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#701: FILE: drivers/macintosh/windfarm_smu_controls.c:55:
+	cmd.data_buf = cmd.reply_buf = buffer;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#749: FILE: drivers/macintosh/windfarm_smu_controls.c:103:
+	struct smu_fan_control *fct = to_smu_fan(ct);
+	return fct->min;

WARNING:LINE_SPACING: Missing a blank line after declarations
#755: FILE: drivers/macintosh/windfarm_smu_controls.c:109:
+	struct smu_fan_control *fct = to_smu_fan(ct);
+	return fct->max;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fct)...) over kmalloc(sizeof(struct smu_fan_control)...)
#774: FILE: drivers/macintosh/windfarm_smu_controls.c:128:
+	fct = kmalloc(sizeof(struct smu_fan_control), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fct"
#775: FILE: drivers/macintosh/windfarm_smu_controls.c:129:
+	if (fct == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!l"
#779: FILE: drivers/macintosh/windfarm_smu_controls.c:133:
+	if (l == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fct->ctrl.name"
#821: FILE: drivers/macintosh/windfarm_smu_controls.c:175:
+	if (fct->ctrl.name == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!v"
#826: FILE: drivers/macintosh/windfarm_smu_controls.c:180:
+	if (v == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!v"
#830: FILE: drivers/macintosh/windfarm_smu_controls.c:184:
+	if (v == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#836: FILE: drivers/macintosh/windfarm_smu_controls.c:190:
+	if (reg == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#849: FILE: drivers/macintosh/windfarm_smu_controls.c:203:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smu"
#858: FILE: drivers/macintosh/windfarm_smu_controls.c:212:
+	if (smu == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fct"
#870: FILE: drivers/macintosh/windfarm_smu_controls.c:224:
+		if (fct == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#871: FILE: drivers/macintosh/windfarm_smu_controls.c:225:
+			printk(KERN_WARNING "windfarm: Failed to create SMU "

WARNING:SPLIT_STRING: quoted string split across lines
#872: FILE: drivers/macintosh/windfarm_smu_controls.c:226:
+			printk(KERN_WARNING "windfarm: Failed to create SMU "
+			       "RPM fan %s\n", fan->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#879: FILE: drivers/macintosh/windfarm_smu_controls.c:233:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fct"
#889: FILE: drivers/macintosh/windfarm_smu_controls.c:243:
+		if (fct == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#890: FILE: drivers/macintosh/windfarm_smu_controls.c:244:
+			printk(KERN_WARNING "windfarm: Failed to create SMU "

WARNING:SPLIT_STRING: quoted string split across lines
#891: FILE: drivers/macintosh/windfarm_smu_controls.c:245:
+			printk(KERN_WARNING "windfarm: Failed to create SMU "
+			       "PWM fan %s\n", fan->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#913: FILE: drivers/macintosh/windfarm_smu_controls.c:267:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#926: FILE: drivers/macintosh/windfarm_smu_sensors.c:1:
+#include <linux/config.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#936: FILE: drivers/macintosh/windfarm_smu_sensors.c:11:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#948: FILE: drivers/macintosh/windfarm_smu_sensors.c:23:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: drivers/macintosh/windfarm_smu_sensors.c:25:
+#define DBG(args...)	do { } while(0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#974: FILE: drivers/macintosh/windfarm_smu_sensors.c:49:
+};
+#define to_smu_ads(c) container_of(c, struct smu_ad_sensor, sens)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#997: FILE: drivers/macintosh/windfarm_smu_sensors.c:72:
+		printk(KERN_ERR "winfarm: read ADC 0x%x returned %d bytes !\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1014: FILE: drivers/macintosh/windfarm_smu_sensors.c:89:
+		printk(KERN_ERR "windfarm: read CPU temp failed, err %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1036: FILE: drivers/macintosh/windfarm_smu_sensors.c:111:
+		printk(KERN_ERR "windfarm: read CPU current failed, err %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1057: FILE: drivers/macintosh/windfarm_smu_sensors.c:132:
+		printk(KERN_ERR "windfarm: read CPU voltage failed, err %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1078: FILE: drivers/macintosh/windfarm_smu_sensors.c:153:
+		printk(KERN_ERR "windfarm: read slots power failed, err %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1091: FILE: drivers/macintosh/windfarm_smu_sensors.c:166:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1097: FILE: drivers/macintosh/windfarm_smu_sensors.c:172:
+};
+static struct wf_sensor_ops smu_cpuamp_ops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1102: FILE: drivers/macintosh/windfarm_smu_sensors.c:177:
+};
+static struct wf_sensor_ops smu_cpuvolt_ops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1107: FILE: drivers/macintosh/windfarm_smu_sensors.c:182:
+};
+static struct wf_sensor_ops smu_slotspow_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1113: FILE: drivers/macintosh/windfarm_smu_sensors.c:188:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ads)...) over kmalloc(sizeof(struct smu_ad_sensor)...)
#1120: FILE: drivers/macintosh/windfarm_smu_sensors.c:195:
+	ads = kmalloc(sizeof(struct smu_ad_sensor), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ads"
#1121: FILE: drivers/macintosh/windfarm_smu_sensors.c:196:
+	if (ads == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1125: FILE: drivers/macintosh/windfarm_smu_sensors.c:200:
+	if (c == NULL || l == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!l"
#1125: FILE: drivers/macintosh/windfarm_smu_sensors.c:200:
+	if (c == NULL || l == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1135: FILE: drivers/macintosh/windfarm_smu_sensors.c:210:
+	if (!strcmp(c, "temp-sensor") &&
[...]
+	} else if (!strcmp(c, "current-sensor") &&
[...]
+	} else if (!strcmp(c, "voltage-sensor") &&
[...]
+	} else if (!strcmp(c, "power-sensor") &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slotspow"
#1151: FILE: drivers/macintosh/windfarm_smu_sensors.c:226:
+		if (slotspow == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#1156: FILE: drivers/macintosh/windfarm_smu_sensors.c:231:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!v"
#1160: FILE: drivers/macintosh/windfarm_smu_sensors.c:235:
+	if (v == NULL)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1184: FILE: drivers/macintosh/windfarm_smu_sensors.c:259:
+};
+#define to_smu_cpu_power(c) container_of(c, struct smu_cpu_power_sensor, sens)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1238: FILE: drivers/macintosh/windfarm_smu_sensors.c:313:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pow)...) over kmalloc(sizeof(struct smu_cpu_power_sensor)...)
#1244: FILE: drivers/macintosh/windfarm_smu_sensors.c:319:
+	pow = kmalloc(sizeof(struct smu_cpu_power_sensor), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pow"
#1245: FILE: drivers/macintosh/windfarm_smu_sensors.c:320:
+	if (pow == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1256: FILE: drivers/macintosh/windfarm_smu_sensors.c:331:
+	if (debugswitches && ((*debugswitches) & 0x80)) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1257: FILE: drivers/macintosh/windfarm_smu_sensors.c:332:
+		printk(KERN_INFO "windfarm: CPU Power sensor using faked"

WARNING:SPLIT_STRING: quoted string split across lines
#1258: FILE: drivers/macintosh/windfarm_smu_sensors.c:333:
+		printk(KERN_INFO "windfarm: CPU Power sensor using faked"
+		       " voltage !\n");

CHECK:BRACES: Unbalanced braces around else statement
#1260: FILE: drivers/macintosh/windfarm_smu_sensors.c:335:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1267: FILE: drivers/macintosh/windfarm_smu_sensors.c:342:
+	if ((machine_is_compatible("PowerMac8,1") ||
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1273: FILE: drivers/macintosh/windfarm_smu_sensors.c:348:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#1290: FILE: drivers/macintosh/windfarm_smu_sensors.c:365:
+	if (hdr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#1301: FILE: drivers/macintosh/windfarm_smu_sensors.c:376:
+	if (hdr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hdr"
#1310: FILE: drivers/macintosh/windfarm_smu_sensors.c:385:
+	if (hdr != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hdr"
#1315: FILE: drivers/macintosh/windfarm_smu_sensors.c:390:
+	if (hdr != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smu"
#1336: FILE: drivers/macintosh/windfarm_smu_sensors.c:411:
+	if (smu == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ads"
#1353: FILE: drivers/macintosh/windfarm_smu_sensors.c:428:
+		if (ads == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1389: FILE: drivers/macintosh/windfarm_smu_sensors.c:464:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1402: FILE: drivers/macintosh/windfarm_smu.c:1:
+/*

WARNING:TYPO_SPELLING: 'retreived' may be misspelled - perhaps 'retrieved'?
#1430: FILE: drivers/macintosh/windfarm_smu.c:29:
+ *  - the value of the target of the CPU Fan control loop is retreived,
                                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1523: FILE: drivers/macintosh/windfarm_smu.c:122:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1536: FILE: drivers/macintosh/windfarm_smu.c:135:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#1538: FILE: drivers/macintosh/windfarm_smu.c:137:
+#define DBG(args...)	do { } while(0)

WARNING:TYPO_SPELLING: 'Sytem' may be misspelled - perhaps 'System'?
#1621: FILE: drivers/macintosh/windfarm_smu.c:220:
+ * Configs for SMU Sytem Fan control loop
                    ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1669: FILE: drivers/macintosh/windfarm_smu.c:268:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1687: FILE: drivers/macintosh/windfarm_smu.c:286:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!param"
#1733: FILE: drivers/macintosh/windfarm_smu.c:332:
+	if (param == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1734: FILE: drivers/macintosh/windfarm_smu.c:333:
+		printk(KERN_WARNING "windfarm: System fan config not found "

WARNING:SPLIT_STRING: quoted string split across lines
#1735: FILE: drivers/macintosh/windfarm_smu.c:334:
+		printk(KERN_WARNING "windfarm: System fan config not found "
+		       "for this machine model, max fan speed\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wf_smu_sys_fans)...) over kmalloc(sizeof(struct wf_smu_sys_fans_state)...)
#1740: FILE: drivers/macintosh/windfarm_smu.c:339:
+	wf_smu_sys_fans = kmalloc(sizeof(struct wf_smu_sys_fans_state),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1741: FILE: drivers/macintosh/windfarm_smu.c:340:
+	wf_smu_sys_fans = kmalloc(sizeof(struct wf_smu_sys_fans_state),
+					GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wf_smu_sys_fans"
#1742: FILE: drivers/macintosh/windfarm_smu.c:341:
+	if (wf_smu_sys_fans == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1743: FILE: drivers/macintosh/windfarm_smu.c:342:
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1743: FILE: drivers/macintosh/windfarm_smu.c:342:
+	if (wf_smu_sys_fans == NULL) {
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:SPLIT_STRING: quoted string split across lines
#1744: FILE: drivers/macintosh/windfarm_smu.c:343:
+		printk(KERN_WARNING "windfarm: Memory allocation error"
+		       " max fan speed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1747: FILE: drivers/macintosh/windfarm_smu.c:346:
+       ^Iwf_smu_sys_fans->ticks = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1747: FILE: drivers/macintosh/windfarm_smu.c:346:
+       ^Iwf_smu_sys_fans->ticks = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1747: FILE: drivers/macintosh/windfarm_smu.c:346:
+       ^Iwf_smu_sys_fans->ticks = 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1763: FILE: drivers/macintosh/windfarm_smu.c:362:
+		pid_param.min =max(pid_param.min,fan_hd->ops->get_min(fan_hd));
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1763: FILE: drivers/macintosh/windfarm_smu.c:362:
+		pid_param.min =max(pid_param.min,fan_hd->ops->get_min(fan_hd));
 		                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1764: FILE: drivers/macintosh/windfarm_smu.c:363:
+		pid_param.max =min(pid_param.max,fan_hd->ops->get_max(fan_hd));
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1764: FILE: drivers/macintosh/windfarm_smu.c:363:
+		pid_param.max =min(pid_param.max,fan_hd->ops->get_max(fan_hd));
 		                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1795: FILE: drivers/macintosh/windfarm_smu.c:394:
+		printk(KERN_WARNING "windfarm: HD temp sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1831: FILE: drivers/macintosh/windfarm_smu.c:430:
+			printk(KERN_WARNING "windfarm: Sys fan error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1839: FILE: drivers/macintosh/windfarm_smu.c:438:
+			printk(KERN_WARNING "windfarm: HD fan error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1857: FILE: drivers/macintosh/windfarm_smu.c:456:
+		printk(KERN_WARNING "windfarm: CPU PID fan config not found "

WARNING:SPLIT_STRING: quoted string split across lines
#1858: FILE: drivers/macintosh/windfarm_smu.c:457:
+		printk(KERN_WARNING "windfarm: CPU PID fan config not found "
+		       "max fan speed\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1867: FILE: drivers/macintosh/windfarm_smu.c:466:
+	if (hdr) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1870: FILE: drivers/macintosh/windfarm_smu.c:469:
+	} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wf_smu_cpu_fans)...) over kmalloc(sizeof(struct wf_smu_cpu_fans_state)...)
#1874: FILE: drivers/macintosh/windfarm_smu.c:473:
+	wf_smu_cpu_fans = kmalloc(sizeof(struct wf_smu_cpu_fans_state),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wf_smu_cpu_fans"
#1876: FILE: drivers/macintosh/windfarm_smu.c:475:
+	if (wf_smu_cpu_fans == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1878: FILE: drivers/macintosh/windfarm_smu.c:477:
+       ^Iwf_smu_cpu_fans->ticks = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1878: FILE: drivers/macintosh/windfarm_smu.c:477:
+       ^Iwf_smu_cpu_fans->ticks = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1878: FILE: drivers/macintosh/windfarm_smu.c:477:
+       ^Iwf_smu_cpu_fans->ticks = 1;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1889: FILE: drivers/macintosh/windfarm_smu.c:488:
+		printk(KERN_WARNING "windfarm: History size overflow on "

WARNING:SPLIT_STRING: quoted string split across lines
#1890: FILE: drivers/macintosh/windfarm_smu.c:489:
+		printk(KERN_WARNING "windfarm: History size overflow on "
+		       "CPU control loop (%d)\n", piddata->history_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1918: FILE: drivers/macintosh/windfarm_smu.c:517:
+	printk(KERN_WARNING "windfarm: CPU fan config not found\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1941: FILE: drivers/macintosh/windfarm_smu.c:540:
+		printk(KERN_WARNING "windfarm: CPU temp sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1949: FILE: drivers/macintosh/windfarm_smu.c:548:
+		printk(KERN_WARNING "windfarm: CPU power sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1987: FILE: drivers/macintosh/windfarm_smu.c:586:
+			printk(KERN_WARNING "windfarm: CPU main fan"

WARNING:SPLIT_STRING: quoted string split across lines
#1988: FILE: drivers/macintosh/windfarm_smu.c:587:
+			printk(KERN_WARNING "windfarm: CPU main fan"
+			       " error %d\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1996: FILE: drivers/macintosh/windfarm_smu.c:595:
+			printk(KERN_WARNING "windfarm: CPU second fan"

WARNING:SPLIT_STRING: quoted string split across lines
#1997: FILE: drivers/macintosh/windfarm_smu.c:596:
+			printk(KERN_WARNING "windfarm: CPU second fan"
+			       " error %d\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2005: FILE: drivers/macintosh/windfarm_smu.c:604:
+			printk(KERN_WARNING "windfarm: CPU third fan"

WARNING:SPLIT_STRING: quoted string split across lines
#2006: FILE: drivers/macintosh/windfarm_smu.c:605:
+			printk(KERN_WARNING "windfarm: CPU third fan"
+			       " error %d\n", rc);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wf_smu_drive_fans)...) over kmalloc(sizeof(struct wf_smu_drive_fans_state)...)
#2024: FILE: drivers/macintosh/windfarm_smu.c:623:
+	wf_smu_drive_fans = kmalloc(sizeof(struct wf_smu_drive_fans_state),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2025: FILE: drivers/macintosh/windfarm_smu.c:624:
+	wf_smu_drive_fans = kmalloc(sizeof(struct wf_smu_drive_fans_state),
+					GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wf_smu_drive_fans"
#2026: FILE: drivers/macintosh/windfarm_smu.c:625:
+	if (wf_smu_drive_fans == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2027: FILE: drivers/macintosh/windfarm_smu.c:626:
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2027: FILE: drivers/macintosh/windfarm_smu.c:626:
+	if (wf_smu_drive_fans == NULL) {
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:SPLIT_STRING: quoted string split across lines
#2028: FILE: drivers/macintosh/windfarm_smu.c:627:
+		printk(KERN_WARNING "windfarm: Memory allocation error"
+		       " max fan speed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2031: FILE: drivers/macintosh/windfarm_smu.c:630:
+       ^Iwf_smu_drive_fans->ticks = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2031: FILE: drivers/macintosh/windfarm_smu.c:630:
+       ^Iwf_smu_drive_fans->ticks = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2031: FILE: drivers/macintosh/windfarm_smu.c:630:
+       ^Iwf_smu_drive_fans->ticks = 1;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2063: FILE: drivers/macintosh/windfarm_smu.c:662:
+		printk(KERN_WARNING "windfarm: HD temp sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2086: FILE: drivers/macintosh/windfarm_smu.c:685:
+			printk(KERN_WARNING "windfarm: HD fan error %d\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wf_smu_slots_fans)...) over kmalloc(sizeof(struct wf_smu_slots_fans_state)...)
#2105: FILE: drivers/macintosh/windfarm_smu.c:704:
+	wf_smu_slots_fans = kmalloc(sizeof(struct wf_smu_slots_fans_state),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2106: FILE: drivers/macintosh/windfarm_smu.c:705:
+	wf_smu_slots_fans = kmalloc(sizeof(struct wf_smu_slots_fans_state),
+					GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wf_smu_slots_fans"
#2107: FILE: drivers/macintosh/windfarm_smu.c:706:
+	if (wf_smu_slots_fans == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2108: FILE: drivers/macintosh/windfarm_smu.c:707:
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2108: FILE: drivers/macintosh/windfarm_smu.c:707:
+	if (wf_smu_slots_fans == NULL) {
+		printk(KERN_WARNING "windfarm: Memory allocation error"

WARNING:SPLIT_STRING: quoted string split across lines
#2109: FILE: drivers/macintosh/windfarm_smu.c:708:
+		printk(KERN_WARNING "windfarm: Memory allocation error"
+		       " max fan speed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2112: FILE: drivers/macintosh/windfarm_smu.c:711:
+       ^Iwf_smu_slots_fans->ticks = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2112: FILE: drivers/macintosh/windfarm_smu.c:711:
+       ^Iwf_smu_slots_fans->ticks = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2112: FILE: drivers/macintosh/windfarm_smu.c:711:
+       ^Iwf_smu_slots_fans->ticks = 1;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2144: FILE: drivers/macintosh/windfarm_smu.c:743:
+		printk(KERN_WARNING "windfarm: Slots power sensor error %d\n",

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2153: FILE: drivers/macintosh/windfarm_smu.c:752:
+#if 0 /* Check what makes a good overtemp condition */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2169: FILE: drivers/macintosh/windfarm_smu.c:768:
+			printk(KERN_WARNING "windfarm: Slots fan error %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2176: FILE: drivers/macintosh/windfarm_smu.c:775:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#2182: FILE: drivers/macintosh/windfarm_smu.c:781:
+#define BUILD_SHOW_FUNC_FIX(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+	ssize_t r;						\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	r = sprintf(buf, "%d.%03d", FIX32TOPRINT(val)); 	\
+	return r;						\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#2182: FILE: drivers/macintosh/windfarm_smu.c:781:
+#define BUILD_SHOW_FUNC_FIX(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+	ssize_t r;						\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	r = sprintf(buf, "%d.%03d", FIX32TOPRINT(val)); 	\
+	return r;						\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2182: FILE: drivers/macintosh/windfarm_smu.c:781:
+#define BUILD_SHOW_FUNC_FIX(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+	ssize_t r;						\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	r = sprintf(buf, "%d.%03d", FIX32TOPRINT(val)); 	\
+	return r;						\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#2188: FILE: drivers/macintosh/windfarm_smu.c:787:
+        s32 val = 0;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2188: FILE: drivers/macintosh/windfarm_smu.c:787:
+        s32 val = 0;                                            \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2189: FILE: drivers/macintosh/windfarm_smu.c:788:
+        data->ops->get_value(data, &val);                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2189: FILE: drivers/macintosh/windfarm_smu.c:788:
+        data->ops->get_value(data, &val);                       \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2190: FILE: drivers/macintosh/windfarm_smu.c:789:
+^Ir = sprintf(buf, "%d.%03d", FIX32TOPRINT(val)); ^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2193: FILE: drivers/macintosh/windfarm_smu.c:792:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2193: FILE: drivers/macintosh/windfarm_smu.c:792:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);
                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2193: FILE: drivers/macintosh/windfarm_smu.c:792:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2195: FILE: drivers/macintosh/windfarm_smu.c:794:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'data' - possible side-effects?
#2196: FILE: drivers/macintosh/windfarm_smu.c:795:
+#define BUILD_SHOW_FUNC_INT(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	return sprintf(buf, "%d", val);  			\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#2196: FILE: drivers/macintosh/windfarm_smu.c:795:
+#define BUILD_SHOW_FUNC_INT(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	return sprintf(buf, "%d", val);  			\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2196: FILE: drivers/macintosh/windfarm_smu.c:795:
+#define BUILD_SHOW_FUNC_INT(name, data)				\
+static ssize_t show_##name(struct device *dev,                  \
+			   struct device_attribute *attr,       \
+			   char *buf)	                        \
+{								\
+        s32 val = 0;                                            \
+        data->ops->get_value(data, &val);                       \
+	return sprintf(buf, "%d", val);  			\
+}                                                               \
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2201: FILE: drivers/macintosh/windfarm_smu.c:800:
+        s32 val = 0;                                            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2201: FILE: drivers/macintosh/windfarm_smu.c:800:
+        s32 val = 0;                                            \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2202: FILE: drivers/macintosh/windfarm_smu.c:801:
+        data->ops->get_value(data, &val);                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2202: FILE: drivers/macintosh/windfarm_smu.c:801:
+        data->ops->get_value(data, &val);                       \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2203: FILE: drivers/macintosh/windfarm_smu.c:802:
+^Ireturn sprintf(buf, "%d", val);  ^I^I^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2205: FILE: drivers/macintosh/windfarm_smu.c:804:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2205: FILE: drivers/macintosh/windfarm_smu.c:804:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);
                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2205: FILE: drivers/macintosh/windfarm_smu.c:804:
+static DEVICE_ATTR(name,S_IRUGO,show_##name, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_cpu_main"
#2309: FILE: drivers/macintosh/windfarm_smu.c:908:
+	if (fan_cpu_main == NULL && !strcmp(ct->name, "cpu-fan")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_system"
#2316: FILE: drivers/macintosh/windfarm_smu.c:915:
+	if (fan_system == NULL && !strcmp(ct->name, "system-fan")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpufreq_clamp"
#2323: FILE: drivers/macintosh/windfarm_smu.c:922:
+	if (cpufreq_clamp == NULL && !strcmp(ct->name, "cpufreq-clamp")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_hd"
#2338: FILE: drivers/macintosh/windfarm_smu.c:937:
+	if (fan_hd == NULL && !strcmp(ct->name, "drive-bay-fan")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_cpu_main"
#2354: FILE: drivers/macintosh/windfarm_smu.c:953:
+	if (fan_cpu_main == NULL && !strcmp(ct->name, "cpu-rear-fan-0")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_cpu_second"
#2361: FILE: drivers/macintosh/windfarm_smu.c:960:
+	if (fan_cpu_second == NULL && !strcmp(ct->name, "cpu-rear-fan-1")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_cpu_third"
#2366: FILE: drivers/macintosh/windfarm_smu.c:965:
+	if (fan_cpu_third == NULL && !strcmp(ct->name, "cpu-front-fan-0")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpufreq_clamp"
#2371: FILE: drivers/macintosh/windfarm_smu.c:970:
+	if (cpufreq_clamp == NULL && !strcmp(ct->name, "cpufreq-clamp")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_hd"
#2376: FILE: drivers/macintosh/windfarm_smu.c:975:
+	if (fan_hd == NULL && !strcmp(ct->name, "drive-bay-fan")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fan_slots"
#2383: FILE: drivers/macintosh/windfarm_smu.c:982:
+	if (fan_slots == NULL && !strcmp(ct->name, "slots-fan")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sensor_cpu_power"
#2400: FILE: drivers/macintosh/windfarm_smu.c:999:
+	if (sensor_cpu_power == NULL && !strcmp(sr->name, "cpu-power")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sensor_cpu_temp"
#2407: FILE: drivers/macintosh/windfarm_smu.c:1006:
+	if (sensor_cpu_temp == NULL && !strcmp(sr->name, "cpu-temp")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sensor_hd_temp"
#2414: FILE: drivers/macintosh/windfarm_smu.c:1013:
+	if (sensor_hd_temp == NULL && !strcmp(sr->name, "hd-temp")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sensor_slots_power"
#2421: FILE: drivers/macintosh/windfarm_smu.c:1020:
+	if (sensor_slots_power == NULL && !strcmp(sr->name, "slots-power")) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2437: FILE: drivers/macintosh/windfarm_smu.c:1036:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2439: FILE: drivers/macintosh/windfarm_smu.c:1038:
+static int wf_smu_notify(struct notifier_block *self,
+			       unsigned long event, void *data)

ERROR:SPACING: space required before the open parenthesis '('
#2441: FILE: drivers/macintosh/windfarm_smu.c:1040:
+	switch(event) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2481: FILE: drivers/macintosh/windfarm_smu.c:1080:
+	printk(KERN_INFO "windfarm: Initializing for iMacG5 model ID %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2491: FILE: drivers/macintosh/windfarm_smu.c:1090:
+	printk(KERN_INFO "windfarm: Initializing for Desktop G5 model\n");

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#2517: FILE: drivers/macintosh/windfarm_smu.c:1116:
+	 * that the attribute callback won't race with the sensor beeing
 	                                                          ^^^^^^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2565: FILE: drivers/macintosh/windfarm_smu.c:1164:
+	if (wf_smu_sys_fans)
+		kfree(wf_smu_sys_fans);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2571: FILE: drivers/macintosh/windfarm_smu.c:1170:
+	if (wf_smu_cpu_fans)
+		kfree(wf_smu_cpu_fans);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2579: FILE: drivers/macintosh/windfarm_smu.c:1178:
+        .name = "windfarm",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2579: FILE: drivers/macintosh/windfarm_smu.c:1178:
+        .name = "windfarm",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2580: FILE: drivers/macintosh/windfarm_smu.c:1179:
+        .bus = &platform_bus_type,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2580: FILE: drivers/macintosh/windfarm_smu.c:1179:
+        .bus = &platform_bus_type,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2581: FILE: drivers/macintosh/windfarm_smu.c:1180:
+        .probe = wf_smu_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2581: FILE: drivers/macintosh/windfarm_smu.c:1180:
+        .probe = wf_smu_probe,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2582: FILE: drivers/macintosh/windfarm_smu.c:1181:
+        .remove = wf_smu_remove,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2582: FILE: drivers/macintosh/windfarm_smu.c:1181:
+        .remove = wf_smu_remove,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2585: FILE: drivers/macintosh/windfarm_smu.c:1184:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2611: FILE: drivers/macintosh/windfarm_smu.c:1210:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2615: FILE: drivers/macintosh/windfarm_smu.c:1214:
+
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2689: FILE: include/asm-ppc64/smu.h:424:
+#define SMU_U16_MIX(x)	le16_to_cpu(x);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2690: FILE: include/asm-ppc64/smu.h:425:
+#define SMU_U32_MIX(x)  ((((x) & 0xff00ff00u) >> 8)|(((x) & 0x00ff00ffu) << 8))
                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#2690: FILE: include/asm-ppc64/smu.h:425:
+#define SMU_U32_MIX(x)  ((((x) & 0xff00ff00u) >> 8)|(((x) & 0x00ff00ffu) << 8))

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#2715: FILE: include/asm-ppc64/smu.h:451:
+ * informations
    ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#2756: FILE: include/asm-ppc64/smu.h:492:
+/* This partition contains CPU thermal control PID informations. So far
                                                    ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#2758: FILE: include/asm-ppc64/smu.h:494:
+ * carries only informations for those
                 ^^^^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2769: FILE: include/asm-ppc64/smu.h:505:
+	s32	gp,gr,gd;
 	   	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2769: FILE: include/asm-ppc64/smu.h:505:
+	s32	gp,gr,gd;
 	   	     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2780: FILE: drivers/macintosh/windfarm_lm75_sensor.c:1:
+#include <linux/config.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2792: FILE: drivers/macintosh/windfarm_lm75_sensor.c:13:
+#include <asm/io.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2803: FILE: drivers/macintosh/windfarm_lm75_sensor.c:24:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#2805: FILE: drivers/macintosh/windfarm_lm75_sensor.c:26:
+#define DBG(args...)	do { } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2811: FILE: drivers/macintosh/windfarm_lm75_sensor.c:32:
+^Istruct ^Ii2c_client^Ii2c;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2812: FILE: drivers/macintosh/windfarm_lm75_sensor.c:33:
+^Istruct ^Iwf_sensor^Isens;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2814: FILE: drivers/macintosh/windfarm_lm75_sensor.c:35:
+};
+#define wf_to_lm75(c) container_of(c, struct wf_lm75_sensor, sens)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lm->i2c.adapter"
#2833: FILE: drivers/macintosh/windfarm_lm75_sensor.c:54:
+	if (lm->i2c.adapter == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*lm)...) over kmalloc(sizeof(struct wf_lm75_sensor)...)
#2890: FILE: drivers/macintosh/windfarm_lm75_sensor.c:111:
+	lm = kmalloc(sizeof(struct wf_lm75_sensor), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lm"
#2891: FILE: drivers/macintosh/windfarm_lm75_sensor.c:112:
+	if (lm == NULL)

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#2895: FILE: drivers/macintosh/windfarm_lm75_sensor.c:116:
+	/* Usual rant about sensor names not beeing very consistent in
 	                                     ^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2910: FILE: drivers/macintosh/windfarm_lm75_sensor.c:131:
+	strncpy(lm->i2c.name, lm->sens.name, I2C_NAME_SIZE-1);
 	                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2913: FILE: drivers/macintosh/windfarm_lm75_sensor.c:134:
+		printk(KERN_ERR "windfarm: failed to attach %s %s to i2c\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smu"
#2945: FILE: drivers/macintosh/windfarm_lm75_sensor.c:166:
+	if (smu == NULL)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2949: FILE: drivers/macintosh/windfarm_lm75_sensor.c:170:
+	bus_id = (u8)simple_strtoul(adapter->name + 8, NULL, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#2961: FILE: drivers/macintosh/windfarm_lm75_sensor.c:182:
+		if (reg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#2967: FILE: drivers/macintosh/windfarm_lm75_sensor.c:188:
+	if (bus == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2968: FILE: drivers/macintosh/windfarm_lm75_sensor.c:189:
+		printk(KERN_WARNING "windfarm: SMU i2c bus 0x%x not found"

WARNING:SPLIT_STRING: quoted string split across lines
#2969: FILE: drivers/macintosh/windfarm_lm75_sensor.c:190:
+		printk(KERN_WARNING "windfarm: SMU i2c bus 0x%x not found"
+		       " in device-tree !\n", bus_id);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2981: FILE: drivers/macintosh/windfarm_lm75_sensor.c:202:
+		u32 *reg = (u32 *)get_property(dev, "reg", NULL);
+		DBG(" dev: %s... (loc: %p, reg: %p)\n", dev->name, loc, reg);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!loc"
#2982: FILE: drivers/macintosh/windfarm_lm75_sensor.c:203:
+		if (loc == NULL || reg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#2982: FILE: drivers/macintosh/windfarm_lm75_sensor.c:203:
+		if (loc == NULL || reg == NULL)

WARNING:TYPO_SPELLING: 'detatch' may be misspelled - perhaps 'detach'?
#3001: FILE: drivers/macintosh/windfarm_lm75_sensor.c:222:
+	DBG("wf_lm75: i2c detatch called for %s\n", lm->sens.name);
 	                  ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3027: FILE: drivers/macintosh/windfarm_lm75_sensor.c:248:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3040: FILE: drivers/macintosh/windfarm_pid.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3061: FILE: drivers/macintosh/windfarm_pid.c:22:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#3063: FILE: drivers/macintosh/windfarm_pid.c:24:
+#define DBG(args...)	do { } while(0)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3144: FILE: drivers/macintosh/windfarm_pid.c:105:
+		st->temps[0] = st->temps[1] = new_temp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3146: FILE: drivers/macintosh/windfarm_pid.c:107:
+		st->index = st->tindex = 0;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3191: FILE: drivers/macintosh/windfarm_pid.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3222: FILE: drivers/macintosh/windfarm_pid.h:32:
+	s32	min,max;	/* min and max target values */
 	   	   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3227: FILE: drivers/macintosh/windfarm_pid.h:37:
+^Iint^Iindex; ^I^I^I^I/* index of current sample */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3235: FILE: drivers/macintosh/windfarm_pid.h:45:
+extern void wf_pid_init(struct wf_pid_state *st, struct wf_pid_param *param);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3236: FILE: drivers/macintosh/windfarm_pid.h:46:
+extern s32 wf_pid_run(struct wf_pid_state *st, s32 sample);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3238: FILE: drivers/macintosh/windfarm_pid.h:48:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3257: FILE: drivers/macintosh/windfarm_pid.h:67:
+	s32	min,max;	/* min and max target values */
 	   	   ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3262: FILE: drivers/macintosh/windfarm_pid.h:72:
+^Iint^Iindex; ^I^I^I^I/* index of current power */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3263: FILE: drivers/macintosh/windfarm_pid.h:73:
+^Iint^Itindex; ^I^I^I/* index of current temp */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3272: FILE: drivers/macintosh/windfarm_pid.h:82:
+extern void wf_cpu_pid_init(struct wf_cpu_pid_state *st,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3274: FILE: drivers/macintosh/windfarm_pid.h:84:
+extern s32 wf_cpu_pid_run(struct wf_cpu_pid_state *st, s32 power, s32 temp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3333: FILE: arch/ppc64/kernel/pmac_cpufreq.c:182:
+static int g5_cpufreq_target(struct cpufreq_policy *policy,
 	unsigned int target_freq, unsigned int relation)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3398: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:1:
+#include <linux/config.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3437: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:40:
+		printk(KERN_INFO "windfarm: Clamping CPU frequency to "

WARNING:SPLIT_STRING: quoted string split across lines
#3438: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:41:
+		printk(KERN_INFO "windfarm: Clamping CPU frequency to "
+		       "minimum !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3440: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:43:
+		printk(KERN_INFO "windfarm: CPU frequency unclamped !\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#3442: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:45:
+        cpufreq_update_policy(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3442: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:45:
+        cpufreq_update_policy(0);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*clamp)...) over kmalloc(sizeof(struct wf_control)...)
#3474: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:77:
+	clamp = kmalloc(sizeof(struct wf_control), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!clamp"
#3475: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:78:
+	if (clamp == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3495: FILE: drivers/macintosh/windfarm_cpufreq_clamp.c:98:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 137 warnings, 131 checks, 3387 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146021.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
