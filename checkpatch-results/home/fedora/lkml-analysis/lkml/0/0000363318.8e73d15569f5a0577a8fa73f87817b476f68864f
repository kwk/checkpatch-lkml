WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	           ChangeSet	1.1436  -> 1.1438 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	arch/x86_64/vmlinux.lds.S	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	arch/x86_64/kernel/apic.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	include/asm-x86_64/fixmap.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/x86_64/kernel/acpi/boot.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	include/asm-x86_64/mc146818rtc.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	include/asm-x86_64/timex.h	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	arch/x86_64/kernel/time.c	1.15    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	arch/x86_64/kernel/vsyscall.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	 arch/x86_64/Kconfig	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	include/asm-x86_64/vsyscall.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	arch/x86_64/kernel/smpboot.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# 03/06/11	bos@serpentine.internal.keyresearch.com	1.1437

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# Forward port 2.4 time code.  Optionally uses HPET instead of PIT/RTC for

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# gettimeofday calculations.  Far more stable than the current 2.5 code.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# Current caveat: this code doesn't track lost interrupts properly, so we

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# can very slowly lose a jiffy here or there.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# 03/06/11	bos@serpentine.internal.keyresearch.com	1.1438

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# Fix residual bogons.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#92: 
--- a/arch/x86_64/Kconfig	Wed Jun 11 13:08:09 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: No space is necessary after a cast
#122: FILE: arch/x86_64/kernel/acpi/boot.c:248:
+		((long) hpet_tbl->addr.addrh << 32);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#125: FILE: arch/x86_64/kernel/acpi/boot.c:250:
+	printk(KERN_INFO "acpi: HPET id: %#x base: %#lx\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#196: FILE: arch/x86_64/kernel/apic.c:687:
+	if (!strstr(boot_cpu_data.x86_model_id, "Screwdriver")) {
 	__setup_APIC_LVTT(clocks);

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: arch/x86_64/kernel/apic.c:695:
+		int trigger = hpet_readl(HPET_T0_CMP);
+		while (hpet_readl(HPET_COUNTER) >= trigger)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 41)
#206: FILE: arch/x86_64/kernel/apic.c:695:
+		while (hpet_readl(HPET_COUNTER) >= trigger)
+			/* do nothing */ ;

WARNING:SPACING: space prohibited before semicolon
#207: FILE: arch/x86_64/kernel/apic.c:696:
+			/* do nothing */ ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 41)
#208: FILE: arch/x86_64/kernel/apic.c:697:
+		while (hpet_readl(HPET_COUNTER) <  trigger)
+			/* do nothing */ ;

WARNING:SPACING: space prohibited before semicolon
#209: FILE: arch/x86_64/kernel/apic.c:698:
+			/* do nothing */ ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#229: FILE: arch/x86_64/kernel/apic.c:764:
+		printk(KERN_INFO "Disabling APIC timer\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: arch/x86_64/kernel/apic.c:941:
+	if (time_before(last_warning+30*HZ,jiffies)) {
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#264: FILE: arch/x86_64/kernel/apic.c:941:
+	if (time_before(last_warning+30*HZ,jiffies)) {
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: arch/x86_64/kernel/apic.c:941:
+	if (time_before(last_warning+30*HZ,jiffies)) {
 	                                  ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#329: FILE: arch/x86_64/kernel/apic.c:1036:
+__setup("disableapic", setup_disableapic);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#330: FILE: arch/x86_64/kernel/apic.c:1037:
+__setup("noapictimer", setup_noapictimer);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#339: FILE: arch/x86_64/kernel/smpboot.c:70:
+extern void time_init_smp(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#388: FILE: arch/x86_64/kernel/time.c:27:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: arch/x86_64/kernel/time.c:82:
+	unsigned long x;
+	rdtscll_sync(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#493: FILE: arch/x86_64/kernel/time.c:203:
+		printk(KERN_WARNING "time.c: can't update CMOS clock "

WARNING:SPLIT_STRING: quoted string split across lines
#494: FILE: arch/x86_64/kernel/time.c:204:
+		printk(KERN_WARNING "time.c: can't update CMOS clock "
+		       "from %d to %d\n", cmos_minutes, real_minutes);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#540: FILE: arch/x86_64/kernel/time.c:250:
+		if (offset - vxtime.last > hpet_tick) {
+			lost = (offset - vxtime.last) / hpet_tick - 1;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#559: FILE: arch/x86_64/kernel/time.c:269:
+				(((long) offset << 32) / vxtime.tsc_quot) - 1;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#564: FILE: arch/x86_64/kernel/time.c:274:
+			printk(KERN_WARNING "time.c: Lost %ld timer "

WARNING:SPLIT_STRING: quoted string split across lines
#565: FILE: arch/x86_64/kernel/time.c:275:
+			printk(KERN_WARNING "time.c: Lost %ld timer "
+			       "tick(s)! (rip %016lx)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#684: FILE: arch/x86_64/kernel/time.c:415:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: arch/x86_64/kernel/time.c:529:
+        if (!vxtime.hpet_address) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: arch/x86_64/kernel/time.c:529:
+        if (!vxtime.hpet_address) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#797: FILE: arch/x86_64/kernel/time.c:530:
+		printk(KERN_WARNING "time.c: WARNING: Enabling HPET base "

WARNING:SPLIT_STRING: quoted string split across lines
#798: FILE: arch/x86_64/kernel/time.c:531:
+		printk(KERN_WARNING "time.c: WARNING: Enabling HPET base "
+		       "manually!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: arch/x86_64/kernel/time.c:532:
+                outl(0x800038a0, 0xcf8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: arch/x86_64/kernel/time.c:532:
+                outl(0x800038a0, 0xcf8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#800: FILE: arch/x86_64/kernel/time.c:533:
+                outl(0xff000001, 0xcfc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: arch/x86_64/kernel/time.c:533:
+                outl(0xff000001, 0xcfc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: arch/x86_64/kernel/time.c:534:
+                outl(0x800038a0, 0xcf8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: arch/x86_64/kernel/time.c:534:
+                outl(0x800038a0, 0xcf8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: arch/x86_64/kernel/time.c:535:
+                hpet_address = inl(0xcfc) & 0xfffffffe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: arch/x86_64/kernel/time.c:535:
+                hpet_address = inl(0xcfc) & 0xfffffffe;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#803: FILE: arch/x86_64/kernel/time.c:536:
+		printk(KERN_WARNING "time.c: WARNING: Enabled HPET "

WARNING:SPLIT_STRING: quoted string split across lines
#804: FILE: arch/x86_64/kernel/time.c:537:
+		printk(KERN_WARNING "time.c: WARNING: Enabled HPET "
+		       "at %#lx.\n", hpet_address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: arch/x86_64/kernel/time.c:538:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: arch/x86_64/kernel/time.c:538:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: arch/x86_64/kernel/time.c:545:
+                vxtime_hz = (1000000000000000L + hpet_period / 2) /$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: arch/x86_64/kernel/time.c:545:
+                vxtime_hz = (1000000000000000L + hpet_period / 2) /$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#825: FILE: arch/x86_64/kernel/time.c:555:
+	printk(KERN_INFO "time.c: Using %ld.%06ld MHz %s timer.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#852: FILE: arch/x86_64/kernel/time.c:580:
+	printk(KERN_INFO "time.c: Using %s based timekeeping.\n", timetype);

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#880: FILE: arch/x86_64/kernel/vsyscall.c:83:
+			(__jiffies - __wall_jiffies) * (1000000 / HZ);
 			           ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#880: FILE: arch/x86_64/kernel/vsyscall.c:83:
+			(__jiffies - __wall_jiffies) * (1000000 / HZ);
 			                             ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#888: FILE: arch/x86_64/kernel/vsyscall.c:91:
+#if 0

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#908: FILE: arch/x86_64/kernel/vsyscall.c:119:
 	if (unlikely(!__sysctl_vsyscall))
+	return gettimeofday(tv,tz);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: arch/x86_64/kernel/vsyscall.c:120:
+	return gettimeofday(tv,tz);
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1021: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1021: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vxtime") over __attribute__((__section__(".vxtime")))
#1021: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#1021: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1021: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363318.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 65 warnings, 8 checks, 897 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363318.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
