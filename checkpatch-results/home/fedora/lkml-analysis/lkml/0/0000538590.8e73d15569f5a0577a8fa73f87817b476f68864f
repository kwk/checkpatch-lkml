ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#109: FILE: fs/nfs/inode.c:58:
+	clear_inode:	nfs_clear_inode,
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#109: FILE: fs/nfs/inode.c:58:
+	clear_inode:	nfs_clear_inode,

CHECK:CAMELCASE: Avoid CamelCase: <Enomem>
#121: FILE: fs/nfs/inode.c:107:
+		goto Enomem;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:RETURN_VOID: void function return statements are not generally useful
#154: FILE: fs/nfs/inode.c:132:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: fs/nfs/inode.c:135:
+nfs_clear_inode(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: fs/nfs/inode.c:138:
+	struct nfs_inode_info *p = NFS_I(inode);
+	inode->u.generic_ip = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfs_inode_cachep"
#203: FILE: fs/nfs/inode.c:1090:
+	if (nfs_inode_cachep == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: fs/nfs/inode.c:1099:
+		printk(KERN_INFO "nfs_inode_cache: not all structures were freed\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->nread == 0'
#284: FILE: fs/nfs/read.c:380:
+	if ((nfsi->nread == 0) != list_empty(&nfsi->read))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->nread == 0'
#299: FILE: fs/nfs/read.c:394:
+	if ((nfsi->nread == 0) != list_empty(&nfsi->read))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->npages == 0'
#343: FILE: fs/nfs/write.c:364:
+	if ((nfsi->npages == 0) != list_empty(&nfsi->writeback))

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: fs/nfs/write.c:455:
+		struct nfs_inode_info *nfsi = NFS_I(inode);
+		nfs_list_add_request(req, &nfsi->dirty);

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: fs/nfs/write.c:488:
+		struct nfs_inode_info *nfsi = NFS_I(inode);
+		nfs_list_add_request(req, &nfsi->commit);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ndirty == 0'
#412: FILE: fs/nfs/write.c:732:
+	if ((nfsi->ndirty == 0) != list_empty(&nfsi->dirty))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ncommit == 0'
#427: FILE: fs/nfs/write.c:747:
+	if ((nfsi->ncommit == 0) != list_empty(&nfsi->commit))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ndirty == 0'
#442: FILE: fs/nfs/write.c:797:
+	if ((nfsi->ndirty == 0) != list_empty(&nfsi->dirty))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ncommit == 0'
#457: FILE: fs/nfs/write.c:812:
+	if ((nfsi->ncommit == 0) != list_empty(&nfsi->commit))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000538590.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 9 checks, 494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000538590.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
