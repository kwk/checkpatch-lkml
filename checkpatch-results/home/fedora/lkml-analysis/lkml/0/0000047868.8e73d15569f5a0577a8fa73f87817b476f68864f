WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
>  security/commoncap.c     |  127 ++++++++++++++++++++++++++++++++++++++++++++++

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#105: FILE: security/commoncap.c:113:
+#define XATTR_NAME_CAPS XATTR_SECURITY_PREFIX XATTR_CAPS_SUFFIX

ERROR:SPACING: space required after that ',' (ctx:OxV)
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);
 	                                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#108: FILE: security/commoncap.c:116:
+	ssize_t (*bprm_getxattr)(struct dentry *,const char *,void *,size_t);

ERROR:SPACING: space required before the open parenthesis '('
#128: FILE: security/commoncap.c:148:
+	if(!(bprm_dentry->d_inode->i_op &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: security/commoncap.c:149:
+	if(!(bprm_dentry->d_inode->i_op &&
+			bprm_dentry->d_inode->i_op->getxattr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: security/commoncap.c:156:
+	rc = bprm_getxattr(bprm_dentry, XATTR_NAME_CAPS, &fscaps,
+						sizeof(fscaps));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#145: FILE: security/commoncap.c:165:
+		printk(KERN_NOTICE "%s: Error (%d) getting xattr\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: security/commoncap.c:166:
+		printk(KERN_NOTICE "%s: Error (%d) getting xattr\n",
+				__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#146: FILE: security/commoncap.c:166:
+				__FUNCTION__, rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#153: FILE: security/commoncap.c:173:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: security/commoncap.c:174:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%d)\n",
+					__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#154: FILE: security/commoncap.c:174:
+					__FUNCTION__, rc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 4 checks, 80 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
