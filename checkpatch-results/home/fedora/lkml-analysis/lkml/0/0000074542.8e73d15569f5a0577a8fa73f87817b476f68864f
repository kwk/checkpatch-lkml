ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Takashi Sato sho@tnes.nec.co.jp'
#34: 
Signed-off-by: Takashi Sato sho@tnes.nec.co.jp

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#44: FILE: fs/ext3/balloc.c:1138:
+		if ((my_rsv->rsv_start >= (unsigned long long)group_first_block + EXT3_BLOCKS_PER_GROUP(sb))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'my_rsv->rsv_end < group_first_block'
#44: FILE: fs/ext3/balloc.c:1138:
+		if ((my_rsv->rsv_start >= (unsigned long long)group_first_block + EXT3_BLOCKS_PER_GROUP(sb))
 		    || (my_rsv->rsv_end < group_first_block))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: fs/ext3/inode.c:452:
+static unsigned long ext3_find_goal(struct inode *inode, unsigned long block,
 		Indirect chain[4], Indirect *partial)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: fs/ext3/inode.c:519:
+static unsigned int ext3_alloc_blocks(handle_t *handle, struct inode *inode,
 			unsigned long goal, int indirect_blks, int blks,

CHECK:CAMELCASE: Avoid CamelCase: <Indirect>
#118: FILE: fs/ext3/inode.c:686:
+			unsigned long block, Indirect *where, int num, int blks)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#200: FILE: fs/ext3/resize.c:730:
+		ext3_warning(sb, __FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/ext3/resize.c:731:
+^I^I^I     "blocks_count must be less than 4G!");  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#206: FILE: fs/ext3/resize.c:736:
+		ext3_warning(sb, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: fs/ext3/resize.c:960:
+		ext3_warning(sb, __FUNCTION__,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#298: FILE: include/linux/ext3_fs.h:779:
+struct buffer_head * ext3_getblk (handle_t *, struct inode *, unsigned long, int, int *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#299: FILE: include/linux/ext3_fs.h:780:
+struct buffer_head * ext3_bread (handle_t *, struct inode *, unsigned int, int, int *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 16 warnings, 4 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
