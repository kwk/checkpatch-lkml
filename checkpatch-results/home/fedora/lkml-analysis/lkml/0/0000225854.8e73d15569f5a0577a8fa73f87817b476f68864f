WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#30: 
Signed-off-by:  Stephen Smalley <sds@epoch.ncsc.mil>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#54: FILE: security/selinux/selinuxfs.c:308:
size);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: security/selinux/selinuxfs.c:311:
+static ssize_t sel_write_member(struct file * file, char *buf, size_t

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: security/selinux/selinuxfs.c:588:
+static ssize_t sel_write_member(struct file * file, char *buf, size_t

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#91: FILE: security/selinux/selinuxfs.c:602:
+	scon = kmalloc(size+1, GFP_KERNEL);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#94: FILE: security/selinux/selinuxfs.c:605:
+	memset(scon, 0, size+1);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#96: FILE: security/selinux/selinuxfs.c:607:
+	tcon = kmalloc(size+1, GFP_KERNEL);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#99: FILE: security/selinux/selinuxfs.c:610:
+	memset(tcon, 0, size+1);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#105: FILE: security/selinux/selinuxfs.c:616:
+	length = security_context_to_sid(scon, strlen(scon)+1, &ssid);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: security/selinux/selinuxfs.c:619:
+	length = security_context_to_sid(tcon, strlen(tcon)+1, &tsid);
 	                                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#121: FILE: security/selinux/selinuxfs.c:632:
+		printk(KERN_ERR "%s:  context size (%u) exceeds payload "

WARNING:SPLIT_STRING: quoted string split across lines
#122: FILE: security/selinux/selinuxfs.c:633:
+		printk(KERN_ERR "%s:  context size (%u) exceeds payload "
+		       "max\n", __FUNCTION__, len);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#122: FILE: security/selinux/selinuxfs.c:633:
+		       "max\n", __FUNCTION__, len);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#146: FILE: security/selinux/selinuxfs.c:1184:
+		[SEL_MEMBER] = {"member", &transaction_ops, S_IRUGO|S_IWUGO},
 		                                                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#146: FILE: security/selinux/selinuxfs.c:1184:
+		[SEL_MEMBER] = {"member", &transaction_ops, S_IRUGO|S_IWUGO},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 7 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
