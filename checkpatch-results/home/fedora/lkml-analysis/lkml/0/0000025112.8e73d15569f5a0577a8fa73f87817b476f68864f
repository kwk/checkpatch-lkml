WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
kernel relocations are generated.  Resulting in a kernel that is relocatable

WARNING:REPEATED_WORD: Possible repeated word: 'vmlinux'
#293: FILE: arch/i386/boot/compressed/Makefile:7:
+targets		:= vmlinux vmlinux.bin vmlinux.bin.gz head.o misc.o piggy.o \

WARNING:TYPO_SPELLING: 'analized' may be misspelled - perhaps 'analyzed'?
#352: FILE: arch/i386/boot/compressed/misc.c:26:
+ * Worst case behaviours need to be analized.
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'very'
#404: FILE: arch/i386/boot/compressed/misc.c:78:
+ * 32764 bytes and then all of the rest of the bytes representing the very
+ * very last byte.

WARNING:TYPO_SPELLING: 'actuall' may be misspelled - perhaps 'actually'?
#421: FILE: arch/i386/boot/compressed/misc.c:95:
+ * 10K of actuall data and 4K of bss.
           ^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#451: FILE: arch/i386/boot/compressed/misc.c:125:
+static unsigned insize;  /* valid bytes in inbuf */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: arch/i386/boot/compressed/misc.c:126:
+static unsigned inptr;   /* index of next byte to be processed in inbuf */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: arch/i386/boot/compressed/misc.c:127:
+static unsigned outcnt;  /* bytes in output buffer */

CHECK:SPACING: No space is necessary after a cast
#492: FILE: arch/i386/boot/compressed/misc.c:231:
+	free_mem_ptr = (unsigned long) *ptr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#501: FILE: arch/i386/boot/compressed/misc.c:259:
+			vidmem [ ( x + cols * y ) * 2 ] = c;

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space prohibited after that open square bracket '['
#501: FILE: arch/i386/boot/compressed/misc.c:259:
+			vidmem [ ( x + cols * y ) * 2 ] = c;

ERROR:SPACING: space prohibited before that close square bracket ']'
#501: FILE: arch/i386/boot/compressed/misc.c:259:
+			vidmem [ ( x + cols * y ) * 2 ] = c;

ERROR:SPACING: space prohibited after that open parenthesis '('
#501: FILE: arch/i386/boot/compressed/misc.c:259:
+			vidmem [ ( x + cols * y ) * 2 ] = c;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#501: FILE: arch/i386/boot/compressed/misc.c:259:
+			vidmem [ ( x + cols * y ) * 2 ] = c;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#567: FILE: arch/i386/boot/compressed/misc.c:318:
+	unsigned n;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: arch/i386/boot/compressed/misc.c:341:
+asmlinkage void decompress_kernel(void *rmode, unsigned long end,
+			uch *input_data, unsigned long input_len, uch *output)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#656: FILE: arch/i386/boot/compressed/misc.c:356:
+^Iwindow = output;  ^I/* Output buffer (Normally at 1M) */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#665: FILE: arch/i386/boot/compressed/misc.c:365:
+	if (end > ((-__PAGE_OFFSET-(512 <<20)-1) & 0x7fffffff))
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#665: FILE: arch/i386/boot/compressed/misc.c:365:
+	if (end > ((-__PAGE_OFFSET-(512 <<20)-1) & 0x7fffffff))
 	                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#665: FILE: arch/i386/boot/compressed/misc.c:365:
+	if (end > ((-__PAGE_OFFSET-(512 <<20)-1) & 0x7fffffff))
 	                                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#684: FILE: arch/i386/boot/compressed/relocs.c:1:
+#include <stdio.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#697: FILE: arch/i386/boot/compressed/relocs.c:14:
+static Elf32_Ehdr ehdr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#698: FILE: arch/i386/boot/compressed/relocs.c:15:
+static Elf32_Shdr shdr[MAX_SHDRS];

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#699: FILE: arch/i386/boot/compressed/relocs.c:16:
+static Elf32_Sym  *symtab[MAX_SHDRS];

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rel>
#700: FILE: arch/i386/boot/compressed/relocs.c:17:
+static Elf32_Rel  *reltab[MAX_SHDRS];

WARNING:LINE_SPACING: Missing a blank line after declarations
#708: FILE: arch/i386/boot/compressed/relocs.c:25:
+	va_list ap;
+	va_start(ap, fmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#714: FILE: arch/i386/boot/compressed/relocs.c:31:
+static const char *sym_type(unsigned type)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#716: FILE: arch/i386/boot/compressed/relocs.c:33:
+	static const char *type_name[] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#717: FILE: arch/i386/boot/compressed/relocs.c:34:
+#define SYM_TYPE(X) [X] = #X

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: arch/i386/boot/compressed/relocs.c:45:
+	const char *name = "unknown sym type name";
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(type_name)
#728: FILE: arch/i386/boot/compressed/relocs.c:45:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#728: FILE: arch/i386/boot/compressed/relocs.c:45:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {
 	                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#728: FILE: arch/i386/boot/compressed/relocs.c:45:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {
+		name = type_name[type];
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#734: FILE: arch/i386/boot/compressed/relocs.c:51:
+static const char *sym_bind(unsigned bind)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#736: FILE: arch/i386/boot/compressed/relocs.c:53:
+	static const char *bind_name[] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#737: FILE: arch/i386/boot/compressed/relocs.c:54:
+#define SYM_BIND(X) [X] = #X

WARNING:LINE_SPACING: Missing a blank line after declarations
#744: FILE: arch/i386/boot/compressed/relocs.c:61:
+	const char *name = "unknown sym bind name";
+	if (bind < sizeof(bind_name)/sizeof(bind_name[0])) {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(bind_name)
#744: FILE: arch/i386/boot/compressed/relocs.c:61:
+	if (bind < sizeof(bind_name)/sizeof(bind_name[0])) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#744: FILE: arch/i386/boot/compressed/relocs.c:61:
+	if (bind < sizeof(bind_name)/sizeof(bind_name[0])) {
 	                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#744: FILE: arch/i386/boot/compressed/relocs.c:61:
+	if (bind < sizeof(bind_name)/sizeof(bind_name[0])) {
+		name = bind_name[bind];
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#750: FILE: arch/i386/boot/compressed/relocs.c:67:
+static const char *sym_visibility(unsigned visibility)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#752: FILE: arch/i386/boot/compressed/relocs.c:69:
+	static const char *visibility_name[] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#753: FILE: arch/i386/boot/compressed/relocs.c:70:
+#define SYM_VISIBILITY(X) [X] = #X

WARNING:LINE_SPACING: Missing a blank line after declarations
#761: FILE: arch/i386/boot/compressed/relocs.c:78:
+	const char *name = "unknown sym visibility name";
+	if (visibility < sizeof(visibility_name)/sizeof(visibility_name[0])) {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(visibility_name)
#761: FILE: arch/i386/boot/compressed/relocs.c:78:
+	if (visibility < sizeof(visibility_name)/sizeof(visibility_name[0])) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#761: FILE: arch/i386/boot/compressed/relocs.c:78:
+	if (visibility < sizeof(visibility_name)/sizeof(visibility_name[0])) {
 	                                        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#761: FILE: arch/i386/boot/compressed/relocs.c:78:
+	if (visibility < sizeof(visibility_name)/sizeof(visibility_name[0])) {
+		name = visibility_name[visibility];
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#767: FILE: arch/i386/boot/compressed/relocs.c:84:
+static const char *rel_type(unsigned type)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#769: FILE: arch/i386/boot/compressed/relocs.c:86:
+	static const char *type_name[] = {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#770: FILE: arch/i386/boot/compressed/relocs.c:87:
+#define REL_TYPE(X) [X] = #X

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: arch/i386/boot/compressed/relocs.c:102:
+	const char *name = "unknown type rel type name";
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(type_name)
#785: FILE: arch/i386/boot/compressed/relocs.c:102:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#785: FILE: arch/i386/boot/compressed/relocs.c:102:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {
 	                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#785: FILE: arch/i386/boot/compressed/relocs.c:102:
+	if (type < sizeof(type_name)/sizeof(type_name[0])) {
+		name = type_name[type];
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#791: FILE: arch/i386/boot/compressed/relocs.c:108:
+static const char *sec_name(unsigned shndx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#795: FILE: arch/i386/boot/compressed/relocs.c:112:
+	const char *name;
+	sec_strtab = strtab[ehdr.e_shstrndx];

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#797: FILE: arch/i386/boot/compressed/relocs.c:114:
+	if (shndx < ehdr.e_shnum) {
[...]
+	else if (shndx == SHN_ABS) {
[...]
+	else if (shndx == SHN_COMMON) {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#800: FILE: arch/i386/boot/compressed/relocs.c:117:
+	}
+	else if (shndx == SHN_ABS) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#803: FILE: arch/i386/boot/compressed/relocs.c:120:
+	}
+	else if (shndx == SHN_COMMON) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#812: FILE: arch/i386/boot/compressed/relocs.c:129:
+	const char *name;
+	name = "<noname>";

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#813: FILE: arch/i386/boot/compressed/relocs.c:130:
+	if (sym->st_name) {
[...]
+	else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#816: FILE: arch/i386/boot/compressed/relocs.c:133:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#816: FILE: arch/i386/boot/compressed/relocs.c:133:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#822: FILE: arch/i386/boot/compressed/relocs.c:139:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: arch/i386/boot/compressed/relocs.c:164:
+		die("Cannot read ELF header: %s\n",
+			strerror(errno));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#849: FILE: arch/i386/boot/compressed/relocs.c:166:
+	if (memcmp(ehdr.e_ident, ELFMAG, 4) != 0) {
+		die("No ELF magic\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#852: FILE: arch/i386/boot/compressed/relocs.c:169:
+	if (ehdr.e_ident[EI_CLASS] != ELFCLASS32) {
+		die("Not a 32 bit executable\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#855: FILE: arch/i386/boot/compressed/relocs.c:172:
+	if (ehdr.e_ident[EI_DATA] != ELFDATA2LSB) {
+		die("Not a LSB ELF executable\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#858: FILE: arch/i386/boot/compressed/relocs.c:175:
+	if (ehdr.e_ident[EI_VERSION] != EV_CURRENT) {
+		die("Unknown ELF version\n");
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr.e_type != ET_EXEC'
#876: FILE: arch/i386/boot/compressed/relocs.c:193:
+	if ((ehdr.e_type != ET_EXEC) && (ehdr.e_type != ET_DYN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ehdr.e_type != ET_DYN'
#876: FILE: arch/i386/boot/compressed/relocs.c:193:
+	if ((ehdr.e_type != ET_EXEC) && (ehdr.e_type != ET_DYN)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#876: FILE: arch/i386/boot/compressed/relocs.c:193:
+	if ((ehdr.e_type != ET_EXEC) && (ehdr.e_type != ET_DYN)) {
+		die("Unsupported ELF header type\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#879: FILE: arch/i386/boot/compressed/relocs.c:196:
+	if (ehdr.e_machine != EM_386) {
+		die("Not for x86\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#882: FILE: arch/i386/boot/compressed/relocs.c:199:
+	if (ehdr.e_version != EV_CURRENT) {
+		die("Unknown ELF version\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#885: FILE: arch/i386/boot/compressed/relocs.c:202:
+	if (ehdr.e_ehsize != sizeof(Elf32_Ehdr)) {
+		die("Bad Elf header size\n");
+	}

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#888: FILE: arch/i386/boot/compressed/relocs.c:205:
+	if (ehdr.e_phentsize != sizeof(Elf32_Phdr)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#888: FILE: arch/i386/boot/compressed/relocs.c:205:
+	if (ehdr.e_phentsize != sizeof(Elf32_Phdr)) {
+		die("Bad program header entry\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#891: FILE: arch/i386/boot/compressed/relocs.c:208:
+	if (ehdr.e_shentsize != sizeof(Elf32_Shdr)) {
+		die("Bad section header entry\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#894: FILE: arch/i386/boot/compressed/relocs.c:211:
+	if (ehdr.e_shstrndx >= ehdr.e_shnum) {
+		die("String table index out of bounds\n");
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#902: FILE: arch/i386/boot/compressed/relocs.c:219:
+	int i;
+	if (ehdr.e_shnum > MAX_SHDRS) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: arch/i386/boot/compressed/relocs.c:221:
+		die("%d section headers supported: %d\n",
+			ehdr.e_shnum, MAX_SHDRS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: arch/i386/boot/compressed/relocs.c:225:
+		die("Seek to %d failed: %s\n",
+			ehdr.e_shoff, strerror(errno));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: arch/i386/boot/compressed/relocs.c:229:
+		die("Cannot read ELF section headers: %s\n",
+			strerror(errno));

ERROR:SPACING: space required before the open parenthesis '('
#914: FILE: arch/i386/boot/compressed/relocs.c:231:
+	for(i = 0; i < ehdr.e_shnum; i++) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#927: FILE: arch/i386/boot/compressed/relocs.c:244:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#932: FILE: arch/i386/boot/compressed/relocs.c:249:
+	int i;
+	for(i = 0; i < ehdr.e_shnum; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#932: FILE: arch/i386/boot/compressed/relocs.c:249:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#933: FILE: arch/i386/boot/compressed/relocs.c:250:
+		if (shdr[i].sh_type != SHT_STRTAB) {
+			continue;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#939: FILE: arch/i386/boot/compressed/relocs.c:256:
+			die("malloc of %d bytes for strtab failed\n",
+				shdr[i].sh_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: arch/i386/boot/compressed/relocs.c:260:
+			die("Seek to %d failed: %s\n",
+				shdr[i].sh_offset, strerror(errno));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: arch/i386/boot/compressed/relocs.c:264:
+			die("Cannot read symbol table: %s\n",
+				strerror(errno));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#954: FILE: arch/i386/boot/compressed/relocs.c:271:
+	int i,j;
 	     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: arch/i386/boot/compressed/relocs.c:272:
+	int i,j;
+	for(i = 0; i < ehdr.e_shnum; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#955: FILE: arch/i386/boot/compressed/relocs.c:272:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#956: FILE: arch/i386/boot/compressed/relocs.c:273:
+		if (shdr[i].sh_type != SHT_SYMTAB) {
+			continue;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: arch/i386/boot/compressed/relocs.c:279:
+			die("malloc of %d bytes for symtab failed\n",
+				shdr[i].sh_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: arch/i386/boot/compressed/relocs.c:283:
+			die("Seek to %d failed: %s\n",
+				shdr[i].sh_offset, strerror(errno));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: arch/i386/boot/compressed/relocs.c:287:
+			die("Cannot read symbol table: %s\n",
+				strerror(errno));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#972: FILE: arch/i386/boot/compressed/relocs.c:289:
+		for(j = 0; j < shdr[i].sh_size/sizeof(symtab[i][0]); j++) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#972: FILE: arch/i386/boot/compressed/relocs.c:289:
+		for(j = 0; j < shdr[i].sh_size/sizeof(symtab[i][0]); j++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#981: FILE: arch/i386/boot/compressed/relocs.c:298:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: arch/i386/boot/compressed/relocs.c:301:
+	int i,j;
 	     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#985: FILE: arch/i386/boot/compressed/relocs.c:302:
+	int i,j;
+	for(i = 0; i < ehdr.e_shnum; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#985: FILE: arch/i386/boot/compressed/relocs.c:302:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#986: FILE: arch/i386/boot/compressed/relocs.c:303:
+		if (shdr[i].sh_type != SHT_REL) {
+			continue;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: arch/i386/boot/compressed/relocs.c:309:
+			die("malloc of %d bytes for relocs failed\n",
+				shdr[i].sh_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: arch/i386/boot/compressed/relocs.c:313:
+			die("Seek to %d failed: %s\n",
+				shdr[i].sh_offset, strerror(errno));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: arch/i386/boot/compressed/relocs.c:317:
+			die("Cannot read symbol table: %s\n",
+				strerror(errno));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1002: FILE: arch/i386/boot/compressed/relocs.c:319:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1002: FILE: arch/i386/boot/compressed/relocs.c:319:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1009: FILE: arch/i386/boot/compressed/relocs.c:326:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1013: FILE: arch/i386/boot/compressed/relocs.c:330:
+	int i;
+	printf("Absolute symbols\n");

ERROR:SPACING: space required before the open parenthesis '('
#1015: FILE: arch/i386/boot/compressed/relocs.c:332:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1019: FILE: arch/i386/boot/compressed/relocs.c:336:
+		int j;
+		if (shdr[i].sh_type != SHT_SYMTAB) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1019: FILE: arch/i386/boot/compressed/relocs.c:336:
+		if (shdr[i].sh_type != SHT_SYMTAB) {
+			continue;
+		}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1024: FILE: arch/i386/boot/compressed/relocs.c:341:
+		for(j = 0; j < shdr[i].sh_size/sizeof(symtab[0][0]); j++) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1024: FILE: arch/i386/boot/compressed/relocs.c:341:
+		for(j = 0; j < shdr[i].sh_size/sizeof(symtab[0][0]); j++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1027: FILE: arch/i386/boot/compressed/relocs.c:344:
+			const char *name;
+			sym = &symtab[i][j];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1029: FILE: arch/i386/boot/compressed/relocs.c:346:
+			if (sym->st_shndx != SHN_ABS) {
+				continue;
+			}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1033: FILE: arch/i386/boot/compressed/relocs.c:350:
+			printf("%5d %08x %5d %10s %10s %12s %s\n",
+				j, sym->st_value, sym->st_size,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1046: FILE: arch/i386/boot/compressed/relocs.c:363:
+	int i;
+	printf("Absolute relocations\n");

ERROR:SPACING: space required before the open parenthesis '('
#1048: FILE: arch/i386/boot/compressed/relocs.c:365:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1051: FILE: arch/i386/boot/compressed/relocs.c:368:
+		unsigned sec_applies, sec_symtab;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1053: FILE: arch/i386/boot/compressed/relocs.c:370:
+		int j;
+		if (shdr[i].sh_type != SHT_REL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1053: FILE: arch/i386/boot/compressed/relocs.c:370:
+		if (shdr[i].sh_type != SHT_REL) {
+			continue;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1058: FILE: arch/i386/boot/compressed/relocs.c:375:
+		if (!(shdr[sec_applies].sh_flags & SHF_ALLOC)) {
+			continue;
+		}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1063: FILE: arch/i386/boot/compressed/relocs.c:380:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1063: FILE: arch/i386/boot/compressed/relocs.c:380:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1067: FILE: arch/i386/boot/compressed/relocs.c:384:
+			const char *name;
+			rel = &reltab[i][j];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1070: FILE: arch/i386/boot/compressed/relocs.c:387:
+			if (sym->st_shndx != SHN_ABS) {
+				continue;
+			}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: arch/i386/boot/compressed/relocs.c:391:
+			printf("%08x %08x %10s %08x  %s\n",
+				rel->r_offset,

ERROR:SPACING: space required before the open parenthesis '('
#1088: FILE: arch/i386/boot/compressed/relocs.c:405:
+	for(i = 0; i < ehdr.e_shnum; i++) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1091: FILE: arch/i386/boot/compressed/relocs.c:408:
+		unsigned sec_applies, sec_symtab;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1093: FILE: arch/i386/boot/compressed/relocs.c:410:
+		int j;
+		if (shdr[i].sh_type != SHT_REL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1093: FILE: arch/i386/boot/compressed/relocs.c:410:
+		if (shdr[i].sh_type != SHT_REL) {
+			continue;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1098: FILE: arch/i386/boot/compressed/relocs.c:415:
+		if (!(shdr[sec_applies].sh_flags & SHF_ALLOC)) {
+			continue;
+		}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1103: FILE: arch/i386/boot/compressed/relocs.c:420:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1103: FILE: arch/i386/boot/compressed/relocs.c:420:
+		for(j = 0; j < shdr[i].sh_size/sizeof(reltab[0][0]); j++) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1106: FILE: arch/i386/boot/compressed/relocs.c:423:
+			unsigned r_type;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1107: FILE: arch/i386/boot/compressed/relocs.c:424:
+			unsigned r_type;
+			rel = &reltab[i][j];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1111: FILE: arch/i386/boot/compressed/relocs.c:428:
+			if (sym->st_shndx == SHN_ABS) {
+				continue;
+			}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1117: FILE: arch/i386/boot/compressed/relocs.c:434:
+			}
+			else if (r_type == R_386_32) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1121: FILE: arch/i386/boot/compressed/relocs.c:438:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1121: FILE: arch/i386/boot/compressed/relocs.c:438:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1142: FILE: arch/i386/boot/compressed/relocs.c:459:
+	const unsigned long *a, *b;
+	a = va; b = vb;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1143: FILE: arch/i386/boot/compressed/relocs.c:460:
+	return (*a == *b)? 0 : (*a > *b)? 1 : -1;
 	                 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1143: FILE: arch/i386/boot/compressed/relocs.c:460:
+	return (*a == *b)? 0 : (*a > *b)? 1 : -1;
 	                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: arch/i386/boot/compressed/relocs.c:472:
+		die("malloc of %d entries for relocs failed\n",
+			reloc_count);

ERROR:SPACING: space required before the open parenthesis '('
#1171: FILE: arch/i386/boot/compressed/relocs.c:488:
+		for(i = 0; i < reloc_count; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1171: FILE: arch/i386/boot/compressed/relocs.c:488:
+		for(i = 0; i < reloc_count; i++) {
+			printf("\t .long 0x%08lx\n", relocs[i]);
+		}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1176: FILE: arch/i386/boot/compressed/relocs.c:493:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1176: FILE: arch/i386/boot/compressed/relocs.c:493:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1178: FILE: arch/i386/boot/compressed/relocs.c:495:
+		unsigned char buf[4];
+		buf[0] = buf[1] = buf[2] = buf[3] = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1178: FILE: arch/i386/boot/compressed/relocs.c:495:
+		buf[0] = buf[1] = buf[2] = buf[3] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#1182: FILE: arch/i386/boot/compressed/relocs.c:499:
+		for(i = 0; i < reloc_count; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#1208: FILE: arch/i386/boot/compressed/relocs.c:525:
+	for(i = 1; i < argc; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1210: FILE: arch/i386/boot/compressed/relocs.c:527:
+		char *arg = argv[i];
+		if (*arg == '-') {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1215: FILE: arch/i386/boot/compressed/relocs.c:532:
+			}
+			else if (strcmp(argv[1], "--text") == 0) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1220: FILE: arch/i386/boot/compressed/relocs.c:537:
+		}
+		else if (!fname) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1226: FILE: arch/i386/boot/compressed/relocs.c:543:
+	if (!fname) {
+		usage();
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: arch/i386/boot/compressed/relocs.c:549:
+		die("Cannot open %s: %s\n",
+			fname, strerror(errno));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000025112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 79 warnings, 46 checks, 1307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000025112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
