WARNING:INLINE: plain inline is preferred over __inline__
#104: FILE: drivers/char/drm/drmP.h:714:
+static __inline__ int drm_core_check_feature(struct drm_device *dev, int feature)

ERROR:SPACING: space prohibited after that open parenthesis '('
#163: FILE: drivers/char/drm/drm_bufs.h:135:
+			if ( map->type == _DRM_FRAME_BUFFER ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/char/drm/drm_bufs.h:136:
+			if ( map->type == _DRM_FRAME_BUFFER ||
+			     (map->flags & _DRM_WRITE_COMBINING) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#164: FILE: drivers/char/drm/drm_bufs.h:136:
+			     (map->flags & _DRM_WRITE_COMBINING) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#165: FILE: drivers/char/drm/drm_bufs.h:137:
+				map->mtrr = mtrr_add( map->offset, map->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/char/drm/drm_bufs.h:138:
+				map->mtrr = mtrr_add( map->offset, map->size,
+						      MTRR_TYPE_WRCOMB, 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: drivers/char/drm/drm_bufs.h:138:
+						      MTRR_TYPE_WRCOMB, 1 );

WARNING:TABSTOP: Statements should start on a tabstop
#178: FILE: drivers/char/drm/drm_bufs.h:169:
+	  if (drm_core_check_feature(dev, DRIVER_USE_AGP)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 24)
#178: FILE: drivers/char/drm/drm_bufs.h:169:
+	  if (drm_core_check_feature(dev, DRIVER_USE_AGP)) {
[...]
+			map->offset += dev->hose->mem_space->start;

WARNING:TABSTOP: Statements should start on a tabstop
#203: FILE: drivers/char/drm/drm_bufs.h:278:
+		  if (drm_core_check_feature(dev, DRIVER_USE_MTRR)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 32)
#203: FILE: drivers/char/drm/drm_bufs.h:278:
+		  if (drm_core_check_feature(dev, DRIVER_USE_MTRR)) {
+				if (map->mtrr >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: drivers/char/drm/drm_bufs.h:281:
+					int retcode;
+					retcode = mtrr_del(map->mtrr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#247: FILE: drivers/char/drm/drm_bufs.h:1194:
+		if ((drm_core_check_feature(dev, DRIVER_USE_AGP) && (dma->flags & _DRM_DMA_USE_AGP)) ||

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that close parenthesis ')'
#248: FILE: drivers/char/drm/drm_bufs.h:1195:
+		    (__HAVE_SG && (dma->flags & _DRM_DMA_USE_SG)) ) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#300: FILE: drivers/char/drm/drm_drv.h:410:
+						if ( map->mtrr >= 0 ) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:SPACING: space prohibited after that open parenthesis '('
#300: FILE: drivers/char/drm/drm_drv.h:410:
+						if ( map->mtrr >= 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#300: FILE: drivers/char/drm/drm_drv.h:410:
+						if ( map->mtrr >= 0 ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#302: FILE: drivers/char/drm/drm_drv.h:412:
+							int retcode;
+							retcode = mtrr_del( map->mtrr,

ERROR:SPACING: space prohibited after that open parenthesis '('
#302: FILE: drivers/char/drm/drm_drv.h:412:
+							retcode = mtrr_del( map->mtrr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: drivers/char/drm/drm_drv.h:413:
+							retcode = mtrr_del( map->mtrr,
+									    map->offset,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#304: FILE: drivers/char/drm/drm_drv.h:414:
+									    map->size );

ERROR:SPACING: space prohibited after that open parenthesis '('
#305: FILE: drivers/char/drm/drm_drv.h:415:
+							DRM_DEBUG( "mtrr_del=%d\n", retcode );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#305: FILE: drivers/char/drm/drm_drv.h:415:
+							DRM_DEBUG( "mtrr_del=%d\n", retcode );

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#323: FILE: drivers/char/drm/drm_drv.h:544:
+	if (drm_core_check_feature(dev, DRIVER_USE_AGP))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->agp == NULL'
#326: FILE: drivers/char/drm/drm_drv.h:547:
+		if (drm_core_check_feature(dev, DRIVER_REQUIRE_AGP) && (dev->agp == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->agp"
#326: FILE: drivers/char/drm/drm_drv.h:547:
+		if (drm_core_check_feature(dev, DRIVER_REQUIRE_AGP) && (dev->agp == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#327: FILE: drivers/char/drm/drm_drv.h:548:
+			DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#327: FILE: drivers/char/drm/drm_drv.h:548:
+			DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#329: FILE: drivers/char/drm/drm_drv.h:550:
+			DRM(takedown)( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#329: FILE: drivers/char/drm/drm_drv.h:550:
+			DRM(takedown)( dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#335: FILE: drivers/char/drm/drm_drv.h:556:
+				dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#336: FILE: drivers/char/drm/drm_drv.h:557:
+							       dev->agp->agp_info.aper_size*1024*1024,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/char/drm/drm_drv.h:557:
+				dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,
+							       dev->agp->agp_info.aper_size*1024*1024,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#336: FILE: drivers/char/drm/drm_drv.h:557:
+							       dev->agp->agp_info.aper_size*1024*1024,
 							                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#336: FILE: drivers/char/drm/drm_drv.h:557:
+							       dev->agp->agp_info.aper_size*1024*1024,
 							                                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#338: FILE: drivers/char/drm/drm_drv.h:559:
+							       1 );

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#359: FILE: drivers/char/drm/drm_drv.h:651:
+		if (drm_core_check_feature(dev, DRIVER_USE_MTRR) && dev->agp && dev->agp->agp_mtrr >= 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#370: FILE: drivers/char/drm/drm_drv.h:663:
+		if (drm_core_check_feature(dev, DRIVER_USE_AGP) && dev->agp ) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#398: FILE: drivers/char/drm/drm_memory.h:138:
+	if (drm_core_check_feature(dev, DRIVER_USE_AGP) && dev->agp && dev->agp->cant_use_aperture) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#409: FILE: drivers/char/drm/drm_memory.h:153:
+	if (drm_core_check_feature(dev, DRIVER_USE_AGP) && dev->agp && dev->agp->cant_use_aperture) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#466: FILE: drivers/char/drm/drm_vm.h:62:
+	if (!(dev->agp && DRIVER_USE_AGP)) goto vm_nopage_error;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TABSTOP: Statements should start on a tabstop
#486: FILE: drivers/char/drm/drm_vm.h:206:
+			  if (drm_core_check_feature(dev, DRIVER_USE_MTRR) && map->mtrr >= 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (26, 40)
#486: FILE: drivers/char/drm/drm_vm.h:206:
+			  if (drm_core_check_feature(dev, DRIVER_USE_MTRR) && map->mtrr >= 0) {
 					int retcode;

WARNING:TABSTOP: Statements should start on a tabstop
#506: FILE: drivers/char/drm/drm_vm.h:582:
+	  if (drm_core_check_feature(dev, DRIVER_USE_AGP) && dev->agp->cant_use_aperture) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253194.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 16 warnings, 8 checks, 669 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253194.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
