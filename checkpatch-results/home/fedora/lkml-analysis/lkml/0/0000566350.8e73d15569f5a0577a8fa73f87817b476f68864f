WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: block/loop.c:197:
+                /* We have exclusive IO access to the page.. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: block/loop.c:198:
+                if (!PageLocked(page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: block/loop.c:198:
+                if (!PageLocked(page))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: block/loop.c:199:
+                        PAGE_BUG(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: block/loop.c:199:
+                        PAGE_BUG(page);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#72: FILE: block/loop.c:200:
+		ret = aops->prepare_write(file, page, offset, offset+size);
 		                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: block/loop.c:204:
+		ret = (lo->transfer)(lo, WRITE, kaddr+offset, data, size, IV);
 		                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (lo->transfer)
#77: FILE: block/loop.c:204:
+		ret = (lo->transfer)(lo, WRITE, kaddr+offset, data, size, IV);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: block/loop.c:208:
+		ret = aops->commit_write(file, page, offset, offset+size);
 		                                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566350.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 4 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000566350.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
