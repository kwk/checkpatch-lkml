WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: block/genhd.c:426:
+       ssize_t (*store)(struct gendisk *, const char *, size_t );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#58: FILE: block/genhd.c:426:
+       ssize_t (*store)(struct gendisk *, const char *, size_t );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#58: FILE: block/genhd.c:426:
+       ssize_t (*store)(struct gendisk *, const char *, size_t );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#58: FILE: block/genhd.c:426:
+       ssize_t (*store)(struct gendisk *, const char *, size_t );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#58: FILE: block/genhd.c:426:
+       ssize_t (*store)(struct gendisk *, const char *, size_t );

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: block/genhd.c:445:
+                             const char *buf, size_t len)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: block/genhd.c:445:
+static ssize_t disk_attr_store(struct kobject *kobj, struct attribute *attr,
+                             const char *buf, size_t len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: block/genhd.c:445:
+                             const char *buf, size_t len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: block/genhd.c:447:
+       struct gendisk *disk = to_disk(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: block/genhd.c:448:
+       struct disk_attribute *disk_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: block/genhd.c:449:
+               container_of(attr,struct disk_attribute,attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: block/genhd.c:449:
+               container_of(attr,struct disk_attribute,attr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: block/genhd.c:449:
+               container_of(attr,struct disk_attribute,attr);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: block/genhd.c:449:
+               container_of(attr,struct disk_attribute,attr);
                                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: block/genhd.c:450:
+       ssize_t ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: block/genhd.c:452:
+       if (disk_attr->store)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#77: FILE: block/genhd.c:452:
+       if (disk_attr->store)
+               ret = disk_attr->store(disk, buf, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: block/genhd.c:453:
+               ret = disk_attr->store(disk, buf, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: block/genhd.c:453:
+               ret = disk_attr->store(disk, buf, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: block/genhd.c:454:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: block/genhd.c:459:
+       .store  = &disk_attr_store$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#91: FILE: block/genhd.c:472:
long)get_capacity(disk));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#97: FILE: block/genhd.c:478:
+extern struct block_device *rd_bdev[NUM_RAMDISKS];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: block/genhd.c:480:
+static ssize_t disk_size_store(struct gendisk * disk, const char *buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: block/genhd.c:481:
+static ssize_t disk_size_store(struct gendisk * disk, const char *buf,
 size_t len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: block/genhd.c:483:
+       struct block_device *bdev = rd_bdev[disk->first_minor];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: block/genhd.c:484:
+       char rd_buf[MAX_RDSTR_LEN+1];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#103: FILE: block/genhd.c:484:
+       char rd_buf[MAX_RDSTR_LEN+1];
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: block/genhd.c:485:
+       int temp = get_capacity(disk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: block/genhd.c:488:
+       if (disk->major != RAMDISK_MAJOR ) return -EPERM;$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#107: FILE: block/genhd.c:488:
+       if (disk->major != RAMDISK_MAJOR ) return -EPERM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: block/genhd.c:488:
+       if (disk->major != RAMDISK_MAJOR ) return -EPERM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: block/genhd.c:491:
+       if (bdev != NULL ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#110: FILE: block/genhd.c:491:
+       if (bdev != NULL ) {
+          down (&bdev->bd_sem);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#110: FILE: block/genhd.c:491:
+       if (bdev != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bdev"
#110: FILE: block/genhd.c:491:
+       if (bdev != NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: block/genhd.c:492:
+          down (&bdev->bd_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: block/genhd.c:492:
+          down (&bdev->bd_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: block/genhd.c:492:
+          down (&bdev->bd_sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){
+             up (&bdev->bd_sem);

ERROR:SPACING: space required before the open brace '{'
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#112: FILE: block/genhd.c:493:
+          if ( bdev->bd_openers > 1 ){

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: block/genhd.c:494:
+             up (&bdev->bd_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: block/genhd.c:494:
+             up (&bdev->bd_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: block/genhd.c:494:
+             up (&bdev->bd_sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: block/genhd.c:495:
+             return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: block/genhd.c:495:
+             return -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: block/genhd.c:496:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: block/genhd.c:496:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: block/genhd.c:497:
+          up (&bdev->bd_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: block/genhd.c:497:
+          up (&bdev->bd_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: block/genhd.c:497:
+          up (&bdev->bd_sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: block/genhd.c:498:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: block/genhd.c:500:
+       if (len>MAX_RDSTR_LEN) len = MAX_RDSTR_LEN;$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#119: FILE: block/genhd.c:500:
+       if (len>MAX_RDSTR_LEN) len = MAX_RDSTR_LEN;
               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: block/genhd.c:500:
+       if (len>MAX_RDSTR_LEN) len = MAX_RDSTR_LEN;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: block/genhd.c:501:
+       strncpy(rd_buf, buf, len-1);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#120: FILE: block/genhd.c:501:
+       strncpy(rd_buf, buf, len-1);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: block/genhd.c:502:
+       rd_buf[len-1] = '\0';$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#121: FILE: block/genhd.c:502:
+       rd_buf[len-1] = '\0';
                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: block/genhd.c:503:
+        temp = simple_strtol(rd_buf,NULL,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: block/genhd.c:503:
+        temp = simple_strtol(rd_buf,NULL,0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: block/genhd.c:503:
+        temp = simple_strtol(rd_buf,NULL,0);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: block/genhd.c:503:
+        temp = simple_strtol(rd_buf,NULL,0);
                                         ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#122: FILE: block/genhd.c:503:
+        temp = simple_strtol(rd_buf,NULL,0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: block/genhd.c:505:
+       if ( (temp < 0) || (temp % 2) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#124: FILE: block/genhd.c:505:
+       if ( (temp < 0) || (temp % 2) ) {
+           printk("RAMDISK: wrong size %d\n", temp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#124: FILE: block/genhd.c:505:
+       if ( (temp < 0) || (temp % 2) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: block/genhd.c:505:
+       if ( (temp < 0) || (temp % 2) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp < 0'
#124: FILE: block/genhd.c:505:
+       if ( (temp < 0) || (temp % 2) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: block/genhd.c:506:
+           printk("RAMDISK: wrong size %d\n", temp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: block/genhd.c:506:
+           printk("RAMDISK: wrong size %d\n", temp);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: block/genhd.c:506:
+           printk("RAMDISK: wrong size %d\n", temp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: block/genhd.c:507:
+           return len;         /* Neglect -ve and odd values */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: block/genhd.c:507:
+           return len;         /* Neglect -ve and odd values */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: block/genhd.c:508:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: block/genhd.c:509:
+       set_capacity(disk, temp );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#128: FILE: block/genhd.c:509:
+       set_capacity(disk, temp );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: block/genhd.c:510:
+       if (bdev != NULL ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 12)
#129: FILE: block/genhd.c:510:
+       if (bdev != NULL ) {
+            down (&bdev->bd_sem);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#129: FILE: block/genhd.c:510:
+       if (bdev != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bdev"
#129: FILE: block/genhd.c:510:
+       if (bdev != NULL ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: block/genhd.c:511:
+            down (&bdev->bd_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: block/genhd.c:511:
+            down (&bdev->bd_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: block/genhd.c:511:
+            down (&bdev->bd_sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: block/genhd.c:512:
+            bdev->bd_inode->i_size = get_capacity(disk)<<9;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: block/genhd.c:512:
+            bdev->bd_inode->i_size = get_capacity(disk)<<9;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: block/genhd.c:512:
+            bdev->bd_inode->i_size = get_capacity(disk)<<9;
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: block/genhd.c:513:
+            up (&bdev->bd_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: block/genhd.c:513:
+            up (&bdev->bd_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: block/genhd.c:513:
+            up (&bdev->bd_sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: block/genhd.c:514:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: block/genhd.c:514:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: block/genhd.c:515:
+       return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: block/genhd.c:554:
+       .attr = {.name = "size", .mode = S_IRUGO|S_IWUSR },$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#146: FILE: block/genhd.c:554:
+       .attr = {.name = "size", .mode = S_IRUGO|S_IWUSR },
                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#146: FILE: block/genhd.c:554:
+       .attr = {.name = "size", .mode = S_IRUGO|S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: block/genhd.c:555:
+       .show   = disk_size_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: block/genhd.c:556:
+       .store = disk_size_store$

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 59 warnings, 10 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
