WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -up -x BitKeeper -x ChangeSet -x SCCS -x _xlk -x '*.orig' -x '*.rej' -x .git -N linus/Documentation/l3/structure linux/Documentation/l3/structure

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#138: FILE: drivers/l3/Kconfig:7:
+config L3
+	tristate "L3 support"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#141: FILE: drivers/l3/Kconfig:10:
+config L3_BIT_SA1100_GPIO
+	tristate "SA11x0 L3 GPIO adapter"
+	depends on L3 && ARCH_SA1100
+	select BIT_SA1100_GPIO
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: drivers/l3/l3-algo-bit.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: drivers/l3/l3-algo-bit.c:27:
+#define setdat(l3,algo,val)	algo->setdat(l3, val)
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: drivers/l3/l3-algo-bit.c:27:
+#define setdat(l3,algo,val)	algo->setdat(l3, val)
                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#197: FILE: drivers/l3/l3-algo-bit.c:27:
+#define setdat(l3,algo,val)	algo->setdat(l3, val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/l3/l3-algo-bit.c:28:
+#define setclk(l3,algo,val)	algo->setclk(l3, val)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/l3/l3-algo-bit.c:28:
+#define setclk(l3,algo,val)	algo->setclk(l3, val)
                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#198: FILE: drivers/l3/l3-algo-bit.c:28:
+#define setclk(l3,algo,val)	algo->setclk(l3, val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/l3/l3-algo-bit.c:29:
+#define setmode(l3,algo,val)	algo->setmode(l3, val)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: drivers/l3/l3-algo-bit.c:29:
+#define setmode(l3,algo,val)	algo->setmode(l3, val)
                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#199: FILE: drivers/l3/l3-algo-bit.c:29:
+#define setmode(l3,algo,val)	algo->setmode(l3, val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: drivers/l3/l3-algo-bit.c:30:
+#define setdatin(l3,algo)	algo->setdir(l3, 1)
                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#200: FILE: drivers/l3/l3-algo-bit.c:30:
+#define setdatin(l3,algo)	algo->setdir(l3, 1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: drivers/l3/l3-algo-bit.c:31:
+#define setdatout(l3,algo)	algo->setdir(l3, 0)
                     ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#201: FILE: drivers/l3/l3-algo-bit.c:31:
+#define setdatout(l3,algo)	algo->setdir(l3, 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/l3/l3-algo-bit.c:32:
+#define getdat(l3,algo)		algo->getdat(l3)
                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'algo' may be better as '(algo)' to avoid precedence issues
#202: FILE: drivers/l3/l3-algo-bit.c:32:
+#define getdat(l3,algo)		algo->getdat(l3)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#349: FILE: drivers/l3/l3-algo-bit.h:1:
+/*

WARNING:SPACING: Unnecessary space before function pointer arguments
#367: FILE: drivers/l3/l3-algo-bit.h:19:
+	void (*setdat) (struct l3_adapter *, int state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#367: FILE: drivers/l3/l3-algo-bit.h:19:
+	void (*setdat) (struct l3_adapter *, int state);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#368: FILE: drivers/l3/l3-algo-bit.h:20:
+	void (*setclk) (struct l3_adapter *, int state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#368: FILE: drivers/l3/l3-algo-bit.h:20:
+	void (*setclk) (struct l3_adapter *, int state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#369: FILE: drivers/l3/l3-algo-bit.h:21:
+	void (*setmode)(struct l3_adapter *, int state);

WARNING:SPACING: Unnecessary space before function pointer arguments
#370: FILE: drivers/l3/l3-algo-bit.h:22:
+	void (*setdir) (struct l3_adapter *, int in);	/* set data direction */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#370: FILE: drivers/l3/l3-algo-bit.h:22:
+	void (*setdir) (struct l3_adapter *, int in);	/* set data direction */

WARNING:SPACING: Unnecessary space before function pointer arguments
#371: FILE: drivers/l3/l3-algo-bit.h:23:
+	int  (*getdat) (struct l3_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#371: FILE: drivers/l3/l3-algo-bit.h:23:
+	int  (*getdat) (struct l3_adapter *);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#382: FILE: drivers/l3/l3-algo-bit.h:34:
+ssize_t l3_algo_bit_read(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, u8 *buf, size_t len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#382: FILE: drivers/l3/l3-algo-bit.h:34:
+ssize_t l3_algo_bit_read(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, u8 *buf, size_t len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_algo_bit_data *' should also have an identifier name
#382: FILE: drivers/l3/l3-algo-bit.h:34:
+ssize_t l3_algo_bit_read(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, u8 *buf, size_t len);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#383: FILE: drivers/l3/l3-algo-bit.h:35:
+ssize_t l3_algo_bit_write(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, const u8 *buf, size_t len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#383: FILE: drivers/l3/l3-algo-bit.h:35:
+ssize_t l3_algo_bit_write(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, const u8 *buf, size_t len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_algo_bit_data *' should also have an identifier name
#383: FILE: drivers/l3/l3-algo-bit.h:35:
+ssize_t l3_algo_bit_write(struct l3_adapter *, struct l3_algo_bit_data *, u8 addr, const u8 *buf, size_t len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#390: FILE: drivers/l3/l3-bit-sa11x0.c:1:
+/*

CHECK:BRACES: braces {} should be used on all arms of this statement
#438: FILE: drivers/l3/l3-bit-sa11x0.c:49:
+	if (state)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#440: FILE: drivers/l3/l3-bit-sa11x0.c:51:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#453: FILE: drivers/l3/l3-bit-sa11x0.c:64:
+	if (state)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#455: FILE: drivers/l3/l3-bit-sa11x0.c:66:
+	else {

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#483: FILE: drivers/l3/l3-bit-sa11x0.c:94:
+#define LOCK	&i2c_adapter.bus_lock

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#498: FILE: drivers/l3/l3-bit-sa11x0.c:109:
+#define LOCK		&l3_lock

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#690: FILE: drivers/l3/l3-core.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#691: FILE: drivers/l3/l3-core.c:2:
+ *  linux/drivers/l3/l3-core.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: drivers/l3/l3-core.c:40:
+^Ireturn 0;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#775: FILE: drivers/l3/l3-core.c:86:
+	for (try = 0; try < 2; try ++) {
 	                           ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#854: FILE: drivers/l3/l3-core.c:165:
+EXPORT_SYMBOL(l3_add_adapter);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#855: FILE: drivers/l3/l3-core.c:166:
+EXPORT_SYMBOL(l3_del_adapter);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#856: FILE: drivers/l3/l3-core.c:167:
+EXPORT_SYMBOL(l3_get_adapter);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#857: FILE: drivers/l3/l3-core.c:168:
+EXPORT_SYMBOL(l3_put_adapter);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#858: FILE: drivers/l3/l3-core.c:169:
+EXPORT_SYMBOL(l3_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#859: FILE: drivers/l3/l3-core.c:170:
+EXPORT_SYMBOL(l3_read);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#864: FILE: include/linux/l3.h:1:
+/*

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#900: FILE: include/linux/l3.h:37:
+	ssize_t			(*read)(struct l3_adapter *, u8 addr, u8 *buf, size_t len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#901: FILE: include/linux/l3.h:38:
+	ssize_t			(*write)(struct l3_adapter *, u8 addr, const u8 *buf, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#926: FILE: include/linux/l3.h:63:
+extern int l3_add_adapter(struct l3_adapter *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#926: FILE: include/linux/l3.h:63:
+extern int l3_add_adapter(struct l3_adapter *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#927: FILE: include/linux/l3.h:64:
+extern int l3_del_adapter(struct l3_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#927: FILE: include/linux/l3.h:64:
+extern int l3_del_adapter(struct l3_adapter *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#928: FILE: include/linux/l3.h:65:
+extern void l3_put_adapter(struct l3_adapter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#928: FILE: include/linux/l3.h:65:
+extern void l3_put_adapter(struct l3_adapter *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#929: FILE: include/linux/l3.h:66:
+extern struct l3_adapter *l3_get_adapter(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#931: FILE: include/linux/l3.h:68:
+extern ssize_t l3_write(struct l3_adapter *, int, const u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#931: FILE: include/linux/l3.h:68:
+extern ssize_t l3_write(struct l3_adapter *, int, const u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#931: FILE: include/linux/l3.h:68:
+extern ssize_t l3_write(struct l3_adapter *, int, const u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8 *' should also have an identifier name
#931: FILE: include/linux/l3.h:68:
+extern ssize_t l3_write(struct l3_adapter *, int, const u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#931: FILE: include/linux/l3.h:68:
+extern ssize_t l3_write(struct l3_adapter *, int, const u8 *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#932: FILE: include/linux/l3.h:69:
+extern ssize_t l3_read(struct l3_adapter *, int, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct l3_adapter *' should also have an identifier name
#932: FILE: include/linux/l3.h:69:
+extern ssize_t l3_read(struct l3_adapter *, int, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#932: FILE: include/linux/l3.h:69:
+extern ssize_t l3_read(struct l3_adapter *, int, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#932: FILE: include/linux/l3.h:69:
+extern ssize_t l3_read(struct l3_adapter *, int, u8 *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#932: FILE: include/linux/l3.h:69:
+extern ssize_t l3_read(struct l3_adapter *, int, u8 *, size_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140660.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 43 warnings, 16 checks, 844 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140660.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
