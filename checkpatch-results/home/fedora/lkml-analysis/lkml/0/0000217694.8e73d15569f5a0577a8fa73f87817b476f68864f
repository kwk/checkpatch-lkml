WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
[PATCH] Driver Core: Add platform_get_resource_byname & platform_get_resource_byirq

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: drivers/base/platform.c:68:
+platform_get_resource_byname(struct platform_device *dev, unsigned int type,
+		      char *name)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#67: FILE: drivers/base/platform.c:75:
+		if ((r->flags & (IORESOURCE_IO|IORESOURCE_MEM|
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#67: FILE: drivers/base/platform.c:75:
+		if ((r->flags & (IORESOURCE_IO|IORESOURCE_MEM|
 		                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#68: FILE: drivers/base/platform.c:76:
+				 IORESOURCE_IRQ|IORESOURCE_DMA)) == type)
 				               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->name"
#96: FILE: drivers/base/platform.c:141:
+		if (r->name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#106: FILE: drivers/base/platform.c:348:
+EXPORT_SYMBOL_GPL(platform_get_resource_byname);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#114: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#114: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#114: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#114: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#115: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#115: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217694.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 7 checks, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217694.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
