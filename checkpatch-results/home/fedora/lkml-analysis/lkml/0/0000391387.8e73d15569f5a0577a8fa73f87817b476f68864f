WARNING:TYPO_SPELLING: 'sigle' may be misspelled - perhaps 'single'?
#29: 
And I unified sigle cache. I also moved the functions for ah,
              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
As a result of moving IPv6 IPsec functions to net/ipv4, it currently prevents to

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: include/net/dst.h:251:
+extern int xfrm6_lookup(struct dst_entry **dst_p, struct flowi *fl,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: include/net/dst.h:252:
+extern int xfrm6_lookup(struct dst_entry **dst_p, struct flowi *fl,
+		       struct sock *sk, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/net/dst.h:253:
+extern void xfrm6_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: include/net/ip6_route.h:58:
+extern struct rt6_info		*ndisc_get_dummy_rt(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#118: FILE: include/net/xfrm.h:313:
 }
+extern int __xfrm_policy_check(struct sock *, int dir, struct sk_buff *skb, unsigned short family);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/net/xfrm.h:313:
+extern int __xfrm_policy_check(struct sock *, int dir, struct sk_buff *skb, unsigned short family);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: include/net/xfrm.h:319:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/net/xfrm.h:335:
+extern int __xfrm_route_forward(struct sk_buff *skb, unsigned short family);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/net/xfrm.h:403:
+extern struct xfrm_state *xfrm6_state_find(struct in6_addr *daddr, struct in6_addr *saddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: include/net/xfrm.h:404:
+extern struct xfrm_state *xfrm6_state_find(struct in6_addr *daddr, struct in6_addr *saddr,
+					  struct flowi *fl, struct xfrm_tmpl *tmpl,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/net/xfrm.h:410:
+extern struct xfrm_state *xfrm6_state_lookup(struct in6_addr *daddr, u32 spi, u8 proto);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/net/xfrm.h:418:
+extern int xfrm6_rcv(struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/net/xfrm.h:419:
+extern int xfrm6_clear_mutable_options(struct sk_buff *skb, u16 *nh_offset, int dir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#194: FILE: include/net/xfrm.h:431:
+struct xfrm_state * xfrm6_find_acq(u8 mode, u16 reqid, u8 proto, struct in6_addr *daddr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/net/xfrm.h:438:
+extern int xfrm6_flush_bundles(struct xfrm_state *x);

WARNING:INLINE: plain inline is preferred over __inline__
#209: FILE: include/net/xfrm.h:455:
+static __inline__ int addr_match(void *token1, void *token2, int prefixlen)

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#246: FILE: include/net/xfrm.h:486:
+		!((fl->uli_u.ports.dport^sel->dport)&sel->dport_mask) &&
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#246: FILE: include/net/xfrm.h:486:
+		!((fl->uli_u.ports.dport^sel->dport)&sel->dport_mask) &&
 		                                    ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#247: FILE: include/net/xfrm.h:487:
+		!((fl->uli_u.ports.sport^sel->sport)&sel->sport_mask) &&
 		                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#247: FILE: include/net/xfrm.h:487:
+		!((fl->uli_u.ports.sport^sel->sport)&sel->sport_mask) &&
 		                                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#257: FILE: net/ipv4/ah.c:1:
+/* Changes

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: net/ipv4/ah.c:3:
+ *^IMitsuru KANDA @USAGI       : IPv6 Support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: net/ipv4/ah.c:4:
+ * ^IKazunori MIYAZAWA @USAGI   :$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: net/ipv4/ah.c:5:
+ * ^IKunihiro Ishiguro          :$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: net/ipv4/ah.c:6:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: net/ipv4/ah.c:6:
+ * ^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: net/ipv4/ah.c:21:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: net/ipv4/ah.c:21:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: net/ipv4/ah.c:476:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: net/ipv4/ah.c:476:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#298: FILE: net/ipv4/ah.c:479:
+#define NIP6(addr) \
+	ntohs((addr).s6_addr16[0]),\
+	ntohs((addr).s6_addr16[1]),\
+	ntohs((addr).s6_addr16[2]),\
+	ntohs((addr).s6_addr16[3]),\
+	ntohs((addr).s6_addr16[4]),\
+	ntohs((addr).s6_addr16[5]),\
+	ntohs((addr).s6_addr16[6]),\
+	ntohs((addr).s6_addr16[7])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#298: FILE: net/ipv4/ah.c:479:
+#define NIP6(addr) \
+	ntohs((addr).s6_addr16[0]),\
+	ntohs((addr).s6_addr16[1]),\
+	ntohs((addr).s6_addr16[2]),\
+	ntohs((addr).s6_addr16[3]),\
+	ntohs((addr).s6_addr16[4]),\
+	ntohs((addr).s6_addr16[5]),\
+	ntohs((addr).s6_addr16[6]),\
+	ntohs((addr).s6_addr16[7])

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb_checksum_help"
#320: FILE: net/ipv4/ah.c:501:
+	if (skb->ip_summed == CHECKSUM_HW && skb_checksum_help(skb) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: net/ipv4/ah.c:505:
+	if ((err = xfrm_state_check_expire(x)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: net/ipv4/ah.c:507:
+	if ((err = xfrm_state_check_space(x, skb)) != 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: net/ipv4/ah.c:512:
+		skb->nh.ipv6h = (struct ipv6hdr*)skb_push(skb, x->props.header_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#337: FILE: net/ipv4/ah.c:518:
+		ah = (struct ip_auth_hdr*)(skb->nh.ipv6h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#337: FILE: net/ipv4/ah.c:518:
+		ah = (struct ip_auth_hdr*)(skb->nh.ipv6h+1);
 		                                        ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#347: FILE: net/ipv4/ah.c:528:
+		skb->nh.ipv6h = (struct ipv6hdr*)skb_push(skb, x->props.header_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#355: FILE: net/ipv4/ah.c:536:
+		ah = (struct ip_auth_hdr*)(skb->nh.raw+hdr_len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#355: FILE: net/ipv4/ah.c:536:
+		ah = (struct ip_auth_hdr*)(skb->nh.raw+hdr_len);
 		                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: net/ipv4/ah.c:557:
+^I^Iskb->nh.ipv6h->priority    = iph->priority; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#376: FILE: net/ipv4/ah.c:557:
+^I^Iskb->nh.ipv6h->priority    = iph->priority; ^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: net/ipv4/ah.c:565:
+		kfree (iph);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: net/ipv4/ah.c:573:
+	if ((skb->dst = dst_pop(dst)) == NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#415: FILE: net/ipv4/ah.c:596:
+	ah = (struct ipv6_auth_hdr*)skb->data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: net/ipv4/ah.c:598:
+        ah_hlen = (ah->hdrlen + 2) << 2;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: net/ipv4/ah.c:598:
+        ah_hlen = (ah->hdrlen + 2) << 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: net/ipv4/ah.c:600:
+        if (ah_hlen != XFRM_ALIGN8(ahp->icv_full_len + AH_HLEN_NOICV) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: net/ipv4/ah.c:600:
+        if (ah_hlen != XFRM_ALIGN8(ahp->icv_full_len + AH_HLEN_NOICV) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: net/ipv4/ah.c:601:
+            ah_hlen != XFRM_ALIGN8(ahp->icv_trunc_len + AH_HLEN_NOICV))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: net/ipv4/ah.c:601:
+            ah_hlen != XFRM_ALIGN8(ahp->icv_trunc_len + AH_HLEN_NOICV))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: net/ipv4/ah.c:602:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: net/ipv4/ah.c:602:
+                goto out;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: net/ipv4/ah.c:608:
+	 * so... Later this can change. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#436: FILE: net/ipv4/ah.c:617:
+	ah = (struct ipv6_auth_hdr*)skb->data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: net/ipv4/ah.c:620:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: net/ipv4/ah.c:620:
+        {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#447: FILE: net/ipv4/ah.c:628:
+				printk(KERN_WARNING "ipsec ah authentication error\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#454: FILE: net/ipv4/ah.c:635:
+	skb->nh.raw = skb_pull(skb, (ah->hdrlen+2)<<2);
 	                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#454: FILE: net/ipv4/ah.c:635:
+	skb->nh.raw = skb_pull(skb, (ah->hdrlen+2)<<2);
 	                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#460: FILE: net/ipv4/ah.c:641:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: net/ipv4/ah.c:652:
+void ah6_err(struct sk_buff *skb, struct inet6_skb_parm *opt, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: net/ipv4/ah.c:653:
+void ah6_err(struct sk_buff *skb, struct inet6_skb_parm *opt, 
+	 int type, int code, int offset, __u32 info)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#474: FILE: net/ipv4/ah.c:655:
+	struct ipv6hdr *iph = (struct ipv6hdr*)skb->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#475: FILE: net/ipv4/ah.c:656:
+	struct ip_auth_hdr *ah = (struct ip_auth_hdr*)(skb->data+offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#475: FILE: net/ipv4/ah.c:656:
+	struct ip_auth_hdr *ah = (struct ip_auth_hdr*)(skb->data+offset);
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#486: FILE: net/ipv4/ah.c:667:
+	printk(KERN_DEBUG "pmtu discvovery on SA AH/%08x/"

WARNING:SPLIT_STRING: quoted string split across lines
#487: FILE: net/ipv4/ah.c:668:
+	printk(KERN_DEBUG "pmtu discvovery on SA AH/%08x/"
+			"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ahp"
#503: FILE: net/ipv4/ah.c:684:
+	if (ahp == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: net/ipv4/ah.c:690:
+	ahp->key_len = (x->aalg->alg_key_len+7)/8;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#509: FILE: net/ipv4/ah.c:690:
+	ahp->key_len = (x->aalg->alg_key_len+7)/8;
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: net/ipv4/ah.c:695:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#516: FILE: net/ipv4/ah.c:697:
+	/*
+	 * Lookup the algorithm description maintained by xfrm_algo,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#522: FILE: net/ipv4/ah.c:703:
+	BUG_ON(!aalg_desc);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#524: FILE: net/ipv4/ah.c:705:
+	if (aalg_desc->uinfo.auth.icv_fullbits/8 !=
 	                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#526: FILE: net/ipv4/ah.c:707:
+		printk(KERN_INFO "AH: %s digestsize %u != %hu\n",

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#526: FILE: net/ipv4/ah.c:707:
+		printk(KERN_INFO "AH: %s digestsize %u != %hu\n",
+		       x->aalg->alg_name, crypto_tfm_alg_digestsize(ahp->tfm),
+		       aalg_desc->uinfo.auth.icv_fullbits/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#528: FILE: net/ipv4/ah.c:709:
+		       aalg_desc->uinfo.auth.icv_fullbits/8);
 		                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: net/ipv4/ah.c:712:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#532: FILE: net/ipv4/ah.c:713:
+	ahp->icv_full_len = aalg_desc->uinfo.auth.icv_fullbits/8;
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#533: FILE: net/ipv4/ah.c:714:
+	ahp->icv_trunc_len = aalg_desc->uinfo.auth.icv_truncbits/8;
 	                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: net/ipv4/ah.c:715:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: net/ipv4/ah.c:719:
+^I$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#549: FILE: net/ipv4/ah.c:730:
+		if (ahp->work_icv)
+			kfree(ahp->work_icv);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#562: FILE: net/ipv4/ah.c:743:
+	if (ahp->work_icv) {
+		kfree(ahp->work_icv);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#572: FILE: net/ipv4/ah.c:753:
+static struct xfrm_type ah6_type =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#574: FILE: net/ipv4/ah.c:755:
+^I.proto^I     ^I= IPPROTO_AH,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#591: FILE: net/ipv4/ah.c:772:
+		printk(KERN_INFO "ipv6 ah init: can't add xfrm type\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#596: FILE: net/ipv4/ah.c:777:
+		printk(KERN_INFO "ipv6 ah init: can't add protocol\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#607: FILE: net/ipv4/ah.c:788:
+		printk(KERN_INFO "ipv6 ah close: can't remove protocol\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#610: FILE: net/ipv4/ah.c:791:
+		printk(KERN_INFO "ipv6 ah close: can't remove xfrm type\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#612: FILE: net/ipv4/ah.c:793:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#624: FILE: net/ipv4/esp.c:1:
+/* Changes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: net/ipv4/esp.c:3:
+ *^IMitsuru KANDA @USAGI       : IPv6 Support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: net/ipv4/esp.c:4:
+ * ^IKazunori MIYAZAWA @USAGI   :$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: net/ipv4/esp.c:5:
+ * ^IKunihiro Ishiguro          :$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: net/ipv4/esp.c:6:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: net/ipv4/esp.c:6:
+ * ^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: net/ipv4/esp.c:20:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: net/ipv4/esp.c:20:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: net/ipv4/esp.c:742:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: net/ipv4/esp.c:742:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#658: FILE: net/ipv4/esp.c:745:
+#define NIP6(addr) \
+	ntohs((addr).s6_addr16[0]),\
+	ntohs((addr).s6_addr16[1]),\
+	ntohs((addr).s6_addr16[2]),\
+	ntohs((addr).s6_addr16[3]),\
+	ntohs((addr).s6_addr16[4]),\
+	ntohs((addr).s6_addr16[5]),\
+	ntohs((addr).s6_addr16[6]),\
+	ntohs((addr).s6_addr16[7])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#658: FILE: net/ipv4/esp.c:745:
+#define NIP6(addr) \
+	ntohs((addr).s6_addr16[0]),\
+	ntohs((addr).s6_addr16[1]),\
+	ntohs((addr).s6_addr16[2]),\
+	ntohs((addr).s6_addr16[3]),\
+	ntohs((addr).s6_addr16[4]),\
+	ntohs((addr).s6_addr16[5]),\
+	ntohs((addr).s6_addr16[6]),\
+	ntohs((addr).s6_addr16[7])

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#671: FILE: net/ipv4/esp.c:758:
+	struct ipv6_opt_hdr *exthdr = (struct ipv6_opt_hdr*)(packet + offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#674: FILE: net/ipv4/esp.c:761:
+	*nexthdr = ((struct ipv6hdr*)packet)->nexthdr;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#677: FILE: net/ipv4/esp.c:764:
+	while (offset + 1 < packet_len) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#679: FILE: net/ipv4/esp.c:766:
+		switch (*nexthdr) {
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#685: FILE: net/ipv4/esp.c:772:
+			exthdr = (struct ipv6_opt_hdr*)(packet + offset);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#690: FILE: net/ipv4/esp.c:777:
+				((struct ipv6_opt_hdr*)(packet + offset + ipv6_optlen(exthdr)))->nexthdr;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#690: FILE: net/ipv4/esp.c:777:
+				((struct ipv6_opt_hdr*)(packet + offset + ipv6_optlen(exthdr)))->nexthdr;

WARNING:REPEATED_WORD: Possible repeated word: 'next'
#692: FILE: net/ipv4/esp.c:779:
+			   with next next header check. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#692: FILE: net/ipv4/esp.c:779:
+			/* XXX We know the option is inner dest opt
+			   with next next header check. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#692: FILE: net/ipv4/esp.c:779:
+			   with next next header check. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#693: FILE: net/ipv4/esp.c:780:
+			if (nextnexthdr != NEXTHDR_HOP &&
[...]
+					return offset;

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: net/ipv4/esp.c:781:
+^I^I    ^I    nextnexthdr != NEXTHDR_ROUTING &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: net/ipv4/esp.c:781:
+^I^I    ^I    nextnexthdr != NEXTHDR_ROUTING &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: net/ipv4/esp.c:781:
+			if (nextnexthdr != NEXTHDR_HOP &&
+		    	    nextnexthdr != NEXTHDR_ROUTING &&

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#701: FILE: net/ipv4/esp.c:788:
+			exthdr = (struct ipv6_opt_hdr*)(packet + offset);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#704: FILE: net/ipv4/esp.c:791:
+		default :
 		        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb_checksum_help"
#731: FILE: net/ipv4/esp.c:818:
+	if (skb->ip_summed == CHECKSUM_HW && skb_checksum_help(skb) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#735: FILE: net/ipv4/esp.c:822:
+	if ((err = xfrm_state_check_expire(x)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#737: FILE: net/ipv4/esp.c:824:
+	if ((err = xfrm_state_check_space(x, skb)) != 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#764: FILE: net/ipv4/esp.c:851:
+	clen = (clen + 2 + blksize-1)&~(blksize-1);
 	                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#764: FILE: net/ipv4/esp.c:851:
+	clen = (clen + 2 + blksize-1)&~(blksize-1);
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#764: FILE: net/ipv4/esp.c:851:
+	clen = (clen + 2 + blksize-1)&~(blksize-1);
 	                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#766: FILE: net/ipv4/esp.c:853:
+		clen = (clen + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#766: FILE: net/ipv4/esp.c:853:
+		clen = (clen + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#766: FILE: net/ipv4/esp.c:853:
+		clen = (clen + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#768: FILE: net/ipv4/esp.c:855:
+	if ((nfrags = skb_cow_data(skb, clen-skb->len+alen, &trailer)) < 0) {
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#768: FILE: net/ipv4/esp.c:855:
+	if ((nfrags = skb_cow_data(skb, clen-skb->len+alen, &trailer)) < 0) {
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#768: FILE: net/ipv4/esp.c:855:
+	if ((nfrags = skb_cow_data(skb, clen-skb->len+alen, &trailer)) < 0) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#769: FILE: net/ipv4/esp.c:856:
+		if (!x->props.mode && iph) kfree(iph);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#776: FILE: net/ipv4/esp.c:863:
+		int i;
+		for (i=0; i<clen-skb->len - 2; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#776: FILE: net/ipv4/esp.c:863:
+		for (i=0; i<clen-skb->len - 2; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#776: FILE: net/ipv4/esp.c:863:
+		for (i=0; i<clen-skb->len - 2; i++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#776: FILE: net/ipv4/esp.c:863:
+		for (i=0; i<clen-skb->len - 2; i++)
 		                ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#777: FILE: net/ipv4/esp.c:864:
+			*(u8*)(trailer->tail + i) = i+1;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#777: FILE: net/ipv4/esp.c:864:
+			*(u8*)(trailer->tail + i) = i+1;
 			                             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#779: FILE: net/ipv4/esp.c:866:
+	*(u8*)(trailer->tail + clen-skb->len - 2) = (clen - skb->len)-2;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#779: FILE: net/ipv4/esp.c:866:
+	*(u8*)(trailer->tail + clen-skb->len - 2) = (clen - skb->len)-2;
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#779: FILE: net/ipv4/esp.c:866:
+	*(u8*)(trailer->tail + clen-skb->len - 2) = (clen - skb->len)-2;
 	                                                             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#784: FILE: net/ipv4/esp.c:871:
+		top_iph = (struct ipv6hdr*)skb_push(skb, x->props.header_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#785: FILE: net/ipv4/esp.c:872:
+		esph = (struct ip_esp_hdr*)(top_iph+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#785: FILE: net/ipv4/esp.c:872:
+		esph = (struct ip_esp_hdr*)(top_iph+1);
 		                                   ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#786: FILE: net/ipv4/esp.c:873:
+		*(u8*)(trailer->tail - 1) = IPPROTO_IPV6;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: net/ipv4/esp.c:884:
+^I} else { $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#799: FILE: net/ipv4/esp.c:886:
+		esph = (struct ip_esp_hdr*)skb_push(skb, x->props.header_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#800: FILE: net/ipv4/esp.c:887:
+		top_iph = (struct ipv6hdr*)skb_push(skb, hdr_len);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#804: FILE: net/ipv4/esp.c:891:
+		if (prevhdr) {
[...]
+		} else {
[...]

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#809: FILE: net/ipv4/esp.c:896:
+		*(u8*)(trailer->tail - 1) = nexthdr;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#819: FILE: net/ipv4/esp.c:906:
+		struct scatterlist sgbuf[nfrags>MAX_SG_ONSTACK ? 0 : nfrags];
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#823: FILE: net/ipv4/esp.c:910:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);
 			                                       ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct scatterlist)...)
#823: FILE: net/ipv4/esp.c:910:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#823: FILE: net/ipv4/esp.c:910:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#827: FILE: net/ipv4/esp.c:914:
+		skb_to_sgvec(skb, sg, esph->enc_data+esp->conf.ivlen-skb->data, clen);
 		                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#827: FILE: net/ipv4/esp.c:914:
+		skb_to_sgvec(skb, sg, esph->enc_data+esp->conf.ivlen-skb->data, clen);
 		                                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#839: FILE: net/ipv4/esp.c:926:
+		esp->auth.icv(esp, skb, (u8*)esph-skb->data,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#839: FILE: net/ipv4/esp.c:926:
+		esp->auth.icv(esp, skb, (u8*)esph-skb->data,
 		                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#840: FILE: net/ipv4/esp.c:927:
+			8+esp->conf.ivlen+clen, trailer->tail);
 			 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#840: FILE: net/ipv4/esp.c:927:
+			8+esp->conf.ivlen+clen, trailer->tail);
 			                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#849: FILE: net/ipv4/esp.c:936:
+	if ((skb->dst = dst_pop(dst)) == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#878: FILE: net/ipv4/esp.c:965:
+	if (elen <= 0 || (elen & (blksize-1)))
 	                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: net/ipv4/esp.c:974:
+        if (esp->auth.icv_full_len) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: net/ipv4/esp.c:974:
+        if (esp->auth.icv_full_len) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#891: FILE: net/ipv4/esp.c:978:
+		esp->auth.icv(esp, skb, 0, skb->len-alen, sum);
 		                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#893: FILE: net/ipv4/esp.c:980:
+		if (skb_copy_bits(skb, skb->len-alen, sum1, alen))
 		                               ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#894: FILE: net/ipv4/esp.c:981:
+			BUG();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#902: FILE: net/ipv4/esp.c:989:
+	if ((nfrags = skb_cow_data(skb, 0, &trailer)) < 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#907: FILE: net/ipv4/esp.c:994:
+	esph = (struct ip_esp_hdr*)skb->data;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#912: FILE: net/ipv4/esp.c:999:
+		crypto_cipher_set_iv(esp->conf.tfm, esph->enc_data, crypto_tfm_alg_ivsize(esp->conf.tfm));

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: net/ipv4/esp.c:1001:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: net/ipv4/esp.c:1001:
+        {$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#916: FILE: net/ipv4/esp.c:1003:
+		struct scatterlist sgbuf[nfrags>MAX_SG_ONSTACK ? 0 : nfrags];
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#921: FILE: net/ipv4/esp.c:1008:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);
 			                                       ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct scatterlist)...)
#921: FILE: net/ipv4/esp.c:1008:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#921: FILE: net/ipv4/esp.c:1008:
+			sg = kmalloc(sizeof(struct scatterlist)*nfrags, GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#925: FILE: net/ipv4/esp.c:1012:
+		skb_to_sgvec(skb, sg, 8+esp->conf.ivlen, elen);
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#930: FILE: net/ipv4/esp.c:1017:
+		if (skb_copy_bits(skb, skb->len-alen-2, nexthdr, 2))
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#930: FILE: net/ipv4/esp.c:1017:
+		if (skb_copy_bits(skb, skb->len-alen-2, nexthdr, 2))
 		                                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#931: FILE: net/ipv4/esp.c:1018:
+			BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#934: FILE: net/ipv4/esp.c:1021:
+		if (padlen+2 >= elen) {
 		          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#935: FILE: net/ipv4/esp.c:1022:
+			if (net_ratelimit()) {
+				printk(KERN_WARNING "ipsec esp packet is garbage padlen=%d, elen=%d\n", padlen+2, elen);
+			}

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#936: FILE: net/ipv4/esp.c:1023:
+				printk(KERN_WARNING "ipsec esp packet is garbage padlen=%d, elen=%d\n", padlen+2, elen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#936: FILE: net/ipv4/esp.c:1023:
+				printk(KERN_WARNING "ipsec esp packet is garbage padlen=%d, elen=%d\n", padlen+2, elen);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#936: FILE: net/ipv4/esp.c:1023:
+				printk(KERN_WARNING "ipsec esp packet is garbage padlen=%d, elen=%d\n", padlen+2, elen);
 				                                                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: net/ipv4/esp.c:1027:
+^I^I/* ... check padding bits here. Silly. :-) */ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#961: FILE: net/ipv4/esp.c:1048:
+		mtu = (mtu + 2 + blksize-1)&~(blksize-1);
 		                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#961: FILE: net/ipv4/esp.c:1048:
+		mtu = (mtu + 2 + blksize-1)&~(blksize-1);
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#961: FILE: net/ipv4/esp.c:1048:
+		mtu = (mtu + 2 + blksize-1)&~(blksize-1);
 		                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#967: FILE: net/ipv4/esp.c:1054:
+		mtu = (mtu + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#967: FILE: net/ipv4/esp.c:1054:
+		mtu = (mtu + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#967: FILE: net/ipv4/esp.c:1054:
+		mtu = (mtu + esp->conf.padlen-1)&~(esp->conf.padlen-1);
 		                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#973: FILE: net/ipv4/esp.c:1060:
+void esp6_err(struct sk_buff *skb, struct inet6_skb_parm *opt,
+		int type, int code, int offset, __u32 info)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#975: FILE: net/ipv4/esp.c:1062:
+	struct ipv6hdr *iph = (struct ipv6hdr*)skb->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#976: FILE: net/ipv4/esp.c:1063:
+	struct ip_esp_hdr *esph = (struct ip_esp_hdr*)(skb->data+offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#976: FILE: net/ipv4/esp.c:1063:
+	struct ip_esp_hdr *esph = (struct ip_esp_hdr*)(skb->data+offset);
 	                                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#986: FILE: net/ipv4/esp.c:1073:
+	printk(KERN_DEBUG "pmtu discvovery on SA ESP/%08x/"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: net/ipv4/esp.c:1074:
+^I^I^I"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: net/ipv4/esp.c:1074:
+	printk(KERN_DEBUG "pmtu discvovery on SA ESP/%08x/"
+			"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x\n", 

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1001: FILE: net/ipv4/esp.c:1088:
+	if (esp->conf.ivec) {
+		kfree(esp->conf.ivec);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1009: FILE: net/ipv4/esp.c:1096:
+	if (esp->auth.work_icv) {
+		kfree(esp->auth.work_icv);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!x->ealg"
#1022: FILE: net/ipv4/esp.c:1109:
+	if (x->ealg == NULL || x->ealg->alg_key_len == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!esp"
#1026: FILE: net/ipv4/esp.c:1113:
+	if (esp == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1035: FILE: net/ipv4/esp.c:1122:
+		esp->auth.key_len = (x->aalg->alg_key_len+7)/8;
 		                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1035: FILE: net/ipv4/esp.c:1122:
+		esp->auth.key_len = (x->aalg->alg_key_len+7)/8;
 		                                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!esp->auth.tfm"
#1037: FILE: net/ipv4/esp.c:1124:
+		if (esp->auth.tfm == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: net/ipv4/esp.c:1127:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: net/ipv4/esp.c:1127:
+ $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1042: FILE: net/ipv4/esp.c:1129:
+		BUG_ON(!aalg_desc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: net/ipv4/esp.c:1130:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: net/ipv4/esp.c:1130:
+ $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1044: FILE: net/ipv4/esp.c:1131:
+		if (aalg_desc->uinfo.auth.icv_fullbits/8 !=
[...]
+				printk(KERN_INFO "ESP: %s digestsize %u != %hu\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1044: FILE: net/ipv4/esp.c:1131:
+		if (aalg_desc->uinfo.auth.icv_fullbits/8 !=
 		                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1046: FILE: net/ipv4/esp.c:1133:
+				printk(KERN_INFO "ESP: %s digestsize %u != %hu\n",

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1046: FILE: net/ipv4/esp.c:1133:
+				printk(KERN_INFO "ESP: %s digestsize %u != %hu\n",
+					x->aalg->alg_name,
+					crypto_tfm_alg_digestsize(esp->auth.tfm),
+					aalg_desc->uinfo.auth.icv_fullbits/8);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1047: FILE: net/ipv4/esp.c:1134:
+				printk(KERN_INFO "ESP: %s digestsize %u != %hu\n",
+					x->aalg->alg_name,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1049: FILE: net/ipv4/esp.c:1136:
+					aalg_desc->uinfo.auth.icv_fullbits/8);
 					                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: net/ipv4/esp.c:1139:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: net/ipv4/esp.c:1139:
+ $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1053: FILE: net/ipv4/esp.c:1140:
+		esp->auth.icv_full_len = aalg_desc->uinfo.auth.icv_fullbits/8;
 		                                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1054: FILE: net/ipv4/esp.c:1141:
+		esp->auth.icv_trunc_len = aalg_desc->uinfo.auth.icv_truncbits/8;
 		                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: net/ipv4/esp.c:1142:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: net/ipv4/esp.c:1142:
+ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1061: FILE: net/ipv4/esp.c:1148:
+	esp->conf.key_len = (x->ealg->alg_key_len+7)/8;
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1061: FILE: net/ipv4/esp.c:1148:
+	esp->conf.key_len = (x->ealg->alg_key_len+7)/8;
 	                                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!esp->conf.tfm"
#1063: FILE: net/ipv4/esp.c:1150:
+	if (esp->conf.tfm == NULL)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1083: FILE: net/ipv4/esp.c:1170:
+		if (esp->auth.work_icv)
+			kfree(esp->auth.work_icv);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1092: FILE: net/ipv4/esp.c:1179:
+static struct xfrm_type esp6_type =
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1094: FILE: net/ipv4/esp.c:1181:
+^I.proto^I     ^I= IPPROTO_ESP,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1103: FILE: net/ipv4/esp.c:1190:
+^I.handler ^I=^Ixfrm6_rcv,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1111: FILE: net/ipv4/esp.c:1198:
+		printk(KERN_INFO "ipv6 esp init: can't add xfrm type\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1115: FILE: net/ipv4/esp.c:1202:
+		printk(KERN_INFO "ipv6 esp init: can't add protocol\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1126: FILE: net/ipv4/esp.c:1213:
+		printk(KERN_INFO "ipv6 esp close: can't remove protocol\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1128: FILE: net/ipv4/esp.c:1215:
+		printk(KERN_INFO "ipv6 esp close: can't remove xfrm type\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1136: FILE: net/ipv4/esp.c:1223:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1142: FILE: net/ipv4/xfrm_input.c:1:
+/* Changes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: net/ipv4/xfrm_input.c:3:
+ *^IMitsuru KANDA @USAGI       : IPv6 Support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1145: FILE: net/ipv4/xfrm_input.c:4:
+ * ^IKazunori MIYAZAWA @USAGI   :$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1146: FILE: net/ipv4/xfrm_input.c:5:
+ * ^IKunihiro Ishiguro          :$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1147: FILE: net/ipv4/xfrm_input.c:6:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1147: FILE: net/ipv4/xfrm_input.c:6:
+ * ^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1160: FILE: net/ipv4/xfrm_input.c:170:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1160: FILE: net/ipv4/xfrm_input.c:170:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1180: FILE: net/ipv4/xfrm_input.c:190:
+		*spi = *(u16*)(skb->h.raw + 2);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1190: FILE: net/ipv4/xfrm_input.c:200:
+	*spi = *(u32*)(skb->h.raw + offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1191: FILE: net/ipv4/xfrm_input.c:201:
+	*seq = *(u32*)(skb->h.raw + offset_seq);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1206: FILE: net/ipv4/xfrm_input.c:216:
+	while (len > 0) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1208: FILE: net/ipv4/xfrm_input.c:218:
+		switch (opt[off]) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: net/ipv4/xfrm_input.c:223:
+^I^I^Iif (len < 2) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1215: FILE: net/ipv4/xfrm_input.c:225:
+			optlen = opt[off+1]+2;
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1215: FILE: net/ipv4/xfrm_input.c:225:
+			optlen = opt[off+1]+2;
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1219: FILE: net/ipv4/xfrm_input.c:229:
+				memset(&opt[off+2], 0, opt[off+1]);
 				               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1219: FILE: net/ipv4/xfrm_input.c:229:
+				memset(&opt[off+2], 0, opt[off+1]);
 				                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1236: FILE: net/ipv4/xfrm_input.c:246:
+	struct ipv6_opt_hdr *exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1244: FILE: net/ipv4/xfrm_input.c:254:
+	while (offset + 1 <= packet_len) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1246: FILE: net/ipv4/xfrm_input.c:256:
+		switch (nexthdr) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: net/ipv4/xfrm_input.c:262:
+^I^I^I^I^Iprintk(KERN_WARNING "overrun hopopts\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1252: FILE: net/ipv4/xfrm_input.c:262:
+					printk(KERN_WARNING "overrun hopopts\n"); 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1256: FILE: net/ipv4/xfrm_input.c:266:
+			exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: net/ipv4/xfrm_input.c:272:
+^I^I^I((struct ipv6_rt_hdr*)exthdr)->segments_left = 0; $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1262: FILE: net/ipv4/xfrm_input.c:272:
+			((struct ipv6_rt_hdr*)exthdr)->segments_left = 0; 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1264: FILE: net/ipv4/xfrm_input.c:274:
+			exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: net/ipv4/xfrm_input.c:282:
+^I^I^I^I^Iprintk(KERN_WARNING "overrun destopt\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1272: FILE: net/ipv4/xfrm_input.c:282:
+					printk(KERN_WARNING "overrun destopt\n"); 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1276: FILE: net/ipv4/xfrm_input.c:286:
+			exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1281: FILE: net/ipv4/xfrm_input.c:291:
+^I^I^I^Imemset(((struct ipv6_auth_hdr*)exthdr)->auth_data, 0, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1281: FILE: net/ipv4/xfrm_input.c:291:
+				memset(((struct ipv6_auth_hdr*)exthdr)->auth_data, 0, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1282: FILE: net/ipv4/xfrm_input.c:292:
+				       (((struct ipv6_auth_hdr*)exthdr)->hdrlen - 1) << 2);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1285: FILE: net/ipv4/xfrm_input.c:295:
+				offset += (((struct ipv6_auth_hdr*)exthdr)->hdrlen + 2) << 2;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1286: FILE: net/ipv4/xfrm_input.c:296:
+				exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1290: FILE: net/ipv4/xfrm_input.c:300:
+						printk(KERN_WARNING "overrun destopt\n");

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1295: FILE: net/ipv4/xfrm_input.c:305:
+		default :
 		        ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1318: FILE: net/ipv4/xfrm_input.c:328:
+		nh_offset = ((unsigned char*)&skb->nh.ipv6h->nexthdr) - skb->nh.raw;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1336: FILE: net/ipv4/xfrm_input.c:346:
+	if ((err = xfrm6_parse_spi(skb, nexthdr, &spi, &seq)) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1338: FILE: net/ipv4/xfrm_input.c:348:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!x"
#1346: FILE: net/ipv4/xfrm_input.c:356:
+		if (x == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1369: FILE: net/ipv4/xfrm_input.c:379:
+^I^Iiph = skb->nh.ipv6h; /* ??? */ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1372: FILE: net/ipv4/xfrm_input.c:382:
+			if (!pskb_may_pull(skb, (skb->h.raw-skb->data)+8) ||
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1372: FILE: net/ipv4/xfrm_input.c:382:
+			if (!pskb_may_pull(skb, (skb->h.raw-skb->data)+8) ||
 			                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: net/ipv4/xfrm_input.c:383:
+^I^I    ^I!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1373: FILE: net/ipv4/xfrm_input.c:383:
+^I^I    ^I!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1373: FILE: net/ipv4/xfrm_input.c:383:
+			if (!pskb_may_pull(skb, (skb->h.raw-skb->data)+8) ||
+		    	!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1373: FILE: net/ipv4/xfrm_input.c:383:
+		    	!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 		    	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1373: FILE: net/ipv4/xfrm_input.c:383:
+		    	!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 		    	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1373: FILE: net/ipv4/xfrm_input.c:383:
+		    	!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 		    	                                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1373: FILE: net/ipv4/xfrm_input.c:383:
+		    	!pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 		    	                                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1379: FILE: net/ipv4/xfrm_input.c:389:
+			skb_pull(skb, (skb->h.raw[1]+1)<<3);
 			                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1379: FILE: net/ipv4/xfrm_input.c:389:
+			skb_pull(skb, (skb->h.raw[1]+1)<<3);
 			                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1392: FILE: net/ipv4/xfrm_input.c:402:
+		if ((err = xfrm6_parse_spi(skb, nexthdr, &spi, &seq)) < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1403: FILE: net/ipv4/xfrm_input.c:413:
+		struct sec_path *sp;
+		sp = kmem_cache_alloc(secpath_cachep, SLAB_ATOMIC);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1406: FILE: net/ipv4/xfrm_input.c:416:
+		if (skb->sp) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1409: FILE: net/ipv4/xfrm_input.c:419:
+		} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1418: FILE: net/ipv4/xfrm_input.c:428:
+	memcpy(skb->sp->xvec+skb->sp->len, xfrm_vec, xfrm_nr*sizeof(void*));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1418: FILE: net/ipv4/xfrm_input.c:428:
+	memcpy(skb->sp->xvec+skb->sp->len, xfrm_vec, xfrm_nr*sizeof(void*));
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1418: FILE: net/ipv4/xfrm_input.c:428:
+	memcpy(skb->sp->xvec+skb->sp->len, xfrm_vec, xfrm_nr*sizeof(void*));
 	                                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1422: FILE: net/ipv4/xfrm_input.c:432:
+		if (!(skb->dev->flags&IFF_LOOPBACK)) {
 		                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1436: FILE: net/ipv4/xfrm_input.c:446:
+	if (tmp_hdr) kfree(tmp_hdr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1448: FILE: net/ipv4/xfrm_policy.c:1:
+/* Changes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: net/ipv4/xfrm_policy.c:3:
+ *^IMitsuru KANDA @USAGI       : IPv6 Support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1451: FILE: net/ipv4/xfrm_policy.c:4:
+ * ^IKazunori MIYAZAWA @USAGI   :$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1452: FILE: net/ipv4/xfrm_policy.c:5:
+ * ^IKunihiro Ishiguro          :$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1453: FILE: net/ipv4/xfrm_policy.c:6:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1453: FILE: net/ipv4/xfrm_policy.c:6:
+ * ^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: net/ipv4/xfrm_policy.c:68:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: net/ipv4/xfrm_policy.c:68:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1471: FILE: net/ipv4/xfrm_policy.c:71:
+static int xfrm6_bundle_create(struct xfrm_policy *policy, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1480: FILE: net/ipv4/xfrm_policy.c:80:
+^I^I   fl->fl6_src->s6_addr32[3] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: net/ipv4/xfrm_policy.c:86:
+^I^Ifl->fl6_dst->s6_addr32[3] ^ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1490: FILE: net/ipv4/xfrm_policy.c:90:
+	return hash & (FLOWCACHE_HASH_SIZE-1);
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1504: FILE: net/ipv4/xfrm_policy.c:118:
+struct xfrm_policy *flow_lookup(int dir, struct flowi *fl, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1518: FILE: net/ipv4/xfrm_policy.c:130:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1518: FILE: net/ipv4/xfrm_policy.c:130:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1557: FILE: net/ipv4/xfrm_policy.c:570:
+			if (pol->family != AF_INET) break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: net/ipv4/xfrm_policy.c:576:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: net/ipv4/xfrm_policy.c:576:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1565: FILE: net/ipv4/xfrm_policy.c:578:
+			if (pol->family != AF_INET6) break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1598: FILE: net/ipv4/xfrm_policy.c:607:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1598: FILE: net/ipv4/xfrm_policy.c:607:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1658: FILE: net/ipv4/xfrm_policy.c:943:
+				struct xfrm_dst *xdst = (struct xfrm_dst*)dst;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1659: FILE: net/ipv4/xfrm_policy.c:944:
+				struct xfrm_dst *xdst = (struct xfrm_dst*)dst;
+				if (xdst->u.rt.fl.fl4_dst == fl->fl4_dst &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1671: FILE: net/ipv4/xfrm_policy.c:956:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1671: FILE: net/ipv4/xfrm_policy.c:956:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1675: FILE: net/ipv4/xfrm_policy.c:960:
+				struct xfrm_dst *xdst = (struct xfrm_dst*)dst;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1676: FILE: net/ipv4/xfrm_policy.c:961:
+				if (!memcmp(&xdst->u.rt6.rt6i_dst, &fl->fl6_dst, sizeof(struct in6_addr)) &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#1676: FILE: net/ipv4/xfrm_policy.c:961:
+				struct xfrm_dst *xdst = (struct xfrm_dst*)dst;
+				if (!memcmp(&xdst->u.rt6.rt6i_dst, &fl->fl6_dst, sizeof(struct in6_addr)) &&

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1677: FILE: net/ipv4/xfrm_policy.c:962:
+				    !memcmp(&xdst->u.rt6.rt6i_src, &fl->fl6_src, sizeof(struct in6_addr)) &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1709: FILE: net/ipv4/xfrm_policy.c:994:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1709: FILE: net/ipv4/xfrm_policy.c:994:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1729: FILE: net/ipv4/xfrm_policy.c:1028:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1729: FILE: net/ipv4/xfrm_policy.c:1028:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1737: FILE: net/ipv4/xfrm_policy.c:1036:
+^I^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1746: FILE: net/ipv4/xfrm_policy.c:1148:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1746: FILE: net/ipv4/xfrm_policy.c:1148:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1753: FILE: net/ipv4/xfrm_policy.c:1155:
+		(tmpl->aalgos & (1<<x->props.aalgo)) &&
 		                  ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1754: FILE: net/ipv4/xfrm_policy.c:1156:
+		(!x->props.mode || !ipv6_addr_any((struct in6_addr*)&x->props.saddr) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1773: FILE: net/ipv4/xfrm_policy.c:1175:
+	struct ipv6_opt_hdr *exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1786: FILE: net/ipv4/xfrm_policy.c:1188:
+			exthdr = (struct ipv6_opt_hdr*)(skb->nh.raw + offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1821: FILE: net/ipv4/xfrm_policy.c:1222:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1821: FILE: net/ipv4/xfrm_policy.c:1222:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1826: FILE: net/ipv4/xfrm_policy.c:1227:
+	default :
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1837: FILE: net/ipv4/xfrm_policy.c:1236:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1837: FILE: net/ipv4/xfrm_policy.c:1236:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1837: FILE: net/ipv4/xfrm_policy.c:1236:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1842: FILE: net/ipv4/xfrm_policy.c:1241:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1842: FILE: net/ipv4/xfrm_policy.c:1241:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1844: FILE: net/ipv4/xfrm_policy.c:1243:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1844: FILE: net/ipv4/xfrm_policy.c:1243:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1844: FILE: net/ipv4/xfrm_policy.c:1243:
+			for (i=skb->sp->len-1; i>=0; i--) {
 			                        ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1845: FILE: net/ipv4/xfrm_policy.c:1244:
+				if (family == AF_INET6 && !xfrm6_selector_match(&skb->sp->xvec[i]->sel, &fl))

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1850: FILE: net/ipv4/xfrm_policy.c:1249:
+		default :
 		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1873: FILE: net/ipv4/xfrm_policy.c:1281:
+				for (i = pol->xfrm_nr-1, k = 0; i >= 0; i--) {
 				                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1874: FILE: net/ipv4/xfrm_policy.c:1282:
+					k = xfrm_policy_ok(pol->xfrm_vec+i, sp, k);
 					                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1879: FILE: net/ipv4/xfrm_policy.c:1287:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1879: FILE: net/ipv4/xfrm_policy.c:1287:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1881: FILE: net/ipv4/xfrm_policy.c:1289:
+				for (i = pol->xfrm_nr-1, k = 0; i >= 0; i--) {
 				                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1882: FILE: net/ipv4/xfrm_policy.c:1290:
+					k = xfrm_policy_ok(pol->xfrm_vec+i, sp, k);
 					                                ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1888: FILE: net/ipv4/xfrm_policy.c:1296:
+			default :
 			        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1907: FILE: net/ipv4/xfrm_policy.c:1317:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1907: FILE: net/ipv4/xfrm_policy.c:1317:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1991: FILE: net/ipv4/xfrm_policy.c:1526:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1991: FILE: net/ipv4/xfrm_policy.c:1526:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2000: FILE: net/ipv4/xfrm_policy.c:1535:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2000: FILE: net/ipv4/xfrm_policy.c:1535:
+#if defined (CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

WARNING:TYPO_SPELLING: 'absolultely' may be misspelled - perhaps 'absolutely'?
#2007: FILE: net/ipv4/xfrm_policy.c:1542:
+ * are absolultely cpu-local. When a rule exists we do some updates
        ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2016: FILE: net/ipv4/xfrm_policy.c:1551:
+xfrm6_tmpl_resolve(struct xfrm_policy *policy, struct flowi *fl,
+		  struct xfrm_state **xfrm)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2023: FILE: net/ipv4/xfrm_policy.c:1558:
+	for (nx=0, i = 0; i < policy->xfrm_nr; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2024: FILE: net/ipv4/xfrm_policy.c:1559:
+		struct xfrm_state *x=NULL;
 		                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2030: FILE: net/ipv4/xfrm_policy.c:1565:
+			remote = (struct in6_addr*)&tmpl->id.daddr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2031: FILE: net/ipv4/xfrm_policy.c:1566:
+			local = (struct in6_addr*)&tmpl->saddr;

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2055: FILE: net/ipv4/xfrm_policy.c:1590:
+	for (nx--; nx>=0; nx--)
 	             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2075: FILE: net/ipv4/xfrm_policy.c:1610:
+		xdst = (struct xfrm_dst*)xdst->u.dst.child;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2080: FILE: net/ipv4/xfrm_policy.c:1615:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2087: FILE: net/ipv4/xfrm_policy.c:1622:
+xfrm6_bundle_create(struct xfrm_policy *policy, struct xfrm_state **xfrm, int nx,
+		   struct flowi *fl, struct dst_entry **dst_p)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2090: FILE: net/ipv4/xfrm_policy.c:1625:
+	struct rt6_info *rt0 = (struct rt6_info*)(*dst_p);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2098: FILE: net/ipv4/xfrm_policy.c:1633:
+	dst = dst_prev = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dst1"
#2103: FILE: net/ipv4/xfrm_policy.c:1638:
+		if (unlikely(dst1 == NULL)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2109: FILE: net/ipv4/xfrm_policy.c:1644:
+		if (!dst)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2111: FILE: net/ipv4/xfrm_policy.c:1646:
+		else {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2118: FILE: net/ipv4/xfrm_policy.c:1653:
+			remote = (struct in6_addr*)&xfrm[i]->id.daddr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2119: FILE: net/ipv4/xfrm_policy.c:1654:
+			local  = (struct in6_addr*)&xfrm[i]->props.saddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2126: FILE: net/ipv4/xfrm_policy.c:1661:
+		struct flowi fl_tunnel;
+		memset(&fl_tunnel, 0, sizeof(fl_tunnel));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2130: FILE: net/ipv4/xfrm_policy.c:1665:
+		rt = (struct rt6_info*)ip6_route_output(NULL, &fl_tunnel);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2139: FILE: net/ipv4/xfrm_policy.c:1674:
+		struct xfrm_dst *x = (struct xfrm_dst*)dst_prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2140: FILE: net/ipv4/xfrm_policy.c:1675:
+		struct xfrm_dst *x = (struct xfrm_dst*)dst_prev;
+		x->u.rt.fl = *fl;

WARNING:TYPO_SPELLING: 'neighbout' may be misspelled - perhaps 'neighbour'?
#2152: FILE: net/ipv4/xfrm_policy.c:1687:
+		/* Copy neighbout for reachability confirmation */
 		        ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2157: FILE: net/ipv4/xfrm_policy.c:1692:
+		 * it was magically lost, so this code needs audit */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2158: FILE: net/ipv4/xfrm_policy.c:1693:
+		x->u.rt6.rt6i_flags    = rt0->rt6i_flags&(RTCF_BROADCAST|RTCF_MULTICAST|RTCF_LOCAL);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2158: FILE: net/ipv4/xfrm_policy.c:1693:
+		x->u.rt6.rt6i_flags    = rt0->rt6i_flags&(RTCF_BROADCAST|RTCF_MULTICAST|RTCF_LOCAL);
 		                                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2158: FILE: net/ipv4/xfrm_policy.c:1693:
+		x->u.rt6.rt6i_flags    = rt0->rt6i_flags&(RTCF_BROADCAST|RTCF_MULTICAST|RTCF_LOCAL);
 		                                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2163: FILE: net/ipv4/xfrm_policy.c:1698:
+^I^Imemcpy(&x->u.rt6.rt6i_gateway, &rt0->rt6i_gateway, sizeof(x->u.rt6.rt6i_gateway)); $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2178: FILE: net/ipv4/xfrm_policy.c:1713:
+	return (atomic_read(&xfrm6_dst_ops.entries) > xfrm6_dst_ops.gc_thresh*2);
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2197: FILE: net/ipv4/xfrm_policy.c:1732:
+	for (i=0; i<2*XFRM_POLICY_MAX; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2197: FILE: net/ipv4/xfrm_policy.c:1732:
+	for (i=0; i<2*XFRM_POLICY_MAX; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2197: FILE: net/ipv4/xfrm_policy.c:1732:
+	for (i=0; i<2*XFRM_POLICY_MAX; i++) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#2201: FILE: net/ipv4/xfrm_policy.c:1736:
+			while ((dst=*dstp) != NULL) {
 			           ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#2201: FILE: net/ipv4/xfrm_policy.c:1736:
+			while ((dst=*dstp) != NULL) {
 			            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2253: FILE: net/ipv4/xfrm_policy.c:1788:
+			struct xfrm_state *x = d->xfrm;
+			if (x) {

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#2276: FILE: net/ipv4/xfrm_policy.c:1811:
+	.protocol =		__constant_htons(ETH_P_IPV6),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2293: FILE: net/ipv4/xfrm_state.c:1:
+/* Changes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2295: FILE: net/ipv4/xfrm_state.c:3:
+ *^IMitsuru KANDA @USAGI       : IPv6 Support $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2296: FILE: net/ipv4/xfrm_state.c:4:
+ * ^IKazunori MIYAZAWA @USAGI   :$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2297: FILE: net/ipv4/xfrm_state.c:5:
+ * ^IKunihiro Ishiguro          :$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2298: FILE: net/ipv4/xfrm_state.c:6:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2298: FILE: net/ipv4/xfrm_state.c:6:
+ * ^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2320: FILE: net/ipv4/xfrm_state.c:186:
+			default:;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2369: FILE: net/ipv4/xfrm_state.c:870:
+xfrm6_state_find(struct in6_addr *daddr, struct in6_addr *saddr, struct flowi *fl, struct xfrm_tmpl *tmpl,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2370: FILE: net/ipv4/xfrm_state.c:871:
+xfrm6_state_find(struct in6_addr *daddr, struct in6_addr *saddr, struct flowi *fl, struct xfrm_tmpl *tmpl,
+		struct xfrm_policy *pol, int *err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2372: FILE: net/ipv4/xfrm_state.c:873:
+	unsigned h = ntohl(daddr->s6_addr32[2]^daddr->s6_addr32[3]);

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#2372: FILE: net/ipv4/xfrm_state.c:873:
+	unsigned h = ntohl(daddr->s6_addr32[2]^daddr->s6_addr32[3]);
 	                                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2378: FILE: net/ipv4/xfrm_state.c:879:
+	h = (h ^ (h>>16)) % XFRM_DST_HSIZE;
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2381: FILE: net/ipv4/xfrm_state.c:882:
+	list_for_each_entry(x, xfrm_state_bydst+h, bydst) {
 	                                       ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#2382: FILE: net/ipv4/xfrm_state.c:883:
+		if (x->props.family == AF_INET6&&
 		                               ^

ERROR:SPACING: spaces required around that '||' (ctx:VxW)
#2385: FILE: net/ipv4/xfrm_state.c:886:
+		    (!memcmp(saddr, &x->props.saddr, sizeof(*saddr))|| ipv6_addr_any(saddr)) &&
 		                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2389: FILE: net/ipv4/xfrm_state.c:890:
+			/* Resolution logic:
+			   1. There is a valid state with matching selector.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2425: FILE: net/ipv4/xfrm_state.c:926:
+	if (!error && !acquire_in_progress &&

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2428: FILE: net/ipv4/xfrm_state.c:929:
+		 * to current session. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2440: FILE: net/ipv4/xfrm_state.c:941:
+		if (ipv6_addr_any((struct in6_addr*)&x->id.daddr))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2443: FILE: net/ipv4/xfrm_state.c:944:
+		if (ipv6_addr_any((struct in6_addr*)&x->props.saddr))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2451: FILE: net/ipv4/xfrm_state.c:952:
+			list_add_tail(&x->bydst, xfrm_state_bydst+h);
 			                                         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2454: FILE: net/ipv4/xfrm_state.c:955:
+				struct in6_addr *addr = (struct in6_addr*)&x->id.daddr;

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2455: FILE: net/ipv4/xfrm_state.c:956:
+				h = ntohl((addr->s6_addr32[2]^addr->s6_addr32[3])^x->id.spi^x->id.proto);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2455: FILE: net/ipv4/xfrm_state.c:956:
+				struct in6_addr *addr = (struct in6_addr*)&x->id.daddr;
+				h = ntohl((addr->s6_addr32[2]^addr->s6_addr32[3])^x->id.spi^x->id.proto);

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#2455: FILE: net/ipv4/xfrm_state.c:956:
+				h = ntohl((addr->s6_addr32[2]^addr->s6_addr32[3])^x->id.spi^x->id.proto);
 				                             ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#2455: FILE: net/ipv4/xfrm_state.c:956:
+				h = ntohl((addr->s6_addr32[2]^addr->s6_addr32[3])^x->id.spi^x->id.proto);
 				                                                 ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#2455: FILE: net/ipv4/xfrm_state.c:956:
+				h = ntohl((addr->s6_addr32[2]^addr->s6_addr32[3])^x->id.spi^x->id.proto);
 				                                                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2456: FILE: net/ipv4/xfrm_state.c:957:
+				h = (h ^ (h>>10) ^ (h>>20)) % XFRM_DST_HSIZE;
 				           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2456: FILE: net/ipv4/xfrm_state.c:957:
+				h = (h ^ (h>>10) ^ (h>>20)) % XFRM_DST_HSIZE;
 				                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2457: FILE: net/ipv4/xfrm_state.c:958:
+				list_add(&x->byspi, xfrm_state_byspi+h);
 				                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2462: FILE: net/ipv4/xfrm_state.c:963:
+			mod_timer(&x->timer, ACQ_EXPIRES*HZ);
 			                                ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2486: FILE: net/ipv6/exthdrs.c:395:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2551: FILE: net/ipv6/ip6_output.c:197:
+	if ((err = xfrm_lookup(&skb->dst, fl, sk, 0)) < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2561: FILE: net/ipv6/ip6_output.c:584:
+        if (dst) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2561: FILE: net/ipv6/ip6_output.c:584:
+        if (dst) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2562: FILE: net/ipv6/ip6_output.c:585:
+		if ((err = xfrm_lookup(&dst, fl, sk, 0)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2563: FILE: net/ipv6/ip6_output.c:586:
+^I^I^Idst_release(dst);^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2566: FILE: net/ipv6/ip6_output.c:589:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2566: FILE: net/ipv6/ip6_output.c:589:
+        }$

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: net/ipv6/ip6_output.c:677:
+			skb->h.raw = ((char *) hdr) + (pktlength - length);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2621: FILE: net/ipv6/ndisc.c:380:
+		if (ndisc_build_ll_hdr(skb, skb->dev, &skb->nh.ipv6h->daddr, neigh, skb->len) == 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2621: FILE: net/ipv6/ndisc.c:380:
+		struct neighbour *neigh = (skb->dst ? skb->dst->neighbour : NULL);
+		if (ndisc_build_ll_hdr(skb, skb->dev, &skb->nh.ipv6h->daddr, neigh, skb->len) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2632: FILE: net/ipv6/ndisc.c:391:
+static inline void ndisc_rt_init(struct rt6_info *rt, struct net_device *dev,
+			    struct neighbour *neigh)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2644: FILE: net/ipv6/ndisc.c:403:
+static inline void ndisc_flow_init(struct flowi *fl, u8 type,
+			    struct in6_addr *saddr, struct in6_addr *daddr)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2648: FILE: net/ipv6/ndisc.c:407:
+^Ifl->fl6_dst^I ^I= daddr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2649: FILE: net/ipv6/ndisc.c:408:
+^Ifl->proto^I ^I= IPPROTO_ICMPV6;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2660: FILE: net/ipv6/ndisc.c:419:
+	struct dst_entry* dst;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2669: FILE: net/ipv6/ndisc.c:429:
+^Iif (!rt) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2673: FILE: net/ipv6/ndisc.c:433:
+^Indisc_rt_init(rt, dev, neigh);^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2675: FILE: net/ipv6/ndisc.c:435:
+	dst = (struct dst_entry*)rt;

CHECK:SPACING: No space is necessary after a cast
#2700: FILE: net/ipv6/ndisc.c:462:
+	skb->h.raw = (unsigned char*) msg = (struct nd_msg *) skb_put(skb, len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2700: FILE: net/ipv6/ndisc.c:462:
+	skb->h.raw = (unsigned char*) msg = (struct nd_msg *) skb_put(skb, len);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2721: FILE: net/ipv6/ndisc.c:499:
+	struct dst_entry* dst;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2730: FILE: net/ipv6/ndisc.c:515:
+^Iif (!rt) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2734: FILE: net/ipv6/ndisc.c:519:
+^Indisc_rt_init(rt, dev, neigh);^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2736: FILE: net/ipv6/ndisc.c:521:
+	dst = (struct dst_entry*)rt;

CHECK:SPACING: No space is necessary after a cast
#2761: FILE: net/ipv6/ndisc.c:545:
+	skb->h.raw = (unsigned char*) msg = (struct nd_msg *)skb_put(skb, len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2761: FILE: net/ipv6/ndisc.c:545:
+	skb->h.raw = (unsigned char*) msg = (struct nd_msg *)skb_put(skb, len);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2782: FILE: net/ipv6/ndisc.c:577:
+	struct dst_entry* dst;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2791: FILE: net/ipv6/ndisc.c:586:
+^Iif (!rt) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2797: FILE: net/ipv6/ndisc.c:592:
+	dst = (struct dst_entry*)rt;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2822: FILE: net/ipv6/ndisc.c:615:
+        skb->h.raw = (unsigned char*) hdr = (struct icmp6hdr *) skb_put(skb, len);$

CHECK:SPACING: No space is necessary after a cast
#2822: FILE: net/ipv6/ndisc.c:615:
+        skb->h.raw = (unsigned char*) hdr = (struct icmp6hdr *) skb_put(skb, len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2822: FILE: net/ipv6/ndisc.c:615:
+        skb->h.raw = (unsigned char*) hdr = (struct icmp6hdr *) skb_put(skb, len);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2822: FILE: net/ipv6/ndisc.c:615:
+        skb->h.raw = (unsigned char*) hdr = (struct icmp6hdr *) skb_put(skb, len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2850: FILE: net/ipv6/ndisc.c:1229:
+	dst = (struct dst_entry*)rt;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2853: FILE: net/ipv6/ndisc.c:1232:
+ ^I^IND_PRINTK1("redirect: no link_local addr for dev\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2853: FILE: net/ipv6/ndisc.c:1232:
+ ^I^IND_PRINTK1("redirect: no link_local addr for dev\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2853: FILE: net/ipv6/ndisc.c:1232:
+ ^I^IND_PRINTK1("redirect: no link_local addr for dev\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2854: FILE: net/ipv6/ndisc.c:1233:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2854: FILE: net/ipv6/ndisc.c:1233:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2854: FILE: net/ipv6/ndisc.c:1233:
+ ^I^Ireturn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2855: FILE: net/ipv6/ndisc.c:1234:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2855: FILE: net/ipv6/ndisc.c:1234:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2855: FILE: net/ipv6/ndisc.c:1234:
+ ^I}$

CHECK:SPACING: No space is necessary after a cast
#2895: FILE: net/ipv6/ndisc.c:1286:
+	skb->h.raw = (unsigned char*) icmph = (struct icmp6hdr *) skb_put(buff, len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2895: FILE: net/ipv6/ndisc.c:1286:
+	skb->h.raw = (unsigned char*) icmph = (struct icmp6hdr *) skb_put(buff, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2924: FILE: net/ipv6/raw.c:308:
+        if (!xfrm6_policy_check(sk, XFRM_POLICY_IN, skb)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2924: FILE: net/ipv6/raw.c:308:
+        if (!xfrm6_policy_check(sk, XFRM_POLICY_IN, skb)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2925: FILE: net/ipv6/raw.c:309:
+                kfree_skb(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2925: FILE: net/ipv6/raw.c:309:
+                kfree_skb(skb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2926: FILE: net/ipv6/raw.c:310:
+                return NET_RX_DROP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2926: FILE: net/ipv6/raw.c:310:
+                return NET_RX_DROP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2927: FILE: net/ipv6/raw.c:311:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2927: FILE: net/ipv6/raw.c:311:
+        }$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - struct rt6_info *ndisc_get_dummy_rt() should probably be struct rt6_info *ndisc_get_dummy_rt(void)
#2948: FILE: net/ipv6/route.c:133:
+struct rt6_info *ndisc_get_dummy_rt()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#3038: FILE: net/ipv6/udp.c:656:
+                goto discard;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3038: FILE: net/ipv6/udp.c:656:
+                goto discard;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391387.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 175 errors, 162 warnings, 153 checks, 2880 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391387.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
