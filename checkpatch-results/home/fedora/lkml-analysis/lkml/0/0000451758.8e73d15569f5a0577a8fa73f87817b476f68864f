WARNING:TYPO_SPELLING: 'differnet' may be misspelled - perhaps 'different'?
#26: 
defines macros for distinguishing the differnet types of locks.
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fl' may be better as '(fl)' to avoid precedence issues
#41: FILE: fs/locks.c:129:
+#define IS_POSIX(fl)	(fl->fl_flags & FL_POSIX)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fl' may be better as '(fl)' to avoid precedence issues
#42: FILE: fs/locks.c:130:
+#define IS_FLOCK(fl)	(fl->fl_flags & FL_FLOCK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fl' may be better as '(fl)' to avoid precedence issues
#43: FILE: fs/locks.c:131:
+#define IS_LEASE(fl)	(fl->fl_flags & FL_LEASE)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'caller_fl->fl_file == sys_fl->fl_file'
#64: FILE: fs/locks.c:588:
+	if (!IS_FLOCK(sys_fl) || (caller_fl->fl_file == sys_fl->fl_file))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fl"
#109: FILE: fs/locks.c:822:
+	for (fl = inode->i_flock; (fl != NULL) && IS_FLOCK(fl);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fl"
#145: FILE: fs/locks.c:1117:
+	} while (fl != NULL && IS_LEASE(fl));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fl == NULL'
#172: FILE: fs/locks.c:1184:
+	if ((fl == NULL) || !IS_LEASE(fl))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fl"
#172: FILE: fs/locks.c:1184:
+	if ((fl == NULL) || !IS_LEASE(fl))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#200: FILE: fs/locks.c:1679:
+		if ((IS_FLOCK(fl) || IS_LEASE(fl)) && (fl->fl_file == filp)) {
 		                                                      ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fl->fl_file == filp'
#200: FILE: fs/locks.c:1679:
+		if ((IS_FLOCK(fl) || IS_LEASE(fl)) && (fl->fl_file == filp)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451758.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 9 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451758.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
