ERROR:CODE_INDENT: code indent should use tabs where possible
#38: FILE: namei.c:2094:
+                                       EXT3_INDEX_EXTRA_TRANS_BLOCKS + 3);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#38: FILE: namei.c:2094:
+                                       EXT3_INDEX_EXTRA_TRANS_BLOCKS + 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: namei.c:2170:
+       retval = ext3_delete_entry(handle, old_dir, old_de, old_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: namei.c:2171:
+       if (retval == -ENOENT) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#48: FILE: namei.c:2171:
+       if (retval == -ENOENT) {
[...]
+               struct buffer_head * old_bh2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: namei.c:2172:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: namei.c:2173:
+                * old_de can be moved during ext3_add_entry.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: namei.c:2174:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: namei.c:2175:
+               struct buffer_head * old_bh2;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: namei.c:2176:
+               struct ext3_dir_entry_2 * old_de2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#54: FILE: namei.c:2177:
+               struct ext3_dir_entry_2 * old_de2;
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#54: FILE: namei.c:2177:
+               old_bh2 = ext3_find_entry (old_dentry, &old_de2);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: namei.c:2178:
+               if (old_bh2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: namei.c:2178:
+               if (old_bh2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#55: FILE: namei.c:2178:
+               if (old_bh2) {
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: namei.c:2179:
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: namei.c:2179:
+                       retval = ext3_delete_entry(handle, old_dir, old_de2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: namei.c:2180:
+                                                  old_bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: namei.c:2180:
+                                                  old_bh2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: namei.c:2181:
+                       brelse(old_bh2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: namei.c:2181:
+                       brelse(old_bh2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: namei.c:2182:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: namei.c:2182:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#59: FILE: namei.c:2182:
+               } else {
+                       ext3_warning(old_dir->i_sb, "ext3_rename",

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: namei.c:2183:
+                       ext3_warning(old_dir->i_sb, "ext3_rename",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: namei.c:2183:
+                       ext3_warning(old_dir->i_sb, "ext3_rename",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: namei.c:2184:
+                                    "Deleting old file not found (%lu), %d",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: namei.c:2184:
+                                    "Deleting old file not found (%lu), %d",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: namei.c:2185:
+                                    old_dir->i_ino, old_dir->i_nlink);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: namei.c:2185:
+                                    old_dir->i_ino, old_dir->i_nlink);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: namei.c:2186:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: namei.c:2186:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: namei.c:2188:
+       }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#65: FILE: namei.c:2188:
 
+       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: namei.c:2189:
+       if (retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#66: FILE: namei.c:2189:
+       if (retval) {
+               ext3_warning (old_dir->i_sb, "ext3_rename",

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: namei.c:2190:
+               ext3_warning (old_dir->i_sb, "ext3_rename",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: namei.c:2190:
+               ext3_warning (old_dir->i_sb, "ext3_rename",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: namei.c:2190:
+               ext3_warning (old_dir->i_sb, "ext3_rename",

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: namei.c:2191:
+                             "Deleting old file (%lu), %d, error=%d",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: namei.c:2191:
+                             "Deleting old file (%lu), %d, error=%d",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: namei.c:2192:
+                             old_dir->i_ino, old_dir->i_nlink, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: namei.c:2192:
+                             old_dir->i_ino, old_dir->i_nlink, retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: namei.c:2193:
+       }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 28 warnings, 1 checks, 39 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415949.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
