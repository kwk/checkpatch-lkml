WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#62: FILE: arch/i386/kernel/e820.c:716:
+		printk(" %s: %016Lx - %016Lx ", who,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#62: FILE: arch/i386/kernel/e820.c:716:
+		printk(" %s: %016Lx - %016Lx ", who,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: arch/i386/kernel/e820.c:717:
+		printk(" %s: %016Lx - %016Lx ", who,
+			e820.map[i].addr,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#66: FILE: arch/i386/kernel/e820.c:720:
+		case E820_RAM:	printk("(usable)\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#66: FILE: arch/i386/kernel/e820.c:720:
+		case E820_RAM:	printk("(usable)\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#69: FILE: arch/i386/kernel/e820.c:723:
+				printk("(reserved)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: arch/i386/kernel/e820.c:726:
+				printk("(ACPI data)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#75: FILE: arch/i386/kernel/e820.c:729:
+				printk("(ACPI NVS)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#77: FILE: arch/i386/kernel/e820.c:731:
+		default:	printk("type %lu\n", e820.map[i].type);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#77: FILE: arch/i386/kernel/e820.c:731:
+		default:	printk("type %lu\n", e820.map[i].type);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'limit_regions', this function's name, in a string
#88: FILE: arch/i386/kernel/e820.c:742:
+	print_memory_map("limit_regions start");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#100: FILE: arch/i386/kernel/e820.c:754:
+						(((current_addr-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#100: FILE: arch/i386/kernel/e820.c:754:
+						(((current_addr-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						                                 ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'limit_regions', this function's name, in a string
#125: FILE: arch/i386/kernel/e820.c:779:
+		print_memory_map("limit_regions endfor");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'limit_regions', this function's name, in a string
#128: FILE: arch/i386/kernel/e820.c:782:
+	print_memory_map("limit_regions endfunc");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: arch/i386/kernel/e820.c:792:
+e820_all_mapped(unsigned long s, unsigned long e, unsigned type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: arch/i386/kernel/e820.c:797:
+	int i;
+	for (i = 0; i < e820.nr_map; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: arch/i386/kernel/e820.c:799:
+		struct e820entry *ei = &e820.map[i];
+		if (type && ei->type != type)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: arch/i386/kernel/e820.c:810:
+		 * coverage */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: arch/i386/kernel/e820.c:845:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: arch/i386/kernel/e820.c:848:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#197: FILE: arch/i386/kernel/e820.c:851:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#206: FILE: arch/i386/kernel/e820.c:860:
+}
+early_param("memmap", parse_memmap);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#308: FILE: arch/i386/kernel/setup.c:162:
+int __initdata user_defined_memmap = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/asm-i386/e820.h:44:
+extern void limit_regions(unsigned long long size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/asm-i386/e820.h:45:
+extern void print_memory_map(char *who);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024356.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 14 warnings, 9 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024356.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
