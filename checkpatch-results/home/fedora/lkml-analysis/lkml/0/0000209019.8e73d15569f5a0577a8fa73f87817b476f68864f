WARNING:TYPO_SPELLING: 'formating' may be misspelled - perhaps 'formatting'?
#39: 
Fixed formating and white-spaces. The biggest change is, that I stripped
      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
http://clemens.endorphin.org/interdiff-sw.diff is an interdiff to last patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: crypto/cipher.c:44:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#75: FILE: crypto/cipher.c:48:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: crypto/cipher.c:54:
+ * Electronic Code Book (ECB) mode implementation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: crypto/cipher.c:62:
+static int ecb_process_gw(void *priv, int nsg, void **buf) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: crypto/cipher.c:65:
+	struct ecb_process_priv *ecb_priv = priv;
+	ecb_priv->crfn(crypto_tfm_ctx(ecb_priv->tfm), buf[0], buf[1]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: crypto/cipher.c:75:
+^Istruct ecb_process_priv priv = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: crypto/cipher.c:82:
+^Iscatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: crypto/cipher.c:82:
+	scatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, 
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#122: FILE: crypto/cipher.c:82:
+	scatterwalk_info_init(ecb_info+0, dst, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: crypto/cipher.c:84:
+^Iscatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: crypto/cipher.c:84:
+	scatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#124: FILE: crypto/cipher.c:84:
+	scatterwalk_info_init(ecb_info+1, src, bsize, (char[bsize]){}, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: crypto/cipher.c:86:
+	scatterwalk_info_endtag(ecb_info+2);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#163: FILE: crypto/cipher.c:95:
+	return scatterwalk_walk(ecb_process_gw, &priv, nbytes/bsize, ecb_info);
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: crypto/cipher.c:103:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_encrypt);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: crypto/cipher.c:111:
+	return ecb_template(tfm,dst,src,nbytes,tfm->__crt_alg->cra_cipher.cia_decrypt);
 	                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: crypto/cipher.c:124:
+static int cbc_process_gw(void *priv, int nsg, void **buf) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: crypto/cipher.c:147:
+		memcpy(cbc_priv->next_iv,src,bsize);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: crypto/cipher.c:147:
+		memcpy(cbc_priv->next_iv,src,bsize);
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: crypto/cipher.c:180:
+^Iscatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#289: FILE: crypto/cipher.c:180:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#289: FILE: crypto/cipher.c:180:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: crypto/cipher.c:182:
+^Iscatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: crypto/cipher.c:182:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, 
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#291: FILE: crypto/cipher.c:182:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: crypto/cipher.c:183:
+^I^I^I      SCATTERWALK_IO_INPUT); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#293: FILE: crypto/cipher.c:184:
+	scatterwalk_info_endtag(cbc_info+2);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#303: FILE: crypto/cipher.c:186:
+	return scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);
 	                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: crypto/cipher.c:197:
+^Ichar scratch1[bsize]; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: crypto/cipher.c:215:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, SCATTERWALK_IO_OUTPUT);
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#349: FILE: crypto/cipher.c:215:
+	scatterwalk_info_init(cbc_info+0, dst, bsize, (char[bsize]){}, SCATTERWALK_IO_OUTPUT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#350: FILE: crypto/cipher.c:216:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, SCATTERWALK_IO_INPUT);
 	                              ^

ERROR:SPACING: space required before the open brace '{'
#350: FILE: crypto/cipher.c:216:
+	scatterwalk_info_init(cbc_info+1, src, bsize, (char[bsize]){}, SCATTERWALK_IO_INPUT);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: crypto/cipher.c:217:
+	scatterwalk_info_endtag(cbc_info+2);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: crypto/cipher.c:219:
+	r = scatterwalk_walk(cbc_process_gw, &priv, nbytes/bsize, cbc_info);
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: crypto/cipher.c:221:
+^Iif (priv.curr_iv != iv) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: crypto/cipher.c:222:
+		memcpy(iv,priv.curr_iv,bsize);
 		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: crypto/cipher.c:222:
+		memcpy(iv,priv.curr_iv,bsize);
 		                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: crypto/cipher.c:308:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#431: FILE: crypto/cipher.c:308:
 	if (ops->cit_mode == CRYPTO_TFM_MODE_CBC) {
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: crypto/cipher.c:313:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: crypto/cipher.c:317:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#442: FILE: crypto/cipher.c:319:
+			printk(KERN_WARNING "%s: block size %u not supported\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: crypto/cipher.c:325:
+^I^I$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#506: FILE: crypto/scatterwalk.h:52:
+#define scatterwalk_info_endtag(winfo) (winfo)->sw.sg = NULL;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#508: FILE: crypto/scatterwalk.h:54:
+void scatterwalk_info_init(struct walk_info *winfo, struct scatterlist *sg, int stepsize, void *buf, int io);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: crypto/scatterwalk.c:40:
+static inline int scatterwalk_needscratch(struct scatter_walk *walk, int nbytes) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: crypto/scatterwalk.c:59:
+void scatterwalk_info_init(struct walk_info *winfo, struct scatterlist *sg, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#576: FILE: crypto/scatterwalk.c:68:
+#define scatterwalk_map(walk,out) \
                             ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#576: FILE: crypto/scatterwalk.c:68:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'walk' - possible side-effects?
#576: FILE: crypto/scatterwalk.c:68:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#576: FILE: crypto/scatterwalk.c:68:
+#define scatterwalk_map(walk,out) \
+	(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: crypto/scatterwalk.c:69:
+^I(walk)->data = crypto_kmap((walk)->page, (out)) + (walk)->offset; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: crypto/scatterwalk.c:72:
+static inline void scatterwalk_pagedone(struct scatter_walk *walk, int out,
 				 unsigned int more)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: crypto/scatterwalk.c:96:
+static inline void scatterwalk_copychunks(void *buf, struct scatter_walk *walk,
+			    size_t nbytes, int out)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: crypto/scatterwalk.c:106:
+^I^I^Iscatterwalk_pagedone(walk, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: crypto/scatterwalk.c:107:
+^I^I^I^I^I     out, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: crypto/scatterwalk.c:119:
+/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: crypto/scatterwalk.c:123:
+ * $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#643: FILE: crypto/scatterwalk.c:130:
+ * All this informations and the underlaying scatterlist is handed to
             ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#643: FILE: crypto/scatterwalk.c:130:
+ * All this informations and the underlaying scatterlist is handed to
                                  ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: crypto/scatterwalk.c:150:
+^I^I     struct walk_info *walk_infos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: crypto/scatterwalk.c:153:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#680: FILE: crypto/scatterwalk.c:167:
+	dispatch_list = (void *[nsl]){}; /* This alien thing is a C99 compound literal */
 	                      ^

ERROR:SPACING: space required before the open brace '{'
#680: FILE: crypto/scatterwalk.c:167:
+	dispatch_list = (void *[nsl]){}; /* This alien thing is a C99 compound literal */

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#684: FILE: crypto/scatterwalk.c:171:
+			*cbuf = scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#684: FILE: crypto/scatterwalk.c:171:
+			*cbuf = scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			                                        ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#684: FILE: crypto/scatterwalk.c:171:
+			*cbuf = scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			                                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#684: FILE: crypto/scatterwalk.c:171:
+			*cbuf = scatterwalk_needscratch(&csg->sw,csg->stepsize)?csg->sw.data:csg->buf;
 			                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#687: FILE: crypto/scatterwalk.c:174:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#687: FILE: crypto/scatterwalk.c:174:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#687: FILE: crypto/scatterwalk.c:174:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#687: FILE: crypto/scatterwalk.c:174:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,0);
 				                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: crypto/scatterwalk.c:181:
+^I^Ifor (csg = walk_infos, cbuf = dispatch_list; csg->sw.sg; csg++, cbuf++) {^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: crypto/scatterwalk.c:182:
+^I^I^Iif (csg->ioflag == 1) $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#696: FILE: crypto/scatterwalk.c:183:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#696: FILE: crypto/scatterwalk.c:183:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#696: FILE: crypto/scatterwalk.c:183:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#696: FILE: crypto/scatterwalk.c:183:
+				scatterwalk_copychunks(*cbuf,&csg->sw,csg->stepsize,1);
 				                                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209019.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 10 warnings, 20 checks, 637 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209019.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
