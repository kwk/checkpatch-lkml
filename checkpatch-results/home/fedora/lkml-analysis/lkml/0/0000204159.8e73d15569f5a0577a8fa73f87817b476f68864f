WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/serial/jsm/digi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/serial/jsm/digi.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/serial/jsm/digi.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#64: FILE: drivers/serial/jsm/digi.h:19:
+ * $Id: digi.h,v 1.7 2004/09/23 16:08:30 scottk Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#87: FILE: drivers/serial/jsm/digi.h:42:
+#define	TIOCMODG	('d'<<8) | 250		/* get modem ctrl state	*/
        	        	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: drivers/serial/jsm/digi.h:42:
+#define	TIOCMODG	('d'<<8) | 250		/* get modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#88: FILE: drivers/serial/jsm/digi.h:43:
+#define	TIOCMODS	('d'<<8) | 251		/* set modem ctrl state	*/
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#88: FILE: drivers/serial/jsm/digi.h:43:
+#define	TIOCMODS	('d'<<8) | 251		/* set modem ctrl state	*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: drivers/serial/jsm/digi.h:45:
+#ifndef TIOCM_LE $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#107: FILE: drivers/serial/jsm/digi.h:62:
+#define	TIOCMSET	('d'<<8) | 252		/* set modem ctrl state	*/
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#107: FILE: drivers/serial/jsm/digi.h:62:
+#define	TIOCMSET	('d'<<8) | 252		/* set modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#108: FILE: drivers/serial/jsm/digi.h:63:
+#define	TIOCMGET	('d'<<8) | 253		/* set modem ctrl state	*/
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#108: FILE: drivers/serial/jsm/digi.h:63:
+#define	TIOCMGET	('d'<<8) | 253		/* set modem ctrl state	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#112: FILE: drivers/serial/jsm/digi.h:67:
+#define	TIOCMBIC	('d'<<8) | 254		/* set modem ctrl state */
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#112: FILE: drivers/serial/jsm/digi.h:67:
+#define	TIOCMBIC	('d'<<8) | 254		/* set modem ctrl state */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: drivers/serial/jsm/digi.h:68:
+#define	TIOCMBIS	('d'<<8) | 255		/* set modem ctrl state */
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: drivers/serial/jsm/digi.h:68:
+#define	TIOCMBIS	('d'<<8) | 255		/* set modem ctrl state */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: drivers/serial/jsm/digi.h:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: drivers/serial/jsm/digi.h:73:
+#define	TIOCSDTR	('e'<<8) | 0		/* set DTR		*/
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#118: FILE: drivers/serial/jsm/digi.h:73:
+#define	TIOCSDTR	('e'<<8) | 0		/* set DTR		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: drivers/serial/jsm/digi.h:74:
+#define	TIOCCDTR	('e'<<8) | 1		/* clear DTR		*/
        	        	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#119: FILE: drivers/serial/jsm/digi.h:74:
+#define	TIOCCDTR	('e'<<8) | 1		/* clear DTR		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#125: FILE: drivers/serial/jsm/digi.h:80:
+#define DIGI_GETA	('e'<<8) | 94		/* Read params		*/
                  	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#125: FILE: drivers/serial/jsm/digi.h:80:
+#define DIGI_GETA	('e'<<8) | 94		/* Read params		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#127: FILE: drivers/serial/jsm/digi.h:82:
+#define DIGI_SETA	('e'<<8) | 95		/* Set params		*/
                  	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#127: FILE: drivers/serial/jsm/digi.h:82:
+#define DIGI_SETA	('e'<<8) | 95		/* Set params		*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#128: FILE: drivers/serial/jsm/digi.h:83:
+#define DIGI_SETAW	('e'<<8) | 96		/* Drain & set params	*/
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#128: FILE: drivers/serial/jsm/digi.h:83:
+#define DIGI_SETAW	('e'<<8) | 96		/* Drain & set params	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#129: FILE: drivers/serial/jsm/digi.h:84:
+#define DIGI_SETAF	('e'<<8) | 97		/* Drain, flush & set params */
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#129: FILE: drivers/serial/jsm/digi.h:84:
+#define DIGI_SETAF	('e'<<8) | 97		/* Drain, flush & set params */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: drivers/serial/jsm/digi.h:86:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host	*/
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#131: FILE: drivers/serial/jsm/digi.h:86:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#134: FILE: drivers/serial/jsm/digi.h:89:
+#define	DIGI_GETFLOW	('e'<<8) | 99		/* Get startc/stopc flow */
        	            	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#134: FILE: drivers/serial/jsm/digi.h:89:
+#define	DIGI_GETFLOW	('e'<<8) | 99		/* Get startc/stopc flow */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/serial/jsm/digi.h:90:
+^I^I^I^I^I^I/* control characters ^I */$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#136: FILE: drivers/serial/jsm/digi.h:91:
+#define	DIGI_SETFLOW	('e'<<8) | 100		/* Set startc/stopc flow */
        	            	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#136: FILE: drivers/serial/jsm/digi.h:91:
+#define	DIGI_SETFLOW	('e'<<8) | 100		/* Set startc/stopc flow */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#138: FILE: drivers/serial/jsm/digi.h:93:
+#define	DIGI_GETAFLOW	('e'<<8) | 101		/* Get Aux. startc/stopc */
        	             	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: drivers/serial/jsm/digi.h:93:
+#define	DIGI_GETAFLOW	('e'<<8) | 101		/* Get Aux. startc/stopc */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: drivers/serial/jsm/digi.h:94:
+^I^I^I^I^I^I/* flow control chars ^I */$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#140: FILE: drivers/serial/jsm/digi.h:95:
+#define	DIGI_SETAFLOW	('e'<<8) | 102		/* Set Aux. startc/stopc */
        	             	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#140: FILE: drivers/serial/jsm/digi.h:95:
+#define	DIGI_SETAFLOW	('e'<<8) | 102		/* Set Aux. startc/stopc */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#143: FILE: drivers/serial/jsm/digi.h:98:
+#define DIGI_GEDELAY	('d'<<8) | 246		/* Get edelay */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#143: FILE: drivers/serial/jsm/digi.h:98:
+#define DIGI_GEDELAY	('d'<<8) | 246		/* Get edelay */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#144: FILE: drivers/serial/jsm/digi.h:99:
+#define DIGI_SEDELAY	('d'<<8) | 247		/* Set edelay */
                     	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#144: FILE: drivers/serial/jsm/digi.h:99:
+#define DIGI_SEDELAY	('d'<<8) | 247		/* Set edelay */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#152: FILE: drivers/serial/jsm/digi.h:107:
+#define	F2200_GETA	('e'<<8) | 104		/* Get 2x36 flow cntl flags */
        	          	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#152: FILE: drivers/serial/jsm/digi.h:107:
+#define	F2200_GETA	('e'<<8) | 104		/* Get 2x36 flow cntl flags */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#153: FILE: drivers/serial/jsm/digi.h:108:
+#define	F2200_SETAW	('e'<<8) | 105		/* Set 2x36 flow cntl flags */
        	           	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: drivers/serial/jsm/digi.h:108:
+#define	F2200_SETAW	('e'<<8) | 105		/* Set 2x36 flow cntl flags */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: drivers/serial/jsm/digi.h:123:
+ * Values for digi_flags $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: drivers/serial/jsm/digi.h:145:
+#define	DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
        	          	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: drivers/serial/jsm/digi.h:145:
+#define	DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
        	          	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: drivers/serial/jsm/digi.h:145:
+#define	DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
        	          	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#190: FILE: drivers/serial/jsm/digi.h:145:
+#define	DIGI_COMXI	(DIGI_FAST|DIGI_COOK|DSRPACE|DCDPACE|DTRPACE)
        	          	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/serial/jsm/digi.h:194:
+#define RESULT_NOBDFND 1 /* A Digi product at that port is not config installed */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/serial/jsm/digi.h:195:
+#define RESULT_NODESCT 2 /* A memory descriptor was not obtainable */ $

WARNING:TYPO_SPELLING: 'Begining' may be misspelled - perhaps 'Beginning'?
#249: FILE: drivers/serial/jsm/digi.h:204:
+	unsigned int	shrink_buf_hseg;	/* '186 Begining of Dual-Port */
 	            	                	        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Begining' may be misspelled - perhaps 'Beginning'?
#251: FILE: drivers/serial/jsm/digi.h:206:
+	unsigned int	shrink_buf_lseg;	/* '186 Begining of freed memory */ 
 	            	                	        ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/serial/jsm/digi.h:206:
+^Iunsigned int^Ishrink_buf_lseg;^I/* '186 Begining of freed memory */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#253: FILE: drivers/serial/jsm/digi.h:208:
+	unsigned int	shrink_buf_mseg;	/* Linear address from start of
+						   dual-port were freed memory

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#254: FILE: drivers/serial/jsm/digi.h:209:
+						   begins, host viewpoint. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#257: FILE: drivers/serial/jsm/digi.h:212:
+	unsigned int	shrink_buf_bdparam;	/* Parameter for xxmemon and
+						   xxmemoff */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#257: FILE: drivers/serial/jsm/digi.h:212:
+						   xxmemoff */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#265: FILE: drivers/serial/jsm/digi.h:220:
+	unsigned char	shrink_buf_result;	/* Reason for call failing
+						   Zero is Good return */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#265: FILE: drivers/serial/jsm/digi.h:220:
+						   Zero is Good return */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#267: FILE: drivers/serial/jsm/digi.h:222:
+	unsigned char	shrink_buf_init;	/* Non-Zero if it caused an
+						   xxinit call. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: drivers/serial/jsm/digi.h:222:
+						   xxinit call. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/serial/jsm/digi.h:225:
+^Iunsigned char^Ishrink_buf_snports; ^I/* Number of sync  ports */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#272: FILE: drivers/serial/jsm/digi.h:227:
+	unsigned char	shrink_buf_type;	/* Board type	1 = PC/Xi,
+								2 = PC/Xm,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/serial/jsm/digi.h:228:
+^I^I^I^I^I^I^I^I3 = PC/Xe  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/serial/jsm/digi.h:229:
+^I^I^I^I^I^I^I^I4 = MC/Xi  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#275: FILE: drivers/serial/jsm/digi.h:230:
+								5 = COMX/i */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/serial/jsm/digi.h:232:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#289: FILE: drivers/serial/jsm/digi.h:244:
+#define	DIGI_GETDD	('d'<<8) | 248		/* get driver info	*/
        	          	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#289: FILE: drivers/serial/jsm/digi.h:244:
+#define	DIGI_GETDD	('d'<<8) | 248		/* get driver info	*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/serial/jsm/digi.h:245:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/serial/jsm/digi.h:245:
+ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#309: FILE: drivers/serial/jsm/digi.h:264:
+#define	DIGI_GETBD	('d'<<8) | 249		/* get board info	   */
        	          	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#309: FILE: drivers/serial/jsm/digi.h:264:
+#define	DIGI_GETBD	('d'<<8) | 249		/* get board info	   */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/serial/jsm/digi.h:265:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/serial/jsm/digi.h:265:
+ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#324: FILE: drivers/serial/jsm/digi.h:279:
+#define	DIGI_GETSTAT	('d'<<8) | 244		/* get board info	   */
        	            	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#324: FILE: drivers/serial/jsm/digi.h:279:
+#define	DIGI_GETSTAT	('d'<<8) | 244		/* get board info	   */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: drivers/serial/jsm/digi.h:288:
+^Iunsigned int^Iinfo_ch_cflag;^I^I/* Channel cflag   ^I   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: drivers/serial/jsm/digi.h:289:
+^Iunsigned int^Iinfo_ch_iflag;^I^I/* Channel iflag   ^I   */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: drivers/serial/jsm/digi.h:290:
+^Iunsigned int^Iinfo_ch_oflag;^I^I/* Channel oflag   ^I   */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/serial/jsm/digi.h:300:
+* This structure is used with the DIGI_FEPCMD ioctl to $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#345: FILE: drivers/serial/jsm/digi.h:300:
+/*
+* This structure is used with the DIGI_FEPCMD ioctl to 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#356: FILE: drivers/serial/jsm/digi.h:311:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <tIn>
#359: FILE: drivers/serial/jsm/digi.h:314:
+	unsigned long tIn;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tOut>
#360: FILE: drivers/serial/jsm/digi.h:315:
+	unsigned long tOut;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#367: FILE: drivers/serial/jsm/digi.h:322:
+struct digi_getcounter
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#378: FILE: drivers/serial/jsm/digi.h:333:
+/*
+*  info_sleep_stat defines

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#388: FILE: drivers/serial/jsm/digi.h:343:
+#define	DIGI_GETCH	('d'<<8) | 245		/* get board info	*/
        	          	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#388: FILE: drivers/serial/jsm/digi.h:343:
+#define	DIGI_GETCH	('d'<<8) | 245		/* get board info	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: drivers/serial/jsm/digi.h:388:
+#define DIGI_SPOLL		('d'<<8) | 254  /* change poller rate   */
                   		    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#433: FILE: drivers/serial/jsm/digi.h:388:
+#define DIGI_SPOLL		('d'<<8) | 254  /* change poller rate   */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#438: FILE: drivers/serial/jsm/digi.h:393:
+#define DIGI_REALPORT_GETBUFFERS ('e'<<8 ) | 108
                                      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#438: FILE: drivers/serial/jsm/digi.h:393:
+#define DIGI_REALPORT_GETBUFFERS ('e'<<8 ) | 108

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#438: FILE: drivers/serial/jsm/digi.h:393:
+#define DIGI_REALPORT_GETBUFFERS ('e'<<8 ) | 108

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#439: FILE: drivers/serial/jsm/digi.h:394:
+#define DIGI_REALPORT_SENDIMMEDIATE ('e'<<8 ) | 109
                                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#439: FILE: drivers/serial/jsm/digi.h:394:
+#define DIGI_REALPORT_SENDIMMEDIATE ('e'<<8 ) | 109

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#439: FILE: drivers/serial/jsm/digi.h:394:
+#define DIGI_REALPORT_SENDIMMEDIATE ('e'<<8 ) | 109

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#440: FILE: drivers/serial/jsm/digi.h:395:
+#define DIGI_REALPORT_GETCOUNTERS ('e'<<8 ) | 110
                                       ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#440: FILE: drivers/serial/jsm/digi.h:395:
+#define DIGI_REALPORT_GETCOUNTERS ('e'<<8 ) | 110

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#440: FILE: drivers/serial/jsm/digi.h:395:
+#define DIGI_REALPORT_GETCOUNTERS ('e'<<8 ) | 110

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#441: FILE: drivers/serial/jsm/digi.h:396:
+#define DIGI_REALPORT_GETEVENTS ('e'<<8 ) | 111
                                     ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: drivers/serial/jsm/digi.h:396:
+#define DIGI_REALPORT_GETEVENTS ('e'<<8 ) | 111

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#441: FILE: drivers/serial/jsm/digi.h:396:
+#define DIGI_REALPORT_GETEVENTS ('e'<<8 ) | 111

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/serial/jsm/digi.h:399:
+#define EV_OPS^I^I0x0002^I^I//!<Output paused by reqular sw flowctrl  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#466: FILE: drivers/serial/jsm/dpacompat.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#481: FILE: drivers/serial/jsm/dpacompat.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#482: FILE: drivers/serial/jsm/dpacompat.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: drivers/serial/jsm/dpacompat.h:22:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: drivers/serial/jsm/dpacompat.h:23:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/serial/jsm/dpacompat.h:24:
+ * This structure holds data needed for the intelligent <--> nonintelligent $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/serial/jsm/dpacompat.h:27:
+ struct ni_info {$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#519: FILE: drivers/serial/jsm/dpacompat.h:54:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host */
                 	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#519: FILE: drivers/serial/jsm/dpacompat.h:54:
+#define DIGI_KME	('e'<<8) | 98		/* Read/Write Host */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#573: FILE: drivers/serial/jsm/dpacompat.h:108:
+#define DIGI_GETDD	('d'<<8) | 248	/* get driver info	*/
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#573: FILE: drivers/serial/jsm/dpacompat.h:108:
+#define DIGI_GETDD	('d'<<8) | 248	/* get driver info	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#574: FILE: drivers/serial/jsm/dpacompat.h:109:
+#define DIGI_GETBD	('d'<<8) | 249	/* get board info	*/
                   	    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#574: FILE: drivers/serial/jsm/dpacompat.h:109:
+#define DIGI_GETBD	('d'<<8) | 249	/* get board info	*/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#575: FILE: drivers/serial/jsm/dpacompat.h:110:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#575: FILE: drivers/serial/jsm/dpacompat.h:110:
+#define DIGI_GET_NI_INFO ('d'<<8) | 250		/* nonintelligent state snfo */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#578: FILE: drivers/serial/jsm/dpacompat.h:113:
+#define DIGI_TIMERIRQ ('d'<<8) | 251	/* Enable/disable RS_TIMER use */
                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#578: FILE: drivers/serial/jsm/dpacompat.h:113:
+#define DIGI_TIMERIRQ ('d'<<8) | 251	/* Enable/disable RS_TIMER use */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#579: FILE: drivers/serial/jsm/dpacompat.h:114:
+#define DIGI_LOOPBACK ('d'<<8) | 252	/* Enable/disable UART internal loopback */
                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#579: FILE: drivers/serial/jsm/dpacompat.h:114:
+#define DIGI_LOOPBACK ('d'<<8) | 252	/* Enable/disable UART internal loopback */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#584: FILE: drivers/serial/jsm/jsm_driver.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#599: FILE: drivers/serial/jsm/jsm_driver.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#600: FILE: drivers/serial/jsm/jsm_driver.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: drivers/serial/jsm/jsm_driver.h:37:
+#include "digi.h"^I^I/* Digi specific ioctl header */  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/serial/jsm/jsm_driver.h:40:
+
+

WARNING:TYPO_SPELLING: 'statments' may be misspelled - perhaps 'statements'?
#625: FILE: drivers/serial/jsm/jsm_driver.h:42:
+ * Driver identification, error and debugging statments
                                               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#627: FILE: drivers/serial/jsm/jsm_driver.h:44:
+ * In theory, you can change all occurances of "digi" in the next
                                  ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/serial/jsm/jsm_driver.h:59:
+#define^IDRVSTR^I^I"jsm"^I^I^I/* Driver name string $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#643: FILE: drivers/serial/jsm/jsm_driver.h:60:
+						 * displayed by APR	 */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#644: FILE: drivers/serial/jsm/jsm_driver.h:61:
+#define	APR(args)	do {printk(DRVSTR": "); printk args;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#644: FILE: drivers/serial/jsm/jsm_driver.h:61:
+#define	APR(args)	do {printk(DRVSTR": "); printk args;} while (0)
        	         	                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#644: FILE: drivers/serial/jsm/jsm_driver.h:61:
+#define	APR(args)	do {printk(DRVSTR": "); printk args;} while (0)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#678: FILE: drivers/serial/jsm/jsm_driver.h:95:
+#define PRINTF_TO_CONSOLE(args) { printk(DRVSTR": "); printk args; }

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#678: FILE: drivers/serial/jsm/jsm_driver.h:95:
+#define PRINTF_TO_CONSOLE(args) { printk(DRVSTR": "); printk args; }

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#685: FILE: drivers/serial/jsm/jsm_driver.h:102:
+#define DPR_INIT(ARGS)		if (DBG_INIT) TRC(ARGS)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#686: FILE: drivers/serial/jsm/jsm_driver.h:103:
+#define DPR_BASIC(ARGS)		if (DBG_BASIC) TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#687: FILE: drivers/serial/jsm/jsm_driver.h:104:
+#define DPR_CORE(ARGS)		if (DBG_CORE) TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#688: FILE: drivers/serial/jsm/jsm_driver.h:105:
+#define DPR_OPEN(ARGS)		if (DBG_OPEN)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#689: FILE: drivers/serial/jsm/jsm_driver.h:106:
+#define DPR_CLOSE(ARGS)		if (DBG_CLOSE)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#690: FILE: drivers/serial/jsm/jsm_driver.h:107:
+#define DPR_READ(ARGS)		if (DBG_READ)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#691: FILE: drivers/serial/jsm/jsm_driver.h:108:
+#define DPR_WRITE(ARGS)		if (DBG_WRITE) TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#692: FILE: drivers/serial/jsm/jsm_driver.h:109:
+#define DPR_IOCTL(ARGS)		if (DBG_IOCTL) TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#693: FILE: drivers/serial/jsm/jsm_driver.h:110:
+#define DPR_PROC(ARGS)		if (DBG_PROC)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#694: FILE: drivers/serial/jsm/jsm_driver.h:111:
+#define DPR_PARAM(ARGS)		if (DBG_PARAM)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#695: FILE: drivers/serial/jsm/jsm_driver.h:112:
+#define DPR_PSCAN(ARGS)		if (DBG_PSCAN)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#696: FILE: drivers/serial/jsm/jsm_driver.h:113:
+#define DPR_EVENT(ARGS)		if (DBG_EVENT)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#697: FILE: drivers/serial/jsm/jsm_driver.h:114:
+#define DPR_DRAIN(ARGS)		if (DBG_DRAIN)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#698: FILE: drivers/serial/jsm/jsm_driver.h:115:
+#define DPR_CARR(ARGS)		if (DBG_CARR)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#699: FILE: drivers/serial/jsm/jsm_driver.h:116:
+#define DPR_MGMT(ARGS)		if (DBG_MGMT)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#700: FILE: drivers/serial/jsm/jsm_driver.h:117:
+#define DPR_INTR(ARGS)		if (DBG_INTR)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#701: FILE: drivers/serial/jsm/jsm_driver.h:118:
+#define DPR_MSIGS(ARGS)		if (DBG_MSIGS)  TRC(ARGS)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#702: FILE: drivers/serial/jsm/jsm_driver.h:119:
+#define DPR(ARGS)		if (jsm_debug) TRC(ARGS)

WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#734: FILE: drivers/serial/jsm/jsm_driver.h:151:
+ * as the default in tty_io.c with the same settings overriden as in serial.c
                                                      ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#768: FILE: drivers/serial/jsm/jsm_driver.h:185:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#782: FILE: drivers/serial/jsm/jsm_driver.h:199:
+	void (*tasklet) (unsigned long data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#783: FILE: drivers/serial/jsm/jsm_driver.h:200:
+	void (*tasklet) (unsigned long data);
+	JSM_IRQRETURN_TYPE (*intr) (int irq, void *voidbrd, struct pt_regs *regs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: drivers/serial/jsm/jsm_driver.h:200:
+	JSM_IRQRETURN_TYPE (*intr) (int irq, void *voidbrd, struct pt_regs *regs);

WARNING:SPACING: Unnecessary space before function pointer arguments
#784: FILE: drivers/serial/jsm/jsm_driver.h:201:
+	void (*uart_init) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#785: FILE: drivers/serial/jsm/jsm_driver.h:202:
+	void (*uart_off) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#786: FILE: drivers/serial/jsm/jsm_driver.h:203:
+	int  (*drain) (struct tty_struct *tty, uint seconds);

WARNING:SPACING: Unnecessary space before function pointer arguments
#787: FILE: drivers/serial/jsm/jsm_driver.h:204:
+	void (*param) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#788: FILE: drivers/serial/jsm/jsm_driver.h:205:
+	void (*assert_modem_signals) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#789: FILE: drivers/serial/jsm/jsm_driver.h:206:
+	void (*flush_uart_write) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#790: FILE: drivers/serial/jsm/jsm_driver.h:207:
+	void (*flush_uart_read) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#791: FILE: drivers/serial/jsm/jsm_driver.h:208:
+	void (*disable_receiver) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#792: FILE: drivers/serial/jsm/jsm_driver.h:209:
+	void (*enable_receiver) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#793: FILE: drivers/serial/jsm/jsm_driver.h:210:
+	void (*send_break) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#794: FILE: drivers/serial/jsm/jsm_driver.h:211:
+	void (*send_start_character) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#795: FILE: drivers/serial/jsm/jsm_driver.h:212:
+	void (*send_stop_character) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#796: FILE: drivers/serial/jsm/jsm_driver.h:213:
+	void (*copy_data_from_queue_to_uart) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#797: FILE: drivers/serial/jsm/jsm_driver.h:214:
+	uint (*get_uart_bytes_left) (struct channel_t *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#798: FILE: drivers/serial/jsm/jsm_driver.h:215:
+	void (*send_immediate_char) (struct channel_t *ch, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#798: FILE: drivers/serial/jsm/jsm_driver.h:215:
+	void (*send_immediate_char) (struct channel_t *ch, unsigned char);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#801: FILE: drivers/serial/jsm/jsm_driver.h:218:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#806: FILE: drivers/serial/jsm/jsm_driver.h:223:
+struct board_t
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#824: FILE: drivers/serial/jsm/jsm_driver.h:241:
+	spinlock_t	bd_intr_lock;	/* Used to protect the poller tasklet and

CHECK:CAMELCASE: Avoid CamelCase: <SerialDriver>
#850: FILE: drivers/serial/jsm/jsm_driver.h:267:
+	struct tty_driver	SerialDriver;

CHECK:CAMELCASE: Avoid CamelCase: <SerialName>
#851: FILE: drivers/serial/jsm/jsm_driver.h:268:
+	char		SerialName[200];

CHECK:CAMELCASE: Avoid CamelCase: <PrintDriver>
#852: FILE: drivers/serial/jsm/jsm_driver.h:269:
+	struct tty_driver	PrintDriver;

CHECK:CAMELCASE: Avoid CamelCase: <PrintName>
#853: FILE: drivers/serial/jsm/jsm_driver.h:270:
+	char		PrintName[200];

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Major_Serial_Registered>
#855: FILE: drivers/serial/jsm/jsm_driver.h:272:
+	uint		jsm_Major_Serial_Registered;

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Major_TransparentPrint_Registered>
#856: FILE: drivers/serial/jsm/jsm_driver.h:273:
+	uint		jsm_Major_TransparentPrint_Registered;

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Serial_Major>
#858: FILE: drivers/serial/jsm/jsm_driver.h:275:
+	uint		jsm_Serial_Major;

CHECK:CAMELCASE: Avoid CamelCase: <jsm_TransparentPrint_Major>
#859: FILE: drivers/serial/jsm/jsm_driver.h:276:
+	uint		jsm_TransparentPrint_Major;

CHECK:CAMELCASE: Avoid CamelCase: <TtyRefCnt>
#861: FILE: drivers/serial/jsm/jsm_driver.h:278:
+	uint		TtyRefCnt;

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#863: FILE: drivers/serial/jsm/jsm_driver.h:280:
+	char		*flipbuf;	/* Our flip buffer, alloced if board is found */
 	    		         	                    ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#877: FILE: drivers/serial/jsm/jsm_driver.h:294:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: drivers/serial/jsm/jsm_driver.h:295:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#895: FILE: drivers/serial/jsm/jsm_driver.h:312:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: drivers/serial/jsm/jsm_driver.h:314:
+ * Structure for terminal or printer unit. $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#911: FILE: drivers/serial/jsm/jsm_driver.h:328:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: drivers/serial/jsm/jsm_driver.h:329:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#940: FILE: drivers/serial/jsm/jsm_driver.h:357:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#949: FILE: drivers/serial/jsm/jsm_driver.h:366:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: drivers/serial/jsm/jsm_driver.h:367:
+/************************************************************************ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1009: FILE: drivers/serial/jsm/jsm_driver.h:426:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1032: FILE: drivers/serial/jsm/jsm_driver.h:449:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1040: FILE: drivers/serial/jsm/jsm_driver.h:457:
+extern void	*jsm_driver_kzmalloc(size_t size, int priority);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1041: FILE: drivers/serial/jsm/jsm_driver.h:458:
+extern char	*jsm_ioctl_name(int cmd);

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Major>
#1050: FILE: drivers/serial/jsm/jsm_driver.h:467:
+extern  uint		jsm_Major;		/* Our driver/mgmt major	*/

CHECK:CAMELCASE: Avoid CamelCase: <jsm_NumBoards>
#1055: FILE: drivers/serial/jsm/jsm_driver.h:472:
+extern  uint		jsm_NumBoards;		/* Total number of boards	*/

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Board>
#1056: FILE: drivers/serial/jsm/jsm_driver.h:473:
+extern  struct board_t	*jsm_Board[MAXBOARDS];	/* Array of board structs	*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: drivers/serial/jsm/jsm_driver.h:478:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1072: FILE: drivers/serial/jsm/jsm_kcompat.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1087: FILE: drivers/serial/jsm/jsm_kcompat.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1088: FILE: drivers/serial/jsm/jsm_kcompat.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/serial/jsm/jsm_kcompat.h:37:
+# define JSM_MOD_DEC_USE_COUNT^I^I$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1111: FILE: drivers/serial/jsm/jsm_kcompat.h:40:
+# define JSM_IRQ_RETURN(x)		return x;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1111: FILE: drivers/serial/jsm/jsm_kcompat.h:40:
+# define JSM_IRQ_RETURN(x)		return x;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1111: FILE: drivers/serial/jsm/jsm_kcompat.h:40:
+# define JSM_IRQ_RETURN(x)		return x;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1115: FILE: drivers/serial/jsm/jsm_kcompat.h:44:
+# define JSM_GET_TTY_COUNT(x)		(x->count)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1122: FILE: drivers/serial/jsm/jsm_mgmt.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1137: FILE: drivers/serial/jsm/jsm_mgmt.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1138: FILE: drivers/serial/jsm/jsm_mgmt.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1158: FILE: drivers/serial/jsm/jsm_neo.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1173: FILE: drivers/serial/jsm/jsm_neo.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1174: FILE: drivers/serial/jsm/jsm_neo.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1186: FILE: drivers/serial/jsm/jsm_neo.h:29:
+/************************************************************************ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: drivers/serial/jsm/jsm_neo.h:34:
+ *^IW = read write^I^IR = read only^I^I^I^I* $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1196: FILE: drivers/serial/jsm/jsm_neo.h:39:
+	volatile uchar txrx;		/* WR  RHR/THR - Holding Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1197: FILE: drivers/serial/jsm/jsm_neo.h:40:
+	volatile uchar ier;		/* WR  IER - Interrupt Enable Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1198: FILE: drivers/serial/jsm/jsm_neo.h:41:
+	volatile uchar isr_fcr;		/* WR  ISR/FCR - Interrupt Status Reg/Fifo Control Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1199: FILE: drivers/serial/jsm/jsm_neo.h:42:
+	volatile uchar lcr;		/* WR  LCR - Line Control Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1200: FILE: drivers/serial/jsm/jsm_neo.h:43:
+	volatile uchar mcr;		/* WR  MCR - Modem Control Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1201: FILE: drivers/serial/jsm/jsm_neo.h:44:
+	volatile uchar lsr;		/* WR  LSR - Line Status Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1202: FILE: drivers/serial/jsm/jsm_neo.h:45:
+	volatile uchar msr;		/* WR  MSR - Modem Status Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1203: FILE: drivers/serial/jsm/jsm_neo.h:46:
+	volatile uchar spr;		/* WR  SPR - Scratch Pad Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1204: FILE: drivers/serial/jsm/jsm_neo.h:47:
+	volatile uchar fctr;		/* WR  FCTR - Feature Control Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1205: FILE: drivers/serial/jsm/jsm_neo.h:48:
+	volatile uchar efr;		/* WR  EFR - Enhanced Function Reg */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: drivers/serial/jsm/jsm_neo.h:49:
+^Ivolatile uchar tfifo;^I^I/* WR  TXCNT/TXTRG - Transmit FIFO Reg */^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1206: FILE: drivers/serial/jsm/jsm_neo.h:49:
+	volatile uchar tfifo;		/* WR  TXCNT/TXTRG - Transmit FIFO Reg */	

WARNING:TYPO_SPELLING: 'Recieve' may be misspelled - perhaps 'Receive'?
#1207: FILE: drivers/serial/jsm/jsm_neo.h:50:
+	volatile uchar rfifo;		/* WR  RXCNT/RXTRG - Recieve  FIFO Reg */
 	                     		                     ^^^^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1207: FILE: drivers/serial/jsm/jsm_neo.h:50:
+	volatile uchar rfifo;		/* WR  RXCNT/RXTRG - Recieve  FIFO Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1208: FILE: drivers/serial/jsm/jsm_neo.h:51:
+	volatile uchar xoffchar1;	/* WR  XOFF 1 - XOff Character 1 Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1209: FILE: drivers/serial/jsm/jsm_neo.h:52:
+	volatile uchar xoffchar2;	/* WR  XOFF 2 - XOff Character 2 Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1210: FILE: drivers/serial/jsm/jsm_neo.h:53:
+	volatile uchar xonchar1;	/* WR  XON 1 - Xon Character 1 Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1211: FILE: drivers/serial/jsm/jsm_neo.h:54:
+	volatile uchar xonchar2;	/* WR  XON 2 - XOn Character 2 Reg */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1213: FILE: drivers/serial/jsm/jsm_neo.h:56:
+	volatile uchar reserved1[0x2ff - 0x200]; /* U   Reserved by Exar */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1214: FILE: drivers/serial/jsm/jsm_neo.h:57:
+	volatile uchar txrxburst[64];	/* RW  64 bytes of RX/TX FIFO Data */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1215: FILE: drivers/serial/jsm/jsm_neo.h:58:
+	volatile uchar reserved2[0x37f - 0x340]; /* U   Reserved by Exar */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1216: FILE: drivers/serial/jsm/jsm_neo.h:59:
+	volatile uchar rxburst_with_errors[64];	/* R  64 bytes of RX FIFO Data + LSR */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1222: FILE: drivers/serial/jsm/jsm_neo.h:65:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: drivers/serial/jsm/jsm_neo.h:100:
+#define UART_17158_RX_FIFOSIZE^I^I64  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: drivers/serial/jsm/jsm_neo.h:101:
+#define UART_17158_TX_FIFOSIZE^I^I64  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1305: FILE: drivers/serial/jsm/jsm_pci.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1320: FILE: drivers/serial/jsm/jsm_pci.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1321: FILE: drivers/serial/jsm/jsm_pci.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1326: FILE: drivers/serial/jsm/jsm_pci.h:22:
+/* $Id: jsm_pci.h,v 1.4 2004/01/06 16:44:49 scottk Exp $ */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1345: FILE: drivers/serial/jsm/jsm_pci.h:41:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1356: FILE: drivers/serial/jsm/jsm_pci.h:52:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1368: FILE: drivers/serial/jsm/jsm_tty.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1383: FILE: drivers/serial/jsm/jsm_tty.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1384: FILE: drivers/serial/jsm/jsm_tty.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct board_t *' should also have an identifier name
#1397: FILE: drivers/serial/jsm/jsm_tty.h:30:
+int	jsm_tty_init(struct board_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct board_t *' should also have an identifier name
#1398: FILE: drivers/serial/jsm/jsm_tty.h:31:
+int	jsm_uart_port_init(struct board_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct board_t *' should also have an identifier name
#1399: FILE: drivers/serial/jsm/jsm_tty.h:32:
+int	jsm_remove_uart_port(struct board_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct board_t *' should also have an identifier name
#1401: FILE: drivers/serial/jsm/jsm_tty.h:34:
+void	jsm_tty_uninit(struct board_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1408: FILE: drivers/serial/jsm/jsm_tty.h:41:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1416: FILE: drivers/serial/jsm/jsm_types.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1431: FILE: drivers/serial/jsm/jsm_types.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1432: FILE: drivers/serial/jsm/jsm_types.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1449: FILE: drivers/serial/jsm/jsm_types.h:34:
+typedef unsigned char uchar;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204159.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 106 errors, 88 warnings, 78 checks, 1374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204159.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
