ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#49: FILE: include/linux/kobject.h:36:
+	const char		* k_name;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: include/linux/kobject.h:49:
+static inline const char * kobject_name(const struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: include/linux/kobject.h:49:
+static inline const char * kobject_name(const struct kobject * kobj)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/kobject.h:60:
+extern int kobject_rename(struct kobject *, const char *new_name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#67: FILE: include/linux/kobject.h:60:
+extern int kobject_rename(struct kobject *, const char *new_name);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: lib/kobject.c:283:
+int kobject_rename(struct kobject * kobj, const char *new_name)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#102: FILE: lib/kobject_uevent.c:252:
+	argv [1] = (char *)name; /* won't be changed but 'const' has to go */

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 1 warnings, 1 checks, 48 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
