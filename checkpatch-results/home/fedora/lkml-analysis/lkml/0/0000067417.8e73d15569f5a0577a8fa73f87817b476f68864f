WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: include/asm-sparc64/dma-mapping.h:9:
+ * so include it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#108: FILE: include/asm-sparc64/dma-mapping.h:17:
+	BUG_ON(dev->bus != &pci_bus_type);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: include/asm-sparc64/dma-mapping.h:25:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: include/asm-sparc64/dma-mapping.h:34:
+	BUG_ON(dev->bus != &pci_bus_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/asm-sparc64/dma-mapping.h:41:
+dma_free_coherent(struct device *dev, size_t size, void *cpu_addr,
+		    dma_addr_t dma_handle)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#134: FILE: include/asm-sparc64/dma-mapping.h:43:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#143: FILE: include/asm-sparc64/dma-mapping.h:52:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#152: FILE: include/asm-sparc64/dma-mapping.h:61:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: include/asm-sparc64/dma-mapping.h:71:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: include/asm-sparc64/dma-mapping.h:80:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: include/asm-sparc64/dma-mapping.h:89:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: include/asm-sparc64/dma-mapping.h:98:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: include/asm-sparc64/dma-mapping.h:107:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: include/asm-sparc64/dma-mapping.h:117:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: include/asm-sparc64/dma-mapping.h:127:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: include/asm-sparc64/dma-mapping.h:136:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#248: FILE: include/asm-sparc64/pci.h:47:
+extern void *__pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle, gfp_t gfp);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/asm-sparc64/pci.h:47:
+extern void *__pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle, gfp_t gfp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: include/asm-sparc64/pci.h:48:
+#define pci_alloc_consistent(DEV,SZ,HANDLE) \
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: include/asm-sparc64/pci.h:48:
+#define pci_alloc_consistent(DEV,SZ,HANDLE) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: include/asm-sparc64/pci.h:49:
+	__pci_alloc_consistent(DEV,SZ,HANDLE,GFP_ATOMIC)
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: include/asm-sparc64/pci.h:49:
+	__pci_alloc_consistent(DEV,SZ,HANDLE,GFP_ATOMIC)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: include/asm-sparc64/pci.h:49:
+	__pci_alloc_consistent(DEV,SZ,HANDLE,GFP_ATOMIC)
 	                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 2 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
