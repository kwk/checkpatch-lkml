WARNING:TYPO_SPELLING: 'synchonization' may be misspelled - perhaps 'synchronization'?
#30: 
Mainly it's an update to the synchonization: there were a few small 
                             ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -u 2.5/drivers/usb/storage/freecom.c build-2.5/drivers/usb/storage/freecom.c

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: drivers/usb/storage/scsiglue.c:124:
+	BUG_ON(us->srb != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "us->srb"
#141: FILE: drivers/usb/storage/scsiglue.c:124:
+	BUG_ON(us->srb != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: drivers/usb/storage/scsiglue.c:158:
+	BUG_ON(us->srb != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "us->srb"
#151: FILE: drivers/usb/storage/scsiglue.c:158:
+	BUG_ON(us->srb != NULL);

WARNING:TYPO_SPELLING: 'comming' may be misspelled - perhaps 'coming'?
#186: FILE: drivers/usb/storage/scsiglue.c:209:
+	 * and the scsi midlayer prevents new commands from comming
 	                                                    ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: drivers/usb/storage/scsiglue.c:212:
+	BUG_ON(us->srb != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "us->srb"
#189: FILE: drivers/usb/storage/scsiglue.c:212:
+	BUG_ON(us->srb != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: drivers/usb/storage/scsiglue.c:213:
+	BUG_ON(us->sm_state != US_STATE_IDLE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!us->pusb_dev"
#191: FILE: drivers/usb/storage/scsiglue.c:214:
+	if (us->pusb_dev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#262: FILE: drivers/usb/storage/scsiglue.c:233:
+	printk(KERN_INFO "usb-storage: bus_reset() requested but not implemented\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#262: FILE: drivers/usb/storage/scsiglue.c:233:
+	printk(KERN_INFO "usb-storage: bus_reset() requested but not implemented\n" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#273: FILE: drivers/usb/storage/scsiglue.c:240:
+	printk(KERN_INFO "usb-storage: host_reset() requested but not implemented\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#273: FILE: drivers/usb/storage/scsiglue.c:240:
+	printk(KERN_INFO "usb-storage: host_reset() requested but not implemented\n" );

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "us->pusb_dev"
#298: FILE: drivers/usb/storage/scsiglue.c:301:
+	SPRINTF("     Attached: %s\n", (us->pusb_dev != NULL) ? "Yes" : "No");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#397: FILE: drivers/usb/storage/transport.c:453:
+	if (us->abort_cmd) {
 		return 0;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/usb/storage/transport.c:620:
+	US_DEBUGP("usb_stor_transfer(): request for %d/%d bytes\n",
+			transfer_amount, srb->request_bufflen);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/usb/storage/transport.c:853:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#461: FILE: drivers/usb/storage/transport.c:853:
 
+  

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/usb/storage/transport.c:853:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/usb/storage/transport.c:865:
+^I * The caller must guarantee that the urb that is $

WARNING:TABSTOP: Statements should start on a tabstop
#505: FILE: drivers/usb/storage/transport.c:877:
+	 else

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: drivers/usb/storage/transport.c:901:
+		DECLARE_WAITQUEUE(wait, current);
+		current->state = TASK_UNINTERRUPTIBLE;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#677: FILE: drivers/usb/storage/transport.c:1372:
+static void usb_stor_event_handler(void* to__)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#679: FILE: drivers/usb/storage/transport.c:1374:
+	struct us_timeout *to = (struct us_timeout *) to__;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: drivers/usb/storage/transport.h:152:
+extern void usb_stor_abort_transport(struct us_data*, int call_scsidone);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct us_data*' should also have an identifier name
#742: FILE: drivers/usb/storage/transport.h:152:
+extern void usb_stor_abort_transport(struct us_data*, int call_scsidone);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required before the open parenthesis '('
#775: FILE: drivers/usb/storage/usb.c:340:
+		if(down_interruptible(&us->sema)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#776: FILE: drivers/usb/storage/usb.c:341:
+			printk(KERN_ERR "Received unexpected signal in usb_stor_control_thread().\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!us->pusb_dev"
#812: FILE: drivers/usb/storage/usb.c:425:
+		if (us->pusb_dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ss"
#903: FILE: drivers/usb/storage/usb.c:690:
+	while (ss != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ss->pusb_dev"
#904: FILE: drivers/usb/storage/usb.c:691:
+		if (ss->pusb_dev == NULL && GUID_EQUAL(guid, ss->guid))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#915: FILE: drivers/usb/storage/usb.c:706:
+		BUG_ON(ss->pusb_dev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ss->pusb_dev"
#915: FILE: drivers/usb/storage/usb.c:706:
+		BUG_ON(ss->pusb_dev != NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ss->dev_semaphore
#929: FILE: drivers/usb/storage/usb.c:755:
+		init_MUTEX_LOCKED(&(ss->dev_semaphore));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: drivers/usb/storage/usb.c:1064:
+^I$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1021: FILE: drivers/usb/storage/usb.h:40:
  * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1022: FILE: drivers/usb/storage/usb.h:41:
  * 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'asynchroneously' may be misspelled - perhaps 'asynchronously'?
#1030: FILE: drivers/usb/storage/usb.h:49:
+ * - device aborts happen asynchroneously, make abort_cmd a seperate variable
                           ^^^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#1030: FILE: drivers/usb/storage/usb.h:49:
+ * - device aborts happen asynchroneously, make abort_cmd a seperate variable
                                                             ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: drivers/usb/storage/usb.h:57:
+ * - add an explicit waitqueue for the device reset handler, reuse of the $

WARNING:TYPO_SPELLING: 'asynchroneously' may be misspelled - perhaps 'asynchronously'?
#1058: FILE: drivers/usb/storage/usb.h:136:
+ * queues new requests asynchroneously.
                        ^^^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1059: FILE: drivers/usb/storage/usb.h:137:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sem' - possible side-effects?
#1123: FILE: drivers/usb/storage/usb.h:255:
+#define BUG_NOT_DOWN(sem) \
+	do { \
+		if (!down_trylock(sem)) { \
+			up(sem); \
+			BUG(); \
+		} \
+	} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1127: FILE: drivers/usb/storage/usb.h:259:
+			BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#1129: FILE: drivers/usb/storage/usb.h:261:
+	} while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 21 warnings, 15 checks, 997 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
