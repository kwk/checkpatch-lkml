WARNING:TYPO_SPELLING: 'compilant' may be misspelled - perhaps 'compliant'?
#113: FILE: Documentation/IPMI.txt:458:
+Discovering the IPMI compilant BMC on the SMBus can cause devices
                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'adrress' may be misspelled - perhaps 'address'?
#118: FILE: Documentation/IPMI.txt:463:
+parameter. The default adrress range will not be used when a smb_addr
                        ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#154: FILE: drivers/char/ipmi/ipmi_smb_intf.c:8:
+ *         Todd Davis <todd.c.davis@intel.com>
+  *

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#155: FILE: drivers/char/ipmi/ipmi_smb_intf.c:9:
+  *
+ * Copyright 2003 Intel Corporation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: drivers/char/ipmi/ipmi_smb_intf.c:29:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#176: FILE: drivers/char/ipmi/ipmi_smb_intf.c:30:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: drivers/char/ipmi/ipmi_smb_intf.c:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#216: FILE: drivers/char/ipmi/ipmi_smb_intf.c:70:
+/* a structure to store all information we need
+   for our thread */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: drivers/char/ipmi/ipmi_smb_intf.c:70:
+   for our thread */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#217: FILE: drivers/char/ipmi/ipmi_smb_intf.c:71:
+typedef struct kthread_struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#218: FILE: drivers/char/ipmi/ipmi_smb_intf.c:72:
+typedef struct kthread_struct
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/char/ipmi/ipmi_smb_intf.c:73:
+        /* Linux task structure of thread */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/char/ipmi/ipmi_smb_intf.c:74:
+        struct task_struct *thread;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/char/ipmi/ipmi_smb_intf.c:74:
+        struct task_struct *thread;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: drivers/char/ipmi/ipmi_smb_intf.c:77:
+        struct semaphore startstop_sem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/ipmi/ipmi_smb_intf.c:77:
+        struct semaphore startstop_sem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/char/ipmi/ipmi_smb_intf.c:79:
+        /* queue thread is waiting on. Gets initialized by$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/char/ipmi/ipmi_smb_intf.c:80:
+           init_kthread, can be used by thread itself.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: drivers/char/ipmi/ipmi_smb_intf.c:80:
+        /* queue thread is waiting on. Gets initialized by
+           init_kthread, can be used by thread itself.

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/char/ipmi/ipmi_smb_intf.c:81:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/char/ipmi/ipmi_smb_intf.c:82:
+        wait_queue_head_t queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/char/ipmi/ipmi_smb_intf.c:82:
+        wait_queue_head_t queue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/char/ipmi/ipmi_smb_intf.c:83:
+        /* flag to tell thread whether to die or not.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/char/ipmi/ipmi_smb_intf.c:84:
+           When the thread receives a signal, it must check$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#230: FILE: drivers/char/ipmi/ipmi_smb_intf.c:84:
+        /* flag to tell thread whether to die or not.
+           When the thread receives a signal, it must check

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/char/ipmi/ipmi_smb_intf.c:85:
+           the value of terminate and call exit_kthread and terminate$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/char/ipmi/ipmi_smb_intf.c:86:
+           if set.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/char/ipmi/ipmi_smb_intf.c:87:
+        */$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'smb' - possible side-effects?
#268: FILE: drivers/char/ipmi/ipmi_smb_intf.c:122:
+#define SMB_IDLE(smb)	 ((smb)->smb_state == SMB_NORMAL \
+			  && (smb)->curr_msg == NULL \
+			  && ! atomic_read(&(smb)->req_events))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#269: FILE: drivers/char/ipmi/ipmi_smb_intf.c:123:
+#define SMB_IDLE(smb)	 ((smb)->smb_state == SMB_NORMAL \
+			  && (smb)->curr_msg == NULL \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!curr_msg"
#269: FILE: drivers/char/ipmi/ipmi_smb_intf.c:123:
+			  && (smb)->curr_msg == NULL \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#270: FILE: drivers/char/ipmi/ipmi_smb_intf.c:124:
+			  && (smb)->curr_msg == NULL \
+			  && ! atomic_read(&(smb)->req_events))

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#270: FILE: drivers/char/ipmi/ipmi_smb_intf.c:124:
+			  && ! atomic_read(&(smb)->req_events))
 			     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#275: FILE: drivers/char/ipmi/ipmi_smb_intf.c:129:
+struct smb_info
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#278: FILE: drivers/char/ipmi/ipmi_smb_intf.c:132:
+	spinlock_t          msg_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#286: FILE: drivers/char/ipmi/ipmi_smb_intf.c:140:
+	/* Flags from the last GET_MSG_FLAGS command, used when an ATTN
+	   is set to hold the flags until we are done handling everything

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#287: FILE: drivers/char/ipmi/ipmi_smb_intf.c:141:
+	   from the flags. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#294: FILE: drivers/char/ipmi/ipmi_smb_intf.c:148:
+	/* If set to true, this will request events the next time the
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: drivers/char/ipmi/ipmi_smb_intf.c:148:
+	   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#299: FILE: drivers/char/ipmi/ipmi_smb_intf.c:153:
+	/* If true, run the state machine to completion on every send
+	   call.  Generally used after a panic or shutdown to make

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#300: FILE: drivers/char/ipmi/ipmi_smb_intf.c:154:
+	   sure stuff goes out. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#315: FILE: drivers/char/ipmi/ipmi_smb_intf.c:169:
+static int initialized = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smb_info->curr_msg"
#322: FILE: drivers/char/ipmi/ipmi_smb_intf.c:176:
+		if (smb_info->curr_msg == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#326: FILE: drivers/char/ipmi/ipmi_smb_intf.c:180:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'deliver_recv_msg', this function's name, in a string
#327: FILE: drivers/char/ipmi/ipmi_smb_intf.c:181:
+			       "malformed message in deliver_recv_msg:"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: drivers/char/ipmi/ipmi_smb_intf.c:182:
+			       "malformed message in deliver_recv_msg:"
+			       " rsp_size = %d\n", msg->rsp_size);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'reponse' may be misspelled - perhaps 'response'?
#340: FILE: drivers/char/ipmi/ipmi_smb_intf.c:194:
+	/* Make it a reponse */
 	             ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#357: FILE: drivers/char/ipmi/ipmi_smb_intf.c:211:
+	 * be an overrun situation otherwise. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:212:
+	while ((resp_len = i2c_smbus_read_block_data (client,
+						      SMB_IPMI_RESPONSE,
+						      values)) < 0)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:212:
+	while ((resp_len = i2c_smbus_read_block_data (client,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#362: FILE: drivers/char/ipmi/ipmi_smb_intf.c:216:
+		if ((retries += 1) >= SMB_MSG_RETRIES) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#363: FILE: drivers/char/ipmi/ipmi_smb_intf.c:217:
+			printk(KERN_ERR

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#368: FILE: drivers/char/ipmi/ipmi_smb_intf.c:222:
+		} else if (retries >= SMB_MSG_RETRIES/2 && signal_pending(current)) {
 		                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#371: FILE: drivers/char/ipmi/ipmi_smb_intf.c:225:
+		} else if (debug & (SMB_DEBUG_MSG|SMB_DEBUG_TIMING)) {
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#372: FILE: drivers/char/ipmi/ipmi_smb_intf.c:226:
+			printk(KERN_WARNING

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: drivers/char/ipmi/ipmi_smb_intf.c:234:
+		struct timeval t;
+		do_gettimeofday(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#381: FILE: drivers/char/ipmi/ipmi_smb_intf.c:235:
+		printk(KERN_INFO "**Response %02x %02x %02x: %ld.%6.6ld\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: drivers/char/ipmi/ipmi_smb_intf.c:241:
+		int i;
+		printk(KERN_INFO "ipmi response:");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#387: FILE: drivers/char/ipmi/ipmi_smb_intf.c:241:
+		printk(KERN_INFO "ipmi response:");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#388: FILE: drivers/char/ipmi/ipmi_smb_intf.c:242:
+		for (i = 0; i < resp_len; i ++) {
 		                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#388: FILE: drivers/char/ipmi/ipmi_smb_intf.c:242:
+		for (i = 0; i < resp_len; i ++) {
+			printk (" %02x", (unsigned char) (values[i]));
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#389: FILE: drivers/char/ipmi/ipmi_smb_intf.c:243:
+			printk (" %02x", (unsigned char) (values[i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: drivers/char/ipmi/ipmi_smb_intf.c:243:
+			printk (" %02x", (unsigned char) (values[i]));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#389: FILE: drivers/char/ipmi/ipmi_smb_intf.c:243:
+			printk (" %02x", (unsigned char) (values[i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#391: FILE: drivers/char/ipmi/ipmi_smb_intf.c:245:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/char/ipmi/ipmi_smb_intf.c:245:
+		printk ("\n");

WARNING:SPACING: space prohibited before semicolon
#410: FILE: drivers/char/ipmi/ipmi_smb_intf.c:264:
+		int i ;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#412: FILE: drivers/char/ipmi/ipmi_smb_intf.c:266:
+		printk(KERN_INFO "ipmi request:");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#413: FILE: drivers/char/ipmi/ipmi_smb_intf.c:267:
+		for (i = 0; i < length; i ++) {
 		                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#413: FILE: drivers/char/ipmi/ipmi_smb_intf.c:267:
+		for (i = 0; i < length; i ++) {
+			printk (" %02x", (unsigned char) (values [i]));
+		}

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/char/ipmi/ipmi_smb_intf.c:268:
+			printk (" %02x", (unsigned char) (values [i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: drivers/char/ipmi/ipmi_smb_intf.c:268:
+			printk (" %02x", (unsigned char) (values [i]));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#414: FILE: drivers/char/ipmi/ipmi_smb_intf.c:268:
+			printk (" %02x", (unsigned char) (values [i]));

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: drivers/char/ipmi/ipmi_smb_intf.c:268:
+			printk (" %02x", (unsigned char) (values [i]));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: drivers/char/ipmi/ipmi_smb_intf.c:270:
+		printk ("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: drivers/char/ipmi/ipmi_smb_intf.c:270:
+		printk ("\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: drivers/char/ipmi/ipmi_smb_intf.c:275:
+		struct timeval t;
+		do_gettimeofday(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#422: FILE: drivers/char/ipmi/ipmi_smb_intf.c:276:
+		printk(KERN_INFO "**Request %02x %02x: %ld.%6.6ld\n",

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#423: FILE: drivers/char/ipmi/ipmi_smb_intf.c:277:
+		       values [0],values [1], t.tv_sec, t.tv_usec);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#423: FILE: drivers/char/ipmi/ipmi_smb_intf.c:277:
+		       values [0],values [1], t.tv_sec, t.tv_usec);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/char/ipmi/ipmi_smb_intf.c:277:
+		       values [0],values [1], t.tv_sec, t.tv_usec);
 		                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#426: FILE: drivers/char/ipmi/ipmi_smb_intf.c:280:
+	while ((ret = i2c_smbus_write_block_data (client,
+						  SMB_IPMI_REQUEST,
+						  length, values)) < 0)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: drivers/char/ipmi/ipmi_smb_intf.c:280:
+	while ((ret = i2c_smbus_write_block_data (client,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#430: FILE: drivers/char/ipmi/ipmi_smb_intf.c:284:
+		if ((retries += 1) >= SMB_MSG_RETRIES) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#431: FILE: drivers/char/ipmi/ipmi_smb_intf.c:285:
+			printk(KERN_ERR

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#435: FILE: drivers/char/ipmi/ipmi_smb_intf.c:289:
+		} else if (retries >= SMB_MSG_RETRIES/2 && signal_pending(current)) {
 		                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#438: FILE: drivers/char/ipmi/ipmi_smb_intf.c:292:
+		} else if (debug & (SMB_DEBUG_MSG|SMB_DEBUG_TIMING)) {
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#439: FILE: drivers/char/ipmi/ipmi_smb_intf.c:293:
+			printk(KERN_WARNING

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/char/ipmi/ipmi_smb_intf.c:302:
+                                      u8 length,  u8 *values)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/char/ipmi/ipmi_smb_intf.c:302:
+                                      u8 length,  u8 *values)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#461: FILE: drivers/char/ipmi/ipmi_smb_intf.c:315:
+	spin_lock(&(smb_info->msg_lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#464: FILE: drivers/char/ipmi/ipmi_smb_intf.c:318:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {
 	    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#464: FILE: drivers/char/ipmi/ipmi_smb_intf.c:318:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#464: FILE: drivers/char/ipmi/ipmi_smb_intf.c:318:
+	if (! list_empty(&(smb_info->hp_xmit_msgs))) {
[...]
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {
[...]

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#466: FILE: drivers/char/ipmi/ipmi_smb_intf.c:320:
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#466: FILE: drivers/char/ipmi/ipmi_smb_intf.c:320:
+	} else if (! list_empty(&(smb_info->xmit_msgs))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#471: FILE: drivers/char/ipmi/ipmi_smb_intf.c:325:
+		spin_unlock(&(smb_info->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#479: FILE: drivers/char/ipmi/ipmi_smb_intf.c:333:
+	spin_unlock(&(smb_info->msg_lock));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#480: FILE: drivers/char/ipmi/ipmi_smb_intf.c:334:
+	rv = smb_smbus_write_block_data(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#484: FILE: drivers/char/ipmi/ipmi_smb_intf.c:338:
+	if (rv) {
+		return_hosed_msg(smb_info);
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#495: FILE: drivers/char/ipmi/ipmi_smb_intf.c:349:
+	/* If we are enabling interrupts, we have to tell the
+	   IPMI device to use them. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#495: FILE: drivers/char/ipmi/ipmi_smb_intf.c:349:
+	   IPMI device to use them. */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#499: FILE: drivers/char/ipmi/ipmi_smb_intf.c:353:
+	if (smb_smbus_write_block_data(smb_info, 2, msg) == 0) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#515: FILE: drivers/char/ipmi/ipmi_smb_intf.c:369:
+	if (smb_smbus_write_block_data(smb_info, 3, msg) == 0) {
[...]
+	} else {
[...]

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#541: FILE: drivers/char/ipmi/ipmi_smb_intf.c:395:
+		if (smb_smbus_write_block_data(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#564: FILE: drivers/char/ipmi/ipmi_smb_intf.c:418:
+		if (smb_smbus_write_block_data(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#585: FILE: drivers/char/ipmi/ipmi_smb_intf.c:439:
+	if (smb_info->smb_debug & SMB_DEBUG_STATE) {
+		printk(KERN_INFO "DONE 1: state = %d.\n", smb_info->smb_state);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#586: FILE: drivers/char/ipmi/ipmi_smb_intf.c:440:
+		printk(KERN_INFO "DONE 1: state = %d.\n", smb_info->smb_state);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#594: FILE: drivers/char/ipmi/ipmi_smb_intf.c:448:
+		smb_info->curr_msg->rsp_size
+			= smb_smbus_read_block_data(

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#594: FILE: drivers/char/ipmi/ipmi_smb_intf.c:448:
+			= smb_smbus_read_block_data(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#617: FILE: drivers/char/ipmi/ipmi_smb_intf.c:471:
+			/* Hmm, no flags.  That's technically illegal, but
+			   don't use uninitialized data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#617: FILE: drivers/char/ipmi/ipmi_smb_intf.c:471:
+			   don't use uninitialized data. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#635: FILE: drivers/char/ipmi/ipmi_smb_intf.c:489:
+			printk(KERN_WARNING

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#649: FILE: drivers/char/ipmi/ipmi_smb_intf.c:503:
+		smb_info->curr_msg->rsp_size
+			= smb_smbus_read_block_data(smb_info,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#670: FILE: drivers/char/ipmi/ipmi_smb_intf.c:524:
+		smb_info->curr_msg->rsp_size
+			= smb_smbus_read_block_data(smb_info,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#695: FILE: drivers/char/ipmi/ipmi_smb_intf.c:549:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#697: FILE: drivers/char/ipmi/ipmi_smb_intf.c:551:
+			       "ipmi_smb: Could not enable interrupts"
+			       ", failed get, using polled mode.\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#703: FILE: drivers/char/ipmi/ipmi_smb_intf.c:557:
+			if (smb_smbus_write_block_data(

CHECK:BRACES: braces {} should be used on all arms of this statement
#703: FILE: drivers/char/ipmi/ipmi_smb_intf.c:557:
+			if (smb_smbus_write_block_data(
[...]
+			} else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#704: FILE: drivers/char/ipmi/ipmi_smb_intf.c:558:
+			    smb_info,3, msg) == 0) {
 			            ^

CHECK:BRACES: Unbalanced braces around else statement
#706: FILE: drivers/char/ipmi/ipmi_smb_intf.c:560:
+			} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#719: FILE: drivers/char/ipmi/ipmi_smb_intf.c:573:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#721: FILE: drivers/char/ipmi/ipmi_smb_intf.c:575:
+			       "ipmi_smb: Could not enable interrupts"
+			       ", failed set, using polled mode.\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#727: FILE: drivers/char/ipmi/ipmi_smb_intf.c:581:
+	if (smb_info->smb_debug & SMB_DEBUG_STATE) {
+		printk(KERN_INFO "DONE 2: state = %d.\n", smb_info->smb_state);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#728: FILE: drivers/char/ipmi/ipmi_smb_intf.c:582:
+		printk(KERN_INFO "DONE 2: state = %d.\n", smb_info->smb_state);

WARNING:LINE_SPACING: Missing a blank line after declarations
#739: FILE: drivers/char/ipmi/ipmi_smb_intf.c:593:
+	s32 rv;
+	if (smb_info->smb_debug & SMB_DEBUG_STATE) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#740: FILE: drivers/char/ipmi/ipmi_smb_intf.c:594:
+		printk(KERN_INFO "smb_event_handler: state = %d.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smb_event_handler', this function's name, in a string
#740: FILE: drivers/char/ipmi/ipmi_smb_intf.c:594:
+		printk(KERN_INFO "smb_event_handler: state = %d.\n",

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#744: FILE: drivers/char/ipmi/ipmi_smb_intf.c:598:
+		if (smb_info->curr_msg != NULL)
+		{

CHECK:BRACES: braces {} should be used on all arms of this statement
#744: FILE: drivers/char/ipmi/ipmi_smb_intf.c:598:
+		if (smb_info->curr_msg != NULL)
[...]
+		} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "smb_info->curr_msg"
#744: FILE: drivers/char/ipmi/ipmi_smb_intf.c:598:
+		if (smb_info->curr_msg != NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#749: FILE: drivers/char/ipmi/ipmi_smb_intf.c:603:
+			 * next message. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#756: FILE: drivers/char/ipmi/ipmi_smb_intf.c:610:
+	if (smb_info->smb_state == SMB_NORMAL &&
+	    smb_info->curr_msg == NULL &&
+	     atomic_read(&smb_info->req_events))
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smb_info->curr_msg"
#757: FILE: drivers/char/ipmi/ipmi_smb_intf.c:611:
+	    smb_info->curr_msg == NULL &&

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#761: FILE: drivers/char/ipmi/ipmi_smb_intf.c:615:
+		/* We are idle and the upper layer requested that I fetch
+		   events, so do so. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#761: FILE: drivers/char/ipmi/ipmi_smb_intf.c:615:
+		   events, so do so. */

ERROR:SPACING: space required before the open parenthesis '('
#769: FILE: drivers/char/ipmi/ipmi_smb_intf.c:623:
+		if(rv == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#769: FILE: drivers/char/ipmi/ipmi_smb_intf.c:623:
+		if(rv == 0) {
+			smb_info->smb_state = SMB_GETTING_FLAGS;
+		}

CHECK:SPACING: No space is necessary after a cast
#780: FILE: drivers/char/ipmi/ipmi_smb_intf.c:634:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#785: FILE: drivers/char/ipmi/ipmi_smb_intf.c:639:
+		/* If we are running to completion, then throw it in
+		   the list and run transactions until everything is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#786: FILE: drivers/char/ipmi/ipmi_smb_intf.c:640:
+		   clear.  Priority doesn't matter here. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#787: FILE: drivers/char/ipmi/ipmi_smb_intf.c:641:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#787: FILE: drivers/char/ipmi/ipmi_smb_intf.c:641:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#790: FILE: drivers/char/ipmi/ipmi_smb_intf.c:644:
+		while  (! SMB_IDLE(smb_info)) {
 		        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#790: FILE: drivers/char/ipmi/ipmi_smb_intf.c:644:
+		while  (! SMB_IDLE(smb_info)) {
+			smb_event_handler(smb_info);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/char/ipmi/ipmi_smb_intf.c:652:
+		struct timeval     t;
+		do_gettimeofday(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#799: FILE: drivers/char/ipmi/ipmi_smb_intf.c:653:
+		printk(KERN_INFO

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#804: FILE: drivers/char/ipmi/ipmi_smb_intf.c:658:
+	spin_lock(&(smb_info->msg_lock));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#805: FILE: drivers/char/ipmi/ipmi_smb_intf.c:659:
+	if (priority > 0) {
[...]
+	} else {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#806: FILE: drivers/char/ipmi/ipmi_smb_intf.c:660:
+		list_add_tail(&(msg->link), &(smb_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#806: FILE: drivers/char/ipmi/ipmi_smb_intf.c:660:
+		list_add_tail(&(msg->link), &(smb_info->hp_xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->link
#808: FILE: drivers/char/ipmi/ipmi_smb_intf.c:662:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#808: FILE: drivers/char/ipmi/ipmi_smb_intf.c:662:
+		list_add_tail(&(msg->link), &(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#810: FILE: drivers/char/ipmi/ipmi_smb_intf.c:664:
+	spin_unlock(&(smb_info->msg_lock));

CHECK:SPACING: No space is necessary after a cast
#819: FILE: drivers/char/ipmi/ipmi_smb_intf.c:673:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

CHECK:SPACING: No space is necessary after a cast
#830: FILE: drivers/char/ipmi/ipmi_smb_intf.c:684:
+	struct smb_info *smb_info = (struct smb_info *) send_info;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#834: FILE: drivers/char/ipmi/ipmi_smb_intf.c:688:
+	/* Note that if this does not compile, there are some I2C
+	   changes that you need to handle this properly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#834: FILE: drivers/char/ipmi/ipmi_smb_intf.c:688:
+	   changes that you need to handle this properly. */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#838: FILE: drivers/char/ipmi/ipmi_smb_intf.c:692:
+		while  (! SMB_IDLE(smb_info)) {
 		        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#838: FILE: drivers/char/ipmi/ipmi_smb_intf.c:692:
+		while  (! SMB_IDLE(smb_info)) {
+			smb_event_handler(smb_info);
+		}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#846: FILE: drivers/char/ipmi/ipmi_smb_intf.c:700:
+static struct ipmi_smi_handlers handlers =
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: drivers/char/ipmi/ipmi_smb_intf.c:712:
+        /* lock the kernel. A new kernel thread starts without$

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: drivers/char/ipmi/ipmi_smb_intf.c:713:
+           the big kernel lock, regardless of the lock state$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#859: FILE: drivers/char/ipmi/ipmi_smb_intf.c:713:
+        /* lock the kernel. A new kernel thread starts without
+           the big kernel lock, regardless of the lock state

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: drivers/char/ipmi/ipmi_smb_intf.c:714:
+           of the creator (the lock level is *not* inheritated)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: drivers/char/ipmi/ipmi_smb_intf.c:715:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#862: FILE: drivers/char/ipmi/ipmi_smb_intf.c:716:
+        lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: drivers/char/ipmi/ipmi_smb_intf.c:716:
+        lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: drivers/char/ipmi/ipmi_smb_intf.c:718:
+        /* fill in thread structure */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#865: FILE: drivers/char/ipmi/ipmi_smb_intf.c:719:
+        kthread->thread = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: drivers/char/ipmi/ipmi_smb_intf.c:719:
+        kthread->thread = current;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: drivers/char/ipmi/ipmi_smb_intf.c:721:
+        /* set signal mask to what we want to respond */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: drivers/char/ipmi/ipmi_smb_intf.c:722:
+        siginitsetinv(&current->blocked,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/char/ipmi/ipmi_smb_intf.c:722:
+        siginitsetinv(&current->blocked,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#869: FILE: drivers/char/ipmi/ipmi_smb_intf.c:723:
+		      sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGTERM));
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#869: FILE: drivers/char/ipmi/ipmi_smb_intf.c:723:
+		      sigmask(SIGKILL)|sigmask(SIGINT)|sigmask(SIGTERM));
 		                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: drivers/char/ipmi/ipmi_smb_intf.c:725:
+        /* initialise wait queue */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: drivers/char/ipmi/ipmi_smb_intf.c:726:
+        init_waitqueue_head(&kthread->queue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/char/ipmi/ipmi_smb_intf.c:726:
+        init_waitqueue_head(&kthread->queue);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: drivers/char/ipmi/ipmi_smb_intf.c:728:
+        /* initialise termination flag */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: drivers/char/ipmi/ipmi_smb_intf.c:729:
+        kthread->terminate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: drivers/char/ipmi/ipmi_smb_intf.c:729:
+        kthread->terminate = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: drivers/char/ipmi/ipmi_smb_intf.c:731:
+        /* set name of this process (max 15 chars + 0 !) */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: drivers/char/ipmi/ipmi_smb_intf.c:732:
+        sprintf(current->comm, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: drivers/char/ipmi/ipmi_smb_intf.c:732:
+        sprintf(current->comm, name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: drivers/char/ipmi/ipmi_smb_intf.c:734:
+        /* let others run */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: drivers/char/ipmi/ipmi_smb_intf.c:735:
+        unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: drivers/char/ipmi/ipmi_smb_intf.c:735:
+        unlock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: drivers/char/ipmi/ipmi_smb_intf.c:737:
+        /* tell the creator that we are ready and let him continue */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: drivers/char/ipmi/ipmi_smb_intf.c:738:
+        up(&kthread->startstop_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: drivers/char/ipmi/ipmi_smb_intf.c:738:
+        up(&kthread->startstop_sem);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#886: FILE: drivers/char/ipmi/ipmi_smb_intf.c:740:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: drivers/char/ipmi/ipmi_smb_intf.c:745:
+        /* we are terminating */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: drivers/char/ipmi/ipmi_smb_intf.c:748:
+        lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/char/ipmi/ipmi_smb_intf.c:748:
+        lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: drivers/char/ipmi/ipmi_smb_intf.c:749:
+        kthread->thread = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/char/ipmi/ipmi_smb_intf.c:749:
+        kthread->thread = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#896: FILE: drivers/char/ipmi/ipmi_smb_intf.c:750:
+        mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/char/ipmi/ipmi_smb_intf.c:750:
+        mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#896: FILE: drivers/char/ipmi/ipmi_smb_intf.c:750:
+        mb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: drivers/char/ipmi/ipmi_smb_intf.c:752:
+        /* notify the stop_kthread() routine that we are terminating. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#903: FILE: drivers/char/ipmi/ipmi_smb_intf.c:757:
+	/* there is no race here between execution of the "killer" and
+	   real termination of the thread (race window between up and

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: drivers/char/ipmi/ipmi_smb_intf.c:765:
+ ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#911: FILE: drivers/char/ipmi/ipmi_smb_intf.c:765:
+ ^I*/$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#913: FILE: drivers/char/ipmi/ipmi_smb_intf.c:767:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#916: FILE: drivers/char/ipmi/ipmi_smb_intf.c:770:
+ * the lm_sensors' i2c-core module */

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/char/ipmi/ipmi_smb_intf.c:774:
+        kthread_t *kthread = &smb_info->smb_thread;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/char/ipmi/ipmi_smb_intf.c:774:
+        kthread_t *kthread = &smb_info->smb_thread;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: drivers/char/ipmi/ipmi_smb_intf.c:776:
+        init_kthread(kthread, "IPMI SMBus thread");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/char/ipmi/ipmi_smb_intf.c:776:
+        init_kthread(kthread, "IPMI SMBus thread");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: drivers/char/ipmi/ipmi_smb_intf.c:778:
+        /* an endless loop in which we are doing our work */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: drivers/char/ipmi/ipmi_smb_intf.c:779:
+        for(;;)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: drivers/char/ipmi/ipmi_smb_intf.c:779:
+        for(;;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#925: FILE: drivers/char/ipmi/ipmi_smb_intf.c:779:
+        for(;;)
+        {

ERROR:SPACING: space required before the open parenthesis '('
#925: FILE: drivers/char/ipmi/ipmi_smb_intf.c:779:
+        for(;;)

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: drivers/char/ipmi/ipmi_smb_intf.c:780:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: drivers/char/ipmi/ipmi_smb_intf.c:780:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: drivers/char/ipmi/ipmi_smb_intf.c:781:
+ ^I^Ismb_event_handler(smb_info);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#927: FILE: drivers/char/ipmi/ipmi_smb_intf.c:781:
+ ^I^Ismb_event_handler(smb_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: drivers/char/ipmi/ipmi_smb_intf.c:781:
+ ^I^Ismb_event_handler(smb_info);$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#928: FILE: drivers/char/ipmi/ipmi_smb_intf.c:782:
+		while  (! SMB_IDLE(smb_info)) {
 		        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#928: FILE: drivers/char/ipmi/ipmi_smb_intf.c:782:
+		while  (! SMB_IDLE(smb_info)) {
+			smb_event_handler(smb_info);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: drivers/char/ipmi/ipmi_smb_intf.c:786:
+                interruptible_sleep_on(&kthread->queue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/char/ipmi/ipmi_smb_intf.c:786:
+                interruptible_sleep_on(&kthread->queue);$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#933: FILE: drivers/char/ipmi/ipmi_smb_intf.c:787:
+		if (! send_next_msg(smb_info)) {
 		    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#933: FILE: drivers/char/ipmi/ipmi_smb_intf.c:787:
+		if (! send_next_msg(smb_info)) {
+			interruptible_sleep_on(&kthread->queue);
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: drivers/char/ipmi/ipmi_smb_intf.c:791:
+                /* We need to do a memory barrier here to be sure that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/char/ipmi/ipmi_smb_intf.c:792:
+                   the flags are visible on all CPUs.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#938: FILE: drivers/char/ipmi/ipmi_smb_intf.c:792:
+                /* We need to do a memory barrier here to be sure that
+                   the flags are visible on all CPUs.

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: drivers/char/ipmi/ipmi_smb_intf.c:793:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: drivers/char/ipmi/ipmi_smb_intf.c:794:
+                 mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: drivers/char/ipmi/ipmi_smb_intf.c:794:
+                 mb();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: drivers/char/ipmi/ipmi_smb_intf.c:796:
+                /* here we are back from sleep, either due to the timeout$

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: drivers/char/ipmi/ipmi_smb_intf.c:797:
+                   (one second), or because we caught a signal.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#943: FILE: drivers/char/ipmi/ipmi_smb_intf.c:797:
+                /* here we are back from sleep, either due to the timeout
+                   (one second), or because we caught a signal.

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: drivers/char/ipmi/ipmi_smb_intf.c:798:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: drivers/char/ipmi/ipmi_smb_intf.c:799:
+                if (kthread->terminate)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/char/ipmi/ipmi_smb_intf.c:799:
+                if (kthread->terminate)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#945: FILE: drivers/char/ipmi/ipmi_smb_intf.c:799:
+                if (kthread->terminate)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: drivers/char/ipmi/ipmi_smb_intf.c:800:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/char/ipmi/ipmi_smb_intf.c:800:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: drivers/char/ipmi/ipmi_smb_intf.c:801:
+                        /* we received a request to terminate ourself */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: drivers/char/ipmi/ipmi_smb_intf.c:802:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/char/ipmi/ipmi_smb_intf.c:802:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: drivers/char/ipmi/ipmi_smb_intf.c:803:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/char/ipmi/ipmi_smb_intf.c:803:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: drivers/char/ipmi/ipmi_smb_intf.c:804:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/char/ipmi/ipmi_smb_intf.c:804:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: drivers/char/ipmi/ipmi_smb_intf.c:806:
+        /* cleanup the thread, leave */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: drivers/char/ipmi/ipmi_smb_intf.c:807:
+        exit_kthread(kthread);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: drivers/char/ipmi/ipmi_smb_intf.c:807:
+        exit_kthread(kthread);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/char/ipmi/ipmi_smb_intf.c:816:
+       kthread_t *kthread = &smb_info->smb_thread;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: drivers/char/ipmi/ipmi_smb_intf.c:817:
+        /* initialize the semaphore:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: drivers/char/ipmi/ipmi_smb_intf.c:818:
+           we start with the semaphore locked. The new kernel$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#964: FILE: drivers/char/ipmi/ipmi_smb_intf.c:818:
+        /* initialize the semaphore:
+           we start with the semaphore locked. The new kernel

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: drivers/char/ipmi/ipmi_smb_intf.c:819:
+           thread will setup its stuff and unlock it. This$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: drivers/char/ipmi/ipmi_smb_intf.c:820:
+           control flow (the one that creates the thread) blocks$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: drivers/char/ipmi/ipmi_smb_intf.c:821:
+           in the down operation below until the thread has reached$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: drivers/char/ipmi/ipmi_smb_intf.c:822:
+           the up() operation.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: drivers/char/ipmi/ipmi_smb_intf.c:823:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: drivers/char/ipmi/ipmi_smb_intf.c:824:
+        init_MUTEX_LOCKED(&kthread->startstop_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: drivers/char/ipmi/ipmi_smb_intf.c:824:
+        init_MUTEX_LOCKED(&kthread->startstop_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: drivers/char/ipmi/ipmi_smb_intf.c:826:
+        kernel_thread(smb_thread, smb_info, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/char/ipmi/ipmi_smb_intf.c:826:
+        kernel_thread(smb_thread, smb_info, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: drivers/char/ipmi/ipmi_smb_intf.c:828:
+        /* wait till it has reached the setup_thread routine */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: drivers/char/ipmi/ipmi_smb_intf.c:829:
+        down(&kthread->startstop_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: drivers/char/ipmi/ipmi_smb_intf.c:829:
+        down(&kthread->startstop_sem);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#977: FILE: drivers/char/ipmi/ipmi_smb_intf.c:831:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: drivers/char/ipmi/ipmi_smb_intf.c:836:
+        if (kthread->thread == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: drivers/char/ipmi/ipmi_smb_intf.c:836:
+        if (kthread->thread == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#982: FILE: drivers/char/ipmi/ipmi_smb_intf.c:836:
+        if (kthread->thread == NULL)
+        {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kthread->thread"
#982: FILE: drivers/char/ipmi/ipmi_smb_intf.c:836:
+        if (kthread->thread == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: drivers/char/ipmi/ipmi_smb_intf.c:837:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: drivers/char/ipmi/ipmi_smb_intf.c:837:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: drivers/char/ipmi/ipmi_smb_intf.c:838:
+                printk(KERN_WARNING$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: drivers/char/ipmi/ipmi_smb_intf.c:838:
+                printk(KERN_WARNING$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#984: FILE: drivers/char/ipmi/ipmi_smb_intf.c:838:
+                printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'stop_kthread', this function's name, in a string
#985: FILE: drivers/char/ipmi/ipmi_smb_intf.c:839:
+		       "stop_kthread: killing non existing thread!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: drivers/char/ipmi/ipmi_smb_intf.c:840:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: drivers/char/ipmi/ipmi_smb_intf.c:840:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: drivers/char/ipmi/ipmi_smb_intf.c:841:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: drivers/char/ipmi/ipmi_smb_intf.c:841:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: drivers/char/ipmi/ipmi_smb_intf.c:843:
+        /* this function needs to be protected with the big$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#990: FILE: drivers/char/ipmi/ipmi_smb_intf.c:844:
+        /* this function needs to be protected with the big
+	   kernel lock (lock_kernel()). The lock must be

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: drivers/char/ipmi/ipmi_smb_intf.c:845:
+           grabbed before changing the terminate$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#992: FILE: drivers/char/ipmi/ipmi_smb_intf.c:846:
+	   flag and released after the down() call. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: drivers/char/ipmi/ipmi_smb_intf.c:847:
+        lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: drivers/char/ipmi/ipmi_smb_intf.c:847:
+        lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: drivers/char/ipmi/ipmi_smb_intf.c:849:
+        /* initialize the semaphore. We lock it here, the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/char/ipmi/ipmi_smb_intf.c:850:
+           leave_thread call of the thread to be terminated$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#996: FILE: drivers/char/ipmi/ipmi_smb_intf.c:850:
+        /* initialize the semaphore. We lock it here, the
+           leave_thread call of the thread to be terminated

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: drivers/char/ipmi/ipmi_smb_intf.c:851:
+           will unlock it. As soon as we see the semaphore$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/char/ipmi/ipmi_smb_intf.c:852:
+           unlocked, we know that the thread has exited.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: drivers/char/ipmi/ipmi_smb_intf.c:854:
+        init_MUTEX_LOCKED(&kthread->startstop_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: drivers/char/ipmi/ipmi_smb_intf.c:854:
+        init_MUTEX_LOCKED(&kthread->startstop_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: drivers/char/ipmi/ipmi_smb_intf.c:856:
+        /* We need to do a memory barrier here to be sure that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: drivers/char/ipmi/ipmi_smb_intf.c:857:
+           the flags are visible on all CPUs.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1003: FILE: drivers/char/ipmi/ipmi_smb_intf.c:857:
+        /* We need to do a memory barrier here to be sure that
+           the flags are visible on all CPUs.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: drivers/char/ipmi/ipmi_smb_intf.c:858:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: drivers/char/ipmi/ipmi_smb_intf.c:859:
+        mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/char/ipmi/ipmi_smb_intf.c:859:
+        mb();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: drivers/char/ipmi/ipmi_smb_intf.c:861:
+        /* set flag to request thread termination */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1008: FILE: drivers/char/ipmi/ipmi_smb_intf.c:862:
+        kthread->terminate = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/char/ipmi/ipmi_smb_intf.c:862:
+        kthread->terminate = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: drivers/char/ipmi/ipmi_smb_intf.c:865:
+        /* We need to do a memory barrier here to be sure that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: drivers/char/ipmi/ipmi_smb_intf.c:866:
+           the flags are visible on all CPUs.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1012: FILE: drivers/char/ipmi/ipmi_smb_intf.c:866:
+        /* We need to do a memory barrier here to be sure that
+           the flags are visible on all CPUs.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: drivers/char/ipmi/ipmi_smb_intf.c:867:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: drivers/char/ipmi/ipmi_smb_intf.c:868:
+        mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: drivers/char/ipmi/ipmi_smb_intf.c:868:
+        mb();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: drivers/char/ipmi/ipmi_smb_intf.c:869:
+        kill_proc(kthread->thread->pid, SIGKILL, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: drivers/char/ipmi/ipmi_smb_intf.c:869:
+        kill_proc(kthread->thread->pid, SIGKILL, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/char/ipmi/ipmi_smb_intf.c:871:
+        /* block till thread terminated */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: drivers/char/ipmi/ipmi_smb_intf.c:872:
+        down(&kthread->startstop_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: drivers/char/ipmi/ipmi_smb_intf.c:872:
+        down(&kthread->startstop_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: drivers/char/ipmi/ipmi_smb_intf.c:874:
+        /* release the big kernel lock */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: drivers/char/ipmi/ipmi_smb_intf.c:875:
+        unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: drivers/char/ipmi/ipmi_smb_intf.c:875:
+        unlock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: drivers/char/ipmi/ipmi_smb_intf.c:877:
+        /* now we are sure the thread is in zombie state. We$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: drivers/char/ipmi/ipmi_smb_intf.c:878:
+           notify keventd to clean the process up.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1024: FILE: drivers/char/ipmi/ipmi_smb_intf.c:878:
+        /* now we are sure the thread is in zombie state. We
+           notify keventd to clean the process up.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: drivers/char/ipmi/ipmi_smb_intf.c:879:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: drivers/char/ipmi/ipmi_smb_intf.c:880:
+        kill_proc(2, SIGCHLD, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: drivers/char/ipmi/ipmi_smb_intf.c:880:
+        kill_proc(2, SIGCHLD, 1);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1028: FILE: drivers/char/ipmi/ipmi_smb_intf.c:882:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1041: FILE: drivers/char/ipmi/ipmi_smb_intf.c:895:
+	/* Do a Get Device ID command, since it comes back with some
+	   useful info. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1041: FILE: drivers/char/ipmi/ipmi_smb_intf.c:895:
+	   useful info. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[1] != IPMI_GET_DEVICE_ID_CMD'
#1055: FILE: drivers/char/ipmi/ipmi_smb_intf.c:909:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'resp[2] != 0'
#1055: FILE: drivers/char/ipmi/ipmi_smb_intf.c:909:
+	if ((resp[1] != IPMI_GET_DEVICE_ID_CMD) || (resp[2] != 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1094: FILE: drivers/char/ipmi/ipmi_smb_intf.c:948:
+static unsigned short __initdata smb_addr[MAX_SMB_BMCS*2];
                                                       ^

WARNING:MISPLACED_INIT: __initdata should be placed after smb_addr[MAX_SMB_BMCS*2]
#1094: FILE: drivers/char/ipmi/ipmi_smb_intf.c:948:
+static unsigned short __initdata smb_addr[MAX_SMB_BMCS*2];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1095: FILE: drivers/char/ipmi/ipmi_smb_intf.c:949:
+static unsigned short smb_force_list[MAX_SMB_BMCS*FORCE_LIST_ENTRIES + FORCE_LIST_ENTRIES];
                                                  ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1097: FILE: drivers/char/ipmi/ipmi_smb_intf.c:951:
+MODULE_PARM(smb_addr, "1-"__MODULE_STRING(MAX_SMB_ADDR_PAIRS)"h");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1113: FILE: drivers/char/ipmi/ipmi_smb_intf.c:967:
+MODULE_PARM(smb_dbg, "1-"__MODULE_STRING(MAX_SMB_BMCS)"i");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1118: FILE: drivers/char/ipmi/ipmi_smb_intf.c:972:
+static int smb_dbg_probe = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1128: FILE: drivers/char/ipmi/ipmi_smb_intf.c:982:
+/*
+static unsigned int normal_isa[] = { SENSORS_ISA_END };

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1132: FILE: drivers/char/ipmi/ipmi_smb_intf.c:986:
+static unsigned short reserved[] =
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1151: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1005:
+^I.normal_i2c ^I^I= normal_i2c,$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1162: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1016:
+	if (smb_addr[pos*2+1] != 0)
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1162: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1016:
+	if (smb_addr[pos*2+1] != 0)
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1163: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1017:
+		return (smb_addr[pos*2] << 16) | smb_addr[pos*2+1];
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1163: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1017:
+		return (smb_addr[pos*2] << 16) | smb_addr[pos*2+1];
 		                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1163: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1017:
+		return (smb_addr[pos*2] << 16) | smb_addr[pos*2+1];
 		                                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1178: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1032:
+	if( id >= MAX_SMB_BMCS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1178: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1032:
+	if( id >= MAX_SMB_BMCS )

ERROR:SPACING: space required before the open parenthesis '('
#1178: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1032:
+	if( id >= MAX_SMB_BMCS )

WARNING:SIZEOF_ADDRESS: sizeof(& should be avoided
#1180: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1034:
+	memset(&client, 0, sizeof(&client));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1188: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1042:
+			printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smb_found_addr_proc', this function's name, in a string
#1189: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1043:
+			       "smb_found_addr_proc:No IPMI client 0x%x: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1196: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1050:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smb_found_addr_proc', this function's name, in a string
#1197: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1051:
+		       "smb_found_addr_proc: i2c_probe found device at"

WARNING:SPLIT_STRING: quoted string split across lines
#1198: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1052:
+		       "smb_found_addr_proc: i2c_probe found device at"
+		       " i2c address %x\n", addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->msg_lock
#1201: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1055:
+	spin_lock_init(&(smb_info->msg_lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->xmit_msgs
#1202: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1056:
+	INIT_LIST_HEAD(&(smb_info->xmit_msgs));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->hp_xmit_msgs
#1203: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1057:
+	INIT_LIST_HEAD(&(smb_info->hp_xmit_msgs));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1212: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1066:
+	for (i=0; i < MAX_SMB_BMCS; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'smb_infos[next_pos] == NULL'
#1222: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1076:
+		if (!res && (next_pos == -1) && (smb_infos[next_pos] == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smb_infos[next_pos]"
#1222: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1076:
+		if (!res && (next_pos == -1) && (smb_infos[next_pos] == NULL))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1232: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1086:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1234: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1088:
+		       "smb_found_one_addr_proc:"
+		       " Unable to attach i2c client: error %d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smb_info->intf
#1251: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1105:
+			       &(smb_info->intf));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1255: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1109:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1277: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1131:
+		printk(KERN_INFO "init_one_smb: Checking SMBus adapter %d:"

WARNING:SPLIT_STRING: quoted string split across lines
#1278: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1132:
+		printk(KERN_INFO "init_one_smb: Checking SMBus adapter %d:"
+		       " %s\n", id, adapter->name);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1280: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1134:
+	if ((i2c_get_functionality(adapter) & (I2C_FUNC_SMBUS_BLOCK_DATA))
+	    == (I2C_FUNC_SMBUS_BLOCK_DATA))
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1284: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1138:
+			printk(KERN_INFO "init_one_smb: found SMBus adapter:"

WARNING:SPLIT_STRING: quoted string split across lines
#1285: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1139:
+			printk(KERN_INFO "init_one_smb: found SMBus adapter:"
+			       " %s\n", adapter->name);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1297: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1151:
+	if (! to_clean)
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1307: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1161:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1315: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1169:
+		printk(KERN_ERR

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1330: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1184:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1334: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1188:
+static struct i2c_driver smb_i2c_driver =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1350: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1204:
+	printk(KERN_INFO "IPMI SMB Interface driver version "

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1354: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1208:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1354: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1208:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1355: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1209:
+		if (smb_addr[i*2+1] == 0)
 		              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1355: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1209:
+		if (smb_addr[i*2+1] == 0)
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1357: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1211:
+		smb_force_list[i*FORCE_LIST_ENTRIES] = smb_addr[i*2];
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1357: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1211:
+		smb_force_list[i*FORCE_LIST_ENTRIES] = smb_addr[i*2];
 		                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1212:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = smb_addr[i*2+1];
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1212:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = smb_addr[i*2+1];
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1212:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = smb_addr[i*2+1];
 		                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1358: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1212:
+		smb_force_list[i*FORCE_LIST_ENTRIES+1] = smb_addr[i*2+1];
 		                                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1360: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1214:
+	smb_force_list[i*FORCE_LIST_ENTRIES] = I2C_CLIENT_END;
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1361: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1215:
+	smb_force_list[i*FORCE_LIST_ENTRIES+1] = I2C_CLIENT_END;
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1361: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1215:
+	smb_force_list[i*FORCE_LIST_ENTRIES+1] = I2C_CLIENT_END;
 	                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1364: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1218:
+	 * range scanning. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1385: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1239:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1385: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1239:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1385: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1239:
+	for (i=0; i<MAX_SMB_BMCS; i++) {
+		cleanup_one_smb(smb_infos[i]);
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1399: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1253:
+/* [<adapter>.]addr[:debug]  Force a BMC at the given address on the
+			given adapter (or adapter 0 if not given).  If

WARNING:REPEATED_WORD: Possible repeated word: 'this'
#1400: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1254:
+			the debug portion is given, this this is the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1410: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1264:
+   Remember, ipmi_smb_setup() is passed the string after the equal sign. */

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1430: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1284:
+		val = simple_strtoul(cur,

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#1433: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1287:
+		if (*sep == '.') {
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1434: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1288:
+			smb_addr[pos*2] = val;
 			            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1435: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1289:
+			val = simple_strtoul(sep + 1,

CHECK:BRACES: Unbalanced braces around else statement
#1438: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1292:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1439: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1293:
+			smb_addr[pos*2] = 0;
 			            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1441: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1295:
+		smb_addr[pos*2+1] = val;
 		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1441: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1295:
+		smb_addr[pos*2+1] = val;
 		              ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1444: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1298:
+			val = simple_strtoul(sep + 1,

WARNING:INDENTED_LABEL: labels should not be indented
#1450: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1304:
+	next_parm:

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1455: FILE: drivers/char/ipmi/ipmi_smb_intf.c:1309:
+__setup("ipmi_smb=", ipmi_smb_setup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1468: FILE: drivers/char/ipmi/Kconfig:61:
+       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 149 errors, 173 warnings, 84 checks, 1419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
