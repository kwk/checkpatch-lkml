WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch adds a system call semtimedop which allows a program to execute a

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#49: FILE: arch/i386/kernel/sys_i386.c:143:
+		return sys_semtimedop (first, (struct sembuf *)ptr, second, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#51: FILE: arch/i386/kernel/sys_i386.c:145:
+		return sys_semtimedop (first, (struct sembuf *)ptr, second,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: include/linux/sem.h:143:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *sops,

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#110: FILE: include/linux/sem.h:144:
+								unsigned nsops, const struct timespec *timeout);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: include/linux/sem.h:144:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *sops,
+								unsigned nsops, const struct timespec *timeout);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: include/linux/sem.h:144:
+								unsigned nsops, const struct timespec *timeout);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: ipc/sem.c:976:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *tsops,

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#133: FILE: ipc/sem.c:977:
+								unsigned nsops, const struct timespec *timeout)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: ipc/sem.c:977:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *tsops,
+								unsigned nsops, const struct timespec *timeout)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#133: FILE: ipc/sem.c:977:
+								unsigned nsops, const struct timespec *timeout)

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: ipc/sem.c:1004:
+		struct timespec _timeout;
+		if (copy_from_user(&_timeout, timeout, sizeof(*timeout))) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: ipc/sem.c:1009:
+		if (_timeout.tv_sec < 0 || _timeout.tv_nsec < 0 ||
+			_timeout.tv_nsec >= 1000000000L) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: ipc/util.c:541:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *sops, unsigned nsops,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: ipc/util.c:541:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *sops, unsigned nsops,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: ipc/util.c:542:
+asmlinkage long sys_semtimedop (int semid, struct sembuf *sops, unsigned nsops,
+								const struct timespec *timeout)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#194: FILE: ipc/util.c:544:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: ipc/util.c:547:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 5 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
