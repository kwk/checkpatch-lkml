WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
--- 25/include/scsi/scsi_cmnd.h~git-scsi-target-fixup	Thu Jun  1 15:38:27 2006

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#53: FILE: include/scsi/scsi_cmnd.h:153:
+extern struct scsi_cmnd *scsi_host_get_command(struct Scsi_Host *,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: include/scsi/scsi_cmnd.h:153:
+extern struct scsi_cmnd *scsi_host_get_command(struct Scsi_Host *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#53: FILE: include/scsi/scsi_cmnd.h:153:
+extern struct scsi_cmnd *scsi_host_get_command(struct Scsi_Host *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#53: FILE: include/scsi/scsi_cmnd.h:153:
+extern struct scsi_cmnd *scsi_host_get_command(struct Scsi_Host *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/scsi/scsi_cmnd.h:156:
+extern void scsi_host_put_command(struct Scsi_Host *, struct scsi_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#56: FILE: include/scsi/scsi_cmnd.h:156:
+extern void scsi_host_put_command(struct Scsi_Host *, struct scsi_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#56: FILE: include/scsi/scsi_cmnd.h:156:
+extern void scsi_host_put_command(struct Scsi_Host *, struct scsi_cmnd *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/scsi/scsi_cmnd.h:161:
+extern struct scatterlist *scsi_alloc_sgtable(struct scsi_cmnd *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#61: FILE: include/scsi/scsi_cmnd.h:161:
+extern struct scatterlist *scsi_alloc_sgtable(struct scsi_cmnd *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#61: FILE: include/scsi/scsi_cmnd.h:161:
+extern struct scatterlist *scsi_alloc_sgtable(struct scsi_cmnd *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/scsi/scsi_cmnd.h:162:
+extern void scsi_free_sgtable(struct scatterlist *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#62: FILE: include/scsi/scsi_cmnd.h:162:
+extern void scsi_free_sgtable(struct scatterlist *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#62: FILE: include/scsi/scsi_cmnd.h:162:
+extern void scsi_free_sgtable(struct scatterlist *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072178.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 5 checks, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072178.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
