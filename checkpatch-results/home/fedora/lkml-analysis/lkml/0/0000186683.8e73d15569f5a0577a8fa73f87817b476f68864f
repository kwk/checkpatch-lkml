WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#36: 
Basically it configs in the NEWTOD code and cuts alot of code out of the
                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#62: 
--- a/arch/i386/Kconfig	2005-04-29 15:16:59 -07:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/i386/kernel/time.c:405:
+	if((ts.tv_nsec / 1000) >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#206: FILE: arch/i386/kernel/time.c:405:
+	if((ts.tv_nsec / 1000) >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: arch/i386/kernel/time.c:405:
+	if((ts.tv_nsec / 1000) >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/i386/kernel/time.c:406:
+	if((ts.tv_nsec / 1000) >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&
+		(ts.tv_nsec / 1000) <= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2) {

CHECK:SPACING: No space is necessary after a cast
#207: FILE: arch/i386/kernel/time.c:406:
+		(ts.tv_nsec / 1000) <= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: arch/i386/kernel/time.c:406:
+		(ts.tv_nsec / 1000) <= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#216: FILE: arch/i386/kernel/time.c:415:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: arch/i386/lib/delay.c:39:
+	int d0;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#304: FILE: arch/i386/lib/delay.c:39:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#310: FILE: arch/i386/lib/delay.c:45:
+		:"=&a" (d0)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#311: FILE: arch/i386/lib/delay.c:46:
+		:"0" (loops));
 		^

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/ia64/kernel/time.c:265:
+        struct timespec ts;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/ia64/kernel/time.c:265:
+        struct timespec ts;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/ia64/kernel/time.c:266:
+        efi_gettimeofday(&ts);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#467: FILE: arch/ia64/kernel/time.c:266:
+        struct timespec ts;
+        efi_gettimeofday(&ts);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/ia64/kernel/time.c:266:
+        efi_gettimeofday(&ts);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/ia64/kernel/time.c:267:
+        return (nsec_t)(ts.tv_sec * NSEC_PER_SEC + ts.tv_nsec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/ia64/kernel/time.c:267:
+        return (nsec_t)(ts.tv_sec * NSEC_PER_SEC + ts.tv_nsec);$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#530: FILE: arch/ppc/kernel/time.c:104:
+		return (nsec_t)ppc_md.get_rtc_time() * NSEC_PER_SEC;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: arch/ppc/kernel/time.c:105:
+		printk(KERN_ERR "ppc_md.get_rtc_time does not exist???\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#554: FILE: arch/ppc/kernel/time.c:128:
+	if ( ppc_md.set_rtc_time && ts.tv_sec - last_rtc_update >= 659 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: arch/ppc/kernel/time.c:129:
+	if ( ppc_md.set_rtc_time && ts.tv_sec - last_rtc_update >= 659 &&
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#555: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#555: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#555: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#555: FILE: arch/ppc/kernel/time.c:129:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#557: FILE: arch/ppc/kernel/time.c:131:
+			last_rtc_update = ts.tv_sec+1;
 			                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: arch/ppc64/kernel/time.c:156:
+	sec = mktime(tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
+			      tm.tm_hour, tm.tm_min, tm.tm_sec);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#693: FILE: arch/ppc64/kernel/time.c:159:
+}
+void sync_persistent_clock(struct timespec ts)

ERROR:SPACING: space prohibited after that open parenthesis '('
#711: FILE: arch/ppc64/kernel/time.c:177:
+	if ( ts.tv_sec - last_rtc_update >= 659 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: arch/ppc64/kernel/time.c:178:
+	if ( ts.tv_sec - last_rtc_update >= 659 &&
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#712: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#712: FILE: arch/ppc64/kernel/time.c:178:
+		abs((ts.tv_nsec/1000) - (1000000-1000000/HZ)) < 500000/HZ) {
 		                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#714: FILE: arch/ppc64/kernel/time.c:180:
+		struct rtc_time tm;
+		to_tm(ts.tv_sec+1, &tm);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#714: FILE: arch/ppc64/kernel/time.c:180:
+		to_tm(ts.tv_sec+1, &tm);
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#718: FILE: arch/ppc64/kernel/time.c:184:
+			last_rtc_update = ts.tv_sec+1;
 			                           ^

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#850: FILE: arch/s390/kernel/time.c:166:
+	 * without loosing too many bits.
 	           ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#853: FILE: arch/s390/kernel/time.c:169:
+	return (nsec_t) nsecs;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#982: FILE: arch/x86_64/kernel/time.c:582:
+	static unsigned long rtc_update = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: arch/x86_64/kernel/time.c:592:
+	if (ts.tv_sec > rtc_update &&
+		abs(ts.tv_nsec - 500000000) <= tick_nsec / 2) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1059: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#1059: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
+({							\
+	u64 result = dividend;				\
+	*remainder = do_div(result,divisor);		\
+	result;						\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: include/asm-generic/div64.h:62:
+	*remainder = do_div(result,divisor);		\
 	                          ^

WARNING:INCLUDE_LINUX: Use #include <linux/percpu.h> instead of <asm/percpu.h>
#1075: FILE: include/asm-ppc64/time.h:24:
+#include <asm/percpu.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186683.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 13 warnings, 23 checks, 881 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186683.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
