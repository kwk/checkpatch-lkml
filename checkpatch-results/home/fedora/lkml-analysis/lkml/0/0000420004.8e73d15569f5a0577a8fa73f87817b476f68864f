WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -ruN linux-2.5.44/drivers/perfctr/virtual.c linux-2.5.44.perfctr-3.0-pre2/drivers/perfctr/virtual.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: drivers/perfctr/virtual.c:1:
+/* $Id: virtual.c,v 1.52 2002/10/20 21:54:46 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#36: FILE: drivers/perfctr/virtual.c:1:
+/* $Id: virtual.c,v 1.52 2002/10/20 21:54:46 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#49: FILE: drivers/perfctr/virtual.c:14:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#50: FILE: drivers/perfctr/virtual.c:15:
+#include <asm/uaccess.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#67: FILE: drivers/perfctr/virtual.c:32:
+	spinlock_t owner_lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#76: FILE: drivers/perfctr/virtual.c:41:
+};
+#define IS_RUNNING(perfctr)	perfctr_cstatus_enabled((perfctr)->state.cpu_state.cstatus)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#78: FILE: drivers/perfctr/virtual.c:43:
+static struct file_operations vperfctr_file_ops;	/* forward */

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#100: FILE: drivers/perfctr/virtual.c:65:
+	perfctr->sampling_timer = HZ/2;
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#116: FILE: drivers/perfctr/virtual.c:81:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#116: FILE: drivers/perfctr/virtual.c:81:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: drivers/perfctr/virtual.c:81:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: drivers/perfctr/virtual.c:103:
+	if( !perfctr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#138: FILE: drivers/perfctr/virtual.c:103:
+	if( !perfctr ) {

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: drivers/perfctr/virtual.c:103:
+	if( !perfctr ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: drivers/perfctr/virtual.c:104:
+		printk(KERN_ERR "%s: BUG! pid %d has no vperfctr\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#140: FILE: drivers/perfctr/virtual.c:105:
+		       __FUNCTION__, tsk->pid);

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: drivers/perfctr/virtual.c:108:
+	if( !perfctr_cstatus_has_ictrs(perfctr->state.cpu_state.cstatus) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#143: FILE: drivers/perfctr/virtual.c:108:
+	if( !perfctr_cstatus_has_ictrs(perfctr->state.cpu_state.cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: drivers/perfctr/virtual.c:108:
+	if( !perfctr_cstatus_has_ictrs(perfctr->state.cpu_state.cstatus) ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: drivers/perfctr/virtual.c:109:
+		printk(KERN_ERR "%s: BUG! vperfctr has cstatus %#x (pid %d, comm %s)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#145: FILE: drivers/perfctr/virtual.c:110:
+		       __FUNCTION__, perfctr->state.cpu_state.cstatus, tsk->pid, tsk->comm);

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: drivers/perfctr/virtual.c:115:
+	if( !pmc_mask ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: drivers/perfctr/virtual.c:115:
+	if( !pmc_mask ) {

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: drivers/perfctr/virtual.c:115:
+	if( !pmc_mask ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#151: FILE: drivers/perfctr/virtual.c:116:
+		printk(KERN_ERR "%s: BUG! pid %d has unidentifiable overflow source\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#152: FILE: drivers/perfctr/virtual.c:117:
+		       __FUNCTION__, tsk->pid);

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: drivers/perfctr/virtual.c:122:
+	if( perfctr_cstatus_has_tsc(perfctr->iresume_cstatus) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: drivers/perfctr/virtual.c:122:
+	if( perfctr_cstatus_has_tsc(perfctr->iresume_cstatus) ) {

ERROR:SPACING: space required before the open parenthesis '('
#157: FILE: drivers/perfctr/virtual.c:122:
+	if( perfctr_cstatus_has_tsc(perfctr->iresume_cstatus) ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#157: FILE: drivers/perfctr/virtual.c:122:
+	if( perfctr_cstatus_has_tsc(perfctr->iresume_cstatus) ) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#160: FILE: drivers/perfctr/virtual.c:125:
+	} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#166: FILE: drivers/perfctr/virtual.c:131:
+	if( !send_sig_info(si.si_signo, &si, tsk) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: drivers/perfctr/virtual.c:131:
+	if( !send_sig_info(si.si_signo, &si, tsk) )

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: drivers/perfctr/virtual.c:131:
+	if( !send_sig_info(si.si_signo, &si, tsk) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#185: FILE: drivers/perfctr/virtual.c:150:
+	if( !perfctr_cstatus_has_ictrs(iresume_cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#185: FILE: drivers/perfctr/virtual.c:150:
+	if( !perfctr_cstatus_has_ictrs(iresume_cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: drivers/perfctr/virtual.c:150:
+	if( !perfctr_cstatus_has_ictrs(iresume_cstatus) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#188: FILE: drivers/perfctr/virtual.c:153:
+	if( IS_RUNNING(perfctr) && !is_remote )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#188: FILE: drivers/perfctr/virtual.c:153:
+	if( IS_RUNNING(perfctr) && !is_remote )

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: drivers/perfctr/virtual.c:153:
+	if( IS_RUNNING(perfctr) && !is_remote )

ERROR:SPACING: space prohibited after that open parenthesis '('
#197: FILE: drivers/perfctr/virtual.c:162:
+	if( !is_remote )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#197: FILE: drivers/perfctr/virtual.c:162:
+	if( !is_remote )

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: drivers/perfctr/virtual.c:162:
+	if( !is_remote )

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#208: FILE: drivers/perfctr/virtual.c:173:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#220: FILE: drivers/perfctr/virtual.c:185:
+int nrctrs = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: space prohibited after that open parenthesis '('
#229: FILE: drivers/perfctr/virtual.c:194:
+	if( ++nrctrs == 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#229: FILE: drivers/perfctr/virtual.c:194:
+	if( ++nrctrs == 1 )

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: drivers/perfctr/virtual.c:194:
+	if( ++nrctrs == 1 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#232: FILE: drivers/perfctr/virtual.c:197:
+	if( other ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#232: FILE: drivers/perfctr/virtual.c:197:
+	if( other ) {

ERROR:SPACING: space required before the open parenthesis '('
#232: FILE: drivers/perfctr/virtual.c:197:
+	if( other ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#233: FILE: drivers/perfctr/virtual.c:198:
+		printk(KERN_ERR __FILE__

ERROR:SPACING: space prohibited after that open parenthesis '('
#245: FILE: drivers/perfctr/virtual.c:210:
+	if( --nrctrs == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#245: FILE: drivers/perfctr/virtual.c:210:
+	if( --nrctrs == 0 )

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: drivers/perfctr/virtual.c:210:
+	if( --nrctrs == 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#254: FILE: drivers/perfctr/virtual.c:219:
+	if( inc_nrctrs() != 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#254: FILE: drivers/perfctr/virtual.c:219:
+	if( inc_nrctrs() != 0 )

ERROR:SPACING: space required before the open parenthesis '('
#254: FILE: drivers/perfctr/virtual.c:219:
+	if( inc_nrctrs() != 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#257: FILE: drivers/perfctr/virtual.c:222:
+	if( !page ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#257: FILE: drivers/perfctr/virtual.c:222:
+	if( !page ) {

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: drivers/perfctr/virtual.c:222:
+	if( !page ) {

CHECK:SPACING: No space is necessary after a cast
#262: FILE: drivers/perfctr/virtual.c:227:
+	return (struct vperfctr*) page;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#262: FILE: drivers/perfctr/virtual.c:227:
+	return (struct vperfctr*) page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/perfctr/virtual.c:240:
+	struct vperfctr *perfctr = vperfctr_alloc();
+	if( perfctr ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#275: FILE: drivers/perfctr/virtual.c:240:
+	if( perfctr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#275: FILE: drivers/perfctr/virtual.c:240:
+	if( perfctr ) {

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: drivers/perfctr/virtual.c:240:
+	if( perfctr ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#285: FILE: drivers/perfctr/virtual.c:250:
+	if( atomic_dec_and_test(&perfctr->count) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#285: FILE: drivers/perfctr/virtual.c:250:
+	if( atomic_dec_and_test(&perfctr->count) )

ERROR:SPACING: space required before the open parenthesis '('
#285: FILE: drivers/perfctr/virtual.c:250:
+	if( atomic_dec_and_test(&perfctr->count) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#312: FILE: drivers/perfctr/virtual.c:277:
+	if( IS_RUNNING(perfctr) && owner == current )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#312: FILE: drivers/perfctr/virtual.c:277:
+	if( IS_RUNNING(perfctr) && owner == current )

ERROR:SPACING: space required before the open parenthesis '('
#312: FILE: drivers/perfctr/virtual.c:277:
+	if( IS_RUNNING(perfctr) && owner == current )

ERROR:SPACING: space prohibited after that open parenthesis '('
#324: FILE: drivers/perfctr/virtual.c:289:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#324: FILE: drivers/perfctr/virtual.c:289:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space required before the open parenthesis '('
#324: FILE: drivers/perfctr/virtual.c:289:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#334: FILE: drivers/perfctr/virtual.c:299:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#334: FILE: drivers/perfctr/virtual.c:299:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space required before the open parenthesis '('
#334: FILE: drivers/perfctr/virtual.c:299:
+	if( IS_RUNNING(perfctr) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#347: FILE: drivers/perfctr/virtual.c:312:
+	if( --perfctr->sampling_timer == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#347: FILE: drivers/perfctr/virtual.c:312:
+	if( --perfctr->sampling_timer == 0 )

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: drivers/perfctr/virtual.c:312:
+	if( --perfctr->sampling_timer == 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#362: FILE: drivers/perfctr/virtual.c:327:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#362: FILE: drivers/perfctr/virtual.c:327:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space required before the open parenthesis '('
#362: FILE: drivers/perfctr/virtual.c:327:
+	if( IS_RUNNING(perfctr) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#363: FILE: drivers/perfctr/virtual.c:328:
+		if( !is_remote )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#363: FILE: drivers/perfctr/virtual.c:328:
+		if( !is_remote )

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: drivers/perfctr/virtual.c:328:
+		if( !is_remote )

ERROR:SPACING: space prohibited after that open parenthesis '('
#379: FILE: drivers/perfctr/virtual.c:344:
+	if( copy_from_user(&control, argp, sizeof control) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#379: FILE: drivers/perfctr/virtual.c:344:
+	if( copy_from_user(&control, argp, sizeof control) )

ERROR:SPACING: space required before the open parenthesis '('
#379: FILE: drivers/perfctr/virtual.c:344:
+	if( copy_from_user(&control, argp, sizeof control) )

WARNING:SIZEOF_PARENTHESIS: sizeof control should be sizeof(control)
#379: FILE: drivers/perfctr/virtual.c:344:
+	if( copy_from_user(&control, argp, sizeof control) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#385: FILE: drivers/perfctr/virtual.c:350:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#385: FILE: drivers/perfctr/virtual.c:350:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#385: FILE: drivers/perfctr/virtual.c:350:
+	if( err < 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#388: FILE: drivers/perfctr/virtual.c:353:
+	if( !perfctr_cstatus_enabled(next_cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#388: FILE: drivers/perfctr/virtual.c:353:
+	if( !perfctr_cstatus_enabled(next_cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#388: FILE: drivers/perfctr/virtual.c:353:
+	if( !perfctr_cstatus_enabled(next_cstatus) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#394: FILE: drivers/perfctr/virtual.c:359:
+	if( !perfctr_cstatus_has_tsc(next_cstatus) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#394: FILE: drivers/perfctr/virtual.c:359:
+	if( !perfctr_cstatus_has_tsc(next_cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: drivers/perfctr/virtual.c:359:
+	if( !perfctr_cstatus_has_tsc(next_cstatus) )

ERROR:SPACING: space required before the open parenthesis '('
#398: FILE: drivers/perfctr/virtual.c:363:
+	for(i = 0; i < nrctrs; ++i)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#399: FILE: drivers/perfctr/virtual.c:364:
+		if( !(control.preserve & (1<<i)) )
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#399: FILE: drivers/perfctr/virtual.c:364:
+		if( !(control.preserve & (1<<i)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#399: FILE: drivers/perfctr/virtual.c:364:
+		if( !(control.preserve & (1<<i)) )

ERROR:SPACING: space required before the open parenthesis '('
#399: FILE: drivers/perfctr/virtual.c:364:
+		if( !(control.preserve & (1<<i)) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#402: FILE: drivers/perfctr/virtual.c:367:
+	if( !is_remote )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#402: FILE: drivers/perfctr/virtual.c:367:
+	if( !is_remote )

ERROR:SPACING: space required before the open parenthesis '('
#402: FILE: drivers/perfctr/virtual.c:367:
+	if( !is_remote )

ERROR:SPACING: space prohibited after that open parenthesis '('
#422: FILE: drivers/perfctr/virtual.c:387:
+	if( !is_remote )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#422: FILE: drivers/perfctr/virtual.c:387:
+	if( !is_remote )

ERROR:SPACING: space required before the open parenthesis '('
#422: FILE: drivers/perfctr/virtual.c:387:
+	if( !is_remote )

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#427: FILE: drivers/perfctr/virtual.c:392:
+static int vperfctr_attach_task(struct task_struct *tsk, int creat)
                                                              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#429: FILE: drivers/perfctr/virtual.c:394:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#434: FILE: drivers/perfctr/virtual.c:399:
+	filp = vperfctr_get_filp();
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#436: FILE: drivers/perfctr/virtual.c:401:
+	if( !filp )
 	     ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#436: FILE: drivers/perfctr/virtual.c:401:
+	if( !filp )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#436: FILE: drivers/perfctr/virtual.c:401:
+	if( !filp )

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: drivers/perfctr/virtual.c:401:
+	if( !filp )

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#438: FILE: drivers/perfctr/virtual.c:403:
+	err = fd = get_unused_fd();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited after that open parenthesis '('
#439: FILE: drivers/perfctr/virtual.c:404:
+	if( err < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#439: FILE: drivers/perfctr/virtual.c:404:
+	if( err < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: drivers/perfctr/virtual.c:404:
+	if( err < 0 )

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#441: FILE: drivers/perfctr/virtual.c:406:
+	if( creat ) {
 	    ^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#441: FILE: drivers/perfctr/virtual.c:406:
+	if( creat ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#441: FILE: drivers/perfctr/virtual.c:406:
+	if( creat ) {

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: drivers/perfctr/virtual.c:406:
+	if( creat ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#444: FILE: drivers/perfctr/virtual.c:409:
+		if( !perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#444: FILE: drivers/perfctr/virtual.c:409:
+		if( !perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#444: FILE: drivers/perfctr/virtual.c:409:
+		if( !perfctr )

ERROR:SPACING: space prohibited after that open parenthesis '('
#447: FILE: drivers/perfctr/virtual.c:412:
+		if( tsk->thread.perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#447: FILE: drivers/perfctr/virtual.c:412:
+		if( tsk->thread.perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: drivers/perfctr/virtual.c:412:
+		if( tsk->thread.perfctr )

ERROR:SPACING: space prohibited after that open parenthesis '('
#454: FILE: drivers/perfctr/virtual.c:419:
+		if( !perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#454: FILE: drivers/perfctr/virtual.c:419:
+		if( !perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#454: FILE: drivers/perfctr/virtual.c:419:
+		if( !perfctr )

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#459: FILE: drivers/perfctr/virtual.c:424:
+	fd_install(fd, filp);
 	               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#466: FILE: drivers/perfctr/virtual.c:431:
+	fput(filp);
 	     ^^^^

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#470: FILE: drivers/perfctr/virtual.c:435:
+static int vperfctr_attach_pid(int pid, int creat)
                                             ^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#475: FILE: drivers/perfctr/virtual.c:440:
+	if( pid == 0 || pid == current->pid )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#475: FILE: drivers/perfctr/virtual.c:440:
+	if( pid == 0 || pid == current->pid )

ERROR:SPACING: space required before the open parenthesis '('
#475: FILE: drivers/perfctr/virtual.c:440:
+	if( pid == 0 || pid == current->pid )

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#476: FILE: drivers/perfctr/virtual.c:441:
+		return vperfctr_attach_task(current, creat);
 		                                     ^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#479: FILE: drivers/perfctr/virtual.c:444:
+	if( tsk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#479: FILE: drivers/perfctr/virtual.c:444:
+	if( tsk )

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: drivers/perfctr/virtual.c:444:
+	if( tsk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#483: FILE: drivers/perfctr/virtual.c:448:
+	if( !tsk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#483: FILE: drivers/perfctr/virtual.c:448:
+	if( !tsk )

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: drivers/perfctr/virtual.c:448:
+	if( !tsk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#486: FILE: drivers/perfctr/virtual.c:451:
+	if( ret == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#486: FILE: drivers/perfctr/virtual.c:451:
+	if( ret == 0 )

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: drivers/perfctr/virtual.c:451:
+	if( ret == 0 )

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#487: FILE: drivers/perfctr/virtual.c:452:
+		ret = vperfctr_attach_task(tsk, creat);
 		                                ^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#496: FILE: drivers/perfctr/virtual.c:461:
+	struct file *filp;
 	             ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#499: FILE: drivers/perfctr/virtual.c:464:
+	switch( cmd ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#499: FILE: drivers/perfctr/virtual.c:464:
+	switch( cmd ) {

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: drivers/perfctr/virtual.c:464:
+	switch( cmd ) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#506: FILE: drivers/perfctr/virtual.c:471:
+	filp = fget(whom);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#507: FILE: drivers/perfctr/virtual.c:472:
+	if( !filp )
 	     ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#507: FILE: drivers/perfctr/virtual.c:472:
+	if( !filp )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#507: FILE: drivers/perfctr/virtual.c:472:
+	if( !filp )

ERROR:SPACING: space required before the open parenthesis '('
#507: FILE: drivers/perfctr/virtual.c:472:
+	if( !filp )

ERROR:SPACING: space prohibited after that open parenthesis '('
#509: FILE: drivers/perfctr/virtual.c:474:
+	if( filp->f_op != &vperfctr_file_ops )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#509: FILE: drivers/perfctr/virtual.c:474:
+	if( filp->f_op != &vperfctr_file_ops )

ERROR:SPACING: space required before the open parenthesis '('
#509: FILE: drivers/perfctr/virtual.c:474:
+	if( filp->f_op != &vperfctr_file_ops )

ERROR:SPACING: space prohibited after that open parenthesis '('
#513: FILE: drivers/perfctr/virtual.c:478:
+	if( !perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#513: FILE: drivers/perfctr/virtual.c:478:
+	if( !perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#513: FILE: drivers/perfctr/virtual.c:478:
+	if( !perfctr )

ERROR:SPACING: space prohibited after that open parenthesis '('
#516: FILE: drivers/perfctr/virtual.c:481:
+	if( perfctr != current->thread.perfctr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#516: FILE: drivers/perfctr/virtual.c:481:
+	if( perfctr != current->thread.perfctr ) {

ERROR:SPACING: space required before the open parenthesis '('
#516: FILE: drivers/perfctr/virtual.c:481:
+	if( perfctr != current->thread.perfctr ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#519: FILE: drivers/perfctr/virtual.c:484:
+		if( tsk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#519: FILE: drivers/perfctr/virtual.c:484:
+		if( tsk )

ERROR:SPACING: space required before the open parenthesis '('
#519: FILE: drivers/perfctr/virtual.c:484:
+		if( tsk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#523: FILE: drivers/perfctr/virtual.c:488:
+		if( !tsk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: drivers/perfctr/virtual.c:488:
+		if( !tsk )

ERROR:SPACING: space required before the open parenthesis '('
#523: FILE: drivers/perfctr/virtual.c:488:
+		if( !tsk )

ERROR:SPACING: space prohibited after that open parenthesis '('
#526: FILE: drivers/perfctr/virtual.c:491:
+		if( ret < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#526: FILE: drivers/perfctr/virtual.c:491:
+		if( ret < 0 )

ERROR:SPACING: space required before the open parenthesis '('
#526: FILE: drivers/perfctr/virtual.c:491:
+		if( ret < 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#529: FILE: drivers/perfctr/virtual.c:494:
+	switch( cmd ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#529: FILE: drivers/perfctr/virtual.c:494:
+	switch( cmd ) {

ERROR:SPACING: space required before the open parenthesis '('
#529: FILE: drivers/perfctr/virtual.c:494:
+	switch( cmd ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#531: FILE: drivers/perfctr/virtual.c:496:
+		ret = sys_vperfctr_control(perfctr, (struct vperfctr_control*)arg, tsk != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tsk"
#531: FILE: drivers/perfctr/virtual.c:496:
+		ret = sys_vperfctr_control(perfctr, (struct vperfctr_control*)arg, tsk != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tsk"
#538: FILE: drivers/perfctr/virtual.c:503:
+		ret = sys_vperfctr_sample(perfctr, tsk != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tsk"
#541: FILE: drivers/perfctr/virtual.c:506:
+		ret = sys_vperfctr_iresume(perfctr, tsk != NULL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#547: FILE: drivers/perfctr/virtual.c:512:
+	if( tsk )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#547: FILE: drivers/perfctr/virtual.c:512:
+	if( tsk )

ERROR:SPACING: space required before the open parenthesis '('
#547: FILE: drivers/perfctr/virtual.c:512:
+	if( tsk )

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#550: FILE: drivers/perfctr/virtual.c:515:
+	fput(filp);
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#560: FILE: drivers/perfctr/virtual.c:525:
+static int vperfctr_mmap(struct file *filp, struct vm_area_struct *vma)
                                       ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#565: FILE: drivers/perfctr/virtual.c:530:
+	if( (vma->vm_end - vma->vm_start) != PAGE_SIZE ||

ERROR:SPACING: space required before the open parenthesis '('
#565: FILE: drivers/perfctr/virtual.c:530:
+	if( (vma->vm_end - vma->vm_start) != PAGE_SIZE ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: drivers/perfctr/virtual.c:531:
+	if( (vma->vm_end - vma->vm_start) != PAGE_SIZE ||
+	    vma->vm_pgoff != 0 ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#568: FILE: drivers/perfctr/virtual.c:533:
+	    (vma->vm_flags & (VM_WRITE | VM_MAYWRITE)) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#571: FILE: drivers/perfctr/virtual.c:536:
+	if( !perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#571: FILE: drivers/perfctr/virtual.c:536:
+	if( !perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#571: FILE: drivers/perfctr/virtual.c:536:
+	if( !perfctr )

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#577: FILE: drivers/perfctr/virtual.c:542:
+static int vperfctr_release(struct inode *inode, struct file *filp)
                                                               ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: drivers/perfctr/virtual.c:545:
+	struct vperfctr *perfctr = filp->private_data;
+	filp->private_data = NULL;

ERROR:SPACING: space prohibited after that open parenthesis '('
#581: FILE: drivers/perfctr/virtual.c:546:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#581: FILE: drivers/perfctr/virtual.c:546:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/perfctr/virtual.c:546:
+	if( perfctr )

WARNING:CONST_STRUCT: struct file_operations should normally be const
#586: FILE: drivers/perfctr/virtual.c:551:
+static struct file_operations vperfctr_file_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#602: FILE: drivers/perfctr/virtual.c:567:
+static struct dentry_operations vperfctrfs_dentry_operations = {

ERROR:SPACING: space prohibited after that open parenthesis '('
#613: FILE: drivers/perfctr/virtual.c:578:
+	if( !inode )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#613: FILE: drivers/perfctr/virtual.c:578:
+	if( !inode )

ERROR:SPACING: space required before the open parenthesis '('
#613: FILE: drivers/perfctr/virtual.c:578:
+	if( !inode )

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#617: FILE: drivers/perfctr/virtual.c:582:
+	inode->i_mode = S_IFCHR | S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#620: FILE: drivers/perfctr/virtual.c:585:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

ERROR:SPACING: space prohibited after that open parenthesis '('
#636: FILE: drivers/perfctr/virtual.c:601:
+	if( dentry ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#636: FILE: drivers/perfctr/virtual.c:601:
+	if( dentry ) {

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: drivers/perfctr/virtual.c:601:
+	if( dentry ) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#645: FILE: drivers/perfctr/virtual.c:610:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#649: FILE: drivers/perfctr/virtual.c:614:
+	filp = get_empty_filp();
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#650: FILE: drivers/perfctr/virtual.c:615:
+	if( !filp )
 	     ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#650: FILE: drivers/perfctr/virtual.c:615:
+	if( !filp )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#650: FILE: drivers/perfctr/virtual.c:615:
+	if( !filp )

ERROR:SPACING: space required before the open parenthesis '('
#650: FILE: drivers/perfctr/virtual.c:615:
+	if( !filp )

ERROR:SPACING: space prohibited after that open parenthesis '('
#653: FILE: drivers/perfctr/virtual.c:618:
+	if( !inode )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#653: FILE: drivers/perfctr/virtual.c:618:
+	if( !inode )

ERROR:SPACING: space required before the open parenthesis '('
#653: FILE: drivers/perfctr/virtual.c:618:
+	if( !inode )

ERROR:SPACING: space prohibited after that open parenthesis '('
#656: FILE: drivers/perfctr/virtual.c:621:
+	if( !dentry )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#656: FILE: drivers/perfctr/virtual.c:621:
+	if( !dentry )

ERROR:SPACING: space required before the open parenthesis '('
#656: FILE: drivers/perfctr/virtual.c:621:
+	if( !dentry )

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#668: FILE: drivers/perfctr/virtual.c:633:
+	return filp;
 	       ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#671: FILE: drivers/perfctr/virtual.c:636:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#673: FILE: drivers/perfctr/virtual.c:638:
+	put_filp(filp);	/* doesn't run ->release() like fput() does */
 	         ^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#678: FILE: drivers/perfctr/virtual.c:643:
+#define VPERFCTRFS_MAGIC (('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                                                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#696: FILE: drivers/perfctr/virtual.c:661:
+	int err = register_filesystem(&vperfctrfs_type);
+	if( !err ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#696: FILE: drivers/perfctr/virtual.c:661:
+	if( !err ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#696: FILE: drivers/perfctr/virtual.c:661:
+	if( !err ) {

ERROR:SPACING: space required before the open parenthesis '('
#696: FILE: drivers/perfctr/virtual.c:661:
+	if( !err ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#698: FILE: drivers/perfctr/virtual.c:663:
+		if( !IS_ERR(vperfctr_mnt) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#698: FILE: drivers/perfctr/virtual.c:663:
+		if( !IS_ERR(vperfctr_mnt) )

ERROR:SPACING: space required before the open parenthesis '('
#698: FILE: drivers/perfctr/virtual.c:663:
+		if( !IS_ERR(vperfctr_mnt) )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#731: FILE: drivers/perfctr/virtual.h:1:
+/* $Id: virtual.h,v 1.8 2002/10/20 21:52:32 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#731: FILE: drivers/perfctr/virtual.h:1:
+/* $Id: virtual.h,v 1.8 2002/10/20 21:52:32 mikpe Exp $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#738: FILE: drivers/perfctr/virtual.h:8:
+extern int vperfctr_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#739: FILE: drivers/perfctr/virtual.h:9:
+extern void vperfctr_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#740: FILE: drivers/perfctr/virtual.h:10:
+extern int sys_vperfctr(unsigned int cmd, int whom, void *arg);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#746: FILE: drivers/perfctr/virtual.h:16:
+	return -ENOSYS;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#753: FILE: drivers/perfctr/virtual_compat.c:1:
+/* $Id: virtual_compat.c,v 1.1 2002/10/11 08:47:05 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#753: FILE: drivers/perfctr/virtual_compat.c:1:
+/* $Id: virtual_compat.c,v 1.1 2002/10/11 08:47:05 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#762: FILE: drivers/perfctr/virtual_compat.c:10:
+#include <asm/processor.h>

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#765: FILE: drivers/perfctr/virtual_compat.c:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: drivers/perfctr/virtual_compat.c:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: drivers/perfctr/virtual_compat.c:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#765: FILE: drivers/perfctr/virtual_compat.c:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: drivers/perfctr/virtual_compat.c:42:
+#endif^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#803: FILE: drivers/perfctr/virtual_compat.c:51:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/perfctr/virtual_compat.c:51:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/perfctr/virtual_compat.c:51:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#803: FILE: drivers/perfctr/virtual_compat.c:51:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#808: FILE: drivers/perfctr/virtual_compat.c:56:
+#define VPERFCTRFS_MAGIC	(('V'<<24)|('P'<<16)|('M'<<8)|('C'))
                         	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#825: FILE: drivers/perfctr/virtual_compat.c:73:
+	struct inode *root = new_inode(sb);
+	if( !root )

ERROR:SPACING: space prohibited after that open parenthesis '('
#825: FILE: drivers/perfctr/virtual_compat.c:73:
+	if( !root )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#825: FILE: drivers/perfctr/virtual_compat.c:73:
+	if( !root )

ERROR:SPACING: space required before the open parenthesis '('
#825: FILE: drivers/perfctr/virtual_compat.c:73:
+	if( !root )

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#827: FILE: drivers/perfctr/virtual_compat.c:75:
+	root->i_mode = S_IFDIR | S_IRUSR | S_IWUSR;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#828: FILE: drivers/perfctr/virtual_compat.c:76:
+	root->i_uid = root->i_gid = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#829: FILE: drivers/perfctr/virtual_compat.c:77:
+	root->i_atime = root->i_mtime = root->i_ctime = CURRENT_TIME;

ERROR:SPACING: space prohibited after that open parenthesis '('
#835: FILE: drivers/perfctr/virtual_compat.c:83:
+	if( !sb->s_root ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#835: FILE: drivers/perfctr/virtual_compat.c:83:
+	if( !sb->s_root ) {

ERROR:SPACING: space required before the open parenthesis '('
#835: FILE: drivers/perfctr/virtual_compat.c:83:
+	if( !sb->s_root ) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#836: FILE: drivers/perfctr/virtual_compat.c:84:
+		iput(root);
 		^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#868: FILE: drivers/perfctr/virtual_compat.h:1:
+/* $Id: virtual_compat.h,v 1.1 2002/10/11 08:47:05 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#868: FILE: drivers/perfctr/virtual_compat.h:1:
+/* $Id: virtual_compat.h,v 1.1 2002/10/11 08:47:05 mikpe Exp $

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#876: FILE: drivers/perfctr/virtual_compat.h:9:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#876: FILE: drivers/perfctr/virtual_compat.h:9:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#876: FILE: drivers/perfctr/virtual_compat.h:9:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#876: FILE: drivers/perfctr/virtual_compat.h:9:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,15)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#877: FILE: drivers/perfctr/virtual_compat.h:10:
+extern int ptrace_check_attach(struct task_struct *child, int kill);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#880: FILE: drivers/perfctr/virtual_compat.h:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: drivers/perfctr/virtual_compat.h:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#880: FILE: drivers/perfctr/virtual_compat.h:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#880: FILE: drivers/perfctr/virtual_compat.h:13:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#882: FILE: drivers/perfctr/virtual_compat.h:15:
+/* Gross hacks to simulate 2.5's get_sb_pseudo() and differently
+   shaped struct file_system_type in 2.4. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#882: FILE: drivers/perfctr/virtual_compat.h:15:
+   shaped struct file_system_type in 2.4. */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_file_system_type*' should also have an identifier name
#886: FILE: drivers/perfctr/virtual_compat.h:19:
+	struct super_block *(*get_sb)(struct perfctr_file_system_type*, int, char*, void*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#886: FILE: drivers/perfctr/virtual_compat.h:19:
+	struct super_block *(*get_sb)(struct perfctr_file_system_type*, int, char*, void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#886: FILE: drivers/perfctr/virtual_compat.h:19:
+	struct super_block *(*get_sb)(struct perfctr_file_system_type*, int, char*, void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#886: FILE: drivers/perfctr/virtual_compat.h:19:
+	struct super_block *(*get_sb)(struct perfctr_file_system_type*, int, char*, void*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#890: FILE: drivers/perfctr/virtual_compat.h:23:
+extern int perfctr_register_filesystem(struct perfctr_file_system_type*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#890: FILE: drivers/perfctr/virtual_compat.h:23:
+extern int perfctr_register_filesystem(struct perfctr_file_system_type*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_file_system_type*' should also have an identifier name
#890: FILE: drivers/perfctr/virtual_compat.h:23:
+extern int perfctr_register_filesystem(struct perfctr_file_system_type*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#891: FILE: drivers/perfctr/virtual_compat.h:24:
+extern void perfctr_unregister_filesystem(struct perfctr_file_system_type*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#891: FILE: drivers/perfctr/virtual_compat.h:24:
+extern void perfctr_unregister_filesystem(struct perfctr_file_system_type*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_file_system_type*' should also have an identifier name
#891: FILE: drivers/perfctr/virtual_compat.h:24:
+extern void perfctr_unregister_filesystem(struct perfctr_file_system_type*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#892: FILE: drivers/perfctr/virtual_compat.h:25:
+extern struct vfsmount *perfctr_kern_mount(struct perfctr_file_system_type*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#892: FILE: drivers/perfctr/virtual_compat.h:25:
+extern struct vfsmount *perfctr_kern_mount(struct perfctr_file_system_type*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_file_system_type*' should also have an identifier name
#892: FILE: drivers/perfctr/virtual_compat.h:25:
+extern struct vfsmount *perfctr_kern_mount(struct perfctr_file_system_type*);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#903: FILE: drivers/perfctr/virtual_compat.h:36:
+}
+#define kill_anon_super (void(*)(void))0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#903: FILE: drivers/perfctr/virtual_compat.h:36:
+#define kill_anon_super (void(*)(void))0

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 200 errors, 71 warnings, 35 checks, 865 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
