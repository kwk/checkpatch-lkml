CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bn)...) over kmalloc(sizeof(struct reiserfs_bitmap_node)...)
#186: FILE: fs/reiserfs/journal.c:155:
+	bn = kmalloc(sizeof(struct reiserfs_bitmap_node), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#253: FILE: fs/reiserfs/journal.c:2093:
+	log_blocks = kmalloc(get_desc_trans_len(desc) *
+			     sizeof(struct buffer_head *), GFP_NOFS);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#255: FILE: fs/reiserfs/journal.c:2095:
+	real_blocks = kmalloc(get_desc_trans_len(desc) *
+			      sizeof(struct buffer_head *), GFP_NOFS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*jl)...) over kzalloc(sizeof(struct reiserfs_journal_list)...)
#337: FILE: fs/reiserfs/journal.c:2450:
+	jl = kzalloc(sizeof(struct reiserfs_journal_list), GFP_NOFS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*th)...) over kmalloc(sizeof(struct reiserfs_transaction_handle)...)
#352: FILE: fs/reiserfs/journal.c:3018:
+	th = kmalloc(sizeof(struct reiserfs_transaction_handle), GFP_NOFS);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 2 warnings, 3 checks, 450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
