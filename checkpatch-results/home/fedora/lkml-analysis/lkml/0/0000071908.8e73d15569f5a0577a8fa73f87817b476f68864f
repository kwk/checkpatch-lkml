CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/key.h:324:
+extern int alloc_uid_keyring(struct user_struct *user,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: include/linux/key.h:354:
+#define alloc_uid_keyring(u,c)		0
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#295: FILE: security/keys/process_keys.c:80:
+	session_keyring = keyring_alloc(buf, user->uid, (gid_t) -1, ctx, 0, NULL);

CHECK:SPACING: No space is necessary after a cast
#304: FILE: security/keys/process_keys.c:90:
+	uid_keyring = keyring_alloc(buf, user->uid, (gid_t) -1, ctx, 0,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ksec)...) over kzalloc(sizeof(struct key_security_struct)...)
#393: FILE: security/selinux/hooks.c:4262:
+	ksec = kzalloc(sizeof(struct key_security_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: security/selinux/hooks.c:4282:
+static int selinux_key_permission(key_ref_t key_ref,
+			    struct task_struct *ctx,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#426: FILE: security/selinux/hooks.c:4295:
+	/* if no specific permissions are requested, we skip the
+	   permission check. No serious, additional covert channels

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: security/selinux/hooks.c:4296:
+	   appear to be created. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: security/selinux/include/av_perm_to_string.h:245:
+   S_(SECCLASS_KEY, KEY__VIEW, "view")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: security/selinux/include/av_perm_to_string.h:246:
+   S_(SECCLASS_KEY, KEY__READ, "read")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: security/selinux/include/av_perm_to_string.h:247:
+   S_(SECCLASS_KEY, KEY__WRITE, "write")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: security/selinux/include/av_perm_to_string.h:248:
+   S_(SECCLASS_KEY, KEY__SEARCH, "search")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: security/selinux/include/av_perm_to_string.h:249:
+   S_(SECCLASS_KEY, KEY__LINK, "link")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: security/selinux/include/av_perm_to_string.h:250:
+   S_(SECCLASS_KEY, KEY__SETATTR, "setattr")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: security/selinux/include/class_to_string.h:63:
+    S_("key")$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000071908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 5 checks, 383 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000071908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
