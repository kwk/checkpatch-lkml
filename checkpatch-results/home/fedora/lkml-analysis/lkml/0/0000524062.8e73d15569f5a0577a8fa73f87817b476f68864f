ERROR:SPACING: space required after that ',' (ctx:OxV)
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxO)
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=
                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=
                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=
                                                   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#55: FILE: fs/proc/base.c:42:
+int proc_pid_ulimit(struct task_struct*,char*);=0A=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#58: FILE: fs/proc/base.c:44:
struct vfsmount **mnt)=0A=

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#64: FILE: fs/proc/base.c:524:
+	PROC_PID_ULIMIT,=0A=
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#64: FILE: fs/proc/base.c:524:
+	PROC_PID_ULIMIT,=0A=
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#64: FILE: fs/proc/base.c:524:
+	PROC_PID_ULIMIT,=0A=
 	                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,^I"ulimit",^IS_IFREG|S_IRUGO),=0A=$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,	"ulimit",	S_IFREG|S_IRUGO),=0A=
                     	         	       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,	"ulimit",	S_IFREG|S_IRUGO),=0A=
                     	         	                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,	"ulimit",	S_IFREG|S_IRUGO),=0A=
                     	         	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,	"ulimit",	S_IFREG|S_IRUGO),=0A=
                     	         	                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#72: FILE: fs/proc/base.c:544:
+  E(PROC_PID_ULIMIT,	"ulimit",	S_IFREG|S_IRUGO),=0A=

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ';' (ctx:VxO)
#80: FILE: fs/proc/base.c:889:
+			break;=0A=
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#80: FILE: fs/proc/base.c:889:
+			break;=0A=
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#80: FILE: fs/proc/base.c:889:
+			break;=0A=
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#81: FILE: fs/proc/base.c:890:
+		case PROC_PID_ULIMIT:=0A=
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#81: FILE: fs/proc/base.c:890:
+		case PROC_PID_ULIMIT:=0A=
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#81: FILE: fs/proc/base.c:890:
+		case PROC_PID_ULIMIT:=0A=

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#82: FILE: fs/proc/base.c:891:
+			inode->i_fop =3D &proc_info_file_operations;=0A=
 			             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#82: FILE: fs/proc/base.c:891:
+			inode->i_fop =3D &proc_info_file_operations;=0A=
 			                 ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#82: FILE: fs/proc/base.c:891:
+			inode->i_fop =3D &proc_info_file_operations;=0A=
 			                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#82: FILE: fs/proc/base.c:891:
+			inode->i_fop =3D &proc_info_file_operations;=0A=
 			                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#82: FILE: fs/proc/base.c:891:
+			inode->i_fop =3D &proc_info_file_operations;=0A=
 			                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#83: FILE: fs/proc/base.c:892:
+			inode->u.proc_i.op.proc_read =3D proc_pid_ulimit;=0A=
 			                             ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#83: FILE: fs/proc/base.c:892:
+			inode->u.proc_i.op.proc_read =3D proc_pid_ulimit;=0A=
 			                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#83: FILE: fs/proc/base.c:892:
+			inode->u.proc_i.op.proc_read =3D proc_pid_ulimit;=0A=
 			                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#83: FILE: fs/proc/base.c:892:
+			inode->u.proc_i.op.proc_read =3D proc_pid_ulimit;=0A=
 			                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#110: FILE: fs/proc/array.c:512:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#110: FILE: fs/proc/array.c:512:
+=0A=
    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: fs/proc/array.c:513:
+static int sprintf_rlim (unsigned long rlim, char delim, char * =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#113: FILE: fs/proc/array.c:514:
+static int sprintf_rlim (unsigned long rlim, char delim, char * =
+{=0A=

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: fs/proc/array.c:514:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#113: FILE: fs/proc/array.c:514:
+{=0A=
     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=
 	                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#114: FILE: fs/proc/array.c:515:
+	if (rlim =3D=3D RLIM_INFINITY) {=0A=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: fs/proc/array.c:516:
+		return sprintf (buffer, "unlimited%c", delim);=0A=

ERROR:SPACING: space required after that ';' (ctx:VxO)
#115: FILE: fs/proc/array.c:516:
+		return sprintf (buffer, "unlimited%c", delim);=0A=
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#115: FILE: fs/proc/array.c:516:
+		return sprintf (buffer, "unlimited%c", delim);=0A=
 		                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#115: FILE: fs/proc/array.c:516:
+		return sprintf (buffer, "unlimited%c", delim);=0A=
 		                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#116: FILE: fs/proc/array.c:517:
+	} else {=0A=
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#116: FILE: fs/proc/array.c:517:
+	} else {=0A=
 	           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#116: FILE: fs/proc/array.c:517:
+	} else {=0A=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: fs/proc/array.c:518:
+		return sprintf (buffer, "%lu%c", rlim, delim);=0A=

ERROR:SPACING: space required after that ';' (ctx:VxO)
#117: FILE: fs/proc/array.c:518:
+		return sprintf (buffer, "%lu%c", rlim, delim);=0A=
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#117: FILE: fs/proc/array.c:518:
+		return sprintf (buffer, "%lu%c", rlim, delim);=0A=
 		                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#117: FILE: fs/proc/array.c:518:
+		return sprintf (buffer, "%lu%c", rlim, delim);=0A=
 		                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#118: FILE: fs/proc/array.c:519:
+	}=0A=
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#118: FILE: fs/proc/array.c:519:
+	}=0A=
 	    ^

ERROR:SPACING: space required after that close brace '}'
#118: FILE: fs/proc/array.c:519:
+	}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: fs/proc/array.c:520:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#119: FILE: fs/proc/array.c:520:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#119: FILE: fs/proc/array.c:520:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#120: FILE: fs/proc/array.c:521:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#120: FILE: fs/proc/array.c:521:
+=0A=
    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: fs/proc/array.c:522:
+int proc_pid_ulimit(struct task_struct *task, char * buffer)=0A=

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: fs/proc/array.c:522:
+int proc_pid_ulimit(struct task_struct *task, char * buffer)=0A=
                                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#121: FILE: fs/proc/array.c:522:
+int proc_pid_ulimit(struct task_struct *task, char * buffer)=0A=
                                                                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#122: FILE: fs/proc/array.c:523:
+int proc_pid_ulimit(struct task_struct *task, char * buffer)=0A=
+{=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: fs/proc/array.c:523:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#122: FILE: fs/proc/array.c:523:
+{=0A=
     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#123: FILE: fs/proc/array.c:524:
+	int i, len;=0A=
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#123: FILE: fs/proc/array.c:524:
+	int i, len;=0A=
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#123: FILE: fs/proc/array.c:524:
+	int i, len;=0A=
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#124: FILE: fs/proc/array.c:525:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#124: FILE: fs/proc/array.c:525:
+=0A=
    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: fs/proc/array.c:526:
+	for (i =3D 0, len =3D 0 ; i < RLIM_NLIMITS; i++) {=0A=
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: fs/proc/array.c:526:
+	for (i =3D 0, len =3D 0 ; i < RLIM_NLIMITS; i++) {=0A=
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: fs/proc/array.c:526:
+	for (i =3D 0, len =3D 0 ; i < RLIM_NLIMITS; i++) {=0A=
 	                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#125: FILE: fs/proc/array.c:526:
+	for (i =3D 0, len =3D 0 ; i < RLIM_NLIMITS; i++) {=0A=
 	                                                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#125: FILE: fs/proc/array.c:526:
+	for (i =3D 0, len =3D 0 ; i < RLIM_NLIMITS; i++) {=0A=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: fs/proc/array.c:527:
+		len +=3D sprintf (buffer + len, "%d: ", i);=0A=

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#126: FILE: fs/proc/array.c:527:
+		len +=3D sprintf (buffer + len, "%d: ", i);=0A=
 		    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#126: FILE: fs/proc/array.c:527:
+		len +=3D sprintf (buffer + len, "%d: ", i);=0A=
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#126: FILE: fs/proc/array.c:527:
+		len +=3D sprintf (buffer + len, "%d: ", i);=0A=
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#126: FILE: fs/proc/array.c:527:
+		len +=3D sprintf (buffer + len, "%d: ", i);=0A=
 		                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: fs/proc/array.c:528:
+		len +=3D sprintf_rlim (task->rlim[i].rlim_cur, ' ', buffer + =

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#127: FILE: fs/proc/array.c:528:
+		len +=3D sprintf_rlim (task->rlim[i].rlim_cur, ' ', buffer + =
 		    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: fs/proc/array.c:529:
+		len +=3D sprintf_rlim (task->rlim[i].rlim_max, '\n',buffer + =

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#129: FILE: fs/proc/array.c:529:
+		len +=3D sprintf_rlim (task->rlim[i].rlim_max, '\n',buffer + =
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: fs/proc/array.c:529:
+		len +=3D sprintf_rlim (task->rlim[i].rlim_max, '\n',buffer + =
 		                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: fs/proc/array.c:530:
+	}=0A=
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#131: FILE: fs/proc/array.c:530:
+	}=0A=
 	    ^

ERROR:SPACING: space required after that close brace '}'
#131: FILE: fs/proc/array.c:530:
+	}=0A=

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/proc/array.c:531:
+        return len;=0A=$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/proc/array.c:531:
+        return len;=0A=$

ERROR:SPACING: space required after that ';' (ctx:VxO)
#132: FILE: fs/proc/array.c:531:
+        return len;=0A=
                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#132: FILE: fs/proc/array.c:531:
+        return len;=0A=
                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#132: FILE: fs/proc/array.c:531:
+        return len;=0A=
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: fs/proc/array.c:532:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#133: FILE: fs/proc/array.c:532:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#133: FILE: fs/proc/array.c:532:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#134: FILE: fs/proc/array.c:533:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#134: FILE: fs/proc/array.c:533:
+=0A=
    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 88 errors, 12 warnings, 2 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
