ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#72: FILE: arch/alpha/kernel/pci.c:29:
+# define DBGC(args)     printk args

WARNING:MISPLACED_INIT: __initdata should be placed after vga_enabled
#83: FILE: arch/alpha/kernel/pci.c:118:
+static int __initdata vga_enabled;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: arch/alpha/kernel/pci.c:125:
+	/* If no display devices are enabled, enable
+	   the first one we've found. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#90: FILE: arch/alpha/kernel/pci.c:125:
+	   the first one we've found. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#97: FILE: arch/alpha/kernel/pci.c:132:
+	/* These (may) have I/O scattered all around and may not
+	   use I/O base address registers at all.  So we just have to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#98: FILE: arch/alpha/kernel/pci.c:133:
+	   always enable IO to these devices.  */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#99: FILE: arch/alpha/kernel/pci.c:134:
+	else if ((dev->class >> 8) == PCI_CLASS_NOT_DEFINED ||
[...]
+			u16 cmd;

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: arch/alpha/kernel/pci.c:137:
+			u16 cmd;
+			pci_read_config_word(dev, PCI_COMMAND, &cmd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: arch/alpha/kernel/pci.c:274:
+	/* Propagate hose info into the subordinate devices.
+	   Setup FBB/PERR/SERR depending on the bus capabilities.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: arch/alpha/kernel/pci.c:274:
+	   Setup FBB/PERR/SERR depending on the bus capabilities.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: arch/alpha/kernel/pci.c:309:
+		/* First, disable the device to avoid side
+		   effects of possibly overlapping I/O and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: arch/alpha/kernel/pci.c:311:
+		   Don't touch VGAs and all sorts of bridges.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: arch/alpha/kernel/pci.c:315:
+			/* Check that at least one display device
+			   is enabled.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: arch/alpha/kernel/pci.c:315:
+			   is enabled.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#204: FILE: arch/alpha/kernel/pci.c:326:
+		/* Disable the ROM.  Several devices act funny (ie. do not
+		   respond to memory space writes) when it is left enabled.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: arch/alpha/kernel/pci.c:327:
+		   A good example are QlogicISP adapters.  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/alpha/kernel/pci.c:437:
+		DBGC((KERN_INFO "PCI: Enabling device: (%s), cmd %x\n",
+				dev->name, cmd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: arch/alpha/kernel/pci.c:449:
+	pci_write_config_word(dev, PCI_CACHE_LINE_SIZE,
+			(32 << 8) | (L1_CACHE_BYTES / sizeof(u32)));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#264: FILE: arch/alpha/kernel/pci.c:451:
+#if 0	/* ??? Turning on MWI might be dangerous... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#270: FILE: arch/alpha/kernel/pci.c:457:
+		/* If this cacheline size is supported,
+		   turn on write/invalidate. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#270: FILE: arch/alpha/kernel/pci.c:457:
+		   turn on write/invalidate. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#296: FILE: arch/alpha/kernel/pci.c:483:
+		/* PCI-PCI bridge - set default latency (32)
+		   for secondary bus. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: arch/alpha/kernel/pci.c:483:
+		   for secondary bus. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/pci/setup-bus.c:135:
+	pci_write_config_word(bridge, PCI_IO_BASE_UPPER16,
+			ranges.io_start >> 16);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: drivers/pci/setup-bus.c:137:
+	pci_write_config_word(bridge, PCI_IO_LIMIT_UPPER16,
+			ranges.io_end >> 16);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#470: FILE: drivers/pci/setup-bus.c:159:
+/* Check whether the bridge supports I/O forwarding.
+   If not, its I/O base/limit register must be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: drivers/pci/setup-bus.c:160:
+   read-only and read as 0. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#485: FILE: drivers/pci/setup-bus.c:174:
+	printk(KERN_WARNING "PCI: bridge %s does not support I/O forwarding!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/pci/setup-bus.c:175:
+	printk(KERN_WARNING "PCI: bridge %s does not support I/O forwarding!\n",
+				bridge->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#524: FILE: drivers/pci/setup-bus.c:210:
+		/* For now, set IO and MEM limits of this bus
+		   same as limits of its parent bus. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#524: FILE: drivers/pci/setup-bus.c:210:
+		   same as limits of its parent bus. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#531: FILE: drivers/pci/setup-bus.c:217:
+		/* PCI-to-PCI Bridge Architecture Specification rev. 1.1 (1998)
+		   requires that if there is no I/O ports or memory behind the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#535: FILE: drivers/pci/setup-bus.c:221:
+		   This is done automatically for empty (start==end) ranges. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#542: FILE: drivers/pci/setup-bus.c:228:
+			printk(KERN_ERR "PCI: failed to request IO "

WARNING:SPLIT_STRING: quoted string split across lines
#543: FILE: drivers/pci/setup-bus.c:229:
+			printk(KERN_ERR "PCI: failed to request IO "
+					"for bus %d\n",	b->number);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#546: FILE: drivers/pci/setup-bus.c:232:
+			printk(KERN_ERR "PCI: failed to request MEM "

WARNING:SPLIT_STRING: quoted string split across lines
#547: FILE: drivers/pci/setup-bus.c:233:
+			printk(KERN_ERR "PCI: failed to request MEM "
+					"for bus %d\n", b->number);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#666: FILE: include/asm-alpha/machvec.h:82:
+	u16 (*pci_control)(struct pci_bus *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#716: FILE: include/linux/pci.h:498:
+void pcibios_init_bus(struct pci_bus *);	/* before each bus scan */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_bus *' should also have an identifier name
#717: FILE: include/linux/pci.h:499:
+void pcibios_fixup_bus(struct pci_bus *);	/* after each bus scan */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000490446.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 34 warnings, 5 checks, 564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000490446.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
