WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	           ChangeSet	1.548   -> 1.550  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	drivers/video/fbmem.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	drivers/sbus/audio/audio.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	arch/i386/kernel/cpuid.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	arch/cris/drivers/gpio.c	1.6     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	drivers/block/acsi_slm.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	drivers/usb/misc/tiglusb.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	   drivers/char/lp.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	arch/m68k/atari/joystick.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#	drivers/net/wan/cosa.c	1.9     -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#	drivers/sbus/char/bpp.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#	arch/m68k/bvme6000/rtc.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
#	  drivers/char/raw.c	1.18    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
#	drivers/char/istallion.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#	drivers/telephony/phonedev.c	1.4     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#	arch/cris/drivers/i2c.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#	drivers/net/wan/hdlc_ppp.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#	arch/cris/drivers/sync_serial.c	1.4     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
#	drivers/media/video/videodev.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
#	  sound/core/sound.c	1.6     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
#	drivers/char/drm/radeon_drv.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
#	drivers/ide/ide-tape.c	1.53    -> 1.54   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#94: 
#	arch/x86_64/kernel/msr.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#95: 
#	drivers/char/stallion.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#96: 
#	drivers/ieee1394/ieee1394_core.c	1.15    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
#	arch/x86_64/kernel/cpuid.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#98: 
#	drivers/block/paride/pt.c	1.10    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#99: 
#	drivers/scsi/dpt_i2o.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
#	drivers/char/vc_screen.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#101: 
#	fs/intermezzo/psdev.c	1.8     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#102: 
#	arch/sparc64/solaris/socksys.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#103: 
#	drivers/isdn/i4l/isdn_common.c	1.21    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#104: 
#	drivers/ieee1394/pcilynx.c	1.19    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#105: 
#	drivers/atm/atmdev_init.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#106: 
#	arch/cris/drivers/eeprom.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#107: 
#	drivers/mtd/mtdblock.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#108: 
#	drivers/char/ftape/zftape/zftape-init.c	1.8     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#109: 
#	net/netlink/netlink_dev.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#110: 
#	 drivers/char/dtlk.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#111: 
#	arch/i386/kernel/msr.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#112: 
#	  sound/sound_core.c	1.10    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#113: 
#	drivers/s390/char/tapechar.c	1.7     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#114: 
#	drivers/char/ppdev.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#115: 
#	   drivers/scsi/sg.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#116: 
#	 drivers/scsi/osst.c	1.15    -> 1.18   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#117: 
#	drivers/mtd/mtdblock_ro.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#118: 
#	drivers/char/tpqic02.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
#	drivers/macintosh/adb.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
#	drivers/char/dsp56k.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#121: 
#	drivers/input/input.c	1.11    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
#	drivers/sbus/char/vfc_dev.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#123: 
#	drivers/char/tty_io.c	1.35    -> 1.36   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#124: 
#	drivers/s390/char/tubfs.c	1.5     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#125: 
#	    drivers/md/lvm.c	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#126: 
#	   drivers/scsi/st.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
#	drivers/mtd/mtdchar.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
#	drivers/sbus/char/sunkbd.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#129: 
#	 drivers/pcmcia/ds.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#130: 
#	drivers/sgi/char/shmiq.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#131: 
#	drivers/i2c/i2c-dev.c	1.11    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#132: 
#	drivers/char/drm/drm_stub.h	1.3     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#133: 
#	drivers/block/paride/pg.c	1.10    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#134: 
#	drivers/isdn/divert/divert_procfs.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#135: 
#	drivers/macintosh/rtc.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#136: 
#	drivers/net/ppp_generic.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
#	drivers/isdn/capi/capi.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
#	drivers/usb/core/file.c	1.3     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#139: 
#	drivers/char/ip2main.c	1.12    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#141: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#142: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#143: 
# 02/07/30	dave@nighthawk.sr71.net	1.543.1.1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#144: 
# 1/2 should cover all devices which use register_chrdev directly

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#145: 
#     next one will cover devfs_register_chrdev

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#146: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#147: 
# chrdev_open() hold the BKL around all calls to the character drivers' 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#148: 
# open functions.  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#149: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#150: 
# This patch shifts that call into the individual open()s.  The BKL will 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#151: 
# remain in chrdev_open() until the module unload races are fixed, but 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#152: 
# this makes it unnecessary for any other reason.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#153: 
#  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#154: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#155: 
# 02/07/30	dave@nighthawk.sr71.net	1.543.1.2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#156: 
# part 2/2 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#157: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#158: 
# BKL push into character devices' open() functions

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#159: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#160: 
# This changeset should cover all of the character devices which use

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#161: 
# the devfs register function.  Combined with the previous patch, it 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#162: 
# should now be safe for the _drivers_ if the BKL is gone from 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#163: 
# chrdev_open().  But, this can't be done yet because of module 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#164: 
# load/unload races. 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#165: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#166: 
# 02/07/30	dave@nighthawk.sr71.net	1.543.1.3

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#167: 
# lock/unlock_kernel() need to have smp_lock.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#168: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#169: 
# 02/07/30	dave@nighthawk.sr71.net	1.543.1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#170: 
# Fix a few little problems with returning before unlocking

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#171: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#172: 
# 02/07/30	dave@nighthawk.sr71.net	1.549

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#173: 
# Merge bk://linus.bkbits.net/linux-2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#174: 
# into nighthawk.sr71.net:/home/dave/lse/linux/2.5/bk/linux-2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#175: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#176: 
# 02/07/31	dave@nighthawk.sr71.net	1.550

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#177: 
# Push the BKL into a few more open() functions that were missed in t

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#178: 
# he last couple of patches

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#179: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#180: 
# Fix a few includes

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#181: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#182: 
# Fix a few rtc drivers so they don't need the BKL at all

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#183: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#184: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#186: 
--- a/arch/cris/drivers/eeprom.c	Wed Jul 31 10:25:53 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/cris/drivers/eeprom.c:427:
+  int ret = -EFAULT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/cris/drivers/eeprom.c:428:
+  lock_kernel();^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: arch/cris/drivers/eeprom.c:428:
+  int ret = -EFAULT;
+  lock_kernel();	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/cris/drivers/eeprom.c:428:
+  lock_kernel();^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#195: FILE: arch/cris/drivers/eeprom.c:430:
   if(MINOR(inode->i_rdev) != EEPROM_MINOR_NR)
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#195: FILE: arch/cris/drivers/eeprom.c:430:
   if(MINOR(inode->i_rdev) != EEPROM_MINOR_NR)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/cris/drivers/eeprom.c:431:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/cris/drivers/eeprom.c:432:
+     ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/cris/drivers/eeprom.c:433:
+     goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/cris/drivers/eeprom.c:434:
+  }$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: arch/cris/drivers/eeprom.c:435:
   if(MAJOR(inode->i_rdev) != EEPROM_MAJOR_NR)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#201: FILE: arch/cris/drivers/eeprom.c:435:
   if(MAJOR(inode->i_rdev) != EEPROM_MAJOR_NR)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/cris/drivers/eeprom.c:436:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/cris/drivers/eeprom.c:437:
+     ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/cris/drivers/eeprom.c:438:
+     goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/cris/drivers/eeprom.c:439:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/cris/drivers/eeprom.c:444:
+    ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/cris/drivers/eeprom.c:445:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/cris/drivers/eeprom.c:450:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/cris/drivers/eeprom.c:451:
+  return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: arch/cris/drivers/gpio.c:223:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: arch/cris/drivers/sync_serial.c:343:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/i386/kernel/cpuid.c:136:
+  int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/i386/kernel/cpuid.c:138:
+  lock_kernel();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#340: FILE: arch/i386/kernel/cpuid.c:140:
   if ( !(cpu_online_map & (1UL << cpu)) )
+    ret = -ENXIO;		/* No such CPU */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/i386/kernel/cpuid.c:141:
+    ret = -ENXIO;^I^I/* No such CPU */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/i386/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#345: FILE: arch/i386/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )
+    ret = -EIO;		/* CPUID not supported */

ERROR:SPACING: space prohibited after that open parenthesis '('
#345: FILE: arch/i386/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#345: FILE: arch/i386/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/i386/kernel/cpuid.c:143:
+    ret = -EIO;^I^I/* CPUID not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/i386/kernel/cpuid.c:145:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/i386/kernel/cpuid.c:146:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/i386/kernel/msr.c:236:
+  int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/i386/kernel/msr.c:238:
+  lock_kernel();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#365: FILE: arch/i386/kernel/msr.c:240:
   if ( !(cpu_online_map & (1UL << cpu)) )
+    ret = -ENXIO;		/* No such CPU */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/i386/kernel/msr.c:241:
+    ret = -ENXIO;^I^I/* No such CPU */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/i386/kernel/msr.c:242:
+  else if ( !cpu_has(c, X86_FEATURE_MSR) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#372: FILE: arch/i386/kernel/msr.c:242:
+  else if ( !cpu_has(c, X86_FEATURE_MSR) )
+    ret = -EIO;		/* MSR not supported */

ERROR:SPACING: space prohibited after that open parenthesis '('
#372: FILE: arch/i386/kernel/msr.c:242:
+  else if ( !cpu_has(c, X86_FEATURE_MSR) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#372: FILE: arch/i386/kernel/msr.c:242:
+  else if ( !cpu_has(c, X86_FEATURE_MSR) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/i386/kernel/msr.c:243:
+    ret = -EIO;^I^I/* MSR not supported */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: arch/i386/kernel/msr.c:244:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/i386/kernel/msr.c:244:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: arch/i386/kernel/msr.c:245:
+  unlock_kernel(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/i386/kernel/msr.c:245:
+  unlock_kernel(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/i386/kernel/msr.c:246:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/m68k/atari/joystick.c:75:
+    int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/m68k/atari/joystick.c:77:
+    lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/m68k/atari/joystick.c:79:
+    if (!DIGITAL_JOY(inode->i_rdev) || minor > 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/m68k/atari/joystick.c:82:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/m68k/atari/joystick.c:83:
+    if (joystick[minor].active) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/m68k/atari/joystick.c:86:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/m68k/atari/joystick.c:91:
+    unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/m68k/atari/joystick.c:92:
+    return ret;$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#421: FILE: arch/m68k/bvme6000/rtc.c:144:
+	if(test_and_set_bit(0,&rtc_status))
 	                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#421: FILE: arch/m68k/bvme6000/rtc.c:144:
+	if(test_and_set_bit(0,&rtc_status))
 	                      ^

ERROR:SPACING: space required before the open parenthesis '('
#421: FILE: arch/m68k/bvme6000/rtc.c:144:
+	if(test_and_set_bit(0,&rtc_status))

ERROR:SPACING: space required after that ',' (ctx:VxO)
#433: FILE: arch/m68k/bvme6000/rtc.c:152:
+	clear_bit(0,&rtc_status);
 	           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#433: FILE: arch/m68k/bvme6000/rtc.c:152:
+	clear_bit(0,&rtc_status);
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: arch/sparc64/solaris/socksys.c:114:
+        if (!sock) {^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/sparc64/solaris/socksys.c:114:
+        if (!sock) {^I$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/sparc64/solaris/socksys.c:114:
+        if (!sock) {^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/x86_64/kernel/cpuid.c:136:
+  int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: arch/x86_64/kernel/cpuid.c:138:
+  lock_kernel();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#492: FILE: arch/x86_64/kernel/cpuid.c:140:
   if ( !(cpu_online_map & (1UL << cpu)) )
+    ret = -ENXIO;		/* No such CPU */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/x86_64/kernel/cpuid.c:141:
+    ret = -ENXIO;^I^I/* No such CPU */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/x86_64/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#497: FILE: arch/x86_64/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )
+    ret = -EIO;		/* CPUID not supported */

ERROR:SPACING: space prohibited after that open parenthesis '('
#497: FILE: arch/x86_64/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#497: FILE: arch/x86_64/kernel/cpuid.c:142:
+  else if ( c->cpuid_level < 0 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/x86_64/kernel/cpuid.c:143:
+    ret = -EIO;^I^I/* CPUID not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/x86_64/kernel/cpuid.c:145:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/x86_64/kernel/msr.c:237:
+  int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: arch/x86_64/kernel/msr.c:239:
+  lock_kernel();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: arch/x86_64/kernel/msr.c:240:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/x86_64/kernel/msr.c:240:
+ $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#516: FILE: arch/x86_64/kernel/msr.c:241:
   if ( !(cpu_online_map & (1UL << cpu)) )
+    ret = -ENXIO;		/* No such CPU */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/x86_64/kernel/msr.c:242:
+    ret = -ENXIO;^I^I/* No such CPU */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#519: FILE: arch/x86_64/kernel/msr.c:243:
   if ( !cpu_has(c, X86_FEATURE_MSR) )
+    ret = -EIO;		/* MSR not supported */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/x86_64/kernel/msr.c:244:
+    ret = -EIO;^I^I/* MSR not supported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/x86_64/kernel/msr.c:246:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: arch/x86_64/kernel/msr.c:247:
+  return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/block/paride/pg.c:512:
+^Iif ((unit >= PG_UNITS) || (!PG.present)) { $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'unit >= PG_UNITS'
#589: FILE: drivers/block/paride/pg.c:512:
+	if ((unit >= PG_UNITS) || (!PG.present)) { 

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!PG.present'
#589: FILE: drivers/block/paride/pg.c:512:
+	if ((unit >= PG_UNITS) || (!PG.present)) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/block/paride/pt.c:630:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: drivers/block/paride/pt.c:631:
+        if ((unit >= PT_UNITS) || (!PT.present)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/block/paride/pt.c:631:
+        if ((unit >= PT_UNITS) || (!PT.present)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'unit >= PT_UNITS'
#630: FILE: drivers/block/paride/pt.c:631:
+        if ((unit >= PT_UNITS) || (!PT.present)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!PT.present'
#630: FILE: drivers/block/paride/pt.c:631:
+        if ((unit >= PT_UNITS) || (!PT.present)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#638: FILE: drivers/block/paride/pt.c:638:
+		eturn -EBUSY;
 		      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: drivers/char/drm/drm_stub.h:58:
+^Iif (!DRM(stub_list) || !DRM(stub_list)[minor].fops) $

CHECK:CAMELCASE: Avoid CamelCase: <i2ChanStrPtr>
#817: FILE: drivers/char/ip2main.c:1593:
+	i2ChanStrPtr pCh;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pCh>
#817: FILE: drivers/char/ip2main.c:1593:
+	i2ChanStrPtr pCh;

CHECK:CAMELCASE: Avoid CamelCase: <DevTable>
#821: FILE: drivers/char/ip2main.c:1597:
+	pCh = DevTable[minor(tty->device)];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#913: FILE: drivers/char/istallion.c:1025:
+#define returnout(x) ret=x;goto out;
                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#913: FILE: drivers/char/istallion.c:1025:
+#define returnout(x) ret=x;goto out;
                           ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#913: FILE: drivers/char/istallion.c:1025:
+#define returnout(x) ret=x;goto out;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#913: FILE: drivers/char/istallion.c:1025:
+#define returnout(x) ret=x;goto out;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#913: FILE: drivers/char/istallion.c:1025:
+#define returnout(x) ret=x;goto out;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: drivers/char/ppdev.c:648:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: drivers/char/ppdev.c:648:
+ $

CHECK:SPACING: No space is necessary after a cast
#1167: FILE: drivers/char/stallion.c:1032:
+	if (brdp == (stlbrd_t *) NULL) {

CHECK:SPACING: No space is necessary after a cast
#1190: FILE: drivers/char/stallion.c:1054:
+	if (portp == (stlport_t *) NULL) {

CHECK:SPACING: No space is necessary after a cast
#1204: FILE: drivers/char/stallion.c:1073:
+			if (portp->tx.buf == (char *) NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1208: FILE: drivers/char/stallion.c:1077:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1223: FILE: drivers/char/stallion.c:1102:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: drivers/char/stallion.c:1124:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: drivers/char/stallion.c:1139:
+^I^I^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1271: FILE: drivers/char/stallion.c:1141:
+			if ((rc = stl_waitcarrier(portp, filp)) != 0) {
 			                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1271: FILE: drivers/char/stallion.c:1141:
+			if ((rc = stl_waitcarrier(portp, filp)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: drivers/char/stallion.c:1145:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1332: FILE: drivers/char/tty_io.c:1316:
+                        retval = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: drivers/char/tty_io.c:1316:
+                        retval = -ENODEV;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1362: FILE: drivers/char/tty_io.c:1362:
+^Iif (retval) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1400: FILE: drivers/char/vc_screen.c:462:
+^Iif(currcons && !vc_cons_allocated(currcons-1)) {^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1400: FILE: drivers/char/vc_screen.c:462:
+	if(currcons && !vc_cons_allocated(currcons-1)) {	
 	                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1400: FILE: drivers/char/vc_screen.c:462:
+	if(currcons && !vc_cons_allocated(currcons-1)) {	

WARNING:LINE_SPACING: Missing a blank line after declarations
#1424: FILE: drivers/i2c/i2c-dev.c:388:
+	int ret = 0;
+	lock_kernel();

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1440: FILE: drivers/i2c/i2c-dev.c:401:
+	if(! (client = kmalloc(sizeof(struct i2c_client),GFP_KERNEL))) {
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1440: FILE: drivers/i2c/i2c-dev.c:401:
+	if(! (client = kmalloc(sizeof(struct i2c_client),GFP_KERNEL))) {
 	                                                ^

ERROR:SPACING: space required before the open parenthesis '('
#1440: FILE: drivers/i2c/i2c-dev.c:401:
+	if(! (client = kmalloc(sizeof(struct i2c_client),GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1440: FILE: drivers/i2c/i2c-dev.c:401:
+	if(! (client = kmalloc(sizeof(struct i2c_client),GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*client)...) over kmalloc(sizeof(struct i2c_client)...)
#1440: FILE: drivers/i2c/i2c-dev.c:401:
+	if(! (client = kmalloc(sizeof(struct i2c_client),GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1476: FILE: drivers/ide/ide-tape.c:4877:
+	if ((drive = get_drive_ptr (inode->i_rdev)) == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_rdev'
#1476: FILE: drivers/ide/ide-tape.c:4877:
+	if ((drive = get_drive_ptr (inode->i_rdev)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1476: FILE: drivers/ide/ide-tape.c:4877:
+	if ((drive = get_drive_ptr (inode->i_rdev)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1484: FILE: drivers/ide/ide-tape.c:4883:
+	if (test_and_set_bit (IDETAPE_BUSY, &tape->flags)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1567: FILE: drivers/ieee1394/pcilynx.c:722:
+        int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/ieee1394/pcilynx.c:722:
+        int ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: drivers/ieee1394/pcilynx.c:728:
+                ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: drivers/ieee1394/pcilynx.c:728:
+                ret = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1580: FILE: drivers/ieee1394/pcilynx.c:732:
+                if (cid >= num_of_cards || !cards[cid].aux_port) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: drivers/ieee1394/pcilynx.c:732:
+                if (cid >= num_of_cards || !cards[cid].aux_port) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1581: FILE: drivers/ieee1394/pcilynx.c:733:
+                        ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: drivers/ieee1394/pcilynx.c:733:
+                        ret = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: drivers/ieee1394/pcilynx.c:739:
+                if (cid >= num_of_cards || !cards[cid].local_rom) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: drivers/ieee1394/pcilynx.c:739:
+                if (cid >= num_of_cards || !cards[cid].local_rom) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: drivers/ieee1394/pcilynx.c:740:
+                        ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/ieee1394/pcilynx.c:740:
+                        ret = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1600: FILE: drivers/ieee1394/pcilynx.c:748:
+                if (cid >= num_of_cards || !cards[cid].local_ram) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: drivers/ieee1394/pcilynx.c:748:
+                if (cid >= num_of_cards || !cards[cid].local_ram) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1601: FILE: drivers/ieee1394/pcilynx.c:749:
+                 ^Iret = -ENXIO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1601: FILE: drivers/ieee1394/pcilynx.c:749:
+                 ^Iret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1601: FILE: drivers/ieee1394/pcilynx.c:749:
+                 ^Iret = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: drivers/ieee1394/pcilynx.c:756:
+        if (md == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: drivers/ieee1394/pcilynx.c:756:
+        if (md == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!md"
#1610: FILE: drivers/ieee1394/pcilynx.c:756:
+        if (md == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#1611: FILE: drivers/ieee1394/pcilynx.c:757:
+                ret = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1611: FILE: drivers/ieee1394/pcilynx.c:757:
+                ret = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1624: FILE: drivers/ieee1394/pcilynx.c:782:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: drivers/ieee1394/pcilynx.c:782:
+        return ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1636: FILE: drivers/input/input.c:223:
+	int ret = 0;
+	lock_kernel();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1658: FILE: drivers/input/input.c:646:
+	if (!handler || !(new_fops = fops_get(handler->fops))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1689: FILE: drivers/isdn/capi/capi.c:938:
+	int ret = 0;
+	lock_kernel();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1690: FILE: drivers/isdn/capi/capi.c:939:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1694: FILE: drivers/isdn/capi/capi.c:942:
+	else if ((file->private_data = capidev_alloc()) == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1733: FILE: drivers/isdn/i4l/isdn_common.c:974:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1766: FILE: drivers/isdn/i4l/isdn_common.c:1697:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adb_controller"
#1790: FILE: drivers/macintosh/adb.c:647:
+	if (minor(inode->i_rdev) > 0 || adb_controller == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1822: FILE: drivers/macintosh/rtc.c:100:
+	if (test_and_set_bit(0,&rtc_busy))
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1822: FILE: drivers/macintosh/rtc.c:100:
+	if (test_and_set_bit(0,&rtc_busy))
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1835: FILE: drivers/macintosh/rtc.c:111:
+	clear_bit(0,&rtc_busy);
 	           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1835: FILE: drivers/macintosh/rtc.c:111:
+	clear_bit(0,&rtc_busy);
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1994: FILE: drivers/mtd/mtdblock_ro.c:47:
+	int ret=0;
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2035: FILE: drivers/mtd/mtdchar.c:71:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2095: FILE: drivers/net/ppp_generic.c:342:
+	int ret=0;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2117: FILE: drivers/net/wan/cosa.c:614:
+	int err=0, flags;
 	       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2118: FILE: drivers/net/wan/cosa.c:615:
+	int err=0, flags;
+	lock_kernel();

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2175: FILE: drivers/net/wan/cosa.c:952:
+		& ((1<<CARD_MINOR_BITS)-1)) >= cosa->nchannels) {
 		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2175: FILE: drivers/net/wan/cosa.c:952:
+		& ((1<<CARD_MINOR_BITS)-1)) >= cosa->nchannels) {
 		                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2241: FILE: drivers/pcmcia/ds.c:564:
+    int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2243: FILE: drivers/pcmcia/ds.c:566:
+    lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2248: FILE: drivers/pcmcia/ds.c:569:
+    if ((i >= sockets) || (sockets == 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= sockets'
#2248: FILE: drivers/pcmcia/ds.c:569:
+    if ((i >= sockets) || (sockets == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sockets == 0'
#2248: FILE: drivers/pcmcia/ds.c:569:
+    if ((i >= sockets) || (sockets == 0)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2251: FILE: drivers/pcmcia/ds.c:572:
+    }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2256: FILE: drivers/pcmcia/ds.c:575:
+	if (s->state & SOCKET_BUSY) {
+	    ret = -EBUSY;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2256: FILE: drivers/pcmcia/ds.c:575:
+	if (s->state & SOCKET_BUSY) {
[...]
 	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#2258: FILE: drivers/pcmcia/ds.c:577:
+	    goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2266: FILE: drivers/pcmcia/ds.c:584:
+    if (!user) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2269: FILE: drivers/pcmcia/ds.c:587:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2279: FILE: drivers/pcmcia/ds.c:597:
+    unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2280: FILE: drivers/pcmcia/ds.c:598:
+    return ret;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2343: FILE: drivers/s390/char/tubfs.c:129:
+	if ((tubp = INODE2TUB(ip)) == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2362: FILE: drivers/s390/char/tubfs.c:149:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2379: FILE: drivers/sbus/audio/audio.c:1705:
+^Istruct sparcaudio_driver *drv; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2387: FILE: drivers/sbus/audio/audio.c:1711:
+        drv = drivers[(minor >> SPARCAUDIO_DEVICE_SHIFT)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2387: FILE: drivers/sbus/audio/audio.c:1711:
+        drv = drivers[(minor >> SPARCAUDIO_DEVICE_SHIFT)];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2401: FILE: drivers/sbus/audio/audio.c:1732:
+                        if (file->f_flags & O_NONBLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2401: FILE: drivers/sbus/audio/audio.c:1732:
+                        if (file->f_flags & O_NONBLOCK) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2402: FILE: drivers/sbus/audio/audio.c:1733:
+                                err = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2402: FILE: drivers/sbus/audio/audio.c:1733:
+                                err = -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2412: FILE: drivers/sbus/audio/audio.c:1741:
+                        if (signal_pending(current)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2412: FILE: drivers/sbus/audio/audio.c:1741:
+                        if (signal_pending(current)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2413: FILE: drivers/sbus/audio/audio.c:1742:
+                                err = -EINTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2413: FILE: drivers/sbus/audio/audio.c:1742:
+                                err = -EINTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2421: FILE: drivers/sbus/audio/audio.c:1748:
+                        if (file->f_flags & O_NONBLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2421: FILE: drivers/sbus/audio/audio.c:1748:
+                        if (file->f_flags & O_NONBLOCK) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2422: FILE: drivers/sbus/audio/audio.c:1749:
+                                err = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2422: FILE: drivers/sbus/audio/audio.c:1749:
+                                err = -EBUSY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2423: FILE: drivers/sbus/audio/audio.c:1750:
+^I^I^I^Igoto out;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2432: FILE: drivers/sbus/audio/audio.c:1757:
+                        if (signal_pending(current)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2432: FILE: drivers/sbus/audio/audio.c:1757:
+                        if (signal_pending(current)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2433: FILE: drivers/sbus/audio/audio.c:1758:
+                                err = -EINTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2433: FILE: drivers/sbus/audio/audio.c:1758:
+                                err = -EINTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2444: FILE: drivers/sbus/audio/audio.c:1768:
+                                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2444: FILE: drivers/sbus/audio/audio.c:1768:
+                                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2453: FILE: drivers/sbus/audio/audio.c:1811:
+                err = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2453: FILE: drivers/sbus/audio/audio.c:1811:
+                err = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2477: FILE: drivers/sbus/char/bpp.c:445:
+      lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2486: FILE: drivers/sbus/char/bpp.c:461:
+      unlock_kernel();$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2597: FILE: drivers/scsi/osst.c:4168:
+	if (dev >= osst_template.dev_max || (STp = os_scsi_tapes[dev]) == NULL || !STp->device) {

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#2597: FILE: drivers/scsi/osst.c:4168:
+	if (dev >= osst_template.dev_max || (STp = os_scsi_tapes[dev]) == NULL || !STp->device) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2665: FILE: drivers/scsi/sg.c:271:
+    lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2673: FILE: drivers/scsi/sg.c:275:
+    if ((! sdp) || (! sdp->device)) {$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#2673: FILE: drivers/scsi/sg.c:275:
+    if ((! sdp) || (! sdp->device)) {
          ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#2673: FILE: drivers/scsi/sg.c:275:
+    if ((! sdp) || (! sdp->device)) {
                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! sdp'
#2673: FILE: drivers/scsi/sg.c:275:
+    if ((! sdp) || (! sdp->device)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! sdp->device'
#2673: FILE: drivers/scsi/sg.c:275:
+    if ((! sdp) || (! sdp->device)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2674: FILE: drivers/scsi/sg.c:276:
+        retval = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2674: FILE: drivers/scsi/sg.c:276:
+        retval = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2676: FILE: drivers/scsi/sg.c:278:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2677: FILE: drivers/scsi/sg.c:279:
+    if (sdp->detached) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2678: FILE: drivers/scsi/sg.c:280:
+    ^Iretval = -ENODEV;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2678: FILE: drivers/scsi/sg.c:280:
+    ^Iretval = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2678: FILE: drivers/scsi/sg.c:280:
+    ^Iretval = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2680: FILE: drivers/scsi/sg.c:282:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2689: FILE: drivers/scsi/sg.c:338:
+    retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2690: FILE: drivers/scsi/sg.c:339:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2697: FILE: drivers/scsi/sg.c:346:
+    unlock_kernel();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2837: FILE: drivers/usb/core/file.c:47:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2926: FILE: drivers/video/fbmem.c:698:
+	if (!(info = registered_fb[fbidx])) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2957: FILE: fs/intermezzo/psdev.c:1233:
+         lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2957: FILE: fs/intermezzo/psdev.c:1233:
+         lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2964: FILE: fs/intermezzo/psdev.c:1240:
+                 unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2964: FILE: fs/intermezzo/psdev.c:1240:
+                 unlock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2973: FILE: fs/intermezzo/psdev.c:1249:
+        unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2973: FILE: fs/intermezzo/psdev.c:1249:
+        unlock_kernel();$

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#2990: FILE: net/netlink/netlink_dev.c:110:
+	if (minor>=MAX_LINKS) {
 	         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3058: FILE: sound/core/sound.c:144:
+	if (mptr == NULL && (mptr = snd_minor_search(minor)) == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mptr"
#3058: FILE: sound/core/sound.c:144:
+	if (mptr == NULL && (mptr = snd_minor_search(minor)) == NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 96 errors, 241 warnings, 25 checks, 2535 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
