WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
   for the susp initializer at offset 14 of the system use area if it couldn't

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: fs/isofs/inode.c:751:
+        s->u.isofs_sb.s_rock_offset = -1; /* initial offset, will guess until SP is found*/$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: fs/isofs/inode.c:751:
+        s->u.isofs_sb.s_rock_offset = -1; /* initial offset, will guess until SP is found*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/isofs/rock.c:34:
+      if(rr->u.SP.magic[1] != 0xef) FAIL;       \$

ERROR:SPACING: space required before the open parenthesis '('
#87: FILE: fs/isofs/rock.c:34:
+      if(rr->u.SP.magic[1] != 0xef) FAIL;       \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#87: FILE: fs/isofs/rock.c:34:
+      if(rr->u.SP.magic[1] != 0xef) FAIL;       \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/isofs/rock.c:35:
+      inode->i_sb->u.isofs_sb.s_rock_offset=rr->u.SP.skip;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#88: FILE: fs/isofs/rock.c:35:
+      inode->i_sb->u.isofs_sb.s_rock_offset=rr->u.SP.skip;
                                            ^

CHECK:SPACING: No space is necessary after a cast
#97: FILE: fs/isofs/rock.c:53:
+  LEN = *((unsigned char *) DE) - LEN;                          \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: fs/isofs/rock.c:53:
+  LEN = *((unsigned char *) DE) - LEN;                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/isofs/rock.c:54:
+  if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#98: FILE: fs/isofs/rock.c:54:
+  if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \
+  {                                                             \

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 2)
#98: FILE: fs/isofs/rock.c:54:
+  if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \
+  {                                                             \

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#98: FILE: fs/isofs/rock.c:54:
+  if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \
                                            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#98: FILE: fs/isofs/rock.c:54:
+  if (inode->i_sb->u.isofs_sb.s_rock_offset!=-1)                \
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/isofs/rock.c:55:
+  {                                                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/isofs/rock.c:56:
+     LEN-=inode->i_sb->u.isofs_sb.s_rock_offset;                \$

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#100: FILE: fs/isofs/rock.c:56:
+     LEN-=inode->i_sb->u.isofs_sb.s_rock_offset;                \
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/isofs/rock.c:57:
+     CHR+=inode->i_sb->u.isofs_sb.s_rock_offset;                \$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#101: FILE: fs/isofs/rock.c:57:
+     CHR+=inode->i_sb->u.isofs_sb.s_rock_offset;                \
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/isofs/rock.c:58:
+     if (LEN<0) LEN=0;                                          \$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#102: FILE: fs/isofs/rock.c:58:
+     if (LEN<0) LEN=0;                                          \
             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#102: FILE: fs/isofs/rock.c:58:
+     if (LEN<0) LEN=0;                                          \
                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#102: FILE: fs/isofs/rock.c:58:
+     if (LEN<0) LEN=0;                                          \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/isofs/rock.c:59:
+  }                                                             \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/isofs/rock.c:60:
+}                                     $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: fs/isofs/rock.c:230:
+int parse_rock_ridge_inode_internal(struct iso_directory_record * de,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#114: FILE: fs/isofs/rock.c:230:
+int parse_rock_ridge_inode_internal(struct iso_directory_record * de,
+			            struct inode * inode,int regard_xa){

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: fs/isofs/rock.c:231:
+^I^I^I            struct inode * inode,int regard_xa){$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: fs/isofs/rock.c:231:
+int parse_rock_ridge_inode_internal(struct iso_directory_record * de,
+			            struct inode * inode,int regard_xa){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/isofs/rock.c:231:
+			            struct inode * inode,int regard_xa){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: fs/isofs/rock.c:231:
+			            struct inode * inode,int regard_xa){
 			                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/isofs/rock.c:240:
+  if (regard_xa)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#123: FILE: fs/isofs/rock.c:240:
+  if (regard_xa)
+   {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#123: FILE: fs/isofs/rock.c:240:
+  if (regard_xa)
+   {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/isofs/rock.c:241:
+   {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/isofs/rock.c:242:
+     chr+=14;$

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#125: FILE: fs/isofs/rock.c:242:
+     chr+=14;
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/isofs/rock.c:243:
+     len-=14;$

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#126: FILE: fs/isofs/rock.c:243:
+     len-=14;
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/isofs/rock.c:244:
+     if (len<0) len=0;$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#127: FILE: fs/isofs/rock.c:244:
+     if (len<0) len=0;
             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: fs/isofs/rock.c:244:
+     if (len<0) len=0;
                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#127: FILE: fs/isofs/rock.c:244:
+     if (len<0) len=0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/isofs/rock.c:245:
+   };$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: fs/isofs/rock.c:246:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/isofs/rock.c:246:
+   $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!rootflag'
#138: FILE: fs/isofs/rock.c:433:
+			if ((!rootflag) && (rr->u.SL.flags & 1) && !(oldslp->flags & 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: fs/isofs/rock.c:448:
+int parse_rock_ridge_inode(struct iso_directory_record * de,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#147: FILE: fs/isofs/rock.c:449:
+			   struct inode * inode)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/isofs/rock.c:451:
+   int result=parse_rock_ridge_inode_internal(de,inode,0);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#149: FILE: fs/isofs/rock.c:451:
+   int result=parse_rock_ridge_inode_internal(de,inode,0);
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: fs/isofs/rock.c:451:
+   int result=parse_rock_ridge_inode_internal(de,inode,0);
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: fs/isofs/rock.c:451:
+   int result=parse_rock_ridge_inode_internal(de,inode,0);
                                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: fs/isofs/rock.c:453:
+    * behind eventual XA attributes, have a look there */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/isofs/rock.c:454:
+   if ((inode->i_sb->u.isofs_sb.s_rock_offset==-1)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#152: FILE: fs/isofs/rock.c:454:
+   if ((inode->i_sb->u.isofs_sb.s_rock_offset==-1)
+       &&(inode->i_sb->u.isofs_sb.s_rock==2))
+     {

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#152: FILE: fs/isofs/rock.c:454:
+   if ((inode->i_sb->u.isofs_sb.s_rock_offset==-1)
                                              ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#152: FILE: fs/isofs/rock.c:454:
+   if ((inode->i_sb->u.isofs_sb.s_rock_offset==-1)
                                                ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#153: FILE: fs/isofs/rock.c:455:
+   if ((inode->i_sb->u.isofs_sb.s_rock_offset==-1)
+       &&(inode->i_sb->u.isofs_sb.s_rock==2))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/isofs/rock.c:455:
+       &&(inode->i_sb->u.isofs_sb.s_rock==2))$

ERROR:SPACING: spaces required around that '&&' (ctx:ExV)
#153: FILE: fs/isofs/rock.c:455:
+       &&(inode->i_sb->u.isofs_sb.s_rock==2))
        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#153: FILE: fs/isofs/rock.c:455:
+       &&(inode->i_sb->u.isofs_sb.s_rock==2))
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/isofs/rock.c:456:
+     {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#155: FILE: fs/isofs/rock.c:457:
+	printk(KERN_DEBUG"scanning for RockRidge behind XA attributes\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#155: FILE: fs/isofs/rock.c:457:
+	printk(KERN_DEBUG"scanning for RockRidge behind XA attributes\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: fs/isofs/rock.c:458:
+	result=parse_rock_ridge_inode_internal(de,inode,14);
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: fs/isofs/rock.c:458:
+	result=parse_rock_ridge_inode_internal(de,inode,14);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: fs/isofs/rock.c:458:
+	result=parse_rock_ridge_inode_internal(de,inode,14);
 	                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/isofs/rock.c:459:
+     };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/isofs/rock.c:460:
+   return result;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: include/linux/iso_fs_sb.h:16:
+        int           s_rock_offset; /* offset of SUSP fields within SU area */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: include/linux/iso_fs_sb.h:16:
+        int           s_rock_offset; /* offset of SUSP fields within SU area */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000543163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 29 warnings, 5 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000543163.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
