WARNING:TYPO_SPELLING: 'implemetation' may be misspelled - perhaps 'implementation'?
#14: 
Subject: Re: [PATCH 4/5] PCI-Express AER implemetation: AER core and
                                         ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:22:
+ * Return: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#109: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:42:
+			handle = acpi_get_pci_rootbridge_handle(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#113: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:46:
+			handle = DEVICE_ACPI_HANDLE(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around parent->self->dev
#114: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:47:
+					&(parent->self->dev));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:58:
+^I^Iif (status == AE_SUPPORT) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:60:
+^I ^Ielse$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: drivers/pci/pcie/aer/aerdrv_acpi.c:60:
+^I ^Ielse$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#137: FILE: drivers/pci/pcie/aer/aerdrv_core.c:1:
+/*

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#199: FILE: drivers/pci/pcie/aer/aerdrv_core.c:63:
+	pci_read_config_word(dev, pos+PCI_EXP_DEVCTL, &reg16);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: drivers/pci/pcie/aer/aerdrv_core.c:68:
+	pci_write_config_word(dev, pos+PCI_EXP_DEVCTL,
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/pci/pcie/aer/aerdrv_core.c:69:
+	pci_write_config_word(dev, pos+PCI_EXP_DEVCTL,
+			reg16);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#241: FILE: drivers/pci/pcie/aer/aerdrv_core.c:105:
+			*(unsigned long*)data = (unsigned long)device;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/pci/pcie/aer/aerdrv_core.c:109:
+^I^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/pci/pcie/aer/aerdrv_core.c:114:
+			pci_read_config_byte(dev, PCI_SECONDARY_BUS,
+				&secondary);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/pci/pcie/aer/aerdrv_core.c:116:
+			pci_read_config_byte(dev, PCI_SUBORDINATE_BUS,
+				&subordinate);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#254: FILE: drivers/pci/pcie/aer/aerdrv_core.c:118:
+				*(unsigned long*)data = (unsigned long)device;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#270: FILE: drivers/pci/pcie/aer/aerdrv_core.c:134:
+static struct device* find_source_device(struct pci_dev *parent, u16 id)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/pci/pcie/aer/aerdrv_core.c:142:
+^Iif (id == ((dev->bus->number << 8) | dev->devfn)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: drivers/pci/pcie/aer/aerdrv_core.c:147:
+ ^I^Iif ((status = device_for_each_child(&dev->dev,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: drivers/pci/pcie/aer/aerdrv_core.c:147:
+ ^I^Iif ((status = device_for_each_child(&dev->dev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/pci/pcie/aer/aerdrv_core.c:147:
+ ^I^Iif ((status = device_for_each_child(&dev->dev,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#283: FILE: drivers/pci/pcie/aer/aerdrv_core.c:147:
+ 		if ((status = device_for_each_child(&dev->dev,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/pci/pcie/aer/aerdrv_core.c:148:
+ 		if ((status = device_for_each_child(&dev->dev,
+			&device_addr, find_device_iter))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#285: FILE: drivers/pci/pcie/aer/aerdrv_core.c:149:
+			device = (struct device*)device_addr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:154:
+ ^I}while (status);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:154:
+ ^I}while (status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:154:
+ ^I}while (status);$

ERROR:SPACING: space required after that close brace '}'
#290: FILE: drivers/pci/pcie/aer/aerdrv_core.c:154:
+ 	}while (status);

CHECK:SPACING: No space is necessary after a cast
#300: FILE: drivers/pci/pcie/aer/aerdrv_core.c:164:
+	result_data = (struct aer_broadcast_data *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: drivers/pci/pcie/aer/aerdrv_core.c:164:
+	struct aer_broadcast_data *result_data;
+	result_data = (struct aer_broadcast_data *) data;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/pci/pcie/aer/aerdrv_core.c:169:
+	if (!dev->driver ||
+		!dev->driver->err_handler ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/pci/pcie/aer/aerdrv_core.c:172:
+		if (result_data->state == pci_channel_io_frozen &&
+			!(dev->hdr_type & PCI_HEADER_TYPE_BRIDGE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: drivers/pci/pcie/aer/aerdrv_core.c:173:
+^I^I^I/* $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#316: FILE: drivers/pci/pcie/aer/aerdrv_core.c:180:
+			printk(KERN_DEBUG "Device ID[%s] has %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/pci/pcie/aer/aerdrv_core.c:181:
+			printk(KERN_DEBUG "Device ID[%s] has %s\n",
+					dev->dev.bus_id, (dev->driver) ?

WARNING:RETURN_VOID: void function return statements are not generally useful
#327: FILE: drivers/pci/pcie/aer/aerdrv_core.c:191:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#334: FILE: drivers/pci/pcie/aer/aerdrv_core.c:198:
+	result_data = (struct aer_broadcast_data *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#334: FILE: drivers/pci/pcie/aer/aerdrv_core.c:198:
+	struct aer_broadcast_data *result_data;
+	result_data = (struct aer_broadcast_data *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/pci/pcie/aer/aerdrv_core.c:201:
+	if (!dev->driver ||
+		!dev->driver->err_handler ||

WARNING:RETURN_VOID: void function return statements are not generally useful
#345: FILE: drivers/pci/pcie/aer/aerdrv_core.c:209:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#352: FILE: drivers/pci/pcie/aer/aerdrv_core.c:216:
+	result_data = (struct aer_broadcast_data *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: drivers/pci/pcie/aer/aerdrv_core.c:216:
+	struct aer_broadcast_data *result_data;
+	result_data = (struct aer_broadcast_data *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: drivers/pci/pcie/aer/aerdrv_core.c:219:
+	if (!dev->driver ||
+		!dev->driver->err_handler ||

WARNING:RETURN_VOID: void function return statements are not generally useful
#363: FILE: drivers/pci/pcie/aer/aerdrv_core.c:227:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/pci/pcie/aer/aerdrv_core.c:236:
+	if (!dev->driver ||
+		!dev->driver->err_handler ||

WARNING:RETURN_VOID: void function return statements are not generally useful
#379: FILE: drivers/pci/pcie/aer/aerdrv_core.c:243:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: drivers/pci/pcie/aer/aerdrv_core.c:252:
+ * of error severity will be broadcasted to all downstream drivers in a $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/pci/pcie/aer/aerdrv_core.c:256:
+static pci_ers_result_t broadcast_error_message(struct pci_dev *dev,
+	enum pci_channel_state state,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#398: FILE: drivers/pci/pcie/aer/aerdrv_core.c:262:
+	printk(KERN_DEBUG "Broadcast %s message\n", error_mesg);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#420: FILE: drivers/pci/pcie/aer/aerdrv_core.c:284:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: drivers/pci/pcie/aer/aerdrv_core.c:284:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: drivers/pci/pcie/aer/aerdrv_core.c:296:
+        struct pcie_port_service_driver *aer_driver;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/pci/pcie/aer/aerdrv_core.c:296:
+        struct pcie_port_service_driver *aer_driver;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/pci/pcie/aer/aerdrv_core.c:297:
+        int is_downstream;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/pci/pcie/aer/aerdrv_core.c:297:
+        int is_downstream;$

CHECK:SPACING: No space is necessary after a cast
#443: FILE: drivers/pci/pcie/aer/aerdrv_core.c:307:
+	result = (struct find_aer_service_data *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/pci/pcie/aer/aerdrv_core.c:329:
+static void find_aer_service(struct pci_dev *dev,
+		struct find_aer_service_data *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/pci/pcie/aer/aerdrv_core.c:335:
+static pci_ers_result_t reset_link(struct pcie_device *aerdev,
+		struct pci_dev *dev)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#480: FILE: drivers/pci/pcie/aer/aerdrv_core.c:344:
+		udev= dev->bus->self;
 		    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/pci/pcie/aer/aerdrv_core.c:356:
+		if (data.is_downstream &&
+			aerdev->device.driver &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#497: FILE: drivers/pci/pcie/aer/aerdrv_core.c:361:
+			printk(KERN_DEBUG "No link-reset support to Device ID"

WARNING:SPLIT_STRING: quoted string split across lines
#498: FILE: drivers/pci/pcie/aer/aerdrv_core.c:362:
+			printk(KERN_DEBUG "No link-reset support to Device ID"
+				"[%s]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#506: FILE: drivers/pci/pcie/aer/aerdrv_core.c:370:
+		printk(KERN_DEBUG "Link reset at upstream Device ID"

WARNING:SPLIT_STRING: quoted string split across lines
#507: FILE: drivers/pci/pcie/aer/aerdrv_core.c:371:
+		printk(KERN_DEBUG "Link reset at upstream Device ID"
+			"[%s] failed\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/pci/pcie/aer/aerdrv_core.c:386:
+ * error detected message to all downstream drivers within a hierarchy in $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/pci/pcie/aer/aerdrv_core.c:390:
+static pci_ers_result_t do_recovery(struct pcie_device *aerdev,
+		struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/pci/pcie/aer/aerdrv_core.c:402:
+	status = broadcast_error_message(dev,
+			state,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/pci/pcie/aer/aerdrv_core.c:416:
+		status = broadcast_error_message(dev,
+				state,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/pci/pcie/aer/aerdrv_core.c:427:
+		status = broadcast_error_message(dev,
+				state,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/pci/pcie/aer/aerdrv_core.c:434:
+		broadcast_error_message(dev,
+				state,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: drivers/pci/pcie/aer/aerdrv_core.c:449:
+static void handle_error_source(struct pcie_device * aerdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/pci/pcie/aer/aerdrv_core.c:450:
+static void handle_error_source(struct pcie_device * aerdev,
+	struct pci_dev *dev,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/pci/pcie/aer/aerdrv_core.c:457:
+^I^I/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/pci/pcie/aer/aerdrv_core.c:464:
+			pci_write_config_dword(dev, pos + PCI_ERR_COR_STATUS,
+					info.status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#604: FILE: drivers/pci/pcie/aer/aerdrv_core.c:468:
+			printk(KERN_DEBUG "AER driver successfully recovered\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/pci/pcie/aer/aerdrv_core.c:470:
+^I^I^I/* TODO: Should kernel panic here? */ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#607: FILE: drivers/pci/pcie/aer/aerdrv_core.c:471:
+			printk(KERN_DEBUG "AER driver didn't recover\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#627: FILE: drivers/pci/pcie/aer/aerdrv_core.c:491:
+	pci_read_config_word(pdev, pos+PCI_EXP_DEVSTA, &reg16);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#628: FILE: drivers/pci/pcie/aer/aerdrv_core.c:492:
+	pci_write_config_word(pdev, pos+PCI_EXP_DEVSTA, reg16);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#645: FILE: drivers/pci/pcie/aer/aerdrv_core.c:509:
+	pci_read_config_word(pdev, pos+PCI_EXP_DEVCTL, &reg16);
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#651: FILE: drivers/pci/pcie/aer/aerdrv_core.c:515:
+	pci_write_config_word(pdev, pos+PCI_EXP_DEVCTL,
 	                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/pci/pcie/aer/aerdrv_core.c:516:
+	pci_write_config_word(pdev, pos+PCI_EXP_DEVCTL,
+		reg16);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/pci/pcie/aer/aerdrv_core.c:520:
+	pci_write_config_dword(pdev,
+		aer_pos + PCI_ERR_ROOT_COMMAND,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#687: FILE: drivers/pci/pcie/aer/aerdrv_core.c:551:
+static struct aer_err_source* get_e_source(struct aer_rpc *rpc)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: drivers/pci/pcie/aer/aerdrv_core.c:567:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/pci/pcie/aer/aerdrv_core.c:583:
+		pci_read_config_dword(dev, pos + PCI_ERR_COR_STATUS,
+			&info->status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#721: FILE: drivers/pci/pcie/aer/aerdrv_core.c:585:
+^I^I^Ireturn AER_UNSUCCESS; $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#724: FILE: drivers/pci/pcie/aer/aerdrv_core.c:588:
+		info->severity == AER_NONFATAL) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: drivers/pci/pcie/aer/aerdrv_core.c:591:
+		pci_read_config_dword(dev, pos + PCI_ERR_UNCOR_STATUS,
+			&info->status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: drivers/pci/pcie/aer/aerdrv_core.c:597:
+^I^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: drivers/pci/pcie/aer/aerdrv_core.c:598:
+			pci_read_config_dword(dev, 
+				pos + PCI_ERR_HEADER_LOG, &info->tlp.dw0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: drivers/pci/pcie/aer/aerdrv_core.c:599:
+^I^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/pci/pcie/aer/aerdrv_core.c:600:
+			pci_read_config_dword(dev, 
+				pos + PCI_ERR_HEADER_LOG + 4, &info->tlp.dw1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: drivers/pci/pcie/aer/aerdrv_core.c:601:
+^I^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: drivers/pci/pcie/aer/aerdrv_core.c:602:
+			pci_read_config_dword(dev, 
+				pos + PCI_ERR_HEADER_LOG + 8, &info->tlp.dw2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: drivers/pci/pcie/aer/aerdrv_core.c:603:
+^I^I^Ipci_read_config_dword(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/pci/pcie/aer/aerdrv_core.c:604:
+			pci_read_config_dword(dev, 
+				pos + PCI_ERR_HEADER_LOG + 12, &info->tlp.dw3);

CHECK:SPACING: No space is necessary after a cast
#755: FILE: drivers/pci/pcie/aer/aerdrv_core.c:619:
+	struct pcie_device *p_device = (struct pcie_device *) context;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: drivers/pci/pcie/aer/aerdrv_core.c:627:
+^I/* $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#768: FILE: drivers/pci/pcie/aer/aerdrv_core.c:632:
+	if (!(e_src = get_e_source(rpc))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#769: FILE: drivers/pci/pcie/aer/aerdrv_core.c:633:
+		printk(KERN_DEBUG "%s->DPC fails to get an error source\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#770: FILE: drivers/pci/pcie/aer/aerdrv_core.c:634:
+		printk(KERN_DEBUG "%s->DPC fails to get an error source\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#770: FILE: drivers/pci/pcie/aer/aerdrv_core.c:634:
+			__FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: drivers/pci/pcie/aer/aerdrv_core.c:640:
+^I * There is a possibility that both correctable error and $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#797: FILE: drivers/pci/pcie/aer/aerdrv_core.c:661:
+		if (!(s_device = find_source_device(p_device->port, id))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#798: FILE: drivers/pci/pcie/aer/aerdrv_core.c:662:
+			printk(KERN_DEBUG "%s->can't find device of ID%04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: drivers/pci/pcie/aer/aerdrv_core.c:663:
+			printk(KERN_DEBUG "%s->can't find device of ID%04x\n",
+				__FUNCTION__, id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#799: FILE: drivers/pci/pcie/aer/aerdrv_core.c:663:
+				__FUNCTION__, id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/pci/pcie/aer/aerdrv_core.c:670:
+			handle_error_source(p_device,
+				to_pci_dev(s_device),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: drivers/pci/pcie/aer/aerdrv_core.c:702:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#857: FILE: drivers/pci/pcie/aer/aerdrv_core.c:721:
+	if(status != OSC_METHOD_RUN_SUCCESS) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#858: FILE: drivers/pci/pcie/aer/aerdrv_core.c:722:
+		printk(KERN_DEBUG "%s: AER service init fails - %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/pci/pcie/aer/aerdrv_core.c:723:
+		printk(KERN_DEBUG "%s: AER service init fails - %s\n",
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#859: FILE: drivers/pci/pcie/aer/aerdrv_core.c:723:
+		__FUNCTION__,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#870: FILE: drivers/pci/pcie/aer/aerdrv_core.c:734:
+EXPORT_SYMBOL(pci_find_aer_capability);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#871: FILE: drivers/pci/pcie/aer/aerdrv_core.c:735:
+EXPORT_SYMBOL(pci_disable_pcie_error_reporting);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#872: FILE: drivers/pci/pcie/aer/aerdrv_core.c:736:
+EXPORT_SYMBOL(pci_cleanup_aer_uncorrect_error_status);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#877: FILE: include/linux/aer.h:1:
+/*

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#886: FILE: include/linux/aer.h:10:
+#if defined(CONFIG_PCIEAER) || defined(CONFIG_PCIEAER_MODULE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#897: FILE: include/linux/aer.h:21:
+	pci_read_config_word(dev, pos+PCI_EXP_DEVCTL, &reg16);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#903: FILE: include/linux/aer.h:27:
+	pci_write_config_word(dev, pos+PCI_EXP_DEVCTL,
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: include/linux/aer.h:28:
+	pci_write_config_word(dev, pos+PCI_EXP_DEVCTL,
+			reg16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#908: FILE: include/linux/aer.h:32:
+extern int pci_find_aer_capability(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#909: FILE: include/linux/aer.h:33:
+extern int pci_disable_pcie_error_reporting(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#910: FILE: include/linux/aer.h:34:
+extern int pci_cleanup_aer_uncorrect_error_status(struct pci_dev *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#926: FILE: include/linux/pcieport_if.h:64:
+^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#931: FILE: include/linux/pcieport_if.h:69:
+	pci_ers_result_t (*reset_link) (struct pci_dev *dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#938: FILE: drivers/pci/pcie/aer/aerdrv.h:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#956: FILE: drivers/pci/pcie/aer/aerdrv.h:19:
+#define AER_ERROR(d)			(d & AER_ERROR_MASK)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#970: FILE: drivers/pci/pcie/aer/aerdrv.h:33:
+#define SYSTEM_ERROR_INTR_ON_MESG_MASK	(PCI_EXP_RTCTL_SECEE|	\
                                       	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#971: FILE: drivers/pci/pcie/aer/aerdrv.h:34:
+					PCI_EXP_RTCTL_SENFEE|	\
 					                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#973: FILE: drivers/pci/pcie/aer/aerdrv.h:36:
+#define ROOT_PORT_INTR_ON_MESG_MASK	(PCI_ERR_ROOT_CMD_COR_EN|	\
                                    	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#974: FILE: drivers/pci/pcie/aer/aerdrv.h:37:
+					PCI_ERR_ROOT_CMD_NONFATAL_EN|	\
 					                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#976: FILE: drivers/pci/pcie/aer/aerdrv.h:39:
+#define ERR_COR_ID(d)			(d & 0xffff)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#977: FILE: drivers/pci/pcie/aer/aerdrv.h:40:
+#define ERR_UNCOR_ID(d)			(d >> 16)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#983: FILE: drivers/pci/pcie/aer/aerdrv.h:46:
+#define AER_LOG_TLP_MASKS		(PCI_ERR_UNC_POISON_TLP|	\
                          		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#984: FILE: drivers/pci/pcie/aer/aerdrv.h:47:
+					PCI_ERR_UNC_ECRC|		\
 					                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#985: FILE: drivers/pci/pcie/aer/aerdrv.h:48:
+					PCI_ERR_UNC_UNSUP|		\
 					                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#986: FILE: drivers/pci/pcie/aer/aerdrv.h:49:
+					PCI_ERR_UNC_COMP_ABORT|		\
 					                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#987: FILE: drivers/pci/pcie/aer/aerdrv.h:50:
+					PCI_ERR_UNC_UNX_COMP|		\
 					                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1006: FILE: drivers/pci/pcie/aer/aerdrv.h:69:
+^Iint flags;^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1008: FILE: drivers/pci/pcie/aer/aerdrv.h:71:
+^Istruct header_log_regs tlp; ^I/* TLP Header */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/pci/pcie/aer/aerdrv.h:80:
+ ^Istruct list_head node;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1017: FILE: drivers/pci/pcie/aer/aerdrv.h:80:
+ ^Istruct list_head node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: drivers/pci/pcie/aer/aerdrv.h:80:
+ ^Istruct list_head node;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: drivers/pci/pcie/aer/aerdrv.h:81:
+ ^Istruct list_head children;^I/* AER children of this root port */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1018: FILE: drivers/pci/pcie/aer/aerdrv.h:81:
+ ^Istruct list_head children;^I/* AER children of this root port */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: drivers/pci/pcie/aer/aerdrv.h:81:
+ ^Istruct list_head children;^I/* AER children of this root port */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1025: FILE: drivers/pci/pcie/aer/aerdrv.h:88:
+^Ispinlock_t e_lock;^I^I/* $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1025: FILE: drivers/pci/pcie/aer/aerdrv.h:88:
+	spinlock_t e_lock;		/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/pci/pcie/aer/aerdrv.h:92:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: drivers/pci/pcie/aer/aerdrv.h:92:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/pci/pcie/aer/aerdrv.h:93:
+^Istruct semaphore rpc_sema;^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: drivers/pci/pcie/aer/aerdrv.h:96:
+^I^I^I^I ^I * aware devices in this RPC hierarchy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1033: FILE: drivers/pci/pcie/aer/aerdrv.h:96:
+^I^I^I^I ^I * aware devices in this RPC hierarchy$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: drivers/pci/pcie/aer/aerdrv.h:106:
+static inline pci_ers_result_t merge_result(enum pci_ers_result orig,
+		enum pci_ers_result new)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1062: FILE: drivers/pci/pcie/aer/aerdrv.h:125:
+extern void aer_add_rootport(struct aer_rpc *rpc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1063: FILE: drivers/pci/pcie/aer/aerdrv.h:126:
+extern void aer_delete_rootport(struct aer_rpc *rpc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1064: FILE: drivers/pci/pcie/aer/aerdrv.h:127:
+extern int aer_init(struct pcie_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1065: FILE: drivers/pci/pcie/aer/aerdrv.h:128:
+extern void aer_isr(void *context);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1066: FILE: drivers/pci/pcie/aer/aerdrv.h:129:
+extern void aer_print_error(struct pci_dev *dev, struct aer_err_info *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1069: FILE: drivers/pci/pcie/aer/aerdrv.h:132:
+extern int aer_osc_setup(struct pci_dev *dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1078: FILE: drivers/pci/pcie/aer/aerdrv.c:1:
+/*

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1107: FILE: drivers/pci/pcie/aer/aerdrv.c:30:
+static int __devinit aer_probe (struct pcie_device *dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1107: FILE: drivers/pci/pcie/aer/aerdrv.c:30:
+static int __devinit aer_probe (struct pcie_device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: drivers/pci/pcie/aer/aerdrv.c:31:
+static int __devinit aer_probe (struct pcie_device *dev,
+	const struct pcie_port_service_id *id );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1108: FILE: drivers/pci/pcie/aer/aerdrv.c:31:
+	const struct pcie_port_service_id *id );

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1111: FILE: drivers/pci/pcie/aer/aerdrv.c:34:
+{return 0;}
          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1112: FILE: drivers/pci/pcie/aer/aerdrv.c:35:
+static int aer_resume(struct pcie_device *dev) {return 0;}
                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1114: FILE: drivers/pci/pcie/aer/aerdrv.c:37:
+static pci_ers_result_t aer_error_detected(struct pci_dev *dev,
+	enum pci_channel_state error);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/pci/pcie/aer/aerdrv.c:46:
+^I.vendor ^I= PCI_ANY_ID, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1123: FILE: drivers/pci/pcie/aer/aerdrv.c:46:
+^I.vendor ^I= PCI_ANY_ID, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1124: FILE: drivers/pci/pcie/aer/aerdrv.c:47:
+^I.device ^I= PCI_ANY_ID,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: drivers/pci/pcie/aer/aerdrv.c:48:
+^I.port_type ^I= PCIE_RC_PORT, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1125: FILE: drivers/pci/pcie/aer/aerdrv.c:48:
+^I.port_type ^I= PCIE_RC_PORT, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1126: FILE: drivers/pci/pcie/aer/aerdrv.c:49:
+^I.service_type ^I= PCIE_PORT_SERVICE_AER,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1159: FILE: drivers/pci/pcie/aer/aerdrv.c:82:
+static irqreturn_t aer_irq(int irq, void *context, struct pt_regs * r)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/pci/pcie/aer/aerdrv.c:92:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: drivers/pci/pcie/aer/aerdrv.c:93:
+^I * Must lock access to Root Error Status Reg, Root Error ID Reg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: drivers/pci/pcie/aer/aerdrv.c:94:
+^I * and Root error producer/consumer index $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: drivers/pci/pcie/aer/aerdrv.c:114:
+^I^I/* $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1215: FILE: drivers/pci/pcie/aer/aerdrv.c:138:
+static struct aer_rpc* aer_alloc_rpc(struct pcie_device *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+^Iif (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1219: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1219: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rpc)...) over kmalloc(sizeof(struct aer_rpc)...)
#1219: FILE: drivers/pci/pcie/aer/aerdrv.c:142:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: drivers/pci/pcie/aer/aerdrv.c:143:
+	if (!(rpc = (struct aer_rpc *)kmalloc(sizeof(struct aer_rpc), 
+		GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: drivers/pci/pcie/aer/aerdrv.c:147:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: drivers/pci/pcie/aer/aerdrv.c:148:
+^I * Initialize Root lock access, e_lock, to Root Error Status Reg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: drivers/pci/pcie/aer/aerdrv.c:149:
+^I * Root Error ID Reg, and Root error producer/consumer index. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: drivers/pci/pcie/aer/aerdrv.c:153:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/pci/pcie/aer/aerdrv.c:155:
+^I * or print AER aware devices in this RPC hierarchy $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1240: FILE: drivers/pci/pcie/aer/aerdrv.c:163:
+	rpc->prod_idx = rpc->cons_idx = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1276: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1276: FILE: drivers/pci/pcie/aer/aerdrv.c:199:
+static int __devinit aer_probe (struct pcie_device *dev, 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1277: FILE: drivers/pci/pcie/aer/aerdrv.c:200:
+				const struct pcie_port_service_id *id )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1284: FILE: drivers/pci/pcie/aer/aerdrv.c:207:
+	if ((status = aer_init(dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1288: FILE: drivers/pci/pcie/aer/aerdrv.c:211:
+	if (!(rpc = aer_alloc_rpc(dev))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1289: FILE: drivers/pci/pcie/aer/aerdrv.c:212:
+		printk(KERN_DEBUG "%s: Alloc rpc fails on PCIE device[%s]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: drivers/pci/pcie/aer/aerdrv.c:213:
+		printk(KERN_DEBUG "%s: Alloc rpc fails on PCIE device[%s]\n",
+			__FUNCTION__, device->bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1290: FILE: drivers/pci/pcie/aer/aerdrv.c:213:
+			__FUNCTION__, device->bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: drivers/pci/pcie/aer/aerdrv.c:219:
+^Iif ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1296: FILE: drivers/pci/pcie/aer/aerdrv.c:219:
+	if ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1297: FILE: drivers/pci/pcie/aer/aerdrv.c:220:
+	if ((status = request_irq(dev->irq, aer_irq, SA_SHIRQ, "aerdrv", 
+				dev))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/pci/pcie/aer/aerdrv.c:221:
+^I^Iprintk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1298: FILE: drivers/pci/pcie/aer/aerdrv.c:221:
+		printk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1299: FILE: drivers/pci/pcie/aer/aerdrv.c:222:
+		printk(KERN_DEBUG "%s: Request ISR fails on PCIE device[%s]\n", 
+			__FUNCTION__, device->bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1299: FILE: drivers/pci/pcie/aer/aerdrv.c:222:
+			__FUNCTION__, device->bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1326: FILE: drivers/pci/pcie/aer/aerdrv.c:249:
+^I/* Disable Root's interrupt in response to error messages */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1338: FILE: drivers/pci/pcie/aer/aerdrv.c:261:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1339: FILE: drivers/pci/pcie/aer/aerdrv.c:262:
+^I * System software must wait for at least 100ms from the end $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1344: FILE: drivers/pci/pcie/aer/aerdrv.c:267:
+	printk(KERN_DEBUG "Complete link reset at Root[%s]\n", dev->dev.bus_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1346: FILE: drivers/pci/pcie/aer/aerdrv.c:269:
+^I/* Enable Root Port's interrupt in response to error messages */ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1350: FILE: drivers/pci/pcie/aer/aerdrv.c:273:
+	pci_write_config_dword(dev,
+		pos + PCI_ERR_ROOT_COMMAND,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1364: FILE: drivers/pci/pcie/aer/aerdrv.c:287:
+static pci_ers_result_t aer_error_detected(struct pci_dev *dev,
+			enum pci_channel_state error)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1413: FILE: drivers/pci/pcie/aer/aerdrv.c:336:
+static void __exit aer_service_exit(void) $

CHECK:SPACING: No space is necessary after a cast
#1413: FILE: drivers/pci/pcie/aer/aerdrv.c:336:
+static void __exit aer_service_exit(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/pci/pcie/aer/Kconfig:7:
+^Idepends on PCIEPORTBUS $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1467: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:20:
+#define AER_AGENT_TRANSMITTER^I^I3^I^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1488: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:22:
+#define AER_AGENT_REQUESTER_MASK	(PCI_ERR_UNC_COMP_TIME|	\
                                 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1493: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:27:
+#define AER_AGENT_TRANSMITTER_MASK(t, e) (e & (PCI_ERR_COR_REP_ROLL| \
                                                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#1493: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:27:
+#define AER_AGENT_TRANSMITTER_MASK(t, e) (e & (PCI_ERR_COR_REP_ROLL| \
+	((t == AER_CORRECTABLE) ? PCI_ERR_COR_REP_TIMER: 0))) 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#1493: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:27:
+#define AER_AGENT_TRANSMITTER_MASK(t, e) (e & (PCI_ERR_COR_REP_ROLL| \
+	((t == AER_CORRECTABLE) ? PCI_ERR_COR_REP_TIMER: 0))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1494: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:28:
+^I((t == AER_CORRECTABLE) ? PCI_ERR_COR_REP_TIMER: 0))) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1494: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:28:
+	((t == AER_CORRECTABLE) ? PCI_ERR_COR_REP_TIMER: 0))) 
 	                                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#1496: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:30:
+#define AER_GET_AGENT(t, e)						\
+	((e & AER_AGENT_COMPLETER_MASK) ? AER_AGENT_COMPLETER :		\
+	(e & AER_AGENT_REQUESTER_MASK) ? AER_AGENT_REQUESTER :		\
+	(AER_AGENT_TRANSMITTER_MASK(t, e)) ? AER_AGENT_TRANSMITTER :	\
+	AER_AGENT_RECEIVER)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#1496: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:30:
+#define AER_GET_AGENT(t, e)						\
+	((e & AER_AGENT_COMPLETER_MASK) ? AER_AGENT_COMPLETER :		\
+	(e & AER_AGENT_REQUESTER_MASK) ? AER_AGENT_REQUESTER :		\
+	(AER_AGENT_TRANSMITTER_MASK(t, e)) ? AER_AGENT_TRANSMITTER :	\
+	AER_AGENT_RECEIVER)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#1503: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:37:
+#define AER_DATA_LINK_LAYER_ERROR_MASK(t, e)	\
+		(PCI_ERR_UNC_DLP|		\
+		PCI_ERR_COR_BAD_TLP| 		\
+		PCI_ERR_COR_BAD_DLLP|		\
+		PCI_ERR_COR_REP_ROLL| 		\
+		((t == AER_CORRECTABLE) ?	\
+		PCI_ERR_COR_REP_TIMER: 0))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1504: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:38:
+		(PCI_ERR_UNC_DLP|		\
 		                ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1505: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:39:
+^I^IPCI_ERR_COR_BAD_TLP| ^I^I\$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1505: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:39:
+		PCI_ERR_COR_BAD_TLP| 		\
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1506: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:40:
+		PCI_ERR_COR_BAD_DLLP|		\
 		                    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1507: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:41:
+^I^IPCI_ERR_COR_REP_ROLL| ^I^I\$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1507: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:41:
+		PCI_ERR_COR_REP_ROLL| 		\
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1509: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:43:
+		PCI_ERR_COR_REP_TIMER: 0))
 		                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#1515: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:49:
+#define AER_GET_LAYER_ERROR(t, e)				\
+	((e & AER_PHYSICAL_LAYER_ERROR_MASK) ?			\
+	AER_PHYSICAL_LAYER_ERROR :				\
+	(e & AER_DATA_LINK_LAYER_ERROR_MASK(t, e)) ?		\
+		AER_DATA_LINK_LAYER_ERROR : 			\
+		AER_TRANSACTION_LAYER_ERROR)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#1515: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:49:
+#define AER_GET_LAYER_ERROR(t, e)				\
+	((e & AER_PHYSICAL_LAYER_ERROR_MASK) ?			\
+	AER_PHYSICAL_LAYER_ERROR :				\
+	(e & AER_DATA_LINK_LAYER_ERROR_MASK(t, e)) ?		\
+		AER_DATA_LINK_LAYER_ERROR : 			\
+		AER_TRANSACTION_LAYER_ERROR)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1519: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:53:
+^I^IAER_DATA_LINK_LAYER_ERROR : ^I^I^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1522: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:56:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:57:
+ * AER error strings $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1525: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:59:
+static char* aer_error_severity_string[] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:60:
+^I"Uncorrected (Non-Fatal)", $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1531: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:65:
+static char* aer_error_layer[] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1534: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:68:
+^I"Transaction Layer" $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1536: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:70:
+};
+static char* aer_correctable_error_string[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1536: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:70:
+static char* aer_correctable_error_string[] = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1537: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:71:
+^I"Receiver Error        ",^I/* Bit Position 0 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1538: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:72:
+^I"Unknown Error Bit 1   ", ^I/* Bit Position 1^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1540: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:74:
+^I"Unknown Error Bit 3   ", ^I/* Bit Position 3^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1541: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:75:
+^I"Unknown Error Bit 4   ", ^I/* Bit Position 4 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1543: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:77:
+^I"Bad TLP               ",^I/* Bit Position 6 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1544: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:78:
+^I"Bad DLLP              ",^I/* Bit Position 7 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1545: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:79:
+^I"RELAY_NUM Rollover    ",^I/* Bit Position 8 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1546: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:80:
+^I"Unknown Error Bit 9   ", ^I/* Bit Position 9^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1548: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:82:
+^I"Unknown Error Bit 11  ", ^I/* Bit Position 11^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1549: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:83:
+^I"Replay Timer Timeout  ",^I/* Bit Position 12 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1550: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:84:
+^I"Advisory Non-Fatal    ", ^I/* Bit Position 13^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1552: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:86:
+^I"Unknown Error Bit 15  ", ^I/* Bit Position 15^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1553: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:87:
+^I"Unknown Error Bit 16  ", ^I/* Bit Position 16 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1555: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:89:
+^I"Unknown Error Bit 18  ", ^I/* Bit Position 18^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1557: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:91:
+^I"Unknown Error Bit 20  ", ^I/* Bit Position 20^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1558: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:92:
+^I"Unknown Error Bit 21  ", ^I/* Bit Position 21 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1560: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:94:
+^I"Unknown Error Bit 23  ", ^I/* Bit Position 23^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1562: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:96:
+^I"Unknown Error Bit 25  ", ^I/* Bit Position 25^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1563: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:97:
+^I"Unknown Error Bit 26  ", ^I/* Bit Position 26 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1566: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:100:
+^I"Unknown Error Bit 29  ", ^I/* Bit Position 29^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1567: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:101:
+^I"Unknown Error Bit 30  ", ^I/* Bit Position 30 ^I*/$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1571: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:105:
+static char* aer_uncorrectable_error_string[] = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1572: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:106:
+^I"Unknown Error Bit 0   ", ^I/* Bit Position 0^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1573: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:107:
+^I"Unknown Error Bit 1   ", ^I/* Bit Position 1^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1575: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:109:
+^I"Unknown Error Bit 3   ", ^I/* Bit Position 3^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1577: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:111:
+^I"Unknown Error Bit 5   ", ^I/* Bit Position 5^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1578: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:112:
+^I"Unknown Error Bit 6   ", ^I/* Bit Position 6^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1580: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:114:
+^I"Unknown Error Bit 8   ", ^I/* Bit Position 8^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1581: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:115:
+^I"Unknown Error Bit 9   ", ^I/* Bit Position 9^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1583: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:117:
+^I"Unknown Error Bit 11  ", ^I/* Bit Position 11^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1584: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:118:
+^I"Poisoned TLP          ",^I/* Bit Position 12 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1586: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:120:
+^I"Completion Timeout    ",^I/* Bit Position 14 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1587: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:121:
+^I"Completer Abort       ",^I/* Bit Position 15 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1593: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:127:
+^I"Unknown Error Bit 21  ", ^I/* Bit Position 21 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1595: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:129:
+^I"Unknown Error Bit 23  ", ^I/* Bit Position 23^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1597: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:131:
+^I"Unknown Error Bit 25  ", ^I/* Bit Position 25^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1598: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:132:
+^I"Unknown Error Bit 26  ", ^I/* Bit Position 26 ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1601: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:135:
+^I"Unknown Error Bit 29  ", ^I/* Bit Position 29^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1602: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:136:
+^I"Unknown Error Bit 30  ", ^I/* Bit Position 30 ^I*/$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1606: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:140:
+static char* aer_agent_string[] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1607: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:141:
+^I"Receiver ID", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1608: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:142:
+^I"Requester ID", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1609: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:143:
+^I"Completer ID", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1610: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:144:
+^I"Transmitter ID" $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1613: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:147:
+static char* aer_get_error_source_name(int severity, unsigned int status)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1615: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:149:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1615: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:149:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1617: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:151:
+        for (i = 0; i < 32; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:151:
+        for (i = 0; i < 32; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:152:
+                if (!(status & (1 << i)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:152:
+                if (!(status & (1 << i)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1619: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:153:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:153:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:155:
+                if (severity == AER_CORRECTABLE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:155:
+                if (severity == AER_CORRECTABLE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:156:
+                        return aer_correctable_error_string[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:156:
+                        return aer_correctable_error_string[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1623: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:157:
+                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:157:
+                else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1624: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:158:
+                        return aer_uncorrectable_error_string[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:158:
+                        return aer_uncorrectable_error_string[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1625: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:159:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1625: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:159:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:161:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1627: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:161:
+        return NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:166:
+	char * errmsg;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1635: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:169:
+	printk(KERN_ERR "+------ PCI-Express Device Error ------+\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1636: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:170:
+	printk(KERN_ERR "Error Severity\t\t: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:171:
+	printk(KERN_ERR "Error Severity\t\t: %s\n",
+		aer_error_severity_string[info->severity]);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1639: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:173:
+	if ( info->status == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:174:
+                printk(KERN_ERR "PCIE Bus Error type\t: (Unaccessible)\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:174:
+                printk(KERN_ERR "PCIE Bus Error type\t: (Unaccessible)\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1640: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:174:
+                printk(KERN_ERR "PCIE Bus Error type\t: (Unaccessible)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:175:
+                printk(KERN_ERR "Unaccessible Received\t: %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:175:
+                printk(KERN_ERR "Unaccessible Received\t: %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1641: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:175:
+                printk(KERN_ERR "Unaccessible Received\t: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1642: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:176:
+                printk(KERN_ERR "Unaccessible Received\t: %s\n",
+			info->flags & AER_MULTI_ERROR_VALID_FLAG ?

ERROR:CODE_INDENT: code indent should use tabs where possible
#1644: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:178:
+                printk(KERN_ERR "Unregistered Agent ID\t: %04x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1644: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:178:
+                printk(KERN_ERR "Unregistered Agent ID\t: %04x\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1644: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:178:
+                printk(KERN_ERR "Unregistered Agent ID\t: %04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1645: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:179:
+                printk(KERN_ERR "Unregistered Agent ID\t: %04x\n",
+			(dev->bus->number << 8) | dev->devfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1648: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:182:
+		printk(KERN_ERR "PCIE Bus Error type\t: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1649: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:183:
+		printk(KERN_ERR "PCIE Bus Error type\t: %s\n",
+			aer_error_layer[err_layer]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1652: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:186:
+		printk(KERN_ERR "%s\t: %s\n", errmsg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1653: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:187:
+		printk(KERN_ERR "%s\t: %s\n", errmsg,
+			info->flags & AER_MULTI_ERROR_VALID_FLAG ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1657: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:191:
+		printk(KERN_ERR "%s\t\t: %04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:192:
+		printk(KERN_ERR "%s\t\t: %04x\n",
+			aer_agent_string[agent],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1661: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:195:
+		printk(KERN_ERR "VendorID=%04xh, DeviceID=%04xh,"

WARNING:SPLIT_STRING: quoted string split across lines
#1662: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:196:
+		printk(KERN_ERR "VendorID=%04xh, DeviceID=%04xh,"
+			" Bus=%02xh, Device=%02xh, Function=%02xh\n",

CHECK:SPACING: No space is necessary after a cast
#1670: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:204:
+			unsigned char *tlp = (unsigned char *) &info->tlp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1671: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:205:
+			unsigned char *tlp = (unsigned char *) &info->tlp;
+			printk(KERN_ERR "TLB Header:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1671: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:205:
+			printk(KERN_ERR "TLB Header:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1672: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:206:
+			printk(KERN_ERR "%02x%02x%02x%02x %02x%02x%02x%02x"

WARNING:SPLIT_STRING: quoted string split across lines
#1673: FILE: drivers/pci/pcie/aer/aerdrv_errprint.c:207:
+			printk(KERN_ERR "%02x%02x%02x%02x %02x%02x%02x%02x"
+				" %02x%02x%02x%02x %02x%02x%02x%02x\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 108 errors, 129 warnings, 107 checks, 1585 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
