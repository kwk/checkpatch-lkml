CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: drivers/pci/hotplug/rpaphp.h:116:
+extern void init_eeh_handler (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: drivers/pci/hotplug/rpaphp.h:117:
+extern void exit_eeh_handler (void);

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: pci/hotplug/rpaphp_eeh.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: pci/hotplug/rpaphp_eeh.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: pci/hotplug/rpaphp_eeh.c:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: pci/hotplug/rpaphp_eeh.c:44:
+static int pci_search_bus_for_dev (struct pci_bus *bus, struct pci_dev *dev)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#133: FILE: pci/hotplug/rpaphp_eeh.c:48:
+	if (!bus) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: pci/hotplug/rpaphp_eeh.c:52:
+		struct pci_dev *pdev = pci_dev_b(ln);
+		if (pdev == dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: pci/hotplug/rpaphp_eeh.c:56:
+			int rc;
+			rc = pci_search_bus_for_dev (pdev->subordinate, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: pci/hotplug/rpaphp_eeh.c:56:
+			rc = pci_search_bus_for_dev (pdev->subordinate, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#161: FILE: pci/hotplug/rpaphp_eeh.c:76:
+pci_walk_bus (struct pci_dev *top, pci_buswalk_cb cb, void *userdata)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#166: FILE: pci/hotplug/rpaphp_eeh.c:81:
+	list_for_each_entry_safe (dev, tmp, &top->bus->devices, bus_list) {
+	   pci_dev_get(dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: pci/hotplug/rpaphp_eeh.c:81:
+	list_for_each_entry_safe (dev, tmp, &top->bus->devices, bus_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#171: FILE: pci/hotplug/rpaphp_eeh.c:86:
+		cb (dev, userdata);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: pci/hotplug/rpaphp_eeh.c:87:
+		if (dev->subordinate) {
+			pci_walk_bus (pci_dev_b(&dev->subordinate->devices), cb, userdata);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: pci/hotplug/rpaphp_eeh.c:88:
+			pci_walk_bus (pci_dev_b(&dev->subordinate->devices), cb, userdata);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot->bridge"
#196: FILE: pci/hotplug/rpaphp_eeh.c:111:
+		if (slot->bridge == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#205: FILE: pci/hotplug/rpaphp_eeh.c:120:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: pci/hotplug/rpaphp_eeh.c:120:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: pci/hotplug/rpaphp_eeh.c:121:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: pci/hotplug/rpaphp_eeh.c:121:
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: pci/hotplug/rpaphp_eeh.c:121:
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: pci/hotplug/rpaphp_eeh.c:125:
+		if (pci_search_bus_for_dev (bus, dev))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: pci/hotplug/rpaphp_eeh.c:141:
+^Iif (!driver) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: pci/hotplug/rpaphp_eeh.c:146:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: pci/hotplug/rpaphp_eeh.c:147:
+	rc = driver->err_handler.error_detected (dev, pci_channel_io_frozen);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: pci/hotplug/rpaphp_eeh.c:148:
+	if (*res == PCIERR_RESULT_NONE) *res = rc;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: pci/hotplug/rpaphp_eeh.c:149:
+	if (*res == PCIERR_RESULT_NEED_RESET) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: pci/hotplug/rpaphp_eeh.c:150:
+	if (*res == PCIERR_RESULT_DISCONNECT &&
+	     rc == PCIERR_RESULT_NEED_RESET) *res = rc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: pci/hotplug/rpaphp_eeh.c:151:
+	if (*res == PCIERR_RESULT_DISCONNECT &&
+	     rc == PCIERR_RESULT_NEED_RESET) *res = rc;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: pci/hotplug/rpaphp_eeh.c:162:
+^Iif (!driver) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: pci/hotplug/rpaphp_eeh.c:166:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: pci/hotplug/rpaphp_eeh.c:167:
+	driver->err_handler.slot_reset (dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: pci/hotplug/rpaphp_eeh.c:174:
+^Iif (!driver) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: pci/hotplug/rpaphp_eeh.c:180:
+	driver->err_handler.resume (dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: pci/hotplug/rpaphp_eeh.c:187:
+^Iif (!driver) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: pci/hotplug/rpaphp_eeh.c:193:
+	driver->err_handler.error_detected (dev, pci_channel_io_perm_failure);

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#287: FILE: pci/hotplug/rpaphp_eeh.c:202:
+ * occuring to wild addresses (which usually happen due to
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: pci/hotplug/rpaphp_eeh.c:215:
+int eeh_reset_device (struct pci_dev *dev, struct device_node *dn, int reconfig)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#302: FILE: pci/hotplug/rpaphp_eeh.c:217:
+	struct slot *frozen_slot= NULL;
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: pci/hotplug/rpaphp_eeh.c:225:
+	if (reconfig && frozen_slot) rpaphp_unconfig_pci_adapter (frozen_slot);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#310: FILE: pci/hotplug/rpaphp_eeh.c:225:
+	if (reconfig && frozen_slot) rpaphp_unconfig_pci_adapter (frozen_slot);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#313: FILE: pci/hotplug/rpaphp_eeh.c:228:
+	 * Reconfigure bridges and devices */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: pci/hotplug/rpaphp_eeh.c:229:
+	rtas_set_slot_reset (dn->child);

WARNING:LINE_SPACING: Missing a blank line after declarations
#318: FILE: pci/hotplug/rpaphp_eeh.c:233:
+	struct device_node *peer = dn->child;
+	while (peer) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: pci/hotplug/rpaphp_eeh.c:244:
+		ssleep (5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: pci/hotplug/rpaphp_eeh.c:245:
+		rpaphp_enable_pci_slot (frozen_slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: pci/hotplug/rpaphp_eeh.c:255:
+int handle_eeh_events (struct notifier_block *self,

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: pci/hotplug/rpaphp_eeh.c:256:
+                       unsigned long reason, void *ev)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: pci/hotplug/rpaphp_eeh.c:256:
+                       unsigned long reason, void *ev)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#343: FILE: pci/hotplug/rpaphp_eeh.c:258:
+	int freeze_count=0;
 	                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#349: FILE: pci/hotplug/rpaphp_eeh.c:264:
+	if (!dev)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: pci/hotplug/rpaphp_eeh.c:266:
+		printk ("EEH: EEH error caught, but no PCI device specified!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: pci/hotplug/rpaphp_eeh.c:266:
+		printk ("EEH: EEH error caught, but no PCI device specified!\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#356: FILE: pci/hotplug/rpaphp_eeh.c:271:
+	if (!frozen_device)
+	{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: pci/hotplug/rpaphp_eeh.c:273:
+		printk (KERN_ERR "EEH: Cannot find PCI controller for %s %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: pci/hotplug/rpaphp_eeh.c:273:
+		printk (KERN_ERR "EEH: Cannot find PCI controller for %s %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: pci/hotplug/rpaphp_eeh.c:274:
+		printk (KERN_ERR "EEH: Cannot find PCI controller for %s %s\n",
+				pci_name(dev), pci_pretty_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: pci/hotplug/rpaphp_eeh.c:274:
+				pci_name(dev), pci_pretty_name (dev));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: pci/hotplug/rpaphp_eeh.c:278:
+	BUG_ON (frozen_device->phb==NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: pci/hotplug/rpaphp_eeh.c:278:
+	BUG_ON (frozen_device->phb==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#363: FILE: pci/hotplug/rpaphp_eeh.c:278:
+	BUG_ON (frozen_device->phb==NULL);
 	                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frozen_device->phb"
#363: FILE: pci/hotplug/rpaphp_eeh.c:278:
+	BUG_ON (frozen_device->phb==NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#366: FILE: pci/hotplug/rpaphp_eeh.c:281:
+	 * These are false alarms. Empty slots have no child dn. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_channel_io_perm_failure'
#367: FILE: pci/hotplug/rpaphp_eeh.c:282:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frozen_device == NULL'
#367: FILE: pci/hotplug/rpaphp_eeh.c:282:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frozen_device"
#367: FILE: pci/hotplug/rpaphp_eeh.c:282:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#372: FILE: pci/hotplug/rpaphp_eeh.c:287:
+	freeze_count ++;
 	             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_channel_io_perm_failure'
#379: FILE: pci/hotplug/rpaphp_eeh.c:294:
+	if ((event->state == pci_channel_io_perm_failure) &&
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->time_unavail <= 0'
#379: FILE: pci/hotplug/rpaphp_eeh.c:294:
+	if ((event->state == pci_channel_io_perm_failure) &&
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#381: FILE: pci/hotplug/rpaphp_eeh.c:296:
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#391: FILE: pci/hotplug/rpaphp_eeh.c:306:
+		printk (KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: pci/hotplug/rpaphp_eeh.c:306:
+		printk (KERN_ERR

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#392: FILE: pci/hotplug/rpaphp_eeh.c:307:
+		   "EEH: device %s:%s has failed %d times \n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: pci/hotplug/rpaphp_eeh.c:310:
+			pci_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: pci/hotplug/rpaphp_eeh.c:311:
+			pci_pretty_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: pci/hotplug/rpaphp_eeh.c:314:
+		eeh_slot_error_detail (frozen_device, 2 /* Permanent Error */);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: pci/hotplug/rpaphp_eeh.c:317:
+		pci_walk_bus (dev, eeh_report_failure, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#406: FILE: pci/hotplug/rpaphp_eeh.c:321:
+		struct slot * frozen_slot = rpaphp_find_slot(dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: pci/hotplug/rpaphp_eeh.c:322:
+		struct slot * frozen_slot = rpaphp_find_slot(dev);
+		if (frozen_slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#408: FILE: pci/hotplug/rpaphp_eeh.c:323:
+			rpaphp_unconfig_pci_adapter (frozen_slot);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#410: FILE: pci/hotplug/rpaphp_eeh.c:325:
+		return 1;
+	} else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: pci/hotplug/rpaphp_eeh.c:326:
+		eeh_slot_error_detail (frozen_device, 1 /* Temporary Error */);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#414: FILE: pci/hotplug/rpaphp_eeh.c:329:
+	printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: pci/hotplug/rpaphp_eeh.c:329:
+	printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: pci/hotplug/rpaphp_eeh.c:332:
+		pci_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#418: FILE: pci/hotplug/rpaphp_eeh.c:333:
+		pci_pretty_name (dev));

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: pci/hotplug/rpaphp_eeh.c:339:
+	enum pcierr_result result = PCIERR_RESULT_NONE;
+	pci_walk_bus (dev, eeh_report_error, &result);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: pci/hotplug/rpaphp_eeh.c:339:
+	pci_walk_bus (dev, eeh_report_error, &result);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: pci/hotplug/rpaphp_eeh.c:342:
+	 * the device, and hope that clears the error. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#428: FILE: pci/hotplug/rpaphp_eeh.c:343:
+	if (result == PCIERR_RESULT_NONE) {
+		eeh_reset_device (dev, frozen_device, 1);
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: pci/hotplug/rpaphp_eeh.c:344:
+		eeh_reset_device (dev, frozen_device, 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: pci/hotplug/rpaphp_eeh.c:349:
+		eeh_reset_device (dev, frozen_device, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: pci/hotplug/rpaphp_eeh.c:350:
+		pci_walk_bus (dev, eeh_report_reset, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: pci/hotplug/rpaphp_eeh.c:356:
+		eeh_reset_device (dev, frozen_device, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: pci/hotplug/rpaphp_eeh.c:357:
+		pci_walk_bus (dev, eeh_report_reset, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: pci/hotplug/rpaphp_eeh.c:361:
+	pci_walk_bus (dev, eeh_report_resume, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#461: FILE: pci/hotplug/rpaphp_eeh.c:376:
+	peh_register_notifier (&eeh_block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: pci/hotplug/rpaphp_eeh.c:381:
+	peh_unregister_notifier (&eeh_block);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 66 warnings, 13 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
