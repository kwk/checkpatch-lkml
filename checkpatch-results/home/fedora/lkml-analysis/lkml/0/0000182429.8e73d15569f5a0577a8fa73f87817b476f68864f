WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: mm/slab.c:2968:
+	for_each_cpu (i) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#218: FILE: mm/slab.c:3187:
+		if (!(new_alien = alloc_alien_cache(i, cachep->limit)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#225: FILE: mm/slab.c:3190:
+		if (!(new = alloc_arraycache(i, (cachep->shared*
 		                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: mm/slab.c:3190:
+		if (!(new = alloc_arraycache(i, (cachep->shared*

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#228: FILE: mm/slab.c:3193:
+		if ((l3 = cachep->nodelists[node])) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#235: FILE: mm/slab.c:3197:
+			if ((nc = cachep->nodelists[node]->shared))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: mm/slab.c:3199:
+				free_block(cachep, nc->entry,
 							nc->avail);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#286: FILE: mm/slab.c:3220:
+		if (!(l3 = kmalloc_node(sizeof(struct kmem_list3),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*l3)...) over kmalloc_node(sizeof(struct kmem_list3)...)
#286: FILE: mm/slab.c:3220:
+		if (!(l3 = kmalloc_node(sizeof(struct kmem_list3),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: mm/slab.c:3221:
+		if (!(l3 = kmalloc_node(sizeof(struct kmem_list3),
+						GFP_KERNEL, node)))

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#292: FILE: mm/slab.c:3226:
+			((unsigned long)cachep)%REAPTIMEOUT_LIST3;
 			                       ^

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#296: FILE: mm/slab.c:3230:
+		l3->free_limit = (1 + nr_cpus_node(node))*
 		                                         ^

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#299: FILE: mm/slab.c:3233:
+		l3->free_limit = (1 + num_online_cpus())*
 		                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#322: FILE: mm/slab.c:3272:
+			for (i--; i >= 0; i--) kfree(new.new[i]);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 7 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
