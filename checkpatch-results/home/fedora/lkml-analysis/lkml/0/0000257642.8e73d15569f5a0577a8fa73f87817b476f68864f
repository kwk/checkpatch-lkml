ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#63: FILE: drivers/pci/hotplug/acpiphp.h:181:
+struct acpiphp_attention_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#77: FILE: drivers/pci/hotplug/acpiphp.h:228:
+extern int acpiphp_register_attention(struct acpiphp_attention_info*info);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: drivers/pci/hotplug/acpiphp.h:228:
+extern int acpiphp_register_attention(struct acpiphp_attention_info*info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: drivers/pci/hotplug/acpiphp.h:229:
+extern int acpiphp_unregister_attention(struct acpiphp_attention_info *info);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#99: FILE: drivers/pci/hotplug/acpiphp_core.c:68:
+EXPORT_SYMBOL_GPL(acpiphp_unregister_attention);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: drivers/pci/hotplug/acpiphp_core.c:74:
+static int get_attention_status (struct hotplug_slot *slot, u8 *value);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/pci/hotplug/acpiphp_core.c:91:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/pci/hotplug/acpiphp_core.c:105:
+	if (info && info->owner && info->set_attn &&
+			info->get_attn && !attention_info) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: drivers/pci/hotplug/acpiphp_core.c:112:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/pci/hotplug/acpiphp_core.c:118:
+ * driver that manipulates the attention LED.  The pointer to the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/pci/hotplug/acpiphp_core.c:132:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#197: FILE: drivers/pci/hotplug/acpiphp_core.c:171:
+  * set_attention_status - set attention LED
+ * @hotplug_slot: slot to set attention LED on

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/pci/hotplug/acpiphp_core.c:178:
+ static int set_attention_status(struct hotplug_slot *hotplug_slot, u8 status)$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#204: FILE: drivers/pci/hotplug/acpiphp_core.c:178:
+ static int set_attention_status(struct hotplug_slot *hotplug_slot, u8 status)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/pci/hotplug/acpiphp_core.c:179:
+ {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/pci/hotplug/acpiphp_core.c:182:
+ ^Idbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: drivers/pci/hotplug/acpiphp_core.c:182:
+ ^Idbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/pci/hotplug/acpiphp_core.c:182:
+ ^Idbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#208: FILE: drivers/pci/hotplug/acpiphp_core.c:182:
+ 	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/pci/hotplug/acpiphp_core.c:183:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/pci/hotplug/acpiphp_core.c:183:
+ $

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: drivers/pci/hotplug/acpiphp_core.c:184:
+	if (attention_info && try_module_get(attention_info->owner)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: drivers/pci/hotplug/acpiphp_core.c:187:
+	} else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/pci/hotplug/acpiphp_core.c:190:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/pci/hotplug/acpiphp_core.c:191:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/pci/hotplug/acpiphp_core.c:191:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/pci/hotplug/acpiphp_core.c:213:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#227: FILE: drivers/pci/hotplug/acpiphp_core.c:215:
+ /**
+ * get_attention_status - get attention LED status

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#240: FILE: drivers/pci/hotplug/acpiphp_core.c:228:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#242: FILE: drivers/pci/hotplug/acpiphp_core.c:230:
+	if (attention_info && try_module_get(attention_info->owner)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#245: FILE: drivers/pci/hotplug/acpiphp_core.c:233:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/pci/hotplug/acpiphp_core.c:238:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257642.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 12 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257642.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
