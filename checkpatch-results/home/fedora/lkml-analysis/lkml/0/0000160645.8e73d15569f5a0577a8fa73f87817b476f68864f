WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: fs/iolock.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#65: FILE: fs/iolock.c:2:
+ * fs/iolock.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#102: FILE: fs/iolock.c:39:
+	ret->files = kcalloc(mm->map_count, sizeof(struct file*), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: fs/iolock.c:59:
+ ^I^I/* FIXME: This only works when one address_space participates$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: fs/iolock.c:59:
+ ^I^I/* FIXME: This only works when one address_space participates$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/iolock.c:59:
+ ^I^I/* FIXME: This only works when one address_space participates$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/iolock.c:60:
+^I^I          in the iolock. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: fs/iolock.c:60:
+ 		/* FIXME: This only works when one address_space participates
+		          in the iolock. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#123: FILE: fs/iolock.c:60:
+		          in the iolock. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: fs/iolock.c:84:
+	struct address_space *mapping = iolock->mapping;
+	if (mapping && mapping->a_ops->iolock_release)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: fs/read_write.c:251:
+			struct iolock * iolock = iolock_region(buf, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: fs/read_write.c:252:
+			struct iolock * iolock = iolock_region(buf, count);
+			if (IS_ERR(iolock)) {

WARNING:INDENTED_LABEL: labels should not be indented
#182: FILE: fs/read_write.c:265:
+  out:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: fs/read_write.c:309:
+			struct iolock * iolock = iolock_region(buf, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: fs/read_write.c:310:
+			struct iolock * iolock = iolock_region(buf, count);
+			if (IS_ERR(iolock)) {

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: fs/read_write.c:323:
+  out:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#213: FILE: include/linux/iolock.h:1:
+#ifndef __LINUX_IOLOCK_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file **' should also have an identifier name
#245: FILE: include/linux/fs.h:337:
+	int (*iolock_acquire)(struct file **, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#245: FILE: include/linux/fs.h:337:
+	int (*iolock_acquire)(struct file **, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file **' should also have an identifier name
#246: FILE: include/linux/fs.h:338:
+	void (*iolock_release)(struct file **, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#246: FILE: include/linux/fs.h:338:
+	void (*iolock_release)(struct file **, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160645.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 0 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160645.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
