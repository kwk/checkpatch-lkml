WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -uNr 4-mSsas/include/linux/shmem_fs.h 4-mSsasb/include/linux/shmem_fs.h

WARNING:TYPO_SPELLING: 'addional' may be misspelled - perhaps 'additional'?
#101: FILE: mm/shmem.c:107:
+ * shmem_inode_info structure. So small files do not need an addional
                                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: mm/shmem.c:118:
+ * ^I      |^I     +-> 20-23$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: mm/shmem.c:119:
+ * ^I      |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: mm/shmem.c:120:
+ * ^I      +-->dir2 --> 24-27$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: mm/shmem.c:121:
+ * ^I      |^I       +-> 28-31$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: mm/shmem.c:122:
+ * ^I      |^I       +-> 32-35$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: mm/shmem.c:123:
+ * ^I      |^I       +-> 36-39$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: mm/shmem.c:124:
+ * ^I      |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: mm/shmem.c:125:
+ * ^I      +-->dir3 --> 40-43$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: mm/shmem.c:126:
+ * ^I       ^I       +-> 44-47$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: mm/shmem.c:127:
+ * ^I      ^I       +-> 48-51$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: mm/shmem.c:128:
+ * ^I      ^I       +-> 52-55$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#125: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#125: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#125: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: mm/shmem.c:131:
+#define SHMEM_MAX_BLOCKS (SHMEM_NR_DIRECT + ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2*(ENTRIES_PER_PAGE+1))
                                                                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#127: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: mm/shmem.c:133:
+static swp_entry_t * shmem_swp_entry (struct shmem_inode_info *info, unsigned long index, unsigned long page) 

CHECK:SPACING: No space is necessary after a cast
#144: FILE: mm/shmem.c:146:
+		info->i_indirect = (void *) page;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#149: FILE: mm/shmem.c:151:
+	if (index >= ENTRIES_PER_PAGE/2) {
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#150: FILE: mm/shmem.c:152:
+		index -= ENTRIES_PER_PAGE/2;
 		                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: mm/shmem.c:153:
+^I^Idir = info->i_indirect + ENTRIES_PER_PAGE/2 $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#151: FILE: mm/shmem.c:153:
+		dir = info->i_indirect + ENTRIES_PER_PAGE/2 
 		                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#152: FILE: mm/shmem.c:154:
+			+ index/ENTRIES_PER_PAGE;
 			       ^

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: mm/shmem.c:157:
+		if(!*dir) {

CHECK:SPACING: No space is necessary after a cast
#156: FILE: mm/shmem.c:158:
+			*dir = (void *) page;

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: mm/shmem.c:160:
+                           in the next step */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#158: FILE: mm/shmem.c:160:
+			/* We return since we will need another page
+                           in the next step */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: mm/shmem.c:160:
+                           in the next step */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: mm/shmem.c:180:
+static inline swp_entry_t * shmem_alloc_entry (struct shmem_inode_info *info, unsigned long index)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: mm/shmem.c:180:
+static inline swp_entry_t * shmem_alloc_entry (struct shmem_inode_info *info, unsigned long index)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: mm/shmem.c:183:
+	swp_entry_t * res;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: mm/shmem.c:191:
+	while ((res = shmem_swp_entry(info,index,page)) == ERR_PTR(-ENOMEM)) {
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: mm/shmem.c:191:
+	while ((res = shmem_swp_entry(info,index,page)) == ERR_PTR(-ENOMEM)) {
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: mm/shmem.c:234:
+static inline unsigned long $

ERROR:POINTER_LOCATION: "foo *** bar" should be "foo ***bar"
#241: FILE: mm/shmem.c:235:
+shmem_truncate_direct(swp_entry_t *** dir, unsigned long start, unsigned long len) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: mm/shmem.c:238:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: mm/shmem.c:238:
+ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#248: FILE: mm/shmem.c:242:
+	last = *dir + (len + ENTRIES_PER_PAGE-1) / ENTRIES_PER_PAGE;
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: mm/shmem.c:245:
+	for (ptr = *dir + start/ENTRIES_PER_PAGE; ptr < last; ptr++) {
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#259: FILE: mm/shmem.c:253:
+			free_page ((unsigned long) *ptr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#259: FILE: mm/shmem.c:253:
+			free_page ((unsigned long) *ptr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#262: FILE: mm/shmem.c:256:
+			freed += shmem_free_swp(*ptr+off,ENTRIES_PER_PAGE-off);
 			                                                 ^

CHECK:SPACING: No space is necessary after a cast
#269: FILE: mm/shmem.c:262:
+		free_page((unsigned long) *dir);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#289: FILE: mm/shmem.c:282:
+	unsigned long max = info->next_index-1;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#297: FILE: mm/shmem.c:290:
+	if (max < ENTRIES_PER_PAGE * ENTRIES_PER_PAGE/2 + SHMEM_NR_DIRECT) {
 	                                             ^

CHECK:SPACING: No space is necessary after a cast
#299: FILE: mm/shmem.c:292:
+		base = (swp_entry_t ***) &info->i_indirect;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#301: FILE: mm/shmem.c:294:
+		len = max+1;
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#303: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#303: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: mm/shmem.c:296:
+		max -= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#304: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#304: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#304: FILE: mm/shmem.c:297:
+		if (max >= ENTRIES_PER_PAGE*ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2)
 		                                                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#305: FILE: mm/shmem.c:298:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#307: FILE: mm/shmem.c:300:
+		baseidx = max & ~(ENTRIES_PER_PAGE*ENTRIES_PER_PAGE-1);
 		                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#307: FILE: mm/shmem.c:300:
+		baseidx = max & ~(ENTRIES_PER_PAGE*ENTRIES_PER_PAGE-1);
 		                                                   ^

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: No space is necessary after a cast
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;
 		                                                                                         ^

WARNING:SPACING: space prohibited before semicolon
#308: FILE: mm/shmem.c:301:
+		base = (swp_entry_t ***) info->i_indirect + ENTRIES_PER_PAGE/2 + baseidx/ENTRIES_PER_PAGE/ENTRIES_PER_PAGE ;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#310: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#310: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#310: FILE: mm/shmem.c:303:
+		baseidx += ENTRIES_PER_PAGE*ENTRIES_PER_PAGE/2+SHMEM_NR_DIRECT;
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: mm/shmem.c:327:
+^Iwhile (index < info->next_index) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: mm/shmem.c:432:
+	entry = shmem_alloc_entry (info, idx);

CHECK:SPACING: No space is necessary after a cast
#411: FILE: mm/shmem.c:1254:
+	sb->s_maxbytes = (unsigned long long) SHMEM_MAX_BLOCKS << PAGE_CACHE_SHIFT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: mm/shmem.c:1392:
+	offset = shmem_clear_swp (entry, info->i_direct, SHMEM_NR_DIRECT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: mm/shmem.c:1396:
+^Ifor (idx = SHMEM_NR_DIRECT; idx < info->next_index; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: mm/shmem.c:1401:
+		offset = shmem_clear_swp (entry, ptr, ENTRIES_PER_PAGE);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 27 warnings, 35 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000534793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
