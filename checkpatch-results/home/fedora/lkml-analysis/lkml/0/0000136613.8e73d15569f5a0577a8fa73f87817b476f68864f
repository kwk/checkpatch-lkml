ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: drivers/ieee1394/amdtp.c:1017:
+        s = kzalloc(sizeof(struct stream), SLAB_KERNEL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: drivers/ieee1394/amdtp.c:1017:
+        s = kzalloc(sizeof(struct stream), SLAB_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*s)...) over kzalloc(sizeof(struct stream)...)
#49: FILE: drivers/ieee1394/amdtp.c:1017:
+        s = kzalloc(sizeof(struct stream), SLAB_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*video)...) over kzalloc(sizeof(struct video_card)...)
#66: FILE: drivers/ieee1394/dv1394.c:2221:
+	video = kzalloc(sizeof(struct video_card), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/ieee1394/hosts.c:117:
+        h = kzalloc(sizeof(struct hpsb_host) + extra, SLAB_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/ieee1394/hosts.c:117:
+        h = kzalloc(sizeof(struct hpsb_host) + extra, SLAB_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*h)...) over kzalloc(sizeof(struct hpsb_host)...)
#104: FILE: drivers/ieee1394/hosts.c:117:
+        h = kzalloc(sizeof(struct hpsb_host) + extra, SLAB_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ne)...) over kzalloc(sizeof(struct node_entry)...)
#119: FILE: drivers/ieee1394/nodemgr.c:748:
+	ne = kzalloc(sizeof(struct node_entry), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ud)...) over kzalloc(sizeof(struct unit_directory)...)
#132: FILE: drivers/ieee1394/nodemgr.c:873:
+	ud = kzalloc(sizeof(struct unit_directory), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#151: FILE: drivers/ieee1394/ohci1394.c:2963:
+	d->buf_cpu = kzalloc(d->num_desc * sizeof(quadlet_t*), GFP_ATOMIC);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#151: FILE: drivers/ieee1394/ohci1394.c:2963:
+	d->buf_cpu = kzalloc(d->num_desc * sizeof(quadlet_t*), GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#152: FILE: drivers/ieee1394/ohci1394.c:2964:
+	d->buf_bus = kzalloc(d->num_desc * sizeof(dma_addr_t), GFP_ATOMIC);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#163: FILE: drivers/ieee1394/ohci1394.c:2972:
+	d->prg_cpu = kzalloc(d->num_desc * sizeof(struct dma_cmd*),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/ieee1394/ohci1394.c:2973:
+	d->prg_cpu = kzalloc(d->num_desc * sizeof(struct dma_cmd*),
 				GFP_ATOMIC);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#166: FILE: drivers/ieee1394/ohci1394.c:2974:
+	d->prg_bus = kzalloc(d->num_desc * sizeof(dma_addr_t), GFP_ATOMIC);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#183: FILE: drivers/ieee1394/ohci1394.c:3092:
+	d->prg_cpu = kzalloc(d->num_desc * sizeof(struct at_dma_prg*),

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#183: FILE: drivers/ieee1394/ohci1394.c:3092:
+	d->prg_cpu = kzalloc(d->num_desc * sizeof(struct at_dma_prg*),
 			     GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#186: FILE: drivers/ieee1394/ohci1394.c:3094:
+	d->prg_bus = kzalloc(d->num_desc * sizeof(dma_addr_t), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*req)...) over kzalloc(sizeof(struct pending_request)...)
#208: FILE: drivers/ieee1394/raw1394.c:105:
+	req = kzalloc(sizeof(struct pending_request), flags);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fi)...) over kzalloc(sizeof(struct file_info)...)
#219: FILE: drivers/ieee1394/raw1394.c:2685:
+	fi = kzalloc(sizeof(struct file_info), SLAB_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*command)...) over kzalloc(sizeof(struct sbp2_command_info)...)
#237: FILE: drivers/ieee1394/sbp2.c:420:
+		command = kzalloc(sizeof(struct sbp2_command_info), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*d)...) over kzalloc(sizeof(struct dma_iso_ctx)...)
#269: FILE: drivers/ieee1394/video1394.c:209:
+	d = kzalloc(sizeof(struct dma_iso_ctx), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#285: FILE: drivers/ieee1394/video1394.c:269:
+		d->ir_prg = kzalloc(d->num_desc * sizeof(struct dma_cmd *),
 				    GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#302: FILE: drivers/ieee1394/video1394.c:297:
+		d->it_prg = kzalloc(d->num_desc * sizeof(struct it_dma_prg *),
 				    GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#322: FILE: drivers/ieee1394/video1394.c:338:
+	d->buffer_prg_assignment = kzalloc(d->num_desc * sizeof(unsigned int),
 				   GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/ieee1394/video1394.c:339:
+	d->buffer_prg_assignment = kzalloc(d->num_desc * sizeof(unsigned int),
 				   GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#325: FILE: drivers/ieee1394/video1394.c:340:
+	d->buffer_time = kzalloc(d->num_desc * sizeof(struct timeval),
 				   GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/ieee1394/video1394.c:341:
+	d->buffer_time = kzalloc(d->num_desc * sizeof(struct timeval),
 				   GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#328: FILE: drivers/ieee1394/video1394.c:342:
+	d->last_used_cmd = kzalloc(d->num_desc * sizeof(unsigned int),
 				   GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ctx)...) over kzalloc(sizeof(struct file_ctx)...)
#348: FILE: drivers/ieee1394/video1394.c:1246:
+	ctx = kzalloc(sizeof(struct file_ctx), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136613.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 12 warnings, 13 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136613.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
