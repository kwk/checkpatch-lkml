WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/xen/xenbus/xenbus_client.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/xen/xenbus/xenbus_client.c:7:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: drivers/xen/xenbus/xenbus_client.c:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/xen/xenbus/xenbus_client.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/xen/xenbus/xenbus_client.c:20:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/xen/xenbus/xenbus_client.c:39:
+    pr_debug("xenbus_client (%s:%d) " fmt ".\n", __FUNCTION__, __LINE__, ##args)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#136: FILE: drivers/xen/xenbus/xenbus_client.c:39:
+    pr_debug("xenbus_client (%s:%d) " fmt ".\n", __FUNCTION__, __LINE__, ##args)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/xen/xenbus/xenbus_client.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: drivers/xen/xenbus/xenbus_client.c:71:
+	char *state = kasprintf("%s/%s", path, path2);
+	if (!state) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/xen/xenbus/xenbus_client.c:83:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <XenbusState>
#183: FILE: drivers/xen/xenbus/xenbus_client.c:86:
+			XenbusState state)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#186: FILE: drivers/xen/xenbus/xenbus_client.c:89:
+	/* We check whether the state is currently set to the given value, and
+	   if not, then the state is set.  We don't want to unconditionally

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/xen/xenbus/xenbus_client.c:103:
+	err = xenbus_scanf(xbt, dev->nodename, "state", "%d",
+			       &current_state);

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosing>
#206: FILE: drivers/xen/xenbus/xenbus_client.c:109:
+		if (state != XenbusStateClosing) /* Avoid looping */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: drivers/xen/xenbus/xenbus_client.c:120:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/xen/xenbus/xenbus_client.c:130:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!printf_buffer"
#237: FILE: drivers/xen/xenbus/xenbus_client.c:140:
+	if (printf_buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: drivers/xen/xenbus/xenbus_client.c:144:
+	ret = vsnprintf(printf_buffer+len, PRINTF_BUFFER_SIZE-len, fmt, ap);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#241: FILE: drivers/xen/xenbus/xenbus_client.c:144:
+	ret = vsnprintf(printf_buffer+len, PRINTF_BUFFER_SIZE-len, fmt, ap);
 	                                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: drivers/xen/xenbus/xenbus_client.c:146:
+	BUG_ON(len + ret > PRINTF_BUFFER_SIZE-1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#243: FILE: drivers/xen/xenbus/xenbus_client.c:146:
+	BUG_ON(len + ret > PRINTF_BUFFER_SIZE-1);
 	                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path_buffer"
#249: FILE: drivers/xen/xenbus/xenbus_client.c:152:
+	if (path_buffer == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: drivers/xen/xenbus/xenbus_client.c:153:
+		printk("xenbus: failed to write error node for %s (%s)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#256: FILE: drivers/xen/xenbus/xenbus_client.c:159:
+		printk("xenbus: failed to write error node for %s (%s)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#266: FILE: drivers/xen/xenbus/xenbus_client.c:169:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#278: FILE: drivers/xen/xenbus/xenbus_client.c:181:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: drivers/xen/xenbus/xenbus_client.c:195:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: drivers/xen/xenbus/xenbus_client.c:199:
+	int err = gnttab_grant_foreign_access(dev->otherend_id, ring_mfn, 0);
+	if (err < 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: drivers/xen/xenbus/xenbus_client.c:205:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: drivers/xen/xenbus/xenbus_client.c:214:
+	int err = HYPERVISOR_event_channel_op(&op);
+	if (err)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: drivers/xen/xenbus/xenbus_client.c:222:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: drivers/xen/xenbus/xenbus_client.c:231:
+	int err = HYPERVISOR_event_channel_op(&op);
+	if (err)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#338: FILE: drivers/xen/xenbus/xenbus_client.c:241:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: drivers/xen/xenbus/xenbus_client.c:249:
+	int err = HYPERVISOR_event_channel_op(&op);
+	if (err)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#351: FILE: drivers/xen/xenbus/xenbus_client.c:254:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#371: FILE: drivers/xen/xenbus/xenbus_client.c:274:
+	BUG_ON(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#390: FILE: drivers/xen/xenbus/xenbus_client.c:293:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#401: FILE: drivers/xen/xenbus/xenbus_client.c:304:
+	BUG_ON(HYPERVISOR_grant_table_op(GNTTABOP_map_grant_ref, &op, 1));

CHECK:BRACES: braces {} should be used on all arms of this statement
#403: FILE: drivers/xen/xenbus/xenbus_client.c:306:
+	if (op.status != GNTST_okay) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: drivers/xen/xenbus/xenbus_client.c:310:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: drivers/xen/xenbus/xenbus_client.c:317:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "area"
#430: FILE: drivers/xen/xenbus/xenbus_client.c:333:
+	for (area = vmlist; area != NULL; area = area->next) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#445: FILE: drivers/xen/xenbus/xenbus_client.c:348:
+	BUG_ON(HYPERVISOR_grant_table_op(GNTTABOP_unmap_grant_ref, &op, 1));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: drivers/xen/xenbus/xenbus_client.c:362:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#468: FILE: drivers/xen/xenbus/xenbus_client.c:371:
+	BUG_ON(HYPERVISOR_grant_table_op(GNTTABOP_unmap_grant_ref, &op, 1));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#479: FILE: drivers/xen/xenbus/xenbus_client.c:382:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#484: FILE: drivers/xen/xenbus/xenbus_client.c:387:
+	int err = xenbus_gather(XBT_NULL, path, "state", "%d", &result, NULL);
+	if (err)

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosed>
#485: FILE: drivers/xen/xenbus/xenbus_client.c:388:
+		result = XenbusStateClosed;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#493: FILE: drivers/xen/xenbus/xenbus_comms.c:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: drivers/xen/xenbus/xenbus_comms.c:7:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/xen/xenbus/xenbus_comms.c:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/xen/xenbus/xenbus_comms.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: drivers/xen/xenbus/xenbus_comms.c:20:
+ * $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#533: FILE: drivers/xen/xenbus/xenbus_comms.c:41:
+extern void xenbus_probe(void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#533: FILE: drivers/xen/xenbus/xenbus_comms.c:41:
+extern void xenbus_probe(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#534: FILE: drivers/xen/xenbus/xenbus_comms.c:42:
+extern int xenstored_ready;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#580: FILE: drivers/xen/xenbus/xenbus_comms.c:88:
+int xb_write(const void *data, unsigned len)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#590: FILE: drivers/xen/xenbus/xenbus_comms.c:98:
+		rc = wait_event_interruptible(

WARNING:MEMORY_BARRIER: memory barrier without comment
#600: FILE: drivers/xen/xenbus/xenbus_comms.c:108:
+		mb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#625: FILE: drivers/xen/xenbus/xenbus_comms.c:133:
+int xb_read(void *data, unsigned len)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#635: FILE: drivers/xen/xenbus/xenbus_comms.c:143:
+		rc = wait_event_interruptible(

WARNING:MEMORY_BARRIER: memory barrier without comment
#644: FILE: drivers/xen/xenbus/xenbus_comms.c:152:
+		mb();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#682: FILE: drivers/xen/xenbus/xenbus_comms.c:190:
+	err = bind_evtchn_to_irqhandler(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#686: FILE: drivers/xen/xenbus/xenbus_comms.c:194:
+		printk(KERN_ERR "XENBUS request irq failed %i\n", err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#697: FILE: drivers/xen/xenbus/xenbus_comms.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/xen/xenbus/xenbus_comms.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: drivers/xen/xenbus/xenbus_comms.h:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: drivers/xen/xenbus/xenbus_comms.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: drivers/xen/xenbus/xenbus_comms.h:18:
+ * $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#731: FILE: drivers/xen/xenbus/xenbus_comms.h:35:
+int xb_write(const void *data, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#732: FILE: drivers/xen/xenbus/xenbus_comms.h:36:
+int xb_read(void *data, unsigned len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#740: FILE: drivers/xen/xenbus/xenbus_probe.c:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/xen/xenbus/xenbus_probe.c:7:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: drivers/xen/xenbus/xenbus_probe.c:10:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: drivers/xen/xenbus/xenbus_probe.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/xen/xenbus/xenbus_probe.c:20:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/xen/xenbus/xenbus_probe.c:31:
+    pr_debug("xenbus_probe (%s:%d) " fmt ".\n", __FUNCTION__, __LINE__, ##args)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#770: FILE: drivers/xen/xenbus/xenbus_probe.c:31:
+    pr_debug("xenbus_probe (%s:%d) " fmt ".\n", __FUNCTION__, __LINE__, ##args)

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#781: FILE: drivers/xen/xenbus/xenbus_probe.c:42:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#783: FILE: drivers/xen/xenbus/xenbus_probe.c:44:
+#include <asm/pgtable.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "match_device"
#817: FILE: drivers/xen/xenbus/xenbus_probe.c:78:
+	return match_device(drv->ids, to_xenbus_device(_dev)) != NULL;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#821: FILE: drivers/xen/xenbus/xenbus_probe.c:82:
+struct xen_bus_type
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#830: FILE: drivers/xen/xenbus/xenbus_probe.c:91:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#836: FILE: drivers/xen/xenbus/xenbus_probe.c:97:
+		printk(KERN_WARNING "XENBUS: bad frontend %s\n", nodename);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#840: FILE: drivers/xen/xenbus/xenbus_probe.c:101:
+	strlcpy(bus_id, nodename + 1, BUS_ID_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#842: FILE: drivers/xen/xenbus/xenbus_probe.c:103:
+		printk(KERN_WARNING "XENBUS: bus_id %s no slash\n", bus_id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#849: FILE: drivers/xen/xenbus/xenbus_probe.c:110:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#875: FILE: drivers/xen/xenbus/xenbus_probe.c:136:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#881: FILE: drivers/xen/xenbus/xenbus_probe.c:142:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#887: FILE: drivers/xen/xenbus/xenbus_probe.c:148:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#894: FILE: drivers/xen/xenbus/xenbus_probe.c:155:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#904: FILE: drivers/xen/xenbus/xenbus_probe.c:165:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#909: FILE: drivers/xen/xenbus/xenbus_probe.c:170:
+^I.levels = 2, ^I^I/* device/type/<id> */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#964: FILE: drivers/xen/xenbus/xenbus_probe.c:225:
+^I.levels = 3, ^I^I/* backend/type/<frontend>/<id> */$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#987: FILE: drivers/xen/xenbus/xenbus_probe.c:248:
+	if (dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xdev"
#991: FILE: drivers/xen/xenbus/xenbus_probe.c:252:
+	if (xdev == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1030: FILE: drivers/xen/xenbus/xenbus_probe.c:291:
+	/* Protect us against watches firing on old details when the otherend
+	   details change, say immediately after a resume. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1030: FILE: drivers/xen/xenbus/xenbus_probe.c:291:
+	   details change, say immediately after a resume. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1046: FILE: drivers/xen/xenbus/xenbus_probe.c:307:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: drivers/xen/xenbus/xenbus_probe.c:318:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1064: FILE: drivers/xen/xenbus/xenbus_probe.c:325:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1087: FILE: drivers/xen/xenbus/xenbus_probe.c:348:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1099: FILE: drivers/xen/xenbus/xenbus_probe.c:360:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xenbus_dev_probe', this function's name, in a string
#1107: FILE: drivers/xen/xenbus/xenbus_probe.c:368:
+	xenbus_dev_error(dev, err, "xenbus_dev_probe on %s", dev->nodename);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1169: FILE: drivers/xen/xenbus/xenbus_probe.c:430:
+struct xb_find_info
+{

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'xendev_show_nodename' to 'nodename_show'
#1267: FILE: drivers/xen/xenbus/xenbus_probe.c:528:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP | S_IROTH' are not preferred. Consider using octal permissions '0444'.
#1268: FILE: drivers/xen/xenbus/xenbus_probe.c:529:
+DEVICE_ATTR(nodename, S_IRUSR | S_IRGRP | S_IROTH, xendev_show_nodename, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'xendev_show_devtype' to 'devtype_show'
#1274: FILE: drivers/xen/xenbus/xenbus_probe.c:535:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IRGRP | S_IROTH' are not preferred. Consider using octal permissions '0444'.
#1275: FILE: drivers/xen/xenbus/xenbus_probe.c:536:
+DEVICE_ATTR(devtype, S_IRUSR | S_IRGRP | S_IROTH, xendev_show_devtype, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1277: FILE: drivers/xen/xenbus/xenbus_probe.c:538:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateInitialising>
#1289: FILE: drivers/xen/xenbus/xenbus_probe.c:550:
+	if (state != XenbusStateInitialising) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1291: FILE: drivers/xen/xenbus/xenbus_probe.c:552:
+		/* Device is not new, so ignore it.  This can happen if a
+		   device is going away after switching to Closed.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1291: FILE: drivers/xen/xenbus/xenbus_probe.c:552:
+		   device is going away after switching to Closed.  */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1469: FILE: drivers/xen/xenbus/xenbus_probe.c:730:
+ ^I^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1469: FILE: drivers/xen/xenbus/xenbus_probe.c:730:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1469: FILE: drivers/xen/xenbus/xenbus_probe.c:730:
+ ^I^Ireturn;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1480: FILE: drivers/xen/xenbus/xenbus_probe.c:741:
+	type[BUS_ID_SIZE-1] = '\0';
 	                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->driver"
#1533: FILE: drivers/xen/xenbus/xenbus_probe.c:794:
+	if (dev->driver == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1540: FILE: drivers/xen/xenbus/xenbus_probe.c:801:
+		printk(KERN_WARNING

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->driver"
#1553: FILE: drivers/xen/xenbus/xenbus_probe.c:814:
+	if (dev->driver == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1560: FILE: drivers/xen/xenbus/xenbus_probe.c:821:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1568: FILE: drivers/xen/xenbus/xenbus_probe.c:829:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1570: FILE: drivers/xen/xenbus/xenbus_probe.c:831:
+		       "xenbus_probe: resume (watch_otherend) %s failed: "
+		       "%d.\n", dev->bus_id, err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1577: FILE: drivers/xen/xenbus/xenbus_probe.c:838:
+		printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1601: FILE: drivers/xen/xenbus/xenbus_probe.c:862:
+
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1603: FILE: drivers/xen/xenbus/xenbus_probe.c:864:
+int xenstored_ready = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1605: FILE: drivers/xen/xenbus/xenbus_probe.c:866:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1625: FILE: drivers/xen/xenbus/xenbus_probe.c:886:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#1631: FILE: drivers/xen/xenbus/xenbus_probe.c:892:
+	if (xendev->state != XenbusStateConnected) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1639: FILE: drivers/xen/xenbus/xenbus_probe.c:900:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1643: FILE: drivers/xen/xenbus/xenbus_probe.c:904:
+	int ready = 1;
+	bus_for_each_dev(&xenbus_frontend.bus, NULL, &ready,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1648: FILE: drivers/xen/xenbus/xenbus_probe.c:909:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1653: FILE: drivers/xen/xenbus/xenbus_probe.c:914:
+	BUG_ON((xenstored_ready <= 0));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1667: FILE: drivers/xen/xenbus/xenbus_probe.c:928:
+	/* On a 10 second timeout, waiting for all devices currently
+	   configured.  We need to do this to guarantee that the filesystems

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1685: FILE: drivers/xen/xenbus/xenbus_probe.c:946:
+	printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1689: FILE: drivers/xen/xenbus/xenbus_probe.c:950:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1691: FILE: drivers/xen/xenbus/xenbus_probe.c:952:
+static struct file_operations xsd_kva_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size > PAGE_SIZE'
#1699: FILE: drivers/xen/xenbus/xenbus_probe.c:960:
+	if ((size > PAGE_SIZE) || (vma->vm_pgoff != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_pgoff != 0'
#1699: FILE: drivers/xen/xenbus/xenbus_probe.c:960:
+	if ((size > PAGE_SIZE) || (vma->vm_pgoff != 0))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1711: FILE: drivers/xen/xenbus/xenbus_probe.c:972:
+                        int count, int *eof, void *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1711: FILE: drivers/xen/xenbus/xenbus_probe.c:972:
+                        int count, int *eof, void *data)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1731: FILE: drivers/xen/xenbus/xenbus_probe.c:992:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1756: FILE: drivers/xen/xenbus/xenbus_probe.c:1017:
+	if (dom0) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1761: FILE: drivers/xen/xenbus/xenbus_probe.c:1022:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1768: FILE: drivers/xen/xenbus/xenbus_probe.c:1029:
+		 * (this allocation is permanent) */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1781: FILE: drivers/xen/xenbus/xenbus_probe.c:1042:
+		BUG_ON(ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1802: FILE: drivers/xen/xenbus/xenbus_probe.c:1063:
+		printk(KERN_WARNING

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1819: FILE: drivers/xen/xenbus/xenbus_xs.c:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1826: FILE: drivers/xen/xenbus/xenbus_xs.c:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1829: FILE: drivers/xen/xenbus/xenbus_xs.c:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1836: FILE: drivers/xen/xenbus/xenbus_xs.c:18:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1839: FILE: drivers/xen/xenbus/xenbus_xs.c:21:
+ * $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1890: FILE: drivers/xen/xenbus/xenbus_xs.c:72:
+	spinlock_t reply_lock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1926: FILE: drivers/xen/xenbus/xenbus_xs.c:108:
+			printk(KERN_WARNING

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#1929: FILE: drivers/xen/xenbus/xenbus_xs.c:111:
+			return EINVAL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1994: FILE: drivers/xen/xenbus/xenbus_xs.c:176:
+	if (err) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1997: FILE: drivers/xen/xenbus/xenbus_xs.c:179:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->type == XS_TRANSACTION_END'
#2002: FILE: drivers/xen/xenbus/xenbus_xs.c:184:
+	if ((msg->type == XS_TRANSACTION_END) ||
+	    ((req_msg.type == XS_TRANSACTION_START) &&
+	     (msg->type == XS_ERROR)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req_msg.type == XS_TRANSACTION_START'
#2002: FILE: drivers/xen/xenbus/xenbus_xs.c:184:
+	if ((msg->type == XS_TRANSACTION_END) ||
+	    ((req_msg.type == XS_TRANSACTION_START) &&
+	     (msg->type == XS_ERROR)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->type == XS_ERROR'
#2002: FILE: drivers/xen/xenbus/xenbus_xs.c:184:
+	if ((msg->type == XS_TRANSACTION_END) ||
+	    ((req_msg.type == XS_TRANSACTION_START) &&
+	     (msg->type == XS_ERROR)))

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#2038: FILE: drivers/xen/xenbus/xenbus_xs.c:220:
+		err = xb_write(iovec[i].iov_base, iovec[i].iov_len);;

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#2059: FILE: drivers/xen/xenbus/xenbus_xs.c:241:
+		if (printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2060: FILE: drivers/xen/xenbus/xenbus_xs.c:242:
+			printk(KERN_WARNING

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2264: FILE: drivers/xen/xenbus/xenbus_xs.c:446:
+	*t = simple_strtoul(id_str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!printf_buffer"
#2324: FILE: drivers/xen/xenbus/xenbus_xs.c:506:
+	if (printf_buffer == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2331: FILE: drivers/xen/xenbus/xenbus_xs.c:513:
+	BUG_ON(ret > PRINTF_BUFFER_SIZE-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2331: FILE: drivers/xen/xenbus/xenbus_xs.c:513:
+	BUG_ON(ret > PRINTF_BUFFER_SIZE-1);
 	                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2358: FILE: drivers/xen/xenbus/xenbus_xs.c:540:
+		if (fmt) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2362: FILE: drivers/xen/xenbus/xenbus_xs.c:544:
+		} else

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2400: FILE: drivers/xen/xenbus/xenbus_xs.c:582:
+	cmp = (void *)simple_strtoul(token, NULL, 16);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2421: FILE: drivers/xen/xenbus/xenbus_xs.c:603:
+	BUG_ON(find_watch(token));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err != 0'
#2428: FILE: drivers/xen/xenbus/xenbus_xs.c:610:
+	if ((err != 0) && (err != -EEXIST)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2451: FILE: drivers/xen/xenbus/xenbus_xs.c:633:
+	BUG_ON(!find_watch(token));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2457: FILE: drivers/xen/xenbus/xenbus_xs.c:639:
+		printk(KERN_WARNING

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2526: FILE: drivers/xen/xenbus/xenbus_xs.c:708:
+			msg->u.watch.handle->callback(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg"
#2547: FILE: drivers/xen/xenbus/xenbus_xs.c:729:
+	if (msg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!body"
#2557: FILE: drivers/xen/xenbus/xenbus_xs.c:739:
+	if (body == NULL) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2579: FILE: drivers/xen/xenbus/xenbus_xs.c:761:
+		msg->u.watch.handle = find_watch(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg->u.watch.handle"
#2581: FILE: drivers/xen/xenbus/xenbus_xs.c:763:
+		if (msg->u.watch.handle != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2609: FILE: drivers/xen/xenbus/xenbus_xs.c:791:
+			printk(KERN_WARNING "XENBUS error %d while reading "

WARNING:SPLIT_STRING: quoted string split across lines
#2610: FILE: drivers/xen/xenbus/xenbus_xs.c:792:
+			printk(KERN_WARNING "XENBUS error %d while reading "
+			       "message\n", err);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2649: FILE: include/xen/xenbus.h:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2656: FILE: include/xen/xenbus.h:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2659: FILE: include/xen/xenbus.h:11:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2666: FILE: include/xen/xenbus.h:18:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2669: FILE: include/xen/xenbus.h:21:
+ * $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2694: FILE: include/xen/xenbus.h:46:
+struct xenbus_watch
+{

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xenbus_watch *' should also have an identifier name
#2701: FILE: include/xen/xenbus.h:53:
+	void (*callback)(struct xenbus_watch *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2705: FILE: include/xen/xenbus.h:57:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2724: FILE: include/xen/xenbus.h:76:
+struct xenbus_device_id
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2726: FILE: include/xen/xenbus.h:78:
+^Ichar devicetype[32]; ^I/* General class of device. */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xenbus_device *' should also have an identifier name
#2741: FILE: include/xen/xenbus.h:93:
+	int (*uevent)(struct xenbus_device *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#2741: FILE: include/xen/xenbus.h:93:
+	int (*uevent)(struct xenbus_device *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2741: FILE: include/xen/xenbus.h:93:
+	int (*uevent)(struct xenbus_device *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2741: FILE: include/xen/xenbus.h:93:
+	int (*uevent)(struct xenbus_device *, char **, int, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2741: FILE: include/xen/xenbus.h:93:
+	int (*uevent)(struct xenbus_device *, char **, int, char *, int);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __scanf(4, 5) over __attribute__((format(scanf, 4, 5)))
#2774: FILE: include/xen/xenbus.h:126:
+	__attribute__((format(scanf, 4, 5)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 5) over __attribute__((format(printf, 4, 5)))
#2779: FILE: include/xen/xenbus.h:131:
+	__attribute__((format(printf, 4, 5)));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2782: FILE: include/xen/xenbus.h:134:
+ * sprintf-style type string, and pointer. Returns 0 or errno.*/

WARNING:TYPO_SPELLING: 'notifer' may be misspelled - perhaps 'notifier'?
#2785: FILE: include/xen/xenbus.h:137:
+/* notifer routines for when the xenstore comes up */
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#2801: FILE: include/xen/xenbus.h:153:
+#define XENBUS_IS_ERR_READ(str) ({			\
+	if (!IS_ERR(str) && strlen(str) == 0) {		\
+		kfree(str);				\
+		str = ERR_PTR(-ERANGE);			\
+	}						\
+	IS_ERR(str);					\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'err' - possible side-effects?
#2809: FILE: include/xen/xenbus.h:161:
+#define XENBUS_EXIST_ERR(err) ((err) == -ENOENT || (err) == -ERANGE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2811: FILE: include/xen/xenbus.h:163:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2825: FILE: include/xen/xenbus.h:177:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2840: FILE: include/xen/xenbus.h:192:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2852: FILE: include/xen/xenbus.h:204:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2860: FILE: include/xen/xenbus.h:212:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2874: FILE: include/xen/xenbus.h:226:
+int xenbus_map_ring(struct xenbus_device *dev, int gnt_ref,
+			   grant_handle_t *handle, void *vaddr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2876: FILE: include/xen/xenbus.h:228:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2888: FILE: include/xen/xenbus.h:240:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2897: FILE: include/xen/xenbus.h:249:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2905: FILE: include/xen/xenbus.h:257:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2911: FILE: include/xen/xenbus.h:263:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2918: FILE: include/xen/xenbus.h:270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2926: FILE: include/xen/xenbus.h:278:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2935: FILE: include/xen/xenbus.h:287:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 92 warnings, 93 checks, 2861 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
