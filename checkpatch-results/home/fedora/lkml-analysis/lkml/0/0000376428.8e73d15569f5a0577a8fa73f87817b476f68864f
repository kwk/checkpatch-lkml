WARNING:TYPO_SPELLING: 'assymetric' may be misspelled - perhaps 'asymmetric'?
#44: 
attempt to automatically handle assymetric systems (an secondary
                                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -u linux-2.5.68-gencpu/arch/i386/kernel/setup.c-o linux-2.5.68-gencpu/arch/i386/kernel/setup.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#60: FILE: arch/i386/kernel/setup.c:801:
+/* Replace instructions with better alternatives for this CPU type.
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'assymetric' may be misspelled - perhaps 'asymmetric'?
#62: FILE: arch/i386/kernel/setup.c:803:
+   self modifying code. This implies that assymetric systems where
                                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: arch/i386/kernel/setup.c:804:
+   APs have less capabilities than the boot processor are not handled. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: arch/i386/kernel/setup.c:805:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arch/i386/kernel/setup.c:806:
+   In this case boot with "noreplacement". */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#65: FILE: arch/i386/kernel/setup.c:806:
+   In this case boot with "noreplacement". */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: arch/i386/kernel/setup.c:807:
+void __init apply_alternatives(void *start, void *end) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: arch/i386/kernel/setup.c:808:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: arch/i386/kernel/setup.c:809:
+^Istruct alt_instr *a; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: arch/i386/kernel/setup.c:811:
+^Ifor (a = start; a < end; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/i386/kernel/setup.c:812:
+^I^Ia = (void *)ALIGN((unsigned long)(a + 1) + a->instrlen, 4)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: arch/i386/kernel/setup.c:815:
+^I^IBUG_ON(a->replacementlen > a->instrlen); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#74: FILE: arch/i386/kernel/setup.c:815:
+		BUG_ON(a->replacementlen > a->instrlen); 

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/i386/kernel/setup.c:816:
+^I^Imemcpy(a->instr, a->replacement, a->replacementlen); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/i386/kernel/setup.c:817:
+^I^Iif (a->replacementlen < a->instrlen) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: arch/i386/kernel/setup.c:818:
+^I^I^I/* fill the overlap with single byte nops */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/kernel/setup.c:819:
+^I^I^Imemset(a->instr + a->replacementlen, 0x90, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/i386/kernel/setup.c:820:
+^I^I^Ia->instrlen - a->replacementlen); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: arch/i386/kernel/setup.c:820:
+			memset(a->instr + a->replacementlen, 0x90, 
+			a->instrlen - a->replacementlen); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: arch/i386/kernel/setup.c:821:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: arch/i386/kernel/setup.c:823:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: arch/i386/kernel/setup.c:824:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/kernel/setup.c:824:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: arch/i386/kernel/setup.c:825:
+static int no_replacement __initdata = 0; $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#84: FILE: arch/i386/kernel/setup.c:825:
+static int no_replacement __initdata = 0; 

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: arch/i386/kernel/setup.c:826:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/i386/kernel/setup.c:826:
+ $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#88: FILE: arch/i386/kernel/setup.c:829:
+	extern struct alt_instr __alt_instructions[], __alt_instructions_end[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: arch/i386/kernel/setup.c:830:
+^Iif (no_replacement) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#89: FILE: arch/i386/kernel/setup.c:830:
+	extern struct alt_instr __alt_instructions[], __alt_instructions_end[];
+	if (no_replacement) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: arch/i386/kernel/setup.c:836:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: arch/i386/kernel/setup.c:837:
+     no_replacement = 1; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/i386/kernel/setup.c:837:
+     no_replacement = 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/kernel/setup.c:838:
+     return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/i386/kernel/setup.c:838:
+     return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/i386/kernel/setup.c:839:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: arch/i386/kernel/setup.c:841:
+__setup("noreplacement", noreplacement_setup); $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#100: FILE: arch/i386/kernel/setup.c:841:
+__setup("noreplacement", noreplacement_setup); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: arch/i386/kernel/module.c:107:
+extern void apply_alternatives(void *start, void *end); $

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#118: FILE: arch/i386/kernel/module.c:113:
+	Elf_Shdr *s;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: arch/i386/kernel/module.c:116:
+^I/* look for .altinstructions to patch */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/module.c:117:
+^Ifor (s = sechdrs; s < sechdrs + hdr->e_shnum; s++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/i386/kernel/module.c:118:
+^I^Ivoid *seg; ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: arch/i386/kernel/module.c:118:
+^I^Ivoid *seg; ^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: arch/i386/kernel/module.c:119:
+		void *seg; 		
+		if (strcmp(".altinstructions", secstrings + s->sh_name))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/i386/kernel/module.c:121:
+^I^Iseg = (void *)s->sh_addr; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: arch/i386/kernel/module.c:122:
+^I^Iapply_alternatives(seg, seg + s->sh_size); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/kernel/module.c:123:
+^I} ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: arch/i386/kernel/module.c:123:
+^I} ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/i386/vmlinux.lds.S:86:
+  .altinstructions : { *(.altinstructions) } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: arch/i386/vmlinux.lds.S:87:
+  __alt_instructions_end = .; $

WARNING:INCLUDE_LINUX: Use #include <linux/cpufeature.h> instead of <asm/cpufeature.h>
#152: FILE: include/asm-i386/system.h:7:
+#include <asm/cpufeature.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/asm-i386/system.h:280:
+struct alt_instr { $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: include/asm-i386/system.h:281:
+^Iu8 *instr; ^I^I/* original instruction */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: include/asm-i386/system.h:284:
+^Iu8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: include/asm-i386/system.h:284:
+^Iu8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: include/asm-i386/system.h:285:
+^Iu8  replacement[0];   ^I/* new instruction */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: include/asm-i386/system.h:286:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: include/asm-i386/system.h:288:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: include/asm-i386/system.h:290:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: include/asm-i386/system.h:293:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: include/asm-i386/system.h:296:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: include/asm-i386/system.h:300:
+#define alternative(oldinstr, newinstr, feature) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: include/asm-i386/system.h:300:
+#define alternative(oldinstr, newinstr, feature) 	\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */    \
+		      ".previous" :: "i" (feature) : "memory")  

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: include/asm-i386/system.h:301:
+^Iasm volatile ("661:\n\t" oldinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: include/asm-i386/system.h:302:
+^I^I      ".section .altinstructions,\"a\"\n"     ^I     \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: include/asm-i386/system.h:309:
+^I^I      ".previous" :: "i" (feature) : "memory")  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#205: FILE: include/asm-i386/system.h:329:
  
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: include/asm-i386/system.h:330:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: include/asm-i386/system.h:331:
+ * Actually only lfence would be needed for mb() because all stores done $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: include/asm-i386/system.h:332:
+ * by the kernel should be already ordered. But keep a full barrier for now. $

WARNING:MEMORY_BARRIER: memory barrier without comment
#211: FILE: include/asm-i386/system.h:335:
+#define mb() alternative("lock; addl $0,0(%%esp)", "mfence", X86_FEATURE_XMM2)

WARNING:MEMORY_BARRIER: memory barrier without comment
#212: FILE: include/asm-i386/system.h:336:
+#define rmb() alternative("lock; addl $0,0(%%esp)", "lfence", X86_FEATURE_XMM2)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: include/asm-i386/system.h:393:
+/* Actually there are no OOO store capable CPUs for now that do SSE, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#223: FILE: include/asm-i386/system.h:394:
+/* Actually there are no OOO store capable CPUs for now that do SSE, 
+   but make it already an possibility. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: include/asm-i386/system.h:394:
+   but make it already an possibility. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/asm-i386/bugs.h:203:
+extern void alternative_instructions(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: include/asm-i386/bugs.h:217:
+^Ialternative_instructions(); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 26 warnings, 5 checks, 170 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
