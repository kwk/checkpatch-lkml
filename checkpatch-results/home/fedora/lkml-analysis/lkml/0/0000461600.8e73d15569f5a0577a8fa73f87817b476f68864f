ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: mm/page_alloc.c:214:
+				if (BAD_RANGE(zone,page))
 				                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#75: FILE: mm/page_alloc.c:215:
+					BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#77: FILE: mm/page_alloc.c:217:
+					BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: mm/page_alloc.c:219:
+					BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#120: FILE: mm/page_alloc.c:279:
+						if (page->buffers)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#121: FILE: mm/page_alloc.c:280:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#122: FILE: mm/page_alloc.c:281:
+						if (page->mapping)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: mm/page_alloc.c:282:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#124: FILE: mm/page_alloc.c:283:
+						if (!VALID_PAGE(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: mm/page_alloc.c:284:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#126: FILE: mm/page_alloc.c:285:
+						if (PageSwapCache(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: mm/page_alloc.c:286:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#128: FILE: mm/page_alloc.c:287:
+						if (PageLocked(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: mm/page_alloc.c:288:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#130: FILE: mm/page_alloc.c:289:
+						if (PageLRU(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#131: FILE: mm/page_alloc.c:290:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#132: FILE: mm/page_alloc.c:291:
+						if (PageActive(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: mm/page_alloc.c:292:
+							BUG();

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#134: FILE: mm/page_alloc.c:293:
+						if (PageDirty(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#135: FILE: mm/page_alloc.c:294:
+							BUG();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 19 warnings, 0 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
