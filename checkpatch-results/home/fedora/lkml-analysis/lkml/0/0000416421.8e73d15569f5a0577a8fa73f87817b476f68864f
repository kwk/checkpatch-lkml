WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urpN linux-2.5.46/arch/s390/kernel/entry.S linux-2.5.46-ltt/arch/s390/kernel/entry.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: arch/s390/kernel/entry.S:186:
+        /* add call to trace_real_syscall_entry */                          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: arch/s390/kernel/entry.S:187:
+        la      %r2,SP_PTREGS(%r15)   # load pt_regs as first parameter     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/s390/kernel/entry.S:188:
+        l       %r1,BASED(.Ltracesysent)                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: arch/s390/kernel/entry.S:189:
+        basr    %r14,%r1                                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: arch/s390/kernel/entry.S:190:
+        lm      %r0,%r6,SP_R0(%r15) /* restore call clobbered regs tjh */   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/s390/kernel/entry.S:202:
+        /* add call to trace_real_syscall_exit */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/s390/kernel/entry.S:203:
+        la      %r2,SP_PTREGS(%r15)   # load pt_regs as first parameter  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: arch/s390/kernel/entry.S:204:
+        l       %r1,BASED(.Ltracesysext)                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/s390/kernel/entry.S:205:
+        basr    %r14,%r1                                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: arch/s390/kernel/entry.S:207:
+#endif                                                                   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/s390/kernel/entry.S:949:
+.Ltracesysext: .long  trace_real_syscall_exit $

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: arch/s390/kernel/process.c:152:
+	if(!IS_ERR(p))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#120: FILE: arch/s390/kernel/process.c:153:
+		TRACE_PROCESS(TRACE_EV_PROCESS_KTHREAD, p->pid, (int) fn);

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/s390/kernel/sys_s390.c:149:
+        TRACE_IPC(TRACE_EV_IPC_CALL, call, first);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/s390/kernel/sys_s390.c:149:
+        TRACE_IPC(TRACE_EV_IPC_CALL, call, first);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/s390/kernel/traps.c:289:
+         trapid_t ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/s390/kernel/traps.c:289:
+         trapid_t ltt_interruption_code; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/s390/kernel/traps.c:289:
+         trapid_t ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/s390/kernel/traps.c:290:
+         char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#170: FILE: arch/s390/kernel/traps.c:290:
+         char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/s390/kernel/traps.c:290:
+         char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: arch/s390/kernel/traps.c:290:
+         char * ic_ptr = (char *) &ltt_interruption_code;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/s390/kernel/traps.c:291:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/s390/kernel/traps.c:291:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: arch/s390/kernel/traps.c:299:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: arch/s390/kernel/traps.c:299:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: arch/s390/kernel/traps.c:300:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#180: FILE: arch/s390/kernel/traps.c:300:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#180: FILE: arch/s390/kernel/traps.c:300:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: arch/s390/kernel/traps.c:300:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/s390/kernel/traps.c:429:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/s390/kernel/traps.c:429:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/s390/kernel/traps.c:430:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/s390/kernel/traps.c:430:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/s390/kernel/traps.c:430:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: arch/s390/kernel/traps.c:430:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: arch/s390/kernel/traps.c:442:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: arch/s390/kernel/traps.c:442:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#208: FILE: arch/s390/kernel/traps.c:443:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#208: FILE: arch/s390/kernel/traps.c:443:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#208: FILE: arch/s390/kernel/traps.c:443:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: arch/s390/kernel/traps.c:443:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/s390/kernel/traps.c:486:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/s390/kernel/traps.c:486:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/s390/kernel/traps.c:497:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/s390/kernel/traps.c:497:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/s390/kernel/traps.c:498:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#227: FILE: arch/s390/kernel/traps.c:498:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/s390/kernel/traps.c:498:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: arch/s390/kernel/traps.c:498:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/s390/kernel/traps.c:510:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/s390/kernel/traps.c:510:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: arch/s390/kernel/traps.c:510:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: arch/s390/kernel/traps.c:510:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: arch/s390/kernel/traps.c:511:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/s390/kernel/traps.c:512:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_INSN));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/s390/kernel/traps.c:512:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_INSN));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/s390/kernel/traps.c:557:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/s390/kernel/traps.c:557:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/s390/kernel/traps.c:567:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/s390/kernel/traps.c:567:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/s390/kernel/traps.c:568:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#255: FILE: arch/s390/kernel/traps.c:568:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/s390/kernel/traps.c:568:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: arch/s390/kernel/traps.c:568:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: arch/s390/kernel/traps.c:580:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: arch/s390/kernel/traps.c:580:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: arch/s390/kernel/traps.c:581:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#264: FILE: arch/s390/kernel/traps.c:581:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#264: FILE: arch/s390/kernel/traps.c:581:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: arch/s390/kernel/traps.c:581:
+	memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/s390/kernel/traps.c:659:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/s390/kernel/traps.c:659:
+        TRACE_TRAP_EXIT();$

CHECK:SPACING: No space is necessary after a cast
#283: FILE: arch/s390/kernel/traps.c:715:
+	char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: arch/s390/kernel/traps.c:715:
+	char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: arch/s390/kernel/traps.c:716:
+	char * ic_ptr = (char *) &ltt_interruption_code;
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: arch/s390/kernel/traps.c:716:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: arch/s390/kernel/traps.c:716:
+	memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#285: FILE: arch/s390/kernel/traps.c:717:
+	memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#285: FILE: arch/s390/kernel/traps.c:717:
+	memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#285: FILE: arch/s390/kernel/traps.c:717:
+	memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: arch/s390/kernel/traps.c:717:
+	memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: arch/s390/kernel/traps.c:718:
+	TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_INSN));
 	                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: arch/s390/kernel/traps.c:733:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/s390/kernel/traps.c:733:
+        TRACE_TRAP_EXIT();$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#316: FILE: arch/s390/kernel/traps.c:755:
+			  :"=m" (trace_syscall_event.syscall_id));
 			  ^

CHECK:SPACING: No space is necessary after a cast
#327: FILE: arch/s390/kernel/traps.c:766:
+			     (void *) &lower_bound,

CHECK:SPACING: No space is necessary after a cast
#328: FILE: arch/s390/kernel/traps.c:767:
+			     (void *) &upper_bound) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth == 1'
#331: FILE: arch/s390/kernel/traps.c:770:
+	if ((use_depth == 1) || (use_bounds == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#331: FILE: arch/s390/kernel/traps.c:770:
+	if ((use_depth == 1) || (use_bounds == 1)) {

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/s390/kernel/traps.c:773:
+		stack = (unsigned long *) regs->gprs[15];	/* stack pointer */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > current->mm->start_code'
#341: FILE: arch/s390/kernel/traps.c:780:
+			if ((addr > current->mm->start_code)
+			    && (addr < current->mm->end_code)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < current->mm->end_code'
#341: FILE: arch/s390/kernel/traps.c:780:
+			if ((addr > current->mm->start_code)
+			    && (addr < current->mm->end_code)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#342: FILE: arch/s390/kernel/traps.c:781:
+			if ((addr > current->mm->start_code)
+			    && (addr < current->mm->end_code)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth == 1'
#344: FILE: arch/s390/kernel/traps.c:783:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'depth == seek_depth'
#344: FILE: arch/s390/kernel/traps.c:783:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#344: FILE: arch/s390/kernel/traps.c:783:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > lower_bound'
#344: FILE: arch/s390/kernel/traps.c:783:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < upper_bound'
#344: FILE: arch/s390/kernel/traps.c:783:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#345: FILE: arch/s390/kernel/traps.c:784:
+				if (((use_depth == 1) && (depth == seek_depth))
+				    || ((use_bounds == 1) && (addr > lower_bound)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#346: FILE: arch/s390/kernel/traps.c:785:
+				    || ((use_bounds == 1) && (addr > lower_bound)
+					&& (addr < upper_bound))) {

CHECK:BRACES: Unbalanced braces around else statement
#351: FILE: arch/s390/kernel/traps.c:790:
+				} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#358: FILE: arch/s390/kernel/traps.c:797:
+			stack = (unsigned long *) temp_stack;	/* move into stack */

CHECK:SPACING: No space is necessary after a cast
#364: FILE: arch/s390/kernel/traps.c:803:
+		} while (stack >= (unsigned long *) (0x7fffffff - _STK_LIM));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: arch/s390/kernel/traps.c:809:
+}
+asmlinkage void trace_real_syscall_exit(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: arch/s390/mm/fault.c:158:
+        trapid_t ltt_interruption_code;                 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: arch/s390/mm/fault.c:158:
+        trapid_t ltt_interruption_code;                 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/s390/mm/fault.c:158:
+        trapid_t ltt_interruption_code;                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/s390/mm/fault.c:159:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: arch/s390/mm/fault.c:159:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

CHECK:SPACING: No space is necessary after a cast
#400: FILE: arch/s390/mm/fault.c:159:
+        char * ic_ptr = (char *) &ltt_interruption_code; 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: arch/s390/mm/fault.c:159:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: arch/s390/mm/fault.c:159:
+        char * ic_ptr = (char *) &ltt_interruption_code; 

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/s390/mm/fault.c:207:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/s390/mm/fault.c:207:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/s390/mm/fault.c:207:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/s390/mm/fault.c:207:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: arch/s390/mm/fault.c:208:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/s390/mm/fault.c:209:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_INSN));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/s390/mm/fault.c:209:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_INSN));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/s390/mm/fault.c:209:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_INSN));
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/s390/mm/fault.c:258:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/s390/mm/fault.c:258:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/s390/mm/fault.c:273:
+                TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/s390/mm/fault.c:273:
+                TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/s390/mm/fault.c:281:
+                TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/s390/mm/fault.c:281:
+                TRACE_TRAP_EXIT();$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#463: FILE: drivers/s390/cio/cio.c:950:
+			TRACE_IRQ_ENTRY(irq, !(((regs).psw.mask&PSW_MASK_PSTATE) != 0));
 			                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/s390/s390mach.c:184:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/s390/s390mach.c:184:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: drivers/s390/s390mach.c:185:
+        uint32_t ltt_old_psw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/s390/s390mach.c:185:
+        uint32_t ltt_old_psw;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#495: FILE: drivers/s390/s390mach.c:185:
+        uint32_t ltt_old_psw;

ERROR:SPACING: space prohibited after that open parenthesis '('
#500: FILE: drivers/s390/s390mach.c:190:
+	memcpy( &ltt_interruption_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: drivers/s390/s390mach.c:191:
+^I        &S390_lowcore.mcck_interruption_code,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/s390/s390mach.c:191:
+	memcpy( &ltt_interruption_code,
+	        &S390_lowcore.mcck_interruption_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: drivers/s390/s390mach.c:192:
+^I        sizeof(__u64));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#503: FILE: drivers/s390/s390mach.c:193:
+	memcpy( &ltt_old_psw,

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: drivers/s390/s390mach.c:194:
+^I        &S390_lowcore.mcck_old_psw,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/s390/s390mach.c:194:
+	memcpy( &ltt_old_psw,
+	        &S390_lowcore.mcck_old_psw,

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: drivers/s390/s390mach.c:195:
+^I        sizeof(uint32_t));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/s390/s390mach.c:196:
+        ltt_old_psw &=  PSW_ADDR_INSN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/s390/s390mach.c:196:
+        ltt_old_psw &=  PSW_ADDR_INSN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: drivers/s390/s390mach.c:197:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/s390/s390mach.c:197:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: drivers/s390/s390mach.c:197:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);
                                               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#515: FILE: include/asm-s390/trace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#516: FILE: include/asm-s390/trace.h:2:
+ * linux/include/asm-s390/trace.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 90 errors, 33 warnings, 36 checks, 434 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
