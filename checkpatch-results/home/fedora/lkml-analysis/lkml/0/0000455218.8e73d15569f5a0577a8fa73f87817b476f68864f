WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
Content-Disposition: attachment; filename=P4-tlb-fix-rml-2.4.19-pre9-ac3-1.patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#60: FILE: arch/i386/kernel/process.c:311:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ';' (ctx:VxO)
#92: FILE: arch/i386/kernel/process.c:333:
+	load_cr3(swapper_pg_dir);=09
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#92: FILE: arch/i386/kernel/process.c:333:
+	load_cr3(swapper_pg_dir);=09
 	                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#132: FILE: include/asm-i386/pgalloc.h:141:
 }
+#define pte_free(pte)		pte_free_fast(pte)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#161: FILE: include/asm-i386/processor.h:193:
+#define load_cr3(pgdir) \
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#161: FILE: include/asm-i386/processor.h:193:
+#define load_cr3(pgdir) \
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#162: FILE: include/asm-i386/processor.h:194:
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));
 	                            ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#162: FILE: include/asm-i386/processor.h:194:
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: include/asm-i386/processor.h:167:
+	unsigned long last =3D first + nr;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#183: FILE: include/asm-i386/processor.h:177:
+=09
 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000455218.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 2 warnings, 1 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000455218.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
