WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
> > The other documented difference (other than the signal mask bit) is that

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/ppc64/kernel/misc.S:961:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: fs/compat.c:1753:
+compat_sys_select(int n, compat_ulong_t __user *inp, compat_ulong_t __user *outp,
+		compat_ulong_t __user *exp, struct compat_timeval __user *tvp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: fs/compat.c:1766:
+^I$

CHECK:SPACING: No space is necessary after a cast
#220: FILE: fs/compat.c:1769:
+			if ((unsigned long) tv.tv_sec < MAX_SELECT_SECONDS) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: fs/compat.c:1770:
+				timeout = ROUND_UP(tv.tv_usec, 1000000/HZ);
 				                                      ^

CHECK:SPACING: No space is necessary after a cast
#222: FILE: fs/compat.c:1771:
+				timeout += tv.tv_sec * (unsigned long) HZ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/compat.c:1779:
+^I^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#237: FILE: fs/compat.c:1786:
+		tv.tv_usec += (timeout % HZ) * 1000000/HZ;
 		                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#247: FILE: fs/compat.c:1796:
+}
+asmlinkage long

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#273: FILE: fs/compat.c:1822:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:SPACING: No space is necessary after a cast
#279: FILE: fs/compat.c:1828:
+			if ((unsigned long) ts.tv_sec < MAX_SELECT_SECONDS) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#280: FILE: fs/compat.c:1829:
+				timeout = ROUND_UP(ts.tv_nsec, 1000000000/HZ);
 				                                         ^

CHECK:SPACING: No space is necessary after a cast
#281: FILE: fs/compat.c:1830:
+				timeout += ts.tv_sec * (unsigned long) HZ;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#296: FILE: fs/compat.c:1845:
+		ts.tv_nsec += (timeout % HZ) * (1000000000/HZ);
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: fs/compat.c:1861:
+compat_sys_pselect6(int n, compat_ulong_t __user *inp, compat_ulong_t __user *outp,
+		   compat_ulong_t __user *exp, struct compat_timespec __user *tsp,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#320: FILE: fs/compat.c:1869:
+		if (!access_ok(VERIFY_READ, sig, sizeof(compat_uptr_t) + sizeof(compat_size_t))
+		    || __get_user(up, (compat_uptr_t __user *)sig)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#321: FILE: fs/compat.c:1870:
+		    || __get_user(up, (compat_uptr_t __user *)sig)
+		    || __get_user(sigsetsize, (compat_size_t __user *)(sig+sizeof(up))))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#321: FILE: fs/compat.c:1870:
+		    || __get_user(sigsetsize, (compat_size_t __user *)(sig+sizeof(up))))
 		                                                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#327: FILE: fs/compat.c:1876:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#327: FILE: fs/compat.c:1876:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#327: FILE: fs/compat.c:1876:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: fs/compat.c:1879:
+compat_sys_ppoll(struct pollfd __user * ufds, unsigned int nfds, struct compat_timespec __user *tsp, $

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#330: FILE: fs/compat.c:1879:
+compat_sys_ppoll(struct pollfd __user * ufds, unsigned int nfds, struct compat_timespec __user *tsp, 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: fs/compat.c:1879:
+compat_sys_ppoll(struct pollfd __user * ufds, unsigned int nfds, struct compat_timespec __user *tsp, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#336: FILE: fs/compat.c:1885:
+	int64_t timeout = -1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#343: FILE: fs/compat.c:1892:
+		if (ts.tv_sec < MAX_INT64_SECONDS) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#344: FILE: fs/compat.c:1893:
+			timeout = ROUND_UP(ts.tv_sec, 1000000000/HZ);
 			                                        ^

CHECK:BRACES: Unbalanced braces around else statement
#346: FILE: fs/compat.c:1895:
+		} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: fs/compat.c:1900:
+		if (sigsetsize |= sizeof(compat_sigset_t))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#357: FILE: fs/compat.c:1906:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: fs/compat.c:1915:
+^Ireturn ret;^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#439: FILE: fs/select.c:359:
+sys_select(int n, fd_set __user *inp, fd_set __user *outp, fd_set __user *exp, struct timeval __user *tvp)

CHECK:SPACING: No space is necessary after a cast
#455: FILE: fs/select.c:375:
+			if ((unsigned long) tv.tv_sec < MAX_SELECT_SECONDS) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#456: FILE: fs/select.c:376:
+				timeout = ROUND_UP(tv.tv_usec, 1000000/HZ);
 				                                      ^

CHECK:SPACING: No space is necessary after a cast
#457: FILE: fs/select.c:377:
+				timeout += tv.tv_sec * (unsigned long) HZ;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#472: FILE: fs/select.c:392:
+		tv.tv_usec += (timeout % HZ) * 1000000/HZ;
 		                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: fs/select.c:404:
+sys_pselect7(int n, fd_set __user *inp, fd_set __user *outp, fd_set __user *exp, $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#507: FILE: fs/select.c:427:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

CHECK:SPACING: No space is necessary after a cast
#513: FILE: fs/select.c:433:
+			if ((unsigned long) ts.tv_sec < MAX_SELECT_SECONDS) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#514: FILE: fs/select.c:434:
+				timeout = ROUND_UP(ts.tv_nsec, 1000000000/HZ);
 				                                         ^

CHECK:SPACING: No space is necessary after a cast
#515: FILE: fs/select.c:435:
+				timeout += ts.tv_sec * (unsigned long) HZ;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#530: FILE: fs/select.c:450:
+		ts.tv_nsec += (timeout % HZ) * (1000000000/HZ);
 		                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#544: FILE: fs/select.c:464:
+/* Most architectures can't handle 7-argument syscalls. So we provide
+   a 6-argument version where the sixth argument is a pointer to a

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#546: FILE: fs/select.c:466:
+   a size_t containing the sigset size. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#556: FILE: fs/select.c:476:
+		if (!access_ok(VERIFY_READ, sig, sizeof(void *) + sizeof(size_t))
+		    || __get_user(up, (sigset_t * __user *)sig)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#557: FILE: fs/select.c:477:
+		    || __get_user(up, (sigset_t * __user *)sig)
+		    || __get_user(sigsetsize, (size_t * __user)(sig+sizeof(void *))))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#557: FILE: fs/select.c:477:
+		    || __get_user(sigsetsize, (size_t * __user)(sig+sizeof(void *))))
 		                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: fs/select.c:480:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#564: FILE: fs/select.c:484:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#573: FILE: fs/select.c:554:
+int do_sys_poll(struct pollfd __user * ufds, unsigned int nfds, int64_t timeout)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: fs/select.c:598:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#624: FILE: fs/select.c:642:
+asmlinkage long sys_poll(struct pollfd __user * ufds, unsigned int nfds, long timeout)

CHECK:SPACING: No space is necessary after a cast
#628: FILE: fs/select.c:646:
+		if ((unsigned long) timeout < MAX_SCHEDULE_TIMEOUT / HZ)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#629: FILE: fs/select.c:647:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#629: FILE: fs/select.c:647:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#629: FILE: fs/select.c:647:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#629: FILE: fs/select.c:647:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#637: FILE: fs/select.c:655:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#637: FILE: fs/select.c:655:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#637: FILE: fs/select.c:655:
+#define MAX_INT64_SECONDS (((int64_t)(~((uint64_t)0)>>1)/HZ)-1)
                                                             ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#639: FILE: fs/select.c:657:
+asmlinkage long sys_ppoll(struct pollfd __user * ufds, unsigned int nfds, struct timespec __user *tsp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#639: FILE: fs/select.c:657:
+asmlinkage long sys_ppoll(struct pollfd __user * ufds, unsigned int nfds, struct timespec __user *tsp,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#644: FILE: fs/select.c:662:
+	int64_t timeout = -1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#651: FILE: fs/select.c:669:
+		if (ts.tv_sec < MAX_INT64_SECONDS) {
[...]
+		} else
[...]

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#652: FILE: fs/select.c:670:
+			timeout = ROUND_UP(ts.tv_sec, 1000000000/HZ);
 			                                        ^

CHECK:BRACES: Unbalanced braces around else statement
#654: FILE: fs/select.c:672:
+		} else

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#665: FILE: fs/select.c:683:
+		sigdelsetmask(&ksigmask, sigmask(SIGKILL)|sigmask(SIGSTOP));
 		                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: include/linux/compat.h:51:
+extern void sigset_from_compat (sigset_t *set, compat_sigset_t *compat);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#732: FILE: include/linux/compat.h:51:
+extern void sigset_from_compat (sigset_t *set, compat_sigset_t *compat);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#744: FILE: include/linux/poll.h:96:
+extern int do_sys_poll(struct pollfd __user * ufds, unsigned int nfds, int64_t timeout);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#744: FILE: include/linux/poll.h:96:
+extern int do_sys_poll(struct pollfd __user * ufds, unsigned int nfds, int64_t timeout);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 7 warnings, 51 checks, 616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
