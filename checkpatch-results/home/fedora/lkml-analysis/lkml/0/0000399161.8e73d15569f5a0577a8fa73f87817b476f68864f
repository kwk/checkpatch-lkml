WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
People can take a look at http://tilp.info/perso/gkc.html for more informations

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#31: 
People can take a look at http://tilp.info/perso/gkc.html for more informations
                                                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: scripts/kconfig/Makefile:38:
+HOSTCXXFLAGS_qconf.o = -I$(QTDIR)/include $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#164: FILE: scripts/kconfig/gconf.c:1:
+/* Hey EMACS -*- linux-c -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#201: FILE: scripts/kconfig/gconf.c:38:
+static gboolean resizeable = FALSE;
                 ^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: scripts/kconfig/gconf.c:43:
+    "Sorry, no help available for this option yet.\n";$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#208: FILE: scripts/kconfig/gconf.c:45:
+GtkWidget *main_wnd = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:CAMELCASE: Avoid CamelCase: <GtkWidget>
#208: FILE: scripts/kconfig/gconf.c:45:
+GtkWidget *main_wnd = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#209: FILE: scripts/kconfig/gconf.c:46:
+GtkWidget *tree1_w = NULL;	// left  frame

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#210: FILE: scripts/kconfig/gconf.c:47:
+GtkWidget *tree2_w = NULL;	// right frame

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#211: FILE: scripts/kconfig/gconf.c:48:
+GtkWidget *text_w = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#212: FILE: scripts/kconfig/gconf.c:49:
+GtkWidget *entry_w = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#213: FILE: scripts/kconfig/gconf.c:50:
+GtkWidget *hpaned = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#214: FILE: scripts/kconfig/gconf.c:51:
+GtkWidget *vpaned = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTextTag>
#216: FILE: scripts/kconfig/gconf.c:53:
+GtkTextTag *tag1, *tag2;

CHECK:CAMELCASE: Avoid CamelCase: <GdkColor>
#217: FILE: scripts/kconfig/gconf.c:54:
+GdkColor color;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeStore>
#219: FILE: scripts/kconfig/gconf.c:56:
+GtkTreeStore *tree1, *tree2, *tree;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeModel>
#220: FILE: scripts/kconfig/gconf.c:57:
+GtkTreeModel *model1, *model2;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeIter>
#221: FILE: scripts/kconfig/gconf.c:58:
+static GtkTreeIter *parents[256] = { 0 };

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: scripts/kconfig/gconf.c:72:
+static void update_tree(struct menu *src, GtkTreeIter * dst);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: scripts/kconfig/gconf.c:73:
+static void set_node2(GtkTreeIter * node, struct menu *menu, gchar ** row);

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#236: FILE: scripts/kconfig/gconf.c:73:
+static void set_node2(GtkTreeIter * node, struct menu *menu, gchar ** row);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: scripts/kconfig/gconf.c:76:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: scripts/kconfig/gconf.c:79:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: scripts/kconfig/gconf.c:151:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: scripts/kconfig/gconf.c:173:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: scripts/kconfig/gconf.c:182:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: scripts/kconfig/gconf.c:185:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: scripts/kconfig/gconf.c:186:
+void init_main_window(const gchar * glade_file)

CHECK:CAMELCASE: Avoid CamelCase: <GladeXML>
#351: FILE: scripts/kconfig/gconf.c:188:
+	GladeXML *xml;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTextBuffer>
#353: FILE: scripts/kconfig/gconf.c:190:
+	GtkTextBuffer *txtbuf;

CHECK:CAMELCASE: Avoid CamelCase: <GdkPixmap>
#355: FILE: scripts/kconfig/gconf.c:192:
+	GdkPixmap *pixmap;

CHECK:CAMELCASE: Avoid CamelCase: <GdkBitmap>
#356: FILE: scripts/kconfig/gconf.c:193:
+	GdkBitmap *mask;

CHECK:CAMELCASE: Avoid CamelCase: <GtkStyle>
#357: FILE: scripts/kconfig/gconf.c:194:
+	GtkStyle *style;

CHECK:CAMELCASE: Avoid CamelCase: <GtkCheckMenuItem>
#372: FILE: scripts/kconfig/gconf.c:209:
+	gtk_check_menu_item_set_active((GtkCheckMenuItem *) widget,

CHECK:SPACING: No space is necessary after a cast
#376: FILE: scripts/kconfig/gconf.c:213:
+	gtk_check_menu_item_set_active((GtkCheckMenuItem *) widget,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#380: FILE: scripts/kconfig/gconf.c:217:
+	gtk_check_menu_item_set_active((GtkCheckMenuItem *) widget,

CHECK:SPACING: No space is necessary after a cast
#388: FILE: scripts/kconfig/gconf.c:225:
+					      (gchar **) xpm_single_view);

CHECK:CAMELCASE: Avoid CamelCase: <GtkToolbarChild>
#390: FILE: scripts/kconfig/gconf.c:227:
+				  (((GtkToolbarChild

CHECK:SPACING: No space is necessary after a cast
#398: FILE: scripts/kconfig/gconf.c:235:
+					 (gchar **) xpm_split_view);

CHECK:SPACING: No space is necessary after a cast
#408: FILE: scripts/kconfig/gconf.c:245:
+					 (gchar **) xpm_tree_view);

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#445: FILE: scripts/kconfig/gconf.c:282:
+		getenv("SUBLEVEL"), getenv("EXTRAVERSION"));
 		                            ^^^^^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#455: FILE: scripts/kconfig/gconf.c:292:
+	tree = tree2 = gtk_tree_store_new(COLUMN_NUMBER,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#463: FILE: scripts/kconfig/gconf.c:300:
+		parents[i] = (GtkTreeIter *) g_malloc(sizeof(GtkTreeIter));

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeView>
#475: FILE: scripts/kconfig/gconf.c:312:
+	GtkTreeView *view = GTK_TREE_VIEW(tree1_w);

CHECK:CAMELCASE: Avoid CamelCase: <GtkCellRenderer>
#476: FILE: scripts/kconfig/gconf.c:313:
+	GtkCellRenderer *renderer;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeSelection>
#477: FILE: scripts/kconfig/gconf.c:314:
+	GtkTreeSelection *sel;

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreeViewColumn>
#500: FILE: scripts/kconfig/gconf.c:337:
+	GtkTreeViewColumn *col;

WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#555: FILE: scripts/kconfig/gconf.c:392:
+	if (resizeable) {
 	    ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#568: FILE: scripts/kconfig/gconf.c:405:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#571: FILE: scripts/kconfig/gconf.c:408:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <GtkTextIter>
#575: FILE: scripts/kconfig/gconf.c:412:
+	GtkTextIter start, end;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#608: FILE: scripts/kconfig/gconf.c:445:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#629: FILE: scripts/kconfig/gconf.c:466:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#632: FILE: scripts/kconfig/gconf.c:469:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#633: FILE: scripts/kconfig/gconf.c:470:
+void on_window1_destroy(GtkObject * object, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkObject>
#633: FILE: scripts/kconfig/gconf.c:470:
+void on_window1_destroy(GtkObject * object, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: scripts/kconfig/gconf.c:476:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#641: FILE: scripts/kconfig/gconf.c:478:
+on_window1_size_request(GtkWidget * widget,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#642: FILE: scripts/kconfig/gconf.c:479:
+			GtkRequisition * requisition, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkRequisition>
#642: FILE: scripts/kconfig/gconf.c:479:
+			GtkRequisition * requisition, gpointer user_data)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#644: FILE: scripts/kconfig/gconf.c:481:
+	static gint old_h = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!widget->window"
#647: FILE: scripts/kconfig/gconf.c:484:
+	if (widget->window == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#659: FILE: scripts/kconfig/gconf.c:496:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#662: FILE: scripts/kconfig/gconf.c:499:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#664: FILE: scripts/kconfig/gconf.c:501:
+load_filename(GtkFileSelection * file_selector, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkFileSelection>
#664: FILE: scripts/kconfig/gconf.c:501:
+load_filename(GtkFileSelection * file_selector, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#677: FILE: scripts/kconfig/gconf.c:514:
+void on_load1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkMenuItem>
#677: FILE: scripts/kconfig/gconf.c:514:
+void on_load1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:SPACING: No space is necessary after a cast
#684: FILE: scripts/kconfig/gconf.c:521:
+			 G_CALLBACK(load_filename), (gpointer) fs);

CHECK:SPACING: No space is necessary after a cast
#688: FILE: scripts/kconfig/gconf.c:525:
+				 (gpointer) fs);

CHECK:SPACING: No space is necessary after a cast
#692: FILE: scripts/kconfig/gconf.c:529:
+				 (gpointer) fs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#696: FILE: scripts/kconfig/gconf.c:533:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#697: FILE: scripts/kconfig/gconf.c:534:
+void on_save1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#705: FILE: scripts/kconfig/gconf.c:542:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#707: FILE: scripts/kconfig/gconf.c:544:
+store_filename(GtkFileSelection * file_selector, gpointer user_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#720: FILE: scripts/kconfig/gconf.c:557:
+void on_save_as1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:SPACING: No space is necessary after a cast
#727: FILE: scripts/kconfig/gconf.c:564:
+			 G_CALLBACK(store_filename), (gpointer) fs);

CHECK:SPACING: No space is necessary after a cast
#731: FILE: scripts/kconfig/gconf.c:568:
+				 (gpointer) fs);

CHECK:SPACING: No space is necessary after a cast
#735: FILE: scripts/kconfig/gconf.c:572:
+				 (gpointer) fs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: scripts/kconfig/gconf.c:576:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#740: FILE: scripts/kconfig/gconf.c:577:
+void on_quit1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#745: FILE: scripts/kconfig/gconf.c:582:
+	if (config_changed == FALSE) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

CHECK:CAMELCASE: Avoid CamelCase: <GtkDialogFlags>
#752: FILE: scripts/kconfig/gconf.c:589:
+					     (GtkDialogFlags)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#787: FILE: scripts/kconfig/gconf.c:624:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#788: FILE: scripts/kconfig/gconf.c:625:
+void on_show_name1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#799: FILE: scripts/kconfig/gconf.c:636:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#800: FILE: scripts/kconfig/gconf.c:637:
+void on_show_range1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#815: FILE: scripts/kconfig/gconf.c:652:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#817: FILE: scripts/kconfig/gconf.c:654:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#818: FILE: scripts/kconfig/gconf.c:655:
+void on_show_data1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#829: FILE: scripts/kconfig/gconf.c:666:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#831: FILE: scripts/kconfig/gconf.c:668:
+on_show_all_options1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#839: FILE: scripts/kconfig/gconf.c:676:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: scripts/kconfig/gconf.c:678:
+on_show_debug_info1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#847: FILE: scripts/kconfig/gconf.c:684:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#848: FILE: scripts/kconfig/gconf.c:685:
+void on_introduction1_activate(GtkMenuItem * menuitem, gpointer user_data)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#866: FILE: scripts/kconfig/gconf.c:703:
+	    "Toggling Show Debug Info under the Options menu will show \n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#879: FILE: scripts/kconfig/gconf.c:716:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#880: FILE: scripts/kconfig/gconf.c:717:
+void on_about1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#897: FILE: scripts/kconfig/gconf.c:734:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#898: FILE: scripts/kconfig/gconf.c:735:
+void on_license1_activate(GtkMenuItem * menuitem, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#916: FILE: scripts/kconfig/gconf.c:753:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#917: FILE: scripts/kconfig/gconf.c:754:
+void on_back_pressed(GtkButton * button, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkButton>
#917: FILE: scripts/kconfig/gconf.c:754:
+void on_back_pressed(GtkButton * button, gpointer user_data)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current == &rootmenu'
#919: FILE: scripts/kconfig/gconf.c:756:
+	if ((current == &rootmenu) || (view_mode != SINGLE_VIEW))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode != SINGLE_VIEW'
#919: FILE: scripts/kconfig/gconf.c:756:
+	if ((current == &rootmenu) || (view_mode != SINGLE_VIEW))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#925: FILE: scripts/kconfig/gconf.c:762:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#926: FILE: scripts/kconfig/gconf.c:763:
+void on_load_pressed(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#931: FILE: scripts/kconfig/gconf.c:768:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#932: FILE: scripts/kconfig/gconf.c:769:
+void on_save_pressed(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#937: FILE: scripts/kconfig/gconf.c:774:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#938: FILE: scripts/kconfig/gconf.c:775:
+void on_single_clicked(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#949: FILE: scripts/kconfig/gconf.c:786:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#950: FILE: scripts/kconfig/gconf.c:787:
+void on_split_clicked(GtkButton * button, gpointer user_data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#953: FILE: scripts/kconfig/gconf.c:790:
+	gint w, h;
+	view_mode = SPLIT_VIEW;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#961: FILE: scripts/kconfig/gconf.c:798:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#962: FILE: scripts/kconfig/gconf.c:799:
+void on_full_clicked(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#972: FILE: scripts/kconfig/gconf.c:809:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#973: FILE: scripts/kconfig/gconf.c:810:
+void on_collapse_pressed(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#978: FILE: scripts/kconfig/gconf.c:815:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#979: FILE: scripts/kconfig/gconf.c:816:
+void on_expand_pressed(GtkButton * button, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#984: FILE: scripts/kconfig/gconf.c:821:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#987: FILE: scripts/kconfig/gconf.c:824:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#991: FILE: scripts/kconfig/gconf.c:828:
+void on_entry1_activate(GtkEntry * entry, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkEntry>
#991: FILE: scripts/kconfig/gconf.c:828:
+void on_entry1_activate(GtkEntry * entry, gpointer user_data)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#993: FILE: scripts/kconfig/gconf.c:830:
+{
+

CHECK:SPACING: No space is necessary after a cast
#995: FILE: scripts/kconfig/gconf.c:832:
+	struct menu *menu = (struct menu *) user_data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1008: FILE: scripts/kconfig/gconf.c:845:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1010: FILE: scripts/kconfig/gconf.c:847:
+on_entry1_key_press_event(GtkWidget * widget,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1011: FILE: scripts/kconfig/gconf.c:848:
+			  GdkEventKey * event, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GdkEventKey>
#1011: FILE: scripts/kconfig/gconf.c:848:
+			  GdkEventKey * event, gpointer user_data)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1054: FILE: scripts/kconfig/gconf.c:891:
+		if (col == COLUMN_VALUE)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1056: FILE: scripts/kconfig/gconf.c:893:
+			return;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1056: FILE: scripts/kconfig/gconf.c:893:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1084: FILE: scripts/kconfig/gconf.c:921:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1085: FILE: scripts/kconfig/gconf.c:922:
+static gint column2index(GtkTreeViewColumn * column)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1100: FILE: scripts/kconfig/gconf.c:937:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1105: FILE: scripts/kconfig/gconf.c:942:
+on_treeview2_button_press_event(GtkWidget * widget,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1106: FILE: scripts/kconfig/gconf.c:943:
+				GdkEventButton * event, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GdkEventButton>
#1106: FILE: scripts/kconfig/gconf.c:943:
+				GdkEventButton * event, gpointer user_data)

CHECK:CAMELCASE: Avoid CamelCase: <GtkTreePath>
#1109: FILE: scripts/kconfig/gconf.c:946:
+	GtkTreePath *path;

CHECK:SPACING: No space is necessary after a cast
#1116: FILE: scripts/kconfig/gconf.c:953:
+	gint tx = (gint) event->x;

CHECK:SPACING: No space is necessary after a cast
#1117: FILE: scripts/kconfig/gconf.c:954:
+	gint ty = (gint) event->y;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path"
#1125: FILE: scripts/kconfig/gconf.c:962:
+	if (path == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'col == COLUMN_OPTION'
#1132: FILE: scripts/kconfig/gconf.c:969:
+	if ((col == COLUMN_OPTION) && (event->type == GDK_2BUTTON_PRESS) &&
+	    (view_mode == SINGLE_VIEW) && menu->list) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->type == GDK_2BUTTON_PRESS'
#1132: FILE: scripts/kconfig/gconf.c:969:
+	if ((col == COLUMN_OPTION) && (event->type == GDK_2BUTTON_PRESS) &&
+	    (view_mode == SINGLE_VIEW) && menu->list) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SINGLE_VIEW'
#1132: FILE: scripts/kconfig/gconf.c:969:
+	if ((col == COLUMN_OPTION) && (event->type == GDK_2BUTTON_PRESS) &&
+	    (view_mode == SINGLE_VIEW) && menu->list) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1132: FILE: scripts/kconfig/gconf.c:969:
+	if ((col == COLUMN_OPTION) && (event->type == GDK_2BUTTON_PRESS) &&
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1136: FILE: scripts/kconfig/gconf.c:973:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1144: FILE: scripts/kconfig/gconf.c:981:
+on_treeview2_key_press_event(GtkWidget * widget,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1145: FILE: scripts/kconfig/gconf.c:982:
+			     GdkEventKey * event, gpointer user_data)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path"
#1155: FILE: scripts/kconfig/gconf.c:992:
+	if (path == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1189: FILE: scripts/kconfig/gconf.c:1026:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1192: FILE: scripts/kconfig/gconf.c:1029:
+on_treeview2_cursor_changed(GtkTreeView * treeview, gpointer user_data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1205: FILE: scripts/kconfig/gconf.c:1042:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1208: FILE: scripts/kconfig/gconf.c:1045:
+on_treeview1_button_press_event(GtkWidget * widget,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1209: FILE: scripts/kconfig/gconf.c:1046:
+				GdkEventButton * event, gpointer user_data)

CHECK:SPACING: No space is necessary after a cast
#1217: FILE: scripts/kconfig/gconf.c:1054:
+	gint tx = (gint) event->x;

CHECK:SPACING: No space is necessary after a cast
#1218: FILE: scripts/kconfig/gconf.c:1055:
+	gint ty = (gint) event->y;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path"
#1223: FILE: scripts/kconfig/gconf.c:1060:
+	if (path == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1237: FILE: scripts/kconfig/gconf.c:1074:
+
+

CHECK:SPACING: No space is necessary after a cast
#1247: FILE: scripts/kconfig/gconf.c:1084:
+	row = (gchar **) g_malloc0(COLUMN_NUMBER * sizeof(gchar *));

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#1261: FILE: scripts/kconfig/gconf.c:1098:
+	if (sym_is_choice(sym)) {	// parse childs for getting final value
 	                         	         ^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1268: FILE: scripts/kconfig/gconf.c:1105:
+			if (menu_is_visible(child)
+			    && child->sym == def_sym)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1316: FILE: scripts/kconfig/gconf.c:1153:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1318: FILE: scripts/kconfig/gconf.c:1155:
+static void set_node2(GtkTreeIter * node, struct menu *menu, gchar ** row)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1318: FILE: scripts/kconfig/gconf.c:1155:
+static void set_node2(GtkTreeIter * node, struct menu *menu, gchar ** row)

CHECK:SPACING: No space is necessary after a cast
#1337: FILE: scripts/kconfig/gconf.c:1174:
+			   COLUMN_MENU, (gpointer) menu,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1342: FILE: scripts/kconfig/gconf.c:1179:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1353: FILE: scripts/kconfig/gconf.c:1190:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1360: FILE: scripts/kconfig/gconf.c:1197:
+GtkTreeIter *gtktree_iter_find_node(GtkTreeIter * parent,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1389: FILE: scripts/kconfig/gconf.c:1226:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1394: FILE: scripts/kconfig/gconf.c:1231:
+static void update_tree(struct menu *src, GtkTreeIter * dst)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1410: FILE: scripts/kconfig/gconf.c:1247:
+	for (child1 = src->list; child1; child1 = child1->next) {
+

WARNING:INDENTED_LABEL: labels should not be indented
#1414: FILE: scripts/kconfig/gconf.c:1251:
+	      reparse:

CHECK:BRACES: braces {} should be used on all arms of this statement
#1429: FILE: scripts/kconfig/gconf.c:1266:
+			if (gtktree_iter_find_node(dst, menu1) != NULL) {
[...]
+			} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gtktree_iter_find_node"
#1429: FILE: scripts/kconfig/gconf.c:1266:
+			if (gtktree_iter_find_node(dst, menu1) != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: scripts/kconfig/gconf.c:1272:
+^I^I^I^I^Ireturn;^I// next parent $

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1436: FILE: scripts/kconfig/gconf.c:1273:
+					return;	// next parent 
+				else

CHECK:BRACES: Unbalanced braces around else statement
#1438: FILE: scripts/kconfig/gconf.c:1275:
+			} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gtktree_iter_find_node"
#1443: FILE: scripts/kconfig/gconf.c:1280:
+			if (gtktree_iter_find_node(dst, menu1) == NULL) {	// add node

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!menu2"
#1452: FILE: scripts/kconfig/gconf.c:1289:
+				if (menu2 == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: scripts/kconfig/gconf.c:1297:
+^I^I^I^I^Ireturn;^I// next parent $

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1461: FILE: scripts/kconfig/gconf.c:1298:
+					return;	// next parent 
+				else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1476: FILE: scripts/kconfig/gconf.c:1313:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SPLIT_VIEW'
#1498: FILE: scripts/kconfig/gconf.c:1335:
+		if ((view_mode == SPLIT_VIEW) && (ptype != P_ROOTMENU) &&
+		    (tree == tree1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptype != P_ROOTMENU'
#1498: FILE: scripts/kconfig/gconf.c:1335:
+		if ((view_mode == SPLIT_VIEW) && (ptype != P_ROOTMENU) &&
+		    (tree == tree1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tree == tree1'
#1498: FILE: scripts/kconfig/gconf.c:1335:
+		if ((view_mode == SPLIT_VIEW) && (ptype != P_ROOTMENU) &&
+		    (tree == tree1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SPLIT_VIEW'
#1502: FILE: scripts/kconfig/gconf.c:1339:
+		if ((view_mode == SPLIT_VIEW) && (ptype == P_ROOTMENU) &&
+		    (tree == tree2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptype == P_ROOTMENU'
#1502: FILE: scripts/kconfig/gconf.c:1339:
+		if ((view_mode == SPLIT_VIEW) && (ptype == P_ROOTMENU) &&
+		    (tree == tree2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tree == tree2'
#1502: FILE: scripts/kconfig/gconf.c:1339:
+		if ((view_mode == SPLIT_VIEW) && (ptype == P_ROOTMENU) &&
+		    (tree == tree2))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1512: FILE: scripts/kconfig/gconf.c:1349:
+		if (sym) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1517: FILE: scripts/kconfig/gconf.c:1354:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'menu != &rootmenu'
#1520: FILE: scripts/kconfig/gconf.c:1357:
+		if (((menu != &rootmenu) && (ptype != P_ROOTMENU)) ||
+		    (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptype != P_ROOTMENU'
#1520: FILE: scripts/kconfig/gconf.c:1357:
+		if (((menu != &rootmenu) && (ptype != P_ROOTMENU)) ||
+		    (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == FULL_VIEW'
#1520: FILE: scripts/kconfig/gconf.c:1357:
+		if (((menu != &rootmenu) && (ptype != P_ROOTMENU)) ||
+		    (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'view_mode == SPLIT_VIEW'
#1520: FILE: scripts/kconfig/gconf.c:1357:
+		if (((menu != &rootmenu) && (ptype != P_ROOTMENU)) ||
+		    (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1522: FILE: scripts/kconfig/gconf.c:1359:
+		    (view_mode == FULL_VIEW)
+		    || (view_mode == SPLIT_VIEW)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1558: FILE: scripts/kconfig/gconf.c:1395:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1561: FILE: scripts/kconfig/gconf.c:1398:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1595: FILE: scripts/kconfig/gconf.c:1432:
+	if (ac > 1 && av[1][0] == '-') {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1606: FILE: scripts/kconfig/gconf.c:1443:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2207: FILE: scripts/kconfig/gconf.glade:575:
+</glade-interface>  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 14 warnings, 134 checks, 2154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000399161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
