WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: include/asm-i386/mach-vmi/mach_segment.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#129: FILE: include/asm-i386/mach-vmi/mach_segment.h:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#130: FILE: include/asm-i386/mach-vmi/mach_segment.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#136: FILE: include/asm-i386/mach-vmi/mach_segment.h:25:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: include/asm-i386/mach-vmi/mach_segment.h:34:
+static inline unsigned get_kernel_rpl(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: include/asm-i386/mach-vmi/mach_segment.h:36:
+	unsigned cs;

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: include/asm-i386/mach-vmi/mach_segment.h:37:
+	unsigned cs;
+	__asm__ ("movl %%cs,%0" : "=r"(cs):);

ERROR:SPACING: spaces required around that ':' (ctx:VxB)
#148: FILE: include/asm-i386/mach-vmi/mach_segment.h:37:
+	__asm__ ("movl %%cs,%0" : "=r"(cs):);
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#153: FILE: include/asm-i386/mach-vmi/mach_segment.h:42:
+#define COMPARE_SEGMENT_STACK(segment, offset)	\
+	pushl %eax;				\
+	mov   offset+4(%esp), %eax;		\
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#153: FILE: include/asm-i386/mach-vmi/mach_segment.h:42:
+#define COMPARE_SEGMENT_STACK(segment, offset)	\
+	pushl %eax;				\
+	mov   offset+4(%esp), %eax;		\
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#153: FILE: include/asm-i386/mach-vmi/mach_segment.h:42:
+#define COMPARE_SEGMENT_STACK(segment, offset)	\
+	pushl %eax;				\
+	mov   offset+4(%esp), %eax;		\
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#154: FILE: include/asm-i386/mach-vmi/mach_segment.h:43:
+	pushl %eax;				\
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: include/asm-i386/mach-vmi/mach_segment.h:44:
+	mov   offset+4(%esp), %eax;		\
 	            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#155: FILE: include/asm-i386/mach-vmi/mach_segment.h:44:
+	mov   offset+4(%esp), %eax;		\
 	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#155: FILE: include/asm-i386/mach-vmi/mach_segment.h:44:
+	mov   offset+4(%esp), %eax;		\
 	                      ^

ERROR:SPACING: space required before that '~' (ctx:VxV)
#156: FILE: include/asm-i386/mach-vmi/mach_segment.h:45:
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
 	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#156: FILE: include/asm-i386/mach-vmi/mach_segment.h:45:
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#157: FILE: include/asm-i386/mach-vmi/mach_segment.h:46:
+	cmpw  $segment,%ax;			\
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#157: FILE: include/asm-i386/mach-vmi/mach_segment.h:46:
+	cmpw  $segment,%ax;			\
 	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#158: FILE: include/asm-i386/mach-vmi/mach_segment.h:47:
+	popl  %eax;
 	      ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#160: FILE: include/asm-i386/mach-vmi/mach_segment.h:49:
+#define COMPARE_SEGMENT_REG(segment, reg)	\
+	pushl %eax;				\
+	mov   reg, %eax;			\
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#160: FILE: include/asm-i386/mach-vmi/mach_segment.h:49:
+#define COMPARE_SEGMENT_REG(segment, reg)	\
+	pushl %eax;				\
+	mov   reg, %eax;			\
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#161: FILE: include/asm-i386/mach-vmi/mach_segment.h:50:
+	pushl %eax;				\
 	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#162: FILE: include/asm-i386/mach-vmi/mach_segment.h:51:
+	mov   reg, %eax;			\
 	           ^

ERROR:SPACING: space required before that '~' (ctx:VxV)
#163: FILE: include/asm-i386/mach-vmi/mach_segment.h:52:
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
 	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#163: FILE: include/asm-i386/mach-vmi/mach_segment.h:52:
+	andl  $~SEGMENT_RPL_MASK, %eax;		\
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#164: FILE: include/asm-i386/mach-vmi/mach_segment.h:53:
+	cmpw  $segment,%ax;			\
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#164: FILE: include/asm-i386/mach-vmi/mach_segment.h:53:
+	cmpw  $segment,%ax;			\
 	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#165: FILE: include/asm-i386/mach-vmi/mach_segment.h:54:
+	popl  %eax;
 	      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#173: FILE: include/asm-i386/mach-default/mach_segment.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#190: FILE: include/asm-i386/mach-default/mach_segment.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#191: FILE: include/asm-i386/mach-default/mach_segment.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: include/asm-i386/mach-default/mach_segment.h:25:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#203: FILE: include/asm-i386/mach-default/mach_segment.h:31:
+#define COMPARE_SEGMENT_STACK(segment, offset)	\
+	cmpw $segment, offset(%esp);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#203: FILE: include/asm-i386/mach-default/mach_segment.h:31:
+#define COMPARE_SEGMENT_STACK(segment, offset)	\
+	cmpw $segment, offset(%esp);

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#204: FILE: include/asm-i386/mach-default/mach_segment.h:32:
+	cmpw $segment, offset(%esp);
 	                      ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#206: FILE: include/asm-i386/mach-default/mach_segment.h:34:
+#define COMPARE_SEGMENT_REG(segment, reg)	\
+	pushl %eax;				\
+	mov   reg, %eax;			\
+	cmpw  $segment,%ax;			\
+	popl  %eax;

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#207: FILE: include/asm-i386/mach-default/mach_segment.h:35:
+	pushl %eax;				\
 	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#208: FILE: include/asm-i386/mach-default/mach_segment.h:36:
+	mov   reg, %eax;			\
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#209: FILE: include/asm-i386/mach-default/mach_segment.h:37:
+	cmpw  $segment,%ax;			\
 	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#209: FILE: include/asm-i386/mach-default/mach_segment.h:37:
+	cmpw  $segment,%ax;			\
 	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#210: FILE: include/asm-i386/mach-default/mach_segment.h:38:
+	popl  %eax;
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 9 warnings, 20 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
