CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#82: FILE: drivers/block/aoe/aoe.h:78:
+	DEVFL_GDALLOC = (1<<4),	/* need to alloc gendisk */
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#83: FILE: drivers/block/aoe/aoe.h:79:
+	DEVFL_PAUSE = (1<<5),
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#84: FILE: drivers/block/aoe/aoe.h:80:
+	DEVFL_NEWSIZE = (1<<6),	/* need to update dev size in block layer */
 	                  ^

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#221: FILE: drivers/block/aoe/aoechr.c:75:
+	if (size >= sizeof buf)

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#223: FILE: drivers/block/aoe/aoechr.c:77:
+	buf[sizeof buf - 1] = '\0';

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#230: FILE: drivers/block/aoe/aoechr.c:84:
+		printk(KERN_ERR "aoe: %s: invalid device specification\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/block/aoe/aoechr.c:85:
+		printk(KERN_ERR "aoe: %s: invalid device specification\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#231: FILE: drivers/block/aoe/aoechr.c:85:
+			__FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#285: FILE: drivers/block/aoe/aoecmd.c:204:
+	sl = sl_tail = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#293: FILE: drivers/block/aoe/aoecmd.c:212:
+		skb = new_skb(ifp, sizeof *h + sizeof *ch);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#294: FILE: drivers/block/aoe/aoecmd.c:213:
+		if (skb == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#295: FILE: drivers/block/aoe/aoecmd.c:214:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sl_tail"
#298: FILE: drivers/block/aoe/aoecmd.c:217:
+		if (sl_tail == NULL)

CHECK:SPACING: No space is necessary after a cast
#300: FILE: drivers/block/aoe/aoecmd.c:219:
+		h = (struct aoe_hdr *) skb->mac.raw;

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#301: FILE: drivers/block/aoe/aoecmd.c:220:
+		memset(h, 0, sizeof *h + sizeof *ch);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#303: FILE: drivers/block/aoe/aoecmd.c:222:
+		memset(h->dst, 0xff, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#304: FILE: drivers/block/aoe/aoecmd.c:223:
+		memcpy(h->src, ifp->dev_addr, sizeof h->src);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#305: FILE: drivers/block/aoe/aoecmd.c:224:
+		h->type = __constant_cpu_to_be16(ETH_P_AOE);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tail"
#316: FILE: drivers/block/aoe/aoecmd.c:235:
+	if (tail != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/block/aoe/aoecmd.c:250:
+			d->sendq_hd = aoecmd_cfg_pkts(d->aoemajor,
+						d->aoeminor, &d->sendq_tl);

CHECK:SPACING: No space is necessary after a cast
#347: FILE: drivers/block/aoe/aoecmd.c:370:
+	struct aoedev *d = (struct aoedev *) vp;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#362: FILE: drivers/block/aoe/aoecmd.c:385:
+			i_size_write(bd->bd_inode, (loff_t)ssize<<9);
 			                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#382: FILE: drivers/block/aoe/aoecmd.c:432:
+		printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: drivers/block/aoe/aoecmd.c:433:
+		printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "
+			"sectors\n", (unsigned long long)mac_addr(d->addr),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#400: FILE: drivers/block/aoe/aoecmd.c:443:
+			printk(KERN_INFO "aoe: %s: %s e%lu.%lu, %s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#401: FILE: drivers/block/aoe/aoecmd.c:444:
+			       __FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: drivers/block/aoe/aoecmd.c:680:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device sysminor_m failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#510: FILE: drivers/block/aoe/aoecmd.c:680:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device sysminor_m failure\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#519: FILE: drivers/block/aoe/aoecmd.c:688:
+	memcpy(d->addr, h->src, sizeof d->addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#554: FILE: drivers/block/aoe/aoedev.c:24:
+			printk(KERN_DEBUG "aoe: %ld.%ld isbusy\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: drivers/block/aoe/aoedev.c:25:
+			printk(KERN_DEBUG "aoe: %ld.%ld isbusy\n",
+				d->aoemajor, d->aoeminor);

CHECK:SPACING: No space is necessary after a cast
#598: FILE: drivers/block/aoe/aoedev.c:87:
+	d->timer.data = (ulong) d;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#652: FILE: drivers/block/aoe/aoedev.c:147:
+	if (d == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: drivers/block/aoe/aoedev.c:149:
+^I ^Iif (d == NULL) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#654: FILE: drivers/block/aoe/aoedev.c:149:
+^I ^Iif (d == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#654: FILE: drivers/block/aoe/aoedev.c:149:
+	 	if (d == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#656: FILE: drivers/block/aoe/aoedev.c:151:
+			printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoedev_set', this function's name, in a string
#656: FILE: drivers/block/aoe/aoedev.c:151:
+			printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 21 warnings, 16 checks, 571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
