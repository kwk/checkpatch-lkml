CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#45: FILE: drivers/kvm/x86_emulate.c:64:
+#define BitOp       (1<<8)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <BitOp>
#45: FILE: drivers/kvm/x86_emulate.c:64:
+#define BitOp       (1<<8)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BIT_MACRO: Prefer using the BIT macro
#45: FILE: drivers/kvm/x86_emulate.c:64:
+#define BitOp       (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <DstMem>
#63: FILE: drivers/kvm/x86_emulate.c:184:
+	0, 0, 0, DstMem | SrcReg | ModRM | BitOp, 0, 0, 0, 0,

CHECK:CAMELCASE: Avoid CamelCase: <SrcReg>
#63: FILE: drivers/kvm/x86_emulate.c:184:
+	0, 0, 0, DstMem | SrcReg | ModRM | BitOp, 0, 0, 0, 0,

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#63: FILE: drivers/kvm/x86_emulate.c:184:
+	0, 0, 0, DstMem | SrcReg | ModRM | BitOp, 0, 0, 0, 0,

CHECK:CAMELCASE: Avoid CamelCase: <SrcImmByte>
#75: FILE: drivers/kvm/x86_emulate.c:193:
+	0, 0, DstMem | SrcImmByte | ModRM, DstMem | SrcReg | ModRM | BitOp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#84: FILE: drivers/kvm/x86_emulate.c:473:
+	unsigned d;

CHECK:CAMELCASE: Avoid CamelCase: <DstMask>
#141: FILE: drivers/kvm/x86_emulate.c:804:
+	switch (d & DstMask) {

CHECK:CAMELCASE: Avoid CamelCase: <ByteOp>
#147: FILE: drivers/kvm/x86_emulate.c:810:
+		if ((d & ByteOp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#148: FILE: drivers/kvm/x86_emulate.c:811:
+		if ((d & ByteOp)
+		    && !(twobyte_table && (b == 0xb6 || b == 0xb7))) {

CHECK:SPACING: No space is necessary after a cast
#151: FILE: drivers/kvm/x86_emulate.c:814:
+			dst.val = *(u8 *) dst.ptr;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#176: FILE: drivers/kvm/x86_emulate.c:839:
+		if (!(d & Mov) && /* optimisation - avoid slow emulated read */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Mov>
#176: FILE: drivers/kvm/x86_emulate.c:839:
+		if (!(d & Mov) && /* optimisation - avoid slow emulated read */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000002438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 12 checks, 140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000002438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
