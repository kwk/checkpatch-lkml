WARNING:SPACING: Unnecessary space before function pointer arguments
#66: FILE: include/linux/cdrom.h:969:
+	int (*select_dvd_speed) (struct cdrom_device_info *, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#66: FILE: include/linux/cdrom.h:969:
+	int (*select_dvd_speed) (struct cdrom_device_info *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#66: FILE: include/linux/cdrom.h:969:
+	int (*select_dvd_speed) (struct cdrom_device_info *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/cdrom/cdrom.c:2331:
+^I^Icdinfo(CD_DO_IOCTL, "entering CDROM_SELECT_DVDSPEED\n"); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/ide/ide-cd.c:2419:
+static int cdrom_select_dvd_speed(ide_drive_t *drive, int speed,
+		struct request_sense *sense)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/ide/ide-cd.c:2427:
+^I^Ireturn -ENOSYS; $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#108: FILE: drivers/ide/ide-cd.c:2427:
+		return -ENOSYS; 

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/ide/ide-cd.c:2428:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/ide/ide-cd.c:2428:
+ $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#124: FILE: drivers/ide/ide-cd.c:2443:
+	} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/ide/ide-cd.c:2452:
+^I^I^Ipd[11] = cap & 0xff; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/ide/ide-cd.c:2458:
+^I^I^Ipd[11] = 0xff; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: drivers/ide/ide-cd.c:2460:
+^I^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#143: FILE: drivers/ide/ide-cd.c:2462:
+		pd[12] = pd[20] = (speed >> 24) & 0xff;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#144: FILE: drivers/ide/ide-cd.c:2463:
+		pd[13] = pd[21] = (speed >> 16) & 0xff;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#145: FILE: drivers/ide/ide-cd.c:2464:
+		pd[14] = pd[22] = (speed >> 8) & 0xff;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#146: FILE: drivers/ide/ide-cd.c:2465:
+		pd[15] = pd[23] = speed & 0xff;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#149: FILE: drivers/ide/ide-cd.c:2468:
+		pd[18] = pd[26] = 1000 >> 8;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#150: FILE: drivers/ide/ide-cd.c:2469:
+		pd[19] = pd[27] = 1000 & 0xff;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/ide/ide-cd.c:2731:
+int ide_cdrom_select_dvd_speed (struct cdrom_device_info *cdi, int speed)

CHECK:SPACING: No space is necessary after a cast
#166: FILE: drivers/ide/ide-cd.c:2733:
+	ide_drive_t *drive = (ide_drive_t*) cdi->handle;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#166: FILE: drivers/ide/ide-cd.c:2733:
+	ide_drive_t *drive = (ide_drive_t*) cdi->handle;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#170: FILE: drivers/ide/ide-cd.c:2737:
+	if ((stat = cdrom_select_dvd_speed(drive, speed, &sense)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 9 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
