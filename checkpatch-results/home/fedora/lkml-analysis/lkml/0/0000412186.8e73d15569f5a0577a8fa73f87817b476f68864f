WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -u --recursive --new-file -X /linux/dontdiff a/Documentation/filesystems/Locking b/Documentation/filesystems/Locking

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/Documentation/filesystems/Locking	Sat Jul 20 21:39:32 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: drivers/hotplug/pci_hotplug_core.c:124:
+static struct inode *pcihpfs_get_inode (struct super_block *sb, int mode, dev_t dev)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: drivers/hotplug/pci_hotplug_core.c:156:
+static int pcihpfs_mknod (struct inode *dir, struct dentry *dentry, int mode, dev_t dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: drivers/usb/core/inode.c:146:
+static struct inode *usbfs_get_inode (struct super_block *sb, int mode, dev_t dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: fs/coda/upcall.c:314:
+^I^I struct ViceFid *newfid, struct coda_vattr *attrs) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ViceFid>
#136: FILE: fs/coda/upcall.c:314:
+		 struct ViceFid *newfid, struct coda_vattr *attrs) 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#169: FILE: fs/devices.c:220:
+		printk(KERN_DEBUG "init_special_inode: bogus imode (%o)\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: fs/ext2/namei.c:137:
+static int ext2_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: fs/ext2/namei.c:137:
+static int ext2_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#204: FILE: fs/hpfs/hpfs_fn.h:285:
+int hpfs_mknod(struct inode *, struct dentry *, int, dev_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#204: FILE: fs/hpfs/hpfs_fn.h:285:
+int hpfs_mknod(struct inode *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#204: FILE: fs/hpfs/hpfs_fn.h:285:
+int hpfs_mknod(struct inode *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#204: FILE: fs/hpfs/hpfs_fn.h:285:
+int hpfs_mknod(struct inode *, struct dentry *, int, dev_t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: fs/intermezzo/dir.c:723:
+static int presto_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: fs/intermezzo/dir.c:723:
+static int presto_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: fs/jffs2/dir.c:35:
+static int jffs2_mknod (struct inode *,struct dentry *,int,dev_t);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#275: FILE: fs/jffs2/dir.c:35:
+static int jffs2_mknod (struct inode *,struct dentry *,int,dev_t);
                                       ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#275: FILE: fs/jffs2/dir.c:35:
+static int jffs2_mknod (struct inode *,struct dentry *,int,dev_t);
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: fs/jffs2/dir.c:35:
+static int jffs2_mknod (struct inode *,struct dentry *,int,dev_t);
                                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: fs/jffs2/dir.c:570:
+static int jffs2_mknod (struct inode *dir_i, struct dentry *dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#308: FILE: fs/minix/namei.c:78:
+static int minix_mknod(struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: fs/ncpfs/ncplib_kernel.h:120:
+                          int mode, dev_t rdev, int attributes);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/ncpfs/ncplib_kernel.h:120:
+                          int mode, dev_t rdev, int attributes);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#414: FILE: fs/reiserfs/namei.c:608:
+static int reiserfs_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: fs/reiserfs/namei.c:608:
+static int reiserfs_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#426: FILE: fs/smbfs/dir.c:34:
+static int smb_make_node(struct inode *,struct dentry *,int,dev_t);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#426: FILE: fs/smbfs/dir.c:34:
+static int smb_make_node(struct inode *,struct dentry *,int,dev_t);
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: fs/smbfs/dir.c:34:
+static int smb_make_node(struct inode *,struct dentry *,int,dev_t);
                                                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#459: FILE: fs/sysv/namei.c:86:
+static int sysv_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#459: FILE: fs/sysv/namei.c:86:
+static int sysv_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: fs/udf/namei.c:672:
+static int udf_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: fs/udf/namei.c:672:
+static int udf_mknod(struct inode * dir, struct dentry * dentry, int mode, dev_t rdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#483: FILE: fs/ufs/namei.c:111:
+static int ufs_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: fs/ufs/namei.c:111:
+static int ufs_mknod (struct inode * dir, struct dentry *dentry, int mode, dev_t rdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: include/linux/coda_psdev.h:50:
+^I^Iconst char *name, int length, $

WARNING:SPACING: space prohibited before semicolon
#535: FILE: include/linux/coda_psdev.h:54:
+		 struct ViceFid *newfid, struct coda_vattr *attrs) ;

WARNING:SPACING: Unnecessary space before function pointer arguments
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);
 	                                                ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#550: FILE: include/linux/fs.h:776:
+	int (*mknod) (struct inode *,struct dentry *,int,dev_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: include/linux/fs.h:1112:
+extern void init_special_inode(struct inode *, umode_t, dev_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#559: FILE: include/linux/fs.h:1112:
+extern void init_special_inode(struct inode *, umode_t, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'umode_t' should also have an identifier name
#559: FILE: include/linux/fs.h:1112:
+extern void init_special_inode(struct inode *, umode_t, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#559: FILE: include/linux/fs.h:1112:
+extern void init_special_inode(struct inode *, umode_t, dev_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 24 warnings, 2 checks, 424 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
