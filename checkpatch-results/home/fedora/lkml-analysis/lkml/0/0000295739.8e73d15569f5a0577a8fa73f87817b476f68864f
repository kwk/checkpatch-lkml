WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
oom_panic - will make kernel panic in oom condition. It is usefull for some 

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#39: 
oom_panic - will make kernel panic in oom condition. It is usefull for some 
                                                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: init/Kconfig:210:
+config OOM_KILLER_PARENT_PROCESS_KILL^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: init/Kconfig:222:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: init/Kconfig:225:
+config OOM_KILLER_PANIC^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: init/Kconfig:234:
+  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: mm/oom_kill_parent.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#108: FILE: mm/oom_kill_parent.c:2:
+ *  linux/mm/oom_kill_parent.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: mm/oom_kill_parent.c:3:
+ * $

WARNING:TYPO_SPELLING: 'Claus' may be misspelled - perhaps 'Clause'?
#111: FILE: mm/oom_kill_parent.c:5:
+ *	Thanks go out to Claus Fischer for some serious inspiration and
   	                 ^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#146: FILE: mm/oom_kill_parent.c:40:
+#define OOM_DEFAULT_EXPIRE	(5*60)
                           	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#172: FILE: mm/oom_kill_parent.c:66:
+struct parent_record
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#210: FILE: mm/oom_kill_parent.c:104:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#210: FILE: mm/oom_kill_parent.c:104:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#212: FILE: mm/oom_kill_parent.c:106:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#212: FILE: mm/oom_kill_parent.c:106:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: mm/oom_kill_parent.c:108:
+			if ( task != p->task ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#214: FILE: mm/oom_kill_parent.c:108:
+			if ( task != p->task ) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#215: FILE: mm/oom_kill_parent.c:109:
+				dbg("Parent %d (%p) removed from list - does not exist",p->pid, p->task);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: mm/oom_kill_parent.c:109:
+				dbg("Parent %d (%p) removed from list - does not exist",p->pid, p->task);
 				                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#218: FILE: mm/oom_kill_parent.c:112:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {
 			                                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#218: FILE: mm/oom_kill_parent.c:112:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#218: FILE: mm/oom_kill_parent.c:112:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#218: FILE: mm/oom_kill_parent.c:112:
+			}
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: mm/oom_kill_parent.c:113:
+				dbg("Parent %d (%p) removed from list - expired",p->pid, p->task);
 				                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#222: FILE: mm/oom_kill_parent.c:116:
+			else if ( p->value >= oom_parent_max ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#222: FILE: mm/oom_kill_parent.c:116:
+			else if ( p->value >= oom_parent_max ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#222: FILE: mm/oom_kill_parent.c:116:
+			}
+			else if ( p->value >= oom_parent_max ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: mm/oom_kill_parent.c:117:
+				error("Will kill parent process %d (%s)",p->pid,p->task->comm);
 				                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: mm/oom_kill_parent.c:117:
+				error("Will kill parent process %d (%s)",p->pid,p->task->comm);
 				                                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#236: FILE: mm/oom_kill_parent.c:130:
+	if ( !task )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#236: FILE: mm/oom_kill_parent.c:130:
+	if ( !task )

ERROR:SPACING: space prohibited after that open parenthesis '('
#239: FILE: mm/oom_kill_parent.c:133:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#239: FILE: mm/oom_kill_parent.c:133:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#241: FILE: mm/oom_kill_parent.c:135:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: mm/oom_kill_parent.c:135:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#242: FILE: mm/oom_kill_parent.c:136:
+			if ( (task->pid == p->pid) && (task == p->task) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#242: FILE: mm/oom_kill_parent.c:136:
+			if ( (task->pid == p->pid) && (task == p->task) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task->pid == p->pid'
#242: FILE: mm/oom_kill_parent.c:136:
+			if ( (task->pid == p->pid) && (task == p->task) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task == p->task'
#242: FILE: mm/oom_kill_parent.c:136:
+			if ( (task->pid == p->pid) && (task == p->task) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#255: FILE: mm/oom_kill_parent.c:149:
+	if ( !task )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: mm/oom_kill_parent.c:149:
+	if ( !task )

ERROR:SPACING: space prohibited after that open parenthesis '('
#258: FILE: mm/oom_kill_parent.c:152:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#258: FILE: mm/oom_kill_parent.c:152:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#260: FILE: mm/oom_kill_parent.c:154:
+		if ( !p->pid )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#260: FILE: mm/oom_kill_parent.c:154:
+		if ( !p->pid )

ERROR:SPACING: space prohibited after that open parenthesis '('
#264: FILE: mm/oom_kill_parent.c:158:
+	if ( p->pid )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#264: FILE: mm/oom_kill_parent.c:158:
+	if ( p->pid )

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#267: FILE: mm/oom_kill_parent.c:161:
+	p->pid= task->pid;
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: mm/oom_kill_parent.c:210:
+	if (cap_t(p->cap_effective) & CAP_TO_MASK(CAP_SYS_ADMIN) ||
+				p->uid == 0 || p->euid == 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: mm/oom_kill_parent.c:222:
+	dbg("Task %d (%s) got %d points",p->pid, p->comm, points);
 	                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: mm/oom_kill_parent.c:233:
+static struct task_struct * select_bad_process(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: mm/oom_kill_parent.c:242:
+			int points = badness(p);
+			if (points > maxpoints) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#385: FILE: mm/oom_kill_parent.c:279:
+	if (cap_t(p->cap_effective) & CAP_TO_MASK(CAP_SYS_RAWIO)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: mm/oom_kill_parent.c:289:
+	struct mm_struct *mm = get_task_mm(p);
+	if (!mm || mm == &init_mm)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#401: FILE: mm/oom_kill_parent.c:295:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: mm/oom_kill_parent.c:309:
+^I$

WARNING:TYPO_SPELLING: 'processs' may be misspelled - perhaps 'process'?
#426: FILE: mm/oom_kill_parent.c:320:
+	/* Add or update statistics for a parent processs */
 	                                         ^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: mm/oom_kill_parent.c:321:
+	if ( p->parent && (p->parent->pid > 1) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#427: FILE: mm/oom_kill_parent.c:321:
+	if ( p->parent && (p->parent->pid > 1) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->parent->pid > 1'
#427: FILE: mm/oom_kill_parent.c:321:
+	if ( p->parent && (p->parent->pid > 1) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#429: FILE: mm/oom_kill_parent.c:323:
+		if ( !parent ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#429: FILE: mm/oom_kill_parent.c:323:
+		if ( !parent ) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#430: FILE: mm/oom_kill_parent.c:324:
+			dbg("Adding parent (%d) to black list because of %d",p->parent->pid, p->pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: mm/oom_kill_parent.c:324:
+			dbg("Adding parent (%d) to black list because of %d",p->parent->pid, p->pid);
 			                                                    ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#433: FILE: mm/oom_kill_parent.c:327:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#433: FILE: mm/oom_kill_parent.c:327:
+		else {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#434: FILE: mm/oom_kill_parent.c:328:
+			dbg("Parent (%d) black list value increased to %ld",parent->pid, parent->value);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#434: FILE: mm/oom_kill_parent.c:328:
+			dbg("Parent (%d) black list value increased to %ld",parent->pid, parent->value);
 			                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: mm/oom_kill_parent.c:333:
+^I$

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#461: FILE: mm/oom_kill_parent.c:355:
+	yield();

WARNING:RETURN_VOID: void function return statements are not generally useful
#463: FILE: mm/oom_kill_parent.c:357:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: mm/oom_kill_parent.c:376:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#499: FILE: mm/oom_kill_parent.c:393:
+	if (since > 5*HZ)
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: mm/oom_kill_parent.c:406:
+^I * we're not really oom. $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#523: FILE: mm/oom_kill_parent.c:417:
+	if (since < HZ*5)
 	              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#549: FILE: mm/oom_kill_parent.c:443:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#549: FILE: mm/oom_kill_parent.c:443:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: mm/oom_kill_parent.c:461:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: mm/oom_kill_parent.c:473:
+^I$

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#586: FILE: mm/oom_kill_parent.c:480:
+MODULE_PARM_DESC(oom_parent_max, "Maximum number of bad childs parent can produce" );
                                                         ^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#586: FILE: mm/oom_kill_parent.c:480:
+MODULE_PARM_DESC(oom_parent_max, "Maximum number of bad childs parent can produce" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#588: FILE: mm/oom_kill_parent.c:482:
+MODULE_PARM_DESC(oom_parent_expire, "Time period in seconds after which parents past sins are forgotten" );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#596: FILE: mm/oom_panic.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#597: FILE: mm/oom_panic.c:2:
+ * linux/mm/oom_panic.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#615: FILE: mm/oom_panic.c:20:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#615: FILE: mm/oom_panic.c:20:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 17 warnings, 10 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
