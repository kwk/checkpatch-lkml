WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Scott Wood <scott.wood@timesys.com> under TS0058.', should be: 'Scott Wood <scott.wood@timesys.com> (under TS0058.)'
#76: 
Signed-off-by: Scott Wood <scott.wood@timesys.com> under TS0058.

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/i386/kernel/i386_ksyms.c:156:
+#if defined(CONFIG_SMP) || defined(CONFIG_IRQ_THREADS) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/i386/kernel/i8259.c:335:
+static struct irqaction fpu_irq = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#109: FILE: arch/i386/kernel/i8259.c:336:
+static struct irqaction fpu_irq = 
+	{ math_error_irq, SA_NOTHREAD, CPU_MASK_NONE, "fpu", NULL, NULL };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: arch/i386/kernel/irq.c:204:
+/* When IRQ threads are enabled, this has to synchronize with the thread.
+   The function to do this is provided in generic code. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#123: FILE: arch/i386/kernel/irq.c:204:
+   The function to do this is provided in generic code. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: arch/i386/kernel/irq.c:405:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: arch/i386/kernel/irq.c:407:
+		/* Don't unmask the IRQ if it's in progress, or else you
+		   could re-enter the IRQ handler.  As it is now enabled,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#173: FILE: arch/i386/kernel/irq.c:408:
+		   the IRQ will be unmasked when the handler is finished. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/kernel/irq.c:409:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/i386/kernel/irq.c:411:
+^I^I                      IRQ_THREADPENDING)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/i386/kernel/irq.c:458:
+^I                       IRQ_THREADPENDING | IRQ_THREADRUNNING)))) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/i386/kernel/irq.c:490:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: arch/i386/kernel/irq.c:494:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: arch/i386/kernel/irq.c:505:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/i386/kernel/irq.c:544:
+^I^I             "=r" (esp) : "0" (THREAD_SIZE - 1));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#355: FILE: arch/i386/kernel/irq.c:547:
+			printk("do_IRQ: stack overflow: %ld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_IRQ', this function's name, in a string
#355: FILE: arch/i386/kernel/irq.c:547:
+			printk("do_IRQ: stack overflow: %ld\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#365: FILE: arch/i386/kernel/irq.c:555:
+	curctx = (union irq_ctx *) current_thread_info();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#384: FILE: arch/i386/kernel/irq.c:569:
+		isp = (u32*) ((char*)irqctx + sizeof(*irqctx));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#384: FILE: arch/i386/kernel/irq.c:569:
+		isp = (u32*) ((char*)irqctx + sizeof(*irqctx));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#384: FILE: arch/i386/kernel/irq.c:569:
+		isp = (u32*) ((char*)irqctx + sizeof(*irqctx));

CHECK:SPACING: No space is necessary after a cast
#389: FILE: arch/i386/kernel/irq.c:573:
+		*--isp = (u32) &regs;

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/i386/kernel/irq.c:576:
+^I^I             "call    really_do_IRQ;"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/i386/kernel/irq.c:577:
+ ^I^I             "xchgl   %%ebx, %%esp;"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: arch/i386/kernel/irq.c:577:
+ ^I^I             "xchgl   %%ebx, %%esp;"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/i386/kernel/irq.c:577:
+ ^I^I             "xchgl   %%ebx, %%esp;"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/i386/kernel/irq.c:578:
+^I^I           : /* no outputs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/i386/kernel/irq.c:579:
+^I^I           : "b" (isp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/i386/kernel/irq.c:580:
+^I^I           : "memory", "cc", "eax", "edx", "ecx");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: arch/i386/mach-default/setup.c:30:
+static struct irqaction irq2 = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#426: FILE: arch/i386/mach-default/setup.c:31:
+static struct irqaction irq2 = 
+	{ no_action, SA_NOTHREAD, CPU_MASK_NONE, "cascade", NULL, NULL};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: arch/i386/mach-default/setup.c:75:
+static struct irqaction irq0  = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: arch/i386/mach-default/setup.c:76:
+^I{ timer_interrupt, SA_INTERRUPT | SA_NOTHREAD, CPU_MASK_NONE, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#436: FILE: arch/i386/mach-default/setup.c:76:
+static struct irqaction irq0  = 
+	{ timer_interrupt, SA_INTERRUPT | SA_NOTHREAD, CPU_MASK_NONE, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: arch/i386/mach-voyager/setup.c:20:
+static struct irqaction irq2 = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#479: FILE: arch/i386/mach-voyager/setup.c:21:
+static struct irqaction irq2 = 
+	{ no_action, SA_NOTHREAD, CPU_MASK_NONE, "cascade", NULL, NULL};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: arch/i386/mach-voyager/setup.c:44:
+static struct irqaction irq0  = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: arch/i386/mach-voyager/setup.c:45:
+^I{ timer_interrupt, SA_INTERRUPT | SA_NOTHREAD, $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#489: FILE: arch/i386/mach-voyager/setup.c:45:
+static struct irqaction irq0  = 
+	{ timer_interrupt, SA_INTERRUPT | SA_NOTHREAD, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/input/serio/i8042.c:575:
+	if (request_irq(values->irq, i8042_interrupt, SA_SHIRQ | SA_NOTHREAD,
 				"i8042", &i8042_check_aux_cookie))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#590: FILE: include/linux/interrupt.h:253:
+/* This is under CONFIG_IRQ_THREADS for now, so it doesn't break other
+   architectures where it's still static.  It has to be here rather

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#592: FILE: include/linux/interrupt.h:255:
+   this file from irq.h apparently causes a loop. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: include/linux/irq.h:98:
+                                          struct irqaction *new)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: include/linux/irq.h:98:
+                                          struct irqaction *new)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#727: FILE: kernel/irq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#728: FILE: kernel/irq.c:2:
+ *	linux/kernel/irq.c -- Generic code for threaded IRQ handling

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#746: FILE: kernel/irq.c:20:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: kernel/irq.c:35:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: kernel/irq.c:37:
+^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#768: FILE: kernel/irq.c:42:
+typedef struct {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: kernel/irq.c:53:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: kernel/irq.c:55:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: kernel/irq.c:58:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#786: FILE: kernel/irq.c:60:
+^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#788: FILE: kernel/irq.c:62:
+	smp_wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: kernel/irq.c:64:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: kernel/irq.c:67:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: kernel/irq.c:71:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: kernel/irq.c:76:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: kernel/irq.c:80:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: kernel/irq.c:84:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: kernel/irq.c:86:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: kernel/irq.c:88:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: kernel/irq.c:97:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: kernel/irq.c:106:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: kernel/irq.c:109:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: kernel/irq.c:113:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: kernel/irq.c:115:
+^I^I$

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#842: FILE: kernel/irq.c:116:
+		if (waitqueue_active(&desc->sync))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: kernel/irq.c:126:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#856: FILE: kernel/irq.c:130:
+	if (kernel_thread(run_irq_thread, &info, CLONE_KERNEL) < 0) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#857: FILE: kernel/irq.c:131:
+		printk(KERN_EMERG "Could not spawn thread for IRQ %d\n", irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: kernel/irq.c:144:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#875: FILE: kernel/irq.c:149:
+		/* Only the first threaded handler should spawn
+		   a thread. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#875: FILE: kernel/irq.c:149:
+		   a thread. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#884: FILE: kernel/irq.c:158:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#889: FILE: kernel/irq.c:163:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#891: FILE: kernel/irq.c:165:
+/* This takes care of interrupts that were requested before the
+   scheduler was ready for threads to be created. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#891: FILE: kernel/irq.c:165:
+   scheduler was ready for threads to be created. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: kernel/irq.c:170:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: kernel/irq.c:173:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: kernel/irq.c:177:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265248.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 24 warnings, 5 checks, 739 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265248.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
