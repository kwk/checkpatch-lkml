WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
--- 2.6.5.bitmap.orig/include/linux/bitmap.h	2004-04-07 21:22:32.000000000 -0700

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/linux/bitmap.h:1:
+#ifndef __LINUX__bitmap_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: include/linux/bitmap.h:19:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: include/linux/bitmap.h:36:
+ * bitmap_intersects(src1, src2, nbits) ^IDo *src1 and *src2 overlap?$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/bitmap.h:73:
+extern int __bitmap_empty(const unsigned long *bitmap, int bits);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: include/linux/bitmap.h:74:
+extern int __bitmap_full(const unsigned long *bitmap, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: include/linux/bitmap.h:75:
+extern int __bitmap_equal(const unsigned long *bitmap1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: include/linux/bitmap.h:76:
+                ^Iconst unsigned long *bitmap2, int bits);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: include/linux/bitmap.h:76:
+                ^Iconst unsigned long *bitmap2, int bits);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: include/linux/bitmap.h:76:
+extern int __bitmap_equal(const unsigned long *bitmap1,
+                	const unsigned long *bitmap2, int bits);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: include/linux/bitmap.h:76:
+                ^Iconst unsigned long *bitmap2, int bits);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/bitmap.h:77:
+extern void __bitmap_complement(unsigned long *dst, const unsigned long *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: include/linux/bitmap.h:78:
+extern void __bitmap_complement(unsigned long *dst, const unsigned long *src,
+			int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/bitmap.h:79:
+extern void __bitmap_shift_right(unsigned long *dst,

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: include/linux/bitmap.h:80:
+                        const unsigned long *src, int shift, int bits);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: include/linux/bitmap.h:80:
+extern void __bitmap_shift_right(unsigned long *dst,
+                        const unsigned long *src, int shift, int bits);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: include/linux/bitmap.h:80:
+                        const unsigned long *src, int shift, int bits);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/bitmap.h:81:
+extern void __bitmap_shift_left(unsigned long *dst,

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: include/linux/bitmap.h:82:
+                        const unsigned long *src, int shift, int bits);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: include/linux/bitmap.h:82:
+extern void __bitmap_shift_left(unsigned long *dst,
+                        const unsigned long *src, int shift, int bits);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: include/linux/bitmap.h:82:
+                        const unsigned long *src, int shift, int bits);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/bitmap.h:83:
+extern void __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: include/linux/bitmap.h:84:
+extern void __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,
+			const unsigned long *bitmap2, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/bitmap.h:85:
+extern void __bitmap_or(unsigned long *dst, const unsigned long *bitmap1,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/bitmap.h:87:
+extern void __bitmap_xor(unsigned long *dst, const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/bitmap.h:88:
+extern void __bitmap_xor(unsigned long *dst, const unsigned long *bitmap1,
+			const unsigned long *bitmap2, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/bitmap.h:89:
+extern void __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: include/linux/bitmap.h:90:
+extern void __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,
+			const unsigned long *bitmap2, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/bitmap.h:91:
+extern int __bitmap_intersects(const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/linux/bitmap.h:92:
+extern int __bitmap_intersects(const unsigned long *bitmap1,
+			const unsigned long *bitmap2, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: include/linux/bitmap.h:93:
+extern int __bitmap_subset(const unsigned long *bitmap1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: include/linux/bitmap.h:94:
+extern int __bitmap_subset(const unsigned long *bitmap1,
+			const unsigned long *bitmap2, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/bitmap.h:95:
+extern int __bitmap_weight(const unsigned long *bitmap, int bits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/linux/bitmap.h:97:
+extern int bitmap_scnprintf(char *buf, unsigned int len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: include/linux/bitmap.h:98:
+extern int bitmap_scnprintf(char *buf, unsigned int len,
+			const unsigned long *src, int nbits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/linux/bitmap.h:99:
+extern int bitmap_parse(const char __user *ubuf, unsigned int ulen,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nbits' - possible side-effects?
#164: FILE: include/linux/bitmap.h:102:
+#define BITMAP_LAST_WORD_MASK(nbits)					\
+(									\
+	((nbits) % BITS_PER_LONG) ?					\
+		(1UL<<((nbits) % BITS_PER_LONG))-1 : ~0UL		\
+)				

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: include/linux/bitmap.h:105:
+		(1UL<<((nbits) % BITS_PER_LONG))-1 : ~0UL		\
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: include/linux/bitmap.h:105:
+		(1UL<<((nbits) % BITS_PER_LONG))-1 : ~0UL		\
 		                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: include/linux/bitmap.h:106:
+)^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: include/linux/bitmap.h:119:
+	size_t nlongs = BITS_TO_LONGS(nbits);
+	if (nlongs > 1) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: include/linux/bitmap.h:121:
+		int len = (nlongs - 1) * sizeof(unsigned long);
+		memset(dst, 0xff,  len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: include/linux/bitmap.h:127:
+static inline void bitmap_copy(unsigned long *dst, const unsigned long *src,
+			int nbits)

CHECK:BRACES: braces {} should be used on all arms of this statement
#198: FILE: include/linux/bitmap.h:129:
+	if (nbits <= BITS_PER_LONG)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: include/linux/bitmap.h:131:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: include/linux/bitmap.h:133:
+		int len = BITS_TO_LONGS(nbits) * sizeof(unsigned long);
+		memcpy(dst, src, len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: include/linux/bitmap.h:138:
+static inline void bitmap_and(unsigned long *dst, const unsigned long *src1,
+			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: include/linux/bitmap.h:147:
+static inline void bitmap_or(unsigned long *dst, const unsigned long *src1,
+			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: include/linux/bitmap.h:156:
+static inline void bitmap_xor(unsigned long *dst, const unsigned long *src1,
+			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: include/linux/bitmap.h:165:
+static inline void bitmap_andnot(unsigned long *dst, const unsigned long *src1,
+			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: include/linux/bitmap.h:174:
+static inline void bitmap_complement(unsigned long *dst, const unsigned long *src,
+			int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: include/linux/bitmap.h:183:
+static inline int bitmap_equal(const unsigned long *src1,
+			const unsigned long *src2, int nbits)

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#276: FILE: include/linux/bitmap.h:186:
+		return ! ((*src1 ^ *src2) & BITMAP_LAST_WORD_MASK(nbits));
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: include/linux/bitmap.h:192:
+static inline int bitmap_intersects(const unsigned long *src1,
+			const unsigned long *src2, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: include/linux/bitmap.h:201:
+static inline int bitmap_subset(const unsigned long *src1,
+			const unsigned long *src2, int nbits)

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#294: FILE: include/linux/bitmap.h:204:
+		return ! ((*src1 & ~(*src2)) & BITMAP_LAST_WORD_MASK(nbits));
 		       ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#302: FILE: include/linux/bitmap.h:212:
+		return ! (*src & BITMAP_LAST_WORD_MASK(nbits));
 		       ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#310: FILE: include/linux/bitmap.h:220:
+		return ! (~(*src) & BITMAP_LAST_WORD_MASK(nbits));
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: include/linux/bitmap.h:231:
+static inline void bitmap_shift_right(unsigned long *dst,
+			const unsigned long *src, int n, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: include/linux/bitmap.h:240:
+static inline void bitmap_shift_left(unsigned long *dst,
+			const unsigned long *src, int n, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: lib/bitmap.c:72:
+int __bitmap_equal(const unsigned long *bitmap1,
 		const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: lib/bitmap.c:99:
+void __bitmap_shift_right(unsigned long *dst,
 			const unsigned long *src, int shift, int bits)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#452: FILE: lib/bitmap.c:102:
+	int off = shift/BITS_PER_LONG, rem = shift % BITS_PER_LONG;
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#454: FILE: lib/bitmap.c:104:
+	unsigned long mask = (1UL << left) - 1;
+	for (k = 0; off + k < lim; ++k) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#461: FILE: lib/bitmap.c:111:
+		if (!rem || off + k + 1 >= lim)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#463: FILE: lib/bitmap.c:113:
+		else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#476: FILE: lib/bitmap.c:126:
+		memset(&dst[lim - off], 0, off*sizeof(unsigned long));
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: lib/bitmap.c:131:
+void __bitmap_shift_left(unsigned long *dst,
 			const unsigned long *src, int shift, int bits)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#495: FILE: lib/bitmap.c:134:
+	int off = shift/BITS_PER_LONG, rem = shift % BITS_PER_LONG;
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: lib/bitmap.c:135:
+	int off = shift/BITS_PER_LONG, rem = shift % BITS_PER_LONG;
+	for (k = lim - off - 1; k >= 0; --k) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: lib/bitmap.c:154:
+		memset(dst, 0, off*sizeof(unsigned long));
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: lib/bitmap.c:159:
+void __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: lib/bitmap.c:170:
+void __bitmap_or(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: lib/bitmap.c:181:
+void __bitmap_xor(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: lib/bitmap.c:192:
+void __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: lib/bitmap.c:203:
+int __bitmap_intersects(const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: lib/bitmap.c:218:
+int __bitmap_subset(const unsigned long *bitmap1,
 				const unsigned long *bitmap2, int bits)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 12 warnings, 56 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
