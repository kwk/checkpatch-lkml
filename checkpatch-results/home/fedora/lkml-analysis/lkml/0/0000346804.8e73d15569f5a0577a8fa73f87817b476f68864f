WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#63: FILE: crypto/internal.h:40:
+	if (!in_atomic())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: drivers/char/random.c:892:
+			sg[0].page = virt_to_page(r->pool+i);
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: drivers/char/random.c:893:
+			sg[0].offset = ((long)(r->pool+i) & ~PAGE_MASK);
 			                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#315: FILE: drivers/char/random.c:895:
+			tfm=get_cpu_var(sha_tfm);
 			   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#318: FILE: drivers/char/random.c:898:
+			add_entropy_words(r, &hash[x%20], 1);
 			                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: drivers/char/random.c:975:
+static int random_cpu_notify(struct notifier_block *self, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/char/random.c:976:
+static int random_cpu_notify(struct notifier_block *self, 
+				unsigned long action, void *hcpu)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#354: FILE: drivers/char/random.c:978:
+	if (action == CPU_UP_PREPARE)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#358: FILE: drivers/char/random.c:982:
+		printk(KERN_NOTICE "random cpu %ld sha_tfm = %p\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/char/random.c:989:
+static struct notifier_block random_nb = { $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#382: FILE: drivers/char/random.c:1005:
+	if((i=batch_entropy_init(BATCH_ENTROPY_SIZE)) != 0)
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#382: FILE: drivers/char/random.c:1005:
+	if((i=batch_entropy_init(BATCH_ENTROPY_SIZE)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#382: FILE: drivers/char/random.c:1005:
+	if((i=batch_entropy_init(BATCH_ENTROPY_SIZE)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/char/random.c:1009:
+	random_cpu_notify(&random_nb, (unsigned long)CPU_UP_PREPARE,
+				(void *)(long)smp_processor_id());

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#399: FILE: drivers/char/random.c:1023:
+__initcall(init_random);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#418: FILE: drivers/char/random.c:1064:
+		n = min_t(size_t, nbytes, BLOCKING_POOL_SIZE/8);
 		                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#427: FILE: drivers/char/random.c:1742:
+static __u32	syncookie_secret[2][16-3];
             	                      ^

CHECK:SPACING: No space is necessary after a cast
#448: FILE: drivers/char/random.c:1773:
+	sg[0].offset = ((long) tmp & ~PAGE_MASK);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#457: FILE: drivers/char/random.c:1780:
+	memcpy(tmp+3, syncookie_secret[0], sizeof(syncookie_secret[0]));
 	          ^

CHECK:SPACING: No space is necessary after a cast
#496: FILE: drivers/char/random.c:1817:
+	sg[0].offset = ((long) tmp & ~PAGE_MASK);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#506: FILE: drivers/char/random.c:1825:
+	memcpy(tmp+3, syncookie_secret[0], sizeof(syncookie_secret[0]));
 	          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346804.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 3 warnings, 11 checks, 449 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346804.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
