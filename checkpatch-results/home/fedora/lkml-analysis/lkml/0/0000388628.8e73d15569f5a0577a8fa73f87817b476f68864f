WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -ur orig/drivers/hotplug/acpiphp_glue.c linux/drivers/hotplug/acpiphp_glue.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/hotplug/cpqphp_pci.c:271:
+		func->pci_dev = pci_scan_slot(ctrl->pci_dev->bus,
+				 (func->device << 3) + (func->function & 0x7));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: drivers/hotplug/ibmphp_core.c:1055:
+		struct pci_bus *bus = ibmphp_find_bus (func->busno);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: drivers/hotplug/ibmphp_core.c:1056:
+		struct pci_bus *bus = ibmphp_find_bus (func->busno);
+		if (!bus)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/hotplug/ibmphp_core.c:1060:
+		func->dev = pci_scan_slot(bus,
+				 (func->device << 3) + (func->function & 0x7));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/pci/probe.c:378:
+	DBG("Found %02x:%02x [%04x/%04x] %06x %02x\n", dev->bus->number, dev->devfn,
+		dev->vendor, dev->device, class, dev->hdr_type);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#166: FILE: drivers/pci/probe.c:431:
+static struct pci_dev * __devinit

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct pci_dev)...)
#185: FILE: drivers/pci/probe.c:448:
+	dev = kmalloc(sizeof(struct pci_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#210: FILE: drivers/pci/probe.c:480:
+struct pci_dev * __devinit pci_scan_slot(struct pci_bus *bus, int devfn)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#236: FILE: drivers/pci/probe.c:492:
+		if (func == 0) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#323: FILE: include/linux/pci.h:552:
 }
+struct pci_dev *pci_scan_slot(struct pci_bus *bus, int devfn);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 5 checks, 272 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388628.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
