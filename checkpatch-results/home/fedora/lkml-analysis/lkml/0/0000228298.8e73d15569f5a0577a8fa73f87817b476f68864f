WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: arch/ppc/platforms/4xx/ibm405ep.c:139:
+^I{ .polarity ^I= 0xffff7f80,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: arch/ppc/platforms/4xx/ibm405gp.c:116:
+^I{ .polarity ^I= 0xffffff80,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: arch/ppc/platforms/4xx/ibm405gpr.c:113:
+^I{ .polarity ^I= 0xffffe000,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: arch/ppc/platforms/4xx/ibm440gp.c:156:
+^I{ .polarity ^I= 0xfffffe03,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: arch/ppc/platforms/4xx/ibm440gp.c:160:
+^I{ .polarity ^I= 0xffffc0ff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: arch/ppc/platforms/4xx/ibm440gx.c:222:
+^I{ .polarity ^I= 0xfffffe03,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: arch/ppc/platforms/4xx/ibm440gx.c:226:
+^I{ .polarity ^I= 0xffffc0ff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: arch/ppc/platforms/4xx/ibm440gx.c:230:
+^I{ .polarity ^I= 0xffff83ff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: arch/ppc/platforms/4xx/ibmstbx25.c:64:
+^I{ .polarity ^I= 0xffff8f80,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: arch/ppc/platforms/4xx/oak.c:104:
+^Ippc_md.init_IRQ^I^I ^I= ppc4xx_pic_init;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: arch/ppc/platforms/4xx/oak.c:105:
+^Ippc_md.get_irq^I^I ^I= NULL;  /* Set in ppc4xx_pic_init() */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#561: FILE: arch/ppc/syslib/ppc403_pic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#585: FILE: arch/ppc/syslib/ppc403_pic.c:25:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#630: FILE: arch/ppc/syslib/ppc403_pic.c:70:
+	return (irq);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:TYPO_SPELLING: 'explicity' may be misspelled - perhaps 'explicitly'?
#677: FILE: arch/ppc/syslib/ppc403_pic.c:117:
+	 * explicity requested.
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: arch/ppc/syslib/ppc403_pic.c:124:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#693: FILE: arch/ppc/syslib/ppc4xx_pic.c:2:
+ * arch/ppc/syslib/ppc4xx_pic.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#731: FILE: arch/ppc/syslib/ppc4xx_pic.c:17:
+ * option) any later version.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: arch/ppc/syslib/ppc4xx_pic.c:29:
+/* See comment in include/arch-ppc/ppc4xx_pic.h $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#778: FILE: arch/ppc/syslib/ppc4xx_pic.c:32:
+extern struct ppc4xx_uic_settings ppc4xx_core_uic_cfg[NR_UICS] __attribute__((weak));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#779: FILE: arch/ppc/syslib/ppc4xx_pic.c:33:
+extern unsigned char ppc4xx_uic_ext_irq_cfg[] __attribute__((weak));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#779: FILE: arch/ppc/syslib/ppc4xx_pic.c:33:
+extern unsigned char ppc4xx_uic_ext_irq_cfg[] __attribute__((weak));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#811: FILE: arch/ppc/syslib/ppc4xx_pic.c:40:
+#define UIC_HANDLERS(n)							\
+static void ppc4xx_uic##n##_enable(unsigned int irq)			\
+{									\
+	ppc_cached_irq_mask[n] |= IRQ_MASK_UIC##n(irq);			\
+	mtdcr(DCRN_UIC_ER(UIC##n), ppc_cached_irq_mask[n]);		\
+}									\
+									\
+static void ppc4xx_uic##n##_disable(unsigned int irq)			\
+{									\
+	ppc_cached_irq_mask[n] &= ~IRQ_MASK_UIC##n(irq);		\
+	mtdcr(DCRN_UIC_ER(UIC##n), ppc_cached_irq_mask[n]);		\
+}									\
+									\
+static void ppc4xx_uic##n##_ack(unsigned int irq)			\
+{									\
+	u32 mask = IRQ_MASK_UIC##n(irq);				\
+	ppc_cached_irq_mask[n] &= ~mask;				\
+	mtdcr(DCRN_UIC_ER(UIC##n), ppc_cached_irq_mask[n]);		\
+	mtdcr(DCRN_UIC_SR(UIC##n), mask);				\
+	ACK_UIC##n##_PARENT						\
+}									\
+									\
+static void ppc4xx_uic##n##_end(unsigned int irq)			\
+{									\
+	unsigned int status = irq_desc[irq].status;			\
+	u32 mask = IRQ_MASK_UIC##n(irq);				\
+	if (status & IRQ_LEVEL){					\
+		mtdcr(DCRN_UIC_SR(UIC##n), mask);			\
+		ACK_UIC##n##_PARENT					\
+	}								\
+	if (!(status & (IRQ_DISABLED | IRQ_INPROGRESS))){		\
+		ppc_cached_irq_mask[n] |= mask;				\
+		mtdcr(DCRN_UIC_ER(UIC##n), ppc_cached_irq_mask[n]);	\
+	}								\
+}

ERROR:SPACING: space required before the open brace '{'
#837: FILE: arch/ppc/syslib/ppc4xx_pic.c:66:
+	if (status & IRQ_LEVEL){					\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#841: FILE: arch/ppc/syslib/ppc4xx_pic.c:70:
+	if (!(status & (IRQ_DISABLED | IRQ_INPROGRESS))){		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#849: FILE: arch/ppc/syslib/ppc4xx_pic.c:78:
+^I.typename ^I= "UIC"#n,^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#850: FILE: arch/ppc/syslib/ppc4xx_pic.c:79:
+^I.enable ^I= ppc4xx_uic##n##_enable,^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#851: FILE: arch/ppc/syslib/ppc4xx_pic.c:80:
+^I.disable ^I= ppc4xx_uic##n##_disable,^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#852: FILE: arch/ppc/syslib/ppc4xx_pic.c:81:
+^I.ack ^I^I= ppc4xx_uic##n##_ack,^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#853: FILE: arch/ppc/syslib/ppc4xx_pic.c:82:
+^I.end ^I^I= ppc4xx_uic##n##_end,^I^I^I^I\$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#857: FILE: arch/ppc/syslib/ppc4xx_pic.c:86:
+#define ACK_UIC0_PARENT	mtdcr(DCRN_UIC_SR(UICB), UICB_UIC0NC);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#858: FILE: arch/ppc/syslib/ppc4xx_pic.c:87:
+#define ACK_UIC1_PARENT	mtdcr(DCRN_UIC_SR(UICB), UICB_UIC1NC);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#859: FILE: arch/ppc/syslib/ppc4xx_pic.c:88:
+#define ACK_UIC2_PARENT	mtdcr(DCRN_UIC_SR(UICB), UICB_UIC2NC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#865: FILE: arch/ppc/syslib/ppc4xx_pic.c:94:
+	u32 uicb = mfdcr(DCRN_UIC_MSR(UICB));
+	if (uicb & UICB_UIC0NC)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#907: FILE: arch/ppc/syslib/ppc4xx_pic.c:116:
+#define ACK_UIC1_PARENT	mtdcr(DCRN_UIC_SR(UIC0), UIC0_UIC1NC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#923: FILE: arch/ppc/syslib/ppc4xx_pic.c:122:
+	u32 uic0 = mfdcr(DCRN_UIC_MSR(UIC0));
+	if (uic0 & UIC0_UIC1NC)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: arch/ppc/syslib/ppc4xx_pic.c:124:
+^Ielse $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1052: FILE: arch/ppc/syslib/ppc4xx_pic.c:143:
+	u32 uic0 = mfdcr(DCRN_UIC_MSR(UIC0));
+	return uic0 ? 32 - ffs(uic0) : -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: arch/ppc/syslib/ppc4xx_pic.c:153:
+    { .decl = DECLARE_UIC(0), .base = UIC0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: arch/ppc/syslib/ppc4xx_pic.c:155:
+    { .decl = DECLARE_UIC(1), .base = UIC1 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: arch/ppc/syslib/ppc4xx_pic.c:157:
+    { .decl = DECLARE_UIC(2), .base = UIC2 },$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1206: FILE: arch/ppc/syslib/ppc4xx_pic.c:165:
+	u32 tr = mfdcr(DCRN_UIC_TR(__uic[irq >> 5].base));
+	return (tr & IRQ_MASK_UICx(irq)) == 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1287: FILE: arch/ppc/syslib/ppc4xx_pic.c:171:
+	unsigned char* eirqs = ppc4xx_uic_ext_irq_cfg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1288: FILE: arch/ppc/syslib/ppc4xx_pic.c:172:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1289: FILE: arch/ppc/syslib/ppc4xx_pic.c:173:
+	for (i = 0; i < NR_UICS; ++i){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: arch/ppc/syslib/ppc4xx_pic.c:179:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: arch/ppc/syslib/ppc4xx_pic.c:182:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1300: FILE: arch/ppc/syslib/ppc4xx_pic.c:184:
+		if (ppc4xx_core_uic_cfg){

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1301: FILE: arch/ppc/syslib/ppc4xx_pic.c:185:
+			struct ppc4xx_uic_settings* p = ppc4xx_core_uic_cfg + i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1305: FILE: arch/ppc/syslib/ppc4xx_pic.c:189:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1309: FILE: arch/ppc/syslib/ppc4xx_pic.c:193:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: arch/ppc/syslib/ppc4xx_pic.c:194:
+^I^I^I/* Merge external IRQs settings if board port $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: arch/ppc/syslib/ppc4xx_pic.c:195:
+^I^I^I * provided them $

ERROR:SPACING: space required before the open brace '{'
#1313: FILE: arch/ppc/syslib/ppc4xx_pic.c:197:
+			if (eirqs && mask){

ERROR:SPACING: space required before the open brace '{'
#1316: FILE: arch/ppc/syslib/ppc4xx_pic.c:200:
+				while (mask){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: arch/ppc/syslib/ppc4xx_pic.c:203:
+^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1325: FILE: arch/ppc/syslib/ppc4xx_pic.c:209:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: arch/ppc/syslib/ppc4xx_pic.c:211:
+^I^I^I^I^I++eirqs;    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: arch/ppc/syslib/ppc4xx_pic.c:217:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1375: FILE: arch/ppc/syslib/ppc4xx_pic.c:218:
+^I^I/* ACK any pending interrupts to prevent false $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: arch/ppc/syslib/ppc4xx_pic.c:219:
+^I^I * triggering after first enable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1380: FILE: arch/ppc/syslib/ppc4xx_pic.c:223:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1381: FILE: arch/ppc/syslib/ppc4xx_pic.c:224:
+^I/* Perform optional implementation specific setup $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1382: FILE: arch/ppc/syslib/ppc4xx_pic.c:225:
+^I * (e.g. enable cascade interrupts for multi-UIC configurations) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: arch/ppc/syslib/ppc4xx_pic.c:228:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1387: FILE: arch/ppc/syslib/ppc4xx_pic.c:230:
+	for (i = 0; i < (NR_UICS << 5); ++i){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: arch/ppc/syslib/ppc4xx_pic.c:231:
+    ^I^Iirq_desc[i].handler = &__uic[i >> 5].decl;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1388: FILE: arch/ppc/syslib/ppc4xx_pic.c:231:
+    ^I^Iirq_desc[i].handler = &__uic[i >> 5].decl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: arch/ppc/syslib/ppc4xx_pic.c:231:
+    ^I^Iirq_desc[i].handler = &__uic[i >> 5].decl;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: arch/ppc/syslib/ppc4xx_pic.c:234:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: arch/ppc/syslib/xilinx_pic.c:140:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1464: FILE: include/asm-ppc/ibm44x.h:165:
+#define UIC0_UIC1NC      ^I0x00000002$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1481: FILE: include/asm-ppc/ppc4xx_pic.h:2:
+ * include/asm-ppc/ppc4xx_pic.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1514: FILE: include/asm-ppc/ppc4xx_pic.h:24:
+/* "Fixed" UIC settings (they are chip, not board specific), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1519: FILE: include/asm-ppc/ppc4xx_pic.h:29:
+ * be written (masked with "ext_irq_mask") into UICx_PR register, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: include/asm-ppc/ppc4xx_pic.h:37:
+ * If these arrays aren't provided, UIC initialization code keeps firmware $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1531: FILE: include/asm-ppc/ppc4xx_pic.h:41:
+ * Both ppc4xx_core_uic_cfg and ppc4xx_uic_ext_irq_cfg are declared as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: include/asm-ppc/ppc4xx_pic.h:43:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1536: FILE: include/asm-ppc/ppc4xx_pic.h:46:
+^Iu32 ^Ipolarity;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1537: FILE: include/asm-ppc/ppc4xx_pic.h:47:
+^Iu32 ^Itriggering;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 40 warnings, 2 checks, 1418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
