WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -urN linux-2.4.0-prerelease/include/asm-alpha/pgalloc.h linux-2.4.0-prerelease-tlb/include/asm-alpha/pgalloc.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: include/asm-generic/pgalloc.h:1:
+#ifndef _ASM_GENERIC_PGALLOC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#82: FILE: include/asm-generic/pgalloc.h:4:
+static inline int ptep_test_and_clear_and_flush_young(struct vm_area_struct *vma, unsigned long address, pte_t *ptep)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#90: FILE: include/asm-generic/pgalloc.h:12:
+static inline int ptep_test_and_clear_and_flush_dirty(struct vm_area_struct *vma, unsigned long address, pte_t *ptep)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#98: FILE: include/asm-generic/pgalloc.h:20:
+static inline void ptep_establish(struct vm_area_struct *vma, unsigned long address, pte_t *ptep, pte_t entry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: include/asm-generic/pgalloc.h:30:
+	pte_t pte = ptep_get_and_clear(ptep);
+	flush_tlb_page(vma, address);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: include/asm-s390/pgalloc.h:345:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: include/asm-s390/pgalloc.h:346:
+static inline int ptep_test_and_clear_and_flush_young(struct vm_area_struct *vma, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: include/asm-s390/pgalloc.h:347:
+                                                      unsigned long address, pte_t *ptep)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: include/asm-s390/pgalloc.h:347:
+                                                      unsigned long address, pte_t *ptep)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: include/asm-s390/pgalloc.h:353:
+static inline int ptep_test_and_clear_and_flush_dirty(struct vm_area_struct *vma, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: include/asm-s390/pgalloc.h:354:
+                                                      unsigned long address, pte_t *ptep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: include/asm-s390/pgalloc.h:354:
+                                                      unsigned long address, pte_t *ptep)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: include/asm-s390/pgalloc.h:360:
+static inline pte_t ptep_invalidate(struct vm_area_struct *vma, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: include/asm-s390/pgalloc.h:361:
+                                    unsigned long address, pte_t *ptep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: include/asm-s390/pgalloc.h:361:
+                                    unsigned long address, pte_t *ptep)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: include/asm-s390/pgalloc.h:364:
+	pte_t pte = *ptep;
+	if (!(pte_val(pte) & _PAGE_INVALID)) {

CHECK:SPACING: No space is necessary after a cast
#212: FILE: include/asm-s390/pgalloc.h:366:
+		pte_t *pto = (pte_t *) (((unsigned long) ptep) & 0x7ffffc00);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: include/asm-s390/pgalloc.h:367:
+		pte_t *pto = (pte_t *) (((unsigned long) ptep) & 0x7ffffc00);
+		__asm__ __volatile__ ("ipte %0,%1" : : "a" (pto), "a" (address));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: include/asm-s390/pgalloc.h:373:
+static inline void ptep_establish(struct vm_area_struct *vma, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/asm-s390/pgalloc.h:374:
+                                  unsigned long address, pte_t *ptep, pte_t entry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/asm-s390/pgalloc.h:374:
+                                  unsigned long address, pte_t *ptep, pte_t entry)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: mm/filemap.c:1590:
+^Iif (   pte_present(pte) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#265: FILE: mm/filemap.c:1590:
+	if (   pte_present(pte) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: mm/filemap.c:1591:
+            && ptep_test_and_clear_and_flush_dirty(vma, address, ptep)) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: mm/filemap.c:1591:
+	if (   pte_present(pte) 
+            && ptep_test_and_clear_and_flush_dirty(vma, address, ptep)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: mm/filemap.c:1591:
+            && ptep_test_and_clear_and_flush_dirty(vma, address, ptep)) {$

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#299: FILE: mm/memory.c:786:
+	ptep_establish(vma, address, page_table, pte_mkwrite(pte_mkdirty(mk_pte(new_page, vma->vm_page_prot))));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#308: FILE: mm/memory.c:844:
+		ptep_establish(vma, address, page_table, pte_mkyoung(pte_mkdirty(pte_mkwrite(pte))));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000558620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 15 warnings, 3 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000558620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
