WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
D: Description: Changes ipv4 stats to use kmalloc_percpu from the traditional

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#80: FILE: include/net/icmp.h:39:
+#define ICMP_INC_STATS_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[!in_softirq()],\
+					 smp_processor_id())) + offt))++;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offt' may be better as '(offt)' to avoid precedence issues
#80: FILE: include/net/icmp.h:39:
+#define ICMP_INC_STATS_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[!in_softirq()],\
+					 smp_processor_id())) + offt))++;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#80: FILE: include/net/icmp.h:39:
+#define ICMP_INC_STATS_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[!in_softirq()],\
+					 smp_processor_id())) + offt))++;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: No space is necessary after a cast
#81: FILE: include/net/icmp.h:40:
+	(*((unsigned long *) ((void *)					\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#84: FILE: include/net/icmp.h:43:
+#define ICMP_INC_STATS_BH_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[0],		\
+					 smp_processor_id())) + offt))++;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offt' may be better as '(offt)' to avoid precedence issues
#84: FILE: include/net/icmp.h:43:
+#define ICMP_INC_STATS_BH_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[0],		\
+					 smp_processor_id())) + offt))++;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#84: FILE: include/net/icmp.h:43:
+#define ICMP_INC_STATS_BH_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[0],		\
+					 smp_processor_id())) + offt))++;

CHECK:SPACING: No space is necessary after a cast
#85: FILE: include/net/icmp.h:44:
+	(*((unsigned long *) ((void *)					\

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#88: FILE: include/net/icmp.h:47:
+#define ICMP_INC_STATS_USER_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[1],		\
+					 smp_processor_id())) + offt))++;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offt' may be better as '(offt)' to avoid precedence issues
#88: FILE: include/net/icmp.h:47:
+#define ICMP_INC_STATS_USER_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[1],		\
+					 smp_processor_id())) + offt))++;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#88: FILE: include/net/icmp.h:47:
+#define ICMP_INC_STATS_USER_FIELD(offt)					\
+	(*((unsigned long *) ((void *)					\
+			     per_cpu_ptr(icmp_statistics[1],		\
+					 smp_processor_id())) + offt))++;

CHECK:SPACING: No space is necessary after a cast
#89: FILE: include/net/icmp.h:48:
+	(*((unsigned long *) ((void *)					\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: include/net/snmp.h:190:
+}; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#199: FILE: include/net/snmp.h:297:
+#define DEFINE_SNMP_STAT(type, name)	\
+	__typeof__(type) *name[2]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#199: FILE: include/net/snmp.h:297:
+#define DEFINE_SNMP_STAT(type, name)	\
+	__typeof__(type) *name[2]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: include/net/snmp.h:299:
+#define DECLARE_SNMP_STAT(type, name)	\
+	extern __typeof__(type) *name[2]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#201: FILE: include/net/snmp.h:299:
+#define DECLARE_SNMP_STAT(type, name)	\
+	extern __typeof__(type) *name[2]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: include/net/snmp.h:305:
+#define SNMP_INC_STATS_BH(mib, field) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#207: FILE: include/net/snmp.h:305:
+#define SNMP_INC_STATS_BH(mib, field) 	\
+	(per_cpu_ptr(mib[0], smp_processor_id())->field++)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#209: FILE: include/net/snmp.h:307:
+#define SNMP_INC_STATS_USER(mib, field) \
+	(per_cpu_ptr(mib[1], smp_processor_id())->field++)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: include/net/snmp.h:309:
+#define SNMP_INC_STATS(mib, field) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#211: FILE: include/net/snmp.h:309:
+#define SNMP_INC_STATS(mib, field) 	\
+	(per_cpu_ptr(mib[!in_softirq()], smp_processor_id())->field++)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: include/net/snmp.h:311:
+#define SNMP_DEC_STATS(mib, field) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#213: FILE: include/net/snmp.h:311:
+#define SNMP_DEC_STATS(mib, field) 	\
+	(per_cpu_ptr(mib[!in_softirq()], smp_processor_id())->field--)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: include/net/snmp.h:313:
+#define SNMP_ADD_STATS_BH(mib, field, addend) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#215: FILE: include/net/snmp.h:313:
+#define SNMP_ADD_STATS_BH(mib, field, addend) 	\
+	(per_cpu_ptr(mib[0], smp_processor_id())->field += addend)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: include/net/snmp.h:315:
+#define SNMP_ADD_STATS_USER(mib, field, addend) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#217: FILE: include/net/snmp.h:315:
+#define SNMP_ADD_STATS_USER(mib, field, addend) 	\
+	(per_cpu_ptr(mib[1], smp_processor_id())->field += addend)

CHECK:CAMELCASE: Avoid CamelCase: <TcpCurrEstab>
#250: FILE: include/net/tcp.h:1404:
+			TCP_DEC_STATS(TcpCurrEstab);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: net/ipv4/af_inet.c:1063:
+	    kmalloc_percpu(sizeof (struct linux_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: net/ipv4/af_inet.c:1065:
+	    kmalloc_percpu(sizeof (struct linux_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: net/ipv4/af_inet.c:1066:
+	ip_statistics[0] = kmalloc_percpu(sizeof (struct ip_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: net/ipv4/af_inet.c:1067:
+	ip_statistics[1] = kmalloc_percpu(sizeof (struct ip_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: net/ipv4/af_inet.c:1069:
+	    kmalloc_percpu(sizeof (struct icmp_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: net/ipv4/af_inet.c:1071:
+	    kmalloc_percpu(sizeof (struct icmp_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: net/ipv4/af_inet.c:1072:
+	tcp_statistics[0] = kmalloc_percpu(sizeof (struct tcp_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: net/ipv4/af_inet.c:1073:
+	tcp_statistics[1] = kmalloc_percpu(sizeof (struct tcp_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: net/ipv4/af_inet.c:1074:
+	udp_statistics[0] = kmalloc_percpu(sizeof (struct udp_mib), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: net/ipv4/af_inet.c:1075:
+	udp_statistics[1] = kmalloc_percpu(sizeof (struct udp_mib), GFP_KERNEL);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#302: FILE: net/ipv4/af_inet.c:1078:
+	    (net_statistics[0] && net_statistics[1] && ip_statistics[0]
+	     && ip_statistics[1] && tcp_statistics[0] && tcp_statistics[1]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#303: FILE: net/ipv4/af_inet.c:1079:
+	     && ip_statistics[1] && tcp_statistics[0] && tcp_statistics[1]
+	     && udp_statistics[0] && udp_statistics[1]))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#307: FILE: net/ipv4/af_inet.c:1083:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: net/ipv4/af_inet.c:1086:
+			       sizeof (struct linux_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: net/ipv4/af_inet.c:1088:
+			       sizeof (struct linux_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: net/ipv4/af_inet.c:1090:
+			       sizeof (struct ip_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: net/ipv4/af_inet.c:1092:
+			       sizeof (struct ip_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: net/ipv4/af_inet.c:1094:
+			       sizeof (struct icmp_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: net/ipv4/af_inet.c:1096:
+			       sizeof (struct icmp_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: net/ipv4/af_inet.c:1098:
+			       sizeof (struct tcp_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: net/ipv4/af_inet.c:1100:
+			       sizeof (struct tcp_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: net/ipv4/af_inet.c:1102:
+			       sizeof (struct udp_mib));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: net/ipv4/af_inet.c:1104:
+			       sizeof (struct udp_mib));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#343: FILE: net/ipv4/af_inet.c:1207:
+	/*
+	 *	Initialise per-cpu ipv4 mibs

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: net/ipv4/af_inet.c:1208:
+^I */ $

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: net/ipv4/af_inet.c:1210:
+	if(init_ipv4_mibs())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#347: FILE: net/ipv4/af_inet.c:1211:
+		printk(KERN_CRIT "inet_init: Cannot init ipv4 mibs\n"); ;

WARNING:SPACING: space prohibited before semicolon
#347: FILE: net/ipv4/af_inet.c:1211:
+		printk(KERN_CRIT "inet_init: Cannot init ipv4 mibs\n"); ;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#347: FILE: net/ipv4/af_inet.c:1211:
+		printk(KERN_CRIT "inet_init: Cannot init ipv4 mibs\n"); ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: net/ipv4/af_inet.c:1212:
+^I$

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutEchoReps>
#410: FILE: net/ipv4/icmp.c:1021:
+		.output_off = offsetof(struct icmp_mib, IcmpOutEchoReps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInEchoReps>
#411: FILE: net/ipv4/icmp.c:1022:
+		.input_off = offsetof(struct icmp_mib, IcmpInEchoReps),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#418: FILE: net/ipv4/icmp.c:1027:
+		.input_off = offsetof(struct icmp_mib,IcmpInErrors),
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInErrors>
#418: FILE: net/ipv4/icmp.c:1027:
+		.input_off = offsetof(struct icmp_mib,IcmpInErrors),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#426: FILE: net/ipv4/icmp.c:1033:
+		.input_off = offsetof(struct icmp_mib,IcmpInErrors),
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutDestUnreachs>
#434: FILE: net/ipv4/icmp.c:1039:
+		.output_off = offsetof(struct icmp_mib, IcmpOutDestUnreachs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInDestUnreachs>
#435: FILE: net/ipv4/icmp.c:1040:
+		.input_off = offsetof(struct icmp_mib, IcmpInDestUnreachs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutSrcQuenchs>
#443: FILE: net/ipv4/icmp.c:1046:
+		.output_off = offsetof(struct icmp_mib, IcmpOutSrcQuenchs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInSrcQuenchs>
#444: FILE: net/ipv4/icmp.c:1047:
+		.input_off = offsetof(struct icmp_mib, IcmpInSrcQuenchs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutRedirects>
#452: FILE: net/ipv4/icmp.c:1053:
+		.output_off = offsetof(struct icmp_mib, IcmpOutRedirects),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInRedirects>
#453: FILE: net/ipv4/icmp.c:1054:
+		.input_off = offsetof(struct icmp_mib, IcmpInRedirects),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutEchos>
#477: FILE: net/ipv4/icmp.c:1072:
+		.output_off = offsetof(struct icmp_mib, IcmpOutEchos),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInEchos>
#478: FILE: net/ipv4/icmp.c:1073:
+		.input_off = offsetof(struct icmp_mib, IcmpInEchos),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutTimeExcds>
#502: FILE: net/ipv4/icmp.c:1091:
+		.output_off = offsetof(struct icmp_mib, IcmpOutTimeExcds),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: net/ipv4/icmp.c:1092:
+		.input_off = offsetof(struct icmp_mib,IcmpInTimeExcds),
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInTimeExcds>
#503: FILE: net/ipv4/icmp.c:1092:
+		.input_off = offsetof(struct icmp_mib,IcmpInTimeExcds),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutParmProbs>
#511: FILE: net/ipv4/icmp.c:1098:
+		.output_off = offsetof(struct icmp_mib, IcmpOutParmProbs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInParmProbs>
#512: FILE: net/ipv4/icmp.c:1099:
+		.input_off = offsetof(struct icmp_mib, IcmpInParmProbs),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutTimestamps>
#520: FILE: net/ipv4/icmp.c:1105:
+		.output_off = offsetof(struct icmp_mib, IcmpOutTimestamps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInTimestamps>
#521: FILE: net/ipv4/icmp.c:1106:
+		.input_off = offsetof(struct icmp_mib, IcmpInTimestamps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutTimestampReps>
#528: FILE: net/ipv4/icmp.c:1111:
+		.output_off = offsetof(struct icmp_mib, IcmpOutTimestampReps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInTimestampReps>
#529: FILE: net/ipv4/icmp.c:1112:
+		.input_off = offsetof(struct icmp_mib, IcmpInTimestampReps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutAddrMasks>
#552: FILE: net/ipv4/icmp.c:1129:
+		.output_off = offsetof(struct icmp_mib, IcmpOutAddrMasks),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInAddrMasks>
#553: FILE: net/ipv4/icmp.c:1130:
+		.input_off = offsetof(struct icmp_mib, IcmpInAddrMasks),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpOutAddrMaskReps>
#560: FILE: net/ipv4/icmp.c:1135:
+		.output_off = offsetof(struct icmp_mib, IcmpOutAddrMaskReps),

CHECK:CAMELCASE: Avoid CamelCase: <IcmpInAddrMaskReps>
#561: FILE: net/ipv4/icmp.c:1136:
+		.input_off = offsetof(struct icmp_mib, IcmpInAddrMaskReps),

CHECK:SPACING: No space is necessary after a cast
#599: FILE: net/ipv4/proc.c:99:
+		    *((unsigned long *) (((void *) per_cpu_ptr(mib[0], i)) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#600: FILE: net/ipv4/proc.c:100:
+					 sizeof (unsigned long) * nr));

CHECK:SPACING: No space is necessary after a cast
#602: FILE: net/ipv4/proc.c:102:
+		    *((unsigned long *) (((void *) per_cpu_ptr(mib[0], i)) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: net/ipv4/proc.c:103:
+					 sizeof (unsigned long) * nr));

CHECK:SPACING: No space is necessary after a cast
#613: FILE: net/ipv4/proc.c:126:
+			   fold_field((void **) ip_statistics, i));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: net/ipv4/proc.c:139:
+^I^I^I   fold_field((void **) icmp_statistics, i)); $

CHECK:SPACING: No space is necessary after a cast
#623: FILE: net/ipv4/proc.c:139:
+			   fold_field((void **) icmp_statistics, i)); 

CHECK:SPACING: No space is necessary after a cast
#633: FILE: net/ipv4/proc.c:148:
+			   fold_field((void **) tcp_statistics, i));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: net/ipv4/proc.c:155:
+^I^Iseq_printf(seq, " %lu", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: net/ipv4/proc.c:156:
+		seq_printf(seq, " %lu", 
+				fold_field((void **) udp_statistics, i));

CHECK:SPACING: No space is necessary after a cast
#644: FILE: net/ipv4/proc.c:156:
+				fold_field((void **) udp_statistics, i));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: net/ipv4/proc.c:210:
+^I     i < offsetof(struct linux_mib, __pad) / sizeof(unsigned long); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: net/ipv4/proc.c:212:
+^I^Iseq_printf(seq, " %lu", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: net/ipv4/proc.c:213:
+^I^I ^I   fold_field((void **) net_statistics, i)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: net/ipv4/proc.c:213:
+^I^I ^I   fold_field((void **) net_statistics, i)); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#659: FILE: net/ipv4/proc.c:213:
+^I^I ^I   fold_field((void **) net_statistics, i)); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: net/ipv4/proc.c:213:
+		seq_printf(seq, " %lu", 
+		 	   fold_field((void **) net_statistics, i)); 

CHECK:SPACING: No space is necessary after a cast
#659: FILE: net/ipv4/proc.c:213:
+		 	   fold_field((void **) net_statistics, i)); 

CHECK:CAMELCASE: Avoid CamelCase: <TCPPrequeued>
#689: FILE: net/ipv4/tcp.c:1400:
+	NET_ADD_STATS_USER(TCPPrequeued, skb_queue_len(&tp->ucopy.prequeue));

CHECK:CAMELCASE: Avoid CamelCase: <TCPDirectCopyFromBacklog>
#698: FILE: net/ipv4/tcp.c:1680:
+				NET_ADD_STATS_USER(TCPDirectCopyFromBacklog, chunk);

CHECK:CAMELCASE: Avoid CamelCase: <TCPDirectCopyFromPrequeue>
#707: FILE: net/ipv4/tcp.c:1691:
+					NET_ADD_STATS_USER(TCPDirectCopyFromPrequeue, chunk);

CHECK:CAMELCASE: Avoid CamelCase: <OfoPruned>
#729: FILE: net/ipv4/tcp_input.c:3046:
+		NET_ADD_STATS_BH(OfoPruned,

CHECK:CAMELCASE: Avoid CamelCase: <TimeWaited>
#742: FILE: net/ipv4/tcp_minisocks.c:467:
+	NET_ADD_STATS_BH(TimeWaited, killed);

CHECK:CAMELCASE: Avoid CamelCase: <TimeWaitKilled>
#751: FILE: net/ipv4/tcp_minisocks.c:631:
+	NET_ADD_STATS_BH(TimeWaitKilled, killed);

CHECK:CAMELCASE: Avoid CamelCase: <TCPSchedulerFailed>
#763: FILE: net/ipv4/tcp_timer.c:240:
+		NET_ADD_STATS_BH(TCPSchedulerFailed,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: net/ipv4/tcp_timer.c:241:
+		NET_ADD_STATS_BH(TCPSchedulerFailed,
+				  skb_queue_len(&tp->ucopy.prequeue));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 37 warnings, 57 checks, 638 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
