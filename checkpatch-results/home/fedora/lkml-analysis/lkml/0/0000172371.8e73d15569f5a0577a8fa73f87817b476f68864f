CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#61: FILE: arch/x86_64/pci/mmconfig.c:20:
+};
+static struct mmcfg_virt *pci_mmcfg_virt;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg->start_bus_number <= bus'
#79: FILE: arch/x86_64/pci/mmconfig.c:38:
+		if ((cfg->start_bus_number <= bus) &&
+		    (cfg->end_bus_number >= bus))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cfg->end_bus_number >= bus'
#79: FILE: arch/x86_64/pci/mmconfig.c:38:
+		if ((cfg->start_bus_number <= bus) &&
+		    (cfg->end_bus_number >= bus))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#89: FILE: arch/x86_64/pci/mmconfig.c:46:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#126: FILE: arch/x86_64/pci/mmconfig.c:122:
+	pci_mmcfg_virt = kmalloc(sizeof(*pci_mmcfg_virt) * pci_mmcfg_config_num, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_virt"
#127: FILE: arch/x86_64/pci/mmconfig.c:123:
+	if (pci_mmcfg_virt == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/x86_64/pci/mmconfig.c:124:
+		printk("PCI: Can not allocate memory for mmconfig structures\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#128: FILE: arch/x86_64/pci/mmconfig.c:124:
+	if (pci_mmcfg_virt == NULL) {
+		printk("PCI: Can not allocate memory for mmconfig structures\n");

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#134: FILE: arch/x86_64/pci/mmconfig.c:129:
+		pci_mmcfg_virt[i].virt = ioremap_nocache(pci_mmcfg_config[i].base_address, MMCONFIG_APER_SIZE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: arch/x86_64/pci/mmconfig.c:131:
+			printk("PCI: Cannot map mmconfig aperture for segment %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#140: FILE: arch/x86_64/pci/mmconfig.c:135:
+		printk(KERN_INFO "PCI: Using MMCONFIG at %x\n", pci_mmcfg_config[i].base_address);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172371.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 5 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172371.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
