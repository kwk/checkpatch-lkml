WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: kernel/power/io.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#37: FILE: kernel/power/io.c:2:
+ * kernel/power/io.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: kernel/power/io.c:27:
+extern int suspend_act_used;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: kernel/power/io.c:28:
+extern int suspend_lvl_used;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: kernel/power/io.c:29:
+extern int suspend_dbg_used;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#65: FILE: kernel/power/io.c:30:
+extern volatile int suspend_io_time[2][2];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: kernel/power/io.c:30:
+extern volatile int suspend_io_time[2][2];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#67: FILE: kernel/power/io.c:32:
+extern struct pagedir __nosavedata pagedir_resume;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: kernel/power/io.c:33:
+extern struct range * unused_ranges;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#68: FILE: kernel/power/io.c:33:
+extern struct range * unused_ranges;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#69: FILE: kernel/power/io.c:34:
+extern int suspend2_prepare_console(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: kernel/power/io.c:37:
+extern void warmup_collision_cache(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#73: FILE: kernel/power/io.c:38:
+extern int get_pageset1_load_addresses(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: kernel/power/io.c:40:
+extern void get_next_pbe(struct pbe2 * pbe);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#75: FILE: kernel/power/io.c:40:
+extern void get_next_pbe(struct pbe2 * pbe);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: kernel/power/io.c:41:
+extern void get_first_pbe(struct pbe2 * pbe, struct pagedir * pagedir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: kernel/power/io.c:41:
+extern void get_first_pbe(struct pbe2 * pbe, struct pagedir * pagedir);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#76: FILE: kernel/power/io.c:41:
+extern void get_first_pbe(struct pbe2 * pbe, struct pagedir * pagedir);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: kernel/power/io.c:48:
+ * ^I^Isuspend code in fs/buffer.c and anywhere else we might$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: kernel/power/io.c:49:
+ * ^I^Iwant to wait on suspend I/O in future.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: kernel/power/io.c:58:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#98: FILE: kernel/power/io.c:63:
+static __inline__ void fill_suspend_header(struct suspend_header *sh)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: kernel/power/io.c:66:
+^I$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#104: FILE: kernel/power/io.c:69:
+	sh->version_code = LINUX_VERSION_CODE;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#125: FILE: kernel/power/io.c:90:
+		sh->io_time[i/2][i%2] =
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#125: FILE: kernel/power/io.c:90:
+		sh->io_time[i/2][i%2] =
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#126: FILE: kernel/power/io.c:91:
+		       suspend_io_time[i/2][i%2];
 		                        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#126: FILE: kernel/power/io.c:91:
+		       suspend_io_time[i/2][i%2];
 		                             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: kernel/power/io.c:98:
+ * ^I^Iwhichtowrite:^IControls what debugging output is printed.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: kernel/power/io.c:102:
+int write_pageset(struct pagedir * pagedir, int whichtowrite)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: kernel/power/io.c:110:
+	struct suspend_plugin_ops * this_filter, * first_filter = get_next_filter(NULL);

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#145: FILE: kernel/power/io.c:110:
+	struct suspend_plugin_ops * this_filter, * first_filter = get_next_filter(NULL);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: kernel/power/io.c:123:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: kernel/power/io.c:124:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: kernel/power/io.c:144:
+	for (i=0; i<size; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#179: FILE: kernel/power/io.c:144:
+	for (i=0; i<size; i++) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: kernel/power/io.c:147:
+^I^Iif (!(i&0x1FF)) $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#182: FILE: kernel/power/io.c:147:
+		if (!(i&0x1FF)) 
 		       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: kernel/power/io.c:149:
+^I^Iif (((i+base) >= nextupdate) || $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: kernel/power/io.c:149:
+		if (((i+base) >= nextupdate) || 
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: kernel/power/io.c:150:
+		if (((i+base) >= nextupdate) || 
+				(!(i%(1 << (20 - PAGE_SHIFT)))))

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#185: FILE: kernel/power/io.c:150:
+				(!(i%(1 << (20 - PAGE_SHIFT)))))
 				    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: kernel/power/io.c:151:
+^I^I^Inextupdate = update_status(i + base, barmax, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: kernel/power/io.c:152:
+			nextupdate = update_status(i + base, barmax, 
+				" %d/%d MB ", MB(base+i+1), MB(barmax));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: kernel/power/io.c:152:
+				" %d/%d MB ", MB(base+i+1), MB(barmax));
 				                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: kernel/power/io.c:152:
+				" %d/%d MB ", MB(base+i+1), MB(barmax));
 				                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: kernel/power/io.c:154:
+		if ((i == (size - 5)) &&
+			TEST_ACTION_STATE(SUSPEND_PAUSE_NEAR_PAGESET_END))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: kernel/power/io.c:169:
+			printk("Write chunk returned %d.\n", ret);

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: kernel/power/io.c:171:
+			abort_suspend("Failed to write a chunk of the "
+					"image.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#224: FILE: kernel/power/io.c:189:
+	update_status(base+size, barmax, " %d/%d MB ",
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: kernel/power/io.c:190:
+	update_status(base+size, barmax, " %d/%d MB ",
+			MB(base+size), MB(barmax));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#225: FILE: kernel/power/io.c:190:
+			MB(base+size), MB(barmax));
 			       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: kernel/power/io.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: kernel/power/io.c:209:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: kernel/power/io.c:212:
+		suspend_message(SUSPEND_IO, SUSPEND_LOW, 1,
+			"Time to write data: %d pages in %d jiffies => "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/power/io.c:213:
+^I^I^I"MB written per second: %lu.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#248: FILE: kernel/power/io.c:213:
+			"Time to write data: %d pages in %d jiffies => "
+			"MB written per second: %lu.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/power/io.c:215:
+^I^I^I(end_time - start_time), $

CHECK:SPACING: No space is necessary after a cast
#251: FILE: kernel/power/io.c:216:
+			(MB((unsigned long) size) * HZ / (end_time - start_time)));

WARNING:SPLIT_STRING: quoted string split across lines
#261: FILE: kernel/power/io.c:226:
+		abort_suspend("Number of free pages at start and end of write "
+			"pageset don't match! (%d != %d)",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: kernel/power/io.c:238:
+ * ^I^Iwhichtowrite:^IControls what debugging output is printed.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: kernel/power/io.c:239:
+ * ^I^Ioverwrittenpagesonly: Whether to read the whole pageset or$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: kernel/power/io.c:240:
+ * ^I^Ionly part.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: kernel/power/io.c:244:
+int read_pageset(struct pagedir * pagedir, int whichtoread,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: kernel/power/io.c:245:
+int read_pageset(struct pagedir * pagedir, int whichtoread,
+		int overwrittenpagesonly)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: kernel/power/io.c:252:
+	struct suspend_plugin_ops * this_filter, * first_filter = get_next_filter(NULL);

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#287: FILE: kernel/power/io.c:252:
+	struct suspend_plugin_ops * this_filter, * first_filter = get_next_filter(NULL);
 	                                         ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#295: FILE: kernel/power/io.c:260:
+		if (overwrittenpagesonly)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#296: FILE: kernel/power/io.c:261:
+			barmax = finish_at = min(pageset1_size, pageset2_size);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#297: FILE: kernel/power/io.c:262:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: kernel/power/io.c:265:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: kernel/power/io.c:266:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: kernel/power/io.c:267:
+	start_time=jiffies;
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: kernel/power/io.c:273:
+^I^Iif (this_filter->ops.filter.read_init && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: kernel/power/io.c:274:
+		if (this_filter->ops.filter.read_init && 
+				this_filter->ops.filter.read_init(whichtoread)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: kernel/power/io.c:283:
+^I^Iabort_suspend("Failed to initialise the writer."); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: kernel/power/io.c:291:
+	suspend_message(SUSPEND_IO, SUSPEND_LOW, 1,
+		"Attempting to read %d pages.\n", finish_at);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#329: FILE: kernel/power/io.c:294:
+	for (i=0; i< finish_at; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#329: FILE: kernel/power/io.c:294:
+	for (i=0; i< finish_at; i++) {
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: kernel/power/io.c:297:
+^I^Iif (!(i&0x1FF)) $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#332: FILE: kernel/power/io.c:297:
+		if (!(i&0x1FF)) 
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: kernel/power/io.c:299:
+		if (((i+base) >= nextupdate) ||
 		       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: kernel/power/io.c:300:
+		if (((i+base) >= nextupdate) ||
+				(!(i%(1 << (20 - PAGE_SHIFT)))))

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#335: FILE: kernel/power/io.c:300:
+				(!(i%(1 << (20 - PAGE_SHIFT)))))
 				    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#336: FILE: kernel/power/io.c:301:
+			nextupdate = update_status(i+base, barmax,
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: kernel/power/io.c:302:
+			nextupdate = update_status(i+base, barmax,
+				" %d/%d MB ", MB(base+i+1), MB(barmax));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#337: FILE: kernel/power/io.c:302:
+				" %d/%d MB ", MB(base+i+1), MB(barmax));
 				                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#337: FILE: kernel/power/io.c:302:
+				" %d/%d MB ", MB(base+i+1), MB(barmax));
 				                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: kernel/power/io.c:304:
+		if ((i == (finish_at - 5)) &&
+			TEST_ACTION_STATE(SUSPEND_PAUSE_NEAR_PAGESET_END))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: kernel/power/io.c:316:
+			panic("Failed to read chunk %d/%d of the image.",
+					i, finish_at);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#362: FILE: kernel/power/io.c:327:
+	update_status(base+finish_at, barmax, " %d/%d MB ",
 	                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: kernel/power/io.c:328:
+	update_status(base+finish_at, barmax, " %d/%d MB ",
+			MB(base+finish_at), MB(barmax));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#363: FILE: kernel/power/io.c:328:
+			MB(base+finish_at), MB(barmax));
 			       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: kernel/power/io.c:338:
+		if (this_filter->ops.filter.read_cleanup &&
+				this_filter->ops.filter.read_cleanup()) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#385: FILE: kernel/power/io.c:350:
+	end_time=jiffies;
 	        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: kernel/power/io.c:353:
+		suspend_message(SUSPEND_IO, SUSPEND_LOW, 1,
+			"Time to read data: %d pages in %d jiffies => "

WARNING:SPLIT_STRING: quoted string split across lines
#389: FILE: kernel/power/io.c:354:
+			"Time to read data: %d pages in %d jiffies => "
+			"MB read per second: %lu.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: kernel/power/io.c:356:
+^I^I^I(end_time - start_time), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: kernel/power/io.c:357:
+^I^I^I(MB((unsigned long) finish_at) * HZ / $

CHECK:SPACING: No space is necessary after a cast
#392: FILE: kernel/power/io.c:357:
+			(MB((unsigned long) finish_at) * HZ / 

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: kernel/power/io.c:358:
+^I^I^I ^I(end_time - start_time)));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: kernel/power/io.c:358:
+^I^I^I ^I(end_time - start_time)));$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#411: FILE: kernel/power/io.c:376:
+	struct suspend_plugin_ops * this_plugin;

CHECK:SPACING: No space is necessary after a cast
#412: FILE: kernel/power/io.c:377:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: kernel/power/io.c:377:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: kernel/power/io.c:382:
+		printk("Failed to allocate a buffer for saving "

WARNING:SPLIT_STRING: quoted string split across lines
#418: FILE: kernel/power/io.c:383:
+		printk("Failed to allocate a buffer for saving "
+				"plugin configuration info.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: kernel/power/io.c:386:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: kernel/power/io.c:387:
+^I/* $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#430: FILE: kernel/power/io.c:395:
+	list_for_each_entry(this_plugin, &suspend_plugins, plugin_list) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: kernel/power/io.c:405:
+^I^Istrncpy(plugin_header.name, this_plugin->name, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: kernel/power/io.c:406:
+		strncpy(plugin_header.name, this_plugin->name, 
+					sizeof(plugin_header.name));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#442: FILE: kernel/power/io.c:407:
+		active_writer->ops.writer.write_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#443: FILE: kernel/power/io.c:408:
+				(char *) &plugin_header,

CHECK:SPACING: No space is necessary after a cast
#447: FILE: kernel/power/io.c:412:
+		active_writer->ops.writer.write_header_chunk((char *) &len,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#450: FILE: kernel/power/io.c:415:
+			active_writer->ops.writer.write_header_chunk(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#456: FILE: kernel/power/io.c:421:
+	active_writer->ops.writer.write_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#457: FILE: kernel/power/io.c:422:
+			(char *) &plugin_header,

CHECK:SPACING: No space is necessary after a cast
#460: FILE: kernel/power/io.c:425:
+	free_pages((unsigned long) buffer, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#472: FILE: kernel/power/io.c:437:
+	struct suspend_plugin_ops * this_plugin;

CHECK:SPACING: No space is necessary after a cast
#473: FILE: kernel/power/io.c:438:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#473: FILE: kernel/power/io.c:438:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#478: FILE: kernel/power/io.c:443:
+		printk("Failed to allocate a buffer for reloading plugin "

WARNING:SPLIT_STRING: quoted string split across lines
#479: FILE: kernel/power/io.c:444:
+		printk("Failed to allocate a buffer for reloading plugin "
+				"configuration info.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: kernel/power/io.c:447:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: kernel/power/io.c:454:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#491: FILE: kernel/power/io.c:456:
+	result = active_writer->ops.writer.read_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#492: FILE: kernel/power/io.c:457:
+			(char *) &plugin_header, sizeof(plugin_header));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: kernel/power/io.c:459:
+		printk("Failed to read the next plugin header.\n");

CHECK:SPACING: No space is necessary after a cast
#495: FILE: kernel/power/io.c:460:
+		free_pages((unsigned long) buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: kernel/power/io.c:466:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#501: FILE: kernel/power/io.c:466:
+	while (plugin_header.name[0]) {
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: kernel/power/io.c:469:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: kernel/power/io.c:471:
+^I^I^I/* $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!plugin_header.disabled'
#510: FILE: kernel/power/io.c:475:
+			if ((!plugin_header.disabled) && (plugin_header.type == FILTER_PLUGIN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plugin_header.type == FILTER_PLUGIN'
#510: FILE: kernel/power/io.c:475:
+			if ((!plugin_header.disabled) && (plugin_header.type == FILTER_PLUGIN)) {

WARNING:LONG_LINE_STRING: line length of 118 exceeds 100 columns
#511: FILE: kernel/power/io.c:476:
+				suspend_early_boot_message(1, "It looks like we need plugin %s for reading the image "

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: kernel/power/io.c:477:
+				suspend_early_boot_message(1, "It looks like we need plugin %s for reading the image "
+						"but it hasn't been registered.\n",

CHECK:SPACING: No space is necessary after a cast
#518: FILE: kernel/power/io.c:483:
+					free_pages((unsigned long) buffer, 0);

CHECK:BRACES: Unbalanced braces around else statement
#521: FILE: kernel/power/io.c:486:
+			} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: kernel/power/io.c:487:
+				printk("Plugin %s configuration data found, but the plugin "

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: kernel/power/io.c:488:
+				printk("Plugin %s configuration data found, but the plugin "
+					"hasn't registered. Looks like it was disabled, so "

WARNING:SPLIT_STRING: quoted string split across lines
#524: FILE: kernel/power/io.c:489:
+					"hasn't registered. Looks like it was disabled, so "
+					"we're ignoring it's data.",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: kernel/power/io.c:492:
+^I^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#529: FILE: kernel/power/io.c:494:
+		result = active_writer->ops.writer.read_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#530: FILE: kernel/power/io.c:495:
+				(char *) &len, sizeof(int));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: kernel/power/io.c:497:
+			printk("Failed to read the length of the plugin %s's"

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: kernel/power/io.c:498:
+			printk("Failed to read the length of the plugin %s's"
+					" configuration data.\n",

CHECK:SPACING: No space is necessary after a cast
#535: FILE: kernel/power/io.c:500:
+			free_pages((unsigned long) buffer, 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#543: FILE: kernel/power/io.c:508:
+				if (!this_plugin->save_config_info) {
[...]
+				} else
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#544: FILE: kernel/power/io.c:509:
+					printk("Huh? Plugin %s appears to have a "

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: kernel/power/io.c:510:
+					printk("Huh? Plugin %s appears to have a "
+						"save_config_info, but not a "

WARNING:SPLIT_STRING: quoted string split across lines
#546: FILE: kernel/power/io.c:511:
+						"save_config_info, but not a "
+						"load_config_info function!\n",

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: kernel/power/io.c:513:
+				} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: kernel/power/io.c:528:
+^I^I^I/* $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#571: FILE: kernel/power/io.c:536:
+		result = active_writer->ops.writer.read_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#572: FILE: kernel/power/io.c:537:
+				(char *) &plugin_header, sizeof(plugin_header));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#575: FILE: kernel/power/io.c:540:
+			printk("Failed to read the next plugin header.\n");

CHECK:SPACING: No space is necessary after a cast
#576: FILE: kernel/power/io.c:541:
+			free_pages((unsigned long) buffer, 0);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#580: FILE: kernel/power/io.c:545:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#582: FILE: kernel/power/io.c:547:
+	free_pages((unsigned long) buffer, 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#595: FILE: kernel/power/io.c:560:
+	int total = pagedir1.pageset_size+pagedir2.pageset_size+2;
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#595: FILE: kernel/power/io.c:560:
+	int total = pagedir1.pageset_size+pagedir2.pageset_size+2;
 	                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#596: FILE: kernel/power/io.c:561:
+	int progress = total-1;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#597: FILE: kernel/power/io.c:562:
+	char * header_buffer = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: kernel/power/io.c:570:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#610: FILE: kernel/power/io.c:575:
+	if ((ret = active_writer->ops.writer.prepare_save_ranges())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPLIT_STRING: quoted string split across lines
#612: FILE: kernel/power/io.c:577:
+		abort_suspend("Active writer's prepare_save_ranges "
+				"function failed.");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#619: FILE: kernel/power/io.c:584:
+	if ((ret = active_writer->ops.writer.write_header_init())) {

WARNING:SPLIT_STRING: quoted string split across lines
#621: FILE: kernel/power/io.c:586:
+		abort_suspend("Active writer's write_header_init"
+				" function failed.");

CHECK:SPACING: No space is necessary after a cast
#626: FILE: kernel/power/io.c:591:
+	header_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:SPLIT_STRING: quoted string split across lines
#629: FILE: kernel/power/io.c:594:
+		abort_suspend("Out of memory when trying to get page "
+				"for header!");

CHECK:SPACING: No space is necessary after a cast
#634: FILE: kernel/power/io.c:599:
+	fill_suspend_header((struct suspend_header *) header_buffer);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#639: FILE: kernel/power/io.c:604:
+	if ((ret = write_plugin_configs())) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: kernel/power/io.c:611:
+	suspend_message(SUSPEND_HEADER, SUSPEND_LOW, 1,
+		name_suspend "Writing %d range pages.\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#649: FILE: kernel/power/io.c:614:
+	for (i=1; i<=num_range_pages; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#649: FILE: kernel/power/io.c:614:
+	for (i=1; i<=num_range_pages; i++) {
 	           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#650: FILE: kernel/power/io.c:615:
+		unsigned long * this_range_page = get_rangepages_list_entry(i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: kernel/power/io.c:618:
+		suspend_message(SUSPEND_HEADER, SUSPEND_VERBOSE, 1, "%d/%d: %p.\n",
+			i, num_range_pages, this_range_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: kernel/power/io.c:630:
+^I^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#667: FILE: kernel/power/io.c:632:
+		active_writer->ops.writer.write_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#668: FILE: kernel/power/io.c:633:
+				(char *) this_range_page, PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: kernel/power/io.c:634:
+^I^I$

WARNING:SPLIT_STRING: quoted string split across lines
#672: FILE: kernel/power/io.c:637:
+			abort_suspend("Failed writing a page. "
+					"Error number was %d.", ret);

CHECK:SPACING: No space is necessary after a cast
#692: FILE: kernel/power/io.c:657:
+	free_pages((unsigned long) header_buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: kernel/power/io.c:661:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: kernel/power/io.c:668:
+^I$

CHECK:SPACING: No space is necessary after a cast
#722: FILE: kernel/power/io.c:687:
+	free_pages((unsigned long) header_buffer, 0);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#731: FILE: kernel/power/io.c:696:
+ * ^I^Ibooted matches the one suspended. They need to match so we can$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#732: FILE: kernel/power/io.c:697:
+ * ^I^Ibe _sure_ things will work. It is not absolutely impossible for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#733: FILE: kernel/power/io.c:698:
+ * ^I^Iresuming from a different kernel to work, just not assured.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#735: FILE: kernel/power/io.c:700:
+ * ^I^Itime.$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#739: FILE: kernel/power/io.c:704:
+	if (sh->version_code != LINUX_VERSION_CODE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: kernel/power/io.c:706:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#763: FILE: kernel/power/io.c:728:
+ * ^I^Iactive writer) might need to reset data structures if we decide$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#764: FILE: kernel/power/io.c:729:
+ * ^I^Ito invalidate the image rather than resuming from it.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#769: FILE: kernel/power/io.c:734:
+	struct suspend_plugin_ops * this_plugin;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: kernel/power/io.c:735:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#781: FILE: kernel/power/io.c:746:
+ * ^I^IError if no image found or loaded.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: kernel/power/io.c:749:
+{^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#786: FILE: kernel/power/io.c:751:
+	char * header_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: kernel/power/io.c:751:
+	char * header_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#787: FILE: kernel/power/io.c:752:
+	struct suspend_header * suspend_header;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#788: FILE: kernel/power/io.c:753:
+	struct range * last_range_page = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: kernel/power/io.c:757:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#796: FILE: kernel/power/io.c:761:
+	if (!(result = active_writer->ops.writer.image_exists())) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: kernel/power/io.c:788:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: kernel/power/io.c:792:
+^I * $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#835: FILE: kernel/power/io.c:800:
+	if ((result = active_writer->ops.writer.read_header_init())) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: kernel/power/io.c:804:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#841: FILE: kernel/power/io.c:806:
+	if ((result = active_writer->ops.writer.read_header_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#841: FILE: kernel/power/io.c:806:
+	if ((result = active_writer->ops.writer.read_header_chunk(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: kernel/power/io.c:811:
+^I$

CHECK:SPACING: No space is necessary after a cast
#847: FILE: kernel/power/io.c:812:
+	suspend_header = (struct suspend_header *) header_buffer;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: kernel/power/io.c:826:
+^I * ---------------------------------------------------- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: kernel/power/io.c:828:
+^I * ---------------------------------------------------- $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: kernel/power/io.c:836:
+^I$

CHECK:SPACING: No space is necessary after a cast
#873: FILE: kernel/power/io.c:838:
+	memcpy((char *) &pagedir_resume,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: kernel/power/io.c:839:
+	memcpy((char *) &pagedir_resume,
+		(char *) &suspend_header->pagedir, sizeof(pagedir_resume));

CHECK:SPACING: No space is necessary after a cast
#874: FILE: kernel/power/io.c:839:
+		(char *) &suspend_header->pagedir, sizeof(pagedir_resume));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#885: FILE: kernel/power/io.c:850:
+		suspend_default_console_level = console_loglevel = suspend_header->param3;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#890: FILE: kernel/power/io.c:855:
+		suspend_io_time[i/2][i%2] =
 		                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#890: FILE: kernel/power/io.c:855:
+		suspend_io_time[i/2][i%2] =
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#891: FILE: kernel/power/io.c:856:
+			suspend_header->io_time[i/2][i%2];
 			                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#891: FILE: kernel/power/io.c:856:
+			suspend_header->io_time[i/2][i%2];
 			                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#896: FILE: kernel/power/io.c:861:
+	if ((result = read_plugin_configs())) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#898: FILE: kernel/power/io.c:863:
+		num_range_pages = pagedir1.pageset_size =

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#909: FILE: kernel/power/io.c:874:
+	for (i=0; i < num_range_pages; i++) {
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: kernel/power/io.c:876:
+^I^Istruct range * this_range_page = $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#911: FILE: kernel/power/io.c:876:
+		struct range * this_range_page = 

CHECK:SPACING: No space is necessary after a cast
#912: FILE: kernel/power/io.c:877:
+			(struct range *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#925: FILE: kernel/power/io.c:890:
+				(i | (unsigned long) this_range_page);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#928: FILE: kernel/power/io.c:893:
+		if ((result = active_writer->ops.writer.read_header_chunk(

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#928: FILE: kernel/power/io.c:893:
+		if ((result = active_writer->ops.writer.read_header_chunk(

CHECK:SPACING: No space is necessary after a cast
#929: FILE: kernel/power/io.c:894:
+				(char *) this_range_page, PAGE_SIZE)) < 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#930: FILE: kernel/power/io.c:895:
+			printk("Active writer's read_header_chunk routine "

WARNING:SPLIT_STRING: quoted string split across lines
#931: FILE: kernel/power/io.c:896:
+			printk("Active writer's read_header_chunk routine "
+					"returned %d.\n", result);

CHECK:SPACING: No space is necessary after a cast
#932: FILE: kernel/power/io.c:897:
+			free_page((unsigned long) this_range_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: kernel/power/io.c:901:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: kernel/power/io.c:904:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#944: FILE: kernel/power/io.c:909:
+	if ((result = active_writer->ops.writer.read_header_cleanup())) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: kernel/power/io.c:924:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: kernel/power/io.c:930:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#967: FILE: kernel/power/io.c:932:
+	 * pages that will be overwritten. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: kernel/power/io.c:937:
+ ^Iwarmup_collision_cache();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#972: FILE: kernel/power/io.c:937:
+ ^Iwarmup_collision_cache();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: kernel/power/io.c:937:
+ ^Iwarmup_collision_cache();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: kernel/power/io.c:942:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: kernel/power/io.c:942:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: kernel/power/io.c:952:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#994: FILE: kernel/power/io.c:959:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: kernel/power/io.c:961:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: kernel/power/io.c:970:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: kernel/power/io.c:975:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1013: FILE: kernel/power/io.c:978:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1020: FILE: kernel/power/io.c:985:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#1050: FILE: kernel/power/io.c:1015:
+	free_pages((unsigned long) header_buffer, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1056: FILE: kernel/power/io.c:1021:
+		struct range * this_range_page = first_range_page;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1057: FILE: kernel/power/io.c:1022:
+		struct range * next_range_page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1058: FILE: kernel/power/io.c:1023:
+		struct range * next_range_page;
+		for (j = 0; j < i; j++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: kernel/power/io.c:1024:
+^I^I^Inext_range_page = (struct range *) $

CHECK:SPACING: No space is necessary after a cast
#1059: FILE: kernel/power/io.c:1024:
+			next_range_page = (struct range *) 

CHECK:SPACING: No space is necessary after a cast
#1062: FILE: kernel/power/io.c:1027:
+			free_page((unsigned long) this_range_page);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1072: FILE: kernel/power/io.c:1037:
+ * ^I^IHandle the outcome, complaining where appropriate.$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1080: FILE: kernel/power/io.c:1045:
+	switch (error) {
+		case 0:
+		case -ENODATA:
+		case -EINVAL:	/* non fatal error */
[...]
+		case -EIO:
[...]
+		case -ENOENT:
[...]
+		case -EPERM:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1087: FILE: kernel/power/io.c:1052:
+			printk(KERN_CRIT name_suspend "I/O error\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1090: FILE: kernel/power/io.c:1055:
+			printk(KERN_CRIT name_suspend "No such file or directory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1093: FILE: kernel/power/io.c:1058:
+			printk(KERN_CRIT name_suspend "Sanity check error\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1096: FILE: kernel/power/io.c:1061:
+			printk(KERN_CRIT name_suspend "Error %d resuming\n", error);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1099: FILE: kernel/power/io.c:1064:
+	abort_suspend("Error %d in read_primary_suspend_image",error);
 	                                                      ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_primary_suspend_image', this function's name, in a string
#1099: FILE: kernel/power/io.c:1064:
+	abort_suspend("Error %d in read_primary_suspend_image",error);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1106: FILE: kernel/power/io.c:1071:
+ * ^I^Iwhether we are suspending and have only overwritten a portion$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1107: FILE: kernel/power/io.c:1072:
+ * ^I^Iwith pageset1 pages, or are resuming and need to read them $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1107: FILE: kernel/power/io.c:1072:
+ * ^I^Iwith pageset1 pages, or are resuming and need to read them $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1108: FILE: kernel/power/io.c:1073:
+ * ^I^Iall.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1110: FILE: kernel/power/io.c:1075:
+ * ^I^Ioverwritten by pageset1?$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1121: FILE: kernel/power/io.c:1086:
+	suspend_message(SUSPEND_IO, SUSPEND_VERBOSE, 1,
+		      "Beginning of read_secondary_pagedir: ");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_secondary_pagedir', this function's name, in a string
#1121: FILE: kernel/power/io.c:1086:
+		      "Beginning of read_secondary_pagedir: ");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 104 errors, 75 warnings, 99 checks, 1095 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227948.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
