WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#66: FILE: include/linux/sysctl.h:201:
+	RANDOM_UUID=6,
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#67: FILE: include/linux/sysctl.h:202:
+	RANDOM_DERIVE_SEED=7
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/char/random.c:59:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/char/random.c:84:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/char/random.c:89:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/char/random.c:92:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/char/random.c:98:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/char/random.c:103:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/char/random.c:113:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/char/random.c:116:
+    r.ctrValue++; // modulo 2<sup>r.blocksize/8</sup> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/char/random.c:117:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/char/random.c:121:
+    //  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/char/random.c:122:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/char/random.c:125:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/char/random.c:129:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/char/random.c:135:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: drivers/char/random.c:138:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/char/random.c:140:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/char/random.c:144:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/char/random.c:146:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: drivers/char/random.c:148:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/char/random.c:152:
+    // $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: drivers/char/random.c:153:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: drivers/char/random.c:165:
+ *   + H={0,1}^Hlen  256 <= Hlen $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/char/random.c:186:
+ * $

WARNING:TYPO_SPELLING: 'suseptible' may be misspelled - perhaps 'susceptible'?
#290: FILE: drivers/char/random.c:191:
+ *    function is suseptible to a 1st pre-image attack.  SHA-256 has no such
                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'eachother' may be misspelled - perhaps 'each other'?
#313: FILE: drivers/char/random.c:208:
+ * /dev/urandom.  They are synonymous with eachother for legacy reasons
                                            ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/char/random.c:209:
+ * $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#442: FILE: drivers/char/random.c:345:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 137 exceeds 100 columns
#502: FILE: drivers/char/random.c:355:
+#define BATCH_ENTROPY_SIZE 512 /* how many events do we buffer?  BATCH_ENTROPY_SIZE/2 == how many we need before batch-submitting them */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#557: FILE: drivers/char/random.c:370:
+ * Throttle mouse/keyboard/disk/interrupt entropy input to only add after this many jiffies/rdtsc counts

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#567: FILE: drivers/char/random.c:387:
+static int random_entropy_count; // jlc & cam have been together for 5 and 2/3 years as of the time this was written;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#568: FILE: drivers/char/random.c:388:
+static int random_read_wakeup_thresh = 0; // ignored now.

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#569: FILE: drivers/char/random.c:389:
+static int random_write_wakeup_thresh = 0; // ignored now.

CHECK:CAMELCASE: Avoid CamelCase: <digestAlgo>
#654: FILE: drivers/char/random.c:415:
+	const char *digestAlgo;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#656: FILE: drivers/char/random.c:417:
+	struct crypto_tfm *pools[1<<MAXIMUM_POOL_NUMBER];
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#658: FILE: drivers/char/random.c:419:
+	unsigned int pools_bytes[1<<MAXIMUM_POOL_NUMBER];
 	                          ^

CHECK:CAMELCASE: Avoid CamelCase: <cipherAlgo>
#660: FILE: drivers/char/random.c:421:
+	const char *cipherAlgo;

CHECK:CAMELCASE: Avoid CamelCase: <reseedHash>
#671: FILE: drivers/char/random.c:432:
+	struct crypto_tfm *reseedHash; /* digest used during random_reseed() */

CHECK:CAMELCASE: Avoid CamelCase: <networkCipher>
#672: FILE: drivers/char/random.c:433:
+	struct crypto_tfm *networkCipher; /* cipher used for network randomness */

CHECK:CAMELCASE: Avoid CamelCase: <networkCipher_ready>
#673: FILE: drivers/char/random.c:434:
+	char networkCipher_ready;         /* flag indicating if networkCipher has been seeded */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: drivers/char/random.c:449:
+^Iint ^Ikeysize, i, j;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#712: FILE: drivers/char/random.c:456:
+	if (!r) {
 		return -ENOMEM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#725: FILE: drivers/char/random.c:464:
+DEBUG_PRINTK("create_entropy_store() pools=%u index=%u\n", 1<<pool_number, r->pool_index);
                                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_entropy_store', this function's name, in a string
#725: FILE: drivers/char/random.c:464:
+DEBUG_PRINTK("create_entropy_store() pools=%u index=%u\n", 1<<pool_number, r->pool_index);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#726: FILE: drivers/char/random.c:465:
+	for (i=0; i<(1<<pool_number); i++) {
+DEBUG_PRINTK("create_entropy_store() i=%i index=%u\n", i, r->pool_index);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#726: FILE: drivers/char/random.c:465:
+	for (i=0; i<(1<<pool_number); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#726: FILE: drivers/char/random.c:465:
+	for (i=0; i<(1<<pool_number); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#726: FILE: drivers/char/random.c:465:
+	for (i=0; i<(1<<pool_number); i++) {
 	              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_entropy_store', this function's name, in a string
#727: FILE: drivers/char/random.c:466:
+DEBUG_PRINTK("create_entropy_store() i=%i index=%u\n", i, r->pool_index);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r->pools[i]"
#729: FILE: drivers/char/random.c:468:
+		if (r->pools[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: drivers/char/random.c:469:
+^I^I  ^Ifor (j=0; j<i; j++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#730: FILE: drivers/char/random.c:469:
+^I^I  ^Ifor (j=0; j<i; j++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#730: FILE: drivers/char/random.c:469:
+		  	for (j=0; j<i; j++) {
 		  	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#730: FILE: drivers/char/random.c:469:
+		  	for (j=0; j<i; j++) {
 		  	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#731: FILE: drivers/char/random.c:470:
+				if (r->pools[j] != NULL) {
+					kfree(r->pools[j]);
+				}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "r->pools[j]"
#731: FILE: drivers/char/random.c:470:
+				if (r->pools[j] != NULL) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#738: FILE: drivers/char/random.c:477:
+		crypto_digest_init( r->pools[i] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#738: FILE: drivers/char/random.c:477:
+		crypto_digest_init( r->pools[i] );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#784: FILE: drivers/char/random.c:483:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#784: FILE: drivers/char/random.c:483:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#784: FILE: drivers/char/random.c:483:
+	if ((r->cipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
+	  	return -ENOMEM;
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: drivers/char/random.c:484:
+^I  ^Ireturn -ENOMEM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#785: FILE: drivers/char/random.c:484:
+^I  ^Ireturn -ENOMEM;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#796: FILE: drivers/char/random.c:488:
+	 * to the cipher's keysize */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for single statement blocks
#832: FILE: drivers/char/random.c:495:
+	if (crypto_cipher_setkey(r->cipher, r->key, r->keysize)) {
+		return -EINVAL;
 	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#839: FILE: drivers/char/random.c:500:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#839: FILE: drivers/char/random.c:500:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#839: FILE: drivers/char/random.c:500:
+	if ((r->reseedHash=crypto_alloc_tfm(r->digestAlgo, 0)) == NULL) {
+		return -ENOMEM;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#843: FILE: drivers/char/random.c:504:
+	 * for now */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#844: FILE: drivers/char/random.c:505:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
 	                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#844: FILE: drivers/char/random.c:505:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#844: FILE: drivers/char/random.c:505:
+	if ((r->networkCipher=crypto_alloc_tfm(r->cipherAlgo, 0)) == NULL) {
+		return -ENOMEM;
+	}

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#862: FILE: drivers/char/random.c:520:
+	static unsigned int totalBytes=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#862: FILE: drivers/char/random.c:520:
+	static unsigned int totalBytes=0;
 	                              ^

CHECK:CAMELCASE: Avoid CamelCase: <totalBytes>
#862: FILE: drivers/char/random.c:520:
+	static unsigned int totalBytes=0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#864: FILE: drivers/char/random.c:522:
+	if (r == NULL) {
+		return;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#864: FILE: drivers/char/random.c:522:
+	if (r == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#890: FILE: drivers/char/random.c:533:
+	sg[0].length = nwords*sizeof(__u32);
 	                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#893: FILE: drivers/char/random.c:536:
+	if (r->pool_index == 0) {
+		r->pool0_len += nwords*sizeof(__u32);
 	}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#894: FILE: drivers/char/random.c:537:
+		r->pool0_len += nwords*sizeof(__u32);
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#898: FILE: drivers/char/random.c:541:
+	r->pool_index = (r->pool_index + 1) & ((1<<r->pool_number)-1);
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#898: FILE: drivers/char/random.c:541:
+	r->pool_index = (r->pool_index + 1) & ((1<<r->pool_number)-1);
 	                                                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_entropy_words', this function's name, in a string
#901: FILE: drivers/char/random.c:544:
+DEBUG_PRINTK("0 add_entropy_words() nwords=%u pool[i].bytes=%u total=%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/char/random.c:545:
+DEBUG_PRINTK("0 add_entropy_words() nwords=%u pool[i].bytes=%u total=%u\n",
+	nwords, r->pools_bytes[r->pool_index], totalBytes);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#924: FILE: drivers/char/random.c:597:
+	if (!batch_max) {
 		return;
+	}

CHECK:SPACING: No space is necessary after a cast
#956: FILE: drivers/char/random.c:632:
+	struct entropy_store *r = (struct entropy_store *) private_;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#965: FILE: drivers/char/random.c:643:
+	batch_max*sizeof(struct sample));
 	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#988: FILE: drivers/char/random.c:657:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1022: FILE: drivers/char/random.c:671:
+static void add_timer_randomness(unsigned num)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1032: FILE: drivers/char/random.c:673:
+	static __u32	lasttime=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1032: FILE: drivers/char/random.c:673:
+	static __u32	lasttime=0;
 	            	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1086: FILE: drivers/char/random.c:689:
+	if ((time-lasttime) < RANDOM_INPUT_THROTTLE) {
 	         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1086: FILE: drivers/char/random.c:689:
+	if ((time-lasttime) < RANDOM_INPUT_THROTTLE) {
+		return;
 	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1104: FILE: drivers/char/random.c:700:
+	 * they can't hurt us anymore */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1546: FILE: drivers/char/random.c:749:
+static inline void increment_iv(unsigned char *IV, const unsigned int IVsize) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <IVsize>
#1546: FILE: drivers/char/random.c:749:
+static inline void increment_iv(unsigned char *IV, const unsigned int IVsize) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1548: FILE: drivers/char/random.c:751:
+	unsigned int i;
+	for (i=0; i<IVsize; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1548: FILE: drivers/char/random.c:751:
+	for (i=0; i<IVsize; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1548: FILE: drivers/char/random.c:751:
+	for (i=0; i<IVsize; i++) {
 	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1549: FILE: drivers/char/random.c:752:
+		if ( ++(IV[i]) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1549: FILE: drivers/char/random.c:752:
+		if ( ++(IV[i]) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'IV[i]'
#1549: FILE: drivers/char/random.c:752:
+		if ( ++(IV[i]) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1549: FILE: drivers/char/random.c:752:
+		if ( ++(IV[i]) ) {
+			break;
+		}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1581: FILE: drivers/char/random.c:761:
+static void random_reseed(struct entropy_store *r) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: drivers/char/random.c:776:
+  ( ((VAL) >> (N)) & 1 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1596: FILE: drivers/char/random.c:776:
+  ( ((VAL) >> (N)) & 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1596: FILE: drivers/char/random.c:776:
+  ( ((VAL) >> (N)) & 1 )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1597: FILE: drivers/char/random.c:777:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1597: FILE: drivers/char/random.c:777:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1597: FILE: drivers/char/random.c:777:
+	for (i=0; i<(1<<r->pool_number); i++) {
 	              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		                                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {
 		                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i==0'
#1601: FILE: drivers/char/random.c:781:
+		if ( (i==0)  ||  TESTBIT(r->reseed_count,i)==0 ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1694: FILE: drivers/char/random.c:831:
+	 * data
+	*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1696: FILE: drivers/char/random.c:833:
+	/*
+	if (r->reseed_count == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1783: FILE: drivers/char/random.c:864:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1786: FILE: drivers/char/random.c:867:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1786: FILE: drivers/char/random.c:867:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	           ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#1786: FILE: drivers/char/random.c:867:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	                        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1786: FILE: drivers/char/random.c:867:
+	for (i=0; i+r->blocksize<=r->keysize; i+=r->blocksize) {
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1787: FILE: drivers/char/random.c:868:
+		sgtmp[0].page = virt_to_page( r->key+i );
 		                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1787: FILE: drivers/char/random.c:868:
+		sgtmp[0].page = virt_to_page( r->key+i );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1787: FILE: drivers/char/random.c:868:
+		sgtmp[0].page = virt_to_page( r->key+i );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1788: FILE: drivers/char/random.c:869:
+		sgtmp[0].offset = offset_in_page( r->key+i );
 		                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1788: FILE: drivers/char/random.c:869:
+		sgtmp[0].offset = offset_in_page( r->key+i );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1788: FILE: drivers/char/random.c:869:
+		sgtmp[0].offset = offset_in_page( r->key+i );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1793: FILE: drivers/char/random.c:874:
+	sgtmp[0].page = virt_to_page( r->key+i );
 	                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1793: FILE: drivers/char/random.c:874:
+	sgtmp[0].page = virt_to_page( r->key+i );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1793: FILE: drivers/char/random.c:874:
+	sgtmp[0].page = virt_to_page( r->key+i );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1794: FILE: drivers/char/random.c:875:
+	sgtmp[0].offset = offset_in_page( r->key+i );
 	                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1794: FILE: drivers/char/random.c:875:
+	sgtmp[0].offset = offset_in_page( r->key+i );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1794: FILE: drivers/char/random.c:875:
+	sgtmp[0].offset = offset_in_page( r->key+i );

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1795: FILE: drivers/char/random.c:876:
+	sgtmp[0].length = r->blocksize-i;
 	                              ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1799: FILE: drivers/char/random.c:880:
+	if (crypto_cipher_setkey(r->cipher, r->key, r->keysize)) {
+		return -EINVAL;
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1864: FILE: drivers/char/random.c:916:
+        if (batch_entropy_init(BATCH_ENTROPY_SIZE, random_state))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1864: FILE: drivers/char/random.c:916:
+        if (batch_entropy_init(BATCH_ENTROPY_SIZE, random_state))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1865: FILE: drivers/char/random.c:917:
+                goto err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: drivers/char/random.c:917:
+                goto err;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2007: FILE: drivers/char/random.c:948:
+random_read(struct file * file, char __user * buf, size_t nbytes, loff_t *ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2007: FILE: drivers/char/random.c:948:
+random_read(struct file * file, char __user * buf, size_t nbytes, loff_t *ppos)

CHECK:SPACING: No space is necessary after a cast
#2051: FILE: drivers/char/random.c:997:
+	int __user *p = (int __user *) arg;

CHECK:SPACING: No space is necessary after a cast
#2114: FILE: drivers/char/random.c:1014:
+		p = (int *) arg;

WARNING:TYPO_SPELLING: 'maddness' may be misspelled - perhaps 'madness'?
#2142: FILE: drivers/char/random.c:1030:
+		/* jlcooke: this is maddness! Never clear the entropy pool */
 		                    ^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2187: FILE: drivers/char/random.c:1098:
+	sysctl_poolsize = (1<<random_state->pool_number) *
 	                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2223: FILE: drivers/char/random.c:1115:
+static int proc_derive_seed(ctl_table *table, int write, struct file *filp,
                                                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2224: FILE: drivers/char/random.c:1116:
+static int proc_derive_seed(ctl_table *table, int write, struct file *filp,
+				void __user *buffer, size_t *lenp, loff_t *ppos)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2227: FILE: drivers/char/random.c:1119:
+	static unsigned int	derive_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2227: FILE: drivers/char/random.c:1119:
+	static unsigned int	derive_count=0;
 	                   	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2229: FILE: drivers/char/random.c:1121:
+	static unsigned char	buf[(1<<MAXIMUM_POOL_NUMBER) *
 	                    	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2230: FILE: drivers/char/random.c:1122:
+				RANDOM_MAX_DIGEST_SIZE *8/4];
 				                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2230: FILE: drivers/char/random.c:1122:
+				RANDOM_MAX_DIGEST_SIZE *8/4];
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2234: FILE: drivers/char/random.c:1126:
+	unsigned int	i,j;
 	            	 ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'proc_derive_seed', this function's name, in a string
#2239: FILE: drivers/char/random.c:1131:
+DEBUG_PRINTK("proc_derive_seed() 0\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2244: FILE: drivers/char/random.c:1136:
+	memset(buf, 0, random_state->pool_number * 2*random_state->digestsize);
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2249: FILE: drivers/char/random.c:1141:
+	for (i=0; i<(1<<random_state->pool_number); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2249: FILE: drivers/char/random.c:1141:
+	for (i=0; i<(1<<random_state->pool_number); i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2249: FILE: drivers/char/random.c:1141:
+	for (i=0; i<(1<<random_state->pool_number); i++) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2280: FILE: drivers/char/random.c:1172:
+		for (j=0; j<random_state->digestsize; j++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2280: FILE: drivers/char/random.c:1172:
+		for (j=0; j<random_state->digestsize; j++) {
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2281: FILE: drivers/char/random.c:1173:
+			buf[2*(i*random_state->digestsize +j)  ] = hextab[ (tmp[j] >> 4) & 0xf ];
 			     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2281: FILE: drivers/char/random.c:1173:
+			buf[2*(i*random_state->digestsize +j)  ] = hextab[ (tmp[j] >> 4) & 0xf ];
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#2281: FILE: drivers/char/random.c:1173:
+			buf[2*(i*random_state->digestsize +j)  ] = hextab[ (tmp[j] >> 4) & 0xf ];
 			                                  ^

ERROR:SPACING: space prohibited after that open square bracket '['
#2281: FILE: drivers/char/random.c:1173:
+			buf[2*(i*random_state->digestsize +j)  ] = hextab[ (tmp[j] >> 4) & 0xf ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#2281: FILE: drivers/char/random.c:1173:
+			buf[2*(i*random_state->digestsize +j)  ] = hextab[ (tmp[j] >> 4) & 0xf ];

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];
 			     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];
 			                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];
 			                                     ^

ERROR:SPACING: space prohibited after that open square bracket '['
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2282: FILE: drivers/char/random.c:1174:
+			buf[2*(i*random_state->digestsize +j)+1] = hextab[ (tmp[j]     ) & 0xf ];

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2293: FILE: drivers/char/random.c:1182:
+	fake_table.maxlen = (1<<random_state->pool_number) *
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2294: FILE: drivers/char/random.c:1183:
+				2*random_state->digestsize;
 				 ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2296: FILE: drivers/char/random.c:1185:
+	ret = proc_dostring(&fake_table, write, filp, buffer, lenp, ppos);
 	                                        ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2301: FILE: drivers/char/random.c:1190:
 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2337: FILE: drivers/char/random.c:1275:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2337: FILE: drivers/char/random.c:1275:
+        },$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2403: FILE: drivers/char/random.c:1331:
+	max_write_thresh = (1<<r->pool_number) *
 	                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2427: FILE: drivers/char/random.c:1352:
+ * $

WARNING:TYPO_SPELLING: 'spped' may be misspelled - perhaps 'speed'?
#2428: FILE: drivers/char/random.c:1353:
+ * openssl spped md4 aes shows aes256 is 2.5 times faster then basic md4 for
            ^^^^^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2577: FILE: drivers/char/random.c:1395:
+	static unsigned int		master_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2577: FILE: drivers/char/random.c:1395:
+	static unsigned int		master_count=0;
 	                   		            ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2578: FILE: drivers/char/random.c:1396:
+	static time_t			lastRekey=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2578: FILE: drivers/char/random.c:1396:
+	static time_t			lastRekey=0;
 	             			         ^

CHECK:CAMELCASE: Avoid CamelCase: <lastRekey>
#2578: FILE: drivers/char/random.c:1396:
+	static time_t			lastRekey=0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2585: FILE: drivers/char/random.c:1403:
+        rmb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2585: FILE: drivers/char/random.c:1403:
+        rmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#2585: FILE: drivers/char/random.c:1403:
+        rmb();

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2598: FILE: drivers/char/random.c:1410:
+	if (lastRekey==0  || (tv.tv_sec - lastRekey) < REKEY_INTERVAL) {
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2607: FILE: drivers/char/random.c:1419:
+			u8 secret[32]; /* max key size? */
+			get_random_bytes(secret, random_state->keysize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2609: FILE: drivers/char/random.c:1421:
+			crypto_cipher_setkey(random_state->networkCipher,
+						(const u8*)secret,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2609: FILE: drivers/char/random.c:1421:
+						(const u8*)secret,

ERROR:CODE_INDENT: code indent should use tabs where possible
#2620: FILE: drivers/char/random.c:1427:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2620: FILE: drivers/char/random.c:1427:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2625: FILE: drivers/char/random.c:1429:
+        spin_unlock_bh(&ip_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2625: FILE: drivers/char/random.c:1429:
+        spin_unlock_bh(&ip_lock);$

WARNING:TYPO_SPELLING: 'incresing' may be misspelled - perhaps 'increasing'?
#2639: FILE: drivers/char/random.c:1438:
+	/* seq# needs to be random-ish, but incresing */
 	                                    ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2640: FILE: drivers/char/random.c:1439:
+	return (tmp[0] & COUNT_MASK) + (count << (32-COUNT_BITS));
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2794: FILE: drivers/char/random.c:1492:
+^I * $

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2795: FILE: drivers/char/random.c:1493:
+	 * Output is the 32bit tag of a CBC-MAC of PT={count,0,0,0} with IV={addr,daddr,sport|dport,sseq}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2797: FILE: drivers/char/random.c:1495:
+^I * $

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2799: FILE: drivers/char/random.c:1497:
+	 * - we can replace two SHA1s used in the previous kernel with two AESs and make things 3x faster

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#2800: FILE: drivers/char/random.c:1498:
+	 * - I'd like to propose we remove the use of two whittenings with a single operation since we

WARNING:TYPO_SPELLING: 'hashs' may be misspelled - perhaps 'hashes'?
#2801: FILE: drivers/char/random.c:1499:
+	 *   were only using addition modulo 2^32 of all these values anyways.  Not to mention the hashs
 	                                                                                           ^^^^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#2801: FILE: drivers/char/random.c:1499:
+	 *   were only using addition modulo 2^32 of all these values anyways.  Not to mention the hashs

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#2802: FILE: drivers/char/random.c:1500:
+	 *   differ only in that the second processes more data... why drop the first hash?  We did learn

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#2804: FILE: drivers/char/random.c:1502:
+	 * - by replacing two SHA1s and addition modulo 2^32 with encryption of a 32bit value using AES-CTR

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2806: FILE: drivers/char/random.c:1504:
+^I * - Todo: we should rekey the cipher peridoically... if we do this, some packets will now fail $

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#2806: FILE: drivers/char/random.c:1504:
+	 * - Todo: we should rekey the cipher peridoically... if we do this, some packets will now fail 

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#2807: FILE: drivers/char/random.c:1505:
+	 *   our checking system... is this ok?  How can we get around this?  Rekey's would ideally happen

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#2808: FILE: drivers/char/random.c:1506:
+	 *   once per minute (6 million TCP connections per minute is a unrealistic enough security margin)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2834: FILE: drivers/char/random.c:1519:
+		u8 secret[32];
+		get_random_bytes(secret, sizeof(secret));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2836: FILE: drivers/char/random.c:1521:
+		if (crypto_cipher_setkey(random_state->networkCipher,
+					secret, random_state->keysize)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#2847: FILE: drivers/char/random.c:1530:
+	return tmp[0] ^ ( (count << COOKIEBITS) |

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2848: FILE: drivers/char/random.c:1531:
+			(data >> (sizeof(__u32)*8-COOKIEBITS)) );
 			                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2848: FILE: drivers/char/random.c:1531:
+			(data >> (sizeof(__u32)*8-COOKIEBITS)) );
 			                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2848: FILE: drivers/char/random.c:1531:
+			(data >> (sizeof(__u32)*8-COOKIEBITS)) );

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!random_state"
#2862: FILE: drivers/char/random.c:1549:
+	if (random_state == NULL  ||  !random_state->networkCipher_ready)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2891: FILE: drivers/char/random.c:1562:
+^Icookie ^= tmp[0]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2894: FILE: drivers/char/random.c:1565:
+^Ithiscount = cookie >> COOKIEBITS; $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2902: FILE: drivers/char/random.c:1572:
+	return cookie >> (sizeof(__u32)*8-COOKIEBITS);
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2902: FILE: drivers/char/random.c:1572:
+	return cookie >> (sizeof(__u32)*8-COOKIEBITS);
 	                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247087.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 107 errors, 59 warnings, 61 checks, 2809 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247087.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
