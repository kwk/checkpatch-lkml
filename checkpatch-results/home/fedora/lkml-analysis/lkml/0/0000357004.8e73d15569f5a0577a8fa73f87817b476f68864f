ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/reiserfs/bitmap.c:46:
+				    b_blocknr_t block, int * bmap_nr, int * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: fs/reiserfs/bitmap.c:46:
+				    b_blocknr_t block, int * bmap_nr, int * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: fs/reiserfs/bitmap.c:57:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#83: FILE: fs/reiserfs/bitmap.c:57:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/reiserfs/bitmap.c:110:
+    b_blocknr_t tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/reiserfs/bitmap.c:330:
+                          b_blocknr_t block)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/reiserfs/bitmap.c:330:
+                          b_blocknr_t block)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/reiserfs/bitmap.c:343:
+                          b_blocknr_t block) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/reiserfs/bitmap.c:343:
+                          b_blocknr_t block) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/reiserfs/bitmap.c:592:
+    b_blocknr_t border;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/reiserfs/bitmap.c:593:
+    u32 hash_in;$

CHECK:SPACING: No space is necessary after a cast
#147: FILE: fs/reiserfs/bitmap.c:600:
+    border = hint->beg + (u32) keyed_hash(((char *) (&hash_in)), 4) % (hint->end - hint->beg - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/reiserfs/bitmap.c:600:
+    border = hint->beg + (u32) keyed_hash(((char *) (&hash_in)), 4) % (hint->end - hint->beg - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/reiserfs/bitmap.c:609:
+    b_blocknr_t border;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/reiserfs/bitmap.c:625:
+    b_blocknr_t slice_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/reiserfs/do_balan.c:1253:
+    b_blocknr_t blocknr ;$

WARNING:SPACING: space prohibited before semicolon
#186: FILE: fs/reiserfs/do_balan.c:1253:
+    b_blocknr_t blocknr ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#190: FILE: fs/reiserfs/do_balan.c:1257:
 	    if (buffer_dirty (tb->thrown[i]))
+	      printk ("free_thrown deals with dirty buffer %d\n", blocknr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: fs/reiserfs/do_balan.c:1258:
+	      printk ("free_thrown deals with dirty buffer %d\n", blocknr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: fs/reiserfs/do_balan.c:1258:
+	      printk ("free_thrown deals with dirty buffer %d\n", blocknr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: fs/reiserfs/do_balan.c:1342:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: fs/reiserfs/do_balan.c:1342:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/reiserfs/fix_node.c:761:
+  b_blocknr_t^I      *^Ip_n_blocknr,$

ERROR:POINTER_LOCATION: "foo	      *	bar" should be "foo	      *bar"
#213: FILE: fs/reiserfs/fix_node.c:761:
+  b_blocknr_t	      *	p_n_blocknr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/reiserfs/fix_node.c:882:
+  b_blocknr_t^I^In_left_neighbor_blocknr;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#229: FILE: fs/reiserfs/fix_node.c:2503:
 	if ( tb->FEB[i] ) {
+	    b_blocknr_t blocknr  = tb->FEB[i]->b_blocknr ;

WARNING:TABSTOP: Statements should start on a tabstop
#231: FILE: fs/reiserfs/fix_node.c:2504:
+	    b_blocknr_t blocknr  = tb->FEB[i]->b_blocknr ;

WARNING:SPACING: space prohibited before semicolon
#231: FILE: fs/reiserfs/fix_node.c:2504:
+	    b_blocknr_t blocknr  = tb->FEB[i]->b_blocknr ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: fs/reiserfs/inode.c:509:
+    b_blocknr_t allocated_block_nr = 0;// b_blocknr_t is (unsigned) 32 bit int$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/reiserfs/journal.c:764:
+  b_blocknr_t blocknr = cn->blocknr ;$

WARNING:SPACING: space prohibited before semicolon
#264: FILE: fs/reiserfs/journal.c:764:
+  b_blocknr_t blocknr = cn->blocknr ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/reiserfs/journal.c:794:
+        printk("block %u, bh is %d, state %ld\n", cn->blocknr, cn->bh ? 1: 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/reiserfs/journal.c:794:
+        printk("block %u, bh is %d, state %ld\n", cn->blocknr, cn->bh ? 1: 0,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: fs/reiserfs/journal.c:794:
+        printk("block %u, bh is %d, state %ld\n", cn->blocknr, cn->bh ? 1: 0,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#273: FILE: fs/reiserfs/journal.c:794:
+        printk("block %u, bh is %d, state %ld\n", cn->blocknr, cn->bh ? 1: 0,
                                                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: fs/reiserfs/journal.c:795:
+        printk("block %u, bh is %d, state %ld\n", cn->blocknr, cn->bh ? 1: 0,
 	        cn->state) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/reiserfs/journal.c:1108:
+    b_blocknr_t blocknr ;$

WARNING:SPACING: space prohibited before semicolon
#282: FILE: fs/reiserfs/journal.c:1108:
+    b_blocknr_t blocknr ;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#291: FILE: fs/reiserfs/journal.c:2424:
+static int remove_from_transaction(struct super_block *p_s_sb, b_blocknr_t blocknr, int already_cleaned) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#291: FILE: fs/reiserfs/journal.c:2424:
+static int remove_from_transaction(struct super_block *p_s_sb, b_blocknr_t blocknr, int already_cleaned) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/reiserfs/journal.c:2477:
+  b_blocknr_t blocknr = cn->blocknr  ;$

WARNING:SPACING: space prohibited before semicolon
#300: FILE: fs/reiserfs/journal.c:2477:
+  b_blocknr_t blocknr = cn->blocknr  ;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#309: FILE: fs/reiserfs/journal.c:2713:
+int journal_mark_freed(struct reiserfs_transaction_handle *th, struct super_block *p_s_sb, b_blocknr_t blocknr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#309: FILE: fs/reiserfs/journal.c:2713:
+int journal_mark_freed(struct reiserfs_transaction_handle *th, struct super_block *p_s_sb, b_blocknr_t blocknr) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#316: FILE: fs/reiserfs/journal.c:2721:
     if (bh && buffer_dirty (bh)) {
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#318: FILE: fs/reiserfs/journal.c:2722:
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: fs/reiserfs/journal.c:2722:
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: fs/reiserfs/journal.c:2722:
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: fs/reiserfs/journal.c:2722:
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'journal_mark_freed', this function's name, in a string
#318: FILE: fs/reiserfs/journal.c:2722:
+      printk ("journal_mark_freed(dont_log): dirty buffer on hash list: %lx %d\n", bh->b_state, blocknr);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: fs/reiserfs/stree.c:105:
+  p_s_cpu_u32 = (__u32 *)&cpu_key->on_disk_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: include/linux/reiserfs_fs.h:573:
+    switch ((int)uniqueness) {$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#360: FILE: include/linux/reiserfs_fs.h:1733:
+int journal_mark_freed(struct reiserfs_transaction_handle *, struct super_block *, b_blocknr_t blocknr) ;

WARNING:SPACING: space prohibited before semicolon
#360: FILE: include/linux/reiserfs_fs.h:1733:
+int journal_mark_freed(struct reiserfs_transaction_handle *, struct super_block *, b_blocknr_t blocknr) ;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct reiserfs_transaction_handle *' should also have an identifier name
#360: FILE: include/linux/reiserfs_fs.h:1733:
+int journal_mark_freed(struct reiserfs_transaction_handle *, struct super_block *, b_blocknr_t blocknr) ;

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#360: FILE: include/linux/reiserfs_fs.h:1733:
+int journal_mark_freed(struct reiserfs_transaction_handle *, struct super_block *, b_blocknr_t blocknr) ;

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#365: FILE: include/linux/reiserfs_fs.h:1737:
+int reiserfs_in_journal(struct super_block *p_s_sb, int bmap_nr, int bit_nr, int searchall, b_blocknr_t *next) ;

WARNING:SPACING: space prohibited before semicolon
#365: FILE: include/linux/reiserfs_fs.h:1737:
+int reiserfs_in_journal(struct super_block *p_s_sb, int bmap_nr, int bit_nr, int searchall, b_blocknr_t *next) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#375: FILE: include/linux/reiserfs_fs.h:2108:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: include/linux/reiserfs_fs.h:2108:
+int is_reusable (struct super_block * s, b_blocknr_t block, int bit_value);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/linux/reiserfs_fs.h:2109:
+void reiserfs_free_block (struct reiserfs_transaction_handle *th, b_blocknr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'b_blocknr_t' should also have an identifier name
#376: FILE: include/linux/reiserfs_fs.h:2109:
+void reiserfs_free_block (struct reiserfs_transaction_handle *th, b_blocknr_t);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: include/linux/reiserfs_fs_sb.h:136:
+  __u32 blocknr ;^I^I /* block number of real buffer head, == 0 when buffer on disk */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 49 warnings, 2 checks, 271 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
