WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > -         seclvl_printk(1, KERN_WARNING, "Attempt to set seclvl out of "

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: security/seclvl.c:112:
+	va_list args;
+	va_start(args, fmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: security/seclvl.c:114:
+	unsigned long _now = jiffies;
+	if (time_after(_now, (*_prior) + HZ)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#104: FILE: security/seclvl.c:114:
+	if (time_after(_now, (*_prior) + HZ)) {
+		vprintk(fmt, args);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#115: FILE: security/seclvl.c:125:
+#define seclvl_printk(verb, type, fmt, arg...)                    \
+        if (verbosity >= verb ) {                                 \
+                static unsigned long _prior;                      \
+                __seclvl_printk(&_prior, (verb), type "%s: " fmt, \
+		                __FUNCTION__, ## arg);            \
+		}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'verb' - possible side-effects?
#115: FILE: security/seclvl.c:125:
+#define seclvl_printk(verb, type, fmt, arg...)                    \
+        if (verbosity >= verb ) {                                 \
+                static unsigned long _prior;                      \
+                __seclvl_printk(&_prior, (verb), type "%s: " fmt, \
+		                __FUNCTION__, ## arg);            \
+		}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'verb' may be better as '(verb)' to avoid precedence issues
#115: FILE: security/seclvl.c:125:
+#define seclvl_printk(verb, type, fmt, arg...)                    \
+        if (verbosity >= verb ) {                                 \
+                static unsigned long _prior;                      \
+                __seclvl_printk(&_prior, (verb), type "%s: " fmt, \
+		                __FUNCTION__, ## arg);            \
+		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: security/seclvl.c:126:
+        if (verbosity >= verb ) {                                 \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: security/seclvl.c:126:
+        if (verbosity >= verb ) {                                 \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#116: FILE: security/seclvl.c:126:
+        if (verbosity >= verb ) {                                 \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: security/seclvl.c:127:
+                static unsigned long _prior;                      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: security/seclvl.c:127:
+                static unsigned long _prior;                      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: security/seclvl.c:128:
+                __seclvl_printk(&_prior, (verb), type "%s: " fmt, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: security/seclvl.c:128:
+                __seclvl_printk(&_prior, (verb), type "%s: " fmt, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: security/seclvl.c:129:
+^I^I                __FUNCTION__, ## arg);            \$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#119: FILE: security/seclvl.c:129:
+		                __FUNCTION__, ## arg);            \

WARNING:INDENTED_LABEL: labels should not be indented
#129: FILE: security/seclvl.c:725:
+      exit:

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 2 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
