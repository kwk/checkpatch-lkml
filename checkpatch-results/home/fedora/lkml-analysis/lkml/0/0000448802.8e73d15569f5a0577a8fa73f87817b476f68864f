WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
 fs/direct-io.c              |  491 ++++++++++++++++++++++++++++++++++++++++++++

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: fs/direct-io.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#95: FILE: fs/direct-io.c:22:
+#include <asm/atomic.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#117: FILE: fs/direct-io.c:44:
+	unsigned first_block_in_page;	/* doesn't change */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#130: FILE: fs/direct-io.c:57:
+	unsigned head;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#131: FILE: fs/direct-io.c:58:
+	unsigned tail;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#135: FILE: fs/direct-io.c:62:
+	spinlock_t bio_list_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: fs/direct-io.c:70:
+static inline unsigned dio_pages_present(struct dio *dio)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#157: FILE: fs/direct-io.c:84:
+	ret = get_user_pages(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: fs/direct-io.c:101:
+^Ireturn ret;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: fs/direct-io.c:117:
+			printk("%s: dio_refill_pages returns %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: fs/direct-io.c:118:
+			printk("%s: dio_refill_pages returns %d\n",
+				__FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#191: FILE: fs/direct-io.c:118:
+				__FUNCTION__, ret);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: fs/direct-io.c:121:
+		BUG_ON(dio_pages_present(dio) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/direct-io.c:147:
+dio_bio_alloc(struct dio *dio, struct block_device *bdev,
+		sector_t first_sector, int nr_vecs)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#225: FILE: fs/direct-io.c:152:
+	if (bio == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dio->bio_list"
#274: FILE: fs/direct-io.c:201:
+	while (dio->bio_list == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dio->bio_list"
#277: FILE: fs/direct-io.c:204:
+		if (dio->bio_list == NULL) {

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#297: FILE: fs/direct-io.c:224:
+	const int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
 	          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#305: FILE: fs/direct-io.c:232:
+		if (!uptodate) {
 		     ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: fs/direct-io.c:252:
+	int ret = 0;
+	while (atomic_read(&dio->bio_count)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: fs/direct-io.c:299:
+	const unsigned blkbits = inode->i_blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: fs/direct-io.c:300:
+	const unsigned blocksize = 1 << blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#374: FILE: fs/direct-io.c:301:
+	const unsigned blocks_per_page = PAGE_SIZE >> blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: fs/direct-io.c:303:
+	unsigned block_in_page;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#400: FILE: fs/direct-io.c:327:
+				printk("%s: get_block returns %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: fs/direct-io.c:328:
+				printk("%s: get_block returns %d\n",
+					__FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#401: FILE: fs/direct-io.c:328:
+					__FUNCTION__, ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: fs/direct-io.c:334:
+				unmap_underlying_metadata(map_bh.b_bdev,
+							map_bh.b_blocknr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: fs/direct-io.c:341:
+				if (dio->bio->bi_idx == dio->bio->bi_vcnt ||
+						dio->boundary ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dio->bio"
#421: FILE: fs/direct-io.c:348:
+			if (dio->bio == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: fs/direct-io.c:353:
+				ret = dio_bio_alloc(dio, map_bh.b_bdev,
+					map_bh.b_blocknr << (blkbits - 9),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#440: FILE: fs/direct-io.c:367:
+				dio->bvec->bv_offset = block_in_page*blocksize;
 				                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: fs/direct-io.c:395:
+generic_direct_IO(int rw, struct inode *inode, char *buf, loff_t offset,
+			size_t count, get_block_t get_block)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#470: FILE: fs/direct-io.c:397:
+	const unsigned blocksize_mask = (1 << inode->i_blkbits) - 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: fs/direct-io.c:469:
+generic_file_direct_IO(int rw, struct inode *inode, char *buf,
+			loff_t offset, size_t count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#545: FILE: fs/direct-io.c:472:
+	unsigned blocksize_mask;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#573: FILE: include/linux/fs.h:306:
+	int (*direct_IO)(int, struct inode *, char *buf,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#573: FILE: include/linux/fs.h:306:
+	int (*direct_IO)(int, struct inode *, char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: include/linux/fs.h:307:
+	int (*direct_IO)(int, struct inode *, char *buf,
+				loff_t offset, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#583: FILE: include/linux/fs.h:1131:
+extern void invalidate_inode_pages2(struct address_space *mapping);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: include/linux/fs.h:1237:
+ssize_t generic_file_direct_IO(int rw, struct inode *inode, char *buf,
+				loff_t offset, size_t count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: include/linux/fs.h:1239:
+int generic_direct_IO(int rw, struct inode *inode, char *buf,
+			loff_t offset, size_t count, get_block_t *get_block);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#616: FILE: fs/buffer.c:2301:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#643: FILE: mm/filemap.c:1104:
+#if 0

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#661: FILE: mm/filemap.c:1214:
+generic_file_read(struct file *filp, char *buf, size_t count, loff_t *ppos)
                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#701: FILE: mm/filemap.c:1255:
+			do_generic_file_read(filp,ppos,&desc,file_read_actor);
 			                     ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#701: FILE: mm/filemap.c:1255:
+			do_generic_file_read(filp,ppos,&desc,file_read_actor);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#701: FILE: mm/filemap.c:1255:
+			do_generic_file_read(filp,ppos,&desc,file_read_actor);
 			                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#701: FILE: mm/filemap.c:1255:
+			do_generic_file_read(filp,ppos,&desc,file_read_actor);
 			                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#701: FILE: mm/filemap.c:1255:
+			do_generic_file_read(filp,ppos,&desc,file_read_actor);
 			                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: mm/filemap.c:2204:
+		written = generic_file_direct_IO(WRITE, inode,
+						(char *)buf, pos, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: fs/ext2/inode.c:611:
+ext2_direct_IO(int rw, struct inode *inode, char *buf,
+			loff_t offset, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: fs/block_dev.c:110:
+blkdev_direct_IO(int rw, struct inode *inode, char *buf,
+			loff_t offset, size_t count)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#840: FILE: drivers/char/raw.c:253:
+ssize_t raw_read(struct file *filp, char * buf, size_t size, loff_t *offp)
                               ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#840: FILE: drivers/char/raw.c:253:
+ssize_t raw_read(struct file *filp, char * buf, size_t size, loff_t *offp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#847: FILE: drivers/char/raw.c:258:
+ssize_t	raw_write(struct file *filp, const char *buf, size_t size, loff_t *offp)
        	                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#859: FILE: drivers/char/raw.c:264:
+rw_raw_dev(int rw, struct file *filp, char *buf, size_t size, loff_t *offp)
                                 ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 30 warnings, 22 checks, 866 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448802.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
