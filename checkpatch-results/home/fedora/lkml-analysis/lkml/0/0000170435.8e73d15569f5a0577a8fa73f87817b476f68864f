WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
and the EOWNERDEAD status. The new owner can recover the futex and unlock it,

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: include/linux/fs.h:354:
+ ^Istruct list_head^Irobust_list;^I/* list of robust futexes */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: include/linux/fs.h:354:
+ ^Istruct list_head^Irobust_list;^I/* list of robust futexes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/linux/fs.h:354:
+ ^Istruct list_head^Irobust_list;^I/* list of robust futexes */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: include/linux/fs.h:355:
+ ^Istruct semaphore^Irobust_sem;^I/* protect list of robust futexes */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: include/linux/fs.h:355:
+ ^Istruct semaphore^Irobust_sem;^I/* protect list of robust futexes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: include/linux/fs.h:355:
+ ^Istruct semaphore^Irobust_sem;^I/* protect list of robust futexes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/futex.h:25:
+  extern void futex_free_robust_list(struct inode *inode);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/linux/futex.h:25:
+  extern void futex_free_robust_list(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/futex.h:26:
+  extern void exit_futex(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/linux/futex.h:26:
+  extern void exit_futex(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/futex.h:27:
+  static inline void futex_init_inode(struct inode *inode) {$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#162: FILE: include/linux/futex.h:27:
+  static inline void futex_init_inode(struct inode *inode) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/linux/futex.h:30:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/futex.h:32:
+  static inline void futex_free_robust_list(struct inode *inode) { }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/futex.h:33:
+  static inline void exit_futex(void) { }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/futex.h:34:
+  static inline void futex_init_inode(struct inode *inode) { }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: init/Kconfig:325:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/exit.c:818:
+ ^Iexit_futex();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: kernel/exit.c:818:
+ ^Iexit_futex();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/exit.c:818:
+ ^Iexit_futex();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: kernel/futex.c:97:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#326: FILE: kernel/futex.c:812:
+	if( value & FUTEX_OWNER_DIED ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#326: FILE: kernel/futex.c:812:
+	if( value & FUTEX_OWNER_DIED ) {

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: kernel/futex.c:812:
+	if( value & FUTEX_OWNER_DIED ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#327: FILE: kernel/futex.c:813:
+		if (put_user( FUTEX_OWNER_DIED | FUTEX_NOT_RECOVERABLE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: kernel/futex.c:814:
+		if (put_user( FUTEX_OWNER_DIED | FUTEX_NOT_RECOVERABLE,
+				(int __user *) uaddr)) {

CHECK:SPACING: No space is necessary after a cast
#328: FILE: kernel/futex.c:814:
+				(int __user *) uaddr)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: kernel/futex.c:819:
+			if (match_futex (&this->key, &key)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: kernel/futex.c:826:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: kernel/futex.c:831:
+		if (match_futex (&this->key, &key)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!target"
#346: FILE: kernel/futex.c:832:
+			if (target == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: kernel/futex.c:838:
+^I$

CHECK:SPACING: No space is necessary after a cast
#355: FILE: kernel/futex.c:841:
+		if (put_user( 0, (int __user *) uaddr)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#355: FILE: kernel/futex.c:841:
+		if (put_user( 0, (int __user *) uaddr)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: kernel/futex.c:847:
+^I$

CHECK:SPACING: No space is necessary after a cast
#366: FILE: kernel/futex.c:852:
+	if (put_user( value, (int __user *) uaddr)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#366: FILE: kernel/futex.c:852:
+	if (put_user( value, (int __user *) uaddr)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: kernel/futex.c:946:
+^I */^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#518: FILE: kernel/futex.c:1004:
+	 * have handled it for us already. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#541: FILE: kernel/futex.c:1027:
+	if (inode == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: kernel/futex.c:1029:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mapping"
#545: FILE: kernel/futex.c:1031:
+	if (mapping == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: kernel/futex.c:1036:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: kernel/futex.c:1038:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#562: FILE: kernel/futex.c:1048:
+	return;
+}

ERROR:SPACING: space prohibited after that open parenthesis '('
#573: FILE: kernel/futex.c:1059:
+static unsigned long get_private_uaddr( union futex_key *key)

ERROR:SPACING: space prohibited after that open parenthesis '('
#591: FILE: kernel/futex.c:1077:
+static unsigned long get_shared_uaddr( union futex_key *key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: kernel/futex.c:1078:
+static unsigned long get_shared_uaddr( union futex_key *key,
+				       struct vm_area_struct *vma)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#599: FILE: kernel/futex.c:1085:
+	if (key->shared.inode == mapping->host ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: kernel/futex.c:1092:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#619: FILE: kernel/futex.c:1105:
+static unsigned long get_futex_uaddr( union futex_key *key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: kernel/futex.c:1106:
+static unsigned long get_futex_uaddr( union futex_key *key,
+				      struct vm_area_struct *vma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#627: FILE: kernel/futex.c:1113:
+		uaddr = get_shared_uaddr(key,vma);
 		                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: kernel/futex.c:1114:
+^I$

CHECK:SPACING: No space is necessary after a cast
#658: FILE: kernel/futex.c:1144:
+	ret = put_user(FUTEX_OWNER_DIED | value, (int __user *) uaddr);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#661: FILE: kernel/futex.c:1147:
+		WARN_ON(ret!=0);
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: kernel/futex.c:1152:
+		if (!match_futex (&this->key, key))

ERROR:SPACING: space prohibited after that open parenthesis '('
#689: FILE: kernel/futex.c:1175:
+static void find_owned_futex( struct vm_area_struct *vma )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#689: FILE: kernel/futex.c:1175:
+static void find_owned_futex( struct vm_area_struct *vma )

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#703: FILE: kernel/futex.c:1189:
+	list_for_each_entry_safe(this, next, head, list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: kernel/futex.c:1193:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#708: FILE: kernel/futex.c:1194:
+		if ((ret = get_user(value, (int *)uaddr)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#709: FILE: kernel/futex.c:1195:
+			WARN_ON(ret!=0);
 			           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: kernel/futex.c:1198:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#714: FILE: kernel/futex.c:1200:
+			set_owner_died(&this->key,uaddr,value);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#714: FILE: kernel/futex.c:1200:
+			set_owner_died(&this->key,uaddr,value);
 			                               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#732: FILE: kernel/futex.c:1218:
+	if (current==NULL)
 	           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current"
#732: FILE: kernel/futex.c:1218:
+	if (current==NULL)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#736: FILE: kernel/futex.c:1222:
+	if (mm==NULL)
 	      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#736: FILE: kernel/futex.c:1222:
+	if (mm==NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: kernel/futex.c:1226:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vma"
#741: FILE: kernel/futex.c:1227:
+	for (vma = mm->mmap; vma != NULL; vma = vma->vm_next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#742: FILE: kernel/futex.c:1228:
+		if (vma->vm_file == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: kernel/futex.c:1230:
+^I^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file->f_mapping"
#745: FILE: kernel/futex.c:1231:
+		if (vma->vm_file->f_mapping == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: kernel/futex.c:1256:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: kernel/futex.c:1262:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: kernel/futex.c:1280:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: kernel/futex.c:1287:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: kernel/futex.c:1328:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: kernel/futex.c:1334:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#854: FILE: kernel/futex.c:1340:
+		if (match_futex (&this->key, &key)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#884: FILE: kernel/futex.c:1370:
+	if ((ret = get_user(value, (int *)uaddr)) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: kernel/futex.c:1372:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#897: FILE: kernel/futex.c:1383:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 20 warnings, 19 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
