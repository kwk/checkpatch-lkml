WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: drivers/kvm/kvm_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#54: FILE: drivers/kvm/kvm_main.c:20:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#61: FILE: drivers/kvm/kvm_main.c:27:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#63: FILE: drivers/kvm/kvm_main.c:29:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#101: FILE: drivers/kvm/kvm_main.c:67:
+};
+#define NR_VMX_MSR (sizeof(vmx_msr_index) / sizeof(*vmx_msr_index))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: drivers/kvm/kvm_main.c:69:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#109: FILE: drivers/kvm/kvm_main.c:75:
+#define NUM_AUTO_MSRS (NR_VMX_MSR-2)
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: drivers/kvm/kvm_main.c:86:
+#define MSR_IA32_FEATURE_CONTROL ^I^I0x03a$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/kvm/kvm_main.c:87:
+#define MSR_IA32_VMX_BASIC_MSR   ^I^I0x480$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#153: FILE: drivers/kvm/kvm_main.c:119:
+} __attribute__((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: drivers/kvm/kvm_main.c:134:
+	u16 seg;
+	asm ("mov %%fs, %0" : "=g"(seg));

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: drivers/kvm/kvm_main.c:141:
+	u16 seg;
+	asm ("mov %%gs, %0" : "=g"(seg));

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: drivers/kvm/kvm_main.c:148:
+	u16 ldt;
+	asm ("sldt %0" : "=g"(ldt));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#232: FILE: drivers/kvm/kvm_main.c:198:
+} __attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#249: FILE: drivers/kvm/kvm_main.c:215:
+	typedef unsigned long ul;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#265: FILE: drivers/kvm/kvm_main.c:231:
+	if (d->system == 0
+	    && (d->type == 2 || d->type == 9 || d->type == 11))

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: drivers/kvm/kvm_main.c:240:
+	u16 tr;
+	asm ("str %0" : "=g"(tr));

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: drivers/kvm/kvm_main.c:283:
+	struct kvm_memory_slot *slot = gfn_to_memslot(kvm, gfn);
+	return (slot) ? slot->phys_mem[gfn - slot->base_gfn] : 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: drivers/kvm/kvm_main.c:286:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/kvm/kvm_main.c:289:
+int kvm_read_guest(struct kvm_vcpu *vcpu,
+			     gva_t addr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#332: FILE: drivers/kvm/kvm_main.c:298:
+		unsigned now;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#333: FILE: drivers/kvm/kvm_main.c:299:
+		unsigned offset;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#341: FILE: drivers/kvm/kvm_main.c:307:
+		guest_buf = (hva_t)kmap_atomic(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#347: FILE: drivers/kvm/kvm_main.c:313:
+		memcpy(host_buf, (void*)guest_buf, now);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/kvm/kvm_main.c:323:
+int kvm_write_guest(struct kvm_vcpu *vcpu,
+			     gva_t addr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#366: FILE: drivers/kvm/kvm_main.c:332:
+		unsigned now;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#367: FILE: drivers/kvm/kvm_main.c:333:
+		unsigned offset;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#375: FILE: drivers/kvm/kvm_main.c:341:
+		guest_buf = (hva_t)kmap_atomic(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#380: FILE: drivers/kvm/kvm_main.c:346:
+		memcpy((void*)guest_buf, host_buf, now);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#405: FILE: drivers/kvm/kvm_main.c:371:
+		       : "=m"(error) : "m"(phys_addr) : "cc", "memory" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#407: FILE: drivers/kvm/kvm_main.c:373:
+		printk(KERN_ERR "kvm: vmclear fail: %p/%llx\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#448: FILE: drivers/kvm/kvm_main.c:414:
+			       : "=m"(error) : "m"(phys_addr) : "cc" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#450: FILE: drivers/kvm/kvm_main.c:416:
+			printk(KERN_ERR "kvm: vmptrld %p/%llx fail\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: drivers/kvm/kvm_main.c:460:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#523: FILE: drivers/kvm/kvm_main.c:489:
+	unsigned long ecx = cpuid_ecx(1);
+	return test_bit(5, &ecx); /* CPUID.1:ECX.VMX[bit 5] -> VT */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#579: FILE: drivers/kvm/kvm_main.c:545:
+static int kvm_dev_open(struct inode *inode, struct file *filp)
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*kvm)...) over kzalloc(sizeof(struct kvm)...)
#581: FILE: drivers/kvm/kvm_main.c:547:
+	struct kvm *kvm = kzalloc(sizeof(struct kvm), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#654: FILE: drivers/kvm/kvm_main.c:620:
+static int kvm_dev_release(struct inode *inode, struct file *filp)
                                                              ^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#677: FILE: drivers/kvm/kvm_main.c:643:
+		       : "=g"(error) : "r"(value), "r"(field) : "cc" );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#679: FILE: drivers/kvm/kvm_main.c:645:
+		printk(KERN_ERR "vmwrite error: reg %lx value %lx (err %d)\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#695: FILE: drivers/kvm/kvm_main.c:661:
+	vmcs_writel(field+1, value >> 32);
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#701: FILE: drivers/kvm/kvm_main.c:667:
+	printk(KERN_DEBUG "inject_general_protection: rip 0x%lx\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#735: FILE: drivers/kvm/kvm_main.c:701:
+			(vmcs_readl(CR0_READ_SHADOW) & CR4_VME_MASK) );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#740: FILE: drivers/kvm/kvm_main.c:706:
+^I^I^Ivmcs_write16(GUEST_##seg##_SELECTOR, 0); ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: drivers/kvm/kvm_main.c:707:
+^I^I^Ivmcs_writel(GUEST_##seg##_BASE, 0); ^I^I\$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#757: FILE: drivers/kvm/kvm_main.c:723:
+static int rmode_tss_base(struct kvm* kvm)

WARNING:LINE_SPACING: Missing a blank line after declarations
#760: FILE: drivers/kvm/kvm_main.c:726:
+	gfn_t base_gfn = kvm->memslots[0].base_gfn + kvm->memslots[0].npages - 3;
+	return base_gfn << PAGE_SHIFT;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#788: FILE: drivers/kvm/kvm_main.c:754:
+^I^Ivmcs_write16(GUEST_##seg##_SELECTOR, ^I^I^I   \$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/kvm/kvm_main.c:779:
+		vmcs_write32(VM_ENTRY_CONTROLS,
+				     vmcs_read32(VM_ENTRY_CONTROLS) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/kvm/kvm_main.c:785:
+		vmcs_write32(VM_ENTRY_CONTROLS,
+				     vmcs_read32(VM_ENTRY_CONTROLS) &

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#832: FILE: drivers/kvm/kvm_main.c:798:
+		printk(KERN_DEBUG "%s: tss fixup for long mode. \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#832: FILE: drivers/kvm/kvm_main.c:798:
+		printk(KERN_DEBUG "%s: tss fixup for long mode. \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#833: FILE: drivers/kvm/kvm_main.c:799:
+		       __FUNCTION__);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#883: FILE: drivers/kvm/kvm_main.c:849:
+	unsigned offset = (cr3 & (PAGE_SIZE-1)) >> 5;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#883: FILE: drivers/kvm/kvm_main.c:849:
+	unsigned offset = (cr3 & (PAGE_SIZE-1)) >> 5;
 	                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#909: FILE: drivers/kvm/kvm_main.c:875:
+		printk(KERN_DEBUG "set_cr0: 0x%lx #GP, reserved bits 0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#909: FILE: drivers/kvm/kvm_main.c:875:
+		printk(KERN_DEBUG "set_cr0: 0x%lx #GP, reserved bits 0x%lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#916: FILE: drivers/kvm/kvm_main.c:882:
+		printk(KERN_DEBUG "set_cr0: #GP, CD == 0 && NW == 1\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#916: FILE: drivers/kvm/kvm_main.c:882:
+		printk(KERN_DEBUG "set_cr0: #GP, CD == 0 && NW == 1\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#922: FILE: drivers/kvm/kvm_main.c:888:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#922: FILE: drivers/kvm/kvm_main.c:888:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "

WARNING:SPLIT_STRING: quoted string split across lines
#923: FILE: drivers/kvm/kvm_main.c:889:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "
+		       "and a clear PE flag\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#932: FILE: drivers/kvm/kvm_main.c:898:
+			u32 guest_cs_ar;
+			if (!is_pae()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#933: FILE: drivers/kvm/kvm_main.c:899:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#933: FILE: drivers/kvm/kvm_main.c:899:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:SPLIT_STRING: quoted string split across lines
#934: FILE: drivers/kvm/kvm_main.c:900:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "
+				       "in long mode while PAE is disabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#940: FILE: drivers/kvm/kvm_main.c:906:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#940: FILE: drivers/kvm/kvm_main.c:906:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:SPLIT_STRING: quoted string split across lines
#941: FILE: drivers/kvm/kvm_main.c:907:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "
+				       "in long mode while CS.L == 1\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#945: FILE: drivers/kvm/kvm_main.c:911:
+
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#946: FILE: drivers/kvm/kvm_main.c:912:
+		} else
[...]
+		if (is_pae() &&

CHECK:BRACES: Unbalanced braces around else statement
#946: FILE: drivers/kvm/kvm_main.c:912:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#949: FILE: drivers/kvm/kvm_main.c:915:
+		if (is_pae() &&
+			    pdptrs_have_reserved_bits_set(vcpu, vcpu->cr3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#950: FILE: drivers/kvm/kvm_main.c:916:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#950: FILE: drivers/kvm/kvm_main.c:916:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "

WARNING:SPLIT_STRING: quoted string split across lines
#951: FILE: drivers/kvm/kvm_main.c:917:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "
+			       "reserved bits\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#956: FILE: drivers/kvm/kvm_main.c:922:
+
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#961: FILE: drivers/kvm/kvm_main.c:927:
+	return;
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#967: FILE: drivers/kvm/kvm_main.c:933:
+	if ((msw & CR0_PE_MASK) && !(cr0 & CR0_PE_MASK)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#971: FILE: drivers/kvm/kvm_main.c:937:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#972: FILE: drivers/kvm/kvm_main.c:938:
+		printk(KERN_DEBUG "lmsw: unexpected\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmsw', this function's name, in a string
#972: FILE: drivers/kvm/kvm_main.c:938:
+		printk(KERN_DEBUG "lmsw: unexpected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#988: FILE: drivers/kvm/kvm_main.c:954:
+		printk(KERN_DEBUG "set_cr4: #GP, reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#988: FILE: drivers/kvm/kvm_main.c:954:
+		printk(KERN_DEBUG "set_cr4: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#995: FILE: drivers/kvm/kvm_main.c:961:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#995: FILE: drivers/kvm/kvm_main.c:961:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "

WARNING:SPLIT_STRING: quoted string split across lines
#996: FILE: drivers/kvm/kvm_main.c:962:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "
+			       "in long mode\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1001: FILE: drivers/kvm/kvm_main.c:967:
+	} else if (is_paging() && !is_pae() && (cr4 & CR4_PAE_MASK)
+		   && pdptrs_have_reserved_bits_set(vcpu, vcpu->cr3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1002: FILE: drivers/kvm/kvm_main.c:968:
+		printk(KERN_DEBUG "set_cr4: #GP, pdptrs reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#1002: FILE: drivers/kvm/kvm_main.c:968:
+		printk(KERN_DEBUG "set_cr4: #GP, pdptrs reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1007: FILE: drivers/kvm/kvm_main.c:973:
+		printk(KERN_DEBUG "set_cr4: #GP, setting VMXE\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#1007: FILE: drivers/kvm/kvm_main.c:973:
+		printk(KERN_DEBUG "set_cr4: #GP, setting VMXE\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#1020: FILE: drivers/kvm/kvm_main.c:986:
+		if ( cr3 & CR3_L_MODE_RESEVED_BITS) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1021: FILE: drivers/kvm/kvm_main.c:987:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#1021: FILE: drivers/kvm/kvm_main.c:987:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1027: FILE: drivers/kvm/kvm_main.c:993:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#1027: FILE: drivers/kvm/kvm_main.c:993:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1033: FILE: drivers/kvm/kvm_main.c:999:
+			printk(KERN_DEBUG "set_cr3: #GP, pdptrs "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#1033: FILE: drivers/kvm/kvm_main.c:999:
+			printk(KERN_DEBUG "set_cr3: #GP, pdptrs "

WARNING:SPLIT_STRING: quoted string split across lines
#1034: FILE: drivers/kvm/kvm_main.c:1000:
+			printk(KERN_DEBUG "set_cr3: #GP, pdptrs "
+			       "reserved bits\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#1048: FILE: drivers/kvm/kvm_main.c:1014:
+	if ( cr8 & CR8_RESEVED_BITS) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1049: FILE: drivers/kvm/kvm_main.c:1015:
+		printk(KERN_DEBUG "set_cr8: #GP, reserved bits 0x%lx\n", cr8);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr8', this function's name, in a string
#1049: FILE: drivers/kvm/kvm_main.c:1015:
+		printk(KERN_DEBUG "set_cr8: #GP, reserved bits 0x%lx\n", cr8);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1115: FILE: drivers/kvm/kvm_main.c:1081:
+	new = old = *memslot;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1170: FILE: drivers/kvm/kvm_main.c:1136:
+		unsigned dirty_bytes = ALIGN(npages, BITS_PER_LONG) / 8;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1227: FILE: drivers/kvm/kvm_main.c:1193:
+		if (gfn >= memslot->base_gfn
+		    && gfn < memslot->base_gfn + memslot->npages)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1243: FILE: drivers/kvm/kvm_main.c:1209:
+		if (gfn >= memslot->base_gfn
+		    && gfn < memslot->base_gfn + memslot->npages) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1244: FILE: drivers/kvm/kvm_main.c:1210:
+		    && gfn < memslot->base_gfn + memslot->npages) {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1313: FILE: drivers/kvm/kvm_main.c:1279:
+		vcpu_printf(vcpu, "%s: unexpected cr %u\n", __FUNCTION__, cr);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1336: FILE: drivers/kvm/kvm_main.c:1302:
+		vcpu_printf(vcpu, "%s: unexpected cr %u\n", __FUNCTION__, cr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1347: FILE: drivers/kvm/kvm_main.c:1313:
+		printk(KERN_DEBUG "set_efer: 0x%llx #GP, reserved bits\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_efer', this function's name, in a string
#1347: FILE: drivers/kvm/kvm_main.c:1313:
+		printk(KERN_DEBUG "set_efer: 0x%llx #GP, reserved bits\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1354: FILE: drivers/kvm/kvm_main.c:1320:
+		printk(KERN_DEBUG "set_efer: #GP, change LME while paging\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_efer', this function's name, in a string
#1354: FILE: drivers/kvm/kvm_main.c:1320:
+		printk(KERN_DEBUG "set_efer: #GP, change LME while paging\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1366: FILE: drivers/kvm/kvm_main.c:1332:
+	if (!(efer & EFER_LMA))
+	    efer &= ~EFER_LME;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1374: FILE: drivers/kvm/kvm_main.c:1340:
+static long kvm_dev_ioctl(struct file *filp,
                                        ^^^^

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#1381: FILE: drivers/kvm/kvm_main.c:1347:
+	default:
+		;

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#1409: FILE: drivers/kvm/kvm_main.c:1375:
+static struct vm_operations_struct kvm_dev_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1419: FILE: drivers/kvm/kvm_main.c:1385:
+static struct file_operations kvm_chardev_ops = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: drivers/kvm/kvm_main.c:1401:
+                       void *v)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: drivers/kvm/kvm_main.c:1401:
+static int kvm_reboot(struct notifier_block *notifier, unsigned long val,
+                       void *v)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: drivers/kvm/kvm_main.c:1401:
+                       void *v)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1442: FILE: drivers/kvm/kvm_main.c:1408:
+		printk(KERN_INFO "kvm: exiting vmx mode\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1480: FILE: drivers/kvm/kvm_main.c:1446:
+		printk(KERN_ERR "kvm: no hardware support\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1484: FILE: drivers/kvm/kvm_main.c:1450:
+		printk(KERN_ERR "kvm: disabled by bios\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1499: FILE: drivers/kvm/kvm_main.c:1465:
+		printk (KERN_ERR "kvm: misc device register failed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1499: FILE: drivers/kvm/kvm_main.c:1465:
+		printk (KERN_ERR "kvm: misc device register failed\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1503: FILE: drivers/kvm/kvm_main.c:1469:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1504: FILE: drivers/kvm/kvm_main.c:1470:
+	if ((bad_page = alloc_page(GFP_KERNEL)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 90 warnings, 28 checks, 1498 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
