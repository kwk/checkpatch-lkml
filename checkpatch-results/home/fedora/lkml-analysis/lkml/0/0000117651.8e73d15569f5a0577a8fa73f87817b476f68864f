WARNING:TYPO_SPELLING: 'moudle' may be misspelled - perhaps 'module'?
#32: 
moudle was not possible due to reference couning on
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Anil S Keshavamurthy <anil.s.keshavamurthy>'
#45: 
Signed-off-by: Anil S Keshavamurthy <anil.s.keshavamurthy>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: include/linux/kprobes.h:70:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: kernel/kprobes.c:453:
+static int __kprobes __register_kprobe(struct kprobe *p,
+	unsigned long called_from)

CHECK:SPACING: No space is necessary after a cast
#92: FILE: kernel/kprobes.c:465:
+	if ((probed_mod = module_text_address((unsigned long) p->addr))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#92: FILE: kernel/kprobes.c:465:
+	if ((probed_mod = module_text_address((unsigned long) p->addr))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'calling_mod != probed_mod'
#98: FILE: kernel/kprobes.c:471:
+		if (calling_mod && (calling_mod != probed_mod)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#98: FILE: kernel/kprobes.c:471:
+		if (calling_mod && (calling_mod != probed_mod)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#102: FILE: kernel/kprobes.c:475:
+		} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#133: FILE: kernel/kprobes.c:546:
+	if (p->mod_refcounted &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/kprobes.c:611:
+^Iif ((ret = __register_kprobe(&rp->kp, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#153: FILE: kernel/kprobes.c:611:
+	if ((ret = __register_kprobe(&rp->kp, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: kernel/kprobes.c:612:
+	if ((ret = __register_kprobe(&rp->kp, 
+		(unsigned long)__builtin_return_address(0))) != 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117651.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 6 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117651.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
