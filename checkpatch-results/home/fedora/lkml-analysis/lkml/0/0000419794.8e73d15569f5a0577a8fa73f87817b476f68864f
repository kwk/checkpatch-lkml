WARNING:TYPO_SPELLING: 'pathalogical' may be misspelled - perhaps 'pathological'?
#44: 
This pathalogical behavior can be triggered by something as simple as:
     ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
Content-Disposition: attachment; filename="Andrea_Archangeli-inode_highmem_imbalance.patch"

WARNING:BAD_SIGN_OFF: Use a single space after To:
#71: 
To:	Andrew Morton <akpm@zip.com.au>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#72: 
Cc:	Martin Schwidefsky <schwidefsky@de.ibm.com>,

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Martin Schwidefsky <schwidefsky@de.ibm.com>,', should be: 'Martin Schwidefsky <schwidefsky@de.ibm.com>'
#72: 
Cc:	Martin Schwidefsky <schwidefsky@de.ibm.com>,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#118: FILE: fs/inode.c:678:
+	count = pass = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#128: FILE: fs/inode.c:683:
+		while (entry != &inode_unused)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#150: FILE: fs/inode.c:689:
+			if (inode->i_state & (I_FREEING|I_CLEAR|I_LOCK))
 			                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#150: FILE: fs/inode.c:689:
+			if (inode->i_state & (I_FREEING|I_CLEAR|I_LOCK))
 			                                       ^

WARNING:TYPO_SPELLING: 'approch' may be misspelled - perhaps 'approach'?
#166: FILE: fs/inode.c:705:
+					 * and this simpler approch to deal with the
 					                    ^^^^^^^

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Roy Sigurd Karlsbakk <roy@karlsbakk.net>,', should be: 'Roy Sigurd Karlsbakk <roy@karlsbakk.net>'
#253: 
Cc: Roy Sigurd Karlsbakk <roy@karlsbakk.net>,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/linux/pagemap.h:92:
+extern void wait_on_page(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#311: FILE: include/linux/pagemap.h:92:
+extern void wait_on_page(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#335: FILE: mm/filemap.c:811:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <TryLockPage>
#451: FILE: mm/vmscan.c:369:
+			if (page->buffers && !TryLockPage(page)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: fs/buffer.c:2625:
+		BUG();

WARNING:MEMORY_BARRIER: memory barrier without comment
#526: FILE: fs/buffer.c:2672:
+	smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#527: FILE: fs/buffer.c:2673:
+	if (waitqueue_active(&buffer_wait))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: fs/buffer.c:2710:
+ * Returns the number of pages which might have become freeable $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#615: FILE: include/linux/fs.h:1119:
+extern int shrink_buffer_cache(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419794.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 6 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419794.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
