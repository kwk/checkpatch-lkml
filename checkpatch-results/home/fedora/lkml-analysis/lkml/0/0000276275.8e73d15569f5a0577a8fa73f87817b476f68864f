WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#107: FILE: sound/pci/ac97/ac97_pcm.c:433:
+	rpcms = kcalloc(sizeof(struct ac97_pcm) * pcms_count, GFP_KERNEL);

The first argument for kcalloc or kmalloc_array should be the
number of elements.  sizeof() as the first argument is generally
wrong.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#128: FILE: sound/pci/ac97/ak4531_codec.c:370:
+	ak4531 = kcalloc(sizeof(*ak4531), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#149: FILE: sound/pci/ali5451/ali5451.c:2116:
+	if ((codec = kcalloc(sizeof(*codec), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#149: FILE: sound/pci/ali5451/ali5451.c:2116:
+	if ((codec = kcalloc(sizeof(*codec), GFP_KERNEL)) == NULL)

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#170: FILE: sound/pci/atiixp.c:1409:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#191: FILE: sound/pci/au88x0/au88x0.c:169:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: sound/pci/azt3328.c:1308:
+        kfree(chip);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: sound/pci/azt3328.c:1308:
+        kfree(chip);$

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#212: FILE: sound/pci/azt3328.c:1356:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#233: FILE: sound/pci/bt87x.c:707:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#254: FILE: sound/pci/cmipci.c:2981:
+	cm = kcalloc(sizeof(*cm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#275: FILE: sound/pci/cs4281.c:1416:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#298: FILE: sound/pci/cs46xx/cs46xx_lib.c:1395:
+	cpcm = kcalloc(sizeof(*cpcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#321: FILE: sound/pci/cs46xx/cs46xx_lib.c:3887:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#342: FILE: sound/pci/emu10k1/emu10k1_main.c:598:
+	emu = kcalloc(sizeof(*emu), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#363: FILE: sound/pci/emu10k1/emufx.c:1260:
+	if ((icode = kcalloc(sizeof(*icode), GFP_KERNEL)) == NULL)

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#363: FILE: sound/pci/emu10k1/emufx.c:1260:
+	if ((icode = kcalloc(sizeof(*icode), GFP_KERNEL)) == NULL)

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#366: FILE: sound/pci/emu10k1/emufx.c:1262:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#366: FILE: sound/pci/emu10k1/emufx.c:1262:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#366: FILE: sound/pci/emu10k1/emufx.c:1262:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#375: FILE: sound/pci/emu10k1/emufx.c:1672:
+	if ((icode = kcalloc(sizeof(*icode), GFP_KERNEL)) == NULL)

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#375: FILE: sound/pci/emu10k1/emufx.c:1672:
+	if ((icode = kcalloc(sizeof(*icode), GFP_KERNEL)) == NULL)

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#378: FILE: sound/pci/emu10k1/emufx.c:1674:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#378: FILE: sound/pci/emu10k1/emufx.c:1674:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#378: FILE: sound/pci/emu10k1/emufx.c:1674:
+	if ((controls = kcalloc(sizeof(emu10k1_fx8010_control_gpr_t) * SND_EMU10K1_GPR_CONTROLS, GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#383: FILE: sound/pci/emu10k1/emufx.c:1678:
+	if ((ipcm = kcalloc(sizeof(*ipcm), GFP_KERNEL)) == NULL) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#383: FILE: sound/pci/emu10k1/emufx.c:1678:
+	if ((ipcm = kcalloc(sizeof(*ipcm), GFP_KERNEL)) == NULL) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#392: FILE: sound/pci/emu10k1/emufx.c:2357:
+		ipcm = kcalloc(sizeof(*ipcm), GFP_KERNEL);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#404: FILE: sound/pci/emu10k1/emupcm.c:773:
 	if (epcm)
+		kfree(epcm);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#413: FILE: sound/pci/emu10k1/emupcm.c:784:
+	epcm = kcalloc(sizeof(*epcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#436: FILE: sound/pci/emu10k1/emupcm.c:829:
+	epcm = kcalloc(sizeof(*epcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#445: FILE: sound/pci/emu10k1/emupcm.c:865:
+	epcm = kcalloc(sizeof(*epcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#454: FILE: sound/pci/emu10k1/emupcm.c:906:
+	epcm = kcalloc(sizeof(*epcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#475: FILE: sound/pci/ens1370.c:1896:
+	ensoniq = kcalloc(sizeof(*ensoniq), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#496: FILE: sound/pci/es1938.c:1404:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#508: FILE: sound/pci/es1968.c:1625:
+	es = kcalloc(sizeof(*es), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#517: FILE: sound/pci/es1968.c:1671:
+	es = kcalloc(sizeof(*es), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#562: FILE: sound/pci/es1968.c:2574:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#583: FILE: sound/pci/fm801.c:1281:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#595: FILE: sound/pci/ice1712/aureon.c:421:
+	ice->akm = kcalloc(sizeof(akm4xxx_t), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#616: FILE: sound/pci/ice1712/ice1712.c:2432:
+	ice = kcalloc(sizeof(*ice), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#637: FILE: sound/pci/ice1712/ice1724.c:1945:
+	ice = kcalloc(sizeof(*ice), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#649: FILE: sound/pci/ice1712/prodigy.c:591:
+	ice->akm = kcalloc(sizeof(akm4xxx_t), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#661: FILE: sound/pci/ice1712/revo.c:139:
+	ak = ice->akm = kcalloc(sizeof(akm4xxx_t) * 2, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#661: FILE: sound/pci/ice1712/revo.c:139:
+	ak = ice->akm = kcalloc(sizeof(akm4xxx_t) * 2, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#682: FILE: sound/pci/intel8x0.c:2439:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#703: FILE: sound/pci/intel8x0m.c:1214:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: sound/pci/korg1212/korg1212.c:2173:
+        kfree(korg1212);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: sound/pci/korg1212/korg1212.c:2173:
+        kfree(korg1212);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: sound/pci/korg1212/korg1212.c:2203:
+        korg1212 = kcalloc(sizeof(*korg1212), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: sound/pci/korg1212/korg1212.c:2203:
+        korg1212 = kcalloc(sizeof(*korg1212), GFP_KERNEL);$

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#724: FILE: sound/pci/korg1212/korg1212.c:2203:
+        korg1212 = kcalloc(sizeof(*korg1212), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#745: FILE: sound/pci/maestro3.c:2557:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#775: FILE: sound/pci/mixart/mixart.c:1002:
+	mgr->chip[idx] = chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#775: FILE: sound/pci/mixart/mixart.c:1002:
+	mgr->chip[idx] = chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#793: FILE: sound/pci/mixart/mixart.c:1299:
+	mgr = kcalloc(sizeof(*mgr), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#814: FILE: sound/pci/nm256/nm256.c:1403:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#835: FILE: sound/pci/sonicvibes.c:1259:
+	sonic = kcalloc(sizeof(*sonic), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#847: FILE: sound/pci/trident/trident_main.c:2970:
+	uctl = kcalloc(sizeof(*uctl), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#856: FILE: sound/pci/trident/trident_main.c:3555:
+	trident = kcalloc(sizeof(*trident), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#886: FILE: sound/pci/via82xx.c:1926:
+	if ((chip = kcalloc(sizeof(*chip), GFP_KERNEL)) == NULL)

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#886: FILE: sound/pci/via82xx.c:1926:
+	if ((chip = kcalloc(sizeof(*chip), GFP_KERNEL)) == NULL)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#910: FILE: sound/pci/ymfpci/ymfpci_main.c:836:
 	if (ypcm)
+		kfree(ypcm);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#919: FILE: sound/pci/ymfpci/ymfpci_main.c:845:
+	ypcm = kcalloc(sizeof(*ypcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#928: FILE: sound/pci/ymfpci/ymfpci_main.c:961:
+	ypcm = kcalloc(sizeof(*ypcm), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#946: FILE: sound/pci/ymfpci/ymfpci_main.c:2248:
+	chip = kcalloc(sizeof(*chip), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 54 warnings, 2 checks, 703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
