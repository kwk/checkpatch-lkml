WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
--- linux-2.6.7/arch/x86_64/lib/dec_and_lock.c_orig	2004-08-20 11:52:46.000000000 +0200

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: include/asm-x86_64/lockmeter.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#93: FILE: include/asm-x86_64/lockmeter.h:44:
+typedef struct inst_spinlock_s {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#98: FILE: include/asm-x86_64/lockmeter.h:49:
+#define PUT_INDEX(lock_ptr,indexv) ((inst_spinlock_t *)(lock_ptr))->index = indexv
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#98: FILE: include/asm-x86_64/lockmeter.h:49:
+#define PUT_INDEX(lock_ptr,indexv) ((inst_spinlock_t *)(lock_ptr))->index = indexv

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#99: FILE: include/asm-x86_64/lockmeter.h:50:
+#define GET_INDEX(lock_ptr)        ((inst_spinlock_t *)(lock_ptr))->index

WARNING:NEW_TYPEDEFS: do not add new typedefs
#111: FILE: include/asm-x86_64/lockmeter.h:62:
+typedef struct inst_rwlock_s {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#112: FILE: include/asm-x86_64/lockmeter.h:63:
+	volatile int lock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-x86_64/lockmeter.h:67:
+#define PUT_RWINDEX(rwlock_ptr,indexv) ((inst_rwlock_t *)(rwlock_ptr))->index = indexv
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#116: FILE: include/asm-x86_64/lockmeter.h:67:
+#define PUT_RWINDEX(rwlock_ptr,indexv) ((inst_rwlock_t *)(rwlock_ptr))->index = indexv

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#117: FILE: include/asm-x86_64/lockmeter.h:68:
+#define GET_RWINDEX(rwlock_ptr)        ((inst_rwlock_t *)(rwlock_ptr))->index

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: include/asm-x86_64/lockmeter.h:69:
+#define PUT_RW_CPU(rwlock_ptr,cpuv)    ((inst_rwlock_t *)(rwlock_ptr))->cpu = cpuv
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#118: FILE: include/asm-x86_64/lockmeter.h:69:
+#define PUT_RW_CPU(rwlock_ptr,cpuv)    ((inst_rwlock_t *)(rwlock_ptr))->cpu = cpuv

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#119: FILE: include/asm-x86_64/lockmeter.h:70:
+#define GET_RW_CPU(rwlock_ptr)         ((inst_rwlock_t *)(rwlock_ptr))->cpu

CHECK:SPACING: No space is necessary after a cast
#128: FILE: include/asm-x86_64/lockmeter.h:79:
+	int tmp = (int) rwlock_ptr->lock;

CHECK:SPACING: No space is necessary after a cast
#135: FILE: include/asm-x86_64/lockmeter.h:86:
+		tmp = (int) rwlock_ptr->lock;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: include/asm-x86_64/lockmeter.h:88:
+	if (tmp == 0) return(0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#138: FILE: include/asm-x86_64/lockmeter.h:89:
+	else return(RW_LOCK_BIAS-tmp);
 	                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#138: FILE: include/asm-x86_64/lockmeter.h:89:
+	else return(RW_LOCK_BIAS-tmp);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#146: FILE: include/asm-x86_64/lockmeter.h:97:
+#define IABS(x) ((x) > 0 ? (x) : -(x))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: include/asm-x86_64/lockmeter.h:101:
+^I^I^I^I   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#158: FILE: arch/x86_64/Kconfig.debug:65:
+config LOCKMETER
+	bool "Kernel lock metering"
+	depends on SMP
+	help
+	  Say Y to enable kernel lock metering, which adds overhead to SMP locks,
+	  but allows you to see various statistics using the lockstat command.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#177: FILE: include/asm-x86_64/spinlock.h:174:
+	unsigned lockmeter_magic;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#188: FILE: include/asm-x86_64/spinlock.h:185:
+#define RWLOCK_MAGIC_INIT	, 0, RWLOCK_MAGIC
                          	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#188: FILE: include/asm-x86_64/spinlock.h:185:
+#define RWLOCK_MAGIC_INIT	, 0, RWLOCK_MAGIC

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#190: FILE: include/asm-x86_64/spinlock.h:187:
+#define RWLOCK_MAGIC_INIT	, 0
                          	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#190: FILE: include/asm-x86_64/spinlock.h:187:
+#define RWLOCK_MAGIC_INIT	, 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: include/asm-x86_64/spinlock.h:247:
+	atomic_t *count = (atomic_t *)lock;
+	atomic_dec(count);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: include/asm-x86_64/spinlock.h:256:
+extern void _metered_spin_lock  (spinlock_t *lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: include/asm-x86_64/spinlock.h:256:
+extern void _metered_spin_lock  (spinlock_t *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/asm-x86_64/spinlock.h:257:
+extern void _metered_spin_unlock(spinlock_t *lock);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#235: FILE: include/asm-x86_64/spinlock.h:271:
+	newcount = counter-1;
 	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#241: FILE: include/asm-x86_64/spinlock.h:277:
+		:"=a" (newcount)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#242: FILE: include/asm-x86_64/spinlock.h:278:
+		:"r" (newcount), "m" (atomic->counter), "0" (counter));
 		^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257992.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 9 warnings, 7 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257992.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
