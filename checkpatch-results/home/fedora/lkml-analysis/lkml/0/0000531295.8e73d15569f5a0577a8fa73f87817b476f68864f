WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#35: 
Aattached is a (large, but self contained) patch for Cobalt Networks suport
                                                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -ruN dist-2.4.5/drivers/cobalt/README cobalt-2.4.5/drivers/cobalt/README

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/cobalt/ruler.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: drivers/cobalt/ruler.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/cobalt/ruler.c:2:
+ * cobalt ruler driver $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#87: FILE: drivers/cobalt/ruler.c:4:
+ * $Id: ruler.c,v 1.10 2001/05/30 07:19:48 thockin Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#117: FILE: drivers/cobalt/ruler.c:34:
+#include <asm/io.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#126: FILE: drivers/cobalt/ruler.c:43:
+#define LED_SLED0		(1 << 3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#127: FILE: drivers/cobalt/ruler.c:44:
+#define LED_SLED1		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#128: FILE: drivers/cobalt/ruler.c:45:
+#define LED_SLED2		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#129: FILE: drivers/cobalt/ruler.c:46:
+#define LED_SLED3		(1 << 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/cobalt/ruler.c:55:
+static atomic_t switches = ATOMIC_INIT(0);^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: drivers/cobalt/ruler.c:64:
+	u8 state = 0;
+	if (cobt_is_5k()) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/cobalt/ruler.c:69:
+^I^I^Istate = cobalt_i2c_read_byte(COBALT_I2C_DEV_DRV_SWITCH, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/cobalt/ruler.c:70:
+			state = cobalt_i2c_read_byte(COBALT_I2C_DEV_DRV_SWITCH, 
+				0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#154: FILE: drivers/cobalt/ruler.c:71:
+			if ((state & 0xf0) != 0xf0) {
+				break;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/cobalt/ruler.c:82:
+ * NOTE: all the reset lines are kept high. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/cobalt/ruler.c:83:
+ * NOTE: the reset lines are in the reverse order of the switches. $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#196: FILE: drivers/cobalt/ruler.c:113:
+		switch (arg) {
+			case BUSSTATE_ON:
[...]
+			case BUSSTATE_OFF:
+			case BUSSTATE_TRISTATE:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/cobalt/ruler.c:115:
+^I^I^I^Iset_sled_leds(get_sled_leds() & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/cobalt/ruler.c:120:
+^I^I^I^Iset_sled_leds(get_sled_leds() | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/cobalt/ruler.c:132:
+static void $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#224: FILE: drivers/cobalt/ruler.c:141:
+		if ((state & 0xf0) == 0xf0) {
+			return;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/cobalt/ruler.c:145:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/cobalt/ruler.c:149:
+^I^I  ^Ibit = 1 << i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: drivers/cobalt/ruler.c:149:
+^I^I  ^Ibit = 1 << i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/cobalt/ruler.c:157:
+^I^I  ^Iif (now) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: drivers/cobalt/ruler.c:157:
+^I^I  ^Iif (now) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/cobalt/ruler.c:160:
+^I^I    ^I^Iif (channels[i]) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/cobalt/ruler.c:160:
+^I^I    ^I^Iif (channels[i]) {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: drivers/cobalt/ruler.c:161:
+					printk("disabling ide ruler "

WARNING:SPLIT_STRING: quoted string split across lines
#245: FILE: drivers/cobalt/ruler.c:162:
+					printk("disabling ide ruler "
+						"channel %d\n", i);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/cobalt/ruler.c:163:
+^I^I^I^I^Ido_busproc(i, channels[i], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/cobalt/ruler.c:164:
+					do_busproc(i, channels[i], 
+						BUSSTATE_TRISTATE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/cobalt/ruler.c:165:
+^I^I    ^I^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/cobalt/ruler.c:165:
+^I^I    ^I^I} else {$

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: drivers/cobalt/ruler.c:167:
+					WPRINTK("drive detach on bad "
+						"channel (%d)\n", i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: drivers/cobalt/ruler.c:169:
+^I^I^I^Iset_sled_leds(get_sled_leds() | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/cobalt/ruler.c:171:
+^I^I  ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/cobalt/ruler.c:171:
+^I^I  ^I} else {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/cobalt/ruler.c:172:
+^I^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/cobalt/ruler.c:173:
+^I^I^I^I * do we want to do anything when a re-attach $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/cobalt/ruler.c:182:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/cobalt/ruler.c:193:
+^I^I $

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#278: FILE: drivers/cobalt/ruler.c:195:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/cobalt/ruler.c:208:
+^I^Istatic int ledmap[MAX_COBT_DRIVES] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/cobalt/ruler.c:216:
+^I^I^Iif (channels[i] && channels[i]->drives[0].present $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: drivers/cobalt/ruler.c:217:
+			if (channels[i] && channels[i]->drives[0].present 
+			 && channels[i]->drives[0].service_start != old[i]) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#325: FILE: drivers/cobalt/ruler.c:242:
+			if (channels[idx] == hwif) {
+				break;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/cobalt/ruler.c:253:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/cobalt/ruler.c:255:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#339: FILE: drivers/cobalt/ruler.c:256:
+	
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/cobalt/ruler.c:260:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/cobalt/ruler.c:261:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/cobalt/ruler.c:264:
+void $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#355: FILE: drivers/cobalt/ruler.c:272:
+		if (!hwif) {
+			return;
+		}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#362: FILE: drivers/cobalt/ruler.c:279:
+		if (dev->vendor != PCI_VENDOR_ID_TTI
+		 || dev->device != PCI_DEVICE_ID_TTI_HPT366

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#363: FILE: drivers/cobalt/ruler.c:280:
+		 || dev->device != PCI_DEVICE_ID_TTI_HPT366
+		 || dev->bus->number != 1) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: drivers/cobalt/ruler.c:286:
+		if (dev->devfn == PCI_DEVFN(3,0)) {
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#369: FILE: drivers/cobalt/ruler.c:286:
+		if (dev->devfn == PCI_DEVFN(3,0)) {
[...]
+		} else if (dev->devfn == PCI_DEVFN(4,0)) {
[...]
+		} else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/cobalt/ruler.c:288:
+		} else if (dev->devfn == PCI_DEVFN(4,0)) {
 		                                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#377: FILE: drivers/cobalt/ruler.c:294:
+		if (idx >= MAX_COBT_DRIVES) {
+		       return;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#377: FILE: drivers/cobalt/ruler.c:294:
+		if (idx >= MAX_COBT_DRIVES) {
+		       return;
+		}

WARNING:TABSTOP: Statements should start on a tabstop
#378: FILE: drivers/cobalt/ruler.c:295:
+		       return;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/cobalt/ruler.c:317:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: drivers/cobalt/ruler.c:338:
+void $

WARNING:LINE_SPACING: Missing a blank line after declarations
#426: FILE: drivers/cobalt/ruler.c:343:
+		unsigned long flags;
+		spin_lock_irqsave(&rled_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: drivers/cobalt/ruler.c:350:
+int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/cobalt/ruler.c:369:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/cobalt/ruler.c:373:
+^I^I^IEPRINTK("can't register interrupt handler %p\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: drivers/cobalt/ruler.c:384:
+^I^I^IEPRINTK("can't register LED handler %p\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/cobalt/ruler.c:388:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#472: FILE: drivers/cobalt/ruler.c:389:
+		printk(KERN_INFO "Cobalt Networks ruler driver v1.2\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#481: FILE: drivers/cobalt/serialnum.c:1:
+/* $Id: serialnum.c,v 1.4 2001/05/30 07:19:48 thockin Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#481: FILE: drivers/cobalt/serialnum.c:1:
+/* $Id: serialnum.c,v 1.4 2001/05/30 07:19:48 thockin Exp $ */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/cobalt/serialnum.c:13:
+ *   It exports /proc/cobalt/hostid which is four bytes generated from of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: drivers/cobalt/serialnum.c:14:
+ *   the id. It can be linked to /var/adm/hostid or /etc/hostid for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/cobalt/serialnum.c:17:
+ *   It exports /proc/cobalt/serialnumber which is the entire 64 bit value $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#514: FILE: drivers/cobalt/serialnum.c:34:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#515: FILE: drivers/cobalt/serialnum.c:35:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#528: FILE: drivers/cobalt/serialnum.c:48:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#531: FILE: drivers/cobalt/serialnum.c:51:
+#include <asm/io.h>

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#584: FILE: drivers/cobalt/serialnum.c:104:
+	if (len > plen) {
[...]
+	} else {
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#596: FILE: drivers/cobalt/serialnum.c:116:
+	if (pos >= plen+1) {
 	               ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#605: FILE: drivers/cobalt/serialnum.c:125:
+	if (len > plen) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: drivers/cobalt/serialnum.c:133:
+static int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: drivers/cobalt/serialnum.c:140:
+^I^Iid_dev = pci_find_device(PCI_VENDOR_ID_AL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: drivers/cobalt/serialnum.c:141:
+		id_dev = pci_find_device(PCI_VENDOR_ID_AL, 
+			PCI_DEVICE_ID_AL_M7101, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/cobalt/serialnum.c:154:
+^I^I^Ipci_write_config_byte(id_dev, sn_direction, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#635: FILE: drivers/cobalt/serialnum.c:155:
+			pci_write_config_byte(id_dev, sn_direction, 
+				data & ~sn_mask);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/cobalt/serialnum.c:165:
+^I^I^Ipci_write_config_byte(id_dev, sn_output, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: drivers/cobalt/serialnum.c:166:
+			pci_write_config_byte(id_dev, sn_output, 
+				data & ~sn_mask);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#669: FILE: drivers/cobalt/serialnum.c:189:
+			if (data & sn_mask) {
+				outb(data & ~sn_mask, sn_output);
+			}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#680: FILE: drivers/cobalt/serialnum.c:200:
+	udelay(500);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/cobalt/serialnum.c:221:
+^I^Idirection = inb(sn_direction); $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#715: FILE: drivers/cobalt/serialnum.c:235:
+	if (cobt_is_3k()) {
[...]
+	} else if (cobt_is_5k()) {
[...]

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#737: FILE: drivers/cobalt/serialnum.c:257:
+			udelay(80);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#741: FILE: drivers/cobalt/serialnum.c:261:
+			udelay(10);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#760: FILE: drivers/cobalt/serialnum.c:280:
+		if (io_read()) {
+			c |= 1 << i;
+		}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#763: FILE: drivers/cobalt/serialnum.c:283:
+		udelay(60);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#781: FILE: drivers/cobalt/serialnum.c:301:
+		if (io_read()) {
+			break;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#787: FILE: drivers/cobalt/serialnum.c:307:
+		if (debug) {
+			EPRINTK("the data line seems to be held low\n");
+		}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#796: FILE: drivers/cobalt/serialnum.c:316:
+		udelay(15);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#799: FILE: drivers/cobalt/serialnum.c:319:
+			udelay(600);	/* Wait for things to quiet down */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#817: FILE: drivers/cobalt/serialnum.c:337:
+		if (rc < 0) {
+			return rc;
+		}

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#852: FILE: drivers/cobalt/serialnum.c:372:
+	version = strchr("$Revision: 1.4 $", ':') + 2;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#857: FILE: drivers/cobalt/serialnum.c:377:
+		if ((p = strchr(vstring, ' '))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#857: FILE: drivers/cobalt/serialnum.c:377:
+		if ((p = strchr(vstring, ' '))) {
+			*p = '\0';
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#866: FILE: drivers/cobalt/serialnum.c:386:
+	if (rc) {
+		return rc;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#877: FILE: drivers/cobalt/serialnum.c:397:
+	if (rc) {
+		return rc;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#882: FILE: drivers/cobalt/serialnum.c:402:
+	for (i = 7; i >= 0; i--) {
+		sprintf(ssn_string + (7 - i) * 2, "%02x", ssn[i]);
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#887: FILE: drivers/cobalt/serialnum.c:407:
+	hostid = *(unsigned long *)ssn ^ *(unsigned long *)(ssn+4);
 	                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/cobalt/serialnum.c:411:
+^Iproc_hostid = create_proc_read_entry("hostid", 0, NULL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/cobalt/serialnum.c:412:
+	proc_hostid = create_proc_read_entry("hostid", 0, NULL, 
+		hostid_read, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#893: FILE: drivers/cobalt/serialnum.c:413:
+	if (!proc_hostid) {
+		EPRINTK("can't create /proc/hostid\n");
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: drivers/cobalt/serialnum.c:417:
+	proc_serialnum = create_proc_read_entry("serialnumber", 0, NULL,
+		serialnum_read, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#898: FILE: drivers/cobalt/serialnum.c:418:
+	if (!proc_serialnum) {
+		EPRINTK("can't create /proc/serialnumber\n");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: drivers/cobalt/serialnum.c:422:
+^Iproc_chostid = create_proc_read_entry("hostid", 0, proc_cobalt, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/cobalt/serialnum.c:423:
+	proc_chostid = create_proc_read_entry("hostid", 0, proc_cobalt, 
+		hostid_read, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#904: FILE: drivers/cobalt/serialnum.c:424:
+	if (!proc_chostid) {
+		EPRINTK("can't create /proc/cobalt/hostid\n");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: drivers/cobalt/serialnum.c:427:
+^Iproc_cserialnum = create_proc_read_entry("serialnumber", 0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/cobalt/serialnum.c:428:
+	proc_cserialnum = create_proc_read_entry("serialnumber", 0, 
+		proc_cobalt, serialnum_read, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#909: FILE: drivers/cobalt/serialnum.c:429:
+	if (!proc_cserialnum) {
+		EPRINTK("can't create /proc/cobalt/serialnumber\n");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/cobalt/serialnum.c:435:
+^Iprintk(KERN_INFO "Cobalt Networks serial number version %s: %s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#915: FILE: drivers/cobalt/serialnum.c:435:
+	printk(KERN_INFO "Cobalt Networks serial number version %s: %s\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#916: FILE: drivers/cobalt/serialnum.c:436:
+	printk(KERN_INFO "Cobalt Networks serial number version %s: %s\n", 
+		vstring, ssn_string);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#961: FILE: drivers/cobalt/systype.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#962: FILE: drivers/cobalt/systype.c:2:
+ * $Id: systype.c,v 1.4 2001/05/30 07:19:48 thockin Exp $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/cobalt/systype.c:31:
+static int systype_read_proc(char *buf, char **start, off_t pos, int len,
+	int *eof, void *x);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#994: FILE: drivers/cobalt/systype.c:34:
+int __init $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#997: FILE: drivers/cobalt/systype.c:37:
+	static int init_done = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1000: FILE: drivers/cobalt/systype.c:40:
+	if (init_done) {
+		return 0;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: drivers/cobalt/systype.c:48:
+	pdev = pci_find_device(PCI_VENDOR_ID_AL,
+		PCI_DEVICE_ID_AL_M7101, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: drivers/cobalt/systype.c:50:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: drivers/cobalt/systype.c:62:
+^I^I/* RaQ3/4 boards have DOGB (0x20) high, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1023: FILE: drivers/cobalt/systype.c:63:
+^I^I * Qube3 has DOGB low */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1023: FILE: drivers/cobalt/systype.c:63:
+		 * Qube3 has DOGB low */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/cobalt/systype.c:74:
+	pdev = pci_find_device(PCI_VENDOR_ID_SERVERWORKS,
+		PCI_DEVICE_ID_SERVERWORKS_LE, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1035: FILE: drivers/cobalt/systype.c:75:
+	if (pdev) {
+		cobt_type = COBT_RAQXTR;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: drivers/cobalt/systype.c:81:
+^Iproc_systype = create_proc_read_entry("systype", S_IFREG | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1041: FILE: drivers/cobalt/systype.c:81:
+	proc_systype = create_proc_read_entry("systype", S_IFREG | S_IRUGO, 

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: drivers/cobalt/systype.c:82:
+	proc_systype = create_proc_read_entry("systype", S_IFREG | S_IRUGO, 
+		proc_cobalt, systype_read_proc, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1043: FILE: drivers/cobalt/systype.c:83:
+	if (!proc_systype) {
+		EPRINTK("can't create /proc/cobalt/systype\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1048: FILE: drivers/cobalt/systype.c:88:
+	printk("Cobalt system type: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1050: FILE: drivers/cobalt/systype.c:90:
+		printk("unknown (trouble will ensue)\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1052: FILE: drivers/cobalt/systype.c:92:
+		return -1;
+	} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1053: FILE: drivers/cobalt/systype.c:93:
+		printk("%s\n", systype_str(cobt_type));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/cobalt/systype.c:99:
+static int $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: drivers/cobalt/systype.c:101:
+systype_read_proc(char *buf, char **start, off_t pos, int len,
+	int *eof, void *x)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1065: FILE: drivers/cobalt/systype.c:105:
+	plen += sprintf(buf+plen, "%s\n", systype_str(cobt_type));
 	                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: drivers/cobalt/systype.c:107:
+        if (pos >= plen) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: drivers/cobalt/systype.c:107:
+        if (pos >= plen) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1075: FILE: drivers/cobalt/systype.c:115:
+	if (len > plen) {
[...]
+	} else {
[...]

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1085: FILE: drivers/cobalt/systype.c:125:
+	switch (type) {
+		case COBT_RAQ3:
[...]
+		case COBT_QUBE3:
[...]
+		case COBT_RAQXTR:
[...]
+		case COBT_UNKNOWN:
+		default:

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1088: FILE: drivers/cobalt/systype.c:128:
+			return "RaQ 3/4";
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1091: FILE: drivers/cobalt/systype.c:131:
+			return "Qube 3";
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1094: FILE: drivers/cobalt/systype.c:134:
+			return "RaQ XTR";
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1098: FILE: drivers/cobalt/systype.c:138:
+			return "unknown";
+			break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1106: FILE: drivers/cobalt/thermal.c:1:
+/* $Id: thermal.c,v 1.3 2001/05/30 07:19:48 thockin Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1106: FILE: drivers/cobalt/thermal.c:1:
+/* $Id: thermal.c,v 1.3 2001/05/30 07:19:48 thockin Exp $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1107: FILE: drivers/cobalt/thermal.c:2:
+ * Copyright (c) 2000-2001 Sun Microsystems, Inc $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1128: FILE: drivers/cobalt/thermal.c:23:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/cobalt/thermal.c:31:
+static int thermal_read_proc(char *buf, char **start, off_t pos, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/cobalt/thermal.c:32:
+static int thermal_read_proc(char *buf, char **start, off_t pos, int len, 
+	int *eof, void *x);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: drivers/cobalt/thermal.c:34:
+int __init $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1142: FILE: drivers/cobalt/thermal.c:37:
+	if (cobt_is_3k()) {
[...]
+	} else if (cobt_is_5k()) {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1150: FILE: drivers/cobalt/thermal.c:45:
+^Iproc_therm = create_proc_read_entry("thermal_sensors", S_IFREG, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: drivers/cobalt/thermal.c:46:
+	proc_therm = create_proc_read_entry("thermal_sensors", S_IFREG, 
+		proc_cobalt, thermal_read_proc, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: drivers/cobalt/thermal.c:47:
+        if (!proc_therm) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/cobalt/thermal.c:47:
+        if (!proc_therm) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1152: FILE: drivers/cobalt/thermal.c:47:
+        if (!proc_therm) {
+		EPRINTK("can't create /proc/cobalt/thermal_sensors\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1157: FILE: drivers/cobalt/thermal.c:52:
+	printk("Cobalt Networks thermal sensors v1.4\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1170: FILE: drivers/cobalt/thermal.c:65:
+#define min(a,b)  ((a) < (b) ? (a) : (b))
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1170: FILE: drivers/cobalt/thermal.c:65:
+#define min(a,b)  ((a) < (b) ? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#1170: FILE: drivers/cobalt/thermal.c:65:
+#define min(a,b)  ((a) < (b) ? (a) : (b))

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1179: FILE: drivers/cobalt/thermal.c:74:
+	static int last_val = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1181: FILE: drivers/cobalt/thermal.c:76:
+	if (sensor > cobalt_thermal_id_max) {
+		return NULL;
+	}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1190: FILE: drivers/cobalt/thermal.c:85:
+			(sensor<<1) + 1, LM77_TEMP);
 			       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1196: FILE: drivers/cobalt/thermal.c:91:
+        ^Ival = (tmp<<8 & 0xff00) + (tmp>>8 & 0x00ff);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1196: FILE: drivers/cobalt/thermal.c:91:
+        ^Ival = (tmp<<8 & 0xff00) + (tmp>>8 & 0x00ff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: drivers/cobalt/thermal.c:91:
+        ^Ival = (tmp<<8 & 0xff00) + (tmp>>8 & 0x00ff);$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1196: FILE: drivers/cobalt/thermal.c:91:
+        	val = (tmp<<8 & 0xff00) + (tmp>>8 & 0x00ff);
         	          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1196: FILE: drivers/cobalt/thermal.c:91:
+        	val = (tmp<<8 & 0xff00) + (tmp>>8 & 0x00ff);
         	                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1211: FILE: drivers/cobalt/thermal.c:106:
+	sprintf(temp, "%d", val>>4);
 	                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1212: FILE: drivers/cobalt/thermal.c:107:
+	if (val & 0x0008) {
+		sprintf(temp+strlen(temp), ".5");
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1213: FILE: drivers/cobalt/thermal.c:108:
+		sprintf(temp+strlen(temp), ".5");
 		            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1218: FILE: drivers/cobalt/thermal.c:113:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/cobalt/thermal.c:114:
+thermal_read_proc(char *buf, char **start, off_t pos, int len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: drivers/cobalt/thermal.c:115:
+thermal_read_proc(char *buf, char **start, off_t pos, int len, 
+	int *eof, void *x)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1227: FILE: drivers/cobalt/thermal.c:122:
+		char *c;
+		c = cobalt_temp_read(i);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1228: FILE: drivers/cobalt/thermal.c:123:
+		if (!c) {
+			continue;
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1231: FILE: drivers/cobalt/thermal.c:126:
+		plen += sprintf(buf+plen, "%d: %s\n", i, c);
 		                   ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1242: FILE: drivers/cobalt/thermal.c:137:
+	if (len > plen) {
[...]
+	} else {
[...]

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1254: FILE: drivers/cobalt/wdt.c:1:
+/* $Id: wdt.c,v 1.8 2001/05/30 22:34:57 thockin Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1254: FILE: drivers/cobalt/wdt.c:1:
+/* $Id: wdt.c,v 1.8 2001/05/30 22:34:57 thockin Exp $ */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: drivers/cobalt/wdt.c:2:
+/* $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1284: FILE: drivers/cobalt/wdt.c:31:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: drivers/cobalt/wdt.c:59:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: drivers/cobalt/wdt.c:60:
+static unsigned long  __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: drivers/cobalt/wdt.c:64:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1319: FILE: drivers/cobalt/wdt.c:66:
+^I^I * of a 1 second timeout. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1325: FILE: drivers/cobalt/wdt.c:72:
+^I^Icobalt_pmu = pci_find_device(PCI_VENDOR_ID_AL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1326: FILE: drivers/cobalt/wdt.c:73:
+		cobalt_pmu = pci_find_device(PCI_VENDOR_ID_AL, 
+			PCI_DEVICE_ID_AL_M7101, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1332: FILE: drivers/cobalt/wdt.c:79:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: drivers/cobalt/wdt.c:81:
+^I^Isouth = pci_find_device(PCI_VENDOR_ID_AL, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1335: FILE: drivers/cobalt/wdt.c:82:
+		south = pci_find_device(PCI_VENDOR_ID_AL, 
+			PCI_DEVICE_ID_AL_M1533, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1340: FILE: drivers/cobalt/wdt.c:87:
+^I^I        /* reversion # is here - must match ???1001?(b)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1341: FILE: drivers/cobalt/wdt.c:88:
+			 * else use PIC for WDT */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1355: FILE: drivers/cobalt/wdt.c:102:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: drivers/cobalt/wdt.c:103:
+^I^I * Set up the Nat. Semi SuperI/O for Monterey. It has a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1357: FILE: drivers/cobalt/wdt.c:104:
+^I^I * minimum of a 1 minute timeout. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: drivers/cobalt/wdt.c:106:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: drivers/cobalt/wdt.c:108:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1368: FILE: drivers/cobalt/wdt.c:115:
+^I^Isuperio_pm_port |= inb(SUPERIO_DATA_PORT); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: drivers/cobalt/wdt.c:118:
+^I^I^Ioutb(SUPERIO_TIMEOUT, superio_pm_port + 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: drivers/cobalt/wdt.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1382: FILE: drivers/cobalt/wdt.c:129:
+void __init $

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1391: FILE: drivers/cobalt/wdt.c:138:
+	udelay(100);

CHECK:SPACING: No space is necessary after a cast
#1399: FILE: drivers/cobalt/wdt.c:146:
+	tsc_per_wdt = (int) (stop - start) * 10 * (1000 * wdt_timeout / HZ);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1410: FILE: drivers/cobalt/wdt.c:157:
+	printk("Cobalt Networks watchdog v1.4");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1411: FILE: drivers/cobalt/wdt.c:158:
+	if (cobt_is_3k() && use_pic) {
+		printk(" (old revision board: using PIC controller)");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1412: FILE: drivers/cobalt/wdt.c:159:
+		printk(" (old revision board: using PIC controller)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1414: FILE: drivers/cobalt/wdt.c:161:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1428: FILE: drivers/cobalt/wdt.c:175:
+^I^Ipci_write_config_byte(cobalt_pmu, ALI_7101_WDT, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1429: FILE: drivers/cobalt/wdt.c:176:
+		pci_write_config_byte(cobalt_pmu, ALI_7101_WDT, 
+			(tmp & ~ALI_WDT_ARM));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1432: FILE: drivers/cobalt/wdt.c:179:
+		unsigned long flags;
+		spin_lock_irqsave(&cobalt_superio_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1446: FILE: drivers/cobalt/wdt.c:193:
+^I^Ipci_write_config_byte(cobalt_pmu, ALI_7101_WDT, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: drivers/cobalt/wdt.c:194:
+		pci_write_config_byte(cobalt_pmu, ALI_7101_WDT, 
+			(tmp | ALI_WDT_ARM));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1455: FILE: drivers/cobalt/wdt.c:202:
+		unsigned long flags;
+		spin_lock_irqsave(&cobalt_superio_lock, flags);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1465: FILE: drivers/cobalt/wdt.c:212:
+	if (!initialized) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1470: FILE: drivers/cobalt/wdt.c:217:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1475: FILE: drivers/cobalt/wdt.c:222:
+EXPORT_SYMBOL(cobalt_wdt_refresh);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/cobalt/wdt.c:223:
+void $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1493: FILE: drivers/cobalt/wdt.c:240:
+	static unsigned long long last_tsc = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1496: FILE: drivers/cobalt/wdt.c:243:
+	if (!initialized || (atomic_read(&cobalt_wdt_disable_count) > 0)) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1502: FILE: drivers/cobalt/wdt.c:249:
+	if ((int)(tmp - last_tsc) < tsc_per_wdt) {
+		return;
+	}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1512: FILE: drivers/cobalt/wdt.c:259:
+EXPORT_SYMBOL(cobalt_wdt_cleardog);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: drivers/cobalt/wdt.c:260:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: drivers/cobalt/wdt.c:274:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1529: FILE: drivers/cobalt/wdt.c:276:
+ * 5k machines. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1532: FILE: drivers/cobalt/wdt.c:279:
+void $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1557: FILE: drivers/cobalt/wdt.c:304:
+	if (!initialized) {
+		return;
+	}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1568: FILE: drivers/cobalt/wdt.c:315:
+EXPORT_SYMBOL(cobalt_wdt_disable);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1569: FILE: drivers/cobalt/wdt.c:316:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1593: FILE: drivers/cobalt/wdt.c:340:
+^Iif (!initialized) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1593: FILE: drivers/cobalt/wdt.c:340:
+	if (!initialized) { 
+		return;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1608: FILE: drivers/cobalt/wdt.c:355:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1609: FILE: drivers/cobalt/wdt.c:356:
+EXPORT_SYMBOL(cobalt_wdt_reenable);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1610: FILE: drivers/cobalt/wdt.c:357:
+void $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1629: FILE: include/linux/cobalt-acpi.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1630: FILE: include/linux/cobalt-acpi.h:2:
+ * $Id: $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1639: FILE: include/linux/cobalt-acpi.h:11:
+extern int cobalt_acpi_register_handler(void (*function)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1641: FILE: include/linux/cobalt-acpi.h:13:
+extern int cobalt_acpi_unregister_handler(void (*function)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1649: FILE: include/linux/cobalt.h:1:
+/* $Id: cobalt.h,v 1.5 2001/05/30 07:19:48 thockin Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1649: FILE: include/linux/cobalt.h:1:
+/* $Id: cobalt.h,v 1.5 2001/05/30 07:19:48 thockin Exp $ */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1675: FILE: include/linux/cobalt.h:27:
+	printk(KERN_ERR "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1675: FILE: include/linux/cobalt.h:27:
+	printk(KERN_ERR "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1675: FILE: include/linux/cobalt.h:27:
+	printk(KERN_ERR "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1675: FILE: include/linux/cobalt.h:27:
+	printk(KERN_ERR "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1675: FILE: include/linux/cobalt.h:27:
+	printk(KERN_ERR "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1678: FILE: include/linux/cobalt.h:30:
+	printk(KERN_WARNING "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1678: FILE: include/linux/cobalt.h:30:
+	printk(KERN_WARNING "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1678: FILE: include/linux/cobalt.h:30:
+	printk(KERN_WARNING "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                                           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1678: FILE: include/linux/cobalt.h:30:
+	printk(KERN_WARNING "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)
 	                                                          ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1678: FILE: include/linux/cobalt.h:30:
+	printk(KERN_WARNING "%s:%s" fmt , __FILE__ , __FUNCTION__ , ##args)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1729: FILE: include/linux/cobalt-i2c.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1730: FILE: include/linux/cobalt-i2c.h:2:
+ * $Id: cobalt-i2c.h,v 1.1 2001/03/07 01:58:24 thockin Exp $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1753: FILE: include/linux/cobalt-i2c.h:25:
+extern int cobalt_i2c_reset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1754: FILE: include/linux/cobalt-i2c.h:26:
+extern int cobalt_i2c_read_byte(const int dev, const int index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1755: FILE: include/linux/cobalt-i2c.h:27:
+extern int cobalt_i2c_read_word(const int dev, const int index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1756: FILE: include/linux/cobalt-i2c.h:28:
+extern int cobalt_i2c_read_block(const int dev, const int index,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1758: FILE: include/linux/cobalt-i2c.h:30:
+extern int cobalt_i2c_write_byte(const int dev, const int index,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1760: FILE: include/linux/cobalt-i2c.h:32:
+extern int cobalt_i2c_write_word(const int dev, const int index,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1762: FILE: include/linux/cobalt-i2c.h:34:
+extern int cobalt_i2c_write_block(const int dev, const int index,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1770: FILE: include/linux/cobalt-lcd.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1771: FILE: include/linux/cobalt-lcd.h:2:
+ * $Id: cobalt-lcd.h,v 1.2 2001/04/11 03:53:41 thockin Exp $

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#1773: FILE: include/linux/cobalt-lcd.h:4:
+ *                (must be useable from both kernel and user space)
                            ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1778: FILE: include/linux/cobalt-lcd.h:9:
+ * By:^IAndrew Bose^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1796: FILE: include/linux/cobalt-lcd.h:27:
+        unsigned long buttons;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1796: FILE: include/linux/cobalt-lcd.h:27:
+        unsigned long buttons;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1797: FILE: include/linux/cobalt-lcd.h:28:
+        int size1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1797: FILE: include/linux/cobalt-lcd.h:28:
+        int size1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1798: FILE: include/linux/cobalt-lcd.h:29:
+        int size2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: include/linux/cobalt-lcd.h:29:
+        int size2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1799: FILE: include/linux/cobalt-lcd.h:30:
+        unsigned char line1[COBALT_LCD_LINELEN];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1799: FILE: include/linux/cobalt-lcd.h:30:
+        unsigned char line1[COBALT_LCD_LINELEN];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1800: FILE: include/linux/cobalt-lcd.h:31:
+        unsigned char line2[COBALT_LCD_LINELEN];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1800: FILE: include/linux/cobalt-lcd.h:31:
+        unsigned char line2[COBALT_LCD_LINELEN];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1801: FILE: include/linux/cobalt-lcd.h:32:
+        unsigned char cursor_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1801: FILE: include/linux/cobalt-lcd.h:32:
+        unsigned char cursor_address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1802: FILE: include/linux/cobalt-lcd.h:33:
+        unsigned char character;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1802: FILE: include/linux/cobalt-lcd.h:33:
+        unsigned char character;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1803: FILE: include/linux/cobalt-lcd.h:34:
+        unsigned char leds;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1803: FILE: include/linux/cobalt-lcd.h:34:
+        unsigned char leds;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1804: FILE: include/linux/cobalt-lcd.h:35:
+        unsigned char *RomImage;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1804: FILE: include/linux/cobalt-lcd.h:35:
+        unsigned char *RomImage;$

CHECK:CAMELCASE: Avoid CamelCase: <RomImage>
#1804: FILE: include/linux/cobalt-lcd.h:35:
+        unsigned char *RomImage;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1825: FILE: include/linux/cobalt-lcd.h:56:
+#define LCD_Read^I^I12^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1826: FILE: include/linux/cobalt-lcd.h:57:
+#define LCD_Write^I^I13^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1837: FILE: include/linux/cobalt-lcd.h:68:
+#define LED_Set^I^I^I40^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1840: FILE: include/linux/cobalt-lcd.h:71:
+#define LED32_Set^I^I43^I$

CHECK:CAMELCASE: Avoid CamelCase: <LED32_Set>
#1840: FILE: include/linux/cobalt-lcd.h:71:
+#define LED32_Set		43	

CHECK:CAMELCASE: Avoid CamelCase: <LED32_Bit_Set>
#1841: FILE: include/linux/cobalt-lcd.h:72:
+#define LED32_Bit_Set		44

CHECK:CAMELCASE: Avoid CamelCase: <LED32_Bit_Clear>
#1842: FILE: include/linux/cobalt-lcd.h:73:
+#define LED32_Bit_Clear		45

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1845: FILE: include/linux/cobalt-lcd.h:76:
+#define BUTTON_Read^I^I50  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1864: FILE: include/linux/cobalt-led.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1865: FILE: include/linux/cobalt-led.h:2:
+ * $Id: cobalt-led.h,v 1.1 2001/04/11 03:53:41 thockin Exp $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1871: FILE: include/linux/cobalt-led.h:8:
+ * By:^IAndrew Bose^I$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1884: FILE: include/linux/cobalt-led.h:21:
+#define LED_SHUTDOWN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1885: FILE: include/linux/cobalt-led.h:22:
+#define LED_WEBLIGHT		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1886: FILE: include/linux/cobalt-led.h:23:
+#define LED_COBALTLOGO		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1887: FILE: include/linux/cobalt-led.h:24:
+#define LED_ETH0_TXRX		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1888: FILE: include/linux/cobalt-led.h:25:
+#define LED_ETH0_LINK		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1889: FILE: include/linux/cobalt-led.h:26:
+#define LED_ETH1_TXRX		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1890: FILE: include/linux/cobalt-led.h:27:
+#define LED_ETH1_LINK		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1891: FILE: include/linux/cobalt-led.h:28:
+#define LED_DISK0		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1892: FILE: include/linux/cobalt-led.h:29:
+#define LED_DISK1		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1893: FILE: include/linux/cobalt-led.h:30:
+#define LED_DISK2		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1894: FILE: include/linux/cobalt-led.h:31:
+#define LED_DISK3		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1895: FILE: include/linux/cobalt-led.h:32:
+#define LED_SYSFAULT		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1896: FILE: include/linux/cobalt-led.h:33:
+#define LED_HEART		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1897: FILE: include/linux/cobalt-led.h:34:
+#define LED_SPARE		(1 << 13)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1900: FILE: include/linux/cobalt-led.h:37:
+extern void cobalt_led_set(const unsigned int leds);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1901: FILE: include/linux/cobalt-led.h:38:
+extern void cobalt_led_set_lazy(const unsigned int leds);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1902: FILE: include/linux/cobalt-led.h:39:
+extern unsigned int cobalt_led_get(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1903: FILE: include/linux/cobalt-led.h:40:
+extern int cobalt_fpled_register(unsigned int (*fn)(void *), void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1904: FILE: include/linux/cobalt-led.h:41:
+extern int cobalt_fpled_unregister(unsigned int (*fn)(void *), void *data);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1913: FILE: include/linux/cobalt-misc.h:1:
+/* $Id: $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1913: FILE: include/linux/cobalt-misc.h:1:
+/* $Id: $ */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1928: FILE: include/linux/cobalt-net.h:1:
+/* $Id: cobalt-net.h,v 1.1 2001/04/13 02:15:35 thockin Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1928: FILE: include/linux/cobalt-net.h:1:
+/* $Id: cobalt-net.h,v 1.1 2001/04/13 02:15:35 thockin Exp $ */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1943: FILE: include/linux/cobalt-ruler.h:1:
+/* $Id: cobalt-ruler.h,v 1.2 2001/04/27 03:13:53 thockin Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1943: FILE: include/linux/cobalt-ruler.h:1:
+/* $Id: cobalt-ruler.h,v 1.2 2001/04/27 03:13:53 thockin Exp $ */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1959: FILE: include/linux/cobalt-serialnum.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1960: FILE: include/linux/cobalt-serialnum.h:2:
+ * $Id: $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1979: FILE: include/linux/cobalt-superio.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1980: FILE: include/linux/cobalt-superio.h:2:
+ * $Id: cobalt-superio.h,v 1.1 2001/03/07 01:58:24 thockin Exp $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2024: FILE: include/linux/cobalt-systype.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2025: FILE: include/linux/cobalt-systype.h:2:
+ * $Id: cobalt-systype.h,v 1.1 2001/03/07 01:58:24 thockin Exp $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2036: FILE: include/linux/cobalt-systype.h:13:
+typedef enum {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2057: FILE: include/linux/cobalt-thermal.h:1:
+/* $Id: $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2057: FILE: include/linux/cobalt-thermal.h:1:
+/* $Id: $ */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2073: FILE: include/linux/cobalt-wdt.h:1:
+/* $Id: $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2073: FILE: include/linux/cobalt-wdt.h:1:
+/* $Id: $ */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2113: FILE: Documentation/Configure.help:13044:
+  This option enables support for the 3000 series of Cobalt Networks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2116: FILE: Documentation/Configure.help:13047:
+  This platform uses an AMD K6-2 processor, an ALI M1541/1533 chipset, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2117: FILE: Documentation/Configure.help:13048:
+  an optional NCR 53c875 SCSI controller, and two Intel 82559ER or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2120: FILE: Documentation/Configure.help:13051:
+  Getting this option wrong will likely result in a kernel that does $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2124: FILE: Documentation/Configure.help:13055:
+  If you have a Cobalt Networks System, but aren't sure what kind, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2126: FILE: Documentation/Configure.help:13057:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2129: FILE: Documentation/Configure.help:13060:
+  This option enables support for the 5000 series of Cobalt Networks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2132: FILE: Documentation/Configure.help:13063:
+  This platform uses Intel Pentium III Coppermine FCPGA CPUs, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2133: FILE: Documentation/Configure.help:13064:
+  ServerWorks LE chipset (with registered ECC DIMMs only!), two $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2134: FILE: Documentation/Configure.help:13065:
+  HighPoint HPT370 IDE controllers, and two National Semiconductor $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2137: FILE: Documentation/Configure.help:13068:
+  Getting this option wrong will likely result in a kernel that does $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2141: FILE: Documentation/Configure.help:13072:
+  If you have a Cobalt Networks System, but aren't sure what kind, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2146: FILE: Documentation/Configure.help:13077:
+  This option forces some Cobalt Networks drivers to support legacy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2147: FILE: Documentation/Configure.help:13078:
+  files in /proc.  Older versions of these drivers exported files $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2148: FILE: Documentation/Configure.help:13079:
+  directly in /proc, as opposed to the newer /proc/cobalt.  If you say $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2149: FILE: Documentation/Configure.help:13080:
+  N to this option, the old filenames will no longer be exported.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2150: FILE: Documentation/Configure.help:13081:
+  Regardless of your selection here, files in /proc/cobalt will be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2157: FILE: Documentation/Configure.help:13088:
+  This enables support for the Cobalt Networks front panel.  This is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2158: FILE: Documentation/Configure.help:13089:
+  for the LCD panel and buttons.  The primary method for connection is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2160: FILE: Documentation/Configure.help:13091:
+  I2C bus.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2161: FILE: Documentation/Configure.help:13092:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2166: FILE: Documentation/Configure.help:13097:
+  This enables support for the software-controlled LEDs on Cobalt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2174: FILE: Documentation/Configure.help:13105:
+  This enables support for the on-board serial number on Cobalt Networks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2175: FILE: Documentation/Configure.help:13106:
+  systems.  This is a universally-unique 64-bit serial number.  Some $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2177: FILE: Documentation/Configure.help:13108:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2178: FILE: Documentation/Configure.help:13109:
+  If you select Y here, the files /proc/cobalt/hostid and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2179: FILE: Documentation/Configure.help:13110:
+  /proc/cobalt/serialnumber will be created.  The hostid file contains a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2180: FILE: Documentation/Configure.help:13111:
+  32 bit integer generated from the serial number, in binary form.  The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2181: FILE: Documentation/Configure.help:13112:
+  serialnumber file contains the hexadecimal representation of the serial $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2183: FILE: Documentation/Configure.help:13114:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2189: FILE: Documentation/Configure.help:13120:
+  The timer wakes up periodically, to make find out if system has hung, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2190: FILE: Documentation/Configure.help:13121:
+  or disabled interrupts too long. The result of detecting a hang is a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2204: FILE: Documentation/Configure.help:13135:
+  This enables support for the fan tachometers built into some Cobalt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2205: FILE: Documentation/Configure.help:13136:
+  Networks systems.  This driver exports /proc/cobalt/faninfo.  Some $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2206: FILE: Documentation/Configure.help:13137:
+  Cobalt software depends on this feature, and enabling it does not cause $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2216: FILE: Documentation/Configure.help:13147:
+  swapping of drives.  It is not needed for basic disk operation.  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2239: FILE: arch/i386/kernel/cobalt.c:1:
+/* $Id: cobalt.c,v 1.4 2001/04/17 05:38:51 asun Exp $ */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2239: FILE: arch/i386/kernel/cobalt.c:1:
+/* $Id: cobalt.c,v 1.4 2001/04/17 05:38:51 asun Exp $ */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2256: FILE: arch/i386/kernel/cobalt.c:18:
+void $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2263: FILE: arch/i386/kernel/cobalt.c:25:
+	printk("NMI:");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2265: FILE: arch/i386/kernel/cobalt.c:27:
+	cnb_dev = pci_find_device(PCI_VENDOR_ID_SERVERWORKS,
+		PCI_DEVICE_ID_SERVERWORKS_LE, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2267: FILE: arch/i386/kernel/cobalt.c:29:
+^I^Iprintk("%s: can't find north bridge for NMI status\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2267: FILE: arch/i386/kernel/cobalt.c:29:
+		printk("%s: can't find north bridge for NMI status\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2268: FILE: arch/i386/kernel/cobalt.c:30:
+		printk("%s: can't find north bridge for NMI status\n", 
+			__FILE__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2274: FILE: arch/i386/kernel/cobalt.c:36:
+		printk(" (PCI tx data error)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2276: FILE: arch/i386/kernel/cobalt.c:38:
+		printk(" (PCI rx data error)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2278: FILE: arch/i386/kernel/cobalt.c:40:
+		printk(" (PCI address error)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2280: FILE: arch/i386/kernel/cobalt.c:42:
+		printk(" (DRAM uncorrectable error)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2282: FILE: arch/i386/kernel/cobalt.c:44:
+		printk(" (DRAM correctable error)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2284: FILE: arch/i386/kernel/cobalt.c:46:
+		printk(" (Shutdown cycle detected)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2296: FILE: arch/i386/kernel/cobalt.c:58:
+		printk(" [memory row 0x%x, DIMM type %d "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2297: FILE: arch/i386/kernel/cobalt.c:59:
+^I^I       "(col addr=0x%x, row addr=0x%x) ECC=0x%x]", row, $

WARNING:SPLIT_STRING: quoted string split across lines
#2297: FILE: arch/i386/kernel/cobalt.c:59:
+		printk(" [memory row 0x%x, DIMM type %d "
+		       "(col addr=0x%x, row addr=0x%x) ECC=0x%x]", row, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2300: FILE: arch/i386/kernel/cobalt.c:62:
+       ^I} $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2300: FILE: arch/i386/kernel/cobalt.c:62:
+       ^I} $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2300: FILE: arch/i386/kernel/cobalt.c:62:
+       ^I} $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2300: FILE: arch/i386/kernel/cobalt.c:62:
+       ^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2301: FILE: arch/i386/kernel/cobalt.c:63:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2304: FILE: arch/i386/kernel/cobalt.c:66:
+^Ipci_write_config_byte(cnb_dev, 0x47, err); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2308: FILE: arch/i386/kernel/cobalt.c:70:
+void $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2314: FILE: arch/i386/kernel/cobalt.c:76:
+#elif defined (CONFIG_COBALT_GEN_V)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2325: FILE: arch/i386/kernel/cobalt.c:87:
+	printk("%s: can not restart - halting\n", __FILE__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: arch/i386/kernel/cobalt.c:96:
+#if defined(CONFIG_COBALT_GEN_V) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2339: FILE: arch/i386/kernel/cobalt.c:101:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2340: FILE: arch/i386/kernel/cobalt.c:102:
+^I * we want to do cpu_idle, but we don't actually want to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2341: FILE: arch/i386/kernel/cobalt.c:103:
+^I * call cpu_idle. bleah. $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2345: FILE: arch/i386/kernel/cobalt.c:107:
+		if (haltok) {
+			__asm__("hlt");
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2351: FILE: arch/i386/kernel/cobalt.c:113:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2357: FILE: arch/i386/kernel/cobalt.c:119:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2357: FILE: arch/i386/kernel/cobalt.c:119:
+       $

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2361: FILE: arch/i386/kernel/cobalt.c:123:
+		while (jiffies < start + on) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2362: FILE: arch/i386/kernel/cobalt.c:124:
+			if (haltok) __asm__("hlt");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#2369: FILE: arch/i386/kernel/cobalt.c:131:
+		while (jiffies < start + off) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2370: FILE: arch/i386/kernel/cobalt.c:132:
+			if (haltok) __asm__("hlt");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2509: FILE: arch/i386/kernel/traps.c:364:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 176 errors, 158 warnings, 85 checks, 2398 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
