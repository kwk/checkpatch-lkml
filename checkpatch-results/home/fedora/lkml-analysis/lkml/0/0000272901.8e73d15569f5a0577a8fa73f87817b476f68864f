WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
diff -urN linux-2.6.7/Documentation/MSI-HOWTO.txt patch-2.6.7-msix/Documentation/MSI-HOWTO.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: Documentation/MSI-HOWTO.txt:10:
+This guide describes the basics of Message Signaled Interrupts (MSI), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: Documentation/MSI-HOWTO.txt:11:
+the advantages of using MSI over traditional interrupt mechanisms, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: Documentation/MSI-HOWTO.txt:12:
+and how to enable your driver to use MSI or MSI-X. Also included is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: Documentation/MSI-HOWTO.txt:101:
+To allow MSI/MSI-X capable device drivers to selectively enable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: Documentation/MSI-HOWTO.txt:102:
+MSI/MSI-X (using pci_enable_msi()/pci_enable_msix() as described $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: Documentation/MSI-HOWTO.txt:103:
+below), the VECTOR based scheme needs to be enabled by setting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: Documentation/MSI-HOWTO.txt:115:
+capability structure requires a device driver to call the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: Documentation/MSI-HOWTO.txt:146:
+in this context means PCI pin-irq assertion or PCI-Express INTx $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: Documentation/MSI-HOWTO.txt:147:
+emulation. A successful MSI request (using pci_enable_msi()) switches $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/MSI-HOWTO.txt:149:
+stored in dev->irq will be saved by the PCI subsystem and a new $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: Documentation/MSI-HOWTO.txt:150:
+assigned MSI vector will replace dev->irq. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: Documentation/MSI-HOWTO.txt:152:
+To return back to its default mode, a device driver must call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: Documentation/MSI-HOWTO.txt:155:
+MSI vector as unused. Once being marked as unused, there is no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: Documentation/MSI-HOWTO.txt:159:
+may be re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: Documentation/MSI-HOWTO.txt:162:
+if no more vectors are available.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: Documentation/MSI-HOWTO.txt:167:
+the MSI-X capability structure with an independent message address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: Documentation/MSI-HOWTO.txt:169:
+the existing Linux kernel has no impact on supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: Documentation/MSI-HOWTO.txt:170:
+messages on an MSI-X capable device functions. To enable MSI-X on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: Documentation/MSI-HOWTO.txt:171:
+a device function's MSI-X capability structure requires its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: Documentation/MSI-HOWTO.txt:176:
+resources. If the PCI vector resources are available for the number $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: Documentation/MSI-HOWTO.txt:177:
+of vectors requested by a device driver, this function will configure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: Documentation/MSI-HOWTO.txt:179:
+requested messages. To emphasize this reason, for example, a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: Documentation/MSI-HOWTO.txt:180:
+may be capable for supporting the maximum of 32 vectors while its $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: Documentation/MSI-HOWTO.txt:182:
+that the device driver should call this function once during the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: Documentation/MSI-HOWTO.txt:185:
+Unlike the function pci_enable_msi(), the function pci_enable_msix() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: Documentation/MSI-HOWTO.txt:186:
+does not replace the pre-assigned IOAPIC dev->irq with a new MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: Documentation/MSI-HOWTO.txt:188:
+into the field vector of each element contained in a second argument. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: Documentation/MSI-HOWTO.txt:192:
+may result unpredictabe behavior. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: Documentation/MSI-HOWTO.txt:194:
+For each MSI-X vector granted, a device driver is responsible to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: Documentation/MSI-HOWTO.txt:196:
+this vector with its corresponding interrupt service handler. It is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: Documentation/MSI-HOWTO.txt:197:
+a device driver's choice to assign all vectors with the same $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: Documentation/MSI-HOWTO.txt:198:
+interrupt service handler or each vector with a unique interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: Documentation/MSI-HOWTO.txt:199:
+service handler. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: Documentation/MSI-HOWTO.txt:204:
+space for a device's MSI-X structure should be isolated so that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: Documentation/MSI-HOWTO.txt:205:
+software system can set different page for controlling accesses to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: Documentation/MSI-HOWTO.txt:208:
+table/MSI-X PBA and MMIO address space of the MSI-X table/MSI-X PBA. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: Documentation/MSI-HOWTO.txt:209:
+A device driver is prohibited from requesting the MMIO address space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: Documentation/MSI-HOWTO.txt:210:
+of the MSI-X table/MSI-X PBA. Otherwise, the PCI subsystem will fail $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: Documentation/MSI-HOWTO.txt:211:
+enabling MSI-X on its hardware device when it calls the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: Documentation/MSI-HOWTO.txt:216:
+Determining the number of MSI-X vectors allocated to a function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: Documentation/MSI-HOWTO.txt:218:
+devices populated in the system. The policy of allocating MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: Documentation/MSI-HOWTO.txt:223:
+x = ^IThe number of available PCI vector resources by the time $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: Documentation/MSI-HOWTO.txt:230:
+^INR_HP_RESERVED_VECTORS, for the case where the system is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: Documentation/MSI-HOWTO.txt:233:
+^Imeet their specific needs. $

WARNING:TYPO_SPELLING: 'pupulated' may be misspelled - perhaps 'populated'?
#320: FILE: Documentation/MSI-HOWTO.txt:240:
+z =	The number of MSI-X capable devices pupulated in the system.
    	                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: Documentation/MSI-HOWTO.txt:241:
+^IThis policy ensures that maximum (x - y) is distributed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: Documentation/MSI-HOWTO.txt:242:
+^Ievenly among MSI-X capable devices.^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: Documentation/MSI-HOWTO.txt:243:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: Documentation/MSI-HOWTO.txt:246:
+structure of a device as requested by its device driver, y/z is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: Documentation/MSI-HOWTO.txt:247:
+decremented accordingly.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: Documentation/MSI-HOWTO.txt:251:
+For the case where fewer MSI-X vectors are allocated to a function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: Documentation/MSI-HOWTO.txt:253:
+maximum number of MSI-X vectors available to the caller. A device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: Documentation/MSI-HOWTO.txt:255:
+in a return. For example, if a device driver requests 5 vectors, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: Documentation/MSI-HOWTO.txt:256:
+the number of available vectors is 3 vectors, a value of 3 will be a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: Documentation/MSI-HOWTO.txt:257:
+return as a result of pci_enable_msix() call. A function could be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: Documentation/MSI-HOWTO.txt:258:
+designed for its driver to use only 3 MSI-X table entries as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: Documentation/MSI-HOWTO.txt:259:
+different combinations as ABC--, A-B-C, A--CB, etc. Note that this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: Documentation/MSI-HOWTO.txt:260:
+patch does not support multiple entries with the same vector. Such $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: Documentation/MSI-HOWTO.txt:263:
+pci_enable_msix(). Below are the reasons why supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: Documentation/MSI-HOWTO.txt:265:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: Documentation/MSI-HOWTO.txt:268:
+^I  software driver ISR. Attempting to walk through all MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: Documentation/MSI-HOWTO.txt:269:
+^I  table entries (2048 max) to mask/unmask any match vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: Documentation/MSI-HOWTO.txt:270:
+^I  is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: Documentation/MSI-HOWTO.txt:273:
+^I  SMP affinity of any match vector is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: Documentation/MSI-HOWTO.txt:280:
+for enabling MSI-X messages on its hardware device. Depending on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: Documentation/MSI-HOWTO.txt:287:
+elements is indicated in argument nvec. The content of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: Documentation/MSI-HOWTO.txt:295:
+A device driver is responsible for initializing the field entry of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: Documentation/MSI-HOWTO.txt:296:
+each element with unique entry supported by MSI-X table. Otherwise, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: Documentation/MSI-HOWTO.txt:297:
+-EINVAL will be returned as a result. A successful return of zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: Documentation/MSI-HOWTO.txt:298:
+indicates the PCI subsystem completes initializing each of requested $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: Documentation/MSI-HOWTO.txt:299:
+entries of the MSI-X table with message address and message data. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: Documentation/MSI-HOWTO.txt:300:
+Last but not least, the PCI subsystem will write the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: Documentation/MSI-HOWTO.txt:301:
+vector-to-entry mapping into the field vector of each element. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: Documentation/MSI-HOWTO.txt:311:
+a failure. This failure may be a result of duplicate entries $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: Documentation/MSI-HOWTO.txt:329:
+In Figure 2.0, a device operates by default in legacy mode. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: Documentation/MSI-HOWTO.txt:330:
+successful MSI-X request (using pci_enable_msix()) switches a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: Documentation/MSI-HOWTO.txt:332:
+stored in dev->irq will be saved by the PCI subsystem; however, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: Documentation/MSI-HOWTO.txt:333:
+unlike MSI mode, the PCI subsystem will not replace dev->irq with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: Documentation/MSI-HOWTO.txt:334:
+assigned MSI-x vector because the PCI subsystem already writes the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: Documentation/MSI-HOWTO.txt:335:
+vector-to-entry mapping into the field vector of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: Documentation/MSI-HOWTO.txt:338:
+To return back to its default mode, a device driver requires to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: Documentation/MSI-HOWTO.txt:339:
+free_irq() on all allocated MSI vectors. Unlike MSI mode, the PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: Documentation/MSI-HOWTO.txt:341:
+if and only if its device driver successfully releases all allocated $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: Documentation/MSI-HOWTO.txt:344:
+Note that if a device still operates in MSI-X mode, its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: Documentation/MSI-HOWTO.txt:348:
+to legacy mode and mark all allocated MSI-X vectors as unused. Once $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: Documentation/MSI-HOWTO.txt:349:
+being marked as unused, there is no guarantee that the PCI subsystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: Documentation/MSI-HOWTO.txt:350:
+will reserve these MSI-X vectors for a device. Depending on the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: Documentation/MSI-HOWTO.txt:351:
+availability of current PCI vector resources and the number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: Documentation/MSI-HOWTO.txt:352:
+MSI/MSI-X requests from other drivers, these MSI-X vectors may be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: Documentation/MSI-HOWTO.txt:353:
+re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: Documentation/MSI-HOWTO.txt:354:
+these MSI-X vectors to other driver, a request to switching back to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: Documentation/MSI-HOWTO.txt:356:
+or a failure.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: Documentation/MSI-HOWTO.txt:360:
+For the case where a function implements both MSI and MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: Documentation/MSI-HOWTO.txt:363:
+wants MSI or MSI-X enabled on its hardware device. Once a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: Documentation/MSI-HOWTO.txt:387:
+depend on BIOS support. This key independency enables MSI/MSI-X $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#509: FILE: Documentation/MSI-HOWTO.txt:401:
+device funtion. The device function is now running on MSI/MSI-X mode.
        ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: Documentation/MSI-HOWTO.txt:405:
+At the driver level, a return of zero from the function call of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: Documentation/MSI-HOWTO.txt:407:
+its device function is initialized successfully and ready to run in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: Documentation/MSI-HOWTO.txt:412:
+MSI/MSI-X mode ("PCI MSI"/"PCI MSIX"). Below shows below MSI mode is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: Documentation/MSI-HOWTO.txt:413:
+enabled on a SCSI Adaptec 39320D Ultra320.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/pci/msi.c:193:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#584: FILE: drivers/pci/msi.c:280:
+static int msi_free_vector(struct pci_dev* dev, int vector, int reassign);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/pci/msi.c:295:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/pci/msi.c:313:
+^I^I^Iif (!msi_desc[vector]) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: drivers/pci/msi.c:314:
+^I^I^I      ^Ibreak;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: drivers/pci/msi.c:314:
+^I^I^I      ^Ibreak;^I$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: drivers/pci/msi.c:314:
+^I^I^I      ^Ibreak;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/pci/msi.c:321:
+^I^I}^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msi_desc[free_vector]"
#619: FILE: drivers/pci/msi.c:325:
+		if (msi_desc[free_vector] != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/pci/msi.c:328:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: drivers/pci/msi.c:338:
+^I       ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#632: FILE: drivers/pci/msi.c:338:
+^I       ^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#644: FILE: drivers/pci/msi.c:375:
+		printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: drivers/pci/msi.c:489:
+^I^I^Icontinue;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/pci/msi.c:506:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: drivers/pci/msi.c:506:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: drivers/pci/msi.c:506:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/pci/msi.c:506:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: drivers/pci/msi.c:547:
+^Idev->irq = vector;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/pci/msi.c:598:
+static int msix_capability_init(struct pci_dev *dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: drivers/pci/msi.c:609:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#817: FILE: drivers/pci/msi.c:625:
+	if (base == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: drivers/pci/msi.c:633:
+^I^I^Ibreak;^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#826: FILE: drivers/pci/msi.c:634:
+		if ((vector = get_msi_vector(dev)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: drivers/pci/msi.c:635:
+^I^I^Ibreak; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#827: FILE: drivers/pci/msi.c:635:
+^I^I^Ibreak; ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#855: FILE: drivers/pci/msi.c:663:
+^I^Ientry->msi_attrib.current_cpu = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/pci/msi.c:666:
+^I^Iwritel(address.lo_address.value, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: drivers/pci/msi.c:667:
+		writel(address.lo_address.value, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#862: FILE: drivers/pci/msi.c:669:
+^I^Iwritel(address.hi_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: drivers/pci/msi.c:670:
+		writel(address.hi_address, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: drivers/pci/msi.c:672:
+^I^Iwritel(*(u32*)&data, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#866: FILE: drivers/pci/msi.c:672:
+		writel(*(u32*)&data, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: drivers/pci/msi.c:673:
+		writel(*(u32*)&data, 
+			base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: drivers/pci/msi.c:688:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#925: FILE: drivers/pci/msi.c:710:
+	if ((status = msi_init()) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#932: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/pci/msi.c:713:
+   ^Iif (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#932: FILE: drivers/pci/msi.c:713:
+   	if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI)))

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#941: FILE: drivers/pci/msi.c:722:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/pci/msi.c:727:
+^I^I^Imsi_desc[dev->irq]->msi_attrib.state = 1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/pci/msi.c:728:
+^I^I^Ivector_irq[dev->irq] = -1;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: drivers/pci/msi.c:738:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: drivers/pci/msi.c:738:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#957: FILE: drivers/pci/msi.c:738:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: drivers/pci/msi.c:738:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#957: FILE: drivers/pci/msi.c:738:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
[...]
+			printk(KERN_INFO "Can't enable MSI. Device already had MSI-X vectors assigned\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#957: FILE: drivers/pci/msi.c:738:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: drivers/pci/msi.c:739:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#959: FILE: drivers/pci/msi.c:740:
+			printk(KERN_INFO "Can't enable MSI. Device already had MSI-X vectors assigned\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: drivers/pci/msi.c:742:
+^I^I^Ireturn -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#962: FILE: drivers/pci/msi.c:743:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/pci/msi.c:746:
+   ^I^Iif (!pos) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: drivers/pci/msi.c:746:
+   ^I^Iif (!pos) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#965: FILE: drivers/pci/msi.c:746:
+   ^I^Iif (!pos) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: drivers/pci/msi.c:746:
+   ^I^Iif (!pos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: drivers/pci/msi.c:748:
+^I^Ielse if (nr_msix_devices > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#968: FILE: drivers/pci/msi.c:749:
+^I^I^Inr_msix_devices--;^I/* Both MSI and MSI-X capable, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#969: FILE: drivers/pci/msi.c:750:
+			nr_msix_devices--;	/* Both MSI and MSI-X capable, 
+						   but choose enabling MSI */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#969: FILE: drivers/pci/msi.c:750:
+						   but choose enabling MSI */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: drivers/pci/msi.c:788:
+^I^I^I/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1029: FILE: drivers/pci/msi.c:795:
+^I^Ivector_irq[vector] = 0; ^I^I  /* Mark it free */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: drivers/pci/msi.c:801:
+^I^I} $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1047: FILE: drivers/pci/msi.c:812:
+static int msi_free_vector(struct pci_dev* dev, int vector, int reassign)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1100: FILE: drivers/pci/msi.c:842:
+^I^Iif (!reassign) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1101: FILE: drivers/pci/msi.c:843:
+^I^I^Iwritel(1, base + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/pci/msi.c:846:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/pci/msi.c:848:
+^I^I^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: drivers/pci/msi.c:857:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1115: FILE: drivers/pci/msi.c:857:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: drivers/pci/msi.c:857:
+   ^I^I^Ipos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: drivers/pci/msi.c:858:
+^I^I^Idev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1122: FILE: drivers/pci/msi.c:864:
+			phys_addr = pci_resource_start (dev, bir);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/pci/msi.c:865:
+^I^I^Iphys_addr += (u32)(table_offset & $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1125: FILE: drivers/pci/msi.c:867:
+			iounmap((void*)base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/pci/msi.c:868:
+^I^I^Irelease_mem_region(phys_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1127: FILE: drivers/pci/msi.c:869:
+			release_mem_region(phys_addr, 
+				nr_entries * PCI_MSIX_ENTRY_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: drivers/pci/msi.c:882:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1192: FILE: drivers/pci/msi.c:900:
+^I^Ivector_irq[vector] = -1;^I^I/* Mark it busy */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1197: FILE: drivers/pci/msi.c:905:
+^I^I^Imsi_desc[vector]->msi_attrib.entry_nr =^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1199: FILE: drivers/pci/msi.c:907:
+			writel( readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1200: FILE: drivers/pci/msi.c:908:
+^I^I^I^IPCI_MSIX_ENTRY_LOWER_ADDR_OFFSET), base + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1203: FILE: drivers/pci/msi.c:911:
+			writel(	readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: drivers/pci/msi.c:912:
+^I^I^I^IPCI_MSIX_ENTRY_UPPER_ADDR_OFFSET), base + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1207: FILE: drivers/pci/msi.c:915:
+			writel( (readl(base + j * PCI_MSIX_ENTRY_SIZE +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: drivers/pci/msi.c:917:
+^I^I^I^Ibase + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1209: FILE: drivers/pci/msi.c:917:
+				base + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + 
 				               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1209: FILE: drivers/pci/msi.c:917:
+				base + (entries+i)->entry*PCI_MSIX_ENTRY_SIZE + 
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1229: FILE: drivers/pci/msi.c:923:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/pci/msi.c:936:
+ * indicates the successful configuration of MSI-X capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: drivers/pci/msi.c:937:
+ * with new allocated MSI-X vectors. A return of < 0 indicates a failure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: drivers/pci/msi.c:939:
+ * of vectors available. Driver should use the returned value to re-send $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1254: FILE: drivers/pci/msi.c:942:
+int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int nvec)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1269: FILE: drivers/pci/msi.c:952:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1270: FILE: drivers/pci/msi.c:953:
+	if ((status = msi_init()) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: drivers/pci/msi.c:955:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: drivers/pci/msi.c:958:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1291: FILE: drivers/pci/msi.c:963:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: drivers/pci/msi.c:967:
+^I$

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1307: FILE: drivers/pci/msi.c:979:
+		/* Lookup Sucess */
 		          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1308: FILE: drivers/pci/msi.c:980:
+^I^Inr_entries = nvec;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: drivers/pci/msi.c:992:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1320: FILE: drivers/pci/msi.c:992:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: drivers/pci/msi.c:992:
+   ^Iif (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1321: FILE: drivers/pci/msi.c:993:
+   	if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSI)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1322: FILE: drivers/pci/msi.c:994:
+		printk(KERN_INFO "Can't enable MSI-X. Device already had MSI vector assigned\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1324: FILE: drivers/pci/msi.c:996:
+^I^Ireturn -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1326: FILE: drivers/pci/msi.c:998:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1342: FILE: drivers/pci/msi.c:1020:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1408: FILE: drivers/pci/msi.c:1025:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1422: FILE: drivers/pci/msi.c:1042:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: drivers/pci/msi.c:1045:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1439: FILE: drivers/pci/msi.c:1047:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1439: FILE: drivers/pci/msi.c:1047:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: drivers/pci/msi.c:1047:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1439: FILE: drivers/pci/msi.c:1047:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1440: FILE: drivers/pci/msi.c:1048:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSI)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: drivers/pci/msi.c:1052:
+^I^Iif (state)  ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1465: FILE: drivers/pci/msi.c:1052:
+^I^Iif (state)  ^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1466: FILE: drivers/pci/msi.c:1053:
+			printk("WARNING! Driver fails freeing MSI vector[%d]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1467: FILE: drivers/pci/msi.c:1054:
+			printk("WARNING! Driver fails freeing MSI vector[%d]\n",
+				dev->irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: drivers/pci/msi.c:1059:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1472: FILE: drivers/pci/msi.c:1059:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: drivers/pci/msi.c:1059:
+   ^Iif ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1472: FILE: drivers/pci/msi.c:1059:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: drivers/pci/msi.c:1060:
+   	if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 &&
+		!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: drivers/pci/msi.c:1063:
+^I^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1477: FILE: drivers/pci/msi.c:1064:
+		vector = head = dev->irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1489: FILE: drivers/pci/msi.c:1071:
+^I^I^Iif (state) { ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1489: FILE: drivers/pci/msi.c:1071:
+^I^I^Iif (state) { ^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1490: FILE: drivers/pci/msi.c:1072:
+				printk("WARNING! Driver fails freeing MSI-X vector[%d]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: drivers/pci/msi.c:1073:
+				printk("WARNING! Driver fails freeing MSI-X vector[%d]\n",
+				vector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1504: FILE: drivers/pci/msi.c:1086:
+^I^I^Idev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1509: FILE: drivers/pci/msi.c:1091:
+			phys_addr = pci_resource_start (dev, bir);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1510: FILE: drivers/pci/msi.c:1092:
+^I^I^Iphys_addr += (u32)(table_offset & $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1512: FILE: drivers/pci/msi.c:1094:
+			iounmap((void*)base);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1537: FILE: drivers/pci/msi.h:94:
+^I__u32 ^Ivector^I: 16;^I/* kernel uses to write allocated vector */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1549: FILE: drivers/pci/msi.h:148:
+^I^I__u8^Istate^I: 1; ^I/* {0: free, 1: busy}^I^I  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1550: FILE: drivers/pci/msi.h:149:
+^I^I__u8^Ireserved: 1; ^I/* reserved^I^I^I  */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1561: FILE: include/linux/pci.h:792:
+static inline int pci_enable_msix(struct pci_dev* dev, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1561: FILE: include/linux/pci.h:792:
+static inline int pci_enable_msix(struct pci_dev* dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1562: FILE: include/linux/pci.h:793:
+static inline int pci_enable_msix(struct pci_dev* dev, 
+	unsigned int *data, int nvec) {return -1;}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1562: FILE: include/linux/pci.h:793:
+	unsigned int *data, int nvec) {return -1;}
 	                                        ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1567: FILE: include/linux/pci.h:798:
+extern int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1567: FILE: include/linux/pci.h:798:
+extern int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int nvec);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 190 errors, 40 warnings, 17 checks, 1464 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
