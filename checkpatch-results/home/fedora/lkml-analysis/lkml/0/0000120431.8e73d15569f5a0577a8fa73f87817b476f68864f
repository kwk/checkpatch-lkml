WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#72: FILE: arch/m68k/mm/kmap.c:230:
 	if ((!MACH_IS_AMIGA) ||
[...]
+			free_io_area((__force void *)addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/asm-m68k/io.h:129:
+    case Q40_ISA: return (u8 __iomem *)Q40_ISA_IO_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: include/asm-m68k/io.h:132:
+    case GG2_ISA: return (u8 __iomem *)GG2_ISA_IO_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/asm-m68k/io.h:135:
+    case AG_ISA: return (u8 __iomem *)AG_ISA_IO_B(addr);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#121: FILE: include/asm-m68k/io.h:140:
 }
+static inline u16 __iomem *isa_itw(unsigned long addr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/asm-m68k/io.h:145:
+    case Q40_ISA: return (u16 __iomem *)Q40_ISA_IO_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/asm-m68k/io.h:148:
+    case GG2_ISA: return (u16 __iomem *)GG2_ISA_IO_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/asm-m68k/io.h:151:
+    case AG_ISA: return (u16 __iomem *)AG_ISA_IO_W(addr);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/asm-m68k/io.h:156:
 }
+static inline u8 __iomem *isa_mtb(unsigned long addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: include/asm-m68k/io.h:161:
+    case Q40_ISA: return (u8 __iomem *)Q40_ISA_MEM_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/asm-m68k/io.h:164:
+    case GG2_ISA: return (u8 __iomem *)GG2_ISA_MEM_B(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/asm-m68k/io.h:167:
+    case AG_ISA: return (u8 __iomem *)addr;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#163: FILE: include/asm-m68k/io.h:172:
 }
+static inline u16 __iomem *isa_mtw(unsigned long addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/asm-m68k/io.h:177:
+    case Q40_ISA: return (u16 __iomem *)Q40_ISA_MEM_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: include/asm-m68k/io.h:180:
+    case GG2_ISA: return (u16 __iomem *)GG2_ISA_MEM_W(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/asm-m68k/io.h:183:
+    case AG_ISA: return (u16 __iomem *)addr;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#194: FILE: include/asm-m68k/io.h:334:
 }
+static inline void __iomem *ioremap_nocache(unsigned long physaddr, unsigned long size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#199: FILE: include/asm-m68k/io.h:338:
 }
+static inline void __iomem *ioremap_writethrough(unsigned long physaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: include/asm-m68k/io.h:339:
+static inline void __iomem *ioremap_writethrough(unsigned long physaddr,
 					 unsigned long size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#205: FILE: include/asm-m68k/io.h:343:
 }
+static inline void __iomem *ioremap_fullcache(unsigned long physaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/asm-m68k/io.h:344:
+static inline void __iomem *ioremap_fullcache(unsigned long physaddr,
 				      unsigned long size)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: include/asm-m68k/raw_io.h:22:
+extern void iounmap(void __iomem *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/asm-m68k/raw_io.h:24:
+extern void __iomem *__ioremap(unsigned long physaddr, unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: include/asm-m68k/raw_io.h:25:
+extern void __iomem *__ioremap(unsigned long physaddr, unsigned long size,
 		       int cacheflag);

CHECK:SPACING: No space is necessary after a cast
#230: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(__force volatile u8 *) (addr)); __v; })

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(__force volatile u8 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#230: FILE: include/asm-m68k/raw_io.h:33:
+    ({ u8 __v = (*(__force volatile u8 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#233: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(__force volatile u16 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(__force volatile u16 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#233: FILE: include/asm-m68k/raw_io.h:35:
+    ({ u16 __v = (*(__force volatile u16 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#236: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(__force volatile u32 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(__force volatile u32 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#236: FILE: include/asm-m68k/raw_io.h:37:
+    ({ u32 __v = (*(__force volatile u32 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#239: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(__force volatile u16 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(__force volatile u16 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#239: FILE: include/asm-m68k/raw_io.h:39:
+    ({ u16 __v = le16_to_cpu(*(__force volatile u16 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#242: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(__force volatile u32 *) (addr)); __v; })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(__force volatile u32 *) (addr)); __v; })$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#242: FILE: include/asm-m68k/raw_io.h:41:
+    ({ u32 __v = le32_to_cpu(*(__force volatile u32 *) (addr)); __v; })

CHECK:SPACING: No space is necessary after a cast
#249: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(__force volatile u8 *) (addr)) = (b))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(__force volatile u8 *) (addr)) = (b))
                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#249: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(__force volatile u8 *) (addr)) = (b))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#249: FILE: include/asm-m68k/raw_io.h:43:
+#define out_8(addr,b) (void)((*(__force volatile u8 *) (addr)) = (b))

CHECK:SPACING: No space is necessary after a cast
#250: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(__force volatile u16 *) (addr)) = (w))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#250: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(__force volatile u16 *) (addr)) = (w))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#250: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(__force volatile u16 *) (addr)) = (w))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#250: FILE: include/asm-m68k/raw_io.h:44:
+#define out_be16(addr,w) (void)((*(__force volatile u16 *) (addr)) = (w))

CHECK:SPACING: No space is necessary after a cast
#251: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(__force volatile u32 *) (addr)) = (l))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(__force volatile u32 *) (addr)) = (l))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#251: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(__force volatile u32 *) (addr)) = (l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#251: FILE: include/asm-m68k/raw_io.h:45:
+#define out_be32(addr,l) (void)((*(__force volatile u32 *) (addr)) = (l))

CHECK:SPACING: No space is necessary after a cast
#252: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(__force volatile u16 *) (addr)) = cpu_to_le16(w))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#252: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(__force volatile u16 *) (addr)) = cpu_to_le16(w))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#252: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(__force volatile u16 *) (addr)) = cpu_to_le16(w))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#252: FILE: include/asm-m68k/raw_io.h:46:
+#define out_le16(addr,w) (void)((*(__force volatile u16 *) (addr)) = cpu_to_le16(w))

CHECK:SPACING: No space is necessary after a cast
#253: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(__force volatile u32 *) (addr)) = cpu_to_le32(l))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(__force volatile u32 *) (addr)) = cpu_to_le32(l))
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#253: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(__force volatile u32 *) (addr)) = cpu_to_le32(l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#253: FILE: include/asm-m68k/raw_io.h:47:
+#define out_le32(addr,l) (void)((*(__force volatile u32 *) (addr)) = cpu_to_le32(l))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#262: FILE: include/asm-m68k/raw_io.h:57:
+static inline void raw_insb(volatile u8 __iomem *port, u8 *buf, unsigned int len)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#271: FILE: include/asm-m68k/raw_io.h:65:
+static inline void raw_outsb(volatile u8 __iomem *port, const u8 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#280: FILE: include/asm-m68k/raw_io.h:74:
+static inline void raw_insw(volatile u16 __iomem *port, u16 *buf, unsigned int nr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#289: FILE: include/asm-m68k/raw_io.h:113:
+static inline void raw_outsw(volatile u16 __iomem *port, const u16 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#298: FILE: include/asm-m68k/raw_io.h:153:
+static inline void raw_insl(volatile u32 __iomem *port, u32 *buf, unsigned int nr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#307: FILE: include/asm-m68k/raw_io.h:192:
+static inline void raw_outsl(volatile u32 __iomem *port, const u32 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#316: FILE: include/asm-m68k/raw_io.h:233:
+static inline void raw_insw_swapw(volatile u16 __iomem *port, u16 *buf,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#325: FILE: include/asm-m68k/raw_io.h:286:
+static inline void raw_outsw_swapw(volatile u16 __iomem *port, const u16 *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/asm-m68k/zorro.h:19:
+static inline void __iomem *z_remap_nocache_ser(unsigned long physaddr,
 					unsigned long size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: include/asm-m68k/zorro.h:25:
+static inline void __iomem *z_remap_nocache_nonser(unsigned long physaddr,
 					   unsigned long size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: include/asm-m68k/zorro.h:31:
+static inline void __iomem *z_remap_writethrough(unsigned long physaddr,
 					 unsigned long size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#358: FILE: include/asm-m68k/zorro.h:35:
 }
+static inline void __iomem *z_remap_fullcache(unsigned long physaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: include/asm-m68k/zorro.h:36:
+static inline void __iomem *z_remap_fullcache(unsigned long physaddr,
 				      unsigned long size)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 36 warnings, 26 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
