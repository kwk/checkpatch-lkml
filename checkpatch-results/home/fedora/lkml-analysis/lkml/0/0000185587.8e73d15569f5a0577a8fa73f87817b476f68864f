WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: include/scsi/iscsi_ifev.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#102: FILE: include/scsi/iscsi_ifev.h:47:
+	uint32_t type; /* k/u events type */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#103: FILE: include/scsi/iscsi_ifev.h:48:
+	uint32_t iferror; /* carries interface or resource errors */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#104: FILE: include/scsi/iscsi_ifev.h:49:
+	uint64_t transport_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#109: FILE: include/scsi/iscsi_ifev.h:54:
+			uint32_t	initial_cmdsn;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#112: FILE: include/scsi/iscsi_ifev.h:57:
+			uint64_t	session_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#113: FILE: include/scsi/iscsi_ifev.h:58:
+			uint32_t	sid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#116: FILE: include/scsi/iscsi_ifev.h:61:
+			uint64_t	session_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#117: FILE: include/scsi/iscsi_ifev.h:62:
+			uint32_t	cid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#118: FILE: include/scsi/iscsi_ifev.h:63:
+			uint32_t	sid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#121: FILE: include/scsi/iscsi_ifev.h:66:
+			uint64_t	session_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#122: FILE: include/scsi/iscsi_ifev.h:67:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#123: FILE: include/scsi/iscsi_ifev.h:68:
+			uint32_t	transport_fd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#124: FILE: include/scsi/iscsi_ifev.h:69:
+			uint32_t	is_leading;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#127: FILE: include/scsi/iscsi_ifev.h:72:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#128: FILE: include/scsi/iscsi_ifev.h:73:
+			uint32_t	cid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#131: FILE: include/scsi/iscsi_ifev.h:76:
+			uint32_t	hdr_size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#132: FILE: include/scsi/iscsi_ifev.h:77:
+			uint32_t	data_size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#133: FILE: include/scsi/iscsi_ifev.h:78:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#136: FILE: include/scsi/iscsi_ifev.h:81:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#137: FILE: include/scsi/iscsi_ifev.h:82:
+			uint32_t	param; /* enum iscsi_param */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#138: FILE: include/scsi/iscsi_ifev.h:83:
+			uint32_t	value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#141: FILE: include/scsi/iscsi_ifev.h:86:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#144: FILE: include/scsi/iscsi_ifev.h:89:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#145: FILE: include/scsi/iscsi_ifev.h:90:
+			uint32_t	flag;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#148: FILE: include/scsi/iscsi_ifev.h:93:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#153: FILE: include/scsi/iscsi_ifev.h:98:
+		uint64_t		handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#156: FILE: include/scsi/iscsi_ifev.h:101:
+			uint64_t	session_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#157: FILE: include/scsi/iscsi_ifev.h:102:
+			uint32_t	sid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#160: FILE: include/scsi/iscsi_ifev.h:105:
+			uint64_t	recv_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#161: FILE: include/scsi/iscsi_ifev.h:106:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#164: FILE: include/scsi/iscsi_ifev.h:109:
+			uint64_t	cnx_handle;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#165: FILE: include/scsi/iscsi_ifev.h:110:
+			uint32_t	error; /* enum iscsi_err */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#169: FILE: include/scsi/iscsi_ifev.h:114:
+				uint64_t trans_handle;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: include/scsi/iscsi_ifev.h:119:
+} __attribute__ ((aligned (sizeof(unsigned long))));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(unsigned long)) over __attribute__((aligned(sizeof(unsigned long))))
#174: FILE: include/scsi/iscsi_ifev.h:119:
+} __attribute__ ((aligned (sizeof(unsigned long))));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#181: FILE: include/scsi/iscsi_if.h:1:
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#255: FILE: include/scsi/iscsi_if.h:75:
+};
+#define ISCSI_PARAM_MAX			14

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#257: FILE: include/scsi/iscsi_if.h:77:
+typedef uint64_t iscsi_snx_t;		/* iSCSI Data-Path session handle */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#258: FILE: include/scsi/iscsi_if.h:78:
+typedef uint64_t iscsi_cnx_t;		/* iSCSI Data-Path connection handle */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#260: FILE: include/scsi/iscsi_if.h:80:
+#define iscsi_ptr(_handle) ((void*)(unsigned long)_handle)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#262: FILE: include/scsi/iscsi_if.h:82:
+#define iscsi_hostdata(_hostdata) ((void*)_hostdata + sizeof(unsigned long))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_hostdata' may be better as '(_hostdata)' to avoid precedence issues
#262: FILE: include/scsi/iscsi_if.h:82:
+#define iscsi_hostdata(_hostdata) ((void*)_hostdata + sizeof(unsigned long))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#287: FILE: include/scsi/iscsi_if.h:107:
+	uint64_t value;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#297: FILE: include/scsi/iscsi_if.h:117:
+	uint64_t txdata_octets;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#298: FILE: include/scsi/iscsi_if.h:118:
+	uint64_t rxdata_octets;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#301: FILE: include/scsi/iscsi_if.h:121:
+	uint32_t noptx_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#302: FILE: include/scsi/iscsi_if.h:122:
+	uint32_t scsicmd_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#303: FILE: include/scsi/iscsi_if.h:123:
+	uint32_t tmfcmd_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#304: FILE: include/scsi/iscsi_if.h:124:
+	uint32_t login_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#305: FILE: include/scsi/iscsi_if.h:125:
+	uint32_t text_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#306: FILE: include/scsi/iscsi_if.h:126:
+	uint32_t dataout_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#307: FILE: include/scsi/iscsi_if.h:127:
+	uint32_t logout_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#308: FILE: include/scsi/iscsi_if.h:128:
+	uint32_t snack_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#311: FILE: include/scsi/iscsi_if.h:131:
+	uint32_t noprx_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#312: FILE: include/scsi/iscsi_if.h:132:
+	uint32_t scsirsp_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#313: FILE: include/scsi/iscsi_if.h:133:
+	uint32_t tmfrsp_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#314: FILE: include/scsi/iscsi_if.h:134:
+	uint32_t textrsp_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#315: FILE: include/scsi/iscsi_if.h:135:
+	uint32_t datain_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#316: FILE: include/scsi/iscsi_if.h:136:
+	uint32_t logoutrsp_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#317: FILE: include/scsi/iscsi_if.h:137:
+	uint32_t r2t_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#318: FILE: include/scsi/iscsi_if.h:138:
+	uint32_t async_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#319: FILE: include/scsi/iscsi_if.h:139:
+	uint32_t rjt_pdus;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#322: FILE: include/scsi/iscsi_if.h:142:
+	uint32_t digest_err;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#323: FILE: include/scsi/iscsi_if.h:143:
+	uint32_t timeout_err;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#330: FILE: include/scsi/iscsi_if.h:150:
+	uint32_t custom_length;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: include/scsi/iscsi_if.h:152:
+		__attribute__ ((aligned (sizeof(unsigned long))));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(unsigned long)) over __attribute__((aligned(sizeof(unsigned long))))
#332: FILE: include/scsi/iscsi_if.h:152:
+		__attribute__ ((aligned (sizeof(unsigned long))));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#340: FILE: include/scsi/iscsi_proto.h:1:
+/*

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#373: FILE: include/scsi/iscsi_proto.h:34:
+ * useful common(control and data pathes) macro
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#375: FILE: include/scsi/iscsi_proto.h:36:
+#define ntoh24(p) (((p)[0] << 16) | ((p)[1] << 8) | ((p)[2]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#376: FILE: include/scsi/iscsi_proto.h:37:
+#define hton24(p, v) { \
+        p[0] = (((v) >> 16) & 0xFF); \
+        p[1] = (((v) >> 8) & 0xFF); \
+        p[2] = ((v) & 0xFF); \
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'v' - possible side-effects?
#376: FILE: include/scsi/iscsi_proto.h:37:
+#define hton24(p, v) { \
+        p[0] = (((v) >> 16) & 0xFF); \
+        p[1] = (((v) >> 8) & 0xFF); \
+        p[2] = ((v) & 0xFF); \
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: include/scsi/iscsi_proto.h:38:
+        p[0] = (((v) >> 16) & 0xFF); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: include/scsi/iscsi_proto.h:38:
+        p[0] = (((v) >> 16) & 0xFF); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: include/scsi/iscsi_proto.h:39:
+        p[1] = (((v) >> 8) & 0xFF); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: include/scsi/iscsi_proto.h:39:
+        p[1] = (((v) >> 8) & 0xFF); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: include/scsi/iscsi_proto.h:40:
+        p[2] = ((v) & 0xFF); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: include/scsi/iscsi_proto.h:40:
+        p[2] = ((v) & 0xFF); \$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#381: FILE: include/scsi/iscsi_proto.h:42:
+}
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#381: FILE: include/scsi/iscsi_proto.h:42:
+#define zero_data(p) {p[0]=0;p[1]=0;p[2]=0;}

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#387: FILE: include/scsi/iscsi_proto.h:48:
+	uint8_t		opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#388: FILE: include/scsi/iscsi_proto.h:49:
+	uint8_t		flags;		/* Final bit */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#389: FILE: include/scsi/iscsi_proto.h:50:
+	uint8_t		rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#390: FILE: include/scsi/iscsi_proto.h:51:
+	uint8_t		hlength;	/* AHSs total length */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#391: FILE: include/scsi/iscsi_proto.h:52:
+	uint8_t		dlength[3];	/* Data length */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#392: FILE: include/scsi/iscsi_proto.h:53:
+	uint8_t		lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#397: FILE: include/scsi/iscsi_proto.h:58:
+	uint8_t		other[16];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#433: FILE: include/scsi/iscsi_proto.h:94:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#434: FILE: include/scsi/iscsi_proto.h:95:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#435: FILE: include/scsi/iscsi_proto.h:96:
+	uint8_t rsvd2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#436: FILE: include/scsi/iscsi_proto.h:97:
+	uint8_t cmdrn;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#437: FILE: include/scsi/iscsi_proto.h:98:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#438: FILE: include/scsi/iscsi_proto.h:99:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#439: FILE: include/scsi/iscsi_proto.h:100:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#444: FILE: include/scsi/iscsi_proto.h:105:
+	uint8_t cdb[16];	/* SCSI Command Block */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#463: FILE: include/scsi/iscsi_proto.h:124:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#464: FILE: include/scsi/iscsi_proto.h:125:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#465: FILE: include/scsi/iscsi_proto.h:126:
+	uint8_t response;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#466: FILE: include/scsi/iscsi_proto.h:127:
+	uint8_t cmd_status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#467: FILE: include/scsi/iscsi_proto.h:128:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#468: FILE: include/scsi/iscsi_proto.h:129:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#469: FILE: include/scsi/iscsi_proto.h:130:
+	uint8_t rsvd[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#494: FILE: include/scsi/iscsi_proto.h:155:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#495: FILE: include/scsi/iscsi_proto.h:156:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#496: FILE: include/scsi/iscsi_proto.h:157:
+	uint8_t rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#497: FILE: include/scsi/iscsi_proto.h:158:
+	uint8_t rsvd3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#498: FILE: include/scsi/iscsi_proto.h:159:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#499: FILE: include/scsi/iscsi_proto.h:160:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#500: FILE: include/scsi/iscsi_proto.h:161:
+	uint8_t rsvd4[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#504: FILE: include/scsi/iscsi_proto.h:165:
+	uint8_t async_event;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#505: FILE: include/scsi/iscsi_proto.h:166:
+	uint8_t async_vcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#509: FILE: include/scsi/iscsi_proto.h:170:
+	uint8_t rsvd5[4];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#522: FILE: include/scsi/iscsi_proto.h:183:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#523: FILE: include/scsi/iscsi_proto.h:184:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#525: FILE: include/scsi/iscsi_proto.h:186:
+	uint8_t rsvd3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#526: FILE: include/scsi/iscsi_proto.h:187:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#527: FILE: include/scsi/iscsi_proto.h:188:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#532: FILE: include/scsi/iscsi_proto.h:193:
+	uint8_t rsvd4[16];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#537: FILE: include/scsi/iscsi_proto.h:198:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#538: FILE: include/scsi/iscsi_proto.h:199:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#540: FILE: include/scsi/iscsi_proto.h:201:
+	uint8_t rsvd3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#541: FILE: include/scsi/iscsi_proto.h:202:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#542: FILE: include/scsi/iscsi_proto.h:203:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#548: FILE: include/scsi/iscsi_proto.h:209:
+	uint8_t rsvd4[12];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#553: FILE: include/scsi/iscsi_proto.h:214:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#554: FILE: include/scsi/iscsi_proto.h:215:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#555: FILE: include/scsi/iscsi_proto.h:216:
+	uint8_t rsvd1[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#556: FILE: include/scsi/iscsi_proto.h:217:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#557: FILE: include/scsi/iscsi_proto.h:218:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#558: FILE: include/scsi/iscsi_proto.h:219:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#565: FILE: include/scsi/iscsi_proto.h:226:
+	uint8_t rsvd2[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#582: FILE: include/scsi/iscsi_proto.h:243:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#583: FILE: include/scsi/iscsi_proto.h:244:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#584: FILE: include/scsi/iscsi_proto.h:245:
+	uint8_t response;	/* see Response values below */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#585: FILE: include/scsi/iscsi_proto.h:246:
+	uint8_t qualifier;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#586: FILE: include/scsi/iscsi_proto.h:247:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#587: FILE: include/scsi/iscsi_proto.h:248:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#588: FILE: include/scsi/iscsi_proto.h:249:
+	uint8_t rsvd2[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#594: FILE: include/scsi/iscsi_proto.h:255:
+	uint8_t rsvd3[12];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#609: FILE: include/scsi/iscsi_proto.h:270:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#610: FILE: include/scsi/iscsi_proto.h:271:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#611: FILE: include/scsi/iscsi_proto.h:272:
+	uint8_t rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#612: FILE: include/scsi/iscsi_proto.h:273:
+	uint8_t	hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#613: FILE: include/scsi/iscsi_proto.h:274:
+	uint8_t	dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#614: FILE: include/scsi/iscsi_proto.h:275:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#627: FILE: include/scsi/iscsi_proto.h:288:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#628: FILE: include/scsi/iscsi_proto.h:289:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#629: FILE: include/scsi/iscsi_proto.h:290:
+	uint8_t rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#630: FILE: include/scsi/iscsi_proto.h:291:
+	uint8_t rsvd3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#631: FILE: include/scsi/iscsi_proto.h:292:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#632: FILE: include/scsi/iscsi_proto.h:293:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#646: FILE: include/scsi/iscsi_proto.h:307:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#647: FILE: include/scsi/iscsi_proto.h:308:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#648: FILE: include/scsi/iscsi_proto.h:309:
+	uint8_t rsvd2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#649: FILE: include/scsi/iscsi_proto.h:310:
+	uint8_t cmd_status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#650: FILE: include/scsi/iscsi_proto.h:311:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#651: FILE: include/scsi/iscsi_proto.h:312:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#652: FILE: include/scsi/iscsi_proto.h:313:
+	uint8_t lun[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#671: FILE: include/scsi/iscsi_proto.h:332:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#672: FILE: include/scsi/iscsi_proto.h:333:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#673: FILE: include/scsi/iscsi_proto.h:334:
+	uint8_t rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#674: FILE: include/scsi/iscsi_proto.h:335:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#675: FILE: include/scsi/iscsi_proto.h:336:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#676: FILE: include/scsi/iscsi_proto.h:337:
+	uint8_t rsvd4[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#681: FILE: include/scsi/iscsi_proto.h:342:
+	uint8_t rsvd5[16];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#689: FILE: include/scsi/iscsi_proto.h:350:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#690: FILE: include/scsi/iscsi_proto.h:351:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#691: FILE: include/scsi/iscsi_proto.h:352:
+	uint8_t rsvd2[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#692: FILE: include/scsi/iscsi_proto.h:353:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#693: FILE: include/scsi/iscsi_proto.h:354:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#694: FILE: include/scsi/iscsi_proto.h:355:
+	uint8_t rsvd4[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#700: FILE: include/scsi/iscsi_proto.h:361:
+	uint8_t rsvd5[12];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#706: FILE: include/scsi/iscsi_proto.h:367:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#707: FILE: include/scsi/iscsi_proto.h:368:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#708: FILE: include/scsi/iscsi_proto.h:369:
+	uint8_t max_version;	/* Max. version supported */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#709: FILE: include/scsi/iscsi_proto.h:370:
+	uint8_t min_version;	/* Min. version supported */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#710: FILE: include/scsi/iscsi_proto.h:371:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#711: FILE: include/scsi/iscsi_proto.h:372:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#712: FILE: include/scsi/iscsi_proto.h:373:
+	uint8_t isid[6];	/* Initiator Session ID */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#719: FILE: include/scsi/iscsi_proto.h:380:
+	uint8_t rsvd5[16];

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#728: FILE: include/scsi/iscsi_proto.h:389:
+#define ISCSI_LOGIN_CURRENT_STAGE(flags) \
+	((flags & ISCSI_FLAG_LOGIN_CURRENT_STAGE_MASK) >> 2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#730: FILE: include/scsi/iscsi_proto.h:391:
+#define ISCSI_LOGIN_NEXT_STAGE(flags) \
+	(flags & ISCSI_FLAG_LOGIN_NEXT_STAGE_MASK)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#735: FILE: include/scsi/iscsi_proto.h:396:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#736: FILE: include/scsi/iscsi_proto.h:397:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#737: FILE: include/scsi/iscsi_proto.h:398:
+	uint8_t max_version;	/* Max. version supported */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#738: FILE: include/scsi/iscsi_proto.h:399:
+	uint8_t active_version;	/* Active version */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#739: FILE: include/scsi/iscsi_proto.h:400:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#740: FILE: include/scsi/iscsi_proto.h:401:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#741: FILE: include/scsi/iscsi_proto.h:402:
+	uint8_t isid[6];	/* Initiator Session ID */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#748: FILE: include/scsi/iscsi_proto.h:409:
+	uint8_t status_class;	/* see Login RSP ststus classes below */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#749: FILE: include/scsi/iscsi_proto.h:410:
+	uint8_t status_detail;	/* see Login RSP Status details below */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#750: FILE: include/scsi/iscsi_proto.h:411:
+	uint8_t rsvd4[10];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#794: FILE: include/scsi/iscsi_proto.h:455:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#795: FILE: include/scsi/iscsi_proto.h:456:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#796: FILE: include/scsi/iscsi_proto.h:457:
+	uint8_t rsvd1[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#797: FILE: include/scsi/iscsi_proto.h:458:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#798: FILE: include/scsi/iscsi_proto.h:459:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#799: FILE: include/scsi/iscsi_proto.h:460:
+	uint8_t rsvd2[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#802: FILE: include/scsi/iscsi_proto.h:463:
+	uint8_t rsvd3[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#805: FILE: include/scsi/iscsi_proto.h:466:
+	uint8_t rsvd4[16];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#820: FILE: include/scsi/iscsi_proto.h:481:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#821: FILE: include/scsi/iscsi_proto.h:482:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#822: FILE: include/scsi/iscsi_proto.h:483:
+	uint8_t response;	/* see Logout response values below */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#823: FILE: include/scsi/iscsi_proto.h:484:
+	uint8_t rsvd2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#824: FILE: include/scsi/iscsi_proto.h:485:
+	uint8_t hlength;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#825: FILE: include/scsi/iscsi_proto.h:486:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#826: FILE: include/scsi/iscsi_proto.h:487:
+	uint8_t rsvd3[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#847: FILE: include/scsi/iscsi_proto.h:508:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#848: FILE: include/scsi/iscsi_proto.h:509:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#849: FILE: include/scsi/iscsi_proto.h:510:
+	uint8_t rsvd2[14];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#856: FILE: include/scsi/iscsi_proto.h:517:
+	uint8_t rsvd6[8];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#864: FILE: include/scsi/iscsi_proto.h:525:
+	uint8_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#865: FILE: include/scsi/iscsi_proto.h:526:
+	uint8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#866: FILE: include/scsi/iscsi_proto.h:527:
+	uint8_t reason;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#867: FILE: include/scsi/iscsi_proto.h:528:
+	uint8_t rsvd2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#868: FILE: include/scsi/iscsi_proto.h:529:
+	uint8_t rsvd3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#869: FILE: include/scsi/iscsi_proto.h:530:
+	uint8_t dlength[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#870: FILE: include/scsi/iscsi_proto.h:531:
+	uint8_t rsvd4[16];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#875: FILE: include/scsi/iscsi_proto.h:536:
+	uint8_t rsvd5[8];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 11 warnings, 204 checks, 841 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
