WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The attached patch adds a new directory cache management function that prepares

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#59: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: fs/dcache.c:869:
+	BUG_ON(!list_empty(&entry->d_alias));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: fs/dcache.c:880:
+	BUG_ON(!d_unhashed(result));

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#130: FILE: fs/dcache.c:881:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: fs/dcache.c:1256:
+static void _d_rehash(struct dentry * entry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'aparent' may be misspelled - perhaps 'apparent'?
#172: FILE: fs/dcache.c:1416:
+	struct dentry *dparent, *aparent;
 	                         ^^^^^^^

WARNING:TYPO_SPELLING: 'aparent' may be misspelled - perhaps 'apparent'?
#179: FILE: fs/dcache.c:1423:
+	aparent = anon->d_parent;
 	^^^^^^^

WARNING:TYPO_SPELLING: 'aparent' may be misspelled - perhaps 'apparent'?
#181: FILE: fs/dcache.c:1425:
+	dentry->d_parent = (aparent == anon) ? dentry : aparent;
 	                    ^^^^^^^

WARNING:TYPO_SPELLING: 'aparent' may be misspelled - perhaps 'apparent'?
#181: FILE: fs/dcache.c:1425:
+	dentry->d_parent = (aparent == anon) ? dentry : aparent;
 	                                                ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: fs/dcache.c:1454:
+	BUG_ON(!d_unhashed(dentry));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: fs/dcache.c:1465:
+	 * that we should splice into the tree instead */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#222: FILE: fs/dcache.c:1466:
+	if (S_ISDIR(inode->i_mode) && (alias = __d_find_alias(inode, 1))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#261: FILE: fs/dcache.c:1505:
+	iput(inode);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: fs/dcache.c:1520:
+	BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: include/linux/dcache.h:224:
+extern struct dentry * d_materialise_unique(struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/linux/dcache.h:224:
+extern struct dentry * d_materialise_unique(struct dentry *, struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#299: FILE: include/linux/dcache.h:224:
+extern struct dentry * d_materialise_unique(struct dentry *, struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#299: FILE: include/linux/dcache.h:224:
+extern struct dentry * d_materialise_unique(struct dentry *, struct inode *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 15 warnings, 1 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054162.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
