WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
> "du" again started leaking (or maybe just using memory?) down to ~80M free

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#46: FILE: fs/isofs/dir.c:97:
+static struct buffer_head *isofs_bread(struct inode *inode, unsigned int bufsize, unsigned int block)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#49: FILE: fs/isofs/dir.c:100:
+	unsigned int blknr = isofs_bmap(inode, block);
+	if (!blknr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#108: FILE: fs/isofs/dir.c:141:
+		if (first_de) inode_number = (bh->b_blocknr << bufbits) + offset;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fs/isofs/dir.c:146:
+#endif^I    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: fs/isofs/dir.c:166:
+			int slop = bufsize - offset + de_len;
+			memcpy(tmpde, de, slop);

CHECK:SPACING: No space is necessary after a cast
#167: FILE: fs/isofs/dir.c:175:
+				memcpy((void *) tmpde + slop, bh->b_data, de_len - slop);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: fs/isofs/dir.c:177:
+^I^I^Ide = tmpde;^I^I^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: fs/isofs/dir.c:252:
+	if (bh) brelse(bh);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#193: FILE: fs/isofs/namei.c:52:
+static struct buffer_head *isofs_bread(struct inode *inode, unsigned int bufsize, unsigned int block)

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: fs/isofs/namei.c:55:
+	unsigned int blknr = isofs_bmap(inode, block);
+	if (!blknr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#201: FILE: fs/isofs/namei.c:60:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: fs/isofs/namei.c:71:
+isofs_find_entry(struct inode *dir, struct dentry *dentry,
+	char * tmpname, struct iso_directory_record * tmpde)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: fs/isofs/namei.c:71:
+	char * tmpname, struct iso_directory_record * tmpde)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: fs/isofs/namei.c:71:
+	char * tmpname, struct iso_directory_record * tmpde)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: fs/isofs/namei.c:77:
+	struct buffer_head * bh = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: fs/isofs/namei.c:87:
+		struct iso_directory_record * de;

CHECK:SPACING: No space is necessary after a cast
#257: FILE: fs/isofs/namei.c:97:
+		de = (struct iso_directory_record *) (bh->b_data + offset);

CHECK:SPACING: No space is necessary after a cast
#288: FILE: fs/isofs/namei.c:100:
+		de_len = *(unsigned char *) de;

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: fs/isofs/namei.c:116:
+			int slop = bufsize - offset + de_len;
+			memcpy(tmpde, de, slop);

CHECK:SPACING: No space is necessary after a cast
#347: FILE: fs/isofs/namei.c:125:
+				memcpy((void *) tmpde + slop, bh->b_data, de_len - slop);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#396: FILE: fs/isofs/namei.c:159:
+			if(tmpname[dlen-1] == '.' && dentry->d_name.len == dlen-1)
 			               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#396: FILE: fs/isofs/namei.c:159:
+			if(tmpname[dlen-1] == '.' && dentry->d_name.len == dlen-1)
 			                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#396: FILE: fs/isofs/namei.c:159:
+			if(tmpname[dlen-1] == '.' && dentry->d_name.len == dlen-1)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#417: FILE: fs/isofs/namei.c:173:
+			if (bh) brelse(bh);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 8 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
