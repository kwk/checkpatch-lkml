WARNING:LONG_LINE_COMMENT: line length of 148 exceeds 100 columns
#75: FILE: include/linux/mm.h:159:
+#define VM_RESERVED	0x00080000	/* Pages in region aren't managed with regular pagecache routines (replaces PageReserved), don't unmap it */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#93: FILE: include/linux/mm.h:622:
+void print_invalid_pfn(const char *, pte_t, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t' should also have an identifier name
#93: FILE: include/linux/mm.h:622:
+void print_invalid_pfn(const char *, pte_t, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#93: FILE: include/linux/mm.h:622:
+void print_invalid_pfn(const char *, pte_t, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#93: FILE: include/linux/mm.h:622:
+void print_invalid_pfn(const char *, pte_t, unsigned long, unsigned long);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#106: FILE: mm/madvise.c:125:
+	if ((vma->vm_flags & (VM_LOCKED|VM_RESERVED)) || is_vm_hugetlb_page(vma))
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: mm/memory.c:343:
+void print_invalid_pfn(const char *errfunc, pte_t pte,
+				unsigned long vm_flags, unsigned long vaddr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#127: FILE: mm/memory.c:345:
+	printk(KERN_ERR "%s: pte does not point to valid memory. "

WARNING:SPLIT_STRING: quoted string split across lines
#128: FILE: mm/memory.c:346:
+	printk(KERN_ERR "%s: pte does not point to valid memory. "
+		"process = %s, pte = %08lx, vm_flags = %lx, vaddr = %lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: mm/memory.c:538:
+static void zap_pte_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pmd_t *pmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/memory.c:555:
+					print_invalid_pfn("zap_pte_range",
+						 ptent, vma->vm_flags, addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: mm/memory.c:614:
+static inline void zap_pmd_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pud_t *pud,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: mm/memory.c:631:
+static inline void zap_pud_range(struct mmu_gather *tlb,
+				struct vm_area_struct *vma, pgd_t *pgd,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: mm/memory.c:1254:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_page"
#319: FILE: mm/memory.c:1298:
+	if (old_page == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#330: FILE: mm/memory.c:1314:
+		if (old_page == NULL)
[...]
-		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_page"
#330: FILE: mm/memory.c:1314:
+		if (old_page == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#333: FILE: mm/memory.c:1316:
+		else {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#402: FILE: mm/page_alloc.c:117:
+			1 << PG_reserved );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#420: FILE: mm/page_alloc.c:330:
+			1 << PG_reserved )))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#430: FILE: mm/page_alloc.c:459:
+			1 << PG_reserved )))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#513: FILE: mm/fremap.c:71:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#522: FILE: mm/fremap.c:130:
+	BUG_ON(vma->vm_flags & VM_RESERVED);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: mm/msync.c:42:
+			print_invalid_pfn("sync_pte_range", *pte,
+							vma->vm_flags, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#576: FILE: mm/rmap.c:474:
+	BUG_ON(!pfn_valid(page_to_pfn(page)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: mm/rmap.c:647:
+			print_invalid_pfn("try_to_unmap_cluster", *pte,
+							vma->vm_flags, address);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#690: FILE: mm/mmap.c:1078:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#691: FILE: mm/mmap.c:1079:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mmap of VM_RESERVED memory, which "

WARNING:SPLIT_STRING: quoted string split across lines
#692: FILE: mm/mmap.c:1080:
+				"PROT_WRITE mmap of VM_RESERVED memory, which "
+				"is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#693: FILE: mm/mmap.c:1081:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#693: FILE: mm/mmap.c:1081:
+				"is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#711: FILE: mm/mprotect.c:135:
+			BUG_ON(oldflags & VM_WRITE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#712: FILE: mm/mprotect.c:136:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "

WARNING:SPLIT_STRING: quoted string split across lines
#713: FILE: mm/mprotect.c:137:
+			printk(KERN_WARNING "program %s is using MAP_PRIVATE, "
+				"PROT_WRITE mprotect of VM_RESERVED memory, "

WARNING:SPLIT_STRING: quoted string split across lines
#714: FILE: mm/mprotect.c:138:
+				"PROT_WRITE mprotect of VM_RESERVED memory, "
+				"which is deprecated. Please report this to "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: mm/mprotect.c:139:
+				"linux-kernel@vger.kernel.org\n",current->comm);
 				                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#715: FILE: mm/mprotect.c:139:
+				"which is deprecated. Please report this to "
+				"linux-kernel@vger.kernel.org\n",current->comm);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 20 warnings, 12 checks, 623 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
