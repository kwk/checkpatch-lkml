WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
--------------------------------------------------------------------------------

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/block/cciss_diskdump.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#46: FILE: drivers/block/cciss_diskdump.c:5:
+static int quiesce_ok = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#47: FILE: drivers/block/cciss_diskdump.c:6:
+static CommandList_struct *cciss_dump_cmnd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ReadCapdata_struct>
#48: FILE: drivers/block/cciss_diskdump.c:7:
+static ReadCapdata_struct *size_buff;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: drivers/block/cciss_diskdump.c:12:
+static CommandList_struct * cmd_alloc(ctlr_info_t *h, int get_from_pool);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <LunID>
#56: FILE: drivers/block/cciss_diskdump.c:15:
+static int find_ctlr_lun_ids(int *ctlr, int *lun, __u32 LunID);

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#57: FILE: drivers/block/cciss_diskdump.c:16:
+static int cciss_dump_rw_block(void *device, int rw, unsigned long dump_block_nr, void *buf, int len, unsigned long start_sect, unsigned long nr_sects);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 185 exceeds 100 columns
#62: FILE: drivers/block/cciss_diskdump.c:21:
+static int sendcmd(__u8	cmd,int	ctlr,void *buff,size_t	size, unsigned int use_unit_num, unsigned int log_unit,	__u8	page_code, unsigned char *scsi3addr, int block_nr, int diskdump);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: drivers/block/cciss_diskdump.c:21:
+static int sendcmd(__u8	cmd,int	ctlr,void *buff,size_t	size, unsigned int use_unit_num, unsigned int log_unit,	__u8	page_code, unsigned char *scsi3addr, int block_nr, int diskdump);
                        	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: drivers/block/cciss_diskdump.c:21:
+static int sendcmd(__u8	cmd,int	ctlr,void *buff,size_t	size, unsigned int use_unit_num, unsigned int log_unit,	__u8	page_code, unsigned char *scsi3addr, int block_nr, int diskdump);
                        	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: drivers/block/cciss_diskdump.c:21:
+static int sendcmd(__u8	cmd,int	ctlr,void *buff,size_t	size, unsigned int use_unit_num, unsigned int log_unit,	__u8	page_code, unsigned char *scsi3addr, int block_nr, int diskdump);
                        	       	               ^

ERROR:SPACING: space required before the open brace '{'
#84: FILE: drivers/block/cciss_diskdump.c:43:
+	while (1){

ERROR:SPACING: space required before the open brace '{'
#86: FILE: drivers/block/cciss_diskdump.c:45:
+		if (done == FIFO_EMPTY){

CHECK:BRACES: braces {} should be used on all arms of this statement
#86: FILE: drivers/block/cciss_diskdump.c:45:
+		if (done == FIFO_EMPTY){
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#87: FILE: drivers/block/cciss_diskdump.c:46:
+			udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#90: FILE: drivers/block/cciss_diskdump.c:49:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#96: FILE: drivers/block/cciss_diskdump.c:55:
+static int cciss_dump_shutdown(void *device) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#100: FILE: drivers/block/cciss_diskdump.c:59:
+static int cciss_dump_quiesce(void *device) {

ERROR:SPACING: space required before the open brace '{'
#105: FILE: drivers/block/cciss_diskdump.c:64:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

ERROR:SPACING: space required before the open parenthesis '('
#105: FILE: drivers/block/cciss_diskdump.c:64:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: drivers/block/cciss_diskdump.c:65:
+		printk("<1>Could not find controller or LUN.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: drivers/block/cciss_diskdump.c:72:
+		printk("<1>cciss%d: Error flushing cache\n", ctlr);

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#120: FILE: drivers/block/cciss_diskdump.c:79:
+static int cciss_dump_rw_block(void *device, int rw, unsigned long dump_block_nr, void *buf, int len, unsigned long start_sect, unsigned long nr_sects) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#120: FILE: drivers/block/cciss_diskdump.c:79:
+static int cciss_dump_rw_block(void *device, int rw, unsigned long dump_block_nr, void *buf, int len, unsigned long start_sect, unsigned long nr_sects) {

ERROR:SPACING: space required before the open parenthesis '('
#131: FILE: drivers/block/cciss_diskdump.c:90:
+	if(rw)

ERROR:SPACING: space required before the open brace '{'
#134: FILE: drivers/block/cciss_diskdump.c:93:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: drivers/block/cciss_diskdump.c:93:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: drivers/block/cciss_diskdump.c:94:
+		printk("<1>Could not find controller or LUN.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: drivers/block/cciss_diskdump.c:99:
+		printk("<1>quiesce not called\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/block/cciss_diskdump.c:104:
+^Iblock_nr += start_sect;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: drivers/block/cciss_diskdump.c:106:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#148: FILE: drivers/block/cciss_diskdump.c:107:
+	if (block_nr + (count/hba[ctlr]->drv[lun].block_size) > nr_sects + start_sect) {
 	                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: drivers/block/cciss_diskdump.c:108:
+		printk("<1>block number %d is larger than %lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/block/cciss_diskdump.c:109:
+		printk("<1>block number %d is larger than %lu\n",
+			block_nr + (count/hba[ctlr]->drv[lun].block_size), nr_sects);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#150: FILE: drivers/block/cciss_diskdump.c:109:
+			block_nr + (count/hba[ctlr]->drv[lun].block_size), nr_sects);
 			                 ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#158: FILE: drivers/block/cciss_diskdump.c:117:
+static int cciss_sanity_check(int ctlr, int lun){

ERROR:SPACING: space required before the open brace '{'
#158: FILE: drivers/block/cciss_diskdump.c:117:
+static int cciss_sanity_check(int ctlr, int lun){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/block/cciss_diskdump.c:125:
+	return_code = sendcmd(CCISS_READ_CAPACITY, ctlr, size_buff,
+			sizeof(ReadCapdata_struct), 1, lun, 0, NULL, 0, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/block/cciss_diskdump.c:128:
+^I^Itotal_size = (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: drivers/block/cciss_diskdump.c:130:
+^I^Itotal_size |= (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/block/cciss_diskdump.c:132:
+^I^Itotal_size |= (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/block/cciss_diskdump.c:135:
+^I^I^I(size_buff->total_size[3])); $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: drivers/block/cciss_diskdump.c:136:
+^I^Itotal_size++; ^I/* command returns highest */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/block/cciss_diskdump.c:139:
+^I^Iblock_size = (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/block/cciss_diskdump.c:141:
+               ^Iblock_size |= (0xff & $

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/block/cciss_diskdump.c:141:
+               ^Iblock_size |= (0xff & $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: drivers/block/cciss_diskdump.c:141:
+               ^Iblock_size |= (0xff & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/block/cciss_diskdump.c:141:
+               ^Iblock_size |= (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/block/cciss_diskdump.c:143:
+               ^Iblock_size |= (0xff & $

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: drivers/block/cciss_diskdump.c:143:
+               ^Iblock_size |= (0xff & $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: drivers/block/cciss_diskdump.c:143:
+               ^Iblock_size |= (0xff & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/block/cciss_diskdump.c:143:
+               ^Iblock_size |= (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/block/cciss_diskdump.c:145:
+               ^Iblock_size |= (0xff & $

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/block/cciss_diskdump.c:145:
+               ^Iblock_size |= (0xff & $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/block/cciss_diskdump.c:145:
+               ^Iblock_size |= (0xff & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/block/cciss_diskdump.c:145:
+               ^Iblock_size |= (0xff & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/block/cciss_diskdump.c:148:
+^I} else {^I/* read capacity command failed */ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: drivers/block/cciss_diskdump.c:149:
+		printk("<1>cciss: read capacity failed\n");

ERROR:SPACING: space required before the open brace '{'
#194: FILE: drivers/block/cciss_diskdump.c:153:
+	if(hba[ctlr]->drv[lun].nr_blocks != total_size){

ERROR:SPACING: space required before the open parenthesis '('
#194: FILE: drivers/block/cciss_diskdump.c:153:
+	if(hba[ctlr]->drv[lun].nr_blocks != total_size){

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#195: FILE: drivers/block/cciss_diskdump.c:154:
+		printk("block_size:%d, blocks:%d, blocks:%d\n", block_size, total_size, hba[ctlr]->drv[lun].nr_blocks );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: drivers/block/cciss_diskdump.c:154:
+		printk("block_size:%d, blocks:%d, blocks:%d\n", block_size, total_size, hba[ctlr]->drv[lun].nr_blocks );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: drivers/block/cciss_diskdump.c:154:
+		printk("block_size:%d, blocks:%d, blocks:%d\n", block_size, total_size, hba[ctlr]->drv[lun].nr_blocks );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#196: FILE: drivers/block/cciss_diskdump.c:155:
+		printk("<1>cciss:  blocks read do not match stored value\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#204: FILE: drivers/block/cciss_diskdump.c:163:
+/*Will set ctlr and lun numbers if found and return 0.  If not found it
+  will return 1 to indicate an error */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: drivers/block/cciss_diskdump.c:163:
+  will return 1 to indicate an error */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#205: FILE: drivers/block/cciss_diskdump.c:164:
+static int find_ctlr_lun_ids(int *ctlr, int *lun, __u32 LunID){

ERROR:SPACING: space required before the open brace '{'
#205: FILE: drivers/block/cciss_diskdump.c:164:
+static int find_ctlr_lun_ids(int *ctlr, int *lun, __u32 LunID){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#209: FILE: drivers/block/cciss_diskdump.c:168:
+	for(i=0; i<MAX_CTLR; i++){
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#209: FILE: drivers/block/cciss_diskdump.c:168:
+	for(i=0; i<MAX_CTLR; i++){
 	          ^

ERROR:SPACING: space required before the open brace '{'
#209: FILE: drivers/block/cciss_diskdump.c:168:
+	for(i=0; i<MAX_CTLR; i++){

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: drivers/block/cciss_diskdump.c:168:
+	for(i=0; i<MAX_CTLR; i++){

ERROR:SPACING: space required before the open brace '{'
#210: FILE: drivers/block/cciss_diskdump.c:169:
+		if(hba[i] != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: drivers/block/cciss_diskdump.c:169:
+		if(hba[i] != NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hba[i]"
#210: FILE: drivers/block/cciss_diskdump.c:169:
+		if(hba[i] != NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#211: FILE: drivers/block/cciss_diskdump.c:170:
+			for(j=0; j<NWD; j++){
 			     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#211: FILE: drivers/block/cciss_diskdump.c:170:
+			for(j=0; j<NWD; j++){
 			          ^

ERROR:SPACING: space required before the open brace '{'
#211: FILE: drivers/block/cciss_diskdump.c:170:
+			for(j=0; j<NWD; j++){

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: drivers/block/cciss_diskdump.c:170:
+			for(j=0; j<NWD; j++){

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: drivers/block/cciss_diskdump.c:171:
+				if(hba[i]->drv[j].LunID == LunID) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#224: FILE: drivers/block/cciss_diskdump.c:183:
+static int cciss_dump_sanity_check(void *device){

ERROR:SPACING: space required before the open brace '{'
#224: FILE: drivers/block/cciss_diskdump.c:183:
+static int cciss_dump_sanity_check(void *device){

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/block/cciss_diskdump.c:190:
+           of known devices.  If not found then throw an error */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#231: FILE: drivers/block/cciss_diskdump.c:190:
+	/* Find the controller and LUN by searching for the LUNID in our list
+           of known devices.  If not found then throw an error */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#231: FILE: drivers/block/cciss_diskdump.c:190:
+           of known devices.  If not found then throw an error */

ERROR:SPACING: space required before the open brace '{'
#232: FILE: drivers/block/cciss_diskdump.c:191:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

ERROR:SPACING: space required before the open parenthesis '('
#232: FILE: drivers/block/cciss_diskdump.c:191:
+	if(find_ctlr_lun_ids(&ctlr, &lun, dev->LunID)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: drivers/block/cciss_diskdump.c:192:
+		printk("<1>Could not find controller or LUN.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#234: FILE: drivers/block/cciss_diskdump.c:193:
+		sanity=-1;
 		      ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#234: FILE: drivers/block/cciss_diskdump.c:193:
+		sanity=-1;
 		       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: drivers/block/cciss_diskdump.c:198:
+	/* send a CCISS_READ_CAPACITY command here for the drive.  If the
+	   command succeeds then the drive is online.  Then we will check

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/block/cciss_diskdump.c:200:
+           way we can tell if anything has changed */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#241: FILE: drivers/block/cciss_diskdump.c:200:
+           way we can tell if anything has changed */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#242: FILE: drivers/block/cciss_diskdump.c:201:
+	adapter_sanity=cciss_sanity_check(ctlr, lun);
 	              ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#247: FILE: drivers/block/cciss_diskdump.c:206:
+void *cciss_probe(kdev_t dev){

ERROR:SPACING: space required before the open brace '{'
#247: FILE: drivers/block/cciss_diskdump.c:206:
+void *cciss_probe(kdev_t dev){

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#248: FILE: drivers/block/cciss_diskdump.c:207:
+	static int i=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: drivers/block/cciss_diskdump.c:207:
+	static int i=0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#255: FILE: drivers/block/cciss_diskdump.c:214:
+	info_p= hba[ctlr];
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#258: FILE: drivers/block/cciss_diskdump.c:217:
+	size_buff = kmalloc(sizeof( ReadCapdata_struct), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/block/cciss_diskdump.c:218:
+        if (size_buff == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/block/cciss_diskdump.c:218:
+        if (size_buff == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!size_buff"
#259: FILE: drivers/block/cciss_diskdump.c:218:
+        if (size_buff == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/block/cciss_diskdump.c:219:
+                printk(KERN_ERR "cciss: out of memory\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/block/cciss_diskdump.c:219:
+                printk(KERN_ERR "cciss: out of memory\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: drivers/block/cciss_diskdump.c:219:
+                printk(KERN_ERR "cciss: out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#260: FILE: drivers/block/cciss_diskdump.c:219:
+        if (size_buff == NULL) {
+                printk(KERN_ERR "cciss: out of memory\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: drivers/block/cciss_diskdump.c:220:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/block/cciss_diskdump.c:220:
+                return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: drivers/block/cciss_diskdump.c:221:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/block/cciss_diskdump.c:221:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: drivers/block/cciss_diskdump.c:223:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#266: FILE: drivers/block/cciss_diskdump.c:225:
+	/* If the LUN does not exist on the controller then we must
+	   let diskdump know that this device is not valid */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: drivers/block/cciss_diskdump.c:225:
+	   let diskdump know that this device is not valid */

ERROR:SPACING: space required before the open parenthesis '('
#267: FILE: drivers/block/cciss_diskdump.c:226:
+	if(hba[ctlr]->drv[target].nr_blocks == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/block/cciss_diskdump.c:228:
+^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#273: FILE: drivers/block/cciss_diskdump.c:232:
+static unsigned int cciss_add_device(void *device) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/block/cciss_diskdump.c:234:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 70 errors, 36 warnings, 13 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
