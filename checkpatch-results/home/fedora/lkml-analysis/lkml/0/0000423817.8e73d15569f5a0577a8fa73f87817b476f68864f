WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'heirarchy' may be misspelled - perhaps 'hierarchy'?
#31: FILE: drivers/char/serial.c:67:
+ *      status control (DSR, DCD) too. This required new heirarchy of
                                                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/char/serial.c:5559:
+       serial_console_sysctl_init();$

WARNING:TYPO_SPELLING: 'receieved' may be misspelled - perhaps 'received'?
#92: FILE: drivers/char/serial.c:5808:
+ * negotiating and a character is receieved from the local machine.
                                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'satelite' may be misspelled - perhaps 'satellite'?
#112: FILE: drivers/char/serial.c:5828:
+ * satelite circuit, other users of the circuit would be disrupted.
    ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/char/serial.c:5878:
+ { 1, "messages-total",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/serial.c:5879:
+   &(serial_console_counters.messages_total), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.messages_total
#168: FILE: drivers/char/serial.c:5879:
+   &(serial_console_counters.messages_total), sizeof(int),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/char/serial.c:5880:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/serial.c:5881:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/serial.c:5882:
+ { 2, "messages-dropped",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/serial.c:5883:
+   &(serial_console_counters.messages_dropped), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.messages_dropped
#172: FILE: drivers/char/serial.c:5883:
+   &(serial_console_counters.messages_dropped), sizeof(int),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/char/serial.c:5884:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/char/serial.c:5885:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/char/serial.c:5886:
+ { 3, "timeouts-transmit",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/char/serial.c:5887:
+   &(serial_console_counters.timeouts_tx), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.timeouts_tx
#176: FILE: drivers/char/serial.c:5887:
+   &(serial_console_counters.timeouts_tx), sizeof(int),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/char/serial.c:5888:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/char/serial.c:5889:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/char/serial.c:5890:
+ { 4, "timeouts-data-set-ready",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/char/serial.c:5891:
+   &(serial_console_counters.timeouts_dsr), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.timeouts_dsr
#180: FILE: drivers/char/serial.c:5891:
+   &(serial_console_counters.timeouts_dsr), sizeof(int),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/char/serial.c:5892:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/char/serial.c:5893:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/char/serial.c:5894:
+ { 5, "timeouts-data-carrier-detect",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/char/serial.c:5895:
+   &(serial_console_counters.timeouts_cts), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.timeouts_cts
#184: FILE: drivers/char/serial.c:5895:
+   &(serial_console_counters.timeouts_cts), sizeof(int),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/char/serial.c:5896:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/char/serial.c:5897:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/char/serial.c:5898:
+ { 6, "timeouts-clear-to-send",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/char/serial.c:5899:
+   &(serial_console_counters.timeouts_cts), sizeof(int),$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around serial_console_counters.timeouts_cts
#188: FILE: drivers/char/serial.c:5899:
+   &(serial_console_counters.timeouts_cts), sizeof(int),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/char/serial.c:5900:
+   0444, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/char/serial.c:5901:
+   &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/char/serial.c:5902:
+ { 7, "maximum-attempts-transmit",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/char/serial.c:5903:
+   &serial_console_attempts_tx, sizeof(int),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/char/serial.c:5904:
+   0664, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/serial.c:5905:
+   &proc_dointvec_minmax, NULL, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/serial.c:5906:
+   &serial_console_attempts_min,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/serial.c:5907:
+   &serial_console_attempts_max },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/serial.c:5908:
+ { 8, "maximum-attempts-clear-to-send",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/serial.c:5909:
+   &serial_console_attempts_cts, sizeof(int),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/serial.c:5910:
+   0664, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/char/serial.c:5911:
+   &proc_dointvec_minmax, NULL, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/char/serial.c:5912:
+   &serial_console_attempts_min,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/serial.c:5913:
+   &serial_console_attempts_max },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/char/serial.c:5914:
+ { 0 }  /* Last */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/char/serial.c:5918:
+ { 1, "serialconsole",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/char/serial.c:5919:
+   NULL, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/char/serial.c:5920:
+   0555, serial_console_sysctl_files },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/char/serial.c:5921:
+ { 0 }  /* Last */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/serial.c:5925:
+ { CTL_DEV, "dev",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/char/serial.c:5926:
+   NULL, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/char/serial.c:5927:
+   0555, serial_console_sysctl_directory },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/char/serial.c:5928:
+ { 0 }  /* Last */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: drivers/char/serial.c:5933:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/serial.c:5944:
+ memset(&serial_console_counters,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/char/serial.c:5945:
+        0,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/serial.c:5945:
+        0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/char/serial.c:5946:
+        sizeof(serial_console_counters));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/serial.c:5946:
+        sizeof(serial_console_counters));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/serial.c:5947:
+ serial_console_sysctl =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/serial.c:5948:
+   register_sysctl_table(serial_console_sysctl_root,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/char/serial.c:5949:
+             0);  /* Insert at end */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/char/serial.c:5949:
+   register_sysctl_table(serial_console_sysctl_root,
+             0);  /* Insert at end */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/serial.c:5949:
+             0);  /* Insert at end */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/char/serial.c:5950:
+ return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: drivers/char/serial.c:5953:
+
+

WARNING:TYPO_SPELLING: 'compling' may be misspelled - perhaps 'compiling'?
#245: FILE: drivers/char/serial.c:5956:
+ *  as compling this code as a MODULE defeats CONFIG_SERIAL_CONSOLE.
        ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/char/serial.c:5961:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/char/serial.c:5975:
+ unsigned int timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/char/serial.c:5977:
+ unsigned int status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/char/serial.c:5979:
+ timeout = serial_console_attempts_tx;$

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#275: FILE: drivers/char/serial.c:5984:
+     /* If Break has been recieved then note that for the
                           ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/char/serial.c:5987:
+     if (status & UART_LSR_BI) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#278: FILE: drivers/char/serial.c:5987:
+     if (status & UART_LSR_BI) {
           lsr_break_flag = UART_LSR_BI;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#278: FILE: drivers/char/serial.c:5987:
+     if (status & UART_LSR_BI) {
           lsr_break_flag = UART_LSR_BI;
+     }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/char/serial.c:5989:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/char/serial.c:5991:
+     if (--timeout == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#285: FILE: drivers/char/serial.c:5991:
+     if (--timeout == 0) {
[...]
+         serial_console_counters.timeouts_tx++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/char/serial.c:5992:
+         /* Transmit buffer hasn't emptied in a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/char/serial.c:5993:
+          * reasonable time.  Discard the character.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: drivers/char/serial.c:5994:
+          */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/char/serial.c:5995:
+         serial_console_counters.timeouts_tx++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/char/serial.c:5995:
+         serial_console_counters.timeouts_tx++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/char/serial.c:5996:
+         return (info->flags & ASYNC_CONS_FLOW);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/char/serial.c:5996:
+         return (info->flags & ASYNC_CONS_FLOW);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/char/serial.c:5997:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/char/serial.c:5998:
+ } while ((status & BOTH_EMPTY) != BOTH_EMPTY);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/char/serial.c:5999:
+ return 0;$

WARNING:TYPO_SPELLING: 'reciever' may be misspelled - perhaps 'receiver'?
#304: FILE: drivers/char/serial.c:6010:
+ *             RS-232 status control lines indicate no reciever.
                                                        ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/char/serial.c:6017:
+ unsigned int timeout;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/char/serial.c:6019:
+ unsigned int status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/char/serial.c:6021:
+ if (serial_console_drain(info))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#316: FILE: drivers/char/serial.c:6021:
+ if (serial_console_drain(info))
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 5)
#316: FILE: drivers/char/serial.c:6021:
+ if (serial_console_drain(info))
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/char/serial.c:6022:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/char/serial.c:6023:
+     return !0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/char/serial.c:6024:
+ }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 5)
#325: FILE: drivers/char/serial.c:6030:
      if (info->flags & ASYNC_CONS_FLOW) {
+     for (timeout = serial_console_attempts_cts;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/char/serial.c:6031:
+     for (timeout = serial_console_attempts_cts;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#331: FILE: drivers/char/serial.c:6031:
+     for (timeout = serial_console_attempts_cts;
[...]
+         status = serial_in(info, UART_MSR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/char/serial.c:6032:
+          timeout > 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/char/serial.c:6032:
+          timeout > 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/char/serial.c:6033:
+          timeout --) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/char/serial.c:6033:
+          timeout --) {$

ERROR:SPACING: space prohibited before that '--' (ctx:WxB)
#333: FILE: drivers/char/serial.c:6033:
+          timeout --) {
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: drivers/char/serial.c:6034:
+         status = serial_in(info, UART_MSR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/char/serial.c:6034:
+         status = serial_in(info, UART_MSR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/char/serial.c:6035:
+         /* None of the modem status lines, including$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/char/serial.c:6036:
+          * Clear to Send, are valid unless Data Set$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/char/serial.c:6037:
+          * Ready is asserted.  Also, we should not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/char/serial.c:6038:
+          * transmit unless Data Carrier Detect is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/char/serial.c:6039:
+          * asserted (implying that a receiver is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/char/serial.c:6040:
+          * present).  If DSR or DCD is not present we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/char/serial.c:6041:
+          * discard the message (the carrier won't be$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/char/serial.c:6042:
+          * asserted in the time taken to poll the UART$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/char/serial.c:6043:
+          * a few times more).  Distinct DSR and DCD$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/char/serial.c:6044:
+          * counters are maintained for simple$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/char/serial.c:6045:
+          * diagnosis of cable and modem faults.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/char/serial.c:6046:
+          */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/char/serial.c:6047:
+         if ((status & UART_MSR_DSR) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/char/serial.c:6047:
+         if ((status & UART_MSR_DSR) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#347: FILE: drivers/char/serial.c:6047:
+         if ((status & UART_MSR_DSR) == 0) {
+             serial_console_counters.timeouts_dsr++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: drivers/char/serial.c:6048:
+             serial_console_counters.timeouts_dsr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/char/serial.c:6048:
+             serial_console_counters.timeouts_dsr++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: drivers/char/serial.c:6049:
+             return !0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/char/serial.c:6049:
+             return !0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: drivers/char/serial.c:6050:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/char/serial.c:6050:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/char/serial.c:6051:
+         if ((status & UART_MSR_DCD) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/char/serial.c:6051:
+         if ((status & UART_MSR_DCD) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#351: FILE: drivers/char/serial.c:6051:
+         if ((status & UART_MSR_DCD) == 0) {
+             serial_console_counters.timeouts_dcd++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/char/serial.c:6052:
+             serial_console_counters.timeouts_dcd++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/char/serial.c:6052:
+             serial_console_counters.timeouts_dcd++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/char/serial.c:6053:
+             return !0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/char/serial.c:6053:
+             return !0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/char/serial.c:6054:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/char/serial.c:6054:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/char/serial.c:6055:
+         /* At this point DSR and DCD are asserted, so$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/char/serial.c:6056:
+          * valid to test flow control.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/char/serial.c:6057:
+          */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/char/serial.c:6058:
+         if (status & UART_MSR_CTS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/char/serial.c:6058:
+         if (status & UART_MSR_CTS) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#358: FILE: drivers/char/serial.c:6058:
+         if (status & UART_MSR_CTS) {
+             return 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#358: FILE: drivers/char/serial.c:6058:
+         if (status & UART_MSR_CTS) {
+             return 0;
+         }

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/char/serial.c:6059:
+             return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/char/serial.c:6059:
+             return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: drivers/char/serial.c:6060:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/char/serial.c:6060:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/char/serial.c:6061:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/char/serial.c:6065:
+     serial_console_counters.timeouts_cts++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/char/serial.c:6066:
+     return !0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/char/serial.c:6067:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/char/serial.c:6069:
+ return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/char/serial.c:6082:
+               char ch)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/char/serial.c:6082:
+static int serial_console_out(struct async_struct *info,
+               char ch)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/char/serial.c:6082:
+               char ch)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/char/serial.c:6084:
+ int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/char/serial.c:6086:
+ error = serial_console_flow(info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/char/serial.c:6087:
+ if (!error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 5)
#393: FILE: drivers/char/serial.c:6087:
+ if (!error) {
+     serial_out(info, UART_TX, ch);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#393: FILE: drivers/char/serial.c:6087:
+ if (!error) {
+     serial_out(info, UART_TX, ch);
+ }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/char/serial.c:6088:
+     serial_out(info, UART_TX, ch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/char/serial.c:6089:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/char/serial.c:6090:
+ return error;$

WARNING:TYPO_SPELLING: 'ingnored' may be misspelled - perhaps 'ignored'?
#400: FILE: drivers/char/serial.c:6094:
+ * port. 'co' is ingnored, as the serial console is described by the
                  ^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#413: FILE: drivers/char/serial.c:6107:
+static void serial_console_write(struct console *co,
+              const char *message,
+              unsigned int message_length)
  {

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/char/serial.c:6108:
+              const char *message,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/char/serial.c:6108:
+static void serial_console_write(struct console *co,
+              const char *message,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/char/serial.c:6108:
+              const char *message,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/char/serial.c:6109:
+              unsigned int message_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/char/serial.c:6109:
+              unsigned int message_length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/char/serial.c:6112:
+ unsigned int ier;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/char/serial.c:6120:
+ unsigned int u;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/char/serial.c:6121:
+ const char *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/char/serial.c:6123:
+ serial_console_counters.messages_total++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/char/serial.c:6132:
+ for (u = 0, p = message; u < message_length; u++, p++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#456: FILE: drivers/char/serial.c:6132:
+ for (u = 0, p = message; u < message_length; u++, p++)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 5)
#456: FILE: drivers/char/serial.c:6132:
+ for (u = 0, p = message; u < message_length; u++, p++)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/char/serial.c:6133:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/char/serial.c:6134:
+     if (*p == '\n') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#458: FILE: drivers/char/serial.c:6134:
+     if (*p == '\n') {
[...]
+         if (serial_console_out(info, '\r')) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: drivers/char/serial.c:6135:
+         /* Expand end of line LF to CR LF, as expected$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/char/serial.c:6136:
+          * by terminals and printers.  v5.05c sent LF$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/char/serial.c:6137:
+          * CR, which isn't right for printers.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: drivers/char/serial.c:6138:
+          */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: drivers/char/serial.c:6139:
+         if (serial_console_out(info, '\r')) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/char/serial.c:6139:
+         if (serial_console_out(info, '\r')) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#463: FILE: drivers/char/serial.c:6139:
+         if (serial_console_out(info, '\r')) {
+             serial_console_counters.messages_dropped++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: drivers/char/serial.c:6140:
+             serial_console_counters.messages_dropped++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/char/serial.c:6140:
+             serial_console_counters.messages_dropped++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: drivers/char/serial.c:6141:
+             break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/char/serial.c:6141:
+             break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: drivers/char/serial.c:6142:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/char/serial.c:6142:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/char/serial.c:6143:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/char/serial.c:6144:
+     if (serial_console_out(info, *p)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#468: FILE: drivers/char/serial.c:6144:
+     if (serial_console_out(info, *p)) {
+         serial_console_counters.messages_dropped++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: drivers/char/serial.c:6145:
+         serial_console_counters.messages_dropped++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/char/serial.c:6145:
+         serial_console_counters.messages_dropped++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/char/serial.c:6146:
+         break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/char/serial.c:6146:
+         break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/char/serial.c:6158:
+ (void)serial_console_drain(info);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 139 warnings, 12 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
