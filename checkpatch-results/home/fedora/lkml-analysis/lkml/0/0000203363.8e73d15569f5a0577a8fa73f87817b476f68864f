ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: drivers/i2c/i2c-core.c:702:
+static void i2c_start_entry(struct i2c_adapter * adap,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: drivers/i2c/i2c-core.c:703:
+			    struct i2c_op_q_entry * entry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: drivers/i2c/i2c-core.c:722:
+static void i2c_wait_complete(struct i2c_op_q_entry * entry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: drivers/i2c/i2c-core.c:725:
+	struct completion *done = entry->handler_data;
+	pr_debug("i2c_wait_complete %p\n", entry);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i2c_wait_complete', this function's name, in a string
#93: FILE: drivers/i2c/i2c-core.c:725:
+	pr_debug("i2c_wait_complete %p\n", entry);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: drivers/i2c/i2c-core.c:729:
+static void i2c_perform_op_wait(struct i2c_adapter * adap,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: drivers/i2c/i2c-core.c:730:
+				struct i2c_op_q_entry * entry)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i2c_perform_op_wait', this function's name, in a string
#104: FILE: drivers/i2c/i2c-core.c:736:
+	pr_debug("i2c_perform_op_wait %p %p\n", adap, entry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: drivers/i2c/i2c-core.c:755:
+		struct completion start;
+		init_completion(&start);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: drivers/i2c/i2c-core.c:764:
+			/* Operation was interrupted.  There
+			   is a race, we can't use the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#133: FILE: drivers/i2c/i2c-core.c:765:
+			   wait_for_completion return code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#142: FILE: drivers/i2c/i2c-core.c:774:
+	/* Once the operation is started, we will not
+	   interrupt it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#142: FILE: drivers/i2c/i2c-core.c:774:
+	   interrupt it. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: drivers/i2c/i2c-core.c:777:
+		unsigned int timeout = entry->call_again_us;
+		timeout += (USEC_PER_JIFFIE - 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adap->algo->poll"
#186: FILE: drivers/i2c/i2c-core.c:1533:
+	return adap->algo->poll != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/i2c/i2c-core.c:1541:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/i2c/i2c-core.c:1541:
+    $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#209: FILE: drivers/i2c/i2c-core.c:1556:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:BRACES: braces {} should be used on all arms of this statement
#232: FILE: drivers/i2c/i2c-core.c:1579:
+	if (adap->q.next == &entry->link) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#236: FILE: drivers/i2c/i2c-core.c:1583:
+	} else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: drivers/i2c/i2c-core.c:1736:
+EXPORT_SYMBOL(i2c_non_blocking_capable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#258: FILE: drivers/i2c/i2c-core.c:1737:
+EXPORT_SYMBOL(i2c_poll);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#259: FILE: drivers/i2c/i2c-core.c:1738:
+EXPORT_SYMBOL(i2c_non_blocking_op);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#273: FILE: include/linux/i2c.h:106:
+/* Non-blocking interface.  The user should fill out the public
+   portions of the entry structure.  All data in the entry structure

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#275: FILE: include/linux/i2c.h:108:
+   called with the entry. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/i2c.h:109:
+extern int i2c_non_blocking_op(struct i2c_client *client,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#280: FILE: include/linux/i2c.h:113:
+extern int i2c_non_blocking_capable(struct i2c_adapter *adap);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#283: FILE: include/linux/i2c.h:116:
+/* Poll the i2c interface.  This should only be called in a situation
+   where scheduling and interrupts are off.  You should put the amount

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#284: FILE: include/linux/i2c.h:117:
+   of microseconds between calls in us_since_last_call. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/i2c.h:118:
+extern void i2c_poll(struct i2c_client *client,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#288: FILE: include/linux/i2c.h:121:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#297: FILE: include/linux/i2c.h:252:
+	/* These are like the previous calls, but they will only start
+	   the operation.  The poll call will be called periodically

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#306: FILE: include/linux/i2c.h:261:
+	   should set the result and call i2c_op_done(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#312: FILE: include/linux/i2c.h:267:
+	/* us_since_last_poll is the amount of time since the last
+	   time poll was called. Note that this may be *less* than the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#316: FILE: include/linux/i2c.h:271:
+	   poll.  The value may be zero. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 22 warnings, 7 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203363.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
