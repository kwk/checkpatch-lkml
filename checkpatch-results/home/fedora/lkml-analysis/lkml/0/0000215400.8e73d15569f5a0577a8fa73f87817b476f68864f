ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#29: 
--- a/fs/task_mmu.c	Fri Jan 14 00:21:23 2005

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#44: FILE: fs/task_mmu.c:115:
+		m->version = (map != get_gate_vma(task))? map->vm_start: 0;
 		                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#44: FILE: fs/task_mmu.c:115:
+		m->version = (map != get_gate_vma(task))? map->vm_start: 0;
 		                                                       ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#72: FILE: fs/task_mmu.c:170:
+	m->version = (tail_map != NULL)? 0: -1UL;
 	                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#72: FILE: fs/task_mmu.c:170:
+	m->version = (tail_map != NULL)? 0: -1UL;
 	                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tail_map"
#72: FILE: fs/task_mmu.c:170:
+	m->version = (tail_map != NULL)? 0: -1UL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map != tail_map'
#82: FILE: fs/task_mmu.c:194:
+	if (map && (map != tail_map) && map->vm_next)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 0 warnings, 2 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215400.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
