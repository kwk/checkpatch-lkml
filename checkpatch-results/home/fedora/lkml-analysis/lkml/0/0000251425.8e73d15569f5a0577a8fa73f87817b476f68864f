WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
>> though we may have debates about how to evaluate lg(n) at compile-time...

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#66: FILE: include/linux/pagevec.h:10:
+#define __PAGEVEC_SIZE_0(n, k)						\
+	((k) * !!((unsigned long)(n) > (1ULL << (!(k) ? 0 : (k) - 1))	\
+			&& ((unsigned long)(n) <= (1ULL << (k)))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#66: FILE: include/linux/pagevec.h:10:
+#define __PAGEVEC_SIZE_0(n, k)						\
+	((k) * !!((unsigned long)(n) > (1ULL << (!(k) ? 0 : (k) - 1))	\
+			&& ((unsigned long)(n) <= (1ULL << (k)))))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#68: FILE: include/linux/pagevec.h:12:
+	((k) * !!((unsigned long)(n) > (1ULL << (!(k) ? 0 : (k) - 1))	\
+			&& ((unsigned long)(n) <= (1ULL << (k)))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#69: FILE: include/linux/pagevec.h:13:
+#define __PAGEVEC_SIZE_1(n, k)						\
+	(__PAGEVEC_SIZE_0(n, 2*(k)+1) + __PAGEVEC_SIZE_0(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#69: FILE: include/linux/pagevec.h:13:
+#define __PAGEVEC_SIZE_1(n, k)						\
+	(__PAGEVEC_SIZE_0(n, 2*(k)+1) + __PAGEVEC_SIZE_0(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#70: FILE: include/linux/pagevec.h:14:
+	(__PAGEVEC_SIZE_0(n, 2*(k)+1) + __PAGEVEC_SIZE_0(n, 2*(k)))
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#70: FILE: include/linux/pagevec.h:14:
+	(__PAGEVEC_SIZE_0(n, 2*(k)+1) + __PAGEVEC_SIZE_0(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#70: FILE: include/linux/pagevec.h:14:
+	(__PAGEVEC_SIZE_0(n, 2*(k)+1) + __PAGEVEC_SIZE_0(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#71: FILE: include/linux/pagevec.h:15:
+#define __PAGEVEC_SIZE_2(n, k)						\
+	(__PAGEVEC_SIZE_1(n, 2*(k)+1) + __PAGEVEC_SIZE_1(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#71: FILE: include/linux/pagevec.h:15:
+#define __PAGEVEC_SIZE_2(n, k)						\
+	(__PAGEVEC_SIZE_1(n, 2*(k)+1) + __PAGEVEC_SIZE_1(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#72: FILE: include/linux/pagevec.h:16:
+	(__PAGEVEC_SIZE_1(n, 2*(k)+1) + __PAGEVEC_SIZE_1(n, 2*(k)))
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#72: FILE: include/linux/pagevec.h:16:
+	(__PAGEVEC_SIZE_1(n, 2*(k)+1) + __PAGEVEC_SIZE_1(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#72: FILE: include/linux/pagevec.h:16:
+	(__PAGEVEC_SIZE_1(n, 2*(k)+1) + __PAGEVEC_SIZE_1(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#73: FILE: include/linux/pagevec.h:17:
+#define __PAGEVEC_SIZE_3(n, k)						\
+	(__PAGEVEC_SIZE_2(n, 2*(k)+1) + __PAGEVEC_SIZE_2(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#73: FILE: include/linux/pagevec.h:17:
+#define __PAGEVEC_SIZE_3(n, k)						\
+	(__PAGEVEC_SIZE_2(n, 2*(k)+1) + __PAGEVEC_SIZE_2(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: include/linux/pagevec.h:18:
+	(__PAGEVEC_SIZE_2(n, 2*(k)+1) + __PAGEVEC_SIZE_2(n, 2*(k)))
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: include/linux/pagevec.h:18:
+	(__PAGEVEC_SIZE_2(n, 2*(k)+1) + __PAGEVEC_SIZE_2(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#74: FILE: include/linux/pagevec.h:18:
+	(__PAGEVEC_SIZE_2(n, 2*(k)+1) + __PAGEVEC_SIZE_2(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#75: FILE: include/linux/pagevec.h:19:
+#define __PAGEVEC_SIZE_4(n, k)						\
+	(__PAGEVEC_SIZE_3(n, 2*(k)+1) + __PAGEVEC_SIZE_3(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#75: FILE: include/linux/pagevec.h:19:
+#define __PAGEVEC_SIZE_4(n, k)						\
+	(__PAGEVEC_SIZE_3(n, 2*(k)+1) + __PAGEVEC_SIZE_3(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#76: FILE: include/linux/pagevec.h:20:
+	(__PAGEVEC_SIZE_3(n, 2*(k)+1) + __PAGEVEC_SIZE_3(n, 2*(k)))
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#76: FILE: include/linux/pagevec.h:20:
+	(__PAGEVEC_SIZE_3(n, 2*(k)+1) + __PAGEVEC_SIZE_3(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#76: FILE: include/linux/pagevec.h:20:
+	(__PAGEVEC_SIZE_3(n, 2*(k)+1) + __PAGEVEC_SIZE_3(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#77: FILE: include/linux/pagevec.h:21:
+#define __PAGEVEC_SIZE_5(n, k)						\
+	(__PAGEVEC_SIZE_4(n, 2*(k)+1) + __PAGEVEC_SIZE_4(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#77: FILE: include/linux/pagevec.h:21:
+#define __PAGEVEC_SIZE_5(n, k)						\
+	(__PAGEVEC_SIZE_4(n, 2*(k)+1) + __PAGEVEC_SIZE_4(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#78: FILE: include/linux/pagevec.h:22:
+	(__PAGEVEC_SIZE_4(n, 2*(k)+1) + __PAGEVEC_SIZE_4(n, 2*(k)))
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#78: FILE: include/linux/pagevec.h:22:
+	(__PAGEVEC_SIZE_4(n, 2*(k)+1) + __PAGEVEC_SIZE_4(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#78: FILE: include/linux/pagevec.h:22:
+	(__PAGEVEC_SIZE_4(n, 2*(k)+1) + __PAGEVEC_SIZE_4(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#79: FILE: include/linux/pagevec.h:23:
+#define __PAGEVEC_SIZE_6(n, k)						\
+	(__PAGEVEC_SIZE_5(n, 2*(k)+1) + __PAGEVEC_SIZE_5(n, 2*(k)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'k' - possible side-effects?
#79: FILE: include/linux/pagevec.h:23:
+#define __PAGEVEC_SIZE_6(n, k)						\
+	(__PAGEVEC_SIZE_5(n, 2*(k)+1) + __PAGEVEC_SIZE_5(n, 2*(k)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: include/linux/pagevec.h:24:
+	(__PAGEVEC_SIZE_5(n, 2*(k)+1) + __PAGEVEC_SIZE_5(n, 2*(k)))
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#80: FILE: include/linux/pagevec.h:24:
+	(__PAGEVEC_SIZE_5(n, 2*(k)+1) + __PAGEVEC_SIZE_5(n, 2*(k)))
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: include/linux/pagevec.h:24:
+	(__PAGEVEC_SIZE_5(n, 2*(k)+1) + __PAGEVEC_SIZE_5(n, 2*(k)))
 	                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#81: FILE: include/linux/pagevec.h:25:
+#define __PAGEVEC_SIZE(n)						\
+	(BITS_PER_LONG == 32 ? __PAGEVEC_SIZE_5(n, 0) : __PAGEVEC_SIZE_6(n, 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#83: FILE: include/linux/pagevec.h:27:
+#define PAGEVEC_SIZE		(NR_CPUS > 1 ? 4*__PAGEVEC_SIZE(NR_CPUS) : 4)
                     		                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 35 checks, 28 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
