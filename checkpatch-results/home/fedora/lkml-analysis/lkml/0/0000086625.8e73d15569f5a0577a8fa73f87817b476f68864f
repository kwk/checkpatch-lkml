CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/net/inet6_hashtables.h:51:
+extern void __inet6_hash(struct inet_hashinfo *hashinfo, struct sock *sk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/net/inet6_hashtables.h:59:
+extern struct sock *__inet6_lookup_established(struct inet_hashinfo *hashinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: include/net/inet6_hashtables.h:60:
+extern struct sock *__inet6_lookup_established(struct inet_hashinfo *hashinfo,
 					   const struct in6_addr *saddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: net/ipv6/inet6_hashtables.c:27:
+void __inet6_hash(struct inet_hashinfo *hashinfo,
+				struct sock *sk)

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: net/ipv6/inet6_hashtables.c:40:
+		unsigned int hash;
+		sk->sk_hash = hash = inet6_sk_ehashfn(sk);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#163: FILE: net/ipv6/inet6_hashtables.c:40:
+		sk->sk_hash = hash = inet6_sk_ehashfn(sk);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#177: FILE: net/ipv6/inet6_hashtables.c:54:
+/*
+ * Sockets in TCP_CLOSE state are _always_ taken out of the hash, so

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: net/ipv6/inet6_hashtables.c:60:
+struct sock *__inet6_lookup_established(struct inet_hashinfo *hashinfo,
+					   const struct in6_addr *saddr,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tw->tw_dport
#209: FILE: net/ipv6/inet6_hashtables.c:86:
+		if(*((__u32 *)&(tw->tw_dport))	== ports	&&

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: net/ipv6/inet6_hashtables.c:86:
+		if(*((__u32 *)&(tw->tw_dport))	== ports	&&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 2 warnings, 7 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
