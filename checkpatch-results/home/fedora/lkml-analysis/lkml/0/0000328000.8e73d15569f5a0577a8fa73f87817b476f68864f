ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#52: 
--- a/drivers/ide/Kconfig	Fri Oct 24 18:58:44 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/ide/Kconfig:743:
+config BLK_DEV_SGIIOC4
+	tristate "Silicon Graphics IOC4 chipset support"
+	depends on IA64_SGI_SN2
+	help
+	  This driver adds PIO & MultiMode DMA-2 support for the SGI IOC4
+	  chipset, which has one channel and can support two devices.
+	  Please say Y here if you have an Altix System from SGI.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#108: FILE: drivers/ide/ide-dma.c:223:
+EXPORT_SYMBOL_GPL(ide_build_sglist);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#129: FILE: drivers/ide/ide-dma.c:275:
+EXPORT_SYMBOL_GPL(ide_raw_build_sglist);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#148: FILE: drivers/ide/pci/sgiioc4.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#161: FILE: drivers/ide/pci/sgiioc4.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#185: FILE: drivers/ide/pci/sgiioc4.c:38:
+#include <asm/io.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#226: FILE: drivers/ide/pci/sgiioc4.c:79:
+typedef struct {

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#241: FILE: drivers/ide/pci/sgiioc4.c:94:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#241: FILE: drivers/ide/pci/sgiioc4.c:94:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: drivers/ide/pci/sgiioc4.c:96:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: drivers/ide/pci/sgiioc4.c:98:
+sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: drivers/ide/pci/sgiioc4.c:116:
+sgiioc4_maskproc(ide_drive_t * drive, int mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: drivers/ide/pci/sgiioc4.c:119:
+	ide_hwif_t *hwif = HWIF(drive);
+	hwif->OUTB(mask ? (drive->ctl | 2) : (drive->ctl & ~2),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#270: FILE: drivers/ide/pci/sgiioc4.c:123:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: drivers/ide/pci/sgiioc4.c:125:
+sgiioc4_checkirq(ide_hwif_t * hwif)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: drivers/ide/pci/sgiioc4.c:136:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: drivers/ide/pci/sgiioc4.c:138:
+sgiioc4_clearirq(ide_drive_t * drive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: drivers/ide/pci/sgiioc4.c:157:
+		int count = 0;
+		stat = hwif->INB(IDE_STATUS_REG);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#321: FILE: drivers/ide/pci/sgiioc4.c:174:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: drivers/ide/pci/sgiioc4.c:176:
+			       "%s(%s) : PCI Bus Error when doing DMA:"
+				   " status-cmd reg is 0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#324: FILE: drivers/ide/pci/sgiioc4.c:177:
+			       __FUNCTION__, drive->name, pci_stat_cmd_reg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#325: FILE: drivers/ide/pci/sgiioc4.c:178:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#327: FILE: drivers/ide/pci/sgiioc4.c:180:
+			       __FUNCTION__, drive->name,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: drivers/ide/pci/sgiioc4.c:197:
+sgiioc4_ide_dma_begin(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: drivers/ide/pci/sgiioc4.c:225:
+sgiioc4_ide_dma_end(ide_drive_t * drive)

CHECK:SPACING: No space is necessary after a cast
#378: FILE: drivers/ide/pci/sgiioc4.c:231:
+	unsigned long *ending_dma = (unsigned long *) hwif->dma_base2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#385: FILE: drivers/ide/pci/sgiioc4.c:238:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#387: FILE: drivers/ide/pci/sgiioc4.c:240:
+		       "%s(%s): IOC4 DMA STOP bit is still 1 :"
+		       "ioc4_dma_reg 0x%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#388: FILE: drivers/ide/pci/sgiioc4.c:241:
+		       __FUNCTION__, drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#407: FILE: drivers/ide/pci/sgiioc4.c:260:
+		printk(KERN_ERR "%s(%s) : DMA incomplete\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#407: FILE: drivers/ide/pci/sgiioc4.c:260:
+		printk(KERN_ERR "%s(%s) : DMA incomplete\n", __FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#417: FILE: drivers/ide/pci/sgiioc4.c:270:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#419: FILE: drivers/ide/pci/sgiioc4.c:272:
+			       "%s(%s): WARNING!! byte_count_dev %d "
+			       "!= byte_count_mem %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#420: FILE: drivers/ide/pci/sgiioc4.c:273:
+			       __FUNCTION__, drive->name, bc_dev, bc_mem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#431: FILE: drivers/ide/pci/sgiioc4.c:284:
+sgiioc4_ide_dma_check(ide_drive_t * drive)

CHECK:BRACES: braces {} should be used on all arms of this statement
#433: FILE: drivers/ide/pci/sgiioc4.c:286:
+	if (ide_config_drive_speed(drive, XFER_MW_DMA_2) != 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#434: FILE: drivers/ide/pci/sgiioc4.c:287:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/ide/pci/sgiioc4.c:289:
+		       "Couldnot set %s in Multimode-2 DMA mode | "
+			   "Drive %s using PIO instead\n",

CHECK:BRACES: Unbalanced braces around else statement
#439: FILE: drivers/ide/pci/sgiioc4.c:292:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#446: FILE: drivers/ide/pci/sgiioc4.c:299:
+sgiioc4_ide_dma_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: drivers/ide/pci/sgiioc4.c:307:
+sgiioc4_ide_dma_off(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#456: FILE: drivers/ide/pci/sgiioc4.c:309:
+	printk(KERN_INFO "%s: DMA disabled\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#462: FILE: drivers/ide/pci/sgiioc4.c:315:
+sgiioc4_ide_dma_off_quietly(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#471: FILE: drivers/ide/pci/sgiioc4.c:324:
+sgiioc4_ide_dma_test_irq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#477: FILE: drivers/ide/pci/sgiioc4.c:330:
+sgiioc4_ide_dma_host_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#486: FILE: drivers/ide/pci/sgiioc4.c:339:
+sgiioc4_ide_dma_host_off(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#494: FILE: drivers/ide/pci/sgiioc4.c:347:
+sgiioc4_ide_dma_verbose(ide_drive_t * drive)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#497: FILE: drivers/ide/pci/sgiioc4.c:350:
+		printk(", UDMA(16)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#499: FILE: drivers/ide/pci/sgiioc4.c:352:
+		printk(", PIO");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#505: FILE: drivers/ide/pci/sgiioc4.c:358:
+sgiioc4_ide_dma_lostirq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#513: FILE: drivers/ide/pci/sgiioc4.c:366:
+sgiioc4_resetproc(ide_drive_t * drive)

CHECK:SPACING: No space is necessary after a cast
#522: FILE: drivers/ide/pci/sgiioc4.c:375:
+	u8 reg = (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#527: FILE: drivers/ide/pci/sgiioc4.c:380:
+			unsigned int intr_reg = (u32) inl(other_ir);

CHECK:SPACING: No space is necessary after a cast
#532: FILE: drivers/ide/pci/sgiioc4.c:385:
+				intr_reg = (u32) inl(other_ir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: drivers/ide/pci/sgiioc4.c:395:
+ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: drivers/ide/pci/sgiioc4.c:397:
+	int num_ports = sizeof (ioc4_dma_regs_t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#546: FILE: drivers/ide/pci/sgiioc4.c:399:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#550: FILE: drivers/ide/pci/sgiioc4.c:403:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: drivers/ide/pci/sgiioc4.c:405:
+		       "%s(%s) -- ERROR, Addresses 0x%p to 0x%p "
+		       "ALREADY in use\n",

CHECK:SPACING: No space is necessary after a cast
#553: FILE: drivers/ide/pci/sgiioc4.c:406:
+		       __FUNCTION__, hwif->name, (void *) dma_base,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#553: FILE: drivers/ide/pci/sgiioc4.c:406:
+		       __FUNCTION__, hwif->name, (void *) dma_base,

CHECK:SPACING: No space is necessary after a cast
#554: FILE: drivers/ide/pci/sgiioc4.c:407:
+		       (void *) dma_base + num_ports - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/ide/pci/sgiioc4.c:413:
+	hwif->dmatable_cpu = pci_alloc_consistent(hwif->pci_dev,
+					  IOC4_PRD_ENTRIES * IOC4_PRD_BYTES,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: drivers/ide/pci/sgiioc4.c:420:
+	    kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#575: FILE: drivers/ide/pci/sgiioc4.c:428:
+				     (dma_addr_t *) &(hwif->dma_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hwif->dma_status
#575: FILE: drivers/ide/pci/sgiioc4.c:428:
+				     (dma_addr_t *) &(hwif->dma_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#589: FILE: drivers/ide/pci/sgiioc4.c:442:
+	printk(KERN_INFO

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#591: FILE: drivers/ide/pci/sgiioc4.c:444:
+	       __FUNCTION__, hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#592: FILE: drivers/ide/pci/sgiioc4.c:445:
+	printk(KERN_INFO

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#603: FILE: drivers/ide/pci/sgiioc4.c:456:
+sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#613: FILE: drivers/ide/pci/sgiioc4.c:466:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#615: FILE: drivers/ide/pci/sgiioc4.c:468:
+		       __FUNCTION__, drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#620: FILE: drivers/ide/pci/sgiioc4.c:473:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#622: FILE: drivers/ide/pci/sgiioc4.c:475:
+			       __FUNCTION__, drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#627: FILE: drivers/ide/pci/sgiioc4.c:480:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#629: FILE: drivers/ide/pci/sgiioc4.c:482:
+		       "%s(%s) : Warning!! - DMA Error during Previous"
+		       " transfer | status 0x%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#630: FILE: drivers/ide/pci/sgiioc4.c:483:
+		       __FUNCTION__, drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#635: FILE: drivers/ide/pci/sgiioc4.c:488:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#637: FILE: drivers/ide/pci/sgiioc4.c:490:
+			       __FUNCTION__, drive->name);

CHECK:SPACING: No space is necessary after a cast
#645: FILE: drivers/ide/pci/sgiioc4.c:498:
+	memset((unsigned int *) hwif->dma_base2, 0, IOC4_IDE_CACHELINE_SIZE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#653: FILE: drivers/ide/pci/sgiioc4.c:506:
+/* IOC4 Scatter Gather list Format ^I^I^I^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#657: FILE: drivers/ide/pci/sgiioc4.c:510:
+/* | Upper 32 bits - Zero           |^I ^ILower 32 bits- address | */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#663: FILE: drivers/ide/pci/sgiioc4.c:516:
+sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq, int ddir)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#671: FILE: drivers/ide/pci/sgiioc4.c:524:
+		hwif->sg_nents = i = ide_raw_build_sglist(drive, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#673: FILE: drivers/ide/pci/sgiioc4.c:526:
+		hwif->sg_nents = i = ide_build_sglist(drive, rq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: drivers/ide/pci/sgiioc4.c:535:
+		int cur_len;
+		cur_addr = sg_dma_address(sg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#687: FILE: drivers/ide/pci/sgiioc4.c:540:
+				printk(KERN_WARNING

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#699: FILE: drivers/ide/pci/sgiioc4.c:552:
+				 * the IOC4 dma-table format */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#735: FILE: drivers/ide/pci/sgiioc4.c:588:
+sgiioc4_ide_dma_read(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#740: FILE: drivers/ide/pci/sgiioc4.c:593:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_FROMDEVICE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#751: FILE: drivers/ide/pci/sgiioc4.c:604:
+sgiioc4_ide_dma_write(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#756: FILE: drivers/ide/pci/sgiioc4.c:609:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_TODEVICE))) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#768: FILE: drivers/ide/pci/sgiioc4.c:621:
+ide_init_sgiioc4(ide_hwif_t * hwif)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#783: FILE: drivers/ide/pci/sgiioc4.c:636:
+	hwif->resetproc = &sgiioc4_resetproc;/* Reset DMA engine,
+						clear interrupts */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#783: FILE: drivers/ide/pci/sgiioc4.c:636:
+						clear interrupts */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#811: FILE: drivers/ide/pci/sgiioc4.c:664:
+sgiioc4_ide_setup_pci_device(struct pci_dev *dev, ide_pci_device_t * d)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#831: FILE: drivers/ide/pci/sgiioc4.c:684:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#833: FILE: drivers/ide/pci/sgiioc4.c:686:
+			"%s : %s -- ERROR, Port Addresses "
+			"0x%p to 0x%p ALREADY in use\n",

CHECK:SPACING: No space is necessary after a cast
#834: FILE: drivers/ide/pci/sgiioc4.c:687:
+		       __FUNCTION__, hwif->name, (void *) base,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#834: FILE: drivers/ide/pci/sgiioc4.c:687:
+		       __FUNCTION__, hwif->name, (void *) base,

CHECK:SPACING: No space is necessary after a cast
#835: FILE: drivers/ide/pci/sgiioc4.c:688:
+		       (void *) base + IOC4_CMD_CTL_BLK_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#843: FILE: drivers/ide/pci/sgiioc4.c:696:
+		       sizeof (hwif->io_ports));

CHECK:SPACING: No space is necessary after a cast
#851: FILE: drivers/ide/pci/sgiioc4.c:704:
+	hwif->cds = (struct ide_pci_device_s *) d;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#862: FILE: drivers/ide/pci/sgiioc4.c:715:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled\n",

WARNING:NEW_TYPEDEFS: do not add new typedefs
#872: FILE: drivers/ide/pci/sgiioc4.c:725:
+typedef enum pciio_endian_e {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#876: FILE: drivers/ide/pci/sgiioc4.c:729:
+pciio_endian_t __attribute__ ((weak)) snia_pciio_endian_set(struct pci_dev

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#881: FILE: drivers/ide/pci/sgiioc4.c:734:
+pci_init_sgiioc4(struct pci_dev *dev, ide_pci_device_t * d)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#886: FILE: drivers/ide/pci/sgiioc4.c:739:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#895: FILE: drivers/ide/pci/sgiioc4.c:748:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s, revision %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#896: FILE: drivers/ide/pci/sgiioc4.c:749:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s, revision %d\n",
+			d->name, dev->slot_name, class_rev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#898: FILE: drivers/ide/pci/sgiioc4.c:751:
+		printk(KERN_ERR "Skipping %s IDE controller in slot %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#899: FILE: drivers/ide/pci/sgiioc4.c:752:
+		printk(KERN_ERR "Skipping %s IDE controller in slot %s: "
+			"firmware is obsolete - please upgrade to revision"

WARNING:SPLIT_STRING: quoted string split across lines
#900: FILE: drivers/ide/pci/sgiioc4.c:753:
+			"firmware is obsolete - please upgrade to revision"
+			"46 or higher\n", d->name, dev->slot_name);

WARNING:MISSING_SPACE: break quoted strings at a space character
#900: FILE: drivers/ide/pci/sgiioc4.c:753:
+			"firmware is obsolete - please upgrade to revision"
+			"46 or higher\n", d->name, dev->slot_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#909: FILE: drivers/ide/pci/sgiioc4.c:762:
+		printk(KERN_ERR

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#918: FILE: drivers/ide/pci/sgiioc4.c:771:
+static ide_pci_device_t sgiioc4_chipsets[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#933: FILE: drivers/ide/pci/sgiioc4.c:786:
+static int __devinit

WARNING:LINE_SPACING: Missing a blank line after declarations
#937: FILE: drivers/ide/pci/sgiioc4.c:790:
+	ide_pci_device_t *d = &sgiioc4_chipsets[id->driver_data];
+	if (dev->device != d->device) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#938: FILE: drivers/ide/pci/sgiioc4.c:791:
+		printk(KERN_ERR "Error in %s(dev 0x%p | id 0x%p )\n",

CHECK:SPACING: No space is necessary after a cast
#939: FILE: drivers/ide/pci/sgiioc4.c:792:
+		       __FUNCTION__, (void *) dev, (void *) id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#939: FILE: drivers/ide/pci/sgiioc4.c:792:
+		       __FUNCTION__, (void *) dev, (void *) id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#940: FILE: drivers/ide/pci/sgiioc4.c:793:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#988: FILE: include/linux/ide.h:1696:
+extern int ide_build_sglist(ide_drive_t *, struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#989: FILE: include/linux/ide.h:1697:
+extern int ide_raw_build_sglist(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#989: FILE: include/linux/ide.h:1697:
+extern int ide_raw_build_sglist(ide_drive_t *, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#989: FILE: include/linux/ide.h:1697:
+extern int ide_raw_build_sglist(ide_drive_t *, struct request *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000328000.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 73 warnings, 26 checks, 921 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000328000.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
