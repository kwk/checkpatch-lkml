WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -uNrX linux-ignore-files linux-2.4.0-test13-pre7/arch/ia64/ia32/binfmt_elf32.c linux-2.4.0-test13-pre7.rss-dirty-count/arch/ia64/ia32/binfmt_elf32.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: arch/mips/mm/umap.c:124:
+^I^Iif (pte_dirty(page)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: fs/proc/array.c:216:
+		mm->dirty_rss << (PAGE_SHIFT-10));
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#174: FILE: mm/memory.c:289:
+static inline void zap_pte_range(struct mm_struct *mm, pmd_t * pmd, unsigned long address, unsigned long size)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: mm/memory.c:289:
+static inline void zap_pte_range(struct mm_struct *mm, pmd_t * pmd, unsigned long address, unsigned long size)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#212: FILE: mm/memory.c:322:
+static inline void zap_pmd_range(struct mm_struct *mm, pgd_t * dir, unsigned long address, unsigned long size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: mm/memory.c:322:
+static inline void zap_pmd_range(struct mm_struct *mm, pgd_t * dir, unsigned long address, unsigned long size)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#297: FILE: mm/memory.c:1042:
+#if 1

WARNING:BRACES: braces {} are not necessary for single statement blocks
#298: FILE: mm/memory.c:1043:
+	else {
+		pte = pte_wrprotect(pte);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#298: FILE: mm/memory.c:1043:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: mm/memory.c:1125:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#319: FILE: mm/memory.c:1125:
+	} else 

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#320: FILE: mm/memory.c:1126:
+#if 0

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#321: FILE: mm/memory.c:1127:
+		if (page_count(new_page) > 1 &&
[...]
 		entry = pte_wrprotect(entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: mm/memory.c:1128:
+		if (page_count(new_page) > 1 &&
 		   !(vma->vm_flags & VM_SHARED))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000559307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 7 warnings, 4 checks, 255 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000559307.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
