ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#29: 
--- a/ipc/msg.c	Thu Oct 17 14:18:57 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#37: FILE: ipc/msg.c:104:
+	if ((retval = security_msg_queue_alloc(msq))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: ipc/sem.c:139:
+	if ((retval = security_sem_alloc(sma))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#106: FILE: ipc/shm.c:191:
+	if ((error = security_shm_alloc(shp))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#140: FILE: kernel/acct.c:226:
+	if ((error = security_acct(file)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/capability.c:67:
+     ret = security_capget(target, &data.effective, &data.inheritable, &data.permitted);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/capability.c:167:
+     if (security_capset_check(target, &effective, &inheritable, &permitted))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#179: FILE: kernel/capability.c:167:
+     if (security_capset_check(target, &effective, &inheritable, &permitted))
 	     goto out;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#186: FILE: kernel/capability.c:193:
      } else {
+	     security_capset_set(target, &effective, &inheritable, &permitted);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: kernel/fork.c:685:
+	if ((retval = security_task_create(clone_flags)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#274: FILE: kernel/sched.c:1332:
+	if ((retval = security_task_setnice(current, nice)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#284: FILE: kernel/sched.c:1453:
+	if ((retval = security_task_setscheduler(p, policy, &lp)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#294: FILE: kernel/sched.c:1516:
+		if (!(retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#304: FILE: kernel/sched.c:1545:
+	if ((retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#314: FILE: kernel/sched.c:1777:
+	if ((retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#327: FILE: kernel/signal.c:710:
+	if ((ret = security_task_kill(t, info, sig)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#348: FILE: kernel/sys.c:483:
+	if ((retval = security_task_setgid(rgid, egid, (gid_t)-1, LSM_SETID_RE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#358: FILE: kernel/sys.c:528:
+	if ((retval = security_task_setgid(gid, (gid_t)-1, (gid_t)-1, LSM_SETID_ID)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#368: FILE: kernel/sys.c:601:
+	if ((retval = security_task_setuid(ruid, euid, (uid_t)-1, LSM_SETID_RE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#387: FILE: kernel/sys.c:661:
+	if ((retval = security_task_setuid(uid, (uid_t)-1, (uid_t)-1, LSM_SETID_ID)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#406: FILE: kernel/sys.c:698:
+	if ((retval = security_task_setuid(ruid, euid, suid, LSM_SETID_RES)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#425: FILE: kernel/sys.c:749:
+	if ((retval = security_task_setgid(rgid, egid, sgid, LSM_SETID_RES)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#435: FILE: kernel/sys.c:802:
+	if ((retval = security_task_setuid(uid, (uid_t)-1, (uid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#445: FILE: kernel/sys.c:818:
+	if ((retval = security_task_post_setuid(old_fsuid, (uid_t)-1, (uid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#455: FILE: kernel/sys.c:832:
+	if ((retval = security_task_setgid(gid, (gid_t)-1, (gid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#465: FILE: kernel/sys.c:957:
+			if (!(retval = security_task_getpgid(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#475: FILE: kernel/sys.c:984:
+			if (!(retval = security_task_getsid(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#485: FILE: kernel/sys.c:1065:
+	if ((retval = security_task_setgroups(gidsetsize, groups)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#495: FILE: kernel/sys.c:1228:
+	if ((retval = security_task_setrlimit(resource, &new_rlim)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#505: FILE: kernel/sys.c:1302:
+	if ((error = security_task_prctl(option, arg2, arg3, arg4, arg5)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#518: FILE: kernel/uid16.c:143:
+	if ((i = security_task_setgroups(gidsetsize, new_groups)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 4 warnings, 0 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
