WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Needed for Samba using vfat volumes - for Linux-doubting small bussiness ppl.

WARNING:TYPO_SPELLING: 'bussiness' may be misspelled - perhaps 'business'?
#32: 
Needed for Samba using vfat volumes - for Linux-doubting small bussiness ppl.
                                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#123: FILE: fs/affs/namei.c:63:
+	if (dentry->d_parent == dentry /* root is always valid */
+	    || dentry->d_time == dentry->d_parent->d_inode->i_version) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#168: FILE: fs/affs/namei.c:169:
+}
+static int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#212: FILE: fs/affs/namei.c:466:
+	     */
+	    && old_dentry->d_inode != new_dentry->d_inode

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#235: FILE: fs/namei.c:1964:
+	if (old_dentry->d_inode == new_dentry->d_inode
+	    && (!old_dentry->d_op || !old_dentry->d_op->d_compare_rename

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: fs/namei.c:1965:
+^I        || (old_dir != new_dir$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#236: FILE: fs/namei.c:1965:
+	    && (!old_dentry->d_op || !old_dentry->d_op->d_compare_rename
+	        || (old_dir != new_dir

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#237: FILE: fs/namei.c:1966:
+	            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: fs/namei.c:1966:
+^I            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#237: FILE: fs/namei.c:1966:
+	        || (old_dir != new_dir
+	            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#281: FILE: fs/vfat/namei.c:55:
+static struct dentry_operations vfat_dentry_ops_anycase = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#287: FILE: fs/vfat/namei.c:61:
+};
+static struct dentry_operations vfat_dentry_ops_strictcase = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#287: FILE: fs/vfat/namei.c:61:
+static struct dentry_operations vfat_dentry_ops_strictcase = {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#299: FILE: fs/vfat/namei.c:72:
+	if (dentry->d_parent == dentry /* root is always valid */
+	    || dentry->d_time == dentry->d_parent->d_inode->i_version) {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#344: FILE: fs/vfat/namei.c:841:
+	struct dentry_operations *dentry_ops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: fs/vfat/namei.c:848:
+^I              ? &vfat_dentry_ops_strictcase : &vfat_dentry_ops_anycase);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#395: FILE: fs/vfat/namei.c:1044:
+	struct vfat_slot_info old_sinfo,new_sinfo;
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#413: FILE: fs/vfat/namei.c:1064:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#425: FILE: fs/vfat/namei.c:1078:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#425: FILE: fs/vfat/namei.c:1078:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: fs/vfat/namei.c:1078:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#425: FILE: fs/vfat/namei.c:1078:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#426: FILE: fs/vfat/namei.c:1079:
+		new_bh=NULL;
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#439: FILE: fs/vfat/namei.c:1088:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#439: FILE: fs/vfat/namei.c:1088:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: fs/vfat/namei.c:1088:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#439: FILE: fs/vfat/namei.c:1088:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#439: FILE: fs/vfat/namei.c:1088:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: fs/vfat/namei.c:1089:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
+				&new_bh,&new_de);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#440: FILE: fs/vfat/namei.c:1089:
+				&new_bh,&new_de);
 				       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#440: FILE: fs/vfat/namei.c:1089:
+				&new_bh,&new_de);
 				        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#441: FILE: fs/vfat/namei.c:1090:
+	if (res < 0) goto rename_done;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: fs/vfat/namei.c:1148:
+^I                    ? &vfat_dentry_ops_strictcase : &vfat_dentry_ops_anycase);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#469: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#469: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct qstr *' should also have an identifier name
#469: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct qstr *' should also have an identifier name
#469: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 10 warnings, 9 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
