WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
The following is a patch provided by Ananth Mavinakayanahalli that implements

WARNING:REPEATED_WORD: Possible repeated word: 'on'
#32: 
   a kprobe on on, gaining control so that the return probe handler

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#53: 
signed-off-by: Ananth N Mavinakayanahali <ananth@in.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#54: 
signed-off-by: Rusty Lynch <rusty.lynch@intel.com>

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#73: FILE: arch/ppc64/kernel/kprobes.c:112:
+	if ((ri = get_free_rp_inst(rp)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: arch/ppc64/kernel/kprobes.c:216:
+ * ^I- init_kprobes() establishes a probepoint here$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: arch/ppc64/kernel/kprobes.c:217:
+ * ^I- When the probed function returns, this probe$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: arch/ppc64/kernel/kprobes.c:218:
+ * ^I^Icauses the handlers to fire$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/ppc64/kernel/kprobes.c:232:
+        struct kretprobe_instance *ri = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/ppc64/kernel/kprobes.c:232:
+        struct kretprobe_instance *ri = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/ppc64/kernel/kprobes.c:233:
+        struct hlist_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/ppc64/kernel/kprobes.c:233:
+        struct hlist_head *head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/ppc64/kernel/kprobes.c:234:
+        struct hlist_node *node, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/ppc64/kernel/kprobes.c:234:
+        struct hlist_node *node, *tmp;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#114: FILE: arch/ppc64/kernel/kprobes.c:236:
+	unsigned long trampoline_address =(unsigned long)&kretprobe_trampoline;
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: arch/ppc64/kernel/kprobes.c:238:
+        head = kretprobe_inst_table_head(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/ppc64/kernel/kprobes.c:238:
+        head = kretprobe_inst_table_head(current);$

WARNING:REPEATED_WORD: Possible repeated word: 'return'
#122: FILE: arch/ppc64/kernel/kprobes.c:244:
+	 * have a return probe installed on them, and/or more then one return
+	 * return probe was registered for a target function.

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: arch/ppc64/kernel/kprobes.c:249:
+         *       function, the first instance's ret_addr will point to the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/ppc64/kernel/kprobes.c:254:
+                if (ri->task != current)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/ppc64/kernel/kprobes.c:254:
+                if (ri->task != current)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/ppc64/kernel/kprobes.c:256:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/ppc64/kernel/kprobes.c:256:
+                        continue;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: arch/ppc64/kernel/kprobes.c:273:
+	BUG_ON(!orig_ret_address || (orig_ret_address == trampoline_address));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/ppc64/kernel/kprobes.c:278:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/ppc64/kernel/kprobes.c:279:
+         * By returning a non-zero value, we are telling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/ppc64/kernel/kprobes.c:280:
+         * kprobe_handler() that we have handled unlocking$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/ppc64/kernel/kprobes.c:281:
+         * and re-enabling preemption.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/ppc64/kernel/kprobes.c:282:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/ppc64/kernel/kprobes.c:283:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/ppc64/kernel/kprobes.c:283:
+        return 1;$

CHECK:SPACING: No space is necessary after a cast
#174: FILE: arch/ppc64/kernel/kprobes.c:425:
+	.addr = (kprobe_opcode_t *) &kretprobe_trampoline,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 16 warnings, 1 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
