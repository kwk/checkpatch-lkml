WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#36: 
useable.
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#67: FILE: fs/locks.c:1065:
+		struct file *filp = fl->fl_file;
 		             ^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#85: FILE: fs/locks.c:1083:
+	while ((fl = *before) && (fl->fl_flags & FL_LEASE)
+			&& (fl->fl_type & F_INPROGRESS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fl->fl_break_time == 0'
#86: FILE: fs/locks.c:1084:
+		if ((fl->fl_break_time == 0)
+				|| time_before(jiffies, fl->fl_break_time)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#87: FILE: fs/locks.c:1085:
+		if ((fl->fl_break_time == 0)
+				|| time_before(jiffies, fl->fl_break_time)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#91: FILE: fs/locks.c:1089:
+		printk(KERN_INFO "lease broken - owner pid = %d\n", fl->fl_pid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: fs/locks.c:1116:
+	alloc_err = lease_alloc(NULL, mode & FMODE_WRITE ? F_WRLCK : F_RDLCK,
+			&new_fl);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flock == NULL'
#136: FILE: fs/locks.c:1123:
+	if ((flock == NULL) || (flock->fl_flags & FL_LEASE) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!flock"
#136: FILE: fs/locks.c:1123:
+	if ((flock == NULL) || (flock->fl_flags & FL_LEASE) == 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#280: FILE: fs/locks.c:1246:
+		if (fl->fl_file == filp) {
 		                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#320: FILE: fs/locks.c:1295:
+	 * lease on this file, then we hold it on this filp
 	                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#324: FILE: fs/locks.c:1299:
+	 * except for this filp.
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#381: FILE: fs/locks.c:1767:
+		if (fl->fl_file == filp) {
 		                   ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 6 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439913.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
