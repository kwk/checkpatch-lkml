WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -Naur -X /g/g/lib/dontdiff linux-fs4/fs/ext2/balloc.c linux-fs5/fs/ext2/balloc.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: fs/ext2/ext2_fs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: fs/ext2/ext2_fs.h:48:
+					printk ("EXT2-fs DEBUG (%s, %d): %s:", \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: fs/ext2/ext2_fs.h:48:
+					printk ("EXT2-fs DEBUG (%s, %d): %s:", \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#118: FILE: fs/ext2/ext2_fs.h:49:
+						__FILE__, __LINE__, __FUNCTION__); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/ext2/ext2_fs.h:50:
+^I^I^I^I  ^Iprintk (f, ## a); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: fs/ext2/ext2_fs.h:50:
+^I^I^I^I  ^Iprintk (f, ## a); \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: fs/ext2/ext2_fs.h:50:
+				  	printk (f, ## a); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: fs/ext2/ext2_fs.h:50:
+				  	printk (f, ## a); \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: fs/ext2/ext2_fs.h:90:
+#define EXT2_ACLE_PER_BLOCK(s)		(EXT2_BLOCK_SIZE(s) / sizeof (struct ext2_acl_entry))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: fs/ext2/ext2_fs.h:91:
+#define	EXT2_ADDR_PER_BLOCK(s)		(EXT2_BLOCK_SIZE(s) / sizeof (__u32))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#171: FILE: fs/ext2/ext2_fs.h:102:
+#define EXT2_INODE_SIZE(s)	(((s)->s_rev_level == EXT2_GOOD_OLD_REV) ? \
+				 EXT2_GOOD_OLD_INODE_SIZE : \
+				 (s)->s_inode_size)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#174: FILE: fs/ext2/ext2_fs.h:105:
+#define EXT2_FIRST_INO(s)	(((s)->s_rev_level == EXT2_GOOD_OLD_REV) ? \
+				 EXT2_GOOD_OLD_FIRST_INO : \
+				 (s)->s_first_ino)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#190: FILE: fs/ext2/ext2_fs.h:121:
+# define EXT2_FRAGS_PER_BLOCK(s)	(EXT2_BLOCK_SIZE(s) / EXT2_FRAG_SIZE(s))

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#219: FILE: fs/ext2/ext2_fs.h:150:
+struct ext2_group_desc
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: fs/ext2/ext2_fs.h:171:
+# define EXT2_DESC_PER_BLOCK(s)		(EXT2_BLOCK_SIZE(s) / sizeof (struct ext2_group_desc))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: fs/ext2/ext2_fs.h:200:
+/* End compression flags --- maybe not all used */^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#356: FILE: fs/ext2/ext2_fs.h:287:
+#define i_frag		osd2.hurd2.h_i_frag;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#356: FILE: fs/ext2/ext2_fs.h:287:
+#define i_frag		osd2.hurd2.h_i_frag;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#357: FILE: fs/ext2/ext2_fs.h:288:
+#define i_fsize		osd2.hurd2.h_i_fsize;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#357: FILE: fs/ext2/ext2_fs.h:288:
+#define i_fsize		osd2.hurd2.h_i_fsize;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#388: FILE: fs/ext2/ext2_fs.h:319:
+#define clear_opt(o, opt)		o &= ~EXT2_MOUNT_##opt

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'o' may be better as '(o)' to avoid precedence issues
#388: FILE: fs/ext2/ext2_fs.h:319:
+#define clear_opt(o, opt)		o &= ~EXT2_MOUNT_##opt

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#389: FILE: fs/ext2/ext2_fs.h:320:
+#define set_opt(o, opt)			o |= EXT2_MOUNT_##opt

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'o' may be better as '(o)' to avoid precedence issues
#389: FILE: fs/ext2/ext2_fs.h:320:
+#define set_opt(o, opt)			o |= EXT2_MOUNT_##opt

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: fs/ext2/ext2_fs.h:359:
+^I__u16^Is_minor_rev_level; ^I/* minor revision level */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: fs/ext2/ext2_fs.h:373:
+^I * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#448: FILE: fs/ext2/ext2_fs.h:379:
+^I__u32^Is_first_ino; ^I^I/* First non-reserved inode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: fs/ext2/ext2_fs.h:380:
+^I__u16   s_inode_size; ^I^I/* size of inode structure */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#450: FILE: fs/ext2/ext2_fs.h:381:
+^I__u16^Is_block_group_nr; ^I/* block group # of this superblock */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#451: FILE: fs/ext2/ext2_fs.h:382:
+^I__u32^Is_feature_compat; ^I/* compatible feature set */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: fs/ext2/ext2_fs.h:383:
+^I__u32^Is_feature_incompat; ^I/* incompatible feature set */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#453: FILE: fs/ext2/ext2_fs.h:384:
+^I__u32^Is_feature_ro_compat; ^I/* readonly-compatible feature set */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: fs/ext2/ext2_fs.h:386:
+^Ichar^Is_volume_name[16]; ^I/* volume name */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: fs/ext2/ext2_fs.h:387:
+^Ichar^Is_last_mounted[64]; ^I/* directory where last mounted */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: fs/ext2/ext2_fs.h:404:
+ * macros from user land. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: fs/ext2/ext2_fs.h:421:
+#define EXT2_DYNAMIC_REV^I1 ^I/* V2 format w/ dynamic inode sizes */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#501: FILE: fs/ext2/ext2_fs.h:432:
+#define EXT2_HAS_COMPAT_FEATURE(sb,mask)			\
                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#502: FILE: fs/ext2/ext2_fs.h:433:
+	( EXT2_SB(sb)->s_es->s_feature_compat & cpu_to_le32(mask) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#502: FILE: fs/ext2/ext2_fs.h:433:
+	( EXT2_SB(sb)->s_es->s_feature_compat & cpu_to_le32(mask) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: fs/ext2/ext2_fs.h:434:
+#define EXT2_HAS_RO_COMPAT_FEATURE(sb,mask)			\
                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#504: FILE: fs/ext2/ext2_fs.h:435:
+	( EXT2_SB(sb)->s_es->s_feature_ro_compat & cpu_to_le32(mask) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#504: FILE: fs/ext2/ext2_fs.h:435:
+	( EXT2_SB(sb)->s_es->s_feature_ro_compat & cpu_to_le32(mask) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#505: FILE: fs/ext2/ext2_fs.h:436:
+#define EXT2_HAS_INCOMPAT_FEATURE(sb,mask)			\
                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#506: FILE: fs/ext2/ext2_fs.h:437:
+	( EXT2_SB(sb)->s_es->s_feature_incompat & cpu_to_le32(mask) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#506: FILE: fs/ext2/ext2_fs.h:437:
+	( EXT2_SB(sb)->s_es->s_feature_incompat & cpu_to_le32(mask) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: fs/ext2/ext2_fs.h:438:
+#define EXT2_SET_COMPAT_FEATURE(sb,mask)			\
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#507: FILE: fs/ext2/ext2_fs.h:438:
+#define EXT2_SET_COMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_compat |= cpu_to_le32(mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: fs/ext2/ext2_fs.h:440:
+#define EXT2_SET_RO_COMPAT_FEATURE(sb,mask)			\
                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#509: FILE: fs/ext2/ext2_fs.h:440:
+#define EXT2_SET_RO_COMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_ro_compat |= cpu_to_le32(mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: fs/ext2/ext2_fs.h:442:
+#define EXT2_SET_INCOMPAT_FEATURE(sb,mask)			\
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#511: FILE: fs/ext2/ext2_fs.h:442:
+#define EXT2_SET_INCOMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_incompat |= cpu_to_le32(mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: fs/ext2/ext2_fs.h:444:
+#define EXT2_CLEAR_COMPAT_FEATURE(sb,mask)			\
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#513: FILE: fs/ext2/ext2_fs.h:444:
+#define EXT2_CLEAR_COMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_compat &= ~cpu_to_le32(mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#515: FILE: fs/ext2/ext2_fs.h:446:
+#define EXT2_CLEAR_RO_COMPAT_FEATURE(sb,mask)			\
                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#515: FILE: fs/ext2/ext2_fs.h:446:
+#define EXT2_CLEAR_RO_COMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_ro_compat &= ~cpu_to_le32(mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: fs/ext2/ext2_fs.h:448:
+#define EXT2_CLEAR_INCOMPAT_FEATURE(sb,mask)			\
                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#517: FILE: fs/ext2/ext2_fs.h:448:
+#define EXT2_CLEAR_INCOMPAT_FEATURE(sb,mask)			\
+	EXT2_SB(sb)->s_es->s_feature_incompat &= ~cpu_to_le32(mask)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#541: FILE: fs/ext2/ext2_fs.h:472:
+#define EXT2_FEATURE_RO_COMPAT_SUPP	(EXT2_FEATURE_RO_COMPAT_SPARSE_SUPER| \
                                    	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#542: FILE: fs/ext2/ext2_fs.h:473:
+					 EXT2_FEATURE_RO_COMPAT_LARGE_FILE| \
 					                                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#600: FILE: fs/ext2/ext2_fs.h:531:
+#define EXT2_DIR_PAD^I^I ^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#601: FILE: fs/ext2/ext2_fs.h:532:
+#define EXT2_DIR_ROUND ^I^I^I(EXT2_DIR_PAD - 1)$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#615: FILE: fs/ext2/ext2_fs.h:546:
+# define ATTRIB_NORET  __attribute__((noreturn))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#619: FILE: fs/ext2/ext2_fs.h:550:
+extern int ext2_bg_has_super(struct super_block *sb, int group);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#620: FILE: fs/ext2/ext2_fs.h:551:
+extern unsigned long ext2_bg_num_gdb(struct super_block *sb, int group);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#621: FILE: fs/ext2/ext2_fs.h:552:
+extern int ext2_new_block (struct inode *, unsigned long,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#623: FILE: fs/ext2/ext2_fs.h:554:
+extern void ext2_free_blocks (struct inode *, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#623: FILE: fs/ext2/ext2_fs.h:554:
+extern void ext2_free_blocks (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#623: FILE: fs/ext2/ext2_fs.h:554:
+extern void ext2_free_blocks (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#623: FILE: fs/ext2/ext2_fs.h:554:
+extern void ext2_free_blocks (struct inode *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#623: FILE: fs/ext2/ext2_fs.h:554:
+extern void ext2_free_blocks (struct inode *, unsigned long,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: fs/ext2/ext2_fs.h:556:
+extern unsigned long ext2_count_free_blocks (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: fs/ext2/ext2_fs.h:556:
+extern unsigned long ext2_count_free_blocks (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#625: FILE: fs/ext2/ext2_fs.h:556:
+extern unsigned long ext2_count_free_blocks (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: fs/ext2/ext2_fs.h:557:
+extern void ext2_check_blocks_bitmap (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: fs/ext2/ext2_fs.h:557:
+extern void ext2_check_blocks_bitmap (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#626: FILE: fs/ext2/ext2_fs.h:557:
+extern void ext2_check_blocks_bitmap (struct super_block *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#627: FILE: fs/ext2/ext2_fs.h:558:
+extern struct ext2_group_desc * ext2_get_group_desc(struct super_block * sb,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#627: FILE: fs/ext2/ext2_fs.h:558:
+extern struct ext2_group_desc * ext2_get_group_desc(struct super_block * sb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#627: FILE: fs/ext2/ext2_fs.h:558:
+extern struct ext2_group_desc * ext2_get_group_desc(struct super_block * sb,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#629: FILE: fs/ext2/ext2_fs.h:560:
+						    struct buffer_head ** bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#632: FILE: fs/ext2/ext2_fs.h:563:
+extern int ext2_add_link (struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#632: FILE: fs/ext2/ext2_fs.h:563:
+extern int ext2_add_link (struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#632: FILE: fs/ext2/ext2_fs.h:563:
+extern int ext2_add_link (struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#632: FILE: fs/ext2/ext2_fs.h:563:
+extern int ext2_add_link (struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#633: FILE: fs/ext2/ext2_fs.h:564:
+extern ino_t ext2_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#633: FILE: fs/ext2/ext2_fs.h:564:
+extern ino_t ext2_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#633: FILE: fs/ext2/ext2_fs.h:564:
+extern ino_t ext2_inode_by_name(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#634: FILE: fs/ext2/ext2_fs.h:565:
+extern int ext2_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#634: FILE: fs/ext2/ext2_fs.h:565:
+extern int ext2_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#634: FILE: fs/ext2/ext2_fs.h:565:
+extern int ext2_make_empty(struct inode *, struct inode *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);
                                                                 ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#635: FILE: fs/ext2/ext2_fs.h:566:
+extern struct ext2_dir_entry_2 * ext2_find_entry (struct inode *,struct dentry *, struct page **);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: fs/ext2/ext2_fs.h:567:
+extern int ext2_delete_entry (struct ext2_dir_entry_2 *, struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#636: FILE: fs/ext2/ext2_fs.h:567:
+extern int ext2_delete_entry (struct ext2_dir_entry_2 *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext2_dir_entry_2 *' should also have an identifier name
#636: FILE: fs/ext2/ext2_fs.h:567:
+extern int ext2_delete_entry (struct ext2_dir_entry_2 *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#636: FILE: fs/ext2/ext2_fs.h:567:
+extern int ext2_delete_entry (struct ext2_dir_entry_2 *, struct page *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: fs/ext2/ext2_fs.h:568:
+extern int ext2_empty_dir (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#637: FILE: fs/ext2/ext2_fs.h:568:
+extern int ext2_empty_dir (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#637: FILE: fs/ext2/ext2_fs.h:568:
+extern int ext2_empty_dir (struct inode *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#638: FILE: fs/ext2/ext2_fs.h:569:
+extern struct ext2_dir_entry_2 * ext2_dotdot (struct inode *, struct page **);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: fs/ext2/ext2_fs.h:569:
+extern struct ext2_dir_entry_2 * ext2_dotdot (struct inode *, struct page **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#638: FILE: fs/ext2/ext2_fs.h:569:
+extern struct ext2_dir_entry_2 * ext2_dotdot (struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#638: FILE: fs/ext2/ext2_fs.h:569:
+extern struct ext2_dir_entry_2 * ext2_dotdot (struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#638: FILE: fs/ext2/ext2_fs.h:569:
+extern struct ext2_dir_entry_2 * ext2_dotdot (struct inode *, struct page **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#639: FILE: fs/ext2/ext2_fs.h:570:
+extern void ext2_set_link(struct inode *, struct ext2_dir_entry_2 *, struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#639: FILE: fs/ext2/ext2_fs.h:570:
+extern void ext2_set_link(struct inode *, struct ext2_dir_entry_2 *, struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext2_dir_entry_2 *' should also have an identifier name
#639: FILE: fs/ext2/ext2_fs.h:570:
+extern void ext2_set_link(struct inode *, struct ext2_dir_entry_2 *, struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#639: FILE: fs/ext2/ext2_fs.h:570:
+extern void ext2_set_link(struct inode *, struct ext2_dir_entry_2 *, struct page *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#639: FILE: fs/ext2/ext2_fs.h:570:
+extern void ext2_set_link(struct inode *, struct ext2_dir_entry_2 *, struct page *, struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: fs/ext2/ext2_fs.h:573:
+extern int ext2_sync_file (struct file *, struct dentry *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#642: FILE: fs/ext2/ext2_fs.h:573:
+extern int ext2_sync_file (struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#642: FILE: fs/ext2/ext2_fs.h:573:
+extern int ext2_sync_file (struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#642: FILE: fs/ext2/ext2_fs.h:573:
+extern int ext2_sync_file (struct file *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#642: FILE: fs/ext2/ext2_fs.h:573:
+extern int ext2_sync_file (struct file *, struct dentry *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#643: FILE: fs/ext2/ext2_fs.h:574:
+extern int ext2_fsync_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#643: FILE: fs/ext2/ext2_fs.h:574:
+extern int ext2_fsync_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#643: FILE: fs/ext2/ext2_fs.h:574:
+extern int ext2_fsync_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#643: FILE: fs/ext2/ext2_fs.h:574:
+extern int ext2_fsync_inode (struct inode *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: fs/ext2/ext2_fs.h:577:
+extern struct inode * ext2_new_inode (const struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: fs/ext2/ext2_fs.h:577:
+extern struct inode * ext2_new_inode (const struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#646: FILE: fs/ext2/ext2_fs.h:577:
+extern struct inode * ext2_new_inode (const struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inode *' should also have an identifier name
#646: FILE: fs/ext2/ext2_fs.h:577:
+extern struct inode * ext2_new_inode (const struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#646: FILE: fs/ext2/ext2_fs.h:577:
+extern struct inode * ext2_new_inode (const struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: fs/ext2/ext2_fs.h:578:
+extern void ext2_free_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#647: FILE: fs/ext2/ext2_fs.h:578:
+extern void ext2_free_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#647: FILE: fs/ext2/ext2_fs.h:578:
+extern void ext2_free_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#648: FILE: fs/ext2/ext2_fs.h:579:
+extern unsigned long ext2_count_free_inodes (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#648: FILE: fs/ext2/ext2_fs.h:579:
+extern unsigned long ext2_count_free_inodes (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#648: FILE: fs/ext2/ext2_fs.h:579:
+extern unsigned long ext2_count_free_inodes (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: fs/ext2/ext2_fs.h:580:
+extern void ext2_check_inodes_bitmap (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: fs/ext2/ext2_fs.h:580:
+extern void ext2_check_inodes_bitmap (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#649: FILE: fs/ext2/ext2_fs.h:580:
+extern void ext2_check_inodes_bitmap (struct super_block *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#650: FILE: fs/ext2/ext2_fs.h:581:
+extern unsigned long ext2_count_free (struct buffer_head *, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: fs/ext2/ext2_fs.h:581:
+extern unsigned long ext2_count_free (struct buffer_head *, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: fs/ext2/ext2_fs.h:581:
+extern unsigned long ext2_count_free (struct buffer_head *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#650: FILE: fs/ext2/ext2_fs.h:581:
+extern unsigned long ext2_count_free (struct buffer_head *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#650: FILE: fs/ext2/ext2_fs.h:581:
+extern unsigned long ext2_count_free (struct buffer_head *, unsigned);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#657: FILE: fs/ext2/ext2_fs.h:588:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: fs/ext2/ext2_fs.h:592:
+extern void ext2_read_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#661: FILE: fs/ext2/ext2_fs.h:592:
+extern void ext2_read_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: fs/ext2/ext2_fs.h:593:
+extern void ext2_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#662: FILE: fs/ext2/ext2_fs.h:593:
+extern void ext2_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#662: FILE: fs/ext2/ext2_fs.h:593:
+extern void ext2_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#662: FILE: fs/ext2/ext2_fs.h:593:
+extern void ext2_write_inode (struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: fs/ext2/ext2_fs.h:594:
+extern void ext2_put_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#663: FILE: fs/ext2/ext2_fs.h:594:
+extern void ext2_put_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#663: FILE: fs/ext2/ext2_fs.h:594:
+extern void ext2_put_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#664: FILE: fs/ext2/ext2_fs.h:595:
+extern void ext2_delete_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#664: FILE: fs/ext2/ext2_fs.h:595:
+extern void ext2_delete_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#664: FILE: fs/ext2/ext2_fs.h:595:
+extern void ext2_delete_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: fs/ext2/ext2_fs.h:596:
+extern int ext2_sync_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: fs/ext2/ext2_fs.h:596:
+extern int ext2_sync_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#665: FILE: fs/ext2/ext2_fs.h:596:
+extern int ext2_sync_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: fs/ext2/ext2_fs.h:597:
+extern void ext2_discard_prealloc (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#666: FILE: fs/ext2/ext2_fs.h:597:
+extern void ext2_discard_prealloc (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#666: FILE: fs/ext2/ext2_fs.h:597:
+extern void ext2_discard_prealloc (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#667: FILE: fs/ext2/ext2_fs.h:598:
+extern void ext2_truncate (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#667: FILE: fs/ext2/ext2_fs.h:598:
+extern void ext2_truncate (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#667: FILE: fs/ext2/ext2_fs.h:598:
+extern void ext2_truncate (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: fs/ext2/ext2_fs.h:599:
+extern void ext2_clear_inode (struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#668: FILE: fs/ext2/ext2_fs.h:599:
+extern void ext2_clear_inode (struct inode *inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#671: FILE: fs/ext2/ext2_fs.h:602:
+extern int ext2_ioctl (struct inode *, struct file *, unsigned int,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#679: FILE: fs/ext2/ext2_fs.h:610:
+		BUG();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: fs/ext2/ext2_fs.h:615:
+extern void ext2_error (struct super_block *, const char *, const char *, ...)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: fs/ext2/ext2_fs.h:615:
+extern void ext2_error (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#684: FILE: fs/ext2/ext2_fs.h:615:
+extern void ext2_error (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#684: FILE: fs/ext2/ext2_fs.h:615:
+extern void ext2_error (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#684: FILE: fs/ext2/ext2_fs.h:615:
+extern void ext2_error (struct super_block *, const char *, const char *, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#685: FILE: fs/ext2/ext2_fs.h:616:
+	__attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#686: FILE: fs/ext2/ext2_fs.h:617:
+extern NORET_TYPE void ext2_panic (struct super_block *, const char *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: fs/ext2/ext2_fs.h:617:
+extern NORET_TYPE void ext2_panic (struct super_block *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#686: FILE: fs/ext2/ext2_fs.h:617:
+extern NORET_TYPE void ext2_panic (struct super_block *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#686: FILE: fs/ext2/ext2_fs.h:617:
+extern NORET_TYPE void ext2_panic (struct super_block *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#686: FILE: fs/ext2/ext2_fs.h:617:
+extern NORET_TYPE void ext2_panic (struct super_block *, const char *,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#688: FILE: fs/ext2/ext2_fs.h:619:
+	__attribute__ ((NORET_AND format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#689: FILE: fs/ext2/ext2_fs.h:620:
+extern void ext2_warning (struct super_block *, const char *, const char *, ...)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#689: FILE: fs/ext2/ext2_fs.h:620:
+extern void ext2_warning (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#689: FILE: fs/ext2/ext2_fs.h:620:
+extern void ext2_warning (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#689: FILE: fs/ext2/ext2_fs.h:620:
+extern void ext2_warning (struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#689: FILE: fs/ext2/ext2_fs.h:620:
+extern void ext2_warning (struct super_block *, const char *, const char *, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#690: FILE: fs/ext2/ext2_fs.h:621:
+	__attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: fs/ext2/ext2_fs.h:622:
+extern void ext2_update_dynamic_rev (struct super_block *sb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: fs/ext2/ext2_fs.h:622:
+extern void ext2_update_dynamic_rev (struct super_block *sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: fs/ext2/ext2_fs.h:623:
+extern void ext2_put_super (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#692: FILE: fs/ext2/ext2_fs.h:623:
+extern void ext2_put_super (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#692: FILE: fs/ext2/ext2_fs.h:623:
+extern void ext2_put_super (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#693: FILE: fs/ext2/ext2_fs.h:624:
+extern void ext2_write_super (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#693: FILE: fs/ext2/ext2_fs.h:624:
+extern void ext2_write_super (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#693: FILE: fs/ext2/ext2_fs.h:624:
+extern void ext2_write_super (struct super_block *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#694: FILE: fs/ext2/ext2_fs.h:625:
+extern int ext2_remount (struct super_block *, int *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#694: FILE: fs/ext2/ext2_fs.h:625:
+extern int ext2_remount (struct super_block *, int *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#694: FILE: fs/ext2/ext2_fs.h:625:
+extern int ext2_remount (struct super_block *, int *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#694: FILE: fs/ext2/ext2_fs.h:625:
+extern int ext2_remount (struct super_block *, int *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#694: FILE: fs/ext2/ext2_fs.h:625:
+extern int ext2_remount (struct super_block *, int *, char *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);
                                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#695: FILE: fs/ext2/ext2_fs.h:626:
+extern struct super_block * ext2_read_super (struct super_block *,void *,int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: fs/ext2/ext2_fs.h:627:
+extern int ext2_statfs (struct super_block *, struct statfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#696: FILE: fs/ext2/ext2_fs.h:627:
+extern int ext2_statfs (struct super_block *, struct statfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#696: FILE: fs/ext2/ext2_fs.h:627:
+extern int ext2_statfs (struct super_block *, struct statfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct statfs *' should also have an identifier name
#696: FILE: fs/ext2/ext2_fs.h:627:
+extern int ext2_statfs (struct super_block *, struct statfs *);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#703: FILE: fs/ext2/ext2_fs.h:634:
+extern struct file_operations ext2_dir_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#706: FILE: fs/ext2/ext2_fs.h:637:
+extern struct inode_operations ext2_file_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#707: FILE: fs/ext2/ext2_fs.h:638:
+extern struct file_operations ext2_file_operations;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#710: FILE: fs/ext2/ext2_fs.h:641:
+extern struct address_space_operations ext2_aops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#713: FILE: fs/ext2/ext2_fs.h:644:
+extern struct inode_operations ext2_dir_inode_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#716: FILE: fs/ext2/ext2_fs.h:647:
+extern struct inode_operations ext2_fast_symlink_inode_operations;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#725: FILE: fs/ext2/ext2_fs_i.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#770: FILE: fs/ext2/ext2_fs_sb.h:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#810: FILE: fs/ext2/ext2_fs_sb.h:41:
+	struct buffer_head * s_sbh;	/* Buffer containing the super block */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#811: FILE: fs/ext2/ext2_fs_sb.h:42:
+	struct ext2_super_block * s_es;	/* Pointer to the super block in the buffer */

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#812: FILE: fs/ext2/ext2_fs_sb.h:43:
+	struct buffer_head ** s_group_desc;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#816: FILE: fs/ext2/ext2_fs_sb.h:47:
+	struct buffer_head * s_inode_bitmap[EXT2_MAX_GROUP_LOADED];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#818: FILE: fs/ext2/ext2_fs_sb.h:49:
+	struct buffer_head * s_block_bitmap[EXT2_MAX_GROUP_LOADED];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 145 warnings, 47 checks, 866 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
