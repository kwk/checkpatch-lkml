WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
--------------------------------------------------------------------------------

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: drivers/block/block_dump.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'wihtout' may be misspelled - perhaps 'without'?
#46: FILE: drivers/block/block_dump.c:3:
+ *    Block dump driver for block drivers  to support diskdump functionality wihtout
                                                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dependening' may be misspelled - perhaps 'depending'?
#47: FILE: drivers/block/block_dump.c:4:
+ *    dependening on diskdump driver.
       ^^^^^^^^^^^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: drivers/block/block_dump.c:17:
+ *    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/block/block_dump.c:18:
+ *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#85: FILE: drivers/block/block_dump.c:42:
+static uint32_t module_crc;

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#89: FILE: drivers/block/block_dump.c:46:
+static int block_dump_rw_block(struct disk_dump_partition *dump_part, int rw, unsigned long dump_block_nr, void *buf, int len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'strucutre' may be misspelled - perhaps 'structure'?
#97: FILE: drivers/block/block_dump.c:54:
+ * This MACRO is to get the starting address of blcok_device_operations_dump strucutre using blk_fops pointer * , which is a member of block_device_operations_dump structure 
                                                                              ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/block/block_dump.c:54:
+ * This MACRO is to get the starting address of blcok_device_operations_dump strucutre using blk_fops pointer * , which is a member of block_device_operations_dump structure $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 174 exceeds 100 columns
#97: FILE: drivers/block/block_dump.c:54:
+ * This MACRO is to get the starting address of blcok_device_operations_dump strucutre using blk_fops pointer * , which is a member of block_device_operations_dump structure 

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'blk_fops' - possible side-effects?
#99: FILE: drivers/block/block_dump.c:56:
+#define BLOCK_OPS_EXT(blk_fops)	container_of(blk_fops, block_device_operations_dump, blk_fops)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: drivers/block/block_dump.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#116: FILE: drivers/block/block_dump.c:73:
+static int block_dump_shutdown(struct disk_dump_device *dump_device) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#117: FILE: drivers/block/block_dump.c:74:
+static int block_dump_shutdown(struct disk_dump_device *dump_device) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#121: FILE: drivers/block/block_dump.c:78:
+	if ( blk_dev_ops->block_dump_ops->shutdown != NULL ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#121: FILE: drivers/block/block_dump.c:78:
+	if ( blk_dev_ops->block_dump_ops->shutdown != NULL ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#121: FILE: drivers/block/block_dump.c:78:
+	if ( blk_dev_ops->block_dump_ops->shutdown != NULL ) {
+		return blk_dev_ops->block_dump_ops->shutdown(device_info->device);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blk_dev_ops->block_dump_ops->shutdown"
#121: FILE: drivers/block/block_dump.c:78:
+	if ( blk_dev_ops->block_dump_ops->shutdown != NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/block/block_dump.c:82:
+^Ireturn -1;^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#128: FILE: drivers/block/block_dump.c:85:
+static int block_dump_quiesce(struct disk_dump_device *dump_device) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#129: FILE: drivers/block/block_dump.c:86:
+static int block_dump_quiesce(struct disk_dump_device *dump_device) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: drivers/block/block_dump.c:90:
+	if ( blk_dev_ops->block_dump_ops->quiesce == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: drivers/block/block_dump.c:90:
+	if ( blk_dev_ops->block_dump_ops->quiesce == NULL ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#133: FILE: drivers/block/block_dump.c:90:
+	if ( blk_dev_ops->block_dump_ops->quiesce == NULL ) {
+		return -1;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!blk_dev_ops->block_dump_ops->quiesce"
#133: FILE: drivers/block/block_dump.c:90:
+	if ( blk_dev_ops->block_dump_ops->quiesce == NULL ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/block/block_dump.c:97:
+^Ireturn 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/block/block_dump.c:100:
+static int block_dump_rw_block(struct disk_dump_partition *dump_part, $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#143: FILE: drivers/block/block_dump.c:100:
+static int block_dump_rw_block(struct disk_dump_partition *dump_part, 
+			int rw, unsigned long dump_block_nr, void *buf, int len) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/block/block_dump.c:101:
+static int block_dump_rw_block(struct disk_dump_partition *dump_part, 
+			int rw, unsigned long dump_block_nr, void *buf, int len) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#145: FILE: drivers/block/block_dump.c:102:
+			int rw, unsigned long dump_block_nr, void *buf, int len) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: drivers/block/block_dump.c:107:
+	if ( blk_dev_ops->block_dump_ops->rw_block != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: drivers/block/block_dump.c:107:
+	if ( blk_dev_ops->block_dump_ops->rw_block != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blk_dev_ops->block_dump_ops->rw_block"
#150: FILE: drivers/block/block_dump.c:107:
+	if ( blk_dev_ops->block_dump_ops->rw_block != NULL ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/block/block_dump.c:108:
+^I^Ireturn blk_dev_ops->block_dump_ops->rw_block(device_info->device, rw, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/block/block_dump.c:112:
+^Ireturn -1;^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#158: FILE: drivers/block/block_dump.c:115:
+static int block_dump_sanity_check(struct disk_dump_device *dump_device){

ERROR:SPACING: space required before the open brace '{'
#158: FILE: drivers/block/block_dump.c:115:
+static int block_dump_sanity_check(struct disk_dump_device *dump_device){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#159: FILE: drivers/block/block_dump.c:116:
+static int block_dump_sanity_check(struct disk_dump_device *dump_device){
+

ERROR:SPACING: space required before the open brace '{'
#163: FILE: drivers/block/block_dump.c:120:
+	if (!check_crc_module()){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#164: FILE: drivers/block/block_dump.c:121:
+		printk("<1>checksum error.  block dump module may be compromised\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#168: FILE: drivers/block/block_dump.c:125:
+	if ( blk_dev_ops->block_dump_ops->sanity_check != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#168: FILE: drivers/block/block_dump.c:125:
+	if ( blk_dev_ops->block_dump_ops->sanity_check != NULL ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#168: FILE: drivers/block/block_dump.c:125:
+	if ( blk_dev_ops->block_dump_ops->sanity_check != NULL ) {
+		return blk_dev_ops->block_dump_ops->sanity_check(device_info->device);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blk_dev_ops->block_dump_ops->sanity_check"
#168: FILE: drivers/block/block_dump.c:125:
+	if ( blk_dev_ops->block_dump_ops->sanity_check != NULL ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/block/block_dump.c:129:
+^Ireturn -1;^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#175: FILE: drivers/block/block_dump.c:132:
+static void *block_dump_probe(kdev_t dev){

ERROR:SPACING: space required before the open brace '{'
#175: FILE: drivers/block/block_dump.c:132:
+static void *block_dump_probe(kdev_t dev){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/block/block_dump.c:134:
+^Istruct block_device *blk_dev; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/block/block_dump.c:137:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/block/block_dump.c:138:
+^Iset_crc_modules();^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#184: FILE: drivers/block/block_dump.c:141:
+	blk_dev = bdget( (dev_t)dev);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#189: FILE: drivers/block/block_dump.c:146:
+	if (!blk_fops->diskdump)
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: drivers/block/block_dump.c:148:
+		printk("Dumpdevice Extended ops null\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#195: FILE: drivers/block/block_dump.c:152:
+	if ( blk_dump_ops->block_probe != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: drivers/block/block_dump.c:152:
+	if ( blk_dump_ops->block_probe != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blk_dump_ops->block_probe"
#195: FILE: drivers/block/block_dump.c:152:
+	if ( blk_dump_ops->block_probe != NULL ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/block/block_dump.c:153:
+^I^Idevice_info->device = blk_dump_ops->block_probe(dev);^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#205: FILE: drivers/block/block_dump.c:162:
+static int block_dump_add_device(struct disk_dump_device *dump_device){

ERROR:SPACING: space required before the open brace '{'
#205: FILE: drivers/block/block_dump.c:162:
+static int block_dump_add_device(struct disk_dump_device *dump_device){

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: drivers/block/block_dump.c:166:
+	if(!memcpy(&dump_device->ops, &block_dump_device_ops, sizeof(struct disk_dump_device_ops)))

ERROR:SPACING: space prohibited after that open parenthesis '('
#212: FILE: drivers/block/block_dump.c:169:
+	if ( blk_dev_ops->block_add_device != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#212: FILE: drivers/block/block_dump.c:169:
+	if ( blk_dev_ops->block_add_device != NULL ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#212: FILE: drivers/block/block_dump.c:169:
+	if ( blk_dev_ops->block_add_device != NULL ) {
+		dump_device->max_blocks = blk_dev_ops->block_add_device(device_info->device);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "blk_dev_ops->block_add_device"
#212: FILE: drivers/block/block_dump.c:169:
+	if ( blk_dev_ops->block_add_device != NULL ) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#219: FILE: drivers/block/block_dump.c:176:
+static void block_dump_remove_device(struct disk_dump_device *dump_device){

ERROR:SPACING: space required before the open brace '{'
#219: FILE: drivers/block/block_dump.c:176:
+static void block_dump_remove_device(struct disk_dump_device *dump_device){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#227: FILE: drivers/block/block_dump.c:184:
+	if ((ret = register_disk_dump_type(&block_dump_type)) < 0 ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#227: FILE: drivers/block/block_dump.c:184:
+	if ((ret = register_disk_dump_type(&block_dump_type)) < 0 ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#228: FILE: drivers/block/block_dump.c:185:
+		printk("<1>Register of diskdump type failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/block/block_dump.c:189:
+^Iset_crc_modules();^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#239: FILE: drivers/block/block_dump.c:196:
+	if (unregister_disk_dump_type(&block_dump_type) < 0 )

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/block/block_dump.c:197:
+		printk("<1>Error unregistering diskdump\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#250: FILE: drivers/block/block_dump.h:1:
+

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#259: FILE: drivers/block/block_dump.h:10:
+	int (*rw_block)(void *device, int rw, unsigned long dump_block_nr, void *buf, int len, unsigned long start_sect, unsigned long nr_sects);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#264: FILE: drivers/block/block_dump.h:15:
+typedef struct __block_device_operations_dump {

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#265: FILE: drivers/block/block_dump.h:16:
+	struct block_device_operations blk_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#272: FILE: drivers/block/block_dump.h:23:
+typedef struct _device_info_t

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#273: FILE: drivers/block/block_dump.h:24:
+typedef struct _device_info_t
+{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189373.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 20 warnings, 14 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189373.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
