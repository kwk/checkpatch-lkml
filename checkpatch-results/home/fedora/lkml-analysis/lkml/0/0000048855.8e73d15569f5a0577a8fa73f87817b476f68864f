WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
diff -rup -x CVS 2.6.16-rt17/arch/powerpc/kernel/time.c rt-powerpc/arch/powerpc/kernel/time.c

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#95: FILE: arch/powerpc/kernel/time.c:227:
+#define SCALE_XSEC(xsec, max)  (((xsec) * max) / XSEC_PER_SEC)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#156: FILE: include/asm-powerpc/percpu.h:22:
+    __attribute__((__section__(".data.percpu"))) spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/asm-powerpc/percpu.h:22:
+    __attribute__((__section__(".data.percpu"))) spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#156: FILE: include/asm-powerpc/percpu.h:22:
+    __attribute__((__section__(".data.percpu"))) spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/asm-powerpc/percpu.h:23:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name##_locked$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#157: FILE: include/asm-powerpc/percpu.h:23:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name##_locked

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/asm-powerpc/percpu.h:30:
+        (*RELOC_HIDE(&per_cpu_lock__##var##_locked, __per_cpu_offset(cpu)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/asm-powerpc/percpu.h:30:
+        (*RELOC_HIDE(&per_cpu_lock__##var##_locked, __per_cpu_offset(cpu)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: include/asm-powerpc/percpu.h:55:
+    spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: include/asm-powerpc/percpu.h:56:
+    __typeof__(type) per_cpu__##name##_locked$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: include/asm-powerpc/percpu.h:68:
+    extern spinlock_t per_cpu_lock__##name##_locked; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: include/asm-powerpc/percpu.h:69:
+    extern __typeof__(type) per_cpu__##name##_locked$

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#198: FILE: include/asm-powerpc/percpu.h:73:
+#define EXPORT_PER_CPU_LOCKED_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu_lock__##var##_locked); EXPORT_SYMBOL_GPL(per_cpu__##var##_locked)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#198: FILE: include/asm-powerpc/percpu.h:73:
+#define EXPORT_PER_CPU_LOCKED_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu_lock__##var##_locked); EXPORT_SYMBOL_GPL(per_cpu__##var##_locked)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000048855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 1 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000048855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
