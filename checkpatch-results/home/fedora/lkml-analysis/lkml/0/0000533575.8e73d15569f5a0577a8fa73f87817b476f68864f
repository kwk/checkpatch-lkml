WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
diff -urN S5-pre4/arch/sparc64/solaris/fs.c S5-pre4-noexe/arch/sparc64/solaris/fs.c

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#87: FILE: arch/sparc64/solaris/fs.c:423:
+		if (mnt->mnt_flags & MNT_NOSUID) i |= 2;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#113: FILE: arch/sparc64/solaris/fs.c:457:
+		if (mnt->mnt_flags & MNT_NOSUID) i |= 2;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#122: FILE: arch/sparc64/solaris/fs.c:485:
+		error = report_statvfs(nd.mnt, inode, buf);
 		                       ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#140: FILE: arch/sparc64/solaris/fs.c:515:
+		error = report_statvfs64(nd.mnt, inode, buf);
 		                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#161: FILE: fs/exec.c:350:
+		if (!(nd.mnt->mnt_flags & MNT_NOEXEC) &&
 		      ^^

ERROR:SPACING: space required before the open parenthesis '('
#171: FILE: fs/exec.c:619:
+	if(!(bprm->file->f_vfsmnt->mnt_flags & MNT_NOSUID)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: fs/super.c:58:
+static int do_remount(const char *dir, int flags, int mnt_flags, char * data);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#298: FILE: fs/super.c:796:
+	if (nd.mnt->mnt_flags & MNT_NODEV)
 	    ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#325: FILE: fs/super.c:1165:
+	if (path_init(old_name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &old_nd))
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#330: FILE: fs/super.c:1169:
+	if (path_init(new_name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &new_nd))
 	                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: fs/super.c:1191:
+	else if (add_vfsmnt(&new_nd, old_nd.dentry, old_nd.mnt->mnt_devname,
+				old_nd.mnt->mnt_flags))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: fs/super.c:1211:
+static int do_remount(const char *dir,int flags,int mnt_flags,char *data)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: fs/super.c:1211:
+static int do_remount(const char *dir,int flags,int mnt_flags,char *data)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: fs/super.c:1211:
+static int do_remount(const char *dir,int flags,int mnt_flags,char *data)
                                                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#358: FILE: fs/super.c:1226:
+			if (nd.dentry == nd.mnt->mnt_root) {
 			    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#358: FILE: fs/super.c:1226:
+			if (nd.dentry == nd.mnt->mnt_root) {
 			                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#367: FILE: fs/super.c:1236:
+					nd.mnt->mnt_flags=MNT_VISIBLE|mnt_flags;
 					^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#367: FILE: fs/super.c:1236:
+					nd.mnt->mnt_flags=MNT_VISIBLE|mnt_flags;
 					                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#367: FILE: fs/super.c:1236:
+					nd.mnt->mnt_flags=MNT_VISIBLE|mnt_flags;
 					                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#390: FILE: fs/super.c:1319:
+	flags &= ~(MS_NOSUID|MS_NOEXEC|MS_NODEV);
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#390: FILE: fs/super.c:1319:
+	flags &= ~(MS_NOSUID|MS_NOEXEC|MS_NODEV);
 	                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#406: FILE: fs/super.c:1384:
+		mnt = add_vfsmnt(&nd, sb->s_root, dev_name, mnt_flags);
 		                  ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: include/linux/fs.h:121:
+#define MS_RMT_MASK	(MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_NOATIME|\
                    	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: include/linux/fs.h:121:
+#define MS_RMT_MASK	(MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_NOATIME|\
                    	                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#435: FILE: include/linux/fs.h:121:
+#define MS_RMT_MASK	(MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_NOATIME|\
                    	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#435: FILE: include/linux/fs.h:121:
+#define MS_RMT_MASK	(MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_NOATIME|\
                    	                                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000533575.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 9 warnings, 10 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000533575.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
