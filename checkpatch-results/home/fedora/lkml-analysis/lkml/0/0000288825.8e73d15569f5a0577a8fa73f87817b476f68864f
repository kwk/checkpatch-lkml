WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/largemap.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#59: FILE: include/linux/largemap.h:2:
+ * include/linux/largemap.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#74: FILE: include/linux/largemap.h:17:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#97: FILE: include/linux/largemap.h:40:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#98: FILE: include/linux/largemap.h:41:
+#define BITS_PER_PAGE		(PAGE_SIZE*8)
                      		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#99: FILE: include/linux/largemap.h:42:
+#define BITS_PER_PAGE_MASK	(BITS_PER_PAGE-1)
                           	              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#101: FILE: include/linux/largemap.h:44:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/largemap.h:48:
+extern long lm_alloc(struct largemap *map, unsigned int limit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/largemap.h:61:
+extern struct largemap *lm_allocmap(unsigned long maxsize,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/largemap.h:65:
+extern void lm_freemap(struct largemap *map);

WARNING:LINE_SPACING: Missing a blank line after declarations
#213: FILE: kernel/pid.c:46:
+	int pid = lm_alloc(pidmap, pid_max);
+	last_pid = pid;

WARNING:TYPO_SPELLING: 'defalt' may be misspelled - perhaps 'default'?
#279: FILE: kernel/pid.c:200:
+	/* Allocate pid 0 by defalt */
 	                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#304: FILE: lib/largemap.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#305: FILE: lib/largemap.c:2:
+ * lib/largemap.c

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#326: FILE: lib/largemap.c:23:
+#include <asm/mmu_context.h>

CHECK:BRACES: braces {} should be used on all arms of this statement
#386: FILE: lib/largemap.c:83:
+	if (start != 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#389: FILE: lib/largemap.c:86:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#405: FILE: lib/largemap.c:102:
+	BUG_ON(limit > map->lm_maxlimit);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: lib/largemap.c:122:
+^I^I^I^I^I         BITS_PER_PAGE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: lib/largemap.c:145:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: lib/largemap.c:149:
+	int arraysize = (maxsize + PAGE_SIZE*8-1)/PAGE_SIZE/8;
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#452: FILE: lib/largemap.c:149:
+	int arraysize = (maxsize + PAGE_SIZE*8-1)/PAGE_SIZE/8;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#452: FILE: lib/largemap.c:149:
+	int arraysize = (maxsize + PAGE_SIZE*8-1)/PAGE_SIZE/8;
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#452: FILE: lib/largemap.c:149:
+	int arraysize = (maxsize + PAGE_SIZE*8-1)/PAGE_SIZE/8;
 	                                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#460: FILE: lib/largemap.c:157:
+	BUG_ON(firstfree > BITS_PER_PAGE || firstfree > maxsize);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*map)...) over kmalloc(sizeof(struct largemap)...)
#462: FILE: lib/largemap.c:159:
+	map = kmalloc(sizeof(struct largemap) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#463: FILE: lib/largemap.c:160:
+		      arraysize*sizeof(struct lm_block), GFP_KERNEL);
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#466: FILE: lib/largemap.c:163:
+	map->lm_last = firstfree ? firstfree-1 : 0;
 	                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 17 checks, 422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
