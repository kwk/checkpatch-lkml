WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: arch/ppc/Kconfig:91:
+config E200
+	bool "e200"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: arch/ppc/kernel/cputable.c:907:
+^I{ ^I/* e200z5 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: arch/ppc/kernel/cputable.c:918:
+^I{ ^I/* e200z6 */$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#263: FILE: arch/ppc/kernel/head_booke.h:216:
+#define DEBUG_EXCEPTION							      \
+	START_EXCEPTION(Debug);						      \
+	DEBUG_EXCEPTION_PROLOG;						      \
+									      \
+	/*								      \

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#263: FILE: arch/ppc/kernel/head_booke.h:216:
+#define DEBUG_EXCEPTION							      \
+	START_EXCEPTION(Debug);						      \
+	DEBUG_EXCEPTION_PROLOG;						      \
+									      \
+	/*								      \

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:CAMELCASE: Avoid CamelCase: <Debug>
#264: FILE: arch/ppc/kernel/head_booke.h:217:
+	START_EXCEPTION(Debug);						      \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#274: FILE: arch/ppc/kernel/head_booke.h:227:
+	 */								      \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: arch/ppc/kernel/head_booke.h:228:
+	mfspr	r10,SPRN_DBSR;		/* check single-step/branch taken */  \
 	     	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: arch/ppc/kernel/head_booke.h:229:
+	andis.	r10,r10,DBSR_IC@h;					      \
 	      	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: arch/ppc/kernel/head_booke.h:229:
+	andis.	r10,r10,DBSR_IC@h;					      \
 	      	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#277: FILE: arch/ppc/kernel/head_booke.h:230:
+	beq+	2f;							      \
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#279: FILE: arch/ppc/kernel/head_booke.h:232:
+	lis	r10,KERNELBASE@h;	/* check if exception in vectors */   \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: arch/ppc/kernel/head_booke.h:233:
+	ori	r10,r10,KERNELBASE@l;					      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: arch/ppc/kernel/head_booke.h:233:
+	ori	r10,r10,KERNELBASE@l;					      \
 	   	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#281: FILE: arch/ppc/kernel/head_booke.h:234:
+	cmplw	r12,r10;						      \
 	     	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#282: FILE: arch/ppc/kernel/head_booke.h:235:
+	blt+	2f;			/* addr below exception vectors */    \
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: arch/ppc/kernel/head_booke.h:237:
+	lis	r10,Debug@h;						      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: arch/ppc/kernel/head_booke.h:238:
+	ori	r10,r10,Debug@l;					      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: arch/ppc/kernel/head_booke.h:238:
+	ori	r10,r10,Debug@l;					      \
 	   	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: arch/ppc/kernel/head_booke.h:239:
+	cmplw	r12,r10;						      \
 	     	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#287: FILE: arch/ppc/kernel/head_booke.h:240:
+	bgt+	2f;			/* addr above exception vectors */    \
 	   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#290: FILE: arch/ppc/kernel/head_booke.h:243:
+1:	rlwinm	r9,r9,0,~MSR_DE;	/* clear DE in the CDRR1 value */     \
  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: arch/ppc/kernel/head_booke.h:243:
+1:	rlwinm	r9,r9,0,~MSR_DE;	/* clear DE in the CDRR1 value */     \
   	      	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: arch/ppc/kernel/head_booke.h:243:
+1:	rlwinm	r9,r9,0,~MSR_DE;	/* clear DE in the CDRR1 value */     \
   	      	     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#290: FILE: arch/ppc/kernel/head_booke.h:243:
+1:	rlwinm	r9,r9,0,~MSR_DE;	/* clear DE in the CDRR1 value */     \
   	      	       ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#290: FILE: arch/ppc/kernel/head_booke.h:243:
+1:	rlwinm	r9,r9,0,~MSR_DE;	/* clear DE in the CDRR1 value */     \
   	      	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#291: FILE: arch/ppc/kernel/head_booke.h:244:
+	lis	r10,DBSR_IC@h;		/* clear the IC event */	      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#292: FILE: arch/ppc/kernel/head_booke.h:245:
+	mtspr	SPRN_DBSR,r10;						      \
 	     	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: arch/ppc/kernel/head_booke.h:247:
+	lwz	r10,_CCR(r11);						      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: arch/ppc/kernel/head_booke.h:248:
+	lwz	r0,GPR0(r11);						      \
 	   	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: arch/ppc/kernel/head_booke.h:249:
+	lwz	r1,GPR1(r11);						      \
 	   	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: arch/ppc/kernel/head_booke.h:250:
+	mtcrf	0x80,r10;						      \
 	     	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: arch/ppc/kernel/head_booke.h:251:
+	mtspr	SPRN_DSRR0,r12;						      \
 	     	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: arch/ppc/kernel/head_booke.h:252:
+	mtspr	SPRN_DSRR1,r9;						      \
 	     	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: arch/ppc/kernel/head_booke.h:253:
+	lwz	r9,GPR9(r11);						      \
 	   	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: arch/ppc/kernel/head_booke.h:254:
+	lwz	r12,GPR12(r11);						      \
 	   	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#302: FILE: arch/ppc/kernel/head_booke.h:255:
+	mtspr	DEBUG_SPRG,r8;						      \
 	     	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: arch/ppc/kernel/head_booke.h:257:
+	lwz	r10,GPR10-INT_FRAME_SIZE(r8);				      \
 	   	   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#304: FILE: arch/ppc/kernel/head_booke.h:257:
+	lwz	r10,GPR10-INT_FRAME_SIZE(r8);				      \
 	   	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: arch/ppc/kernel/head_booke.h:258:
+	lwz	r11,GPR11-INT_FRAME_SIZE(r8);				      \
 	   	   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#305: FILE: arch/ppc/kernel/head_booke.h:258:
+	lwz	r11,GPR11-INT_FRAME_SIZE(r8);				      \
 	   	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: arch/ppc/kernel/head_booke.h:259:
+	mfspr	r8,DEBUG_SPRG;						      \
 	     	  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#312: FILE: arch/ppc/kernel/head_booke.h:265:
+2:	mfspr	r4,SPRN_DBSR;						      \
  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#312: FILE: arch/ppc/kernel/head_booke.h:265:
+2:	mfspr	r4,SPRN_DBSR;						      \
   	     	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: arch/ppc/kernel/head_booke.h:266:
+	addi	r3,r1,STACK_FRAME_OVERHEAD;				      \
 	    	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: arch/ppc/kernel/head_booke.h:266:
+	addi	r3,r1,STACK_FRAME_OVERHEAD;				      \
 	    	     ^

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#314: FILE: arch/ppc/kernel/head_booke.h:267:
+	EXC_XFER_TEMPLATE(DebugException, 0x2002, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, debug_transfer_to_handler, ret_from_debug_exc)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#314: FILE: arch/ppc/kernel/head_booke.h:267:
+	EXC_XFER_TEMPLATE(DebugException, 0x2002, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, debug_transfer_to_handler, ret_from_debug_exc)
 	                                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#314: FILE: arch/ppc/kernel/head_booke.h:267:
+	EXC_XFER_TEMPLATE(DebugException, 0x2002, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, debug_transfer_to_handler, ret_from_debug_exc)
 	                                                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <DebugException>
#314: FILE: arch/ppc/kernel/head_booke.h:267:
+	EXC_XFER_TEMPLATE(DebugException, 0x2002, (MSR_KERNEL & ~(MSR_ME|MSR_DE|MSR_CE)), NOCOPY, debug_transfer_to_handler, ret_from_debug_exc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: arch/ppc/kernel/perfmon.c:39:
+#if defined (CONFIG_FSL_BOOKE) && !defined (CONFIG_E200)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: arch/ppc/kernel/perfmon.c:39:
+#if defined (CONFIG_FSL_BOOKE) && !defined (CONFIG_E200)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: arch/ppc/kernel/traps.c:305:
+#elif defined (CONFIG_E200)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#512: FILE: arch/ppc/kernel/traps.c:306:
+	printk("Machine check in kernel mode.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#513: FILE: arch/ppc/kernel/traps.c:307:
+	printk("Caused by (from MCSR=%lx): ", reason);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#516: FILE: arch/ppc/kernel/traps.c:310:
+		printk("Machine Check Signal\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: arch/ppc/kernel/traps.c:312:
+		printk("Cache Push Parity Error\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: arch/ppc/kernel/traps.c:314:
+		printk("Cache Parity Error\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: arch/ppc/kernel/traps.c:316:
+		printk("ISI, ITLB, or Bus Error on first instruction fetch for an exception handler\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: arch/ppc/kernel/traps.c:318:
+		printk("Bus - Read Bus Error on instruction fetch\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#526: FILE: arch/ppc/kernel/traps.c:320:
+		printk("Bus - Read Bus Error on data load\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#528: FILE: arch/ppc/kernel/traps.c:322:
+		printk("Bus - Write Bus Error on buffered store or cache line push\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#541: FILE: arch/ppc/mm/fsl_booke_mmu.c:129:
+	TLBCAM[index].MAS0 = MAS0_TLBSEL(1) | MAS0_ESEL(index) | MAS0_NV(index+1);
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#588: FILE: include/asm-ppc/reg.h:163:
+#define HID0_DAPUEN	(1<<8)		/* Debug APU enable */
                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#588: FILE: include/asm-ppc/reg.h:163:
+#define HID0_DAPUEN	(1<<8)		/* Debug APU enable */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: include/asm-ppc/reg_booke.h:270:
+#define MCSR_MCP ^I0x80000000UL /* Machine Check Input Pin */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: include/asm-ppc/reg_booke.h:271:
+#define MCSR_CP_PERR ^I0x20000000UL /* Cache Push Parity Error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: include/asm-ppc/reg_booke.h:272:
+#define MCSR_CPERR ^I0x10000000UL /* Cache Parity Error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: include/asm-ppc/reg_booke.h:273:
+#define MCSR_EXCP_ERR ^I0x08000000UL /* ISI, ITLB, or Bus Error on 1st insn$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#613: FILE: include/asm-ppc/reg_booke.h:274:
+#define MCSR_EXCP_ERR 	0x08000000UL /* ISI, ITLB, or Bus Error on 1st insn
+					fetch for an exception handler */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#613: FILE: include/asm-ppc/reg_booke.h:274:
+					fetch for an exception handler */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#614: FILE: include/asm-ppc/reg_booke.h:275:
+#define MCSR_BUS_IRERR ^I0x00000010UL /* Read Bus Error on instruction fetch*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#615: FILE: include/asm-ppc/reg_booke.h:276:
+#define MCSR_BUS_DRERR ^I0x00000008UL /* Read Bus Error on data load */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: include/asm-ppc/reg_booke.h:277:
+#define MCSR_BUS_WRERR ^I0x00000004UL /* Write Bus Error on buffered$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#617: FILE: include/asm-ppc/reg_booke.h:278:
+#define MCSR_BUS_WRERR 	0x00000004UL /* Write Bus Error on buffered
+					store or cache line push */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#617: FILE: include/asm-ppc/reg_booke.h:278:
+					store or cache line push */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173965.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 29 warnings, 12 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173965.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
