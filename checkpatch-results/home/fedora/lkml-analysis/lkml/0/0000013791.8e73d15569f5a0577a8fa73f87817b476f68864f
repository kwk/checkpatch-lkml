WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#66: FILE: drivers/md/raid5.c:226:
+	BUG_ON(sh->ops.pending || sh->ops.ack || sh->ops.complete);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#79: FILE: drivers/md/raid5.c:245:
+			printk("sector=%llx i=%d %p %p %p %p %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: drivers/md/raid5.c:328:
+raid5_end_read_request(struct bio * bi, unsigned int bytes_done, int error);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: drivers/md/raid5.c:330:
+raid5_end_write_request (struct bio *bi, unsigned int bytes_done, int error);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: drivers/md/raid5.c:343:
+		mdk_rdev_t *rdev;
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#106: FILE: drivers/md/raid5.c:343:
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#108: FILE: drivers/md/raid5.c:345:
+		else if (test_and_clear_bit(R5_Wantread, &sh->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#123: FILE: drivers/md/raid5.c:360:
+		if (rdev && test_bit(Faulty, &rdev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/md/raid5.c:368:
+			if (test_bit(STRIPE_SYNCING, &sh->state) ||
+				test_bit(STRIPE_EXPAND_SOURCE, &sh->state) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/md/raid5.c:374:
+			PRINTK("%s: stripe %llu schedule op %ld on disc %d\n",
+				__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#137: FILE: drivers/md/raid5.c:374:
+				__FUNCTION__,

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReWrite>
#151: FILE: drivers/md/raid5.c:388:
+			    test_bit(R5_ReWrite, &sh->dev[i].flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/md/raid5.c:395:
+			PRINTK("skip op %ld on disc %d for sector %llu\n",
+				bi->bi_rw, i, (unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/md/raid5.c:404:
+async_copy_data(int frombio, struct bio *bio, struct page *page, sector_t sector,
+	struct dma_async_tx_descriptor *tx)

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#175: FILE: drivers/md/raid5.c:412:
+		page_offset = (signed)(bio->bi_sector - sector) * 512;

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#177: FILE: drivers/md/raid5.c:414:
+		page_offset = (signed)(sector - bio->bi_sector) * -512;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: drivers/md/raid5.c:416:
+		int len = bio_iovec_idx(bio,i)->bv_len;
 		                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#191: FILE: drivers/md/raid5.c:428:
+		else clen = len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: drivers/md/raid5.c:431:
+			b_offset += bio_iovec_idx(bio,i)->bv_offset;
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: drivers/md/raid5.c:432:
+			bio_page = bio_iovec_idx(bio,i)->bv_page;
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/md/raid5.c:435:
+				tx = async_memcpy(page, bio_page, page_offset,
+					b_offset, clen,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/md/raid5.c:440:
+				tx = async_memcpy(bio_page, page, b_offset,
+					page_offset, clen,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: drivers/md/raid5.c:456:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/md/raid5.c:457:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#222: FILE: drivers/md/raid5.c:459:
+	BUG_ON(test_and_set_bit(STRIPE_OP_BIOFILL, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#234: FILE: drivers/md/raid5.c:471:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/md/raid5.c:472:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#237: FILE: drivers/md/raid5.c:474:
+	for (i=sh->disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: drivers/md/raid5.c:476:
+		struct r5dev *dev = &sh->dev[i];
+		if (test_bit(R5_Wantfill, &dev->flags)) {

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantfill>
#239: FILE: drivers/md/raid5.c:476:
+		if (test_bit(R5_Wantfill, &dev->flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: drivers/md/raid5.c:478:
+			struct bio *rbi, *rbi2;
+			spin_lock_irq(&conf->device_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/md/raid5.c:484:
+				tx = async_copy_data(0, rbi, dev->page,
+					dev->sector, tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/md/raid5.c:500:
+	async_interrupt(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_biofill, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#272: FILE: drivers/md/raid5.c:509:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/md/raid5.c:510:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/md/raid5.c:513:
+	BUG_ON(!test_and_clear_bit(R5_Wantcompute, &tgt->flags));

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantcompute>
#276: FILE: drivers/md/raid5.c:513:
+	BUG_ON(!test_and_clear_bit(R5_Wantcompute, &tgt->flags));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: drivers/md/raid5.c:514:
+	BUG_ON(test_and_set_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.complete));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/md/raid5.c:536:
+	PRINTK("%s: stripe %llu block: %d\n",
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#299: FILE: drivers/md/raid5.c:536:
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#300: FILE: drivers/md/raid5.c:537:
+	BUG_ON(!test_bit(R5_Wantcompute, &tgt->flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: drivers/md/raid5.c:539:
+	for (i=disks ; i-- ; )
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/md/raid5.c:546:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		ASYNC_TX_XOR_ZERO_DST | ASYNC_TX_INT_EN, NULL,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#323: FILE: drivers/md/raid5.c:560:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/md/raid5.c:561:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#343: FILE: drivers/md/raid5.c:580:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/md/raid5.c:581:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#346: FILE: drivers/md/raid5.c:583:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#348: FILE: drivers/md/raid5.c:585:
+		/* Only process blocks that are known to be uptodate */
 		                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantprexor>
#349: FILE: drivers/md/raid5.c:586:
+		if (dev->towrite && test_bit(R5_Wantprexor, &dev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/md/raid5.c:591:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		ASYNC_TX_DEP_ACK | ASYNC_TX_XOR_DROP_DST, tx,

WARNING:TYPO_SPELLING: 'necesary' may be misspelled - perhaps 'necessary'?
#357: FILE: drivers/md/raid5.c:594:
+	/* trigger a channel switch if necesary */
 	                               ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/md/raid5.c:596:
+	tx = async_interrupt_cond(DMA_MEMCPY, ASYNC_TX_DEP_ACK, tx,
+		NULL, NULL);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/md/raid5.c:605:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/md/raid5.c:606:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#371: FILE: drivers/md/raid5.c:608:
+	BUG_ON(test_and_set_bit(STRIPE_OP_BIODRAIN, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#385: FILE: drivers/md/raid5.c:622:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/md/raid5.c:623:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#388: FILE: drivers/md/raid5.c:625:
+	for (i=disks ; i-- ;) {
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#398: FILE: drivers/md/raid5.c:635:
+			if (i!=pd_idx && dev->towrite &&
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/md/raid5.c:636:
+			if (i!=pd_idx && dev->towrite &&
+				test_bit(R5_LOCKED, &dev->flags))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#409: FILE: drivers/md/raid5.c:646:
+			BUG_ON(dev->written);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#410: FILE: drivers/md/raid5.c:647:
+			wbi = dev->written = chosen;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/md/raid5.c:652:
+				tx = async_copy_data(1, wbi, dev->page,
+					dev->sector, tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/md/raid5.c:659:
+	tx = async_interrupt_cond(DMA_XOR, ASYNC_TX_DEP_ACK, tx,
+		ops_complete_biodrain, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#432: FILE: drivers/md/raid5.c:669:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/md/raid5.c:670:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#435: FILE: drivers/md/raid5.c:672:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: drivers/md/raid5.c:674:
+		struct r5dev *dev = &sh->dev[i];
+		if (dev->written || i == pd_idx)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#441: FILE: drivers/md/raid5.c:678:
+	BUG_ON(test_and_set_bit(STRIPE_OP_POSTXOR, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#461: FILE: drivers/md/raid5.c:698:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: drivers/md/raid5.c:699:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#468: FILE: drivers/md/raid5.c:705:
+		xor_dest = xor_srcs[count++] = sh->dev[pd_idx].page;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#469: FILE: drivers/md/raid5.c:706:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#471: FILE: drivers/md/raid5.c:708:
+			struct r5dev *dev = &sh->dev[i];
+			if (dev->written)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#476: FILE: drivers/md/raid5.c:713:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/md/raid5.c:715:
+			struct r5dev *dev = &sh->dev[i];
+			if (i!=pd_idx)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#478: FILE: drivers/md/raid5.c:715:
+			if (i!=pd_idx)
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/md/raid5.c:731:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		flags, tx, ops_complete_postxor, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#502: FILE: drivers/md/raid5.c:739:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/md/raid5.c:740:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/md/raid5.c:743:
+	if (test_and_clear_bit(STRIPE_OP_MOD_DMA_CHECK, &sh->ops.pending) &&
+		sh->ops.zero_sum_result == 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#509: FILE: drivers/md/raid5.c:746:
+	BUG_ON(test_and_set_bit(STRIPE_OP_CHECK, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#527: FILE: drivers/md/raid5.c:764:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/md/raid5.c:765:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#530: FILE: drivers/md/raid5.c:767:
+	for (i=disks; i--;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#532: FILE: drivers/md/raid5.c:769:
+		struct r5dev *dev = &sh->dev[i];
+		if (i != pd_idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: drivers/md/raid5.c:774:
+	tx = async_xor_zero_sum(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		&sh->ops.zero_sum_result, 0, NULL, NULL, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/md/raid5.c:783:
+	tx = async_interrupt(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_check, sh);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#553: FILE: drivers/md/raid5.c:790:
+#define check_op(op) do {\
+	if (test_bit(op, &sh->ops.pending) &&\
+		!test_bit(op, &sh->ops.complete)) {\
+		if (test_and_set_bit(op, &sh->ops.ack))\
+			clear_bit(op, &pending);\
+		else\
+			ack++;\
+	} else\
+		clear_bit(op, &pending);\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#562: FILE: drivers/md/raid5.c:799:
+} while(0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#569: FILE: drivers/md/raid5.c:806:
+	int overlap=0, ack=0, i, disks = sh->disks;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#569: FILE: drivers/md/raid5.c:806:
+	int overlap=0, ack=0, i, disks = sh->disks;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#621: FILE: drivers/md/raid5.c:858:
+		for (i=disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: drivers/md/raid5.c:860:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#623: FILE: drivers/md/raid5.c:860:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: drivers/md/raid5.c:865:
+	if (sh->ops.count > 0) {
[...]
+	} else if (sh->ops.count < 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#632: FILE: drivers/md/raid5.c:869:
+		BUG();

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#652: FILE: include/linux/raid/raid5.h:119:
+ *     lockstripe clrSTRIPE_HANDLE ... (lockdev check-buffers unlockdev) .. change-state .. record io/ops needed unlockstripe schedule io/ops

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'guaruntees' may be misspelled - perhaps 'guarantees'?
#688: FILE: include/linux/raid/raid5.h:154:
+ *    guaruntees that any operation that is dependent on the
       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#698: FILE: include/linux/raid/raid5.h:170:
+		unsigned long	   pending;  /* pending operations (set for request->issue->complete) */

CHECK:CAMELCASE: Avoid CamelCase: <R5_Consistent>
#720: FILE: include/linux/raid/raid5.h:198:
+#define	R5_Consistent	11	/* Block is HW DMA-able without a cache flush */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#721: FILE: include/linux/raid/raid5.h:199:
+#define	R5_Wantcompute	12	/* compute_block in progress treat as uptodate */
        	              	  	                                      ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 41 warnings, 43 checks, 687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
