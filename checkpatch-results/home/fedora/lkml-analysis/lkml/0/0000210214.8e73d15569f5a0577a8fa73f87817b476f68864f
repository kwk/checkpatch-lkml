WARNING:TYPO_SPELLING: 'tieing' may be misspelled - perhaps 'tying'?
#24: 
This is a patch that makes a step towards tieing the modified allocator
                                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
zero-page, both buddies are zero'd, one is allocated and the other is placed

WARNING:TYPO_SPELLING: 'accidently' may be misspelled - perhaps 'accidentally'?
#29: 
are not accidently fragmented.
        ^^^^^^^^^^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#71: FILE: mm/page_alloc.c:56:
+int userzero_count=0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#71: FILE: mm/page_alloc.c:56:
+int userzero_count=0;
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: mm/page_alloc.c:78:
+	{ ALLOC_KERNNORCLM,ALLOC_USERZERO,   ALLOC_KERNRCLM,   ALLOC_USERRCLM },
 	                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: mm/page_alloc.c:92:
+static char *type_names[ALLOC_TYPES] = { "KernNoRclm", "KernRclm", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: mm/page_alloc.c:156:
+	if (test_bit(bitidx,zone->free_area_usemap)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#136: FILE: mm/page_alloc.c:157:
+		if (test_bit(bitidx+1, zone->free_area_usemap))
 		                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: mm/page_alloc.c:187:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: mm/page_alloc.c:190:
+		set_bit(bitidx+1, zone->free_area_usemap);
 		              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#168: FILE: mm/page_alloc.c:347:
+	if (alloctype == ALLOC_USERZERO) alloctype = ALLOC_KERNNORCLM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: mm/page_alloc.c:544:
+static struct page *__rmqueue(struct zone *zone, unsigned int order, int flags,
+				unsigned long *irq_flags)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#192: FILE: mm/page_alloc.c:561:
+	}
+	else if (flags & __GFP_USERRCLM) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: mm/page_alloc.c:598:
+			int zero_order=order;
 			              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: mm/page_alloc.c:605:
+^I^I^I * the zero page. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: mm/page_alloc.c:611:
+^I^I^I * pages to leak into the USERRCLM and KERNRCLM $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: mm/page_alloc.c:622:
+^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#230: FILE: mm/page_alloc.c:622:
+
+			

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#235: FILE: mm/page_alloc.c:627:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: mm/page_alloc.c:650:
+			prep_zero_page(page, MAX_ORDER-1, flags);
 			                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: mm/page_alloc.c:2078:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[3],$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: mm/page_alloc.c:2078:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[3],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: mm/page_alloc.c:2078:
+ ^Iseq_printf(m, "%-10s Fallback count: %d\n", type_names[3],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: mm/page_alloc.c:2079:
+ 	seq_printf(m, "%-10s Fallback count: %d\n", type_names[3],
+							fallback_count[3]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 5 warnings, 8 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
