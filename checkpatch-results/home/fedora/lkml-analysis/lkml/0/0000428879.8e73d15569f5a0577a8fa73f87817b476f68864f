ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: include/linux/list.h:34:
+static inline struct list_head * __list_valid(struct list_head *list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: include/linux/list.h:36:
+	BUG_ON(list == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list"
#59: FILE: include/linux/list.h:36:
+	BUG_ON(list == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#60: FILE: include/linux/list.h:37:
+	BUG_ON(list->next == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list->next"
#60: FILE: include/linux/list.h:37:
+	BUG_ON(list->next == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#61: FILE: include/linux/list.h:38:
+	BUG_ON(list->prev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list->prev"
#61: FILE: include/linux/list.h:38:
+	BUG_ON(list->prev == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#62: FILE: include/linux/list.h:39:
+	BUG_ON(list->next->prev != list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#63: FILE: include/linux/list.h:40:
+	BUG_ON(list->prev->next != list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#64: FILE: include/linux/list.h:41:
+	BUG_ON((list->next == list) && (list->prev != list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#65: FILE: include/linux/list.h:42:
+	BUG_ON((list->prev == list) && (list->next != list));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: include/linux/list.h:46:
+#else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/linux/list.h:232:
+        ^I__list_valid(pos), pos = pos->next, prefetch(pos->next))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: include/linux/list.h:232:
+        ^I__list_valid(pos), pos = pos->next, prefetch(pos->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/list.h:232:
+        ^I__list_valid(pos), pos = pos->next, prefetch(pos->next))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: include/linux/list.h:257:
+        ^I__list_valid(pos), pos = pos->prev, prefetch(pos->prev))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: include/linux/list.h:257:
+        ^I__list_valid(pos), pos = pos->prev, prefetch(pos->prev))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: include/linux/list.h:257:
+        ^I__list_valid(pos), pos = pos->prev, prefetch(pos->prev))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: include/linux/list.h:279:
+^I     __list_valid(&pos->member), &pos->member != (head); ^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 12 warnings, 3 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
