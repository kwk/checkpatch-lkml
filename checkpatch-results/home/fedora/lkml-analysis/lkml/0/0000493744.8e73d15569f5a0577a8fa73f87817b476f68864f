WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
--- /opt/kernel/linux-2.5.1-pre6/include/linux/bio.h	Fri Dec  7 02:09:31 2001

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#33: 
--- /opt/kernel/linux-2.5.1-pre6/include/linux/bio.h	Fri Dec  7 02:09:31 2001

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bvl' - possible side-effects?
#53: FILE: linux/bio.h:142:
+#define __bio_for_each_segment(bvl, bio, i, start_idx)			\
+	for (bvl = bio_iovec((bio)), i = (start_idx);			\
 	     i < (bio)->bi_vcnt;					\
 	     bvl++, i++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#53: FILE: linux/bio.h:142:
+#define __bio_for_each_segment(bvl, bio, i, start_idx)			\
+	for (bvl = bio_iovec((bio)), i = (start_idx);			\
 	     i < (bio)->bi_vcnt;					\
 	     bvl++, i++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#53: FILE: linux/bio.h:142:
+#define __bio_for_each_segment(bvl, bio, i, start_idx)			\
+	for (bvl = bio_iovec((bio)), i = (start_idx);			\
 	     i < (bio)->bi_vcnt;					\
 	     bvl++, i++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bio' - possible side-effects?
#58: FILE: linux/bio.h:147:
+#define bio_for_each_segment(bvl, bio, i)				\
+	__bio_for_each_segment(bvl, bio, i, (bio)->bi_idx)

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: highmem.c:282:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#116: FILE: highmem.c:283:
+		if (nr_emergency_pages >= POOL_SIZE)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#118: FILE: highmem.c:285:
+		else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 6 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
