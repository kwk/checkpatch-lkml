WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Content-Type: text/plain; charset=iso-8859-1; name="shpte-2.5.42-mm3-2.diff"

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#50: FILE: ./mm/mmap.c:24:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:OxV)
#53: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#53: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mmu_gather_t **' should also have an identifier name
#53: FILE: ./mm/mmap.c:25:
+extern void unmap_page_range(mmu_gather_t **,struct vm_area_struct *vma, =

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#172: FILE: ./mm/memory.c:764:
 }
+static void zap_pmd_range(mmu_gather_t **tlb, pgd_t * dir, unsigned long =

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: ./mm/memory.c:764:
+static void zap_pmd_range(mmu_gather_t **tlb, pgd_t * dir, unsigned long =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: ./mm/memory.c:767:
+	struct mm_struct *mm =3D (*tlb)->mm;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#176: FILE: ./mm/memory.c:767:
+	struct mm_struct *mm =3D (*tlb)->mm;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#195: FILE: ./mm/memory.c:792:
+		ptepage =3D pmd_page(*pmd);
 		        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#204: FILE: ./mm/memory.c:796:
+			if ((address <=3D ptepage->index) &&
 			             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: ./mm/memory.c:797:
+			    (end >=3D (ptepage->index + PMD_SIZE))) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#205: FILE: ./mm/memory.c:797:
+			    (end >=3D (ptepage->index + PMD_SIZE))) {
 			         ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#208: FILE: ./mm/memory.c:800:
+				mm->rss -=3D ptepage->private;
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#214: FILE: ./mm/memory.c:806:
+				*tlb =3D tlb_gather_mmu(mm, 0);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#215: FILE: ./mm/memory.c:807:
+				ptepage =3D pmd_page(*pmd);
 				        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#230: FILE: ./mm/memory.c:819:
 }
+void unmap_page_range(mmu_gather_t **tlb, struct vm_area_struct *vma, =

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: ./mm/memory.c:877:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: ./mm/memory.c:877:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: ./mm/memory.c:877:
+ ^I^Iunmap_page_range(&tlb, vma, address, end);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 7 warnings, 2 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423062.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
