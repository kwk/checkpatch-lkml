WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -urpN linux-2.5.38/arch/i386/kernel/Makefile linux-2.5.38-adeos/arch/i386/kernel/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: arch/i386/kernel/adeos.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#79: FILE: arch/i386/kernel/adeos.c:2:
+ *   linux/arch/i386/kernel/adeos.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: arch/i386/kernel/adeos.c:8:
+ *   the Free Software Foundation, Inc., 675 Mass Ave, Cambridge MA 02139,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: arch/i386/kernel/adeos.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: arch/i386/kernel/adeos.c:19:
+ *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#106: FILE: arch/i386/kernel/adeos.c:29:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#111: FILE: arch/i386/kernel/adeos.c:34:
+static volatile unsigned long adeos_cpu_sync_map;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#113: FILE: arch/i386/kernel/adeos.c:36:
+static volatile unsigned long adeos_cpu_lock_map;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: arch/i386/kernel/adeos.c:42:
+void __adeos_do_critical_sync (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: arch/i386/kernel/adeos.c:42:
+void __adeos_do_critical_sync (unsigned irq)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/i386/kernel/adeos.c:45:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/i386/kernel/adeos.c:47:
+    set_bit(cpuid,&adeos_cpu_sync_map);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#124: FILE: arch/i386/kernel/adeos.c:47:
+    set_bit(cpuid,&adeos_cpu_sync_map);
                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#124: FILE: arch/i386/kernel/adeos.c:47:
+    set_bit(cpuid,&adeos_cpu_sync_map);
                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: arch/i386/kernel/adeos.c:50:
+    /* Now we are in sync with the lock requestor running on another
+       CPU. Enter a spinning wait until he releases the global

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: arch/i386/kernel/adeos.c:51:
+       lock. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/i386/kernel/adeos.c:52:
+    ipipe_hw_spin_lock_simple(&adeos_cpu_barrier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/kernel/adeos.c:56:
+    if (adeos_cpu_sync)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/adeos.c:60:
+    ipipe_hw_spin_unlock_simple(&adeos_cpu_barrier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/adeos.c:62:
+    clear_bit(cpuid,&adeos_cpu_sync_map);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#139: FILE: arch/i386/kernel/adeos.c:62:
+    clear_bit(cpuid,&adeos_cpu_sync_map);
                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#139: FILE: arch/i386/kernel/adeos.c:62:
+    clear_bit(cpuid,&adeos_cpu_sync_map);
                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: arch/i386/kernel/adeos.c:67:
+void __adeos_bootstrap_domain (adomain_t *adp, adattr_t *attr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/i386/kernel/adeos.c:70:
+    int estacksz = attr->estacksz > 0 ? attr->estacksz : 8192;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/i386/kernel/adeos.c:71:
+    int **psp = &adp->esp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/adeos.c:73:
+    adp->estackbase = (int *)kmalloc(estacksz,GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: arch/i386/kernel/adeos.c:73:
+    adp->estackbase = (int *)kmalloc(estacksz,GFP_KERNEL);
                                              ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#150: FILE: arch/i386/kernel/adeos.c:73:
+    adp->estackbase = (int *)kmalloc(estacksz,GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/adeos.c:75:
+    if (adp->estackbase == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adp->estackbase"
#152: FILE: arch/i386/kernel/adeos.c:75:
+    if (adp->estackbase == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#153: FILE: arch/i386/kernel/adeos.c:76:
+    if (adp->estackbase == NULL)
+	panic("no memory for domain entry stack");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/i386/kernel/adeos.c:78:
+    adp->esp = adp->estackbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/kernel/adeos.c:79:
+    **psp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/kernel/adeos.c:80:
+    *psp = (int *)(((unsigned long)*psp + estacksz - 0x10) & ~0xf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/i386/kernel/adeos.c:81:
+    *--(*psp) = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/adeos.c:82:
+    *--(*psp) = (int)attr->entry;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#162: FILE: arch/i386/kernel/adeos.c:85:
+void __adeos_cleanup_domain (adomain_t *adp) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: arch/i386/kernel/adeos.c:85:
+void __adeos_cleanup_domain (adomain_t *adp) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#163: FILE: arch/i386/kernel/adeos.c:86:
+void __adeos_cleanup_domain (adomain_t *adp) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/i386/kernel/adeos.c:87:
+    kfree(adp->estackbase);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#168: FILE: arch/i386/kernel/adeos.c:91:
+/* __adeos_switch_domain() -- Switch domain contexts. The current
+   domain is switched out while the domain pointed by "adp" is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: arch/i386/kernel/adeos.c:92:
+   switched in. */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#173: FILE: arch/i386/kernel/adeos.c:96:
+adomain_t **__adeos_get_smp_domain_slot (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: arch/i386/kernel/adeos.c:96:
+adomain_t **__adeos_get_smp_domain_slot (void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/kernel/adeos.c:97:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/i386/kernel/adeos.c:98:
+    return adp_cpu_current + cpuid;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: arch/i386/kernel/adeos.c:101:
+void __adeos_switch_domain (adomain_t *adp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/i386/kernel/adeos.c:104:
+    __asm__ __volatile__( \$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#189: FILE: arch/i386/kernel/adeos.c:112:
+	  /* Prepare to switch: build a resume frame for the suspended
+	     domain, save it's stack pointer, load the incoming

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#192: FILE: arch/i386/kernel/adeos.c:115:
+	     frame of the incoming domain. */

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#193: FILE: arch/i386/kernel/adeos.c:116:
+	"pushl $1f\n\t" \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#203: FILE: arch/i386/kernel/adeos.c:126:
+"1:	call __adeos_get_smp_domain_slot\n\t" \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#210: FILE: arch/i386/kernel/adeos.c:133:
+"2:	 popl %%esi\n\t" \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: arch/i386/kernel/adeos.c:145:
+void __adeos_switch_domain (adomain_t *adp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/adeos.c:148:
+    __asm__ __volatile__( \$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: arch/i386/kernel/adeos.c:156:
+	  /* Prepare to switch: build a resume frame for the suspended
+	     domain, save it's stack pointer, load the incoming

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: arch/i386/kernel/adeos.c:159:
+	     frame of the incoming domain. */

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#237: FILE: arch/i386/kernel/adeos.c:160:
+	"movl adp_cpu_current, %%edx\n\t" \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#245: FILE: arch/i386/kernel/adeos.c:168:
+"1:	 popl %%eax\n\t" \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#251: FILE: arch/i386/kernel/adeos.c:174:
+"2:	 popl %%esi\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/i386/kernel/adeos.c:181:
+        : "a" (adp));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/i386/kernel/adeos.c:181:
+        : "a" (adp));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: arch/i386/kernel/adeos.c:186:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#265: FILE: arch/i386/kernel/adeos.c:188:
+/* __adeos_critical_enter() -- Grab the superlock excluding all CPUs
+   but the current one from a critical section. This lock is used when

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#268: FILE: arch/i386/kernel/adeos.c:191:
+   (i.e. interrupt handler or regular thread). */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: arch/i386/kernel/adeos.c:193:
+unsigned long __adeos_critical_enter (void (*syncfn)(void))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/i386/kernel/adeos.c:196:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/i386/kernel/adeos.c:198:
+    ipipe_hw_save_flags_and_cli(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/i386/kernel/adeos.c:201:
+    if (__adeos_online_cpus > 1) /* We might be running a SMP-kernel on a UP box... */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#278: FILE: arch/i386/kernel/adeos.c:201:
+    if (__adeos_online_cpus > 1) /* We might be running a SMP-kernel on a UP box... */
+	{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#282: FILE: arch/i386/kernel/adeos.c:205:
+	set_bit(cpuid,&adeos_cpu_lock_map);
 	             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#282: FILE: arch/i386/kernel/adeos.c:205:
+	set_bit(cpuid,&adeos_cpu_lock_map);
 	              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#284: FILE: arch/i386/kernel/adeos.c:207:
+	while (test_and_set_bit(31,&adeos_cpu_lock_map))
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#284: FILE: arch/i386/kernel/adeos.c:207:
+	while (test_and_set_bit(31,&adeos_cpu_lock_map))
[...]
+	       this strange loop. */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#284: FILE: arch/i386/kernel/adeos.c:207:
+	while (test_and_set_bit(31,&adeos_cpu_lock_map))
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#284: FILE: arch/i386/kernel/adeos.c:207:
+	while (test_and_set_bit(31,&adeos_cpu_lock_map))
 	                           ^

WARNING:TABSTOP: Statements should start on a tabstop
#285: FILE: arch/i386/kernel/adeos.c:208:
+	    {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#287: FILE: arch/i386/kernel/adeos.c:210:
+	    /* Refer to the explanations found in
+	       linux/arch/asm-i386/irq.c about

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#289: FILE: arch/i386/kernel/adeos.c:212:
+	       this strange loop. */

WARNING:TABSTOP: Statements should start on a tabstop
#290: FILE: arch/i386/kernel/adeos.c:213:
+	    int n = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#291: FILE: arch/i386/kernel/adeos.c:214:
+	    do { cpu_relax(); } while (++n < cpuid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: arch/i386/kernel/adeos.c:214:
+	    int n = 0;
+	    do { cpu_relax(); } while (++n < cpuid);

WARNING:TABSTOP: Statements should start on a tabstop
#292: FILE: arch/i386/kernel/adeos.c:215:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#301: FILE: arch/i386/kernel/adeos.c:224:
+	while (adeos_cpu_sync_map != (cpu_online_map & ~adeos_cpu_lock_map))
+	    cpu_relax();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/i386/kernel/adeos.c:229:
+    return flags;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: arch/i386/kernel/adeos.c:234:
+void __adeos_critical_exit (unsigned long flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/i386/kernel/adeos.c:238:
+    if (__adeos_online_cpus > 1) /* We might be running a SMP-kernel on a UP box... */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#315: FILE: arch/i386/kernel/adeos.c:238:
+    if (__adeos_online_cpus > 1) /* We might be running a SMP-kernel on a UP box... */
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#321: FILE: arch/i386/kernel/adeos.c:244:
+	while (adeos_cpu_sync_map != 0)
+	    cpu_relax();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#324: FILE: arch/i386/kernel/adeos.c:247:
+	if (test_and_clear_bit(cpuid,&adeos_cpu_lock_map))
+	    clear_bit(31,&adeos_cpu_lock_map);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#324: FILE: arch/i386/kernel/adeos.c:247:
+	if (test_and_clear_bit(cpuid,&adeos_cpu_lock_map))
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#324: FILE: arch/i386/kernel/adeos.c:247:
+	if (test_and_clear_bit(cpuid,&adeos_cpu_lock_map))
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#325: FILE: arch/i386/kernel/adeos.c:248:
+	    clear_bit(31,&adeos_cpu_lock_map);
 	                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#325: FILE: arch/i386/kernel/adeos.c:248:
+	    clear_bit(31,&adeos_cpu_lock_map);
 	                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/i386/kernel/adeos.c:252:
+    ipipe_hw_restore_flags(flags);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#332: FILE: arch/i386/kernel/adeos.c:255:
+int __adeos_get_sysinfo (adsysinfo_t *info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/i386/kernel/adeos.c:259:
+    if (!skip_ioapic_setup && nr_ioapics > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/i386/kernel/adeos.c:261:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/i386/kernel/adeos.c:264:
+    info->timer.irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/i386/kernel/adeos.c:268:
+    info->ncpus = __adeos_online_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/i386/kernel/adeos.c:270:
+    info->ncpus = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/i386/kernel/adeos.c:273:
+    if (cpu_has_tsc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/i386/kernel/adeos.c:275:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/i386/kernel/adeos.c:278:
+    return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: arch/i386/kernel/adeos.c:281:
+int __adeos_tune_timer (unsigned long ns, int flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/i386/kernel/adeos.c:284:
+    unsigned ghz, latch;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#361: FILE: arch/i386/kernel/adeos.c:284:
+    unsigned ghz, latch;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/i386/kernel/adeos.c:285:
+    unsigned long x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/i386/kernel/adeos.c:287:
+    if (flags & ADEOS_RESET_TIMER)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/i386/kernel/adeos.c:289:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#366: FILE: arch/i386/kernel/adeos.c:289:
+    else
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#368: FILE: arch/i386/kernel/adeos.c:291:
+	if (ns < 122071 || ns > (1000 / HZ) * 1000000) /* HZ max, 8khz min */
+	    return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#369: FILE: arch/i386/kernel/adeos.c:292:
+	    return -EINVAL;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#372: FILE: arch/i386/kernel/adeos.c:295:
+	latch = (CLOCK_TICK_RATE + ghz/2) / ghz;
 	                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/i386/kernel/adeos.c:298:
+    x = __adeos_critical_enter(NULL); /* Sync with all CPUs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/i386/kernel/adeos.c:301:
+    outb_p(0x34,0x43);^I^I/* binary, mode 2, LSB/MSB, ch 0 */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/i386/kernel/adeos.c:301:
+    outb_p(0x34,0x43);		/* binary, mode 2, LSB/MSB, ch 0 */
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/i386/kernel/adeos.c:302:
+    outb_p(latch & 0xff,0x40);^I/* LSB */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: arch/i386/kernel/adeos.c:302:
+    outb_p(latch & 0xff,0x40);	/* LSB */
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/i386/kernel/adeos.c:303:
+    outb(latch >> 8,0x40);^I/* MSB */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: arch/i386/kernel/adeos.c:303:
+    outb(latch >> 8,0x40);	/* MSB */
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/i386/kernel/adeos.c:305:
+    __adeos_critical_exit(x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/i386/kernel/adeos.c:307:
+    return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#387: FILE: arch/i386/kernel/adeos.c:310:
+void __adeos_set_root_ptd (int key, void *value) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: arch/i386/kernel/adeos.c:310:
+void __adeos_set_root_ptd (int key, void *value) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#388: FILE: arch/i386/kernel/adeos.c:311:
+void __adeos_set_root_ptd (int key, void *value) {
+

WARNING:TYPO_SPELLING: 'ptd' may be misspelled - perhaps 'pdf'?
#389: FILE: arch/i386/kernel/adeos.c:312:
+    current->ptd[key] = value;
              ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/i386/kernel/adeos.c:312:
+    current->ptd[key] = value;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#392: FILE: arch/i386/kernel/adeos.c:315:
+void *__adeos_get_root_ptd (int key) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: arch/i386/kernel/adeos.c:315:
+void *__adeos_get_root_ptd (int key) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#393: FILE: arch/i386/kernel/adeos.c:316:
+void *__adeos_get_root_ptd (int key) {
+

WARNING:TYPO_SPELLING: 'ptd' may be misspelled - perhaps 'pdf'?
#394: FILE: arch/i386/kernel/adeos.c:317:
+    return current->ptd[key];
                     ^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/i386/kernel/adeos.c:317:
+    return current->ptd[key];$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#397: FILE: arch/i386/kernel/adeos.c:320:
+asmlinkage void __adeos_enter_syscall (struct pt_regs *regs) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: arch/i386/kernel/adeos.c:320:
+asmlinkage void __adeos_enter_syscall (struct pt_regs *regs) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#398: FILE: arch/i386/kernel/adeos.c:321:
+asmlinkage void __adeos_enter_syscall (struct pt_regs *regs) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/i386/kernel/adeos.c:322:
+    if (__adeos_event_monitors[ADEOS_SYSCALL_PROLOGUE] > 0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: arch/i386/kernel/adeos.c:323:
+	ipipe_handle_event(ADEOS_SYSCALL_PROLOGUE,regs);
 	                                         ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#403: FILE: arch/i386/kernel/adeos.c:326:
+asmlinkage void __adeos_exit_syscall (void) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: arch/i386/kernel/adeos.c:326:
+asmlinkage void __adeos_exit_syscall (void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#404: FILE: arch/i386/kernel/adeos.c:327:
+asmlinkage void __adeos_exit_syscall (void) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: arch/i386/kernel/adeos.c:328:
+    if (__adeos_event_monitors[ADEOS_SYSCALL_EPILOGUE] > 0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/i386/kernel/adeos.c:329:
+	ipipe_handle_event(ADEOS_SYSCALL_EPILOGUE,NULL);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/i386/kernel/entry.S:196:
+#endif /* CONFIG_ADEOS */^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'execption' may be misspelled - perhaps 'exception'?
#567: FILE: arch/i386/kernel/entry.S:250:
+	testl $IF_MASK,EFLAGS(%esp)     # interrupts off (execption path) ? ADEOS FIXME: Test marker
 	                                                  ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: arch/i386/kernel/entry.S:472:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/i386/kernel/i386_ksyms.c:179:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: arch/i386/kernel/i386_ksyms.c:179:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#741: FILE: arch/i386/kernel/i386_ksyms.c:183:
+/* The following are per-platform convenience exports which might be
+   needed by some Adeos domains loaded as kernel modules. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#741: FILE: arch/i386/kernel/i386_ksyms.c:183:
+   needed by some Adeos domains loaded as kernel modules. */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#742: FILE: arch/i386/kernel/i386_ksyms.c:184:
+extern irq_desc_t irq_desc[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#744: FILE: arch/i386/kernel/i386_ksyms.c:186:
+extern struct desc_struct idt_table[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#746: FILE: arch/i386/kernel/i386_ksyms.c:188:
+extern struct tty_driver console_driver;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#748: FILE: arch/i386/kernel/i386_ksyms.c:190:
+extern void (*kd_mksound)(unsigned int hz, unsigned int ticks);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#871: FILE: arch/i386/kernel/ipipe.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#872: FILE: arch/i386/kernel/ipipe.c:2:
+ *   linux/arch/i386/kernel/ipipe.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#878: FILE: arch/i386/kernel/ipipe.c:8:
+ *   the Free Software Foundation, Inc., 675 Mass Ave, Cambridge MA 02139,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#888: FILE: arch/i386/kernel/ipipe.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#889: FILE: arch/i386/kernel/ipipe.c:19:
+ *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bitops.h> instead of <asm/bitops.h>
#907: FILE: arch/i386/kernel/ipipe.c:37:
+#include <asm/bitops.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#917: FILE: arch/i386/kernel/ipipe.c:47:
+extern spinlock_t adeos_pipelock;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#919: FILE: arch/i386/kernel/ipipe.c:49:
+extern struct list_head adeos_pipeline;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: arch/i386/kernel/ipipe.c:51:
+/* Lifted from traps.c */ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#922: FILE: arch/i386/kernel/ipipe.c:52:
+#define ipipe_set_gate(gate_addr,type,dpl,addr)  \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#922: FILE: arch/i386/kernel/ipipe.c:52:
+#define ipipe_set_gate(gate_addr,type,dpl,addr)  \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#922: FILE: arch/i386/kernel/ipipe.c:52:
+#define ipipe_set_gate(gate_addr,type,dpl,addr)  \
                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gate_addr' - possible side-effects?
#922: FILE: arch/i386/kernel/ipipe.c:52:
+#define ipipe_set_gate(gate_addr,type,dpl,addr)  \
+do { \
+  int __d0, __d1; \
+  __asm__ __volatile__ ("movw %%dx,%%ax\n\t" \
+	"movw %4,%%dx\n\t" \
+	"movl %%eax,%0\n\t" \
+	"movl %%edx,%1" \
+	:"=m" (*((long *) (gate_addr))), \
+	 "=m" (*(1+(long *) (gate_addr))), "=&a" (__d0), "=&d" (__d1) \
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
+	 "3" ((char *) (addr)),"2" (__KERNEL_CS << 16)); \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dpl' may be better as '(dpl)' to avoid precedence issues
#922: FILE: arch/i386/kernel/ipipe.c:52:
+#define ipipe_set_gate(gate_addr,type,dpl,addr)  \
+do { \
+  int __d0, __d1; \
+  __asm__ __volatile__ ("movw %%dx,%%ax\n\t" \
+	"movw %4,%%dx\n\t" \
+	"movl %%eax,%0\n\t" \
+	"movl %%edx,%1" \
+	:"=m" (*((long *) (gate_addr))), \
+	 "=m" (*(1+(long *) (gate_addr))), "=&a" (__d0), "=&d" (__d1) \
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
+	 "3" ((char *) (addr)),"2" (__KERNEL_CS << 16)); \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 2)
#923: FILE: arch/i386/kernel/ipipe.c:53:
+do { \
+  int __d0, __d1; \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: arch/i386/kernel/ipipe.c:54:
+  int __d0, __d1; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: arch/i386/kernel/ipipe.c:55:
+  __asm__ __volatile__ ("movw %%dx,%%ax\n\t" \$

CHECK:SPACING: No space is necessary after a cast
#929: FILE: arch/i386/kernel/ipipe.c:59:
+	:"=m" (*((long *) (gate_addr))), \

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#929: FILE: arch/i386/kernel/ipipe.c:59:
+	:"=m" (*((long *) (gate_addr))), \
 	^

CHECK:SPACING: No space is necessary after a cast
#930: FILE: arch/i386/kernel/ipipe.c:60:
+	 "=m" (*(1+(long *) (gate_addr))), "=&a" (__d0), "=&d" (__d1) \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#930: FILE: arch/i386/kernel/ipipe.c:60:
+	 "=m" (*(1+(long *) (gate_addr))), "=&a" (__d0), "=&d" (__d1) \
 	          ^

CHECK:SPACING: No space is necessary after a cast
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
 	^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#931: FILE: arch/i386/kernel/ipipe.c:61:
+	:"i" ((short) (0x8000+(dpl<<13)+(type<<8))), \
 	                                     ^

CHECK:SPACING: No space is necessary after a cast
#932: FILE: arch/i386/kernel/ipipe.c:62:
+	 "3" ((char *) (addr)),"2" (__KERNEL_CS << 16)); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#932: FILE: arch/i386/kernel/ipipe.c:62:
+	 "3" ((char *) (addr)),"2" (__KERNEL_CS << 16)); \
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#935: FILE: arch/i386/kernel/ipipe.c:65:
+#define ipipe_set_irq_gate(vector,addr) \
                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'vector' may be better as '(vector)' to avoid precedence issues
#935: FILE: arch/i386/kernel/ipipe.c:65:
+#define ipipe_set_irq_gate(vector,addr) \
+ipipe_set_gate(idt_table+vector,14,0,addr)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#936: FILE: arch/i386/kernel/ipipe.c:66:
+ipipe_set_gate(idt_table+vector,14,0,addr)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#936: FILE: arch/i386/kernel/ipipe.c:66:
+ipipe_set_gate(idt_table+vector,14,0,addr)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#936: FILE: arch/i386/kernel/ipipe.c:66:
+ipipe_set_gate(idt_table+vector,14,0,addr)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#936: FILE: arch/i386/kernel/ipipe.c:66:
+ipipe_set_gate(idt_table+vector,14,0,addr)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'adp' - possible side-effects?
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
+do { \
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpuid' - possible side-effects?
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
+do { \
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
+do { \
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'irq' may be better as '(irq)' to avoid precedence issues
#938: FILE: arch/i386/kernel/ipipe.c:68:
+#define ipipe_set_irq_bit(adp,cpuid,irq) \
+do { \
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
+} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#939: FILE: arch/i386/kernel/ipipe.c:69:
+do { \
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: arch/i386/kernel/ipipe.c:70:
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#940: FILE: arch/i386/kernel/ipipe.c:70:
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#940: FILE: arch/i386/kernel/ipipe.c:70:
+    set_bit(irq & 0x1f,&(adp)->cpudata[cpuid].irq_pending_lo[irq >> 5]); \
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: arch/i386/kernel/ipipe.c:71:
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#941: FILE: arch/i386/kernel/ipipe.c:71:
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#941: FILE: arch/i386/kernel/ipipe.c:71:
+    set_bit(irq >> 5,&(adp)->cpudata[cpuid].irq_pending_hi); \
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#942: FILE: arch/i386/kernel/ipipe.c:72:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#946: FILE: arch/i386/kernel/ipipe.c:76:
+#define ipipe_call_asm_irq_handler(adp,irq) \
                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#946: FILE: arch/i386/kernel/ipipe.c:76:
+#define ipipe_call_asm_irq_handler(adp,irq) \
+   __asm__ __volatile__ ("pushfl\n\t" \
+                         "push %%cs\n\t" \
+                         "call *%1\n" \
+			 : /* no output */ \
+			 : "a" (irq), "m" ((adp)->irqs[irq].handler))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#946: FILE: arch/i386/kernel/ipipe.c:76:
+#define ipipe_call_asm_irq_handler(adp,irq) \
+   __asm__ __volatile__ ("pushfl\n\t" \
+                         "push %%cs\n\t" \
+                         "call *%1\n" \
+			 : /* no output */ \
+			 : "a" (irq), "m" ((adp)->irqs[irq].handler))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: arch/i386/kernel/ipipe.c:77:
+   __asm__ __volatile__ ("pushfl\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: arch/i386/kernel/ipipe.c:78:
+                         "push %%cs\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: arch/i386/kernel/ipipe.c:78:
+                         "push %%cs\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: arch/i386/kernel/ipipe.c:79:
+                         "call *%1\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: arch/i386/kernel/ipipe.c:79:
+                         "call *%1\n" \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: arch/i386/kernel/ipipe.c:83:
+#define ipipe_call_c_irq_handler(adp,irq) \
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#953: FILE: arch/i386/kernel/ipipe.c:83:
+#define ipipe_call_c_irq_handler(adp,irq) \
+   __asm__ __volatile__ ("pushl %%ebp\n\t" \
+	                 "pushl %%edi\n\t" \
+                      	 "pushl %%esi\n\t" \
+	                 "pushl %%edx\n\t" \
+                         "pushl %%ecx\n\t" \
+	                 "pushl %%ebx\n\t" \
+                         "pushl %%eax\n\t" \
+                         "call *%1\n\t" \
+                         "addl $4,%%esp\n\t" \
+                         "popl %%ebx\n\t" \
+                         "popl %%ecx\n\t" \
+	                 "popl %%edx\n\t" \
+	                 "popl %%esi\n\t" \
+	                 "popl %%edi\n\t" \
+	                 "popl %%ebp\n" \
+			 : /* no output */ \
+			 : "a" (irq), "m" ((adp)->irqs[irq].handler))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#953: FILE: arch/i386/kernel/ipipe.c:83:
+#define ipipe_call_c_irq_handler(adp,irq) \
+   __asm__ __volatile__ ("pushl %%ebp\n\t" \
+	                 "pushl %%edi\n\t" \
+                      	 "pushl %%esi\n\t" \
+	                 "pushl %%edx\n\t" \
+                         "pushl %%ecx\n\t" \
+	                 "pushl %%ebx\n\t" \
+                         "pushl %%eax\n\t" \
+                         "call *%1\n\t" \
+                         "addl $4,%%esp\n\t" \
+                         "popl %%ebx\n\t" \
+                         "popl %%ecx\n\t" \
+	                 "popl %%edx\n\t" \
+	                 "popl %%esi\n\t" \
+	                 "popl %%edi\n\t" \
+	                 "popl %%ebp\n" \
+			 : /* no output */ \
+			 : "a" (irq), "m" ((adp)->irqs[irq].handler))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: arch/i386/kernel/ipipe.c:84:
+   __asm__ __volatile__ ("pushl %%ebp\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: arch/i386/kernel/ipipe.c:85:
+^I                 "pushl %%edi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: arch/i386/kernel/ipipe.c:86:
+                      ^I "pushl %%esi\n\t" \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#956: FILE: arch/i386/kernel/ipipe.c:86:
+                      ^I "pushl %%esi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: arch/i386/kernel/ipipe.c:86:
+                      ^I "pushl %%esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: arch/i386/kernel/ipipe.c:87:
+^I                 "pushl %%edx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: arch/i386/kernel/ipipe.c:88:
+                         "pushl %%ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: arch/i386/kernel/ipipe.c:88:
+                         "pushl %%ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: arch/i386/kernel/ipipe.c:89:
+^I                 "pushl %%ebx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: arch/i386/kernel/ipipe.c:90:
+                         "pushl %%eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: arch/i386/kernel/ipipe.c:90:
+                         "pushl %%eax\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: arch/i386/kernel/ipipe.c:91:
+                         "call *%1\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: arch/i386/kernel/ipipe.c:91:
+                         "call *%1\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: arch/i386/kernel/ipipe.c:92:
+                         "addl $4,%%esp\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: arch/i386/kernel/ipipe.c:92:
+                         "addl $4,%%esp\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: arch/i386/kernel/ipipe.c:93:
+                         "popl %%ebx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: arch/i386/kernel/ipipe.c:93:
+                         "popl %%ebx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: arch/i386/kernel/ipipe.c:94:
+                         "popl %%ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: arch/i386/kernel/ipipe.c:94:
+                         "popl %%ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: arch/i386/kernel/ipipe.c:95:
+^I                 "popl %%edx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: arch/i386/kernel/ipipe.c:96:
+^I                 "popl %%esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: arch/i386/kernel/ipipe.c:97:
+^I                 "popl %%edi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: arch/i386/kernel/ipipe.c:98:
+^I                 "popl %%ebp\n" \$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#974: FILE: arch/i386/kernel/ipipe.c:104:
+static __inline__ unsigned long ffnz (unsigned long word) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#974: FILE: arch/i386/kernel/ipipe.c:104:
+static __inline__ unsigned long ffnz (unsigned long word) {

WARNING:INLINE: plain inline is preferred over __inline__
#974: FILE: arch/i386/kernel/ipipe.c:104:
+static __inline__ unsigned long ffnz (unsigned long word) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: arch/i386/kernel/ipipe.c:106:
+    __asm__("bsfl %1, %0"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: arch/i386/kernel/ipipe.c:109:
+    return word;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#983: FILE: arch/i386/kernel/ipipe.c:113:
+/* ipipe_sync_irqs() -- Flush the pending IRQs for the current domain
+   (and processor).  This routine flushes the interrupt log (see

WARNING:TYPO_SPELLING: 'mecanism' may be misspelled - perhaps 'mechanism'?
#985: FILE: arch/i386/kernel/ipipe.c:115:
+   on the deferred interrupt mecanism). Every interrupt that occurred
                              ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#986: FILE: arch/i386/kernel/ipipe.c:116:
+   while the pipeline was stalled gets played. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#988: FILE: arch/i386/kernel/ipipe.c:118:
+void ipipe_sync_irqs (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: arch/i386/kernel/ipipe.c:121:
+    unsigned long mask, submask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: arch/i386/kernel/ipipe.c:122:
+    struct adcpudata *cpudata;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#993: FILE: arch/i386/kernel/ipipe.c:123:
+    struct adcpudata *cpudata;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: arch/i386/kernel/ipipe.c:123:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: arch/i386/kernel/ipipe.c:124:
+    int level, rank;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/i386/kernel/ipipe.c:125:
+    adomain_t *adp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: arch/i386/kernel/ipipe.c:126:
+    unsigned irq;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#996: FILE: arch/i386/kernel/ipipe.c:126:
+    unsigned irq;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: arch/i386/kernel/ipipe.c:128:
+    adp = adp_cpu_current[cpuid];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: arch/i386/kernel/ipipe.c:129:
+    cpudata = &adp->cpudata[cpuid];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: arch/i386/kernel/ipipe.c:131:
+    do$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1001: FILE: arch/i386/kernel/ipipe.c:131:
+    do
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1003: FILE: arch/i386/kernel/ipipe.c:133:
+	if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
+	    return;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1003: FILE: arch/i386/kernel/ipipe.c:133:
+	if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1003: FILE: arch/i386/kernel/ipipe.c:133:
+	if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
 	                                     ^

WARNING:TABSTOP: Statements should start on a tabstop
#1004: FILE: arch/i386/kernel/ipipe.c:134:
+	    return;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1006: FILE: arch/i386/kernel/ipipe.c:136:
+	set_bit(IPIPE_STALL_FLAG,&cpudata->status);
 	                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1006: FILE: arch/i386/kernel/ipipe.c:136:
+	set_bit(IPIPE_STALL_FLAG,&cpudata->status);
 	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1009: FILE: arch/i386/kernel/ipipe.c:139:
+	/* In order to update the pending irq mask atomically without
+	   fiddling with the processor interrupt state, the irq flag

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1011: FILE: arch/i386/kernel/ipipe.c:141:
+	   all hits have been processed yet. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1013: FILE: arch/i386/kernel/ipipe.c:143:
+	while ((mask = cpudata->irq_pending_hi) != 0)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1013: FILE: arch/i386/kernel/ipipe.c:143:
+	while ((mask = cpudata->irq_pending_hi) != 0)
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1014: FILE: arch/i386/kernel/ipipe.c:144:
+	    {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1016: FILE: arch/i386/kernel/ipipe.c:146:
+	    clear_bit(level,&cpudata->irq_pending_hi);
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1016: FILE: arch/i386/kernel/ipipe.c:146:
+	    clear_bit(level,&cpudata->irq_pending_hi);
 	                    ^

WARNING:TABSTOP: Statements should start on a tabstop
#1018: FILE: arch/i386/kernel/ipipe.c:148:
+	    while ((submask = cpudata->irq_pending_lo[level]) != 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1018: FILE: arch/i386/kernel/ipipe.c:148:
+	    while ((submask = cpudata->irq_pending_lo[level]) != 0)
+		{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1021: FILE: arch/i386/kernel/ipipe.c:151:
+		clear_bit(rank,&cpudata->irq_pending_lo[level]);
 		              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1021: FILE: arch/i386/kernel/ipipe.c:151:
+		clear_bit(rank,&cpudata->irq_pending_lo[level]);
 		               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1024: FILE: arch/i386/kernel/ipipe.c:154:
+		if (!atomic_dec_and_test(&cpudata->irq_hits[irq]))
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1024: FILE: arch/i386/kernel/ipipe.c:154:
+		if (!atomic_dec_and_test(&cpudata->irq_hits[irq]))
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#1025: FILE: arch/i386/kernel/ipipe.c:155:
+		    {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1026: FILE: arch/i386/kernel/ipipe.c:156:
+		    set_bit(rank,&cpudata->irq_pending_lo[level]);
 		                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1026: FILE: arch/i386/kernel/ipipe.c:156:
+		    set_bit(rank,&cpudata->irq_pending_lo[level]);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1027: FILE: arch/i386/kernel/ipipe.c:157:
+		    set_bit(level,&cpudata->irq_pending_hi);
 		                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1027: FILE: arch/i386/kernel/ipipe.c:157:
+		    set_bit(level,&cpudata->irq_pending_hi);
 		                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#1028: FILE: arch/i386/kernel/ipipe.c:158:
+		    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1031: FILE: arch/i386/kernel/ipipe.c:161:
+		/* Allow the sync routine to be recursively called on
+		   behalf of the IRQ handler or even reentered on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1036: FILE: arch/i386/kernel/ipipe.c:166:
+		   the meantime. */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1038: FILE: arch/i386/kernel/ipipe.c:168:
+		clear_bit(IPIPE_SYNC_FLAG,&cpudata->status);
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1038: FILE: arch/i386/kernel/ipipe.c:168:
+		clear_bit(IPIPE_SYNC_FLAG,&cpudata->status);
 		                          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1040: FILE: arch/i386/kernel/ipipe.c:170:
+		if (test_bit(IPIPE_CALLASM_FLAG,&adp->irqs[irq].control))
+		    ipipe_call_asm_irq_handler(adp,irq);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1040: FILE: arch/i386/kernel/ipipe.c:170:
+		if (test_bit(IPIPE_CALLASM_FLAG,&adp->irqs[irq].control))
 		                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1040: FILE: arch/i386/kernel/ipipe.c:170:
+		if (test_bit(IPIPE_CALLASM_FLAG,&adp->irqs[irq].control))
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1041: FILE: arch/i386/kernel/ipipe.c:171:
+		    ipipe_call_asm_irq_handler(adp,irq);
 		                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1042: FILE: arch/i386/kernel/ipipe.c:172:
+		else
+		    ipipe_call_c_irq_handler(adp,irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: arch/i386/kernel/ipipe.c:173:
+		    ipipe_call_c_irq_handler(adp,irq);
 		                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1047: FILE: arch/i386/kernel/ipipe.c:177:
+		/* If the execution context on entry has migrated to
+		   another CPU, exit immediately and let the initial

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: arch/i386/kernel/ipipe.c:180:
+		   parallel to this CPU, who knows). */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1052: FILE: arch/i386/kernel/ipipe.c:182:
+		if (cpuid != adeos_processor_id())
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1052: FILE: arch/i386/kernel/ipipe.c:182:
+		if (cpuid != adeos_processor_id())
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#1053: FILE: arch/i386/kernel/ipipe.c:183:
+		    {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1054: FILE: arch/i386/kernel/ipipe.c:184:
+		    clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
 		                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1054: FILE: arch/i386/kernel/ipipe.c:184:
+		    clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
 		                               ^

WARNING:TABSTOP: Statements should start on a tabstop
#1055: FILE: arch/i386/kernel/ipipe.c:185:
+		    return;

WARNING:TABSTOP: Statements should start on a tabstop
#1056: FILE: arch/i386/kernel/ipipe.c:186:
+		    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1059: FILE: arch/i386/kernel/ipipe.c:189:
+		if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
+		    return;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1059: FILE: arch/i386/kernel/ipipe.c:189:
+		if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
 		                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1059: FILE: arch/i386/kernel/ipipe.c:189:
+		if (test_and_set_bit(IPIPE_SYNC_FLAG,&cpudata->status))
 		                                     ^

WARNING:TABSTOP: Statements should start on a tabstop
#1060: FILE: arch/i386/kernel/ipipe.c:190:
+		    return;

WARNING:TABSTOP: Statements should start on a tabstop
#1062: FILE: arch/i386/kernel/ipipe.c:192:
+	    }

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1064: FILE: arch/i386/kernel/ipipe.c:194:
+	clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1064: FILE: arch/i386/kernel/ipipe.c:194:
+	clear_bit(IPIPE_STALL_FLAG,&cpudata->status);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1065: FILE: arch/i386/kernel/ipipe.c:195:
+	clear_bit(IPIPE_SYNC_FLAG,&cpudata->status);
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1065: FILE: arch/i386/kernel/ipipe.c:195:
+	clear_bit(IPIPE_SYNC_FLAG,&cpudata->status);
 	                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: arch/i386/kernel/ipipe.c:197:
+    while (cpudata->irq_pending_hi != 0);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1070: FILE: arch/i386/kernel/ipipe.c:200:
+int ipipe_ack_common_irq (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1070: FILE: arch/i386/kernel/ipipe.c:200:
+int ipipe_ack_common_irq (unsigned irq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: arch/i386/kernel/ipipe.c:203:
+    irq_desc_t *desc = irq_desc + irq;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1074: FILE: arch/i386/kernel/ipipe.c:204:
+    irq_desc_t *desc = irq_desc + irq;
+    desc->handler->ack(irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: arch/i386/kernel/ipipe.c:204:
+    desc->handler->ack(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: arch/i386/kernel/ipipe.c:205:
+    return 1;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1078: FILE: arch/i386/kernel/ipipe.c:208:
+int ipipe_ack_apic_irq (unsigned irq) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1078: FILE: arch/i386/kernel/ipipe.c:208:
+int ipipe_ack_apic_irq (unsigned irq) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1078: FILE: arch/i386/kernel/ipipe.c:208:
+int ipipe_ack_apic_irq (unsigned irq) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: arch/i386/kernel/ipipe.c:210:
+    ack_APIC_irq();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: arch/i386/kernel/ipipe.c:212:
+    return 1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1086: FILE: arch/i386/kernel/ipipe.c:216:
+/* ipipe_handle_irq() -- ADEOS' generic IRQ handler. An optimistic
+   interrupt protection log is maintained here for each domain. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1086: FILE: arch/i386/kernel/ipipe.c:216:
+   interrupt protection log is maintained here for each domain. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1088: FILE: arch/i386/kernel/ipipe.c:218:
+int ipipe_handle_irq (struct pt_regs regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: arch/i386/kernel/ipipe.c:221:
+    unsigned irq = regs.orig_eax & 0xff;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1091: FILE: arch/i386/kernel/ipipe.c:221:
+    unsigned irq = regs.orig_eax & 0xff;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: arch/i386/kernel/ipipe.c:222:
+    int acked = regs.orig_eax >= 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: arch/i386/kernel/ipipe.c:223:
+    struct list_head *pos;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1094: FILE: arch/i386/kernel/ipipe.c:224:
+    struct list_head *pos;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: arch/i386/kernel/ipipe.c:224:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: arch/i386/kernel/ipipe.c:228:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1098: FILE: arch/i386/kernel/ipipe.c:228:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1098: FILE: arch/i386/kernel/ipipe.c:228:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1099: FILE: arch/i386/kernel/ipipe.c:229:
+    list_for_each(pos,&adeos_pipeline) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1100: FILE: arch/i386/kernel/ipipe.c:230:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1100: FILE: arch/i386/kernel/ipipe.c:230:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: arch/i386/kernel/ipipe.c:230:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1100: FILE: arch/i386/kernel/ipipe.c:230:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1100: FILE: arch/i386/kernel/ipipe.c:230:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: arch/i386/kernel/ipipe.c:233:
+           pending in its log. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1103: FILE: arch/i386/kernel/ipipe.c:233:
+	/* For each domain handling the incoming IRQ, mark it as
+           pending in its log. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1103: FILE: arch/i386/kernel/ipipe.c:233:
+           pending in its log. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1105: FILE: arch/i386/kernel/ipipe.c:235:
+	if (test_bit(IPIPE_HANDLE_FLAG,&_adp->irqs[irq].control))
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1105: FILE: arch/i386/kernel/ipipe.c:235:
+	if (test_bit(IPIPE_HANDLE_FLAG,&_adp->irqs[irq].control))
[...]
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1105: FILE: arch/i386/kernel/ipipe.c:235:
+	if (test_bit(IPIPE_HANDLE_FLAG,&_adp->irqs[irq].control))
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1105: FILE: arch/i386/kernel/ipipe.c:235:
+	if (test_bit(IPIPE_HANDLE_FLAG,&_adp->irqs[irq].control))
 	                               ^

WARNING:TABSTOP: Statements should start on a tabstop
#1106: FILE: arch/i386/kernel/ipipe.c:236:
+	    {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1108: FILE: arch/i386/kernel/ipipe.c:238:
+	    /* Domains that handle this IRQ are polled for
+	       acknowledging it by decreasing priority order. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1108: FILE: arch/i386/kernel/ipipe.c:238:
+	       acknowledging it by decreasing priority order. */

WARNING:TABSTOP: Statements should start on a tabstop
#1110: FILE: arch/i386/kernel/ipipe.c:240:
+	    if (!acked)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1114: FILE: arch/i386/kernel/ipipe.c:244:
+	    ipipe_set_irq_bit(_adp,cpuid,irq);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1114: FILE: arch/i386/kernel/ipipe.c:244:
+	    ipipe_set_irq_bit(_adp,cpuid,irq);
 	                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#1115: FILE: arch/i386/kernel/ipipe.c:245:
+	    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1118: FILE: arch/i386/kernel/ipipe.c:248:
+	/* If the domain does not want the IRQ to be passed down the
+	   interrupt pipe, exit the loop now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1118: FILE: arch/i386/kernel/ipipe.c:248:
+	   interrupt pipe, exit the loop now. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1120: FILE: arch/i386/kernel/ipipe.c:250:
+	if (!test_bit(IPIPE_PASS_FLAG,&_adp->irqs[irq].control))
+	    break;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1120: FILE: arch/i386/kernel/ipipe.c:250:
+	if (!test_bit(IPIPE_PASS_FLAG,&_adp->irqs[irq].control))
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1120: FILE: arch/i386/kernel/ipipe.c:250:
+	if (!test_bit(IPIPE_PASS_FLAG,&_adp->irqs[irq].control))
 	                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#1121: FILE: arch/i386/kernel/ipipe.c:251:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: arch/i386/kernel/ipipe.c:252:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1125: FILE: arch/i386/kernel/ipipe.c:255:
+    /* Now walk the pipeline, yielding control to the highest priority
+       domain that has pending interrupt(s). This search does not go

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1135: FILE: arch/i386/kernel/ipipe.c:265:
+       pipeline. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: arch/i386/kernel/ipipe.c:267:
+    list_for_each(pos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1137: FILE: arch/i386/kernel/ipipe.c:267:
+    list_for_each(pos,&adeos_pipeline) {
                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1137: FILE: arch/i386/kernel/ipipe.c:267:
+    list_for_each(pos,&adeos_pipeline) {
                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1138: FILE: arch/i386/kernel/ipipe.c:268:
+    list_for_each(pos,&adeos_pipeline) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1139: FILE: arch/i386/kernel/ipipe.c:269:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1139: FILE: arch/i386/kernel/ipipe.c:269:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: arch/i386/kernel/ipipe.c:269:
+    ^Iadomain_t *_adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: arch/i386/kernel/ipipe.c:269:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: arch/i386/kernel/ipipe.c:269:
+    	adomain_t *_adp = list_entry(pos,adomain_t,link);
     	                                          ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1141: FILE: arch/i386/kernel/ipipe.c:271:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
+	    break; /* Stalled stage -- do not go further. */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1141: FILE: arch/i386/kernel/ipipe.c:271:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1141: FILE: arch/i386/kernel/ipipe.c:271:
+	if (test_bit(IPIPE_STALL_FLAG,&_adp->cpudata[cpuid].status))
 	                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#1142: FILE: arch/i386/kernel/ipipe.c:272:
+	    break; /* Stalled stage -- do not go further. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1144: FILE: arch/i386/kernel/ipipe.c:274:
+	if (_adp->cpudata[cpuid].irq_pending_hi != 0)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1144: FILE: arch/i386/kernel/ipipe.c:274:
+	if (_adp->cpudata[cpuid].irq_pending_hi != 0)
[...]
+

WARNING:TABSTOP: Statements should start on a tabstop
#1145: FILE: arch/i386/kernel/ipipe.c:275:
+	    {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1147: FILE: arch/i386/kernel/ipipe.c:277:
+	    /* Since the critical IPI might be serviced by the
+	       following actions, the current domain might not be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1151: FILE: arch/i386/kernel/ipipe.c:281:
+	       hazardous assumptions here. */

WARNING:TABSTOP: Statements should start on a tabstop
#1153: FILE: arch/i386/kernel/ipipe.c:283:
+	    if (_adp == adp_cpu_current[cpuid])

WARNING:TABSTOP: Statements should start on a tabstop
#1155: FILE: arch/i386/kernel/ipipe.c:285:
+	    else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1155: FILE: arch/i386/kernel/ipipe.c:285:
+	    else
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#1161: FILE: arch/i386/kernel/ipipe.c:291:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1162: FILE: arch/i386/kernel/ipipe.c:292:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1163: FILE: arch/i386/kernel/ipipe.c:293:
+	else if (_adp == adp_cpu_current[cpuid])
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1164: FILE: arch/i386/kernel/ipipe.c:294:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: arch/i386/kernel/ipipe.c:295:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: arch/i386/kernel/ipipe.c:297:
+    return (adp_cpu_current[cpuid] == adp_root &&$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1168: FILE: arch/i386/kernel/ipipe.c:298:
+	    !test_bit(IPIPE_STALL_FLAG,&adp_root->cpudata[cpuid].status));
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1168: FILE: arch/i386/kernel/ipipe.c:298:
+	    !test_bit(IPIPE_STALL_FLAG,&adp_root->cpudata[cpuid].status));
 	                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1171: FILE: arch/i386/kernel/ipipe.c:301:
+int ipipe_hook_irq (unsigned irq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: arch/i386/kernel/ipipe.c:301:
+int ipipe_hook_irq (unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1172: FILE: arch/i386/kernel/ipipe.c:302:
+		    void (*handler)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1173: FILE: arch/i386/kernel/ipipe.c:303:
+		    int (*acknowledge)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1174: FILE: arch/i386/kernel/ipipe.c:304:
+		    unsigned modemask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: arch/i386/kernel/ipipe.c:306:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: arch/i386/kernel/ipipe.c:308:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: arch/i386/kernel/ipipe.c:308:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: arch/i386/kernel/ipipe.c:310:
+    if (handler != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1180: FILE: arch/i386/kernel/ipipe.c:310:
+    if (handler != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "handler"
#1180: FILE: arch/i386/kernel/ipipe.c:310:
+    if (handler != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1182: FILE: arch/i386/kernel/ipipe.c:312:
+	if ((modemask & IPIPE_EXCLUSIVE_MASK) != 0)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1182: FILE: arch/i386/kernel/ipipe.c:312:
+	if ((modemask & IPIPE_EXCLUSIVE_MASK) != 0)
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1183: FILE: arch/i386/kernel/ipipe.c:313:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1184: FILE: arch/i386/kernel/ipipe.c:314:
+	    if (adp_current->irqs[irq].handler != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adp_current->irqs[irq].handler"
#1184: FILE: arch/i386/kernel/ipipe.c:314:
+	    if (adp_current->irqs[irq].handler != NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#1186: FILE: arch/i386/kernel/ipipe.c:316:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/i386/kernel/ipipe.c:318:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: arch/i386/kernel/ipipe.c:321:
+    if (acknowledge == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acknowledge"
#1191: FILE: arch/i386/kernel/ipipe.c:321:
+    if (acknowledge == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: arch/i386/kernel/ipipe.c:324:
+    adp_current->irqs[irq].handler = handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: arch/i386/kernel/ipipe.c:325:
+    adp_current->irqs[irq].acknowledge = acknowledge;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: arch/i386/kernel/ipipe.c:326:
+    adp_current->irqs[irq].control = modemask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: arch/i386/kernel/ipipe.c:328:
+    if (!ipipe_virtual_irq_p(irq) && handler != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1198: FILE: arch/i386/kernel/ipipe.c:328:
+    if (!ipipe_virtual_irq_p(irq) && handler != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "handler"
#1198: FILE: arch/i386/kernel/ipipe.c:328:
+    if (!ipipe_virtual_irq_p(irq) && handler != NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1205: FILE: arch/i386/kernel/ipipe.c:335:
+	if ((modemask & IPIPE_ENABLE_MASK) != 0)
+	    desc->handler->enable(irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: arch/i386/kernel/ipipe.c:339:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1209: FILE: arch/i386/kernel/ipipe.c:339:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: arch/i386/kernel/ipipe.c:341:
+    return 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1214: FILE: arch/i386/kernel/ipipe.c:344:
+int ipipe_control_irq (unsigned irq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1214: FILE: arch/i386/kernel/ipipe.c:344:
+int ipipe_control_irq (unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1215: FILE: arch/i386/kernel/ipipe.c:345:
+		       unsigned clrmask,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1216: FILE: arch/i386/kernel/ipipe.c:346:
+		       unsigned setmask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: arch/i386/kernel/ipipe.c:348:
+    irq_desc_t *desc = irq_desc + irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: arch/i386/kernel/ipipe.c:349:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: arch/i386/kernel/ipipe.c:351:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1221: FILE: arch/i386/kernel/ipipe.c:351:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: arch/i386/kernel/ipipe.c:353:
+    if (adp_current->irqs[irq].handler == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adp_current->irqs[irq].handler"
#1223: FILE: arch/i386/kernel/ipipe.c:353:
+    if (adp_current->irqs[irq].handler == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: arch/i386/kernel/ipipe.c:356:
+    adp_current->irqs[irq].control &= ~clrmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/i386/kernel/ipipe.c:357:
+    adp_current->irqs[irq].control |= setmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: arch/i386/kernel/ipipe.c:359:
+    if ((setmask & IPIPE_ENABLE_MASK) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: arch/i386/kernel/ipipe.c:361:
+    else if ((clrmask & IPIPE_ENABLE_MASK) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: arch/i386/kernel/ipipe.c:364:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1234: FILE: arch/i386/kernel/ipipe.c:364:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: arch/i386/kernel/ipipe.c:366:
+    return 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1239: FILE: arch/i386/kernel/ipipe.c:369:
+int ipipe_propagate_irq (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1239: FILE: arch/i386/kernel/ipipe.c:369:
+int ipipe_propagate_irq (unsigned irq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1242: FILE: arch/i386/kernel/ipipe.c:372:
+    struct list_head *ln;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1243: FILE: arch/i386/kernel/ipipe.c:373:
+    unsigned long flags;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1244: FILE: arch/i386/kernel/ipipe.c:374:
+    unsigned long flags;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: arch/i386/kernel/ipipe.c:374:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: arch/i386/kernel/ipipe.c:376:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1246: FILE: arch/i386/kernel/ipipe.c:376:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: arch/i386/kernel/ipipe.c:378:
+    ln = adp_current->link.next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: arch/i386/kernel/ipipe.c:380:
+    while (ln != &adeos_pipeline)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1250: FILE: arch/i386/kernel/ipipe.c:380:
+    while (ln != &adeos_pipeline)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1252: FILE: arch/i386/kernel/ipipe.c:382:
+	adomain_t *adp = list_entry(ln,adomain_t,link);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1252: FILE: arch/i386/kernel/ipipe.c:382:
+	adomain_t *adp = list_entry(ln,adomain_t,link);
 	                                        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1254: FILE: arch/i386/kernel/ipipe.c:384:
+	if (test_bit(IPIPE_HANDLE_FLAG,&adp->irqs[irq].control))
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1254: FILE: arch/i386/kernel/ipipe.c:384:
+	if (test_bit(IPIPE_HANDLE_FLAG,&adp->irqs[irq].control))
+	    {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1254: FILE: arch/i386/kernel/ipipe.c:384:
+	if (test_bit(IPIPE_HANDLE_FLAG,&adp->irqs[irq].control))
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1254: FILE: arch/i386/kernel/ipipe.c:384:
+	if (test_bit(IPIPE_HANDLE_FLAG,&adp->irqs[irq].control))
 	                               ^

WARNING:TABSTOP: Statements should start on a tabstop
#1255: FILE: arch/i386/kernel/ipipe.c:385:
+	    {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1257: FILE: arch/i386/kernel/ipipe.c:387:
+	    ipipe_set_irq_bit(adp,cpuid,irq);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1257: FILE: arch/i386/kernel/ipipe.c:387:
+	    ipipe_set_irq_bit(adp,cpuid,irq);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1258: FILE: arch/i386/kernel/ipipe.c:388:
+	    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
 	                                        ^

WARNING:TABSTOP: Statements should start on a tabstop
#1259: FILE: arch/i386/kernel/ipipe.c:389:
+	    return 1;

WARNING:TABSTOP: Statements should start on a tabstop
#1260: FILE: arch/i386/kernel/ipipe.c:390:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: arch/i386/kernel/ipipe.c:395:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1265: FILE: arch/i386/kernel/ipipe.c:395:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1267: FILE: arch/i386/kernel/ipipe.c:397:
+    return 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1270: FILE: arch/i386/kernel/ipipe.c:400:
+unsigned ipipe_alloc_irq (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1270: FILE: arch/i386/kernel/ipipe.c:400:
+unsigned ipipe_alloc_irq (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: arch/i386/kernel/ipipe.c:403:
+    unsigned long flags, irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: arch/i386/kernel/ipipe.c:404:
+    int ipos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1276: FILE: arch/i386/kernel/ipipe.c:406:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1276: FILE: arch/i386/kernel/ipipe.c:406:
+    ipipe_hw_spin_lock(&adeos_pipelock,flags);
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: arch/i386/kernel/ipipe.c:408:
+    if (ipipe_virtual_irq_map != ~0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1278: FILE: arch/i386/kernel/ipipe.c:408:
+    if (ipipe_virtual_irq_map != ~0)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1281: FILE: arch/i386/kernel/ipipe.c:411:
+	set_bit(ipos,&ipipe_virtual_irq_map);
 	            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1281: FILE: arch/i386/kernel/ipipe.c:411:
+	set_bit(ipos,&ipipe_virtual_irq_map);
 	             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: arch/i386/kernel/ipipe.c:415:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1285: FILE: arch/i386/kernel/ipipe.c:415:
+    ipipe_hw_spin_unlock(&adeos_pipelock,flags);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: arch/i386/kernel/ipipe.c:417:
+    return irq;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1290: FILE: arch/i386/kernel/ipipe.c:420:
+void ipipe_free_irq (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: arch/i386/kernel/ipipe.c:420:
+void ipipe_free_irq (unsigned irq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: arch/i386/kernel/ipipe.c:423:
+    int ipos = irq - IPIPE_VIRQ_BASE;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1294: FILE: arch/i386/kernel/ipipe.c:424:
+    int ipos = irq - IPIPE_VIRQ_BASE;
+    clear_bit(ipos,&ipipe_virtual_irq_map);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: arch/i386/kernel/ipipe.c:424:
+    clear_bit(ipos,&ipipe_virtual_irq_map);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1294: FILE: arch/i386/kernel/ipipe.c:424:
+    clear_bit(ipos,&ipipe_virtual_irq_map);
                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1294: FILE: arch/i386/kernel/ipipe.c:424:
+    clear_bit(ipos,&ipipe_virtual_irq_map);
                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1297: FILE: arch/i386/kernel/ipipe.c:427:
+int ipipe_trigger_irq (unsigned irq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1297: FILE: arch/i386/kernel/ipipe.c:427:
+int ipipe_trigger_irq (unsigned irq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: arch/i386/kernel/ipipe.c:430:
+    struct pt_regs regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: arch/i386/kernel/ipipe.c:432:
+    if (ipipe_virtual_irq_p(irq) &&$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1303: FILE: arch/i386/kernel/ipipe.c:433:
+	!test_bit(irq - IPIPE_VIRQ_BASE,&ipipe_virtual_irq_map))
 	                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1303: FILE: arch/i386/kernel/ipipe.c:433:
+	!test_bit(irq - IPIPE_VIRQ_BASE,&ipipe_virtual_irq_map))
 	                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: arch/i386/kernel/ipipe.c:436:
+    regs.orig_eax = irq; /* Won't be acked */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: arch/i386/kernel/ipipe.c:437:
+    return ipipe_handle_irq(regs);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: arch/i386/kernel/ipipe.c:440:
+int ipipe_trigger_ipi (int _cpuid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: arch/i386/kernel/ipipe.c:444:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: arch/i386/kernel/ipipe.c:446:
+    if (_cpuid == cpuid) /* Self-posting the service interrupt? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: arch/i386/kernel/ipipe.c:448:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1318: FILE: arch/i386/kernel/ipipe.c:448:
+    else
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1322: FILE: arch/i386/kernel/ipipe.c:452:
+	if (cpuid == ADEOS_OTHER_CPUS)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1322: FILE: arch/i386/kernel/ipipe.c:452:
+	if (cpuid == ADEOS_OTHER_CPUS)
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1323: FILE: arch/i386/kernel/ipipe.c:453:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1324: FILE: arch/i386/kernel/ipipe.c:454:
+	    if (__adeos_online_cpus > 1)

WARNING:TABSTOP: Statements should start on a tabstop
#1327: FILE: arch/i386/kernel/ipipe.c:457:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1328: FILE: arch/i386/kernel/ipipe.c:458:
+	else if (_cpuid >= 0 && _cpuid < __adeos_online_cpus)
+	    __adeos_send_IPI_other(_cpuid,ADEOS_SERVICE_VECTOR);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1329: FILE: arch/i386/kernel/ipipe.c:459:
+	    __adeos_send_IPI_other(_cpuid,ADEOS_SERVICE_VECTOR);
 	                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: arch/i386/kernel/ipipe.c:464:
+    return cpuid != ADEOS_OTHER_CPUS ? 1 : __adeos_online_cpus - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: arch/i386/kernel/ipipe.c:466:
+    return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1340: FILE: arch/i386/kernel/ipipe.c:470:
+void ipipe_init_stage (adomain_t *adp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: arch/i386/kernel/ipipe.c:473:
+    int cpuid, n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: arch/i386/kernel/ipipe.c:475:
+    for (cpuid = 0; cpuid < ADEOS_NR_CPUS; cpuid++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1345: FILE: arch/i386/kernel/ipipe.c:475:
+    for (cpuid = 0; cpuid < ADEOS_NR_CPUS; cpuid++)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1349: FILE: arch/i386/kernel/ipipe.c:479:
+	for (n = 0; n < IPIPE_IRQ_IWORDS; n++)
+	    adp->cpudata[cpuid].irq_pending_lo[n] = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1352: FILE: arch/i386/kernel/ipipe.c:482:
+	for (n = 0; n < IPIPE_NR_IRQS; n++)
+	    atomic_set(&adp->cpudata[cpuid].irq_hits[n],0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1353: FILE: arch/i386/kernel/ipipe.c:483:
+	    atomic_set(&adp->cpudata[cpuid].irq_hits[n],0);
 	                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: arch/i386/kernel/ipipe.c:486:
+    for (n = 0; n < IPIPE_NR_IRQS; n++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1356: FILE: arch/i386/kernel/ipipe.c:486:
+    for (n = 0; n < IPIPE_NR_IRQS; n++)
+	{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: arch/i386/kernel/ipipe.c:494:
+    ipipe_hook_irq(ADEOS_CRITICAL_IPI,$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1373: FILE: arch/i386/kernel/ipipe.c:503:
+#define BUILD_TRAP_ERRCODE(trapnr) \
+asmlinkage void BUILD_TRAP_PROTO(trapnr); \
+__asm__ ( \
+	"\n" __ALIGN_STR"\n\t" \
+        "ipipe_trap_" #trapnr ":\n\t" \
+        "cld\n\t" \
+        "pushl %es\n\t" \
+        "pushl %ds\n\t" \
+        "pushl %eax\n\t" \
+        "pushl %ebp\n\t" \
+        "pushl %edi\n\t" \
+        "pushl %esi\n\t" \
+        "pushl %edx\n\t" \
+        "pushl %ecx\n\t" \
+        "pushl %ebx\n\t" \
+	"movl $"STR(__KERNEL_DS)",%edx\n\t" \
+	"mov %dx,%ds\n\t" \
+	"mov %dx,%es\n\t" \
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \
+	"testl %eax,%eax\n\t" \
+	"jz 1f\n\t" \
+	"movl %esp,%eax\n\t" \
+        "pushl %eax\n\t" \
+	"pushl $"#trapnr"\n\t" \
+        "call ipipe_handle_event\n\t" \
+	"addl $8,%esp\n\t" \
+	"testl %eax,%eax\n\t" \
+"1:      popl %ebx\n\t" \
+        "popl %ecx\n\t" \
+	"popl %edx\n\t" \
+        "popl %esi\n\t" \
+        "popl %edi\n\t" \
+	"popl %ebp\n\t" \
+	"jz 2f\n\t" \
+	"popl %eax\n\t" \
+	"popl %ds\n\t" \
+	"popl %es\n\t" \
+	"addl $4,%esp\n\t" \
+	"iret\n" \
+"2:      movl (ipipe_root_traps + 4 * " #trapnr "),%eax\n\t" \
+	"movl 8(%esp),%es\n\t" \
+	"movl %eax,8(%esp)\n\t" \
+	"popl %eax\n\t" \
+	"popl %ds\n\t" \
+	"ret\n");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1376: FILE: arch/i386/kernel/ipipe.c:506:
+	"\n" __ALIGN_STR"\n\t" \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1377: FILE: arch/i386/kernel/ipipe.c:507:
+        "ipipe_trap_" #trapnr ":\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: arch/i386/kernel/ipipe.c:507:
+        "ipipe_trap_" #trapnr ":\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1378: FILE: arch/i386/kernel/ipipe.c:508:
+        "cld\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: arch/i386/kernel/ipipe.c:508:
+        "cld\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1379: FILE: arch/i386/kernel/ipipe.c:509:
+        "pushl %es\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: arch/i386/kernel/ipipe.c:509:
+        "pushl %es\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: arch/i386/kernel/ipipe.c:510:
+        "pushl %ds\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: arch/i386/kernel/ipipe.c:510:
+        "pushl %ds\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1381: FILE: arch/i386/kernel/ipipe.c:511:
+        "pushl %eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: arch/i386/kernel/ipipe.c:511:
+        "pushl %eax\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1382: FILE: arch/i386/kernel/ipipe.c:512:
+        "pushl %ebp\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: arch/i386/kernel/ipipe.c:512:
+        "pushl %ebp\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1383: FILE: arch/i386/kernel/ipipe.c:513:
+        "pushl %edi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: arch/i386/kernel/ipipe.c:513:
+        "pushl %edi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: arch/i386/kernel/ipipe.c:514:
+        "pushl %esi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: arch/i386/kernel/ipipe.c:514:
+        "pushl %esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: arch/i386/kernel/ipipe.c:515:
+        "pushl %edx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: arch/i386/kernel/ipipe.c:515:
+        "pushl %edx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: arch/i386/kernel/ipipe.c:516:
+        "pushl %ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: arch/i386/kernel/ipipe.c:516:
+        "pushl %ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: arch/i386/kernel/ipipe.c:517:
+        "pushl %ebx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: arch/i386/kernel/ipipe.c:517:
+        "pushl %ebx\n\t" \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1388: FILE: arch/i386/kernel/ipipe.c:518:
+	"movl $"STR(__KERNEL_DS)",%edx\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1391: FILE: arch/i386/kernel/ipipe.c:521:
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: arch/i386/kernel/ipipe.c:521:
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1395: FILE: arch/i386/kernel/ipipe.c:525:
+        "pushl %eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: arch/i386/kernel/ipipe.c:525:
+        "pushl %eax\n\t" \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1396: FILE: arch/i386/kernel/ipipe.c:526:
+	"pushl $"#trapnr"\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1397: FILE: arch/i386/kernel/ipipe.c:527:
+        "call ipipe_handle_event\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: arch/i386/kernel/ipipe.c:527:
+        "call ipipe_handle_event\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1401: FILE: arch/i386/kernel/ipipe.c:531:
+        "popl %ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: arch/i386/kernel/ipipe.c:531:
+        "popl %ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1403: FILE: arch/i386/kernel/ipipe.c:533:
+        "popl %esi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: arch/i386/kernel/ipipe.c:533:
+        "popl %esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: arch/i386/kernel/ipipe.c:534:
+        "popl %edi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: arch/i386/kernel/ipipe.c:534:
+        "popl %edi\n\t" \$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1419: FILE: arch/i386/kernel/ipipe.c:549:
+#define BUILD_TRAP_NOERRCODE(trapnr) \
+asmlinkage void BUILD_TRAP_PROTO(trapnr); \
+__asm__ ( \
+	"\n" __ALIGN_STR"\n\t" \
+        "ipipe_trap_" #trapnr ":\n\t" \
+        "cld\n\t" \
+        "pushl $0\n\t" \
+        "pushl %es\n\t" \
+        "pushl %ds\n\t" \
+        "pushl %eax\n\t" \
+        "pushl %ebp\n\t" \
+        "pushl %edi\n\t" \
+        "pushl %esi\n\t" \
+        "pushl %edx\n\t" \
+        "pushl %ecx\n\t" \
+        "pushl %ebx\n\t" \
+	"movl $"STR(__KERNEL_DS)",%edx\n\t" \
+	"mov %dx,%ds\n\t" \
+	"mov %dx,%es\n\t" \
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \
+	"testl %eax,%eax\n\t" \
+	"jz 1f\n\t" \
+	"movl %esp,%eax\n\t" \
+        "pushl %eax\n\t" \
+	"pushl $"#trapnr"\n\t" \
+        "call ipipe_handle_event\n\t" \
+	"addl $8,%esp\n\t" \
+	"testl %eax,%eax\n\t" \
+"1:      popl %ebx\n\t" \
+        "popl %ecx\n\t" \
+	"popl %edx\n\t" \
+        "popl %esi\n\t" \
+        "popl %edi\n\t" \
+	"popl %ebp\n\t" \
+	"jz 2f\n\t" \
+	"popl %eax\n\t" \
+	"popl %ds\n\t" \
+	"popl %es\n\t" \
+	"addl $4,%esp\n\t" \
+	"iret\n" \
+"2:      movl (ipipe_root_traps + 4 * " #trapnr "),%eax\n\t" \
+	"movl %eax,12(%esp)\n\t" \
+	"popl %eax\n\t" \
+	"popl %ds\n\t" \
+	"popl %es\n\t" \
+	"ret\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1422: FILE: arch/i386/kernel/ipipe.c:552:
+	"\n" __ALIGN_STR"\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1423: FILE: arch/i386/kernel/ipipe.c:553:
+        "ipipe_trap_" #trapnr ":\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: arch/i386/kernel/ipipe.c:553:
+        "ipipe_trap_" #trapnr ":\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: arch/i386/kernel/ipipe.c:554:
+        "cld\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: arch/i386/kernel/ipipe.c:554:
+        "cld\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1425: FILE: arch/i386/kernel/ipipe.c:555:
+        "pushl $0\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: arch/i386/kernel/ipipe.c:555:
+        "pushl $0\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1426: FILE: arch/i386/kernel/ipipe.c:556:
+        "pushl %es\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: arch/i386/kernel/ipipe.c:556:
+        "pushl %es\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1427: FILE: arch/i386/kernel/ipipe.c:557:
+        "pushl %ds\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1427: FILE: arch/i386/kernel/ipipe.c:557:
+        "pushl %ds\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: arch/i386/kernel/ipipe.c:558:
+        "pushl %eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: arch/i386/kernel/ipipe.c:558:
+        "pushl %eax\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1429: FILE: arch/i386/kernel/ipipe.c:559:
+        "pushl %ebp\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: arch/i386/kernel/ipipe.c:559:
+        "pushl %ebp\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1430: FILE: arch/i386/kernel/ipipe.c:560:
+        "pushl %edi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: arch/i386/kernel/ipipe.c:560:
+        "pushl %edi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1431: FILE: arch/i386/kernel/ipipe.c:561:
+        "pushl %esi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: arch/i386/kernel/ipipe.c:561:
+        "pushl %esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1432: FILE: arch/i386/kernel/ipipe.c:562:
+        "pushl %edx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: arch/i386/kernel/ipipe.c:562:
+        "pushl %edx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1433: FILE: arch/i386/kernel/ipipe.c:563:
+        "pushl %ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: arch/i386/kernel/ipipe.c:563:
+        "pushl %ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1434: FILE: arch/i386/kernel/ipipe.c:564:
+        "pushl %ebx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: arch/i386/kernel/ipipe.c:564:
+        "pushl %ebx\n\t" \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1435: FILE: arch/i386/kernel/ipipe.c:565:
+	"movl $"STR(__KERNEL_DS)",%edx\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: arch/i386/kernel/ipipe.c:568:
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: arch/i386/kernel/ipipe.c:568:
+        "movl (__adeos_event_monitors + 4 * " #trapnr "),%eax\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: arch/i386/kernel/ipipe.c:572:
+        "pushl %eax\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: arch/i386/kernel/ipipe.c:572:
+        "pushl %eax\n\t" \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1443: FILE: arch/i386/kernel/ipipe.c:573:
+	"pushl $"#trapnr"\n\t" \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: arch/i386/kernel/ipipe.c:574:
+        "call ipipe_handle_event\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: arch/i386/kernel/ipipe.c:574:
+        "call ipipe_handle_event\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: arch/i386/kernel/ipipe.c:578:
+        "popl %ecx\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: arch/i386/kernel/ipipe.c:578:
+        "popl %ecx\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: arch/i386/kernel/ipipe.c:580:
+        "popl %esi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: arch/i386/kernel/ipipe.c:580:
+        "popl %esi\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: arch/i386/kernel/ipipe.c:581:
+        "popl %edi\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: arch/i386/kernel/ipipe.c:581:
+        "popl %edi\n\t" \$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1480: FILE: arch/i386/kernel/ipipe.c:610:
+#define LIST_TRAP(trapnr) &ipipe_trap_ ## trapnr

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: arch/i386/kernel/ipipe.c:613:
+    LIST_TRAP(0x0), LIST_TRAP(0x1), LIST_TRAP(0x2), LIST_TRAP(0x3),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: arch/i386/kernel/ipipe.c:614:
+    LIST_TRAP(0x4), LIST_TRAP(0x5), LIST_TRAP(0x6), LIST_TRAP(0x7),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: arch/i386/kernel/ipipe.c:615:
+    LIST_TRAP(0x8), LIST_TRAP(0x9), LIST_TRAP(0xa), LIST_TRAP(0xb),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: arch/i386/kernel/ipipe.c:616:
+    LIST_TRAP(0xc), LIST_TRAP(0xd), LIST_TRAP(0xe), LIST_TRAP(0xf),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: arch/i386/kernel/ipipe.c:617:
+    LIST_TRAP(0x10), LIST_TRAP(0x11), LIST_TRAP(0x12), LIST_TRAP(0x13),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: arch/i386/kernel/ipipe.c:618:
+    LIST_TRAP(0x14), LIST_TRAP(0x15), LIST_TRAP(0x16), LIST_TRAP(0x17),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: arch/i386/kernel/ipipe.c:619:
+    LIST_TRAP(0x18), LIST_TRAP(0x19), LIST_TRAP(0x1a), LIST_TRAP(0x1b),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: arch/i386/kernel/ipipe.c:620:
+    LIST_TRAP(0x1c), LIST_TRAP(0x1d), LIST_TRAP(0x1e), LIST_TRAP(0x1f)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1493: FILE: arch/i386/kernel/ipipe.c:623:
+int ipipe_handle_event(unsigned event,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1494: FILE: arch/i386/kernel/ipipe.c:624:
+		       struct pt_regs *regs) __attribute__ ((__unused__));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1497: FILE: arch/i386/kernel/ipipe.c:627:
+/* ipipe_handle_event() -- Adeos' generic event handler. This routine
+calls the per-domain handlers registered for a given

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1503: FILE: arch/i386/kernel/ipipe.c:633:
+notified of such event.  Note: regs might be NULL. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1505: FILE: arch/i386/kernel/ipipe.c:635:
+int ipipe_handle_event (unsigned event, struct pt_regs *regs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: arch/i386/kernel/ipipe.c:635:
+int ipipe_handle_event (unsigned event, struct pt_regs *regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: arch/i386/kernel/ipipe.c:638:
+    struct list_head *pos, *npos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: arch/i386/kernel/ipipe.c:639:
+    unsigned long flags;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1510: FILE: arch/i386/kernel/ipipe.c:640:
+    unsigned long flags;
+    ipipe_declare_cpuid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: arch/i386/kernel/ipipe.c:640:
+    ipipe_declare_cpuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: arch/i386/kernel/ipipe.c:641:
+    adevinfo_t evinfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: arch/i386/kernel/ipipe.c:642:
+    int propagate = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: arch/i386/kernel/ipipe.c:644:
+    flags = adeos_test_and_stall_ipipe();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: arch/i386/kernel/ipipe.c:646:
+    list_for_each_safe(pos,npos,&adeos_pipeline) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1516: FILE: arch/i386/kernel/ipipe.c:646:
+    list_for_each_safe(pos,npos,&adeos_pipeline) {
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1516: FILE: arch/i386/kernel/ipipe.c:646:
+    list_for_each_safe(pos,npos,&adeos_pipeline) {
                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1516: FILE: arch/i386/kernel/ipipe.c:646:
+    list_for_each_safe(pos,npos,&adeos_pipeline) {
                                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1517: FILE: arch/i386/kernel/ipipe.c:647:
+    list_for_each_safe(pos,npos,&adeos_pipeline) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: arch/i386/kernel/ipipe.c:648:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1518: FILE: arch/i386/kernel/ipipe.c:648:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: arch/i386/kernel/ipipe.c:648:
+    ^Iadomain_t *adp = list_entry(pos,adomain_t,link);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: arch/i386/kernel/ipipe.c:648:
+    	adomain_t *adp = list_entry(pos,adomain_t,link);
     	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: arch/i386/kernel/ipipe.c:648:
+    	adomain_t *adp = list_entry(pos,adomain_t,link);
     	                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1520: FILE: arch/i386/kernel/ipipe.c:650:
+	if (adp->events[event].handler != NULL)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1520: FILE: arch/i386/kernel/ipipe.c:650:
+	if (adp->events[event].handler != NULL)
+	    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "adp->events[event].handler"
#1520: FILE: arch/i386/kernel/ipipe.c:650:
+	if (adp->events[event].handler != NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#1521: FILE: arch/i386/kernel/ipipe.c:651:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1522: FILE: arch/i386/kernel/ipipe.c:652:
+	    if (adp == adp_cpu_current[cpuid])

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1522: FILE: arch/i386/kernel/ipipe.c:652:
+	    if (adp == adp_cpu_current[cpuid])
+		{

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1537: FILE: arch/i386/kernel/ipipe.c:667:
+	    set_bit(IPIPE_XPEND_FLAG,&adp->cpudata[cpuid].status);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1537: FILE: arch/i386/kernel/ipipe.c:667:
+	    set_bit(IPIPE_XPEND_FLAG,&adp->cpudata[cpuid].status);
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1541: FILE: arch/i386/kernel/ipipe.c:671:
+^I    $

WARNING:TABSTOP: Statements should start on a tabstop
#1542: FILE: arch/i386/kernel/ipipe.c:672:
+	    if (!adp->cpudata[cpuid].event_data.propagate)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1542: FILE: arch/i386/kernel/ipipe.c:672:
+	    if (!adp->cpudata[cpuid].event_data.propagate)
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#1547: FILE: arch/i386/kernel/ipipe.c:677:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1549: FILE: arch/i386/kernel/ipipe.c:679:
+	if (adp == adp_cpu_current[cpuid])
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#1550: FILE: arch/i386/kernel/ipipe.c:680:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: arch/i386/kernel/ipipe.c:681:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: arch/i386/kernel/ipipe.c:683:
+    adeos_restore_ipipe(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: arch/i386/kernel/ipipe.c:685:
+    return !propagate;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1639: FILE: arch/i386/kernel/smp.c:673:
+void __adeos_send_IPI_allbutself (int vector) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1639: FILE: arch/i386/kernel/smp.c:673:
+void __adeos_send_IPI_allbutself (int vector) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: arch/i386/kernel/smp.c:674:
+    send_IPI_allbutself(vector);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1643: FILE: arch/i386/kernel/smp.c:677:
+void __adeos_send_IPI_other (int cpu, int vector) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1643: FILE: arch/i386/kernel/smp.c:677:
+void __adeos_send_IPI_other (int cpu, int vector) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1644: FILE: arch/i386/kernel/smp.c:678:
+    send_IPI_mask(1 << cpu,vector);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1644: FILE: arch/i386/kernel/smp.c:678:
+    send_IPI_mask(1 << cpu,vector);
                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1657: FILE: arch/i386/kernel/time.c:375:
+		unsigned long flags;
+		ipipe_hw_spin_lock(&i8259A_lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1699: FILE: arch/i386/kernel/traps.c:822:
+extern int ipipe_ack_common_irq(unsigned irq);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1699: FILE: arch/i386/kernel/traps.c:822:
+extern int ipipe_ack_common_irq(unsigned irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1701: FILE: arch/i386/kernel/traps.c:824:
+extern int ipipe_ack_apic_irq(unsigned irq);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1701: FILE: arch/i386/kernel/traps.c:824:
+extern int ipipe_ack_apic_irq(unsigned irq);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1703: FILE: arch/i386/kernel/traps.c:826:
+extern void (*ipipe_root_traps[])(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1705: FILE: arch/i386/kernel/traps.c:828:
+extern void (*ipipe_trap_trampolines[])(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1707: FILE: arch/i386/kernel/traps.c:830:
+void set_intr_gate(unsigned n, void *addr)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1711: FILE: arch/i386/kernel/traps.c:834:
+    /* Redirect external interrupts only but the 'TLB invalidate'
+       since we don't allow to virtualize it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1711: FILE: arch/i386/kernel/traps.c:834:
+       since we don't allow to virtualize it. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1712: FILE: arch/i386/kernel/traps.c:835:
+    if (n < FIRST_EXTERNAL_VECTOR || n == INVALIDATE_TLB_VECTOR)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1712: FILE: arch/i386/kernel/traps.c:835:
+    if (n < FIRST_EXTERNAL_VECTOR || n == INVALIDATE_TLB_VECTOR)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1714: FILE: arch/i386/kernel/traps.c:837:
+	if (n == 2 || n == 14)	/* Intercept NMI and Page Fault */
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1714: FILE: arch/i386/kernel/traps.c:837:
+	if (n == 2 || n == 14)	/* Intercept NMI and Page Fault */
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1715: FILE: arch/i386/kernel/traps.c:838:
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#1718: FILE: arch/i386/kernel/traps.c:841:
+	    }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1720: FILE: arch/i386/kernel/traps.c:843:
+	_set_gate(idt_table+n,14,0,addr);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1720: FILE: arch/i386/kernel/traps.c:843:
+	_set_gate(idt_table+n,14,0,addr);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1720: FILE: arch/i386/kernel/traps.c:843:
+	_set_gate(idt_table+n,14,0,addr);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1720: FILE: arch/i386/kernel/traps.c:843:
+	_set_gate(idt_table+n,14,0,addr);
 	                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1722: FILE: arch/i386/kernel/traps.c:845:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1722: FILE: arch/i386/kernel/traps.c:845:
+    else
+	{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1724: FILE: arch/i386/kernel/traps.c:847:
+	unsigned irq = n - FIRST_EXTERNAL_VECTOR;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1725: FILE: arch/i386/kernel/traps.c:848:
+	int (*ack)(unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#1725: FILE: arch/i386/kernel/traps.c:848:
+	int (*ack)(unsigned);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1727: FILE: arch/i386/kernel/traps.c:850:
+	if (n < FIRST_DEVICE_VECTOR)
+	    ack = &ipipe_ack_common_irq; /* Common ISA interrupts */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1729: FILE: arch/i386/kernel/traps.c:852:
+	else
+	    ack = &ipipe_ack_apic_irq; /* APIC/SMP interrupts */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1733: FILE: arch/i386/kernel/traps.c:856:
+			     (void (*)(unsigned))addr,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1735: FILE: arch/i386/kernel/traps.c:858:
+			     IPIPE_CALLASM_MASK|IPIPE_HANDLE_MASK|IPIPE_PASS_MASK);
 			                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1735: FILE: arch/i386/kernel/traps.c:858:
+			     IPIPE_CALLASM_MASK|IPIPE_HANDLE_MASK|IPIPE_PASS_MASK);
 			                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1742: FILE: arch/i386/kernel/traps.c:865:
+    ipipe_root_traps[n] = (void (*)(void))addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1743: FILE: arch/i386/kernel/traps.c:866:
+    addr = (void *)ipipe_trap_trampolines[n];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1744: FILE: arch/i386/kernel/traps.c:867:
+    _set_gate(idt_table+n,15,0,addr);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1744: FILE: arch/i386/kernel/traps.c:867:
+    _set_gate(idt_table+n,15,0,addr);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1744: FILE: arch/i386/kernel/traps.c:867:
+    _set_gate(idt_table+n,15,0,addr);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1744: FILE: arch/i386/kernel/traps.c:867:
+    _set_gate(idt_table+n,15,0,addr);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1744: FILE: arch/i386/kernel/traps.c:867:
+    _set_gate(idt_table+n,15,0,addr);
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1750: FILE: arch/i386/kernel/traps.c:873:
+    if (n < FIRST_EXTERNAL_VECTOR) /* Trap exceptions only */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1750: FILE: arch/i386/kernel/traps.c:873:
+    if (n < FIRST_EXTERNAL_VECTOR) /* Trap exceptions only */
+	{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1756: FILE: arch/i386/kernel/traps.c:879:
+    _set_gate(idt_table+n,15,3,addr);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1756: FILE: arch/i386/kernel/traps.c:879:
+    _set_gate(idt_table+n,15,3,addr);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1756: FILE: arch/i386/kernel/traps.c:879:
+    _set_gate(idt_table+n,15,3,addr);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1756: FILE: arch/i386/kernel/traps.c:879:
+    _set_gate(idt_table+n,15,3,addr);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1756: FILE: arch/i386/kernel/traps.c:879:
+    _set_gate(idt_table+n,15,3,addr);
                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1782: FILE: arch/i386/mach-generic/do_timer.h:51:
+	unsigned long flags;
+	ipipe_hw_spin_lock(&i8259A_lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1808: FILE: arch/i386/mach-visws/do_timer.h:32:
+	unsigned long flags;
+	ipipe_hw_spin_lock(&i8259A_lock, flags);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1831: FILE: arch/i386/mm/fault.c:159:
 	if (regs->eflags & X86_EFLAGS_IF)
[...]
+	    ipipe_hw_sti();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1845: FILE: include/asm-i386/adeos.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1846: FILE: include/asm-i386/adeos.h:2:
+ *   include/asm-i386/adeos.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1852: FILE: include/asm-i386/adeos.h:8:
+ *   the Free Software Foundation, Inc., 675 Mass Ave, Cambridge MA 02139,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1862: FILE: include/asm-i386/adeos.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1863: FILE: include/asm-i386/adeos.h:19:
+ *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1869: FILE: include/asm-i386/adeos.h:25:
+#include <asm/atomic.h>

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1871: FILE: include/asm-i386/adeos.h:27:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,37)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1871: FILE: include/asm-i386/adeos.h:27:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,37)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1871: FILE: include/asm-i386/adeos.h:27:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,37)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1871: FILE: include/asm-i386/adeos.h:27:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,37)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1895: FILE: include/asm-i386/adeos.h:51:
+static __inline int adeos_smp_apic_id(void) {

WARNING:INLINE: plain inline is preferred over __inline
#1895: FILE: include/asm-i386/adeos.h:51:
+static __inline int adeos_smp_apic_id(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1896: FILE: include/asm-i386/adeos.h:52:
+    return GET_APIC_ID(*(unsigned long *)(APIC_BASE+APIC_ID));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1896: FILE: include/asm-i386/adeos.h:52:
+    return GET_APIC_ID(*(unsigned long *)(APIC_BASE+APIC_ID));
                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1900: FILE: include/asm-i386/adeos.h:56:
+/* Cannot include asm/smpboot.h safely, so we define here the little
+   we need to know about CPU/apicid mappings. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1900: FILE: include/asm-i386/adeos.h:56:
+   we need to know about CPU/apicid mappings. */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1903: FILE: include/asm-i386/adeos.h:59:
+extern volatile int logical_apicid_2_cpu[];

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1904: FILE: include/asm-i386/adeos.h:60:
+#define adeos_processor_id()   (__adeos_online_cpus > 1 ? logical_apicid_2_cpu[adeos_smp_apic_id()] : 0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1906: FILE: include/asm-i386/adeos.h:62:
+extern volatile int physical_apicid_2_cpu[];

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1907: FILE: include/asm-i386/adeos.h:63:
+#define adeos_processor_id()   (__adeos_online_cpus > 1 ? physical_apicid_2_cpu[adeos_smp_apic_id()] : 0)

ERROR:SPACING: space required before the open parenthesis '('
#1911: FILE: include/asm-i386/adeos.h:67:
+#define ipipe_reload_cpuid()   do { cpuid = adeos_processor_id(); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1911: FILE: include/asm-i386/adeos.h:67:
+#define ipipe_reload_cpuid()   do { cpuid = adeos_processor_id(); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1931: FILE: include/asm-i386/adeos.h:87:
+typedef struct adevinfo {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1932: FILE: include/asm-i386/adeos.h:88:
+typedef struct adevinfo {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1933: FILE: include/asm-i386/adeos.h:89:
+    unsigned domid;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1933: FILE: include/asm-i386/adeos.h:89:
+    unsigned domid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1934: FILE: include/asm-i386/adeos.h:90:
+    unsigned event;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1934: FILE: include/asm-i386/adeos.h:90:
+    unsigned event;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1935: FILE: include/asm-i386/adeos.h:91:
+    struct pt_regs *regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1937: FILE: include/asm-i386/adeos.h:93:
+    int propagate;^I^I/* Private */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1941: FILE: include/asm-i386/adeos.h:97:
+typedef struct adsysinfo {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1942: FILE: include/asm-i386/adeos.h:98:
+typedef struct adsysinfo {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: include/asm-i386/adeos.h:99:
+    struct {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1944: FILE: include/asm-i386/adeos.h:100:
+	unsigned irq;		/* Real timer tick IRQ */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: include/asm-i386/adeos.h:101:
+    } timer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1947: FILE: include/asm-i386/adeos.h:103:
+    int ncpus;^I^I^I/* Number of CPUs on board */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1949: FILE: include/asm-i386/adeos.h:105:
+    unsigned long cpufreq;^I/* CPU frequency (in Hz) */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1962: FILE: include/asm-i386/adeos.h:118:
+typedef struct adomain {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1963: FILE: include/asm-i386/adeos.h:119:
+typedef struct adomain {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1965: FILE: include/asm-i386/adeos.h:121:
+    /* -- Section: offset-based references are made on these fields
+       from inline assembly code. Please don't move or reorder. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1965: FILE: include/asm-i386/adeos.h:121:
+       from inline assembly code. Please don't move or reorder. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1966: FILE: include/asm-i386/adeos.h:122:
+    int *esp;^I^I^I/* Domain stack point */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: include/asm-i386/adeos.h:123:
+    void (*dswitch)(void);^I/* Domain switch hook */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: include/asm-i386/adeos.h:126:
+    int *estackbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1971: FILE: include/asm-i386/adeos.h:127:
+    unsigned domid;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1971: FILE: include/asm-i386/adeos.h:127:
+    unsigned domid;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1972: FILE: include/asm-i386/adeos.h:128:
+    const char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1973: FILE: include/asm-i386/adeos.h:129:
+    int priority;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1975: FILE: include/asm-i386/adeos.h:131:
+    struct adcpudata {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1981: FILE: include/asm-i386/adeos.h:137:
+    } cpudata[ADEOS_NR_CPUS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1983: FILE: include/asm-i386/adeos.h:139:
+    struct {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1984: FILE: include/asm-i386/adeos.h:140:
+	int (*acknowledge)(unsigned irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1985: FILE: include/asm-i386/adeos.h:141:
+	void (*handler)(unsigned irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1987: FILE: include/asm-i386/adeos.h:143:
+    } irqs[IPIPE_NR_IRQS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1989: FILE: include/asm-i386/adeos.h:145:
+    struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1991: FILE: include/asm-i386/adeos.h:147:
+    } events[ADEOS_NR_EVENTS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1993: FILE: include/asm-i386/adeos.h:149:
+    int ptd_keymax;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1994: FILE: include/asm-i386/adeos.h:150:
+    int ptd_keycount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1995: FILE: include/asm-i386/adeos.h:151:
+    unsigned long ptd_keymap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1996: FILE: include/asm-i386/adeos.h:152:
+    void (*ptd_setfun)(int, void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1996: FILE: include/asm-i386/adeos.h:152:
+    void (*ptd_setfun)(int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1996: FILE: include/asm-i386/adeos.h:152:
+    void (*ptd_setfun)(int, void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1997: FILE: include/asm-i386/adeos.h:153:
+    void *(*ptd_getfun)(int);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1997: FILE: include/asm-i386/adeos.h:153:
+    void *(*ptd_getfun)(int);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1999: FILE: include/asm-i386/adeos.h:155:
+    struct list_head link;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#2003: FILE: include/asm-i386/adeos.h:159:
+#define ipipe_virtual_irq_p(irq) ((irq) >= IPIPE_VIRQ_BASE && \
+				  (irq) < IPIPE_NR_IRQS)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2007: FILE: include/asm-i386/adeos.h:163:
+#define ipipe_hw_spin_lock(x,flags)    do { ipipe_hw_local_irq_save(flags); spin_lock(x); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2007: FILE: include/asm-i386/adeos.h:163:
+#define ipipe_hw_spin_lock(x,flags)    do { ipipe_hw_local_irq_save(flags); spin_lock(x); } while (0)
                             ^

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#2008: FILE: include/asm-i386/adeos.h:164:
+#define ipipe_hw_spin_unlock(x,flags)  do { spin_unlock(x); ipipe_hw_local_irq_restore(flags); preempt_enable(); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2008: FILE: include/asm-i386/adeos.h:164:
+#define ipipe_hw_spin_unlock(x,flags)  do { spin_unlock(x); ipipe_hw_local_irq_restore(flags); preempt_enable(); } while (0)
                               ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2010: FILE: include/asm-i386/adeos.h:166:
+#define ipipe_hw_spin_unlock_enable(x) do { spin_unlock(x); ipipe_hw_sti(); preempt_enable(); } while (0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2050: FILE: include/asm-i386/adeos.h:206:
+void __adeos_do_critical_sync(unsigned irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2058: FILE: include/asm-i386/adeos.h:214:
+int ipipe_hook_irq(unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2059: FILE: include/asm-i386/adeos.h:215:
+		   void (*handler)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2060: FILE: include/asm-i386/adeos.h:216:
+		   int (*acknowledge)(unsigned irq),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2061: FILE: include/asm-i386/adeos.h:217:
+		   unsigned modemask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2063: FILE: include/asm-i386/adeos.h:219:
+int ipipe_control_irq(unsigned irq,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2064: FILE: include/asm-i386/adeos.h:220:
+		      unsigned clrmask,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2065: FILE: include/asm-i386/adeos.h:221:
+		      unsigned setmask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2067: FILE: include/asm-i386/adeos.h:223:
+unsigned ipipe_alloc_irq(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2069: FILE: include/asm-i386/adeos.h:225:
+void ipipe_free_irq(unsigned irq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2071: FILE: include/asm-i386/adeos.h:227:
+int FASTCALL(ipipe_trigger_irq(unsigned irq));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2075: FILE: include/asm-i386/adeos.h:231:
+int FASTCALL(ipipe_propagate_irq(unsigned irq));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2079: FILE: include/asm-i386/adeos.h:235:
+int ipipe_handle_event(unsigned event,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2105: FILE: include/asm-i386/system.h:320:
+#define safe_halt() \
+__asm__ __volatile__("call adeos_unstall_ipipe; hlt": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2106: FILE: include/asm-i386/system.h:321:
+__asm__ __volatile__("call adeos_unstall_ipipe; hlt": : :"memory")
                                                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2106: FILE: include/asm-i386/system.h:321:
+__asm__ __volatile__("call adeos_unstall_ipipe; hlt": : :"memory")
                                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2108: FILE: include/asm-i386/system.h:323:
+#define ipipe_hw_save_flags(x)	       \
+__asm__ __volatile__("pushfl ; popl %0":"=g" (x): /* no input */)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2109: FILE: include/asm-i386/system.h:324:
+__asm__ __volatile__("pushfl ; popl %0":"=g" (x): /* no input */)
                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2109: FILE: include/asm-i386/system.h:324:
+__asm__ __volatile__("pushfl ; popl %0":"=g" (x): /* no input */)
                                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2111: FILE: include/asm-i386/system.h:326:
+#define ipipe_hw_save_flags_and_cli(x)	\
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2112: FILE: include/asm-i386/system.h:327:
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */)
                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2112: FILE: include/asm-i386/system.h:327:
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */)
                                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2114: FILE: include/asm-i386/system.h:329:
+#define ipipe_hw_restore_flags(x) \
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2115: FILE: include/asm-i386/system.h:330:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2115: FILE: include/asm-i386/system.h:330:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2115: FILE: include/asm-i386/system.h:330:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2117: FILE: include/asm-i386/system.h:332:
+#define ipipe_hw_cli() \
+__asm__ __volatile__("cli": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2118: FILE: include/asm-i386/system.h:333:
+__asm__ __volatile__("cli": : :"memory")
                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2118: FILE: include/asm-i386/system.h:333:
+__asm__ __volatile__("cli": : :"memory")
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2120: FILE: include/asm-i386/system.h:335:
+#define ipipe_hw_sti() \
+__asm__ __volatile__("sti": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2121: FILE: include/asm-i386/system.h:336:
+__asm__ __volatile__("sti": : :"memory")
                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2121: FILE: include/asm-i386/system.h:336:
+__asm__ __volatile__("sti": : :"memory")
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2123: FILE: include/asm-i386/system.h:338:
+#define ipipe_hw_local_irq_save(x) \
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */ :"memory")

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2124: FILE: include/asm-i386/system.h:339:
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */ :"memory")
                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2124: FILE: include/asm-i386/system.h:339:
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */ :"memory")
                                                       ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2124: FILE: include/asm-i386/system.h:339:
+__asm__ __volatile__("pushfl ; popl %0 ; cli":"=g" (x): /* no input */ :"memory")
                                                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2126: FILE: include/asm-i386/system.h:341:
+#define ipipe_hw_local_irq_restore(x) \
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2127: FILE: include/asm-i386/system.h:342:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2127: FILE: include/asm-i386/system.h:342:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2127: FILE: include/asm-i386/system.h:342:
+__asm__ __volatile__("pushl %0 ; popfl": /* no output */ :"g" (x):"memory", "cc")
                                                                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430694.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 261 errors, 491 warnings, 59 checks, 1997 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430694.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
