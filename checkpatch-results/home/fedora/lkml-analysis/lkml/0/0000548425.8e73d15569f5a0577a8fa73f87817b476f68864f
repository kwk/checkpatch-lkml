WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
I'm running this in my tree since a few weeks, however I never had the courage

WARNING:TYPO_SPELLING: 'publically' may be misspelled - perhaps 'publicly'?
#30: 
to post it publically because I didn't benchmarked it carefully yet and I
           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'applys' may be misspelled - perhaps 'applies'?
#36: 
tiotest.  (it still applys cleanly against 2.4.2)
                    ^^^^^^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#98: FILE: drivers/block/ll_rw_blk.c:393:
+		list_add(&rq->table, &q->request_freelist[i < (queue_nr_requests >> 1) ? READ : WRITE]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#107: FILE: drivers/block/ll_rw_blk.c:401:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: drivers/block/ll_rw_blk.c:599:
+static inline void blk_finished_io(request_queue_t * q, struct request * req)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: drivers/block/ll_rw_blk.c:599:
+static inline void blk_finished_io(request_queue_t * q, struct request * req)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: drivers/block/ll_rw_blk.c:606:
+		printk("blkdev: in_flight_sectors < 0\n");

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#162: FILE: drivers/block/ll_rw_blk.c:609:
+	if (waitqueue_active(&q->in_flight_wait) &&

WARNING:TYPO_SPELLING: 'assumme' may be misspelled - perhaps 'assume'?
#173: FILE: drivers/block/ll_rw_blk.c:628:
+	 * assumme it has free buffers and check waiters
 	   ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: drivers/block/ll_rw_blk.c:633:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/block/ll_rw_blk.c:636:
+^I^I} else ^I{$

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: drivers/block/ll_rw_blk.c:643:
+				int wake_up = q->pending_free[rw];
+				blk_refill_freelist(q, rw);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nsects' - possible side-effects?
#217: FILE: drivers/block/ll_rw_blk.c:711:
+#define blk_started_io(q, req, nsects)		\
+do {						\
+	(q)->in_flight_sectors += (nsects);	\
+	(req)->in_flight_sectors += (nsects);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: drivers/block/ll_rw_blk.c:715:
+} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#345: FILE: drivers/block/ll_rw_blk.c:1237:
+	if ((queue_nr_requests = total_ram >> 5) > QUEUE_NR_REQUESTS)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: drivers/block/ll_rw_blk.c:1248:
+	printk("block: queued sectors max %dkB, %d slots per queue, %d batch\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/block/ll_rw_blk.c:1249:
+	printk("block: queued sectors max %dkB, %d slots per queue, %d batch\n",
+						max_in_flight_sectors / 2,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#405: FILE: fs/buffer.c:1036:
+    1 -> sync flush (wait for I/O completion) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#465: FILE: include/linux/blkdev.h:123:
+#if 0

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#472: FILE: include/linux/blkdev.h:128:
+	spinlock_t		queue_lock;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 3 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
