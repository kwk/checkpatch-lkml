WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#32: 
have choosen to export these interfaces to module so people doing inkernel
     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: fs/read_write.c:191:
+asmlinkage ssize_t sys_read(unsigned int fd, char * buf, size_t count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: kernel/ksyms.c:246:
+EXPORT_SYMBOL(vfs_write);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: include/linux/fs.h:824:
+extern ssize_t vfs_read(struct file *, char *, size_t, loff_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#267: FILE: include/linux/fs.h:824:
+extern ssize_t vfs_read(struct file *, char *, size_t, loff_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#267: FILE: include/linux/fs.h:824:
+extern ssize_t vfs_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#267: FILE: include/linux/fs.h:824:
+extern ssize_t vfs_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#267: FILE: include/linux/fs.h:824:
+extern ssize_t vfs_read(struct file *, char *, size_t, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: include/linux/fs.h:825:
+extern ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#268: FILE: include/linux/fs.h:825:
+extern ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#268: FILE: include/linux/fs.h:825:
+extern ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#268: FILE: include/linux/fs.h:825:
+extern ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#268: FILE: include/linux/fs.h:825:
+extern ssize_t vfs_write(struct file *, const char *, size_t, loff_t *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 2 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
