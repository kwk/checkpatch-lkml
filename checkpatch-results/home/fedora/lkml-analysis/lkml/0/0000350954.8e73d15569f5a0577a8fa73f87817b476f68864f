WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.6.0-test2/arch/ia64/hp/common/sba_iommu.c linux-2.6.0-test2-ac1/arch/ia64/hp/common/sba_iommu.c

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#41: FILE: arch/mips64/mm/fault.c:166:
+		printk("do_page_fault() #2: sending SIGSEGV to %s for invalid %s\n"

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#53: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2699:
+			printk("dmasound_setup: invalid catch radius, using default = %d\n", catchRadius);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#53: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2699:
+			printk("dmasound_setup: invalid catch radius, using default = %d\n", catchRadius);

CHECK:CAMELCASE: Avoid CamelCase: <catchRadius>
#53: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2699:
+			printk("dmasound_setup: invalid catch radius, using default = %d\n", catchRadius);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#60: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2705:
+			printk("dmasound_setup: invalid number of buffers, using default = %d\n", numBufs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#60: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2705:
+			printk("dmasound_setup: invalid number of buffers, using default = %d\n", numBufs);

CHECK:CAMELCASE: Avoid CamelCase: <numBufs>
#60: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2705:
+			printk("dmasound_setup: invalid number of buffers, using default = %d\n", numBufs);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#65: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2709:
+			printk("dmasound_setup: invalid buffer size, using default = %d\n", bufSize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#65: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2709:
+			printk("dmasound_setup: invalid buffer size, using default = %d\n", bufSize);

CHECK:CAMELCASE: Avoid CamelCase: <bufSize>
#65: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2709:
+			printk("dmasound_setup: invalid buffer size, using default = %d\n", bufSize);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#73: FILE: arch/ppc/8xx_io/cs4218_tdm.c:2716:
+		printk("dmasound_setup: invalid number of arguments\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: arch/ppc/syslib/open_pic.c:136:
+	printk("open_pic.c:%d: invalid ipi %d\n", __LINE__, ipi);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: arch/ppc/syslib/open_pic.c:139:
+	printk("open_pic.c:%d: invalid timer %d\n", __LINE__, timer);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: arch/ppc/syslib/open_pic.c:142:
+	printk("open_pic.c:%d: invalid vector %d\n", __LINE__, vec);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: arch/ppc/syslib/open_pic.c:145:
+	printk("open_pic.c:%d: invalid priority %d\n", __LINE__, pri);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#115: FILE: arch/ppc/syslib/open_pic.c:152:
     if (irq < open_pic_irq_offset || irq >= NumSources+open_pic_irq_offset \
[...]
+      printk("open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/ppc/syslib/open_pic.c:154:
+      printk("open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: arch/ppc/syslib/open_pic.c:154:
+      printk("open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/ppc/syslib/open_pic.c:158:
+	printk("open_pic.c:%d: invalid cpu %d\n", __LINE__, cpu); \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#135: FILE: arch/ppc64/kernel/open_pic.c:99:
+	printk(KERN_ERR "open_pic.c:%d: invalid ipi %d\n", __LINE__, ipi);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: arch/ppc64/kernel/open_pic.c:102:
+	printk(KERN_ERR "open_pic.c:%d: invalid timer %d\n", __LINE__, timer);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: arch/ppc64/kernel/open_pic.c:105:
+	printk(KERN_ERR "open_pic.c:%d: invalid vector %d\n", __LINE__, vec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#147: FILE: arch/ppc64/kernel/open_pic.c:108:
+	printk(KERN_ERR "open_pic.c:%d: invalid priority %d\n", __LINE__, pri);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#154: FILE: arch/ppc64/kernel/open_pic.c:115:
     if (irq < open_pic_irq_offset || irq >= (NumSources+open_pic_irq_offset)){ \
+      printk(KERN_ERR "open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/ppc64/kernel/open_pic.c:116:
+      printk(KERN_ERR "open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#156: FILE: arch/ppc64/kernel/open_pic.c:116:
+      printk(KERN_ERR "open_pic.c:%d: invalid irq %d\n", __LINE__, irq); \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#161: FILE: arch/ppc64/kernel/open_pic.c:120:
+	printk(KERN_ERR "open_pic.c:%d: invalid cpu %d\n", __LINE__, cpu); \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 25 warnings, 3 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
