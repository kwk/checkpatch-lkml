ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#55: FILE: arch/arm/mach-pxa/corgi_pm.c:184:
+	.read_main_battery= sharpsl_read_main_battery,
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/arm/mach-pxa/sharp_pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#115: FILE: arch/arm/mach-pxa/sharp_pm.c:50:
+extern struct ucb1x00 *collie_ucb;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#123: FILE: arch/arm/mach-pxa/sharp_pm.c:58:
+#define SHARPSL_CHARGE_ON_TIME_INTERVAL        (msecs_to_jiffies(1*60*1000))  /* 1 min */
                                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#123: FILE: arch/arm/mach-pxa/sharp_pm.c:58:
+#define SHARPSL_CHARGE_ON_TIME_INTERVAL        (msecs_to_jiffies(1*60*1000))  /* 1 min */
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: arch/arm/mach-pxa/sharp_pm.c:59:
+#define SHARPSL_CHARGE_FINISH_TIME             (msecs_to_jiffies(10*60*1000)) /* 10 min */
                                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: arch/arm/mach-pxa/sharp_pm.c:59:
+#define SHARPSL_CHARGE_FINISH_TIME             (msecs_to_jiffies(10*60*1000)) /* 10 min */
                                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#125: FILE: arch/arm/mach-pxa/sharp_pm.c:60:
+#define SHARPSL_BATCHK_TIME                    (msecs_to_jiffies(15*1000))    /* 15 sec */
                                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: arch/arm/mach-pxa/sharp_pm.c:61:
+#define SHARPSL_BATCHK_TIME_SUSPEND            (60*10)                        /* 10 min */
                                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: arch/arm/mach-pxa/sharp_pm.c:91:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: arch/arm/mach-pxa/sharp_pm.c:99:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#171: FILE: arch/arm/mach-pxa/sharp_pm.c:106:
+		thresh=sharpsl_pm.machinfo->bat_levels_acin;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: arch/arm/mach-pxa/sharp_pm.c:108:
+		thresh=sharpsl_pm.machinfo->bat_levels_noac;
 		      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: arch/arm/mach-pxa/sharp_pm.c:141:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.charge_mode == CHRG_ON'
#217: FILE: arch/arm/mach-pxa/sharp_pm.c:152:
+	if (machine_is_corgi() && (sharpsl_pm.charge_mode == CHRG_ON)
+			&& time_after(jiffies, sharpsl_pm.charge_start_time +  SHARPSL_CHARGE_ON_TIME_INTERVAL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#218: FILE: arch/arm/mach-pxa/sharp_pm.c:153:
+			&& time_after(jiffies, sharpsl_pm.charge_start_time +  SHARPSL_CHARGE_ON_TIME_INTERVAL))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#218: FILE: arch/arm/mach-pxa/sharp_pm.c:153:
+	if (machine_is_corgi() && (sharpsl_pm.charge_mode == CHRG_ON)
+			&& time_after(jiffies, sharpsl_pm.charge_start_time +  SHARPSL_CHARGE_ON_TIME_INTERVAL))

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: arch/arm/mach-pxa/sharp_pm.c:156:
+	while(1) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#223: FILE: arch/arm/mach-pxa/sharp_pm.c:158:
+		if (voltage > 0) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/arm/mach-pxa/sharp_pm.c:171:
+           creeping back up so we try to avoid this here */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: arch/arm/mach-pxa/sharp_pm.c:171:
+	/* At low battery voltages, the voltage has a tendency to start
+           creeping back up so we try to avoid this here */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: arch/arm/mach-pxa/sharp_pm.c:171:
+           creeping back up so we try to avoid this here */

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#237: FILE: arch/arm/mach-pxa/sharp_pm.c:172:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE) || (apm_status == APM_BATTERY_STATUS_HIGH) ||  percent <= sharpsl_pm.battstat.mainbat_percent) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.ac_status == APM_AC_ONLINE'
#237: FILE: arch/arm/mach-pxa/sharp_pm.c:172:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE) || (apm_status == APM_BATTERY_STATUS_HIGH) ||  percent <= sharpsl_pm.battstat.mainbat_percent) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'apm_status == APM_BATTERY_STATUS_HIGH'
#237: FILE: arch/arm/mach-pxa/sharp_pm.c:172:
+	if ((sharpsl_pm.battstat.ac_status == APM_AC_ONLINE) || (apm_status == APM_BATTERY_STATUS_HIGH) ||  percent <= sharpsl_pm.battstat.mainbat_percent) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#243: FILE: arch/arm/mach-pxa/sharp_pm.c:178:
+	dev_dbg(sharpsl_pm.dev, "Battery: voltage: %d, status: %d, percentage: %d, time: %d\n", voltage,

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#244: FILE: arch/arm/mach-pxa/sharp_pm.c:179:
+			sharpsl_pm.battstat.mainbat_status, sharpsl_pm.battstat.mainbat_percent, jiffies);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: arch/arm/mach-pxa/sharp_pm.c:179:
+	dev_dbg(sharpsl_pm.dev, "Battery: voltage: %d, status: %d, percentage: %d, time: %d\n", voltage,
+			sharpsl_pm.battstat.mainbat_status, sharpsl_pm.battstat.mainbat_percent, jiffies);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.ac_status != APM_AC_ONLINE'
#247: FILE: arch/arm/mach-pxa/sharp_pm.c:182:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW) ||
+			(sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW'
#247: FILE: arch/arm/mach-pxa/sharp_pm.c:182:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW) ||
+			(sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL'
#247: FILE: arch/arm/mach-pxa/sharp_pm.c:182:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW) ||
+			(sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#248: FILE: arch/arm/mach-pxa/sharp_pm.c:183:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& ((sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_LOW) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.ac_status != APM_AC_ONLINE'
#264: FILE: arch/arm/mach-pxa/sharp_pm.c:199:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)
+			&& !(sharpsl_pm.flags & SHARPSL_APM_QUEUED)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL'
#264: FILE: arch/arm/mach-pxa/sharp_pm.c:199:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)
+			&& !(sharpsl_pm.flags & SHARPSL_APM_QUEUED)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#265: FILE: arch/arm/mach-pxa/sharp_pm.c:200:
+	if ((sharpsl_pm.battstat.ac_status != APM_AC_ONLINE)
+			&& (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: arch/arm/mach-pxa/sharp_pm.c:201:
+			&& (sharpsl_pm.battstat.mainbat_status == APM_BATTERY_STATUS_CRITICAL)
+			&& !(sharpsl_pm.flags & SHARPSL_APM_QUEUED)) {

WARNING:TYPO_SPELLING: 'Toogling' may be misspelled - perhaps 'Toggling'?
#305: FILE: arch/arm/mach-pxa/sharp_pm.c:240:
+	dev_dbg(sharpsl_pm.dev, "Toogling Charger at time: %lx\n", jiffies);
 	                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: arch/arm/mach-pxa/sharp_pm.c:262:
+	dev_dbg(sharpsl_pm.dev, "AC Status: %d\n",acin);
 	                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.charge_mode != CHRG_ON'
#330: FILE: arch/arm/mach-pxa/sharp_pm.c:265:
+	if (acin && (sharpsl_pm.charge_mode != CHRG_ON))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#338: FILE: arch/arm/mach-pxa/sharp_pm.c:273:
+
+

WARNING:TYPO_SPELLING: 'staus' may be misspelled - perhaps 'status'?
#372: FILE: arch/arm/mach-pxa/sharp_pm.c:307:
+/* Can trigger at the same time as an AC staus change so
                                          ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#373: FILE: arch/arm/mach-pxa/sharp_pm.c:308:
+/* Can trigger at the same time as an AC staus change so
+   delay until after that has been processed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#373: FILE: arch/arm/mach-pxa/sharp_pm.c:308:
+   delay until after that has been processed */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: arch/arm/mach-pxa/sharp_pm.c:356:
+	static int sharpsl_ad[SHARPSL_CNV_VALUE_NUM+1];
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#431: FILE: arch/arm/mach-pxa/sharp_pm.c:366:
+		for (i=0; i < (SHARPSL_CNV_VALUE_NUM-1); i++)
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#431: FILE: arch/arm/mach-pxa/sharp_pm.c:366:
+		for (i=0; i < (SHARPSL_CNV_VALUE_NUM-1); i++)
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#432: FILE: arch/arm/mach-pxa/sharp_pm.c:367:
+			sharpsl_ad[i] = sharpsl_ad[i+1];
 			                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#435: FILE: arch/arm/mach-pxa/sharp_pm.c:370:
+	for (i=0; i < sharpsl_ad_index; i++)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#451: FILE: arch/arm/mach-pxa/sharp_pm.c:386:
+	j=0;
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#452: FILE: arch/arm/mach-pxa/sharp_pm.c:387:
+	for (i=1; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#452: FILE: arch/arm/mach-pxa/sharp_pm.c:387:
+	for (i=1; i<5; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#461: FILE: arch/arm/mach-pxa/sharp_pm.c:396:
+	k=4;
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#462: FILE: arch/arm/mach-pxa/sharp_pm.c:397:
+	for (i=3; i>=0; i--) {
 	      ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#462: FILE: arch/arm/mach-pxa/sharp_pm.c:397:
+	for (i=3; i>=0; i--) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#469: FILE: arch/arm/mach-pxa/sharp_pm.c:404:
+	for (i=0; i<5; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#469: FILE: arch/arm/mach-pxa/sharp_pm.c:404:
+	for (i=0; i<5; i++)
 	           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#470: FILE: arch/arm/mach-pxa/sharp_pm.c:405:
+		if (i != j && i != k )

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#473: FILE: arch/arm/mach-pxa/sharp_pm.c:408:
+	dev_dbg(sharpsl_pm.dev, "Average: %d from values: %d, %d, %d, %d, %d\n", sum/3, val[0], val[1], val[2], val[3], val[4]);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#473: FILE: arch/arm/mach-pxa/sharp_pm.c:408:
+	dev_dbg(sharpsl_pm.dev, "Average: %d from values: %d, %d, %d, %d, %d\n", sum/3, val[0], val[1], val[2], val[3], val[4]);
 	                                                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#475: FILE: arch/arm/mach-pxa/sharp_pm.c:410:
+	return (sum/3);
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#483: FILE: arch/arm/mach-pxa/sharp_pm.c:418:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#483: FILE: arch/arm/mach-pxa/sharp_pm.c:418:
+	for (i=0; i<5; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#510: FILE: arch/arm/mach-pxa/sharp_pm.c:445:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#510: FILE: arch/arm/mach-pxa/sharp_pm.c:445:
+	for (i=0; i<5; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#533: FILE: arch/arm/mach-pxa/sharp_pm.c:468:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#533: FILE: arch/arm/mach-pxa/sharp_pm.c:468:
+	for (i=0; i<5; i++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#539: FILE: arch/arm/mach-pxa/sharp_pm.c:474:
+	dev_dbg(sharpsl_pm.dev, "AC Voltage: %d\n",temp);
 	                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp > SHARPSL_CHARGE_ON_ACIN_HIGH'
#541: FILE: arch/arm/mach-pxa/sharp_pm.c:476:
+	if ((temp > SHARPSL_CHARGE_ON_ACIN_HIGH) || (temp < SHARPSL_CHARGE_ON_ACIN_LOW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp < SHARPSL_CHARGE_ON_ACIN_LOW'
#541: FILE: arch/arm/mach-pxa/sharp_pm.c:476:
+	if ((temp > SHARPSL_CHARGE_ON_ACIN_HIGH) || (temp < SHARPSL_CHARGE_ON_ACIN_LOW)) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#574: FILE: arch/arm/mach-pxa/sharp_pm.c:509:
+static void corgi_goto_sleep(unsigned long alarm_time, unsigned int alarm_enable, suspend_state_t state)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: arch/arm/mach-pxa/sharp_pm.c:512:
+	dev_dbg(sharpsl_pm.dev, "Time is: %08x\n",RCNR);
 	                                         ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#579: FILE: arch/arm/mach-pxa/sharp_pm.c:514:
+	dev_dbg(sharpsl_pm.dev, "Offline Charge Activate = %d\n",sharpsl_pm.flags & SHARPSL_DO_OFFLINE_CHRG);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#579: FILE: arch/arm/mach-pxa/sharp_pm.c:514:
+	dev_dbg(sharpsl_pm.dev, "Offline Charge Activate = %d\n",sharpsl_pm.flags & SHARPSL_DO_OFFLINE_CHRG);
 	                                                        ^

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#594: FILE: arch/arm/mach-pxa/sharp_pm.c:529:
+	if ((sharpsl_pm.charge_mode == CHRG_ON) && ((alarm_enable && ((alarm_time - RCNR) > (SHARPSL_BATCHK_TIME_SUSPEND + 30))) || !alarm_enable)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.charge_mode == CHRG_ON'
#594: FILE: arch/arm/mach-pxa/sharp_pm.c:529:
+	if ((sharpsl_pm.charge_mode == CHRG_ON) && ((alarm_enable && ((alarm_time - RCNR) > (SHARPSL_BATCHK_TIME_SUSPEND + 30))) || !alarm_enable)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#597: FILE: arch/arm/mach-pxa/sharp_pm.c:532:
+		dev_dbg(sharpsl_pm.dev, "Charging alarm at: %08x\n",RTAR);
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: arch/arm/mach-pxa/sharp_pm.c:537:
+		dev_dbg(sharpsl_pm.dev, "User alarm at: %08x\n",RTAR);
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#611: FILE: arch/arm/mach-pxa/sharp_pm.c:546:
+	dev_dbg(sharpsl_pm.dev, "Corgi woken up from suspend: %08x\n",PEDR);
 	                                                             ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#614: FILE: arch/arm/mach-pxa/sharp_pm.c:549:
+static int corgi_enter_suspend(unsigned long alarm_time, unsigned int alarm_enable, suspend_state_t state)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#616: FILE: arch/arm/mach-pxa/sharp_pm.c:551:
+	if (!sharpsl_pm.machinfo->should_wakeup(!(sharpsl_pm.flags & SHARPSL_ALARM_ACTIVE) && alarm_enable) )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#616: FILE: arch/arm/mach-pxa/sharp_pm.c:551:
+	if (!sharpsl_pm.machinfo->should_wakeup(!(sharpsl_pm.flags & SHARPSL_ALARM_ACTIVE) && alarm_enable) )
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#616: FILE: arch/arm/mach-pxa/sharp_pm.c:551:
+	if (!sharpsl_pm.machinfo->should_wakeup(!(sharpsl_pm.flags & SHARPSL_ALARM_ACTIVE) && alarm_enable) )

ERROR:SPACING: space required before the open parenthesis '('
#623: FILE: arch/arm/mach-pxa/sharp_pm.c:558:
+		if(sharpsl_off_charge_battery()) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#631: FILE: arch/arm/mach-pxa/sharp_pm.c:566:
+	if ((STATUS_BATT_LOCKED() == 0) || (sharpsl_fatal_check() < 0) )
+	{

ERROR:SPACING: space prohibited before that close parenthesis ')'
#631: FILE: arch/arm/mach-pxa/sharp_pm.c:566:
+	if ((STATUS_BATT_LOCKED() == 0) || (sharpsl_fatal_check() < 0) )

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#651: FILE: arch/arm/mach-pxa/sharp_pm.c:586:
+	while (corgi_enter_suspend(alarm_time,alarm_status,state))
+		{}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: arch/arm/mach-pxa/sharp_pm.c:586:
+	while (corgi_enter_suspend(alarm_time,alarm_status,state))
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: arch/arm/mach-pxa/sharp_pm.c:586:
+	while (corgi_enter_suspend(alarm_time,alarm_status,state))
 	                                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#661: FILE: arch/arm/mach-pxa/sharp_pm.c:596:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sharpsl_fatal_check', this function's name, in a string
#670: FILE: arch/arm/mach-pxa/sharp_pm.c:605:
+	dev_dbg(sharpsl_pm.dev, "sharpsl_fatal_check entered\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.charge_mode == CHRG_ON'
#675: FILE: arch/arm/mach-pxa/sharp_pm.c:610:
+	if (acin && (sharpsl_pm.charge_mode == CHRG_ON)) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#677: FILE: arch/arm/mach-pxa/sharp_pm.c:612:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#686: FILE: arch/arm/mach-pxa/sharp_pm.c:621:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#686: FILE: arch/arm/mach-pxa/sharp_pm.c:621:
+	for (i=0; i<5; i++) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sharpsl_pm.charge_mode == CHRG_ON'
#694: FILE: arch/arm/mach-pxa/sharp_pm.c:629:
+	if (acin && (sharpsl_pm.charge_mode == CHRG_ON)) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#695: FILE: arch/arm/mach-pxa/sharp_pm.c:630:
+		udelay(100);

WARNING:LONG_LINE: line length of 161 exceeds 100 columns
#701: FILE: arch/arm/mach-pxa/sharp_pm.c:636:
+	dev_dbg(sharpsl_pm.dev, "sharpsl_fatal_check: acin: %d, discharge voltage: %d, no discharge: %d\n", acin, temp, sharpsl_pm.machinfo.read_main_battery());

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sharpsl_fatal_check', this function's name, in a string
#701: FILE: arch/arm/mach-pxa/sharp_pm.c:636:
+	dev_dbg(sharpsl_pm.dev, "sharpsl_fatal_check: acin: %d, discharge voltage: %d, no discharge: %d\n", acin, temp, sharpsl_pm.machinfo.read_main_battery());

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp < SHARPSL_FATAL_ACIN_VOLT'
#703: FILE: arch/arm/mach-pxa/sharp_pm.c:638:
+	if ((acin && (temp < SHARPSL_FATAL_ACIN_VOLT)) ||
+			(!acin && (temp < SHARPSL_FATAL_NOACIN_VOLT)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp < SHARPSL_FATAL_NOACIN_VOLT'
#703: FILE: arch/arm/mach-pxa/sharp_pm.c:638:
+	if ((acin && (temp < SHARPSL_FATAL_ACIN_VOLT)) ||
+			(!acin && (temp < SHARPSL_FATAL_NOACIN_VOLT)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: arch/arm/mach-pxa/sharp_pm.c:639:
+	if ((acin && (temp < SHARPSL_FATAL_ACIN_VOLT)) ||
+			(!acin && (temp < SHARPSL_FATAL_NOACIN_VOLT)))

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#711: FILE: arch/arm/mach-pxa/sharp_pm.c:646:
+	dev_err(sharpsl_pm.dev, "Offline Charger: Error occured.\n");
 	                                                ^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#766: FILE: arch/arm/mach-pxa/sharp_pm.c:701:
+		while(1) {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#767: FILE: arch/arm/mach-pxa/sharp_pm.c:702:
+			/* Check if any wakeup event had occured */
 			                                 ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#774: FILE: arch/arm/mach-pxa/sharp_pm.c:709:
+				dev_dbg(sharpsl_pm.dev, "Offline Charger: Charge full occured. Retrying to check\n");
 				                                                      ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: arch/arm/mach-pxa/sharp_pm.c:710:
+^I   ^I^I^Isharpsl_pm.full_count++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#775: FILE: arch/arm/mach-pxa/sharp_pm.c:710:
+^I   ^I^I^Isharpsl_pm.full_count++;$

ERROR:SPACING: space required before the open parenthesis '('
#789: FILE: arch/arm/mach-pxa/sharp_pm.c:724:
+	while(1) {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#790: FILE: arch/arm/mach-pxa/sharp_pm.c:725:
+		/* Check if any wakeup event had occured */
 		                                 ^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#794: FILE: arch/arm/mach-pxa/sharp_pm.c:729:
+		if ((RCNR-time) > SHARPSL_WAIT_CO_TIME) {
 		         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#812: FILE: arch/arm/mach-pxa/sharp_pm.c:747:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#815: FILE: arch/arm/mach-pxa/sharp_pm.c:750:
+	return sprintf(buf, "%d\n",sharpsl_pm.battstat.mainbat_percent);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#820: FILE: arch/arm/mach-pxa/sharp_pm.c:755:
+	return sprintf(buf, "%d\n",sharpsl_pm.battstat.mainbat_voltage);
 	                          ^

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#821: FILE: arch/arm/mach-pxa/sharp_pm.c:756:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#824: FILE: arch/arm/mach-pxa/sharp_pm.c:759:
+static DEVICE_ATTR(battery_voltage, 0444, battery_voltage_show, NULL);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#826: FILE: arch/arm/mach-pxa/sharp_pm.c:761:
+extern void (*apm_get_power_status)(struct apm_power_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct apm_power_info *' should also have an identifier name
#826: FILE: arch/arm/mach-pxa/sharp_pm.c:761:
+extern void (*apm_get_power_status)(struct apm_power_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#879: FILE: arch/arm/mach-pxa/sharp_pm.c:814:
+	if ((err = request_irq(COLLIE_IRQ_GPIO_AC_IN, sharpsl_ac_isr, SA_INTERRUPT,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#881: FILE: arch/arm/mach-pxa/sharp_pm.c:816:
+		printk("Could not get irq %d.\n", COLLIE_IRQ_GPIO_AC_IN);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#886: FILE: arch/arm/mach-pxa/sharp_pm.c:821:
+	if ((err = request_irq(COLLIE_IRQ_GPIO_CO, sharpsl_chrg_full_isr, SA_INTERRUPT,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#889: FILE: arch/arm/mach-pxa/sharp_pm.c:824:
+		printk("Could not get irq %d.\n", COLLIE_IRQ_GPIO_CO);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#935: FILE: arch/arm/mach-pxa/sharp_pm.c:870:
+static int __devinit sharpsl_pm_init(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: arch/arm/mach-pxa/sharp_pm.c:877:
+ ^Iplatform_driver_unregister(&sharpsl_pm_driver);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#942: FILE: arch/arm/mach-pxa/sharp_pm.c:877:
+ ^Iplatform_driver_unregister(&sharpsl_pm_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: arch/arm/mach-pxa/sharp_pm.c:877:
+ ^Iplatform_driver_unregister(&sharpsl_pm_driver);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#977: FILE: arch/arm/mach-pxa/sharpsl.h:129:
+extern irqreturn_t sharpsl_ac_isr(int irq, void *dev_id, struct pt_regs *fp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#978: FILE: arch/arm/mach-pxa/sharpsl.h:130:
+extern irqreturn_t sharpsl_fatal_isr(int irq, void *dev_id, struct pt_regs *fp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#979: FILE: arch/arm/mach-pxa/sharpsl.h:131:
+extern irqreturn_t sharpsl_chrg_full_isr(int irq, void *dev_id, struct pt_regs *fp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#981: FILE: arch/arm/mach-pxa/sharpsl.h:133:
+extern int sharpsl_read_main_battery(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#982: FILE: arch/arm/mach-pxa/sharpsl.h:134:
+extern int sharpsl_read_temp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#983: FILE: arch/arm/mach-pxa/sharpsl.h:135:
+extern int sharpsl_read_acin(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#985: FILE: arch/arm/mach-pxa/sharpsl.h:137:
+extern int sharpsl_arch_pm_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#986: FILE: arch/arm/mach-pxa/sharpsl.h:138:
+extern int sharpsl_arch_pm_remove(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1031: FILE: arch/arm/mach-pxa/sharpsl_pm.c:124:
 
+

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1867: FILE: arch/arm/mach-pxa/spitz_pm.c:187:
+	.read_main_battery= sharpsl_read_main_battery,
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 36 warnings, 51 checks, 1790 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
