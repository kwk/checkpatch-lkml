WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -Nru -Xdontdiff linux-2.4.20-pre4/fs/exec.c linux-path_lookup/fs/exec.c

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#42: FILE: fs/exec.c:367:
+	err = path_lookup(name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                        ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#42: FILE: fs/exec.c:367:
+	err = path_lookup(name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#53: FILE: fs/namei.c:742:
+int path_lookup(const char *path, unsigned flags, struct nameidata *nd)
                                                                     ^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#53: FILE: fs/namei.c:742:
+int path_lookup(const char *path, unsigned flags, struct nameidata *nd)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#56: FILE: fs/namei.c:745:
+	if (path_init(path, flags, nd))
 	                           ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#56: FILE: fs/namei.c:745:
+	int error = 0;
+	if (path_init(path, flags, nd))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#57: FILE: fs/namei.c:746:
+		error = path_walk(path, nd);
 		                        ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#61: FILE: fs/namei.c:750:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#72: FILE: fs/namei.c:857:
+		err = path_lookup(tmp, flags, nd);
 		                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#82: FILE: fs/namei.c:1013:
+		error = path_lookup(pathname, lookup_flags(flag), nd);
 		                                                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#92: FILE: fs/namei.c:1023:
+	error = path_lookup(pathname, LOOKUP_PARENT, nd);
 	                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#102: FILE: fs/namei.c:1275:
+	error = path_lookup(tmp, LOOKUP_PARENT, &nd);
 	                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#112: FILE: fs/namei.c:1343:
+		error = path_lookup(tmp, LOOKUP_PARENT, &nd);
 		                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#122: FILE: fs/namei.c:1439:
+	error = path_lookup(name, LOOKUP_PARENT, &nd);
 	                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#132: FILE: fs/namei.c:1507:
+	error = path_lookup(name, LOOKUP_PARENT, &nd);
 	                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: fs/namei.c:1578:
+		error = path_lookup(to, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#170: FILE: fs/namei.c:1659:
+		error = path_lookup(to, LOOKUP_PARENT, &nd);
 		                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#218: FILE: fs/namespace.c:366:
+	retval = __user_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &nd);
 	                                                           ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#218: FILE: fs/namespace.c:366:
+	retval = __user_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &nd);
 	                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#228: FILE: fs/namespace.c:493:
+	err = path_lookup(old_name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &old_nd);
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: fs/namespace.c:559:
+	err = path_lookup(old_name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &old_nd);
 	                                           ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#248: FILE: fs/namespace.c:725:
+	retval = path_lookup(dir_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                               ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#248: FILE: fs/namespace.c:725:
+	retval = path_lookup(dir_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#272: FILE: fs/namespace.c:911:
+	error = __user_walk(new_root, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &new_nd);
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#272: FILE: fs/namespace.c:911:
+	error = __user_walk(new_root, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &new_nd);
 	                                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#287: FILE: fs/namespace.c:918:
+	error = __user_walk(put_old, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &old_nd);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#287: FILE: fs/namespace.c:918:
+	error = __user_walk(put_old, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &old_nd);
 	                                                          ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                             ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#309: FILE: fs/open.c:389:
+	error = __user_walk(filename,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                            ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#341: FILE: fs/super.c:662:
+	error = path_lookup(dev_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                              ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#341: FILE: fs/super.c:662:
+	error = path_lookup(dev_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#352: FILE: include/linux/fs.h:1332:
+extern int FASTCALL(path_lookup(const char *, unsigned, struct nameidata *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: include/linux/fs.h:1332:
+extern int FASTCALL(path_lookup(const char *, unsigned, struct nameidata *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#352: FILE: include/linux/fs.h:1332:
+extern int FASTCALL(path_lookup(const char *, unsigned, struct nameidata *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#352: FILE: include/linux/fs.h:1332:
+extern int FASTCALL(path_lookup(const char *, unsigned, struct nameidata *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#352: FILE: include/linux/fs.h:1332:
+extern int FASTCALL(path_lookup(const char *, unsigned, struct nameidata *));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437605.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 24 warnings, 14 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437605.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
