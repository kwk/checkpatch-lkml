WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urpN wli-2.5.50-10/arch/i386/mm/discontig.c wli-2.5.50-11/arch/i386/mm/discontig.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#48: FILE: arch/i386/mm/discontig.c:330:
+int page_is_ram(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#48: FILE: arch/i386/mm/discontig.c:330:
+int page_is_ram(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#63: FILE: arch/i386/mm/discontig.c:341:
+		zone_max_pfn = zone_start_pfn + NODE_DATA(nid)->node_zones[ZONE_HIGHMEM].spanned_pages;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#69: FILE: arch/i386/mm/discontig.c:344:
+		start_pfn = end_pfn = zone_start_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#73: FILE: arch/i386/mm/discontig.c:348:
+			while (end_pfn < zone_max_pfn
+					&& page_is_ram(end_pfn)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#74: FILE: arch/i386/mm/discontig.c:349:
+					&& page_is_ram(end_pfn)
+					&& !(bad_ppro && page_kills_ppro(end_pfn))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#85: FILE: arch/i386/mm/discontig.c:360:
+				int order = min(MAX_ORDER, fls(end_pfn - start_pfn)) - 1;
+				__free_pages(&zone_mem_map[start_pfn - zone_start_pfn], order);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: arch/i386/mm/discontig.c:364:
+				printk("wli screwed up, it will crash!\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 3 checks, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000408897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
