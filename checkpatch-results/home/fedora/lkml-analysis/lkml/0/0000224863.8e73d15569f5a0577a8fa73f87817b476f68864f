WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: linux/suspend.h:34:
+extern void mark_free_pages(struct zone *zone);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: linux/suspend.h:58:
+static inline int freeze_processes(void) { BUG(); }

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#117: FILE: signal.c:1445:
+	BUG_ON(sig == -1);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#166: FILE: power/main.c:69:
+	/* FIXME: this is suspend confusion biting us. If we pass
+	   state, we'll pass 2 in suspend-to-RAM case; EHCI will

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: power/main.c:71:
+	   state. Oops. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#169: FILE: power/main.c:72:
+	if ((error = device_suspend(3)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#186: FILE: power/main.c:92:
+	if ((error = device_power_down(3)))

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#238: FILE: power/swsusp.c:449:
+		BUG_ON(PageNosave(page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: power/swsusp.c:577:
+				struct page * page;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: power/swsusp.c:578:
+				struct page * page;
+				page = pfn_to_page(zone_pfn + zone->zone_start_pfn);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#350: FILE: power/swsusp.c:579:
+				pbe->orig_address = (long) page_address(page);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#359: FILE: power/swsusp.c:587:
+	BUG_ON(to_copy);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#373: FILE: power/swsusp.c:659:
+	struct pbe * p;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#410: FILE: power/swsusp.c:693:
+	BUG_ON(PageNosave(virt_to_page(pagedir_save)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#411: FILE: power/swsusp.c:694:
+	BUG_ON(PageNosaveFree(virt_to_page(pagedir_save)));

CHECK:SPACING: No space is necessary after a cast
#413: FILE: power/swsusp.c:696:
+	free_pages((unsigned long) pagedir_save, pagedir_order);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#487: FILE: power/swsusp.c:1035:
+		yield();

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#505: FILE: power/swsusp.c:1111:
+		pr_debug(KERN_ERR "swsusp: Suspend partition has wrong signature?\n");

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: page_alloc.c:460:
+			for (i=0; i < (1<<order); i++)
 			      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#558: FILE: page_alloc.c:460:
+			for (i=0; i < (1<<order); i++)
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#559: FILE: page_alloc.c:461:
+				SetPageNosaveFree(pfn_to_page(start_pfn+i));
 				                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#571: FILE: page_alloc.c:1588:
+			printk(KERN_CRIT "BUG: wrong zone alignment, it will crash\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 22 warnings, 5 checks, 485 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
