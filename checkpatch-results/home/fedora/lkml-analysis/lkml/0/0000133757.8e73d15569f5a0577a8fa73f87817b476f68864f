WARNING:TYPO_SPELLING: 'funciton' may be misspelled - perhaps 'function'?
#34: 
o If system panics then cpu register states are captured through funciton
                                                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
o crash_setup_regs() is the top architecture dependent function which should

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: kernel/kexec.c:1061:
+			struct pt_regs fixed_regs;
+			crash_setup_regs(&fixed_regs, regs);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: include/asm-i386/kexec.h:36:
+static inline void crash_fixup_ss_esp(struct pt_regs *newregs,
+					struct pt_regs *oldregs)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around oldregs->esp
#168: FILE: include/asm-i386/kexec.h:39:
+	newregs->esp = (unsigned long)&(oldregs->esp);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#169: FILE: include/asm-i386/kexec.h:40:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#172: FILE: include/asm-i386/kexec.h:43:
+			:"=a"(newregs->xss));
 			^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: include/asm-i386/kexec.h:52:
+                                       struct pt_regs *oldregs)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/asm-i386/kexec.h:52:
+static inline void crash_setup_regs(struct pt_regs *newregs,
+                                       struct pt_regs *oldregs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: include/asm-i386/kexec.h:52:
+                                       struct pt_regs *oldregs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: include/asm-i386/kexec.h:54:
+       if (oldregs)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#183: FILE: include/asm-i386/kexec.h:54:
+       if (oldregs)
+               crash_fixup_ss_esp(newregs, oldregs);

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: include/asm-i386/kexec.h:54:
+       if (oldregs)
[...]
+       else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: include/asm-i386/kexec.h:55:
+               crash_fixup_ss_esp(newregs, oldregs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: include/asm-i386/kexec.h:55:
+               crash_fixup_ss_esp(newregs, oldregs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: include/asm-i386/kexec.h:56:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#185: FILE: include/asm-i386/kexec.h:56:
+       else {
+               __asm__ __volatile__("movl %%ebx,%0" : "=m"(newregs->ebx));

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: include/asm-i386/kexec.h:56:
+       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: include/asm-i386/kexec.h:57:
+               __asm__ __volatile__("movl %%ebx,%0" : "=m"(newregs->ebx));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/asm-i386/kexec.h:57:
+               __asm__ __volatile__("movl %%ebx,%0" : "=m"(newregs->ebx));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: include/asm-i386/kexec.h:58:
+               __asm__ __volatile__("movl %%ecx,%0" : "=m"(newregs->ecx));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: include/asm-i386/kexec.h:58:
+               __asm__ __volatile__("movl %%ecx,%0" : "=m"(newregs->ecx));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: include/asm-i386/kexec.h:59:
+               __asm__ __volatile__("movl %%edx,%0" : "=m"(newregs->edx));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: include/asm-i386/kexec.h:59:
+               __asm__ __volatile__("movl %%edx,%0" : "=m"(newregs->edx));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: include/asm-i386/kexec.h:60:
+               __asm__ __volatile__("movl %%esi,%0" : "=m"(newregs->esi));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/asm-i386/kexec.h:60:
+               __asm__ __volatile__("movl %%esi,%0" : "=m"(newregs->esi));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: include/asm-i386/kexec.h:61:
+               __asm__ __volatile__("movl %%edi,%0" : "=m"(newregs->edi));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: include/asm-i386/kexec.h:61:
+               __asm__ __volatile__("movl %%edi,%0" : "=m"(newregs->edi));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: include/asm-i386/kexec.h:62:
+               __asm__ __volatile__("movl %%ebp,%0" : "=m"(newregs->ebp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: include/asm-i386/kexec.h:62:
+               __asm__ __volatile__("movl %%ebp,%0" : "=m"(newregs->ebp));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: include/asm-i386/kexec.h:63:
+               __asm__ __volatile__("movl %%eax,%0" : "=m"(newregs->eax));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: include/asm-i386/kexec.h:63:
+               __asm__ __volatile__("movl %%eax,%0" : "=m"(newregs->eax));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: include/asm-i386/kexec.h:64:
+               __asm__ __volatile__("movl %%esp,%0" : "=m"(newregs->esp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: include/asm-i386/kexec.h:64:
+               __asm__ __volatile__("movl %%esp,%0" : "=m"(newregs->esp));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: include/asm-i386/kexec.h:65:
+               __asm__ __volatile__("movw %%ss, %%ax;" :"=a"(newregs->xss));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: include/asm-i386/kexec.h:65:
+               __asm__ __volatile__("movw %%ss, %%ax;" :"=a"(newregs->xss));$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#194: FILE: include/asm-i386/kexec.h:65:
+               __asm__ __volatile__("movw %%ss, %%ax;" :"=a"(newregs->xss));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: include/asm-i386/kexec.h:66:
+               __asm__ __volatile__("movw %%cs, %%ax;" :"=a"(newregs->xcs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: include/asm-i386/kexec.h:66:
+               __asm__ __volatile__("movw %%cs, %%ax;" :"=a"(newregs->xcs));$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#195: FILE: include/asm-i386/kexec.h:66:
+               __asm__ __volatile__("movw %%cs, %%ax;" :"=a"(newregs->xcs));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: include/asm-i386/kexec.h:67:
+               __asm__ __volatile__("movw %%ds, %%ax;" :"=a"(newregs->xds));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: include/asm-i386/kexec.h:67:
+               __asm__ __volatile__("movw %%ds, %%ax;" :"=a"(newregs->xds));$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#196: FILE: include/asm-i386/kexec.h:67:
+               __asm__ __volatile__("movw %%ds, %%ax;" :"=a"(newregs->xds));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: include/asm-i386/kexec.h:68:
+               __asm__ __volatile__("movw %%es, %%ax;" :"=a"(newregs->xes));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/asm-i386/kexec.h:68:
+               __asm__ __volatile__("movw %%es, %%ax;" :"=a"(newregs->xes));$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#197: FILE: include/asm-i386/kexec.h:68:
+               __asm__ __volatile__("movw %%es, %%ax;" :"=a"(newregs->xes));
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: include/asm-i386/kexec.h:69:
+               __asm__ __volatile__("pushfl; popl %0" :"=m"(newregs->eflags));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: include/asm-i386/kexec.h:69:
+               __asm__ __volatile__("pushfl; popl %0" :"=m"(newregs->eflags));$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#198: FILE: include/asm-i386/kexec.h:69:
+               __asm__ __volatile__("pushfl; popl %0" :"=m"(newregs->eflags));
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: include/asm-i386/kexec.h:71:
+               newregs->eip = (unsigned long)current_text_addr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: include/asm-i386/kexec.h:71:
+               newregs->eip = (unsigned long)current_text_addr();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/asm-i386/kexec.h:72:
+       }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 24 warnings, 6 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
