ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#62: FILE: drivers/i2c/chips/it87.c:3:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus
                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <Super>
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SMbus>
#65: FILE: drivers/i2c/chips/it87.c:5:
+              IT8712F  Super I/O chip w/LPC interface & SMbus

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#106: FILE: drivers/i2c/chips/it87.c:440:
+	struct i2c_client *client =3D to_i2c_client(dev);
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: drivers/i2c/chips/it87.c:441:
+	struct it87_data *data =3D i2c_get_clientdata(client);
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: drivers/i2c/chips/it87.c:442:
+	struct it87_data *data =3D i2c_get_clientdata(client);
+	it87_update_client(client);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#109: FILE: drivers/i2c/chips/it87.c:443:
+	if (data->sensor & (1 << nr))
+	    return sprintf(buf, "1\n");

WARNING:TABSTOP: Statements should start on a tabstop
#110: FILE: drivers/i2c/chips/it87.c:444:
+	    return sprintf(buf, "1\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#111: FILE: drivers/i2c/chips/it87.c:445:
+	if (data->sensor & (8 << nr))
+	    return sprintf(buf, "2\n");

WARNING:TABSTOP: Statements should start on a tabstop
#112: FILE: drivers/i2c/chips/it87.c:446:
+	    return sprintf(buf, "2\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: drivers/i2c/chips/it87.c:449:
+}
+static ssize_t set_sensor(struct device *dev, const char *buf,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#115: FILE: drivers/i2c/chips/it87.c:449:
+static ssize_t set_sensor(struct device *dev, const char *buf,=20
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#115: FILE: drivers/i2c/chips/it87.c:449:
+static ssize_t set_sensor(struct device *dev, const char *buf,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#118: FILE: drivers/i2c/chips/it87.c:452:
+	struct i2c_client *client =3D to_i2c_client(dev);
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: drivers/i2c/chips/it87.c:453:
+	struct it87_data *data =3D i2c_get_clientdata(client);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#120: FILE: drivers/i2c/chips/it87.c:454:
+	int val =3D simple_strtol(buf, NULL, 10);
 	        ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#120: FILE: drivers/i2c/chips/it87.c:454:
+	int val =3D simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#122: FILE: drivers/i2c/chips/it87.c:456:
+	data->sensor &=3D ~(1 << nr);
 	             ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#123: FILE: drivers/i2c/chips/it87.c:457:
+	data->sensor &=3D ~(8 << nr);
 	             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#124: FILE: drivers/i2c/chips/it87.c:458:
+	if (val =3D=3D 1)
+	    data->sensor |=3D 1 << nr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#124: FILE: drivers/i2c/chips/it87.c:458:
+	if (val =3D=3D 1)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: drivers/i2c/chips/it87.c:458:
+	if (val =3D=3D 1)
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#124: FILE: drivers/i2c/chips/it87.c:458:
+	if (val =3D=3D 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#125: FILE: drivers/i2c/chips/it87.c:459:
+	    data->sensor |=3D 1 << nr;
 	                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#126: FILE: drivers/i2c/chips/it87.c:460:
+	else if (val =3D=3D 2)
+	    data->sensor |=3D 8 << nr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: drivers/i2c/chips/it87.c:460:
+	else if (val =3D=3D 2)
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: drivers/i2c/chips/it87.c:460:
+	else if (val =3D=3D 2)
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: drivers/i2c/chips/it87.c:460:
+	else if (val =3D=3D 2)

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#127: FILE: drivers/i2c/chips/it87.c:461:
+	    data->sensor |=3D 8 << nr;
 	                 ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: drivers/i2c/chips/it87.c:465:
+}
+#define show_sensor_offset(offset)					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/i2c/chips/it87.c:466:
+static ssize_t show_sensor_##offset (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: drivers/i2c/chips/it87.c:470:
+static ssize_t set_sensor_##offset (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/i2c/chips/it87.c:470:
+static ssize_t set_sensor_##offset (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: drivers/i2c/chips/it87.c:471:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: drivers/i2c/chips/it87.c:475:
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR,^I ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#141: FILE: drivers/i2c/chips/it87.c:475:
+static DEVICE_ATTR(sensor##offset, S_IRUGO | S_IWUSR,	 		\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/i2c/chips/it87.c:639:
+	memset (new_client, 0x00, sizeof(struct i2c_client) + sizeof(struct it87_=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#164: FILE: drivers/i2c/chips/it87.c:639:
+	memset (new_client, 0x00, sizeof(struct i2c_client) + sizeof(struct it87_=
 	                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: drivers/i2c/chips/it87.c:886:
+	data->sensor =3D (it87_read_value(client, IT87_REG_TEMP_ENABLE) & 0xc0);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#239: FILE: drivers/i2c/chips/it87.c:886:
+	data->sensor =3D (it87_read_value(client, IT87_REG_TEMP_ENABLE) & 0xc0);
 	             ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#240: FILE: drivers/i2c/chips/it87.c:887:
+	data->sensor |=3D temp_type & 0x3f;
 	             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372630.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 17 warnings, 6 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372630.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
