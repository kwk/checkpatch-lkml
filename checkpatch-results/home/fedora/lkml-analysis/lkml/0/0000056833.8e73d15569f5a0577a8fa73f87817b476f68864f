WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
AT-compatible except for new registers, more nvram, and system wakeup hooks.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: drivers/rtc/rtc-acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/rtc/rtc-acpi.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#213: FILE: drivers/rtc/rtc-acpi.c:83:
+	if (acpi_gbl_FADT->day_alrm) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: drivers/rtc/rtc-acpi.c:87:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#220: FILE: drivers/rtc/rtc-acpi.c:90:
+	if (acpi_gbl_FADT->mon_alrm) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#224: FILE: drivers/rtc/rtc-acpi.c:94:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: drivers/rtc/rtc-acpi.c:100:
+	if (((unsigned)t->time.tm_sec) < 0x60)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: drivers/rtc/rtc-acpi.c:104:
+	if (((unsigned)t->time.tm_min) < 0x60)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: drivers/rtc/rtc-acpi.c:108:
+	if (((unsigned)t->time.tm_hour) < 0x24)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/rtc/rtc-acpi.c:206:
+		pr_debug("%s: recorded irq_freq %d was wrong (not %d)\n",
+			cmos->rtc->class_dev.class_id,

WARNING:CONST_STRUCT: struct rtc_class_ops should normally be const
#422: FILE: drivers/rtc/rtc-acpi.c:292:
+static struct rtc_class_ops cmos_rtc_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: drivers/rtc/rtc-acpi.c:310:
+	spin_lock (&rtc_lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: drivers/rtc/rtc-acpi.c:312:
+	spin_unlock (&rtc_lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#444: FILE: drivers/rtc/rtc-acpi.c:314:
+	if (irqstat) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#450: FILE: drivers/rtc/rtc-acpi.c:320:
+	} else

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#461: FILE: drivers/rtc/rtc-acpi.c:331:
+pr_debug("%s\n", __FUNCTION__);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#468: FILE: drivers/rtc/rtc-acpi.c:338:
+static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/rtc/rtc-acpi.c:350:
+	dev_info(&pnp->dev, "%s RTC%s%s, 1 %s alarm\n",
+			({ char *s; switch (id->driver_data) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#481: FILE: drivers/rtc/rtc-acpi.c:351:
+			case RTC_AT:	s = "AT compatible"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#482: FILE: drivers/rtc/rtc-acpi.c:352:
+			case RTC_PIIX4:	s = "PIIX4"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#483: FILE: drivers/rtc/rtc-acpi.c:353:
+			case RTC_DALLAS:s = "Dallas"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#484: FILE: drivers/rtc/rtc-acpi.c:354:
+			default:	s = "*unknown*"; break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/rtc/rtc-acpi.c:365:
+	acpi_rtc.rtc = rtc_device_register(driver_name, &pnp->dev,
+				&cmos_rtc_ops, THIS_MODULE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/rtc/rtc-acpi.c:374:
+	retval = request_irq(rtc_irq, cmos_interrupt, IRQF_DISABLED,
+				acpi_rtc.rtc->class_dev.class_id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#507: FILE: drivers/rtc/rtc-acpi.c:377:
+		printk(KERN_ERR "%s: IRQ %d already in use\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/rtc/rtc-acpi.c:378:
+		printk(KERN_ERR "%s: IRQ %d already in use\n",
+				acpi_rtc.rtc->class_dev.class_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/rtc/rtc-acpi.c:385:
+	retval = request_resource(&ioport_resource,
+				&pnp->res.port_resource[0]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/rtc/rtc-acpi.c:387:
+		printk(KERN_ERR "%s: i/o registers already in use\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/rtc/rtc-acpi.c:388:
+		printk(KERN_ERR "%s: i/o registers already in use\n",
+				acpi_rtc.rtc->class_dev.class_id);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#531: FILE: drivers/rtc/rtc-acpi.c:401:
+	rtc_control &= ~(RTC_PIE|RTC_AIE|RTC_UIE|RTC_DM_BINARY);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#531: FILE: drivers/rtc/rtc-acpi.c:401:
+	rtc_control &= ~(RTC_PIE|RTC_AIE|RTC_UIE|RTC_DM_BINARY);
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#531: FILE: drivers/rtc/rtc-acpi.c:401:
+	rtc_control &= ~(RTC_PIE|RTC_AIE|RTC_UIE|RTC_DM_BINARY);
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/rtc/rtc-acpi.c:413:
+	acpi_install_fixed_event_handler(ACPI_EVENT_RTC,
+			cmos_acpi_handler, &acpi_rtc.rtc->class_dev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#555: FILE: drivers/rtc/rtc-acpi.c:425:
+static void __devexit cmos_remove(struct pnp_dev *pnp)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#560: FILE: drivers/rtc/rtc-acpi.c:430:
+	rtc_control &= ~(RTC_PIE|RTC_AIE|RTC_UIE);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#560: FILE: drivers/rtc/rtc-acpi.c:430:
+	rtc_control &= ~(RTC_PIE|RTC_AIE|RTC_UIE);
 	                                ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#589: FILE: drivers/rtc/rtc-acpi.c:459:
+pr_debug("%s, EVENT_RTC %sabled\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/rtc/rtc-acpi.c:460:
+pr_debug("%s, EVENT_RTC %sabled\n", __FUNCTION__,
+	device_may_wakeup(&pnp->dev) ? "en" : "dis");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#601: FILE: drivers/rtc/rtc-acpi.c:471:
+pr_debug("%s\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/rtc/rtc-acpi.c:492:
+	.name		= (char *) driver_name,

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#654: FILE: drivers/acpi/sleep/proc.c:73:
+#if defined(CONFIG_RTC_DRV_ACPI) || defined(CONFIG_RTC_DRV_ACPI_MODULE)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#724: FILE: drivers/acpi/utilities/utglobal.c:843:
+ACPI_EXPORT_SYMBOL(acpi_gbl_FADT)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000056833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 17 warnings, 22 checks, 608 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000056833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
