WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
The patch also changes iounmap_explicit() to allow for the unmapping of all 

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#45: 
Signed-off-by:  John Rose <johnrose@austin.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: arch/ppc64/mm/imalloc.c:44:
+static inline int im_region_is_subset(unsigned long v_addr, unsigned long size,
+			struct vm_struct *parent)

CHECK:SPACING: No space is necessary after a cast
#61: FILE: arch/ppc64/mm/imalloc.c:46:
+	return (int) (v_addr >= (unsigned long) parent->addr &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: arch/ppc64/mm/imalloc.c:47:
+^I              v_addr < (unsigned long) parent->addr + parent->size &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#62: FILE: arch/ppc64/mm/imalloc.c:47:
+	              v_addr < (unsigned long) parent->addr + parent->size &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: arch/ppc64/mm/imalloc.c:48:
+^I    ^I      size < parent->size);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: arch/ppc64/mm/imalloc.c:48:
+^I    ^I      size < parent->size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: arch/ppc64/mm/imalloc.c:55:
+static int im_region_is_superset(unsigned long v_addr, unsigned long size,
+		struct vm_struct *child)

CHECK:SPACING: No space is necessary after a cast
#74: FILE: arch/ppc64/mm/imalloc.c:59:
+	parent.addr = (void *) v_addr;

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/ppc64/mm/imalloc.c:62:
+	return im_region_is_subset((unsigned long) child->addr, child->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: arch/ppc64/mm/imalloc.c:74:
+static int im_region_overlaps(unsigned long v_addr, unsigned long size,
 		     struct vm_struct *vm)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: arch/ppc64/mm/imalloc.c:99:
+static int im_region_status(unsigned long v_addr, unsigned long size,
 		    struct vm_struct **vm)

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/ppc64/mm/imalloc.c:104:
+		if (v_addr < (unsigned long) tmp->addr + tmp->size)

CHECK:SPACING: No space is necessary after a cast
#156: FILE: arch/ppc64/mm/imalloc.c:120:
+		else if (v_addr == (unsigned long) tmp->addr &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#156: FILE: arch/ppc64/mm/imalloc.c:120:
+		}
+		else if (v_addr == (unsigned long) tmp->addr &&

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/ppc64/mm/imalloc.c:121:
+^I^I ^I size == tmp->size) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: arch/ppc64/mm/imalloc.c:121:
+^I^I ^I size == tmp->size) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: arch/ppc64/mm/imalloc.c:121:
+		else if (v_addr == (unsigned long) tmp->addr &&
+		 	 size == tmp->size) {

CHECK:SPACING: No space is necessary after a cast
#187: FILE: arch/ppc64/mm/init.c:400:
+	area = im_get_area((unsigned long) addr, size, IM_REGION_SUPERSET);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!area"
#188: FILE: arch/ppc64/mm/init.c:401:
+	if (area == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#193: FILE: arch/ppc64/mm/init.c:406:
+		area = im_get_area((unsigned long) addr, size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: arch/ppc64/mm/init.c:407:
+		area = im_get_area((unsigned long) addr, size,
+				IM_REGION_SUPERSET);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: arch/ppc64/mm/init.c:432:
+			printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/ppc64/mm/init.c:434:
+ ^I^I^I^I__FUNCTION__, (unsigned long) addr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: arch/ppc64/mm/init.c:434:
+ ^I^I^I^I__FUNCTION__, (unsigned long) addr);$

CHECK:SPACING: No space is necessary after a cast
#219: FILE: arch/ppc64/mm/init.c:434:
+ 				__FUNCTION__, (unsigned long) addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/ppc64/mm/init.c:434:
+ ^I^I^I^I__FUNCTION__, (unsigned long) addr);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: arch/ppc64/mm/init.c:434:
+ 				__FUNCTION__, (unsigned long) addr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000258569.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 16 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000258569.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
