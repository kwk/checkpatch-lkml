WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: aio.c:1:
+#define __KERNEL_SYSCALLS__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);
                                           ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#150: FILE: aio.c:32:
+_syscall2(long,io_setup,unsigned,nr_events,aio_context_t *,context);
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: aio.c:33:
+_syscall1(long,io_destroy,aio_context_t,context);
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: aio.c:33:
+_syscall1(long,io_destroy,aio_context_t,context);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: aio.c:33:
+_syscall1(long,io_destroy,aio_context_t,context);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#152: FILE: aio.c:34:
+_syscall3(long,io_submit,aio_context_t,context,long,nr,struct iocb **,iocbs);
                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#153: FILE: aio.c:35:
+_syscall3(long,io_cancel,aio_context_t,context,struct iocb *,iocb,struct io_event *,results);
                                                                                    ^

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#154: FILE: aio.c:36:
+_syscall5(long,io_getevents,aio_context_t,context,long,min_nr,long,nr,struct io_event *,events,struct timespec *,timeout);
                                                                                                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: tiotest.c:28:
+long io_setup(unsigned, aio_context_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#165: FILE: tiotest.c:29:
+long io_destroy(aio_context_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_context_t' should also have an identifier name
#165: FILE: tiotest.c:29:
+long io_destroy(aio_context_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#166: FILE: tiotest.c:30:
+long io_submit(aio_context_t, long, struct iocb **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_context_t' should also have an identifier name
#166: FILE: tiotest.c:30:
+long io_submit(aio_context_t, long, struct iocb **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#166: FILE: tiotest.c:30:
+long io_submit(aio_context_t, long, struct iocb **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iocb **' should also have an identifier name
#166: FILE: tiotest.c:30:
+long io_submit(aio_context_t, long, struct iocb **);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_context_t' should also have an identifier name
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct io_event *' should also have an identifier name
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timespec *' should also have an identifier name
#167: FILE: tiotest.c:31:
+long io_getevents(aio_context_t, long, long, struct io_event *, struct timespec *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#168: FILE: tiotest.c:32:
+long io_cancel(aio_context_t, struct iocb *, struct io_event *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aio_context_t' should also have an identifier name
#168: FILE: tiotest.c:32:
+long io_cancel(aio_context_t, struct iocb *, struct io_event *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iocb *' should also have an identifier name
#168: FILE: tiotest.c:32:
+long io_cancel(aio_context_t, struct iocb *, struct io_event *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct io_event *' should also have an identifier name
#168: FILE: tiotest.c:32:
+long io_cancel(aio_context_t, struct iocb *, struct io_event *);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#179: FILE: tiotest.c:82:
+	if (args.style == MmapIO)
 	printf("warning: LARGEFILES with MMAP needs mmap64 support which is not working yet in tiotest!\n");

CHECK:CAMELCASE: Avoid CamelCase: <MmapIO>
#179: FILE: tiotest.c:82:
+	if (args.style == MmapIO)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that open parenthesis '('
#188: FILE: tiotest.c:126:
+		c = getopt( argc, argv, "f:b:d:t:r:D:k:o:hLRTWSOcamw");

CHECK:CAMELCASE: Avoid CamelCase: <AsyncIO>
#196: FILE: tiotest.c:134:
+			args->style = AsyncIO;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#217: FILE: tiotest.c:891:
+		(unsigned long long)offset, wr );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: tiotest.c:899:
+^I^I"Error in randomwrite, off=%Ld, read=%ld, seeks=%ld : ", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#231: FILE: tiotest.c:899:
+		"Error in randomwrite, off=%Ld, read=%ld, seeks=%ld : ", 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#232: FILE: tiotest.c:900:
+		(unsigned long long)offset, (long)bytesWritten, wr );

CHECK:CAMELCASE: Avoid CamelCase: <bytesWritten>
#232: FILE: tiotest.c:900:
+		(unsigned long long)offset, (long)bytesWritten, wr );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: tiotest.c:909:
+^I^I"Error in seek/read, off=%Ld, read=%ld, seeks=%ld : ", $

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#246: FILE: tiotest.c:909:
+		"Error in seek/read, off=%Ld, read=%ld, seeks=%ld : ", 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#247: FILE: tiotest.c:910:
+		(unsigned long long)offset, (long)bytesRead, rd );

CHECK:CAMELCASE: Avoid CamelCase: <bytesRead>
#247: FILE: tiotest.c:910:
+		(unsigned long long)offset, (long)bytesRead, rd );

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: tiotest.c:929:
+	struct timespec time;
+	time.tv_nsec = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <debugLevel>
#271: FILE: tiotest.c:934:
+		if (args.debugLevel > 1)

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: tiotest.c:942:
+				struct iocb *err_iocb;
+				perror("io request failed");

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: tiotest.c:945:
+				fprintf(stderr, "func = %s, "
+						"result = %Ld, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#282: FILE: tiotest.c:945:
+						"result = %Ld, "

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: tiotest.c:946:
+						"result = %Ld, "
+						"opcode = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#284: FILE: tiotest.c:947:
+						"opcode = %d, "
+						"offset = 0x%Lx, "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#284: FILE: tiotest.c:947:
+						"offset = 0x%Lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: tiotest.c:948:
+						"offset = 0x%Lx, "
+						"buf = 0x%p, "

WARNING:SPLIT_STRING: quoted string split across lines
#286: FILE: tiotest.c:949:
+						"buf = 0x%p, "
+						"len = 0x%Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#286: FILE: tiotest.c:949:
+						"len = 0x%Lx\n",

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#309: FILE: tiotest.c:972:
+static int aio_setup(int fd, aio_context_t *context, struct iocb ***iocb_ptr_array, struct iocb **iocbs, struct io_event **events)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#315: FILE: tiotest.c:978:
+	if (!(*iocbs = calloc(NR_AIO_OPS, sizeof(struct iocb)))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#319: FILE: tiotest.c:982:
+	if (!(*iocb_ptr_array = calloc(NR_AIO_OPS, sizeof(struct iocb *)))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: tiotest.c:987:
+		int k;
+		for (k = 0; k < NR_AIO_OPS; ++k)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#327: FILE: tiotest.c:990:
+	if (!(*events = calloc(NR_AIO_OPS, sizeof(struct io_event)))) {

CHECK:CAMELCASE: Avoid CamelCase: <openFlags>
#352: FILE: tiotest.c:1012:
+	int     openFlags, iocb_idx = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: tiotest.c:1046:
+^I^Iif (!args.rawDrives) $

CHECK:CAMELCASE: Avoid CamelCase: <rawDrives>
#390: FILE: tiotest.c:1046:
+		if (!args.rawDrives) 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: tiotest.c:1047:
+			ftruncate(fd,bytesize); /* pre-allocate space */
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: tiotest.c:1048:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
 		                                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: tiotest.c:1049:
+		file_loc=mmap(NULL,bytesize,PROT_READ|PROT_WRITE,MAP_SHARED,fd,
+			d->fileOffset);

CHECK:CAMELCASE: Avoid CamelCase: <fileOffset>
#393: FILE: tiotest.c:1049:
+			d->fileOffset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: tiotest.c:1050:
+^I^Iif(file_loc == MAP_FAILED) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#394: FILE: tiotest.c:1050:
+		if(file_loc == MAP_FAILED) 
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#394: FILE: tiotest.c:1050:
+		if(file_loc == MAP_FAILED) 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#406: FILE: tiotest.c:1062:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )
+		{

ERROR:SPACING: space prohibited after that open parenthesis '('
#406: FILE: tiotest.c:1062:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#406: FILE: tiotest.c:1062:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

ERROR:SPACING: space required before the open parenthesis '('
#406: FILE: tiotest.c:1062:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

CHECK:CAMELCASE: Avoid CamelCase: <blocksRandomWritten>
#408: FILE: tiotest.c:1064:
+			report_seek_error(d->fileOffset, d->blocksRandomWritten);

CHECK:BRACES: braces {} should be used on all arms of this statement
#428: FILE: tiotest.c:1077:
+		if (args.style == MmapIO)
[...]
+		else if (args.style == AsyncIO) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: tiotest.c:1078:
+			memcpy(file_loc + i * d->blockSize,buf,d->blockSize);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: tiotest.c:1078:
+			memcpy(file_loc + i * d->blockSize,buf,d->blockSize);
 			                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <blockSize>
#429: FILE: tiotest.c:1078:
+			memcpy(file_loc + i * d->blockSize,buf,d->blockSize);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#434: FILE: tiotest.c:1083:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#434: FILE: tiotest.c:1083:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_write_test', this function's name, in a string
#437: FILE: tiotest.c:1086:
+					perror("do_write_test: error submitting io requests");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#441: FILE: tiotest.c:1090:
+			iocbs[iocb_idx].aio_lio_opcode =IOCB_CMD_PWRITE;
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#445: FILE: tiotest.c:1094:
+			iocbs[iocb_idx].aio_offset = i*d->blockSize;
 			                              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#448: FILE: tiotest.c:1097:
+			if( write( fd, buf, d->blockSize ) != d->blockSize )
+			{

ERROR:SPACING: space prohibited after that open parenthesis '('
#448: FILE: tiotest.c:1097:
+			if( write( fd, buf, d->blockSize ) != d->blockSize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#448: FILE: tiotest.c:1097:
+			if( write( fd, buf, d->blockSize ) != d->blockSize )

ERROR:SPACING: space required before the open parenthesis '('
#448: FILE: tiotest.c:1097:
+			if( write( fd, buf, d->blockSize ) != d->blockSize )

CHECK:BRACES: braces {} should be used on all arms of this statement
#468: FILE: tiotest.c:1118:
+	if (args.style == MmapIO)
[...]
+	else if (args.style == AsyncIO) {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#469: FILE: tiotest.c:1119:
+		munmap(file_loc,bytesize);
 		               ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#472: FILE: tiotest.c:1122:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#472: FILE: tiotest.c:1122:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_write_test', this function's name, in a string
#475: FILE: tiotest.c:1125:
+			perror("do_write_test: error submitting io requests");

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#525: FILE: tiotest.c:1218:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#525: FILE: tiotest.c:1218:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#528: FILE: tiotest.c:1221:
+					perror("do_random_write_test: error submitting io requests");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_random_write_test', this function's name, in a string
#528: FILE: tiotest.c:1221:
+					perror("do_random_write_test: error submitting io requests");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#532: FILE: tiotest.c:1225:
+			iocbs[iocb_idx].aio_lio_opcode =IOCB_CMD_PWRITE;
 			                               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#539: FILE: tiotest.c:1232:
+			if( (bytesWritten = write( fd, buf, d->blockSize )) != d->blockSize )
+			{

ERROR:SPACING: space prohibited after that open parenthesis '('
#539: FILE: tiotest.c:1232:
+			if( (bytesWritten = write( fd, buf, d->blockSize )) != d->blockSize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#539: FILE: tiotest.c:1232:
+			if( (bytesWritten = write( fd, buf, d->blockSize )) != d->blockSize )

ERROR:SPACING: space required before the open parenthesis '('
#539: FILE: tiotest.c:1232:
+			if( (bytesWritten = write( fd, buf, d->blockSize )) != d->blockSize )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#539: FILE: tiotest.c:1232:
+			if( (bytesWritten = write( fd, buf, d->blockSize )) != d->blockSize )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: tiotest.c:1234:
+^I^I^I^Ireport_random_write_error(offset, bytesWritten, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: tiotest.c:1235:
+				report_random_write_error(offset, bytesWritten, 
+					d->blocksRandomWritten);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#557: FILE: tiotest.c:1257:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#557: FILE: tiotest.c:1257:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#613: FILE: tiotest.c:1309:
+		file_loc=mmap(NULL,bytesize,PROT_READ,MAP_SHARED,fd,d->fileOffset);
 		                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: tiotest.c:1310:
+^I^Iif(file_loc == MAP_FAILED) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#614: FILE: tiotest.c:1310:
+		if(file_loc == MAP_FAILED) 
+		{

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: tiotest.c:1310:
+		if(file_loc == MAP_FAILED) 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#626: FILE: tiotest.c:1322:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )
+		{

ERROR:SPACING: space prohibited after that open parenthesis '('
#626: FILE: tiotest.c:1322:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#626: FILE: tiotest.c:1322:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: tiotest.c:1322:
+		if( tlseek( fd, d->fileOffset, SEEK_SET ) != d->fileOffset )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: tiotest.c:1324:
+^I^I^Ireport_seek_error(d->fileOffset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: tiotest.c:1325:
+			report_seek_error(d->fileOffset, 
+				d->blocksRandomWritten);

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: tiotest.c:1338:
+		if (args.style == MmapIO)
[...]
+		else if (args.style == AsyncIO) {
[...]
+		} else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: tiotest.c:1339:
+			memcpy(buf,file_loc + i * d->blockSize,d->blockSize);
 			          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: tiotest.c:1339:
+			memcpy(buf,file_loc + i * d->blockSize,d->blockSize);
 			                                      ^

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#655: FILE: tiotest.c:1344:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#655: FILE: tiotest.c:1344:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_read_test', this function's name, in a string
#658: FILE: tiotest.c:1347:
+					perror("do_read_test: error submitting io requests");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#662: FILE: tiotest.c:1351:
+			iocbs[iocb_idx].aio_lio_opcode =IOCB_CMD_PREAD;
 			                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: tiotest.c:1355:
+			iocbs[iocb_idx].aio_offset = i*d->blockSize;
 			                              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#669: FILE: tiotest.c:1358:
+			if( read( fd, buf, d->blockSize ) != d->blockSize )
+			{

ERROR:SPACING: space prohibited after that open parenthesis '('
#669: FILE: tiotest.c:1358:
+			if( read( fd, buf, d->blockSize ) != d->blockSize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#669: FILE: tiotest.c:1358:
+			if( read( fd, buf, d->blockSize ) != d->blockSize )

ERROR:SPACING: space required before the open parenthesis '('
#669: FILE: tiotest.c:1358:
+			if( read( fd, buf, d->blockSize ) != d->blockSize )

CHECK:BRACES: braces {} should be used on all arms of this statement
#686: FILE: tiotest.c:1394:
+	if (args.style == MmapIO)
[...]
+	else if (args.style == AsyncIO) {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#687: FILE: tiotest.c:1395:
+		munmap(file_loc,bytesize);
 		               ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#690: FILE: tiotest.c:1398:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#690: FILE: tiotest.c:1398:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#747: FILE: tiotest.c:1486:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#747: FILE: tiotest.c:1486:
+					if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, NR_AIO_OPS))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_random_read_test', this function's name, in a string
#750: FILE: tiotest.c:1489:
+					perror("do_random_read_test: error submitting io requests");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#754: FILE: tiotest.c:1493:
+			iocbs[iocb_idx].aio_lio_opcode =IOCB_CMD_PREAD;
 			                               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#761: FILE: tiotest.c:1500:
+			if( (bytesRead = read( fd, buf, d->blockSize )) != d->blockSize )
+			{

ERROR:SPACING: space prohibited after that open parenthesis '('
#761: FILE: tiotest.c:1500:
+			if( (bytesRead = read( fd, buf, d->blockSize )) != d->blockSize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#761: FILE: tiotest.c:1500:
+			if( (bytesRead = read( fd, buf, d->blockSize )) != d->blockSize )

ERROR:SPACING: space required before the open parenthesis '('
#761: FILE: tiotest.c:1500:
+			if( (bytesRead = read( fd, buf, d->blockSize )) != d->blockSize )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#761: FILE: tiotest.c:1500:
+			if( (bytesRead = read( fd, buf, d->blockSize )) != d->blockSize )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: tiotest.c:1502:
+^I^I^I^Ireport_read_error(offset, bytesRead, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: tiotest.c:1503:
+				report_read_error(offset, bytesRead, 
+					d->blocksRandomRead);

CHECK:CAMELCASE: Avoid CamelCase: <blocksRandomRead>
#764: FILE: tiotest.c:1503:
+					d->blocksRandomRead);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#779: FILE: tiotest.c:1538:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#779: FILE: tiotest.c:1538:
+			if (aio_wait(__FUNCTION__, context, fd, iocb_ptr_array, iocbs, events, iocb_idx))

CHECK:CAMELCASE: Avoid CamelCase: <ioStyle>
#810: FILE: tiotest.h:156:
+enum ioStyle {

CHECK:CAMELCASE: Avoid CamelCase: <NormalIO>
#811: FILE: tiotest.h:157:
+	NormalIO,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 100 errors, 57 warnings, 24 checks, 732 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
