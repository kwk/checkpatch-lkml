WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: include/linux/ktime.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: include/linux/ktime.h:2:
+ *  include/linux/ktime.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#77: FILE: include/linux/ktime.h:32:
+ * endian-aware order of the tv struct members is choosen to allow
                                                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#85: FILE: include/linux/ktime.h:40:
+typedef union {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ts' - possible side-effects?
#160: FILE: include/linux/ktime.h:115:
+#define timespec_to_ktime(ts)		ktime_set((ts).tv_sec, (ts).tv_nsec)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tv' - possible side-effects?
#163: FILE: include/linux/ktime.h:118:
+#define timeval_to_ktime(tv)		ktime_set((tv).tv_sec, (tv).tv_usec * 1000)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#217: FILE: include/linux/ktime.h:172:
+#define ktime_get_low(kt)		(kt).tv.nsec

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#220: FILE: include/linux/ktime.h:175:
+#define ktime_get_high(kt)		(kt).tv.sec

WARNING:TYPO_SPELLING: 'substraction' may be misspelled - perhaps 'subtraction'?
#228: FILE: include/linux/ktime.h:183:
+ * Returns the remainder of the substraction
                                 ^^^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/ktime.h:231:
+extern ktime_t ktime_add_ns(const ktime_t kt, u64 nsec);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: include/linux/ktime.h:243:
+^I^I^I   ^I   .nsec = (s32)ts.tv_nsec } };$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: include/linux/ktime.h:243:
+^I^I^I   ^I   .nsec = (s32)ts.tv_nsec } };$

CHECK:SPACING: No space is necessary after a cast
#313: FILE: include/linux/ktime.h:268:
+	return (struct timespec) { .tv_sec = (time_t) kt.tv.sec,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#314: FILE: include/linux/ktime.h:269:
+				   .tv_nsec = (long) kt.tv.nsec };

CHECK:SPACING: No space is necessary after a cast
#327: FILE: include/linux/ktime.h:282:
+		.tv_sec = (time_t) kt.tv.sec,

CHECK:SPACING: No space is necessary after a cast
#328: FILE: include/linux/ktime.h:283:
+		.tv_usec = (suseconds_t) (kt.tv.nsec / NSEC_PER_USEC) };

CHECK:SPACING: No space is necessary after a cast
#339: FILE: include/linux/ktime.h:294:
+	return nsec_to_clock_t( (u64) kt.tv.sec * NSEC_PER_SEC + kt.tv.nsec);

ERROR:SPACING: space prohibited after that open parenthesis '('
#339: FILE: include/linux/ktime.h:294:
+	return nsec_to_clock_t( (u64) kt.tv.sec * NSEC_PER_SEC + kt.tv.nsec);

CHECK:SPACING: No space is necessary after a cast
#350: FILE: include/linux/ktime.h:305:
+	return (u64) kt.tv.sec * NSEC_PER_SEC + kt.tv.nsec;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129851.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 9 checks, 310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129851.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
