WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -urpN --exclude-from=/home/davej/.exclude bk-linus/include/linux/fs.h inode/include/linux/fs.h

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'arg > 1'
#109: FILE: arch/um/drivers/ubd_kern.c:918:
+		if((arg > 1) || (inode->type.i_bdev->bd_contains != inode->type.i_bdev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->type.i_bdev->bd_contains != inode->type.i_bdev'
#109: FILE: arch/um/drivers/ubd_kern.c:918:
+		if((arg > 1) || (inode->type.i_bdev->bd_contains != inode->type.i_bdev))

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: arch/um/drivers/ubd_kern.c:918:
+		if((arg > 1) || (inode->type.i_bdev->bd_contains != inode->type.i_bdev))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#118: FILE: arch/um/drivers/ubd_kern.c:938:
+		if(inode->type.i_bdev->bd_contains != inode->type.i_bdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: drivers/acorn/block/mfmhd.c:1171:
+	if (put_user (get_start_sect(inode->type.i_bdev), &geo->start))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/block/DAC960.c:5616:
+      Inode->type.i_bdev->bd_invalidated = 1;$

CHECK:CAMELCASE: Avoid CamelCase: <Inode>
#172: FILE: drivers/block/DAC960.c:5616:
+      Inode->type.i_bdev->bd_invalidated = 1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/block/DAC960.c:5712:
+      Geometry.start = get_start_sect(Inode->type.i_bdev);$

CHECK:CAMELCASE: Avoid CamelCase: <Geometry>
#181: FILE: drivers/block/DAC960.c:5712:
+      Geometry.start = get_start_sect(Inode->type.i_bdev);

ERROR:SPACING: space prohibited after that open parenthesis '('
#219: FILE: drivers/block/acsi.c:1137:
+		check_disk_change( inode->type.i_bdev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#219: FILE: drivers/block/acsi.c:1137:
+		check_disk_change( inode->type.i_bdev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#228: FILE: drivers/block/acsi.c:1145:
+		check_disk_change( inode->type.i_bdev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#228: FILE: drivers/block/acsi.c:1145:
+		check_disk_change( inode->type.i_bdev );

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/block/cciss.c:418:
+                driver_geo.start= get_start_sect(inode->type.i_bdev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/block/cciss.c:418:
+                driver_geo.start= get_start_sect(inode->type.i_bdev);$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#300: FILE: drivers/block/cciss.c:418:
+                driver_geo.start= get_start_sect(inode->type.i_bdev);
                                 ^

CHECK:SPACING: No space is necessary after a cast
#565: FILE: drivers/block/ps2esdi.c:1072:
+	put_user(get_start_sect(inode->type.i_bdev), (long *) &geometry->start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1047: FILE: drivers/md/md.c:2357:
+			err = put_user (get_start_sect(inode->type.i_bdev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1048: FILE: drivers/md/md.c:2358:
+			err = put_user (get_start_sect(inode->type.i_bdev),
 						(long *) &loc->start);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: drivers/md/md.c:2459:
+ ^Imddev_t *mddev = inode->type.i_bdev->bd_inode->u.generic_ip;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1065: FILE: drivers/md/md.c:2459:
+ ^Imddev_t *mddev = inode->type.i_bdev->bd_inode->u.generic_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: drivers/md/md.c:2459:
+ ^Imddev_t *mddev = inode->type.i_bdev->bd_inode->u.generic_ip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: drivers/mtd/devices/blkmtd.c:1106:
+  rdev = inode->type.i_bdev->bd_dev;$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ftl_open', this function's name, in a string
#1137: FILE: drivers/mtd/ftl.c:844:
+	DEBUG(0, "ftl_cs: ftl_open(%s)\n", inode->type.i_bdev->bd_disk->disk_name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CAMELCASE: Avoid CamelCase: <NFTLrecord>
#1250: FILE: drivers/mtd/nftlcore.c:759:
+	struct NFTLrecord *nftl = inode->type.i_bdev->bd_disk->private_data;

CHECK:CAMELCASE: Avoid CamelCase: <thisNFTL>
#1275: FILE: drivers/mtd/nftlcore.c:872:
+	struct NFTLrecord *thisNFTL = ip->type.i_bdev->bd_disk->private_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1507: FILE: fs/block_dev.c:398:
+	if (!inode->type.i_bdev) {
[...]
-	} else if (inode->i_bdev != bdev)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1622: FILE: fs/fifo.c:137:
+		struct pipe_inode_info *info = inode->type.i_pipe;
+		inode->type.i_pipe = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#1647: FILE: fs/inode.c:242:
+	if (inode->type.i_bdev)
[...]
-	else if (inode->i_cdev) {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1677: FILE: fs/pipe.c:274:
+		struct pipe_inode_info *info = inode->type.i_pipe;
+		inode->type.i_pipe = NULL;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*inode->type.i_pipe)...) over kmalloc(sizeof(struct pipe_inode_info)...)
#1687: FILE: fs/pipe.c:481:
+	inode->type.i_pipe = kmalloc(sizeof(struct pipe_inode_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1711: FILE: fs/reiserfs/journal.c:1929:
+		journal -> j_dev_bd = jdev_inode -> type.i_bdev;
 		        ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1711: FILE: fs/reiserfs/journal.c:1929:
+		journal -> j_dev_bd = jdev_inode -> type.i_bdev;
 		                                 ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1716: FILE: fs/reiserfs/journal.c:1933:
+		} else if( jdev_inode -> type.i_bdev == NULL ) {
 		                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1716: FILE: fs/reiserfs/journal.c:1933:
+		} else if( jdev_inode -> type.i_bdev == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1716: FILE: fs/reiserfs/journal.c:1933:
+		} else if( jdev_inode -> type.i_bdev == NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#1716: FILE: fs/reiserfs/journal.c:1933:
+		} else if( jdev_inode -> type.i_bdev == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!type.i_bdev"
#1716: FILE: fs/reiserfs/journal.c:1933:
+		} else if( jdev_inode -> type.i_bdev == NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1722: FILE: fs/reiserfs/journal.c:1938:
+			jdev = jdev_inode -> type.i_bdev -> bd_dev;
 			                  ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#1722: FILE: fs/reiserfs/journal.c:1938:
+			jdev = jdev_inode -> type.i_bdev -> bd_dev;
 			                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 12 warnings, 12 checks, 1425 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
