WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
a minimum of OS down time. This feature could also be used to provide inputs

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#247: FILE: arch/i386/Kconfig:40:
+config MEM_MIRROR
+	bool "Memory Mirroring (memory tracking support)"
+	depends on SMP
+	help
+	  Memory tracking support can be used by agents wishing to
+	  keep track of changes to memory while monitoring or copying
+	  memory contents.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: arch/i386/mm/init.c:708:
+void do_mm_track(void * val)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#278: FILE: arch/i386/mm/init.c:710:
+	pte_t *ptep = (pte_t*)val;

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#296: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: include/asm-i386/mm_track.h:1:
+#ifndef __I386_MMTRACK_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#310: FILE: include/asm-i386/mm_track.h:11:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: include/asm-i386/mm_track.h:21:
+  * environment.  When tracking is complete, the vector may be freed, but $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: include/asm-i386/mm_track.h:32:
+	unsigned long * vector;	// bit vector of modified pages

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#334: FILE: include/asm-i386/mm_track.h:35:
+};
+extern struct mm_tracker mm_tracking_struct;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: include/asm-i386/mm_track.h:43:
+extern void do_mm_track(void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#342: FILE: include/asm-i386/mm_track.h:43:
+extern void do_mm_track(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/asm-i386/mm_track.h:50:
+static __inline__ void mm_track(void * val)

WARNING:INLINE: plain inline is preferred over __inline__
#349: FILE: include/asm-i386/mm_track.h:50:
+static __inline__ void mm_track(void * val)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteptr' - possible side-effects?
#365: FILE: include/asm-i386/pgtable-2level.h:16:
+#define set_pte(pteptr, pteval)			\
+({						\
+	mm_track(pteptr);			\
+	*(pteptr) = pteval;			\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pmdptr' - possible side-effects?
#375: FILE: include/asm-i386/pgtable-2level.h:23:
+#define set_pmd(pmdptr, pmdval)			\
+({						\
+ 	mm_track(pmdptr);			\
+	*(pmdptr) = pmdval;			\
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: include/asm-i386/pgtable-2level.h:25:
+ ^Imm_track(pmdptr);^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#377: FILE: include/asm-i386/pgtable-2level.h:25:
+ ^Imm_track(pmdptr);^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: include/asm-i386/pgtable-2level.h:25:
+ ^Imm_track(pmdptr);^I^I^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: include/asm-i386/pgtable-2level.h:29:
+#define ptep_get_and_clear(mm,addr,xp)		\
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: include/asm-i386/pgtable-2level.h:29:
+#define ptep_get_and_clear(mm,addr,xp)		\
                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'xp' - possible side-effects?
#381: FILE: include/asm-i386/pgtable-2level.h:29:
+#define ptep_get_and_clear(mm,addr,xp)		\
+({						\
+	mm_track(xp);				\
+	__pte(xchg(&(xp)->pte_low, 0));		\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: include/asm-i386/pgtable-3level.h:63:
+#define set_pte_atomic(pteptr,pteval)					\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteptr' - possible side-effects?
#408: FILE: include/asm-i386/pgtable-3level.h:63:
+#define set_pte_atomic(pteptr,pteval)					\
+({									\
+ 	mm_track(pteptr);	 /* track the old page */		\
+	set_64bit((unsigned long long *)(pteptr),pte_val(pteval));	\
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: include/asm-i386/pgtable-3level.h:65:
+ ^Imm_track(pteptr);^I /* track the old page */^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: include/asm-i386/pgtable-3level.h:65:
+ ^Imm_track(pteptr);^I /* track the old page */^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: include/asm-i386/pgtable-3level.h:65:
+ ^Imm_track(pteptr);^I /* track the old page */^I^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: include/asm-i386/pgtable-3level.h:66:
+	set_64bit((unsigned long long *)(pteptr),pte_val(pteval));	\
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: include/asm-i386/pgtable-3level.h:68:
+#define set_pmd(pmdptr,pmdval)						\
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pmdptr' - possible side-effects?
#413: FILE: include/asm-i386/pgtable-3level.h:68:
+#define set_pmd(pmdptr,pmdval)						\
+({									\
+	mm_track(pmdptr);	/* track the old page */		\
+	set_64bit((unsigned long long *)(pmdptr),pmd_val(pmdval));	\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#416: FILE: include/asm-i386/pgtable-3level.h:71:
+	set_64bit((unsigned long long *)(pmdptr),pmd_val(pmdval));	\
 	                                        ^

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#475: FILE: include/asm-i386/pgtable.h:211:
+#define	pmd_bad(x)	((pmd_val(x) & (~PAGE_MASK & ~_PAGE_USER & ~_PAGE_SOFTDIRTY & ~_PAGE_ACCESSED)) != (_KERNPG_TABLE & ~_PAGE_ACCESSED))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#484: FILE: include/asm-i386/pgtable.h:221:
+static inline int pte_dirty(pte_t pte)		{ return (pte).pte_low & (_PAGE_DIRTY | _PAGE_SOFTDIRTY); }

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#493: FILE: include/asm-i386/pgtable.h:232:
+static inline pte_t pte_mkclean(pte_t pte)      { (pte).pte_low &= ~(_PAGE_SOFTDIRTY | _PAGE_DIRTY); return pte; }

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: include/asm-i386/pgtable.h:250:
+ ^Imm_track(ptep);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#504: FILE: include/asm-i386/pgtable.h:250:
+ ^Imm_track(ptep);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: include/asm-i386/pgtable.h:250:
+ ^Imm_track(ptep);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: include/asm-i386/pgtable.h:251:
+       ^Ireturn (test_and_clear_bit(_PAGE_BIT_DIRTY, &ptep->pte_low) |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: include/asm-i386/pgtable.h:251:
+       ^Ireturn (test_and_clear_bit(_PAGE_BIT_DIRTY, &ptep->pte_low) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: include/asm-i386/pgtable.h:251:
+       ^Ireturn (test_and_clear_bit(_PAGE_BIT_DIRTY, &ptep->pte_low) |$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 18 warnings, 7 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000168839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
