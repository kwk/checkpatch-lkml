WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -Nru linux/drivers/parport/parport_pc.c linux98/drivers/parport/parport_pc.c

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#40: FILE: drivers/parport/parport_pc.c:338:
+		return inb (STATUS (p));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#40: FILE: drivers/parport/parport_pc.c:338:
+		return inb (STATUS (p));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intrLine == 6'
#77: FILE: drivers/parport/parport_pc.c:2062:
+	if (pc98 && (CONFIGB(pb) == 0x14d) && (intrLine == 6))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <intrLine>
#77: FILE: drivers/parport/parport_pc.c:2062:
+	if (pc98 && (CONFIGB(pb) == 0x14d) && (intrLine == 6))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: drivers/parport/parport_pc.c:2231:
+		int i;
+		for (i = 0; i < 8; i += 2)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#91: FILE: drivers/parport/parport_pc.c:2232:
+			if (check_region(base + i, 1)) return NULL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#93: FILE: drivers/parport/parport_pc.c:2234:
+		if (check_region(base, 3)) return NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: drivers/parport/parport_pc.c:2367:
+	if (pc98 && p->base == 0x40) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: drivers/parport/parport_pc.c:2369:
+		int i;
+		for (i = 0; i < 8; i += 2)

CHECK:BRACES: Unbalanced braces around else statement
#117: FILE: drivers/parport/parport_pc.c:2371:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: drivers/parport/parport_pc.c:2372:
+		request_region (p->base, 3, p->name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: drivers/parport/parport_pc.c:2442:
+	if (pc98 && p->base == 0x40) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: drivers/parport/parport_pc.c:2444:
+		int i;
+		for (i = 0; i < 8; i += 2)

CHECK:BRACES: Unbalanced braces around else statement
#131: FILE: drivers/parport/parport_pc.c:2446:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->ctr'
#176: FILE: include/linux/parport_pc.h:123:
+	if (p->base == 0x40 && ((priv->ctr) ^ ctr) & 0x01)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#178: FILE: include/linux/parport_pc.h:125:
+	else
[...]
 	outb (ctr, CONTROL (p));

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#190: FILE: include/linux/parport_pc.h:202:
+		return ((inb(0x42) & 0x04) << 5) | PARPORT_STATUS_ERROR;
+	else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#190: FILE: include/linux/parport_pc.h:202:
+	else
[...]
 	return inb(STATUS(p));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398702.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 10 warnings, 7 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398702.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
