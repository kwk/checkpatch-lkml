CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/sched.h:550:
+extern int __kill_pg_info(int sig, struct siginfo *info, pid_t pgrp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#61: FILE: kernel/exit.c:128:
+static int __will_become_orphaned_pgrp(int pgrp, struct task_struct * ignored_task)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#81: FILE: kernel/exit.c:145:
+static int will_become_orphaned_pgrp(int pgrp, struct task_struct * ignored_task)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#130: FILE: kernel/exit.c:274:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#215: FILE: kernel/exit.c:572:
+		zap_thread(list_entry(current->children.next,struct task_struct,sibling), current, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: kernel/exit.c:572:
+		zap_thread(list_entry(current->children.next,struct task_struct,sibling), current, 0);
 		                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: kernel/exit.c:572:
+		zap_thread(list_entry(current->children.next,struct task_struct,sibling), current, 0);
 		                                                               ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#217: FILE: kernel/exit.c:574:
+		zap_thread(list_entry(current->ptrace_children.next,struct task_struct,sibling), current, 1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: kernel/exit.c:574:
+		zap_thread(list_entry(current->ptrace_children.next,struct task_struct,sibling), current, 1);
 		                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: kernel/exit.c:574:
+		zap_thread(list_entry(current->ptrace_children.next,struct task_struct,sibling), current, 1);
 		                                                                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: kernel/exit.c:575:
+	BUG_ON(!list_empty(&current->children));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 1 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
