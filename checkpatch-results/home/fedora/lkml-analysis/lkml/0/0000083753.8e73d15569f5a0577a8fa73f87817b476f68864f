WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/i2c/busses/i2c-ocores.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#94: FILE: drivers/i2c/busses/i2c-ocores.c:20:
+#include <asm/io.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: drivers/i2c/busses/i2c-ocores.c:38:
+#define OCI2C_PRELOW ^I^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: drivers/i2c/busses/i2c-ocores.c:39:
+#define OCI2C_PREHIGH ^I^I1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: drivers/i2c/busses/i2c-ocores.c:40:
+#define OCI2C_CONTROL ^I^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: drivers/i2c/busses/i2c-ocores.c:41:
+#define OCI2C_DATA ^I^I3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/i2c/busses/i2c-ocores.c:42:
+#define OCI2C_CMD     ^I^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: drivers/i2c/busses/i2c-ocores.c:43:
+#define OCI2C_STATUS  ^I^I4$

WARNING:INLINE: plain inline is preferred over __inline__
#139: FILE: drivers/i2c/busses/i2c-ocores.c:65:
+static __inline__ void oc_setreg(struct ocores_i2c *i2c, int reg, u8 value)

WARNING:INLINE: plain inline is preferred over __inline__
#144: FILE: drivers/i2c/busses/i2c-ocores.c:70:
+static __inline__ u8 oc_getreg(struct ocores_i2c *i2c, int reg)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#154: FILE: drivers/i2c/busses/i2c-ocores.c:80:
+	if ((i2c->state == STATE_DONE) || (i2c->state == STATE_ERROR))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_DONE'
#154: FILE: drivers/i2c/busses/i2c-ocores.c:80:
+	if ((i2c->state == STATE_DONE) || (i2c->state == STATE_ERROR))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_ERROR'
#154: FILE: drivers/i2c/busses/i2c-ocores.c:80:
+	if ((i2c->state == STATE_DONE) || (i2c->state == STATE_ERROR))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#163: FILE: drivers/i2c/busses/i2c-ocores.c:89:
+	if (stat & OCI2C_STAT_ARBLOST)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#170: FILE: drivers/i2c/busses/i2c-ocores.c:96:
+	if ((i2c->state == STATE_START) || (i2c->state == STATE_WRITE))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_START'
#170: FILE: drivers/i2c/busses/i2c-ocores.c:96:
+	if ((i2c->state == STATE_START) || (i2c->state == STATE_WRITE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_WRITE'
#170: FILE: drivers/i2c/busses/i2c-ocores.c:96:
+	if ((i2c->state == STATE_START) || (i2c->state == STATE_WRITE))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: drivers/i2c/busses/i2c-ocores.c:101:
+		if (stat & OCI2C_STAT_NACK)
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#182: FILE: drivers/i2c/busses/i2c-ocores.c:108:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#186: FILE: drivers/i2c/busses/i2c-ocores.c:112:
+	if (i2c->pos == msg->len)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#193: FILE: drivers/i2c/busses/i2c-ocores.c:119:
+		if (i2c->nmsgs) /* end? */
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#196: FILE: drivers/i2c/busses/i2c-ocores.c:122:
+			if (!(msg->flags & I2C_M_NOSTART))
+			{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#209: FILE: drivers/i2c/busses/i2c-ocores.c:135:
+			}
+			else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#213: FILE: drivers/i2c/busses/i2c-ocores.c:139:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#213: FILE: drivers/i2c/busses/i2c-ocores.c:139:
+		}
+		else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#221: FILE: drivers/i2c/busses/i2c-ocores.c:147:
+	if (i2c->state == STATE_READ)
+	{

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#223: FILE: drivers/i2c/busses/i2c-ocores.c:149:
+		oc_setreg(i2c, OCI2C_CMD, i2c->pos == (msg->len-1) ?
 		                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: drivers/i2c/busses/i2c-ocores.c:152:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#226: FILE: drivers/i2c/busses/i2c-ocores.c:152:
+	}
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/i2c/busses/i2c-ocores.c:178:
+	oc_setreg(i2c, OCI2C_DATA,
+			(i2c->msg->addr << 1) |

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#253: FILE: drivers/i2c/busses/i2c-ocores.c:179:
+			((i2c->msg->flags & I2C_M_RD) ? 1:0));
 			                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_ERROR'
#257: FILE: drivers/i2c/busses/i2c-ocores.c:183:
+	if (wait_event_interruptible_timeout(i2c->wait,
+					     (i2c->state == STATE_ERROR) ||
+					     (i2c->state == STATE_DONE), HZ*5))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c->state == STATE_DONE'
#257: FILE: drivers/i2c/busses/i2c-ocores.c:183:
+	if (wait_event_interruptible_timeout(i2c->wait,
+					     (i2c->state == STATE_ERROR) ||
+					     (i2c->state == STATE_DONE), HZ*5))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#259: FILE: drivers/i2c/busses/i2c-ocores.c:185:
+					     (i2c->state == STATE_DONE), HZ*5))
 					                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#273: FILE: drivers/i2c/busses/i2c-ocores.c:199:
+	prescale = (pdata->clock_khz / (5*100)) - 1;
 	                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: drivers/i2c/busses/i2c-ocores.c:208:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: drivers/i2c/busses/i2c-ocores.c:228:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#303: FILE: drivers/i2c/busses/i2c-ocores.c:229:
+static int __devinit ocores_i2c_probe(struct platform_device *pdev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#305: FILE: drivers/i2c/busses/i2c-ocores.c:231:
+	struct ocores_i2c* i2c;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#306: FILE: drivers/i2c/busses/i2c-ocores.c:232:
+	struct ocores_i2c_platform_data* pdata;

CHECK:SPACING: No space is necessary after a cast
#318: FILE: drivers/i2c/busses/i2c-ocores.c:244:
+	pdata = (struct ocores_i2c_platform_data*) pdev->dev.platform_data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#318: FILE: drivers/i2c/busses/i2c-ocores.c:244:
+	pdata = (struct ocores_i2c_platform_data*) pdev->dev.platform_data;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#334: FILE: drivers/i2c/busses/i2c-ocores.c:260:
+	if (!i2c->base)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#347: FILE: drivers/i2c/busses/i2c-ocores.c:273:
+	if (ret)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#361: FILE: drivers/i2c/busses/i2c-ocores.c:287:
+	if (ret)
+	{

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#381: FILE: drivers/i2c/busses/i2c-ocores.c:307:
+static int __devexit ocores_i2c_remove(struct platform_device* pdev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#381: FILE: drivers/i2c/busses/i2c-ocores.c:307:
+static int __devexit ocores_i2c_remove(struct platform_device* pdev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#438: FILE: include/linux/i2c-ocores.h:1:
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 13 warnings, 14 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
