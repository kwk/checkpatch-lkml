WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#999.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
Content-Disposition: attachment; filename=smbfs-2.6.10.rc2-2.6.10.rc2.hg.patch

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRGRP | S_IXGRP' are not preferred. Consider using octal permissions '0750'.
#69: FILE: fs/smbfs/inode.c:577:
+		mnt->file_mode = S_IRWXU | S_IRGRP | S_IXGRP |

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IROTH | S_IXOTH' are not preferred. Consider using octal permissions '0005'.
#70: FILE: fs/smbfs/inode.c:578:
+				S_IROTH | S_IXOTH | S_IFREG;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRGRP | S_IXGRP' are not preferred. Consider using octal permissions '0750'.
#71: FILE: fs/smbfs/inode.c:579:
+		mnt->dir_mode = S_IRWXU | S_IRGRP | S_IXGRP |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IROTH | S_IXOTH' are not preferred. Consider using octal permissions '0005'.
#72: FILE: fs/smbfs/inode.c:580:
+				S_IROTH | S_IXOTH | S_IFDIR;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#84: FILE: fs/smbfs/proc.c:2141:
+		fattr->f_mode = (server->mnt->dir_mode & S_IRWXUGO) | S_IFDIR;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: fs/smbfs/proc.c:2144:
+^I^Ifattr->f_mode = (server->mnt->file_mode & S_IRWXUGO) | $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#88: FILE: fs/smbfs/proc.c:2144:
+		fattr->f_mode = (server->mnt->file_mode & S_IRWXUGO) | 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#149: FILE: fs/smbfs/inode.c:447:
+		seq_printf(s, ",file_mode=%04o", mnt->file_mode & S_IRWXUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#151: FILE: fs/smbfs/inode.c:449:
+		seq_printf(s, ",dir_mode=%04o", mnt->dir_mode & S_IRWXUGO);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRGRP | S_IXGRP' are not preferred. Consider using octal permissions '0750'.
#163: FILE: fs/smbfs/inode.c:577:
+		mnt->file_mode = S_IRWXU | S_IRGRP | S_IXGRP |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IROTH | S_IXOTH' are not preferred. Consider using octal permissions '0005'.
#164: FILE: fs/smbfs/inode.c:578:
+				S_IROTH | S_IXOTH | S_IFREG;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRGRP | S_IXGRP' are not preferred. Consider using octal permissions '0750'.
#165: FILE: fs/smbfs/inode.c:579:
+		mnt->dir_mode = S_IRWXU | S_IRGRP | S_IXGRP |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IROTH | S_IXOTH' are not preferred. Consider using octal permissions '0005'.
#166: FILE: fs/smbfs/inode.c:580:
+				S_IROTH | S_IXOTH | S_IFDIR;

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/smbfs/proc.c:2133:
+^I    ^IMINOR(fattr->f_rdev) != (minor & 0xffffffff))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: fs/smbfs/proc.c:2133:
+^I    ^IMINOR(fattr->f_rdev) != (minor & 0xffffffff))$

ERROR:SPACING: space prohibited after that open parenthesis '('
#221: FILE: fs/smbfs/proc.c:2139:
+	if ( (server->mnt->flags & SMB_MOUNT_DMODE) &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: fs/smbfs/proc.c:2140:
+	if ( (server->mnt->flags & SMB_MOUNT_DMODE) &&
+	     (S_ISDIR(fattr->f_mode)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#222: FILE: fs/smbfs/proc.c:2140:
+	     (S_ISDIR(fattr->f_mode)) )

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#223: FILE: fs/smbfs/proc.c:2141:
+		fattr->f_mode = (server->mnt->dir_mode & S_IRWXUGO) | S_IFDIR;

ERROR:SPACING: space prohibited after that open parenthesis '('
#224: FILE: fs/smbfs/proc.c:2142:
+	else if ( (server->mnt->flags & SMB_MOUNT_FMODE) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: fs/smbfs/proc.c:2143:
+^I          !(S_ISDIR(fattr->f_mode)) )$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: fs/smbfs/proc.c:2143:
+	else if ( (server->mnt->flags & SMB_MOUNT_FMODE) &&
+	          !(S_ISDIR(fattr->f_mode)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#225: FILE: fs/smbfs/proc.c:2143:
+	          !(S_ISDIR(fattr->f_mode)) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: fs/smbfs/proc.c:2144:
+^I^Ifattr->f_mode = (server->mnt->file_mode & S_IRWXUGO) | $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#226: FILE: fs/smbfs/proc.c:2144:
+		fattr->f_mode = (server->mnt->file_mode & S_IRWXUGO) | 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: fs/smbfs/proto.h:27:
+extern void smb_decode_unix_basic(struct smb_fattr *fattr, struct smb_sb_info *server, char *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 17 warnings, 3 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
