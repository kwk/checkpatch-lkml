WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -Naur ../linux-2.6.10/arch/sparc/Kconfig linux-2.6.10/arch/sparc/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#50: FILE: arch/sparc/Kconfig:226:
+config LEON
+	bool "Running on SoC 'Leon', the open source sparc VHDL model"
+	help
+	  Say Y here if you want to run linux on the Leon System-on-a-Chip
+	  platform. For information go to www.gaisler.com. Download the VHDL 

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: arch/sparc/Kconfig:230:
+^I  platform. For information go to www.gaisler.com. Download the VHDL $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: arch/sparc/Kconfig:231:
+^I  source and use the instruction level Leon sparc-simulator "tsim" which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: arch/sparc/Kconfig:232:
+^I  is free for private use. $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: arch/sparc/Kconfig:236:
+config LEON_3
+	bool "Running on grlib's Leon3 "
+	help
+	  Say Y here if you are running on a Leon3 from grlib
+	  (download from www.gaisler.com). 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: arch/sparc/Kconfig:240:
+^I  (download from www.gaisler.com). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: arch/sparc/Kconfig:244:
+          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/sparc/kernel/cpu.c:77:
+  { 0xf, 0, "Meiko FPU"},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/sparc/kernel/cpu.c:78:
+  { 0xf, 1, "GRFPU"},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/sparc/kernel/cpu.c:124:
+  { 0xf, 2, "Gaisler Research - Leon2 SoC"},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/sparc/kernel/cpu.c:125:
+  { 0xf, 3, "Gaisler Research - Leon3 SoC"},$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#131: FILE: arch/sparc/kernel/cpu.c:149:
+	fpu_vers = (get_psr() & PSR_EF) ? ((get_fsr()>>17)&0x7) : 7;
 	                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#131: FILE: arch/sparc/kernel/cpu.c:149:
+	fpu_vers = (get_psr() & PSR_EF) ? ((get_fsr()>>17)&0x7) : 7;
 	                                                  ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#175: FILE: arch/sparc/kernel/irq.c:582:
+	extern void leon_init_IRQ(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/sparc/kernel/leon_irq.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: arch/sparc/kernel/leon_irq.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#217: FILE: arch/sparc/kernel/leon_irq.c:24:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */
                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <LEON3_IrqCtrl_Regs_Map>
#217: FILE: arch/sparc/kernel/leon_irq.c:24:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <LEON3_IrqCtrl_Regs>
#217: FILE: arch/sparc/kernel/leon_irq.c:24:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#217: FILE: arch/sparc/kernel/leon_irq.c:24:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */

CHECK:CAMELCASE: Avoid CamelCase: <LEON3_GpTimer_Regs_Map>
#218: FILE: arch/sparc/kernel/leon_irq.c:25:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

CHECK:CAMELCASE: Avoid CamelCase: <LEON3_GpTimer_Regs>
#218: FILE: arch/sparc/kernel/leon_irq.c:25:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#218: FILE: arch/sparc/kernel/leon_irq.c:25:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#218: FILE: arch/sparc/kernel/leon_irq.c:25:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

CHECK:CAMELCASE: Avoid CamelCase: <LEON3_GpTimer_Irq>
#219: FILE: arch/sparc/kernel/leon_irq.c:26:
+extern unsigned long LEON3_GpTimer_Irq; /* drivers/amba.c:amba_init() */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#219: FILE: arch/sparc/kernel/leon_irq.c:26:
+extern unsigned long LEON3_GpTimer_Irq; /* drivers/amba.c:amba_init() */

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#221: FILE: arch/sparc/kernel/leon_irq.c:28:
+#define LEON_IMASK ((&LEON3_IrqCtrl_Regs ->mask[0]))
                                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#227: FILE: arch/sparc/kernel/leon_irq.c:34:
+	unsigned long mask;
+	if (!irq || irq > 0xf) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#228: FILE: arch/sparc/kernel/leon_irq.c:35:
+		printk("leon_get_irqmask: false irq number\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: arch/sparc/kernel/leon_irq.c:46:
+	unsigned long mask, flags;
+	mask = get_irqmask(irq_nr) & LEON_IRQMASK_R;

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: arch/sparc/kernel/leon_irq.c:59:
+	unsigned long mask, flags;
+	mask = get_irqmask(irq_nr) & LEON_IRQMASK_R;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: arch/sparc/kernel/leon_irq.c:60:
+^Isave_and_cli(flags); $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: arch/sparc/kernel/leon_irq.c:70:
+ * very bizarre behavior will result. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#289: FILE: arch/sparc/kernel/leon_irq.c:96:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: arch/sparc/kernel/leon_irq.c:99:
+void __init leon_init_timers (irqreturn_t (*counter_fn)(int, void *, struct pt_regs *))

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/sparc/kernel/leon_irq.c:107:
+        if (LEON3_GpTimer_Regs && LEON3_IrqCtrl_Regs) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/sparc/kernel/leon_irq.c:107:
+        if (LEON3_GpTimer_Regs && LEON3_IrqCtrl_Regs) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#300: FILE: arch/sparc/kernel/leon_irq.c:107:
+        if (LEON3_GpTimer_Regs && LEON3_IrqCtrl_Regs) {
[...]
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].val,0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/sparc/kernel/leon_irq.c:108:
+          //regs -> timerctrl1 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/sparc/kernel/leon_irq.c:109:
+          //regs -> timercnt1 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/sparc/kernel/leon_irq.c:110:
+          //regs -> timerload1 = (((1000000/100) - 1));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/sparc/kernel/leon_irq.c:111:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].val,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/sparc/kernel/leon_irq.c:111:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].val,0);$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#304: FILE: arch/sparc/kernel/leon_irq.c:111:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].val,0);
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: arch/sparc/kernel/leon_irq.c:111:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].val,0);
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/sparc/kernel/leon_irq.c:112:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].rld,(((1000000/100) - 1)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/sparc/kernel/leon_irq.c:112:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].rld,(((1000000/100) - 1)));$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#305: FILE: arch/sparc/kernel/leon_irq.c:112:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].rld,(((1000000/100) - 1)));
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: arch/sparc/kernel/leon_irq.c:112:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].rld,(((1000000/100) - 1)));
                                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#305: FILE: arch/sparc/kernel/leon_irq.c:112:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].rld,(((1000000/100) - 1)));
                                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/sparc/kernel/leon_irq.c:113:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/sparc/kernel/leon_irq.c:113:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,0);$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#306: FILE: arch/sparc/kernel/leon_irq.c:113:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,0);
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: arch/sparc/kernel/leon_irq.c:113:
+          LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,0);
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/sparc/kernel/leon_irq.c:114:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/sparc/kernel/leon_irq.c:114:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#307: FILE: arch/sparc/kernel/leon_irq.c:114:
+        } else {
+          while(1) printk("No Timer/irqctrl found\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/sparc/kernel/leon_irq.c:115:
+          while(1) printk("No Timer/irqctrl found\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/sparc/kernel/leon_irq.c:115:
+          while(1) printk("No Timer/irqctrl found\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/sparc/kernel/leon_irq.c:115:
+          while(1) printk("No Timer/irqctrl found\n");

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: arch/sparc/kernel/leon_irq.c:115:
+          while(1) printk("No Timer/irqctrl found\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#308: FILE: arch/sparc/kernel/leon_irq.c:115:
+          while(1) printk("No Timer/irqctrl found\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/sparc/kernel/leon_irq.c:116:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/sparc/kernel/leon_irq.c:116:
+        }$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#313: FILE: arch/sparc/kernel/leon_irq.c:120:
+	LEON_REGSTORE_PA(LEON_TRLD0, (((1000000/HZ) - 1)));
 	                                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: arch/sparc/kernel/leon_irq.c:123:
+	printk("Todo: init master_l10_counter\r\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/sparc/kernel/leon_irq.c:128:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: arch/sparc/kernel/leon_irq.c:142:
+		printk("leon_time_init: unable to attach IRQ%d\n",LEON_INTERRUPT_TIMER1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: arch/sparc/kernel/leon_irq.c:142:
+		printk("leon_time_init: unable to attach IRQ%d\n",LEON_INTERRUPT_TIMER1);
 		                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: arch/sparc/kernel/leon_irq.c:144:
+^I}^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/sparc/kernel/leon_irq.c:147:
+        LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/sparc/kernel/leon_irq.c:147:
+        LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,$

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#340: FILE: arch/sparc/kernel/leon_irq.c:147:
+        LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,
                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/sparc/kernel/leon_irq.c:148:
+          LEON3_GPTIMER_EN |$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: arch/sparc/kernel/leon_irq.c:148:
+        LEON3_BYPASS_STORE_PA(&LEON3_GpTimer_Regs ->e[0].ctrl,
+          LEON3_GPTIMER_EN |

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/sparc/kernel/leon_irq.c:148:
+          LEON3_GPTIMER_EN |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/sparc/kernel/leon_irq.c:149:
+          LEON3_GPTIMER_RL |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/sparc/kernel/leon_irq.c:149:
+          LEON3_GPTIMER_RL |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/sparc/kernel/leon_irq.c:150:
+          LEON3_GPTIMER_LD |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/sparc/kernel/leon_irq.c:150:
+          LEON3_GPTIMER_LD |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/sparc/kernel/leon_irq.c:151:
+          LEON3_GPTIMER_IRQEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/sparc/kernel/leon_irq.c:151:
+          LEON3_GPTIMER_IRQEN);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#357: FILE: arch/sparc/kernel/leon_irq.c:164:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: arch/sparc/kernel/leon_irq.c:169:
+	BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: arch/sparc/kernel/leon_irq.c:174:
+	BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: arch/sparc/kernel/leon_irq.c:181:
+	static char buff[16];
+	sprintf(buff, "%d", irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: arch/sparc/kernel/leon_irq.c:188:
+	printk("Not implemented\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#382: FILE: arch/sparc/kernel/leon_irq.c:189:
+	BUG();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#416: FILE: arch/sparc/kernel/leon_irq.c:223:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: arch/sparc/kernel/setup.c:282:
+	if(!strcmp(&cputypval,"leon2")) { sparc_cpu_model=sparc_leon; }
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#438: FILE: arch/sparc/kernel/setup.c:282:
+	if(!strcmp(&cputypval,"leon2")) { sparc_cpu_model=sparc_leon; }
 	                                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#438: FILE: arch/sparc/kernel/setup.c:282:
+	if(!strcmp(&cputypval,"leon2")) { sparc_cpu_model=sparc_leon; }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#438: FILE: arch/sparc/kernel/setup.c:282:
+	if(!strcmp(&cputypval,"leon2")) { sparc_cpu_model=sparc_leon; }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#461: FILE: arch/sparc/kernel/setup.c:318:
+		printk("LEON\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: arch/sparc/kernel/setup.c:331:
+        amba_prinf_config(); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/sparc/kernel/setup.c:331:
+        amba_prinf_config(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/sparc/kernel/setup.c:331:
+        amba_prinf_config(); $

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#515: FILE: arch/sparc/kernel/time.c:471:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */
                                        ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#515: FILE: arch/sparc/kernel/time.c:471:
+extern volatile LEON3_IrqCtrl_Regs_Map *LEON3_IrqCtrl_Regs; /* drivers/amba/amba.c:amba_init() */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#516: FILE: arch/sparc/kernel/time.c:472:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#516: FILE: arch/sparc/kernel/time.c:472:
+extern volatile LEON3_GpTimer_Regs_Map *LEON3_GpTimer_Regs;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#517: FILE: arch/sparc/kernel/time.c:473:
+extern unsigned long LEON3_GpTimer_Irq; /* drivers/amba.c:amba_init() */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: arch/sparc/kernel/time.c:481:
+^I^Ireturn ((LEON_REGLOAD_PA(&LEON3_GpTimer_Regs ->e[0].rld)&LEON_TCNT0_MASK) - $

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#525: FILE: arch/sparc/kernel/time.c:481:
+		return ((LEON_REGLOAD_PA(&LEON3_GpTimer_Regs ->e[0].rld)&LEON_TCNT0_MASK) - 
 		                                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#525: FILE: arch/sparc/kernel/time.c:481:
+		return ((LEON_REGLOAD_PA(&LEON3_GpTimer_Regs ->e[0].rld)&LEON_TCNT0_MASK) - 
 		                                                        ^

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxV)
#526: FILE: arch/sparc/kernel/time.c:482:
+			(LEON_REGLOAD_PA(&LEON3_GpTimer_Regs ->e[0].val)&LEON_TCNT0_MASK)) >> 2;
 			                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#526: FILE: arch/sparc/kernel/time.c:482:
+			(LEON_REGLOAD_PA(&LEON3_GpTimer_Regs ->e[0].val)&LEON_TCNT0_MASK)) >> 2;
 			                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: arch/sparc/kernel/time.c:484:
+^I^Ireturn ((LEON_REGLOAD_PA(LEON_TRLD0)&LEON_TCNT0_MASK) - $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#528: FILE: arch/sparc/kernel/time.c:484:
+		return ((LEON_REGLOAD_PA(LEON_TRLD0)&LEON_TCNT0_MASK) - 
 		                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#529: FILE: arch/sparc/kernel/time.c:485:
+			(LEON_REGLOAD_PA(LEON_TCNT0)&LEON_TCNT0_MASK)) >> 2;
 			                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: arch/sparc/mm/init.c:340:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: arch/sparc/mm/init.c:344:
+		* registers with asi BYPASS, using sun's DVMA_VADDR range */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#587: FILE: arch/sparc/mm/init.c:344:
+		/* until driver/net/open_eth.c is rewritten to access ethermac core's
+		* registers with asi BYPASS, using sun's DVMA_VADDR range */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#588: FILE: arch/sparc/mm/init.c:345:
+		void srmmu_allocate_ptable_skeleton(unsigned long start, unsigned long end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: arch/sparc/mm/init.c:346:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: arch/sparc/mm/init.c:348:
+		sparc_mapiorange (0,0xb0000000,LEON_VA_ETHERMAC, PAGE_SIZE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#591: FILE: arch/sparc/mm/init.c:348:
+		sparc_mapiorange (0,0xb0000000,LEON_VA_ETHERMAC, PAGE_SIZE);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#591: FILE: arch/sparc/mm/init.c:348:
+		sparc_mapiorange (0,0xb0000000,LEON_VA_ETHERMAC, PAGE_SIZE);
 		                              ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#593: FILE: arch/sparc/mm/init.c:350:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/sparc/mm/leon.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#603: FILE: arch/sparc/mm/leon.c:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: arch/sparc/mm/leon.c:3:
+ * Copyright (C) 2004 Konrad Eisele (eiselekd@web.de), Gaisler Research $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: arch/sparc/mm/leon.c:5:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/sparc/mm/leon.c:5:
+ $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pfn' - possible side-effects?
#617: FILE: arch/sparc/mm/leon.c:15:
+#define _pfn_valid(pfn)	((pfn < last_valid_pfn) && (pfn >= PFN(phys_base)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#617: FILE: arch/sparc/mm/leon.c:15:
+#define _pfn_valid(pfn)	((pfn < last_valid_pfn) && (pfn >= PFN(phys_base)))

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#619: FILE: arch/sparc/mm/leon.c:17:
+int srmmu_swprobe_trace = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#620: FILE: arch/sparc/mm/leon.c:18:
+unsigned long srmmu_swprobe(unsigned long vaddr, unsigned long *paddr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: arch/sparc/mm/leon.c:19:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: arch/sparc/mm/leon.c:19:
+      $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#621: FILE: arch/sparc/mm/leon.c:19:
+unsigned long srmmu_swprobe(unsigned long vaddr, unsigned long *paddr) {
+      

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/sparc/mm/leon.c:20:
+  unsigned long ctxtbl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/sparc/mm/leon.c:21:
+  unsigned long pgd,pmd,ped;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#623: FILE: arch/sparc/mm/leon.c:21:
+  unsigned long pgd,pmd,ped;
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#623: FILE: arch/sparc/mm/leon.c:21:
+  unsigned long pgd,pmd,ped;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: arch/sparc/mm/leon.c:22:
+  unsigned long ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/sparc/mm/leon.c:23:
+  unsigned long lvl, pte, paddrbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/sparc/mm/leon.c:24:
+  unsigned long ctx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/sparc/mm/leon.c:25:
+  unsigned long paddr_calc;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: arch/sparc/mm/leon.c:26:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/sparc/mm/leon.c:26:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/sparc/mm/leon.c:27:
+  paddrbase = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: arch/sparc/mm/leon.c:28:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/sparc/mm/leon.c:28:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/sparc/mm/leon.c:29:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#631: FILE: arch/sparc/mm/leon.c:29:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: trace on\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#631: FILE: arch/sparc/mm/leon.c:29:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: trace on\n");
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/sparc/mm/leon.c:30:
+    printk("swprobe: trace on\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#632: FILE: arch/sparc/mm/leon.c:30:
+    printk("swprobe: trace on\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/sparc/mm/leon.c:31:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: arch/sparc/mm/leon.c:32:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: arch/sparc/mm/leon.c:32:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/sparc/mm/leon.c:33:
+  if (!(ctxtbl = srmmu_get_ctable_ptr())) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#635: FILE: arch/sparc/mm/leon.c:33:
+  if (!(ctxtbl = srmmu_get_ctable_ptr())) {
+    if (srmmu_swprobe_trace) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#635: FILE: arch/sparc/mm/leon.c:33:
+  if (!(ctxtbl = srmmu_get_ctable_ptr())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: arch/sparc/mm/leon.c:34:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#636: FILE: arch/sparc/mm/leon.c:34:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: srmmu_get_ctable_ptr returned 0=>0\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: arch/sparc/mm/leon.c:34:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: srmmu_get_ctable_ptr returned 0=>0\n");
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/sparc/mm/leon.c:35:
+      printk("swprobe: srmmu_get_ctable_ptr returned 0=>0\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#637: FILE: arch/sparc/mm/leon.c:35:
+      printk("swprobe: srmmu_get_ctable_ptr returned 0=>0\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/sparc/mm/leon.c:36:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/sparc/mm/leon.c:37:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: arch/sparc/mm/leon.c:38:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/sparc/mm/leon.c:39:
+  if (!_pfn_valid(PFN(ctxtbl))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#641: FILE: arch/sparc/mm/leon.c:39:
+  if (!_pfn_valid(PFN(ctxtbl))) {
+    if (srmmu_swprobe_trace) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/sparc/mm/leon.c:40:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#642: FILE: arch/sparc/mm/leon.c:40:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ctxtbl));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#642: FILE: arch/sparc/mm/leon.c:40:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ctxtbl));
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: arch/sparc/mm/leon.c:41:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ctxtbl));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#643: FILE: arch/sparc/mm/leon.c:41:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ctxtbl));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: arch/sparc/mm/leon.c:41:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ctxtbl));
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: arch/sparc/mm/leon.c:42:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: arch/sparc/mm/leon.c:43:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: arch/sparc/mm/leon.c:44:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/sparc/mm/leon.c:45:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: arch/sparc/mm/leon.c:45:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: arch/sparc/mm/leon.c:46:
+  ctx = srmmu_get_context();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: arch/sparc/mm/leon.c:47:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#649: FILE: arch/sparc/mm/leon.c:47:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- ctx (%x) ---\n",ctx);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#649: FILE: arch/sparc/mm/leon.c:47:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- ctx (%x) ---\n",ctx);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: arch/sparc/mm/leon.c:48:
+    printk("swprobe:  --- ctx (%x) ---\n",ctx);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#650: FILE: arch/sparc/mm/leon.c:48:
+    printk("swprobe:  --- ctx (%x) ---\n",ctx);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: arch/sparc/mm/leon.c:48:
+    printk("swprobe:  --- ctx (%x) ---\n",ctx);
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: arch/sparc/mm/leon.c:49:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: arch/sparc/mm/leon.c:50:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/sparc/mm/leon.c:50:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: arch/sparc/mm/leon.c:51:
+  pgd = LEON_BYPASS_LOAD_PA(ctxtbl+(ctx*4));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#653: FILE: arch/sparc/mm/leon.c:51:
+  pgd = LEON_BYPASS_LOAD_PA(ctxtbl+(ctx*4));
                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#653: FILE: arch/sparc/mm/leon.c:51:
+  pgd = LEON_BYPASS_LOAD_PA(ctxtbl+(ctx*4));
                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: arch/sparc/mm/leon.c:52:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: arch/sparc/mm/leon.c:52:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: arch/sparc/mm/leon.c:53:
+  if (((pgd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#655: FILE: arch/sparc/mm/leon.c:53:
+  if (((pgd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#655: FILE: arch/sparc/mm/leon.c:53:
+  if (((pgd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: arch/sparc/mm/leon.c:54:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#656: FILE: arch/sparc/mm/leon.c:54:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pgd is entry level 3\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#656: FILE: arch/sparc/mm/leon.c:54:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pgd is entry level 3\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: arch/sparc/mm/leon.c:55:
+      printk("swprobe: pgd is entry level 3\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: arch/sparc/mm/leon.c:55:
+      printk("swprobe: pgd is entry level 3\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: arch/sparc/mm/leon.c:55:
+      printk("swprobe: pgd is entry level 3\n",pgd);
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/sparc/mm/leon.c:56:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: arch/sparc/mm/leon.c:57:
+    lvl = 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: arch/sparc/mm/leon.c:58:
+    pte = pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: arch/sparc/mm/leon.c:59:
+    paddrbase = pgd & SRMMU_PTE_PMASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: arch/sparc/mm/leon.c:60:
+    goto ready;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: arch/sparc/mm/leon.c:61:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: arch/sparc/mm/leon.c:62:
+  if (((pgd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#664: FILE: arch/sparc/mm/leon.c:62:
+  if (((pgd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#664: FILE: arch/sparc/mm/leon.c:62:
+  if (((pgd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: arch/sparc/mm/leon.c:63:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#665: FILE: arch/sparc/mm/leon.c:63:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pgd is invalid => 0\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#665: FILE: arch/sparc/mm/leon.c:63:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pgd is invalid => 0\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: arch/sparc/mm/leon.c:64:
+      printk("swprobe: pgd is invalid => 0\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#666: FILE: arch/sparc/mm/leon.c:64:
+      printk("swprobe: pgd is invalid => 0\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: arch/sparc/mm/leon.c:64:
+      printk("swprobe: pgd is invalid => 0\n",pgd);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: arch/sparc/mm/leon.c:65:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: arch/sparc/mm/leon.c:66:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: arch/sparc/mm/leon.c:67:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: arch/sparc/mm/leon.c:69:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#671: FILE: arch/sparc/mm/leon.c:69:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- pgd (%x) ---\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#671: FILE: arch/sparc/mm/leon.c:69:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- pgd (%x) ---\n",pgd);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/sparc/mm/leon.c:70:
+    printk("swprobe:  --- pgd (%x) ---\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#672: FILE: arch/sparc/mm/leon.c:70:
+    printk("swprobe:  --- pgd (%x) ---\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#672: FILE: arch/sparc/mm/leon.c:70:
+    printk("swprobe:  --- pgd (%x) ---\n",pgd);
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: arch/sparc/mm/leon.c:71:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: arch/sparc/mm/leon.c:72:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/sparc/mm/leon.c:72:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: arch/sparc/mm/leon.c:73:
+  ptr = (pgd & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/sparc/mm/leon.c:73:
+  ptr = (pgd & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: arch/sparc/mm/leon.c:74:
+  ptr += (((vaddr & 0xff000000)>>24)*4);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#676: FILE: arch/sparc/mm/leon.c:74:
+  ptr += (((vaddr & 0xff000000)>>24)*4);
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#676: FILE: arch/sparc/mm/leon.c:74:
+  ptr += (((vaddr & 0xff000000)>>24)*4);
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: arch/sparc/mm/leon.c:75:
+  if (!_pfn_valid(PFN(ptr))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#677: FILE: arch/sparc/mm/leon.c:75:
+  if (!_pfn_valid(PFN(ptr))) {
+    return 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#677: FILE: arch/sparc/mm/leon.c:75:
+  if (!_pfn_valid(PFN(ptr))) {
+    return 0;
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: arch/sparc/mm/leon.c:76:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: arch/sparc/mm/leon.c:77:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: arch/sparc/mm/leon.c:78:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/sparc/mm/leon.c:78:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: arch/sparc/mm/leon.c:79:
+  pmd = LEON_BYPASS_LOAD_PA(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: arch/sparc/mm/leon.c:80:
+  if (((pmd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#682: FILE: arch/sparc/mm/leon.c:80:
+  if (((pmd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#682: FILE: arch/sparc/mm/leon.c:80:
+  if (((pmd&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: arch/sparc/mm/leon.c:81:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#683: FILE: arch/sparc/mm/leon.c:81:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pmd is entry level 2\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#683: FILE: arch/sparc/mm/leon.c:81:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pmd is entry level 2\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: arch/sparc/mm/leon.c:82:
+      printk("swprobe: pmd is entry level 2\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#684: FILE: arch/sparc/mm/leon.c:82:
+      printk("swprobe: pmd is entry level 2\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#684: FILE: arch/sparc/mm/leon.c:82:
+      printk("swprobe: pmd is entry level 2\n",pgd);
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: arch/sparc/mm/leon.c:83:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: arch/sparc/mm/leon.c:84:
+    lvl = 2;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: arch/sparc/mm/leon.c:84:
+    lvl = 2;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: arch/sparc/mm/leon.c:85:
+    pte = pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: arch/sparc/mm/leon.c:86:
+    paddrbase = pmd & SRMMU_PTE_PMASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: arch/sparc/mm/leon.c:87:
+    goto ready;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/sparc/mm/leon.c:88:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: arch/sparc/mm/leon.c:89:
+  if (((pmd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#691: FILE: arch/sparc/mm/leon.c:89:
+  if (((pmd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#691: FILE: arch/sparc/mm/leon.c:89:
+  if (((pmd&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/sparc/mm/leon.c:90:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#692: FILE: arch/sparc/mm/leon.c:90:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pmd is invalid => 0\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#692: FILE: arch/sparc/mm/leon.c:90:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: pmd is invalid => 0\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: arch/sparc/mm/leon.c:91:
+      printk("swprobe: pmd is invalid => 0\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#693: FILE: arch/sparc/mm/leon.c:91:
+      printk("swprobe: pmd is invalid => 0\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#693: FILE: arch/sparc/mm/leon.c:91:
+      printk("swprobe: pmd is invalid => 0\n",pgd);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: arch/sparc/mm/leon.c:92:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/sparc/mm/leon.c:93:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/sparc/mm/leon.c:94:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: arch/sparc/mm/leon.c:96:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#698: FILE: arch/sparc/mm/leon.c:96:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- pmd (%x) ---\n",pmd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#698: FILE: arch/sparc/mm/leon.c:96:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- pmd (%x) ---\n",pmd);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/sparc/mm/leon.c:97:
+    printk("swprobe:  --- pmd (%x) ---\n",pmd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#699: FILE: arch/sparc/mm/leon.c:97:
+    printk("swprobe:  --- pmd (%x) ---\n",pmd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#699: FILE: arch/sparc/mm/leon.c:97:
+    printk("swprobe:  --- pmd (%x) ---\n",pmd);
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: arch/sparc/mm/leon.c:98:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: arch/sparc/mm/leon.c:99:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: arch/sparc/mm/leon.c:99:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#702: FILE: arch/sparc/mm/leon.c:100:
+  ptr = (pmd & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: arch/sparc/mm/leon.c:100:
+  ptr = (pmd & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: arch/sparc/mm/leon.c:101:
+  ptr += (((vaddr & 0x00fc0000)>>18)*4);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#703: FILE: arch/sparc/mm/leon.c:101:
+  ptr += (((vaddr & 0x00fc0000)>>18)*4);
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#703: FILE: arch/sparc/mm/leon.c:101:
+  ptr += (((vaddr & 0x00fc0000)>>18)*4);
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: arch/sparc/mm/leon.c:102:
+  if (!_pfn_valid(PFN(ptr))){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#704: FILE: arch/sparc/mm/leon.c:102:
+  if (!_pfn_valid(PFN(ptr))){
+    if (srmmu_swprobe_trace) {

ERROR:SPACING: space required before the open brace '{'
#704: FILE: arch/sparc/mm/leon.c:102:
+  if (!_pfn_valid(PFN(ptr))){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: arch/sparc/mm/leon.c:103:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#705: FILE: arch/sparc/mm/leon.c:103:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ptr));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#705: FILE: arch/sparc/mm/leon.c:103:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ptr));
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: arch/sparc/mm/leon.c:104:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ptr));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#706: FILE: arch/sparc/mm/leon.c:104:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ptr));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#706: FILE: arch/sparc/mm/leon.c:104:
+      printk("swprobe: !_pfn_valid(%x)=>0\n",PFN(ptr));
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: arch/sparc/mm/leon.c:105:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: arch/sparc/mm/leon.c:106:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: arch/sparc/mm/leon.c:107:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: arch/sparc/mm/leon.c:108:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: arch/sparc/mm/leon.c:108:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: arch/sparc/mm/leon.c:109:
+  ped = LEON_BYPASS_LOAD_PA(ptr);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: arch/sparc/mm/leon.c:110:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: arch/sparc/mm/leon.c:110:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: arch/sparc/mm/leon.c:111:
+  if (((ped&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#713: FILE: arch/sparc/mm/leon.c:111:
+  if (((ped&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#713: FILE: arch/sparc/mm/leon.c:111:
+  if (((ped&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: arch/sparc/mm/leon.c:112:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#714: FILE: arch/sparc/mm/leon.c:112:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ped is entry level 1\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#714: FILE: arch/sparc/mm/leon.c:112:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ped is entry level 1\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: arch/sparc/mm/leon.c:113:
+      printk("swprobe: ped is entry level 1\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#715: FILE: arch/sparc/mm/leon.c:113:
+      printk("swprobe: ped is entry level 1\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: arch/sparc/mm/leon.c:113:
+      printk("swprobe: ped is entry level 1\n",pgd);
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: arch/sparc/mm/leon.c:114:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: arch/sparc/mm/leon.c:115:
+    lvl = 1;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: arch/sparc/mm/leon.c:115:
+    lvl = 1;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: arch/sparc/mm/leon.c:116:
+    pte = ped;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: arch/sparc/mm/leon.c:117:
+    paddrbase = ped & SRMMU_PTE_PMASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: arch/sparc/mm/leon.c:118:
+    goto ready;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: arch/sparc/mm/leon.c:119:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/sparc/mm/leon.c:120:
+  if (((ped&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#722: FILE: arch/sparc/mm/leon.c:120:
+  if (((ped&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#722: FILE: arch/sparc/mm/leon.c:120:
+  if (((ped&SRMMU_ET_MASK) != SRMMU_ET_PTD)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: arch/sparc/mm/leon.c:121:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#723: FILE: arch/sparc/mm/leon.c:121:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ped is invalid => 0\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#723: FILE: arch/sparc/mm/leon.c:121:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ped is invalid => 0\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/sparc/mm/leon.c:122:
+      printk("swprobe: ped is invalid => 0\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#724: FILE: arch/sparc/mm/leon.c:122:
+      printk("swprobe: ped is invalid => 0\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: arch/sparc/mm/leon.c:122:
+      printk("swprobe: ped is invalid => 0\n",pgd);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/sparc/mm/leon.c:123:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: arch/sparc/mm/leon.c:124:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: arch/sparc/mm/leon.c:125:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: arch/sparc/mm/leon.c:127:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#729: FILE: arch/sparc/mm/leon.c:127:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- ped (%x) ---\n",ped);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#729: FILE: arch/sparc/mm/leon.c:127:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe:  --- ped (%x) ---\n",ped);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: arch/sparc/mm/leon.c:128:
+    printk("swprobe:  --- ped (%x) ---\n",ped);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#730: FILE: arch/sparc/mm/leon.c:128:
+    printk("swprobe:  --- ped (%x) ---\n",ped);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: arch/sparc/mm/leon.c:128:
+    printk("swprobe:  --- ped (%x) ---\n",ped);
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: arch/sparc/mm/leon.c:129:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: arch/sparc/mm/leon.c:130:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/sparc/mm/leon.c:130:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: arch/sparc/mm/leon.c:131:
+  ptr = (ped & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: arch/sparc/mm/leon.c:131:
+  ptr = (ped & SRMMU_PTD_PMASK) << 4;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: arch/sparc/mm/leon.c:132:
+  ptr += (((vaddr & 0x0003f000)>>12)*4);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#734: FILE: arch/sparc/mm/leon.c:132:
+  ptr += (((vaddr & 0x0003f000)>>12)*4);
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#734: FILE: arch/sparc/mm/leon.c:132:
+  ptr += (((vaddr & 0x0003f000)>>12)*4);
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: arch/sparc/mm/leon.c:133:
+  if (!_pfn_valid(PFN(ptr)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#735: FILE: arch/sparc/mm/leon.c:133:
+  if (!_pfn_valid(PFN(ptr)))
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: arch/sparc/mm/leon.c:134:
+    return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/sparc/mm/leon.c:135:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: arch/sparc/mm/leon.c:135:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: arch/sparc/mm/leon.c:136:
+  ptr = LEON_BYPASS_LOAD_PA(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: arch/sparc/mm/leon.c:137:
+  if (((ptr&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#739: FILE: arch/sparc/mm/leon.c:137:
+  if (((ptr&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
+    if (srmmu_swprobe_trace) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#739: FILE: arch/sparc/mm/leon.c:137:
+  if (((ptr&SRMMU_ET_MASK) == SRMMU_ET_PTE)) {
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: arch/sparc/mm/leon.c:138:
+    if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#740: FILE: arch/sparc/mm/leon.c:138:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ptr is entry level 0\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#740: FILE: arch/sparc/mm/leon.c:138:
+    if (srmmu_swprobe_trace) {
+      printk("swprobe: ptr is entry level 0\n",pgd);
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: arch/sparc/mm/leon.c:139:
+      printk("swprobe: ptr is entry level 0\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#741: FILE: arch/sparc/mm/leon.c:139:
+      printk("swprobe: ptr is entry level 0\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/sparc/mm/leon.c:139:
+      printk("swprobe: ptr is entry level 0\n",pgd);
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: arch/sparc/mm/leon.c:140:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: arch/sparc/mm/leon.c:141:
+    lvl = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: arch/sparc/mm/leon.c:142:
+    pte = ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/sparc/mm/leon.c:143:
+    paddrbase = ptr & SRMMU_PTE_PMASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: arch/sparc/mm/leon.c:144:
+    goto ready;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: arch/sparc/mm/leon.c:145:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: arch/sparc/mm/leon.c:146:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#748: FILE: arch/sparc/mm/leon.c:146:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: ptr is invalid => 0\n",pgd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#748: FILE: arch/sparc/mm/leon.c:146:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: ptr is invalid => 0\n",pgd);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: arch/sparc/mm/leon.c:147:
+    printk("swprobe: ptr is invalid => 0\n",pgd);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#749: FILE: arch/sparc/mm/leon.c:147:
+    printk("swprobe: ptr is invalid => 0\n",pgd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#749: FILE: arch/sparc/mm/leon.c:147:
+    printk("swprobe: ptr is invalid => 0\n",pgd);
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: arch/sparc/mm/leon.c:148:
+  }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: arch/sparc/mm/leon.c:149:
+  return 0;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: arch/sparc/mm/leon.c:149:
+  return 0;      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: arch/sparc/mm/leon.c:150:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: arch/sparc/mm/leon.c:150:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: arch/sparc/mm/leon.c:152:
+  switch (lvl) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/sparc/mm/leon.c:153:
+  case 0: paddr_calc = (vaddr & 0x00000fff) | ((pte&~0xff)<<4); break;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#755: FILE: arch/sparc/mm/leon.c:153:
+  case 0: paddr_calc = (vaddr & 0x00000fff) | ((pte&~0xff)<<4); break;
                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#755: FILE: arch/sparc/mm/leon.c:153:
+  case 0: paddr_calc = (vaddr & 0x00000fff) | ((pte&~0xff)<<4); break;
                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#755: FILE: arch/sparc/mm/leon.c:153:
+  case 0: paddr_calc = (vaddr & 0x00000fff) | ((pte&~0xff)<<4); break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: arch/sparc/mm/leon.c:154:
+  case 1: paddr_calc = (vaddr & 0x0003ffff) | ((pte&~0xff)<<4); break;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#756: FILE: arch/sparc/mm/leon.c:154:
+  case 1: paddr_calc = (vaddr & 0x0003ffff) | ((pte&~0xff)<<4); break;
                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#756: FILE: arch/sparc/mm/leon.c:154:
+  case 1: paddr_calc = (vaddr & 0x0003ffff) | ((pte&~0xff)<<4); break;
                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#756: FILE: arch/sparc/mm/leon.c:154:
+  case 1: paddr_calc = (vaddr & 0x0003ffff) | ((pte&~0xff)<<4); break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: arch/sparc/mm/leon.c:155:
+  case 2: paddr_calc = (vaddr & 0x00ffffff) | ((pte&~0xff)<<4); break;$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#757: FILE: arch/sparc/mm/leon.c:155:
+  case 2: paddr_calc = (vaddr & 0x00ffffff) | ((pte&~0xff)<<4); break;
                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#757: FILE: arch/sparc/mm/leon.c:155:
+  case 2: paddr_calc = (vaddr & 0x00ffffff) | ((pte&~0xff)<<4); break;
                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#757: FILE: arch/sparc/mm/leon.c:155:
+  case 2: paddr_calc = (vaddr & 0x00ffffff) | ((pte&~0xff)<<4); break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: arch/sparc/mm/leon.c:157:
+  case 3: paddr_calc =  vaddr; break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#759: FILE: arch/sparc/mm/leon.c:157:
+  case 3: paddr_calc =  vaddr; break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: arch/sparc/mm/leon.c:158:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: arch/sparc/mm/leon.c:159:
+  if (srmmu_swprobe_trace) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#761: FILE: arch/sparc/mm/leon.c:159:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: padde %x\n",paddr_calc);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#761: FILE: arch/sparc/mm/leon.c:159:
+  if (srmmu_swprobe_trace) {
+    printk("swprobe: padde %x\n",paddr_calc);
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: arch/sparc/mm/leon.c:160:
+    printk("swprobe: padde %x\n",paddr_calc);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#762: FILE: arch/sparc/mm/leon.c:160:
+    printk("swprobe: padde %x\n",paddr_calc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#762: FILE: arch/sparc/mm/leon.c:160:
+    printk("swprobe: padde %x\n",paddr_calc);
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: arch/sparc/mm/leon.c:161:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: arch/sparc/mm/leon.c:162:
+  if (paddr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#764: FILE: arch/sparc/mm/leon.c:162:
+  if (paddr) {
+    *paddr = paddr_calc;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#764: FILE: arch/sparc/mm/leon.c:162:
+  if (paddr) {
+    *paddr = paddr_calc;
+  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: arch/sparc/mm/leon.c:163:
+    *paddr = paddr_calc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: arch/sparc/mm/leon.c:164:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: arch/sparc/mm/leon.c:165:
+  return paddrbase;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: arch/sparc/mm/leon.c:168:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: arch/sparc/mm/srmmu.c:577:
+^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#820: FILE: arch/sparc/mm/srmmu.c:1299:
+	if (sparc_cpu_model == sparc_leon) {
[...]
+	} else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: arch/sparc/mm/srmmu.c:1300:
+        ^Ileon_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#821: FILE: arch/sparc/mm/srmmu.c:1300:
+        ^Ileon_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: arch/sparc/mm/srmmu.c:1300:
+        ^Ileon_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: arch/sparc/mm/srmmu.c:1300:
+        	leon_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));
         	                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#821: FILE: arch/sparc/mm/srmmu.c:1300:
+        	leon_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));
         	                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: arch/sparc/mm/srmmu.c:1302:
+        ^Isrmmu_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#823: FILE: arch/sparc/mm/srmmu.c:1302:
+        ^Isrmmu_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: arch/sparc/mm/srmmu.c:1302:
+        ^Isrmmu_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#823: FILE: arch/sparc/mm/srmmu.c:1302:
+        	srmmu_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));
         	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#823: FILE: arch/sparc/mm/srmmu.c:1302:
+        	srmmu_inherit_prom_mappings(0xfe400000,(LINUX_OPPROM_ENDVM-PAGE_SIZE));
         	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#832: FILE: arch/sparc/mm/srmmu.c:1997:
+void __init leon_inherit_prom_mappings(unsigned long start,unsigned long end)
                                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: arch/sparc/mm/srmmu.c:2005:
+	while(start <= end) {

ERROR:SPACING: space required before the open parenthesis '('
#843: FILE: arch/sparc/mm/srmmu.c:2008:
+		if(start == 0xfef00000)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#845: FILE: arch/sparc/mm/srmmu.c:2010:
+		if(!(prompte = srmmu_swprobe(start,0))) {
 		                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#845: FILE: arch/sparc/mm/srmmu.c:2010:
+		if(!(prompte = srmmu_swprobe(start,0))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#845: FILE: arch/sparc/mm/srmmu.c:2010:
+		if(!(prompte = srmmu_swprobe(start,0))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: arch/sparc/mm/srmmu.c:2014:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/sparc/mm/srmmu.c:2014:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: arch/sparc/mm/srmmu.c:2017:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: arch/sparc/mm/srmmu.c:2017:
+    $

ERROR:SPACING: space required before the open parenthesis '('
#853: FILE: arch/sparc/mm/srmmu.c:2018:
+		if(!(start & ~(SRMMU_REAL_PMD_MASK))) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#854: FILE: arch/sparc/mm/srmmu.c:2019:
+			if(srmmu_swprobe((start-PAGE_SIZE) + SRMMU_REAL_PMD_SIZE, 0) == prompte)
 			                       ^

ERROR:SPACING: space required before the open parenthesis '('
#854: FILE: arch/sparc/mm/srmmu.c:2019:
+			if(srmmu_swprobe((start-PAGE_SIZE) + SRMMU_REAL_PMD_SIZE, 0) == prompte)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: arch/sparc/mm/srmmu.c:2022:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: arch/sparc/mm/srmmu.c:2022:
+    $

ERROR:SPACING: space required before the open parenthesis '('
#858: FILE: arch/sparc/mm/srmmu.c:2023:
+		if(!(start & ~(SRMMU_PGDIR_MASK))) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#859: FILE: arch/sparc/mm/srmmu.c:2024:
+			if(srmmu_swprobe((start-PAGE_SIZE) + SRMMU_PGDIR_SIZE, 0) ==
 			                       ^

ERROR:SPACING: space required before the open parenthesis '('
#859: FILE: arch/sparc/mm/srmmu.c:2024:
+			if(srmmu_swprobe((start-PAGE_SIZE) + SRMMU_PGDIR_SIZE, 0) ==

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: arch/sparc/mm/srmmu.c:2028:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: arch/sparc/mm/srmmu.c:2028:
+    $

ERROR:SPACING: space required before the open parenthesis '('
#865: FILE: arch/sparc/mm/srmmu.c:2030:
+		if(what == 2) {

ERROR:SPACING: space required before the open parenthesis '('
#870: FILE: arch/sparc/mm/srmmu.c:2035:
+		if(srmmu_pgd_none(*(pgd_t *)__nocache_fix(pgdp))) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#871: FILE: arch/sparc/mm/srmmu.c:2036:
+			pmdp = (pmd_t *)__srmmu_get_nocache(SRMMU_PMD_TABLE_SIZE, SRMMU_PMD_TABLE_SIZE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pmdp"
#872: FILE: arch/sparc/mm/srmmu.c:2037:
+			if (pmdp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#878: FILE: arch/sparc/mm/srmmu.c:2043:
+		if(srmmu_pmd_none(*(pmd_t *)__nocache_fix(pmdp))) {

CHECK:SPACING: No space is necessary after a cast
#879: FILE: arch/sparc/mm/srmmu.c:2044:
+			ptep = (pte_t *) __srmmu_get_nocache(PTE_SIZE,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptep"
#881: FILE: arch/sparc/mm/srmmu.c:2046:
+			if (ptep == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#886: FILE: arch/sparc/mm/srmmu.c:2051:
+		if(what == 1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#893: FILE: arch/sparc/mm/srmmu.c:2058:
+			unsigned int x;	/* Index of HW PMD in soft cluster */
+			x = (start >> PMD_SHIFT) & 15;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#903: FILE: arch/sparc/mm/srmmu.c:2068:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: arch/sparc/mm/srmmu.c:2068:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#904: FILE: arch/sparc/mm/srmmu.c:2069:
+void leon_flush_cache_all (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: arch/sparc/mm/srmmu.c:2070:
+{ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#906: FILE: arch/sparc/mm/srmmu.c:2071:
+#if defined( CONFIG_LEON) || defined(CONFIG_LEON_3)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: arch/sparc/mm/srmmu.c:2073:
+        __asm__ __volatile__(" flush "); //iflush $

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: arch/sparc/mm/srmmu.c:2073:
+        __asm__ __volatile__(" flush "); //iflush $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: arch/sparc/mm/srmmu.c:2073:
+        __asm__ __volatile__(" flush "); //iflush $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#909: FILE: arch/sparc/mm/srmmu.c:2074:
+	__asm__ __volatile__("sta %%g0, [%%g0] %0\n\t": :
 	                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: arch/sparc/mm/srmmu.c:2076:
+#else $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#912: FILE: arch/sparc/mm/srmmu.c:2077:
+	__asm__ __volatile__("sta %%g0, [%%g0] %0\n\t": :
 	                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#914: FILE: arch/sparc/mm/srmmu.c:2079:
+	__asm__ __volatile__("sta %%g0, [%%g0] %0\n\t": :
 	                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#920: FILE: arch/sparc/mm/srmmu.c:2085:
+void leon_flush_tlb_all (void)

ERROR:SPACING: space prohibited after that open parenthesis '('
#922: FILE: arch/sparc/mm/srmmu.c:2087:
+#if defined( CONFIG_LEON) || defined(CONFIG_LEON_3)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#924: FILE: arch/sparc/mm/srmmu.c:2089:
+	__asm__ __volatile__("sta %%g0, [%0] %1\n\t": :
 	                                            ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#934: FILE: arch/sparc/mm/srmmu.c:2099:
+static void __init init_leon(void) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#935: FILE: arch/sparc/mm/srmmu.c:2100:
+static void __init init_leon(void) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: arch/sparc/mm/srmmu.c:2108:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: arch/sparc/mm/srmmu.c:2108:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#948: FILE: arch/sparc/mm/srmmu.c:2113:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: arch/sparc/mm/srmmu.c:2113:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: arch/sparc/mm/srmmu.c:2116:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: arch/sparc/mm/srmmu.c:2118:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: arch/sparc/mm/srmmu.c:2122:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#977: FILE: arch/sparc/mm/srmmu.c:2143:
+	if(psr_typ == 0xf) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219106.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 137 errors, 279 warnings, 54 checks, 859 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219106.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
