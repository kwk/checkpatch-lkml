WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/reiserfs/fix_node.c:923:
+  if ( (left = sb_find_get_block(p_s_sb, n_left_neighbor_blocknr)) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#159: FILE: fs/reiserfs/fix_node.c:923:
+  if ( (left = sb_find_get_block(p_s_sb, n_left_neighbor_blocknr)) ) {
[...]
     RFALSE( buffer_uptodate (left) && ! B_IS_IN_TREE(left),

ERROR:SPACING: space prohibited after that open parenthesis '('
#159: FILE: fs/reiserfs/fix_node.c:923:
+  if ( (left = sb_find_get_block(p_s_sb, n_left_neighbor_blocknr)) ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#159: FILE: fs/reiserfs/fix_node.c:923:
+  if ( (left = sb_find_get_block(p_s_sb, n_left_neighbor_blocknr)) ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#159: FILE: fs/reiserfs/fix_node.c:923:
+  if ( (left = sb_find_get_block(p_s_sb, n_left_neighbor_blocknr)) ) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/reiserfs/journal.c:692:
+    tbh = journal_find_get_block(s, bn) ;$

WARNING:SPACING: space prohibited before semicolon
#170: FILE: fs/reiserfs/journal.c:692:
+    tbh = journal_find_get_block(s, bn) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/reiserfs/journal.c:721:
+      tbh = journal_find_get_block(s, bn) ;$

WARNING:SPACING: space prohibited before semicolon
#179: FILE: fs/reiserfs/journal.c:721:
+      tbh = journal_find_get_block(s, bn) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#186: FILE: fs/reiserfs/journal.c:2766:
   if (reiserfs_dont_log(th->t_super)) {
+    bh = sb_find_get_block(p_s_sb, blocknr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: fs/reiserfs/journal.c:2767:
+    bh = sb_find_get_block(p_s_sb, blocknr) ;$

WARNING:SPACING: space prohibited before semicolon
#188: FILE: fs/reiserfs/journal.c:2767:
+    bh = sb_find_get_block(p_s_sb, blocknr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/reiserfs/journal.c:2775:
+  bh = sb_find_get_block(p_s_sb, blocknr) ;$

WARNING:SPACING: space prohibited before semicolon
#197: FILE: fs/reiserfs/journal.c:2775:
+  bh = sb_find_get_block(p_s_sb, blocknr) ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: fs/ufs/truncate.c:120:
+		bh = sb_find_get_block (sb, tmp + j);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: fs/ufs/truncate.c:182:
+		bh = sb_find_get_block (sb, tmp + j);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#246: FILE: include/linux/buffer_head.h:161:
+struct buffer_head *__find_get_block(struct block_device *, sector_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#246: FILE: include/linux/buffer_head.h:161:
+struct buffer_head *__find_get_block(struct block_device *, sector_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#246: FILE: include/linux/buffer_head.h:161:
+struct buffer_head *__find_get_block(struct block_device *, sector_t, int);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#291: FILE: include/linux/reiserfs_fs.h:1654:
+#define journal_find_get_block(s, block) __find_get_block(SB_JOURNAL(s)->j_dev_bd, block, s->s_blocksize)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#291: FILE: include/linux/reiserfs_fs.h:1654:
+#define journal_find_get_block(s, block) __find_get_block(SB_JOURNAL(s)->j_dev_bd, block, s->s_blocksize)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454944.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 17 warnings, 1 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454944.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
