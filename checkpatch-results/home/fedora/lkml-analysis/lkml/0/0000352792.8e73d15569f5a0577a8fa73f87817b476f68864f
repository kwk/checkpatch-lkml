WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -Nrup linux-2.6.0-test1-ori/arch/i386/kernel/module.c linux-2.6.0-test1/arch/i386/kernel/module.c

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#67: FILE: arch/um/drivers/line.c:436:
+	} */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#78: FILE: arch/um/drivers/stdio_console.c:162:
+static struct tty_operations console_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: arch/um/drivers/stdio_console.c:163:
+^I.open ^I ^I^I= con_open,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: arch/um/drivers/stdio_console.c:164:
+^I.close ^I ^I^I= con_close,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: arch/um/drivers/stdio_console.c:165:
+^I.write ^I ^I^I= con_write,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: arch/um/drivers/stdio_console.c:166:
+^I.chars_in_buffer ^I= chars_in_buffer,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: arch/um/drivers/stdio_console.c:167:
+^I.set_termios ^I^I= set_termios,$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#146: FILE: arch/um/kernel/irq.c:439:
+	retval = request_irq(irq, (irqreturn_t (*)(int, void *, struct pt_regs *))handler, irqflags, devname, dev_id);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#191: FILE: arch/um/kernel/signal_kern.c:145:
+	ka = &current->sighand->action[sig -1 ];
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close square bracket ']'
#191: FILE: arch/um/kernel/signal_kern.c:145:
+	ka = &current->sighand->action[sig -1 ];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: arch/um/kernel/trap_kern.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: include/asm-um/pgtable.h:239:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#334: FILE: include/asm-um/pgtable.h:242:
+#define pte_to_pgoff(pte) \
+        ((((pte).pte_low >> 1) & 0x1f ) + (((pte).pte_low >> 8) << 5 ))

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: include/asm-um/pgtable.h:243:
+        ((((pte).pte_low >> 1) & 0x1f ) + (((pte).pte_low >> 8) << 5 ))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: include/asm-um/pgtable.h:243:
+        ((((pte).pte_low >> 1) & 0x1f ) + (((pte).pte_low >> 8) << 5 ))$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#335: FILE: include/asm-um/pgtable.h:243:
+        ((((pte).pte_low >> 1) & 0x1f ) + (((pte).pte_low >> 8) << 5 ))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'off' - possible side-effects?
#337: FILE: include/asm-um/pgtable.h:245:
+#define pgoff_to_pte(off) \
+	        ((pte_t) { (((off) & 0x1f) << 1) + (((off) >> 5) << 8) + _PAGE_FILE })

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: include/asm-um/pgtable.h:246:
+^I        ((pte_t) { (((off) & 0x1f) << 1) + (((off) >> 5) << 8) + _PAGE_FILE })$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#342: FILE: include/asm-um/pgtable.h:250:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#344: FILE: include/asm-um/pgtable.h:252:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#401: FILE: usr/initramfs_data.S:1:
+	.section .init.ramfs,"a"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352792.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 7 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352792.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
