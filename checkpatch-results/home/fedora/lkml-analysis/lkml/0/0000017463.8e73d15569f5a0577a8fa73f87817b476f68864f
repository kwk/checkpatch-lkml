WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: kernel/kprobes.c:101:
+		struct task_struct *p, *q;
+		do_each_thread(p, q) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: kernel/kprobes.c:104:
+				printk("Check failed: %s is running\n",p->comm);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: kernel/kprobes.c:104:
+				printk("Check failed: %s is running\n",p->comm);
 				                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#118: FILE: kernel/kprobes.c:113:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:INDENTED_LABEL: labels should not be indented
#129: FILE: kernel/kprobes.c:127:
+      retry:

WARNING:BRACES: braces {} are not necessary for single statement blocks
#139: FILE: kernel/kprobes.c:145:
+	if (kprobe_garbage_slots && collect_garbage_slots() == 0) {
+		goto retry;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: kernel/kprobes.c:210:
+		int i;
+		kip = hlist_entry(pos, struct kprobe_insn_page, hlist);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: kernel/kprobes.c:224:
+void __kprobes free_insn_slot(kprobe_opcode_t * slot, int dirty)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#242: FILE: kernel/kprobes.c:243:
+	if (dirty && (++kprobe_garbage_slots > INSNS_PER_PAGE)) {
+		collect_garbage_slots();
+	}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: include/linux/kprobes.h:168:
+extern void free_insn_slot(kprobe_opcode_t *slot, int dirty);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 1 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
