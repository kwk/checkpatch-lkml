ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: drivers/base/driver.c:81:
+void driver_unregister(struct device_driver * drv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/base/driver.c:83:
+	struct bus_type * bus;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: drivers/base/driver.c:98:
+	pr_debug("Unregistering driver '%s' from bus '%s'\n",drv->name,drv->bus->name);
 	                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: drivers/base/driver.c:98:
+	pr_debug("Unregistering driver '%s' from bus '%s'\n",drv->name,drv->bus->name);
 	                                                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: drivers/base/driver.c:104:
+struct device_driver * get_driver(struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: drivers/base/driver.c:104:
+struct device_driver * get_driver(struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#155: FILE: include/linux/device.h:93:
+	struct module		* owner;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: include/linux/device.h:110:
+extern void driver_unregister(struct device_driver * drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: include/linux/device.h:110:
+extern void driver_unregister(struct device_driver * drv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: include/linux/device.h:112:
+extern struct device_driver * get_driver(struct device_driver * drv);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: include/linux/device.h:112:
+extern struct device_driver * get_driver(struct device_driver * drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/device.h:112:
+extern struct device_driver * get_driver(struct device_driver * drv);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 0 warnings, 2 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
