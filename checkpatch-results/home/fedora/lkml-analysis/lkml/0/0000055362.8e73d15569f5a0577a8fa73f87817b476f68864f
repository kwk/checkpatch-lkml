WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
    master.kernel.org:/pub/scm/linux/kernel/git/roland/infiniband.git for-linus

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#147: FILE: drivers/infiniband/core/user_mad.c:118:
+	spinlock_t		send_lock;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#155: FILE: drivers/infiniband/core/user_mad.c:182:
+static void dequeue_send(struct ib_umad_file *file,
+			 struct ib_umad_packet *packet)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/infiniband/core/user_mad.c:184:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/infiniband/core/user_mad.c:188:
+ }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#180: FILE: drivers/infiniband/core/user_mad.c:387:
+	if (!hdr1->grh_present && !hdr2->grh_present)
+	   return (hdr1->lid == hdr2->lid);

WARNING:TABSTOP: Statements should start on a tabstop
#181: FILE: drivers/infiniband/core/user_mad.c:388:
+	   return (hdr1->lid == hdr2->lid);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#183: FILE: drivers/infiniband/core/user_mad.c:390:
+	if (hdr1->grh_present && hdr2->grh_present)
+	   return !memcmp(hdr1->gid, hdr2->gid, 16);

WARNING:TABSTOP: Statements should start on a tabstop
#184: FILE: drivers/infiniband/core/user_mad.c:391:
+	   return !memcmp(hdr1->gid, hdr2->gid, 16);

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/infiniband/core/user_mad.c:402:
+	hdr = (struct ib_mad_hdr *) packet->mad.data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#197: FILE: drivers/infiniband/core/user_mad.c:404:
+		sent_hdr = (struct ib_mad_hdr *) sent_packet->mad.data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdr->tid != sent_hdr->tid'
#199: FILE: drivers/infiniband/core/user_mad.c:406:
+		if ((hdr->tid != sent_hdr->tid) ||
+		    (hdr->mgmt_class != sent_hdr->mgmt_class))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdr->mgmt_class != sent_hdr->mgmt_class'
#199: FILE: drivers/infiniband/core/user_mad.c:406:
+		if ((hdr->tid != sent_hdr->tid) ||
+		    (hdr->mgmt_class != sent_hdr->mgmt_class))

CHECK:SPACING: No space is necessary after a cast
#208: FILE: drivers/infiniband/core/user_mad.c:415:
+		if (!ib_response_mad((struct ib_mad *) hdr)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#208: FILE: drivers/infiniband/core/user_mad.c:415:
+		if (!ib_response_mad((struct ib_mad *) hdr)) {
[...]
+		} else if (!ib_response_mad((struct ib_mad *) sent_hdr))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#209: FILE: drivers/infiniband/core/user_mad.c:416:
+			if (!ib_response_mad((struct ib_mad *) sent_hdr))

CHECK:SPACING: No space is necessary after a cast
#212: FILE: drivers/infiniband/core/user_mad.c:419:
+		} else if (!ib_response_mad((struct ib_mad *) sent_hdr))

WARNING:SIZEOF_PARENTHESIS: sizeof emsg should be sizeof(emsg)
#460: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:871:
+	get_rhf_errstring(eflags, emsg, sizeof emsg);

WARNING:SPLIT_STRING: quoted string split across lines
#463: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:874:
+	ipath_cdbg(PKT, "RHFerrs %x hdrqtail=%x typ=%u "
+		   "tlen=%x opcode=%x egridx=%x: %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#465: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:876:
+		   ipath_hdrget_rcv_type((__le32 *) rc),

CHECK:SPACING: No space is necessary after a cast
#466: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:877:
+		   ipath_hdrget_length_in_bytes((__le32 *) rc),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#520: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:974:
+		else if (etype == RCVHQ_RCV_TYPE_NON_KD) {
 				int ret = __ipath_verbs_rcv(dd, rc + 1,

CHECK:BRACES: Unbalanced braces around else statement
#547: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:998:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#629: FILE: drivers/infiniband/hw/mthca/mthca_srq.c:374:
+		u32 max_wr = mthca_is_memfree(dev) ? srq->max - 1 : srq->max;
+		if (attr->srq_limit > max_wr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 12 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055362.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
