WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
Socketctl can replace the userspace tool "cardctl" and provide the user with

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: drivers/pcmcia/socketctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#73: FILE: drivers/pcmcia/socketctl.c:2:
+ * linux/drivers/pcmcia/socketctl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/pcmcia/socketctl.c:4:
+ * Copyright (C) 2003 Dominik Brodowski $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: drivers/pcmcia/socketctl.c:32:
+static DECLARE_MUTEX		(socketctl_sem);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: drivers/pcmcia/socketctl.c:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: drivers/pcmcia/socketctl.c:39:
+#define show_one_voltage(object)^I ^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'object' - possible side-effects?
#110: FILE: drivers/pcmcia/socketctl.c:39:
+#define show_one_voltage(object)	 				\
+static ssize_t show_##object 						\
+(struct socketctl_data * data, char *buf)				\
+{									\
+	config_info_t config;	 					\
+	int ret = -EINVAL;	 					\
+	config.Function = 0;	 					\
+	ret = pcmcia_get_configuration_info(data->handle, &config);	\
+	if (ret)	 						\
+		return 0;	 					\
+	return sprintf (buf, "%d.%1dV\n", 	 			\
+			config.object/10, config.object%10);	 	\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'object' may be better as '(object)' to avoid precedence issues
#110: FILE: drivers/pcmcia/socketctl.c:39:
+#define show_one_voltage(object)	 				\
+static ssize_t show_##object 						\
+(struct socketctl_data * data, char *buf)				\
+{									\
+	config_info_t config;	 					\
+	int ret = -EINVAL;	 					\
+	config.Function = 0;	 					\
+	ret = pcmcia_get_configuration_info(data->handle, &config);	\
+	if (ret)	 						\
+		return 0;	 					\
+	return sprintf (buf, "%d.%1dV\n", 	 			\
+			config.object/10, config.object%10);	 	\
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: drivers/pcmcia/socketctl.c:40:
+static ssize_t show_##object ^I^I^I^I^I^I\$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: drivers/pcmcia/socketctl.c:41:
+(struct socketctl_data * data, char *buf)				\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: drivers/pcmcia/socketctl.c:43:
+^Iconfig_info_t config;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: drivers/pcmcia/socketctl.c:44:
+^Iint ret = -EINVAL;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/pcmcia/socketctl.c:45:
+^Iconfig.Function = 0;^I ^I^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <Function>
#116: FILE: drivers/pcmcia/socketctl.c:45:
+	config.Function = 0;	 					\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: drivers/pcmcia/socketctl.c:47:
+^Iif (ret)^I ^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/pcmcia/socketctl.c:48:
+^I^Ireturn 0;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: drivers/pcmcia/socketctl.c:49:
+^Ireturn sprintf (buf, "%d.%1dV\n", ^I ^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: drivers/pcmcia/socketctl.c:49:
+	return sprintf (buf, "%d.%1dV\n", 	 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/pcmcia/socketctl.c:50:
+^I^I^Iconfig.object/10, config.object%10);^I ^I\$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#121: FILE: drivers/pcmcia/socketctl.c:50:
+			config.object/10, config.object%10);	 	\
 			             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#121: FILE: drivers/pcmcia/socketctl.c:50:
+			config.object/10, config.object%10);	 	\
 			                               ^

CHECK:CAMELCASE: Avoid CamelCase: <Vcc>
#124: FILE: drivers/pcmcia/socketctl.c:53:
+show_one_voltage(Vcc);

CHECK:CAMELCASE: Avoid CamelCase: <Vpp1>
#125: FILE: drivers/pcmcia/socketctl.c:54:
+show_one_voltage(Vpp1);

CHECK:CAMELCASE: Avoid CamelCase: <Vpp2>
#126: FILE: drivers/pcmcia/socketctl.c:55:
+show_one_voltage(Vpp2);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: drivers/pcmcia/socketctl.c:57:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: drivers/pcmcia/socketctl.c:60:
+static ssize_t show_irq (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: drivers/pcmcia/socketctl.c:60:
+static ssize_t show_irq (struct socketctl_data * data, char *buf)

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#140: FILE: drivers/pcmcia/socketctl.c:69:
+	if (!(config.Attributes & CONF_VALID_CLIENT))

CHECK:CAMELCASE: Avoid CamelCase: <AssignedIRQ>
#141: FILE: drivers/pcmcia/socketctl.c:70:
+		config.AssignedIRQ = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: drivers/pcmcia/socketctl.c:74:
+static ssize_t show_irq_type (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: drivers/pcmcia/socketctl.c:74:
+static ssize_t show_irq_type (struct socketctl_data * data, char *buf)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config.AssignedIRQ == 0'
#154: FILE: drivers/pcmcia/socketctl.c:83:
+	if ((config.AssignedIRQ == 0) || !(config.Attributes & CONF_VALID_CLIENT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <IRQAttributes>
#157: FILE: drivers/pcmcia/socketctl.c:86:
+	switch (config.IRQAttributes & IRQ_TYPE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/pcmcia/socketctl.c:92:
+^I^Ireturn sprintf(buf, "shared\n"); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/pcmcia/socketctl.c:97:
+static ssize_t show_irq_mode (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: drivers/pcmcia/socketctl.c:97:
+static ssize_t show_irq_mode (struct socketctl_data * data, char *buf)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config.AssignedIRQ == 0'
#177: FILE: drivers/pcmcia/socketctl.c:106:
+	if ((config.AssignedIRQ == 0) || !(config.Attributes & CONF_VALID_CLIENT))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/pcmcia/socketctl.c:109:
+
+

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#183: FILE: drivers/pcmcia/socketctl.c:112:
+		return sprintf(buf, "pulse\n");
+	else

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: drivers/pcmcia/socketctl.c:113:
+^I        return sprintf(buf, "level\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#189: FILE: drivers/pcmcia/socketctl.c:118:
+(struct socketctl_data * data, char *buf)				\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: drivers/pcmcia/socketctl.c:120:
+^Iconfig_info_t config;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/pcmcia/socketctl.c:121:
+^Iint ret = -EINVAL;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: drivers/pcmcia/socketctl.c:122:
+^Iconfig.Function = 0;^I ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/pcmcia/socketctl.c:124:
+^Iif (ret)^I ^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: drivers/pcmcia/socketctl.c:125:
+^I^Ireturn 0;^I ^I^I^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#202: FILE: drivers/pcmcia/socketctl.c:131:
+		return sprintf (buf, "enabled\n");			\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/pcmcia/socketctl.c:138:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: drivers/pcmcia/socketctl.c:141:
+static ssize_t show_card_voltage (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: drivers/pcmcia/socketctl.c:141:
+static ssize_t show_card_voltage (struct socketctl_data * data, char *buf)

CHECK:CAMELCASE: Avoid CamelCase: <CardState>
#224: FILE: drivers/pcmcia/socketctl.c:153:
+	if (status.CardState & CS_EVENT_3VCARD)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: drivers/pcmcia/socketctl.c:161:
+static ssize_t show_card_type (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: drivers/pcmcia/socketctl.c:161:
+static ssize_t show_card_type (struct socketctl_data * data, char *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: drivers/pcmcia/socketctl.c:184:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: drivers/pcmcia/socketctl.c:187:
+static ssize_t show_status (struct socketctl_data * data, char *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: drivers/pcmcia/socketctl.c:187:
+static ssize_t show_status (struct socketctl_data * data, char *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/pcmcia/socketctl.c:242:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct socketctl_data *' should also have an identifier name
#318: FILE: drivers/pcmcia/socketctl.c:247:
+	ssize_t (*show)(struct socketctl_data *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#318: FILE: drivers/pcmcia/socketctl.c:247:
+	ssize_t (*show)(struct socketctl_data *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct socketctl_data *' should also have an identifier name
#319: FILE: drivers/pcmcia/socketctl.c:248:
+	ssize_t (*store)(struct socketctl_data *, const char *, size_t count);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#319: FILE: drivers/pcmcia/socketctl.c:248:
+	ssize_t (*store)(struct socketctl_data *, const char *, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#351: FILE: drivers/pcmcia/socketctl.c:280:
+static struct attribute * default_attrs[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/pcmcia/socketctl.c:296:
+#define to_data(k) container_of(k,struct socketctl_data,kobj)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/pcmcia/socketctl.c:296:
+#define to_data(k) container_of(k,struct socketctl_data,kobj)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/pcmcia/socketctl.c:297:
+#define to_attr(a) container_of(a,struct socketctl_attr,attr)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/pcmcia/socketctl.c:297:
+#define to_attr(a) container_of(a,struct socketctl_attr,attr)
                                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#370: FILE: drivers/pcmcia/socketctl.c:299:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#370: FILE: drivers/pcmcia/socketctl.c:299:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#370: FILE: drivers/pcmcia/socketctl.c:299:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#370: FILE: drivers/pcmcia/socketctl.c:299:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#370: FILE: drivers/pcmcia/socketctl.c:299:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)
                                                                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: drivers/pcmcia/socketctl.c:301:
+	struct socketctl_data * data = to_data(kobj);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#373: FILE: drivers/pcmcia/socketctl.c:302:
+	struct socketctl_attr * sattr = to_attr(attr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: drivers/pcmcia/socketctl.c:303:
+	struct socketctl_attr * sattr = to_attr(attr);
+	return sattr->show ? sattr->show(data,buf) : 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: drivers/pcmcia/socketctl.c:303:
+	return sattr->show ? sattr->show(data,buf) : 0;
 	                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/pcmcia/socketctl.c:306:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: drivers/pcmcia/socketctl.c:306:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: drivers/pcmcia/socketctl.c:306:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: drivers/pcmcia/socketctl.c:307:
+		     const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: drivers/pcmcia/socketctl.c:309:
+	struct socketctl_data * data = to_data(kobj);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#381: FILE: drivers/pcmcia/socketctl.c:310:
+	struct socketctl_attr * sattr = to_attr(attr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#382: FILE: drivers/pcmcia/socketctl.c:311:
+	struct socketctl_attr * sattr = to_attr(attr);
+	return sattr->store ? sattr->store(data,buf,count) : 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: drivers/pcmcia/socketctl.c:311:
+	return sattr->store ? sattr->store(data,buf,count) : 0;
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: drivers/pcmcia/socketctl.c:311:
+	return sattr->store ? sattr->store(data,buf,count) : 0;
 	                                           ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#385: FILE: drivers/pcmcia/socketctl.c:314:
+static struct sysfs_ops sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*socketctl)...) over kmalloc(sizeof(struct socketctl_data)...)
#404: FILE: drivers/pcmcia/socketctl.c:333:
+	socketctl = kmalloc(sizeof(struct socketctl_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#416: FILE: drivers/pcmcia/socketctl.c:345:
+	 * accessible to socketctl.c directly */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INDENTED_LABEL: labels should not be indented
#418: FILE: drivers/pcmcia/socketctl.c:347:
+	next_try:

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#427: FILE: drivers/pcmcia/socketctl.c:356:
+	client_reg.dev_info = bind.dev_info = &dev_info;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <Socket>
#428: FILE: drivers/pcmcia/socketctl.c:357:
+	bind.Socket = socketctl->socket_no;

CHECK:CAMELCASE: Avoid CamelCase: <EventMask>
#437: FILE: drivers/pcmcia/socketctl.c:366:
+	client_reg.EventMask = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Version>
#439: FILE: drivers/pcmcia/socketctl.c:368:
+	client_reg.Version = 0x0210;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#446: FILE: drivers/pcmcia/socketctl.c:375:
+	list_add(&socketctl->socket_list,&socketctl_socket_list);
 	                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#446: FILE: drivers/pcmcia/socketctl.c:375:
+	list_add(&socketctl->socket_list,&socketctl_socket_list);
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#465: FILE: drivers/pcmcia/socketctl.c:394:
+	for (i=0; i<cls_d->nsock; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#465: FILE: drivers/pcmcia/socketctl.c:394:
+	for (i=0; i<cls_d->nsock; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#465: FILE: drivers/pcmcia/socketctl.c:394:
+	for (i=0; i<cls_d->nsock; i++) {
+		ret &= socketctl_add_socket(dev, i);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#470: FILE: drivers/pcmcia/socketctl.c:399:
+	return (ret);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: drivers/pcmcia/socketctl.c:423:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: drivers/pcmcia/socketctl.c:425:
+        .name = "socketctl",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/pcmcia/socketctl.c:425:
+        .name = "socketctl",$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: drivers/pcmcia/socketctl.c:446:
+MODULE_AUTHOR ("Dominik Brodowski <linux@brodo.de>");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: drivers/pcmcia/socketctl.c:447:
+MODULE_DESCRIPTION ("Socket control module for PCMCIA/CardBus sockets");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#519: FILE: drivers/pcmcia/socketctl.c:448:
+MODULE_LICENSE ("GPL");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 41 warnings, 26 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
