WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -Nuarp linux-2.4.20-bonding-20030317/drivers/net/bonding.c linux-2.4.20-bonding-20030317-devel/drivers/net/bonding.c

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#49: FILE: drivers/net/bonding.c:657:
+/*
+ * Get link speed and duplex from the slave's base driver

WARNING:SPACING: Unnecessary space before function pointer name
#57: FILE: drivers/net/bonding.c:665:
+	static int (* ioctl)(struct net_device *, struct ifreq *, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#57: FILE: drivers/net/bonding.c:665:
+	static int (* ioctl)(struct net_device *, struct ifreq *, int);
 	            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#64: FILE: drivers/net/bonding.c:672:
+		ifr.ifr_data = (char*)&etool;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#75: FILE: drivers/net/bonding.c:683:
+	switch (slave->speed) {
+		case SPEED_10:
+		case SPEED_100:
+		case SPEED_1000:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/net/bonding.c:691:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#84: FILE: drivers/net/bonding.c:692:
+	switch (slave->duplex) {
+		case DUPLEX_FULL:
+		case DUPLEX_HALF:
[...]
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/net/bonding.c:699:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/net/bonding.c:701:
+^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#108: FILE: drivers/net/bonding.c:1233:
+	if (bond_update_speed_duplex(new_slave) && (new_slave->link == BOND_LINK_UP) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_slave->link == BOND_LINK_UP'
#108: FILE: drivers/net/bonding.c:1233:
+	if (bond_update_speed_duplex(new_slave) && (new_slave->link == BOND_LINK_UP) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#109: FILE: drivers/net/bonding.c:1234:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bond_enslave', this function's name, in a string
#110: FILE: drivers/net/bonding.c:1235:
+		       "bond_enslave(): failed to get speed/duplex from %s, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#111: FILE: drivers/net/bonding.c:1236:
+		       "bond_enslave(): failed to get speed/duplex from %s, "
+		       "speed forced to 100Mbps, duplex forced to Full.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/net/bonding.c:1239:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/net/bonding.c:1888:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/net/bonding.c:1890:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 6 warnings, 1 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
