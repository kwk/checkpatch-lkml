WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Received: by angband.namesys.com (Postfix on SuSE Linux 7.3 (i386), from userid 521)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#94: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#95: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#96: 
#	           ChangeSet	1.1085  -> 1.1088 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
#	  fs/reiserfs/file.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#98: 
#	      kernel/ksyms.c	1.185   -> 1.186  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#99: 
#	fs/reiserfs/do_balan.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
#	 fs/reiserfs/inode.c	1.72    -> 1.74   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#101: 
#	 fs/reiserfs/super.c	1.59    -> 1.60   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#102: 
#	include/linux/reiserfs_fs_sb.h	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#103: 
#	fs/reiserfs/bitmap.c	1.25    -> 1.26   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#104: 
#	include/linux/reiserfs_fs.h	1.46    -> 1.47   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#105: 
#	fs/reiserfs/tail_conversion.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#106: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#107: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#108: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#109: 
# 03/03/05	green@angband.namesys.com	1.1086

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#110: 
# reiserfs: Implement insertion of more than one unformatted pointer insertion at a time. This considerably speedups hole creation.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#111: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#112: 
# 03/03/05	green@angband.namesys.com	1.1087

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#113: 
# reiserfs: reiserfs_file_write() implemenation. Ported from 2.4.

WARNING:TYPO_SPELLING: 'implemenation' may be misspelled - perhaps 'implementation'?
#113: 
# reiserfs: reiserfs_file_write() implemenation. Ported from 2.4.
                                  ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#114: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#115: 
# This code should considerably speedup file appends in reiserfs,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#116: 
# given that callers would do than in large chunks. In order

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#117: 
# to iincerease amount of applications that will do I/O in large

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#118: 
# chunks, the "recommended i/o size" st_blksize field in result

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
# returned by stat() is set to 128k.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
# There are some known-bad applications that break in this case

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#121: 
# (ie. start to work very slow or even hang), particularly

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
# kmail 3.04 (and earlier?) (consider upgrading to 3.1+).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#123: 
# If you hit a slowdown problem that you believe is related to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#124: 
# increased "recommended i/o size", try to mount your fs with

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#125: 
# nolargeio=1 mount option (remount should work too).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#126: 
# Of course in general you should better fix broken apps, not

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
# disable this useful enchancement.

WARNING:TYPO_SPELLING: 'enchancement' may be misspelled - perhaps 'enhancement'?
#127: 
# disable this useful enchancement.
                      ^^^^^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#129: 
# 03/03/05	green@angband.namesys.com	1.1088

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#130: 
# export generic_osync_inode, block_commit_write, remove_suid. These are now used by reiserfs.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#131: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#132: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#134: 
--- a/fs/reiserfs/bitmap.c	Wed Mar  5 13:44:35 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/reiserfs/bitmap.c:737:
+    while (rest > 0 && start <= finish) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/reiserfs/bitmap.c:883:
+    spin_lock(&REISERFS_SB(sb)->bitmap_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/reiserfs/bitmap.c:885:
+    spin_unlock(&REISERFS_SB(sb)->bitmap_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/reiserfs/bitmap.c:902:
+    spin_lock(&REISERFS_SB(sb)->bitmap_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/reiserfs/bitmap.c:904:
+    spin_unlock(&REISERFS_SB(sb)->bitmap_lock);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: fs/reiserfs/bitmap.c:909:
+/* This function estimates how much pages we will be able to write to FS
+   used for reiserfs_file_write() purposes for now. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: fs/reiserfs/bitmap.c:909:
+   used for reiserfs_file_write() purposes for now. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#175: FILE: fs/reiserfs/bitmap.c:910:
+int reiserfs_can_fit_pages ( struct super_block *sb /* superblock of filesystem

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#175: FILE: fs/reiserfs/bitmap.c:910:
+int reiserfs_can_fit_pages ( struct super_block *sb /* superblock of filesystem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: fs/reiserfs/bitmap.c:911:
+int reiserfs_can_fit_pages ( struct super_block *sb /* superblock of filesystem
+						       to estimate space */ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#176: FILE: fs/reiserfs/bitmap.c:911:
+						       to estimate space */ )

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#181: FILE: fs/reiserfs/bitmap.c:916:
+	space = (SB_FREE_BLOCKS(sb) - REISERFS_SB(sb)->reserved_blocks) >> ( PAGE_CACHE_SHIFT - sb->s_blocksize_bits);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#181: FILE: fs/reiserfs/bitmap.c:916:
+	space = (SB_FREE_BLOCKS(sb) - REISERFS_SB(sb)->reserved_blocks) >> ( PAGE_CACHE_SHIFT - sb->s_blocksize_bits);

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );
                                                                                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );
                                                                                                                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#203: FILE: fs/reiserfs/do_balan.c:344:
+                    set_le_ih_k_offset( ih, le_ih_k_offset( ih ) + (tb->lbytes << (is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/reiserfs/do_balan.c:457:
+^I^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: fs/reiserfs/do_balan.c:458:
+				RFALSE (ih_item_len (B_N_PITEM_HEAD (tbS0, 0)),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: fs/reiserfs/do_balan.c:458:
+				RFALSE (ih_item_len (B_N_PITEM_HEAD (tbS0, 0)),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: fs/reiserfs/do_balan.c:458:
+				RFALSE (ih_item_len (B_N_PITEM_HEAD (tbS0, 0)),

CHECK:CAMELCASE: Avoid CamelCase: <tbS0>
#231: FILE: fs/reiserfs/do_balan.c:458:
+				RFALSE (ih_item_len (B_N_PITEM_HEAD (tbS0, 0)),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: fs/reiserfs/do_balan.c:460:
+				RFALSE (comp_short_le_keys (B_N_PKEY (tbS0, 0),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: fs/reiserfs/do_balan.c:460:
+				RFALSE (comp_short_le_keys (B_N_PKEY (tbS0, 0),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: fs/reiserfs/do_balan.c:460:
+				RFALSE (comp_short_le_keys (B_N_PKEY (tbS0, 0),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: fs/reiserfs/do_balan.c:461:
+							    B_N_PKEY (tb->L[0],

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#235: FILE: fs/reiserfs/do_balan.c:462:
+									    n + item_pos - ret_val)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: fs/reiserfs/do_balan.c:462:
+							    B_N_PKEY (tb->L[0],
+									    n + item_pos - ret_val)),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#237: FILE: fs/reiserfs/do_balan.c:464:
+				if (is_indirect_le_ih(B_N_PITEM_HEAD (tb->L[0],
[...]
+				    temp_l = l_n << (tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: fs/reiserfs/do_balan.c:464:
+				if (is_indirect_le_ih(B_N_PITEM_HEAD (tb->L[0],

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: fs/reiserfs/do_balan.c:469:
+				version = ih_version (B_N_PITEM_HEAD (tbS0, 0));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: fs/reiserfs/do_balan.c:469:
+				version = ih_version (B_N_PITEM_HEAD (tbS0, 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: fs/reiserfs/do_balan.c:470:
+^I^I^I^Iset_le_key_k_offset (version, B_N_PKEY (tbS0, 0), $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: fs/reiserfs/do_balan.c:470:
+				set_le_key_k_offset (version, B_N_PKEY (tbS0, 0), 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: fs/reiserfs/do_balan.c:470:
+				set_le_key_k_offset (version, B_N_PKEY (tbS0, 0), 

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#244: FILE: fs/reiserfs/do_balan.c:471:
+						     le_key_k_offset (version, B_N_PKEY (tbS0, 0)) + temp_l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: fs/reiserfs/do_balan.c:471:
+						     le_key_k_offset (version, B_N_PKEY (tbS0, 0)) + temp_l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: fs/reiserfs/do_balan.c:471:
+						     le_key_k_offset (version, B_N_PKEY (tbS0, 0)) + temp_l);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#246: FILE: fs/reiserfs/do_balan.c:473:
+				set_le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0]),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: fs/reiserfs/do_balan.c:473:
+				set_le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0]),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: fs/reiserfs/do_balan.c:473:
+				set_le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0]),
 				                                                       ^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#247: FILE: fs/reiserfs/do_balan.c:474:
+						     le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0])) + temp_l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: fs/reiserfs/do_balan.c:474:
+						     le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0])) + temp_l);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: fs/reiserfs/do_balan.c:474:
+						     le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFL[0],tb->lkey[0])) + temp_l);
 						                                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: fs/reiserfs/do_balan.c:543:
+			set_ih_free_space (pasted, 0);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));
                                                                             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));
                                                                                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));
                                                                                                                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#282: FILE: fs/reiserfs/do_balan.c:584:
+                    offset = le_ih_k_offset( ih ) + ((old_len - tb->rbytes )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0));

WARNING:TABSTOP: Statements should start on a tabstop
#291: FILE: fs/reiserfs/do_balan.c:592:
+		    if ( (old_len - tb->rbytes) > zeros_num ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#291: FILE: fs/reiserfs/do_balan.c:592:
+		    if ( (old_len - tb->rbytes) > zeros_num ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#291: FILE: fs/reiserfs/do_balan.c:592:
+		    if ( (old_len - tb->rbytes) > zeros_num ) {

WARNING:TABSTOP: Statements should start on a tabstop
#307: FILE: fs/reiserfs/do_balan.c:709:
+			  unsigned long temp_rem = n_rem;

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: fs/reiserfs/do_balan.c:712:
+			  if (is_indirect_le_key(version,B_N_PKEY(tb->R[0],0))){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (26, 30)
#310: FILE: fs/reiserfs/do_balan.c:712:
+			  if (is_indirect_le_key(version,B_N_PKEY(tb->R[0],0))){
+			      temp_rem = n_rem << (tb->tb_sb->s_blocksize_bits -

ERROR:SPACING: space required after that ',' (ctx:VxV)
#310: FILE: fs/reiserfs/do_balan.c:712:
+			  if (is_indirect_le_key(version,B_N_PKEY(tb->R[0],0))){
 			                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#310: FILE: fs/reiserfs/do_balan.c:712:
+			  if (is_indirect_le_key(version,B_N_PKEY(tb->R[0],0))){
 			                                                  ^

ERROR:SPACING: space required before the open brace '{'
#310: FILE: fs/reiserfs/do_balan.c:712:
+			  if (is_indirect_le_key(version,B_N_PKEY(tb->R[0],0))){

WARNING:TABSTOP: Statements should start on a tabstop
#313: FILE: fs/reiserfs/do_balan.c:715:
+			  }

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#316: FILE: fs/reiserfs/do_balan.c:717:
+					       le_key_k_offset (version, B_N_PKEY(tb->R[0],0)) + temp_rem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: fs/reiserfs/do_balan.c:717:
+					       le_key_k_offset (version, B_N_PKEY(tb->R[0],0)) + temp_rem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: fs/reiserfs/do_balan.c:717:
+					       le_key_k_offset (version, B_N_PKEY(tb->R[0],0)) + temp_rem);
 					                                                  ^

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#319: FILE: fs/reiserfs/do_balan.c:719:
+					       le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFR[0],tb->rkey[0])) + temp_rem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: fs/reiserfs/do_balan.c:719:
+					       le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFR[0],tb->rkey[0])) + temp_rem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: fs/reiserfs/do_balan.c:719:
+					       le_key_k_offset (version, B_N_PDELIM_KEY(tb->CFR[0],tb->rkey[0])) + temp_rem);
 					                                                          ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#328: FILE: fs/reiserfs/do_balan.c:743:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: fs/reiserfs/do_balan.c:747:
+			    set_ih_free_space (B_N_PITEM_HEAD(tb->R[0],0), 0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: fs/reiserfs/do_balan.c:747:
+			    set_ih_free_space (B_N_PITEM_HEAD(tb->R[0],0), 0);
 			                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: fs/reiserfs/do_balan.c:787:
+			set_ih_free_space (pasted, 0);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );
                                                                             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );
                                                                                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );
                                                                                                                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#367: FILE: fs/reiserfs/do_balan.c:873:
+                                le_ih_k_offset(ih) + ((old_len - sbytes[i] )<<(is_indirect_le_ih(ih)?tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT:0)) );

WARNING:TABSTOP: Statements should start on a tabstop
#376: FILE: fs/reiserfs/do_balan.c:883:
+		    if ( (old_len - sbytes[i]) > zeros_num ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: fs/reiserfs/do_balan.c:883:
+		    if ( (old_len - sbytes[i]) > zeros_num ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#376: FILE: fs/reiserfs/do_balan.c:883:
+		    if ( (old_len - sbytes[i]) > zeros_num ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: fs/reiserfs/do_balan.c:1010:
+				set_ih_free_space (tmp, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: fs/reiserfs/do_balan.c:1011:
+^I^I^I^Iset_le_ih_k_offset( tmp, le_ih_k_offset(tmp) + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#396: FILE: fs/reiserfs/do_balan.c:1011:
+				set_le_ih_k_offset( tmp, le_ih_k_offset(tmp) + 

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#397: FILE: fs/reiserfs/do_balan.c:1012:
+					            (n_rem << (tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: fs/reiserfs/do_balan.c:1012:
+^I^I^I^I^I            (n_rem << (tb->tb_sb->s_blocksize_bits - UNFM_P_SHIFT)));$

WARNING:TABSTOP: Statements should start on a tabstop
#398: FILE: fs/reiserfs/do_balan.c:1013:
+			    } else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: fs/reiserfs/do_balan.c:1014:
+^I^I^I^Iset_le_ih_k_offset( tmp, le_ih_k_offset(tmp) + $

ERROR:SPACING: space prohibited after that open parenthesis '('
#399: FILE: fs/reiserfs/do_balan.c:1014:
+				set_le_ih_k_offset( tmp, le_ih_k_offset(tmp) + 

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: fs/reiserfs/do_balan.c:1015:
+^I^I^I^I                    n_rem );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#400: FILE: fs/reiserfs/do_balan.c:1015:
+				                    n_rem );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: fs/reiserfs/do_balan.c:1062:
+			set_ih_free_space (pasted, 0);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#420: FILE: fs/reiserfs/do_balan.c:1154:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: fs/reiserfs/do_balan.c:1159:
+			set_ih_free_space (pasted, 0);

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#437: FILE: fs/reiserfs/file.c:9:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#447: FILE: fs/reiserfs/file.c:146:
+/* I really do not want to play with memory shortage right now, so
+   to simplify the code, we are not going to write more than this much pages at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#449: FILE: fs/reiserfs/file.c:148:
+   at a time case. This is 32 pages of 4k size. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#450: FILE: fs/reiserfs/file.c:149:
+#define REISERFS_WRITE_PAGES_AT_A_TIME (128 * 1024) / PAGE_CACHE_SIZE

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#453: FILE: fs/reiserfs/file.c:152:
+/* Allocates blocks for a file to fulfil write request.
+   Maps all unmapped but prepared pages from the list.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#454: FILE: fs/reiserfs/file.c:153:
+   Updates metadata with newly allocated blocknumbers as needed */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#455: FILE: fs/reiserfs/file.c:154:
+int reiserfs_allocate_blocks_for_region(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: fs/reiserfs/file.c:158:
+				int num_pages, /* number of pages write going
+						  to touch */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: fs/reiserfs/file.c:158:
+						  to touch */

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: fs/reiserfs/file.c:161:
+^I^I^I^I^I^I^I         prepared pages$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#462: FILE: fs/reiserfs/file.c:161:
+				struct page **prepared_pages, /* array of
+							         prepared pages

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#465: FILE: fs/reiserfs/file.c:164:
+				int blocks_to_allocate /* Amount of blocks we
+							  need to allocate to

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: fs/reiserfs/file.c:169:
+    struct cpu_key key; // cpu key of item that we are going to deal with$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: fs/reiserfs/file.c:170:
+    struct item_head *ih; // pointer to item head that we are going to deal with$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: fs/reiserfs/file.c:171:
+    struct buffer_head *bh; // Buffer head that contains items that we are going to deal with$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#473: FILE: fs/reiserfs/file.c:172:
+    struct reiserfs_transaction_handle th; // transaction handle for transaction we are going to create.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: fs/reiserfs/file.c:172:
+    struct reiserfs_transaction_handle th; // transaction handle for transaction we are going to create.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: fs/reiserfs/file.c:173:
+    __u32 * item; // pointer to item we are going to deal with$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: fs/reiserfs/file.c:173:
+    __u32 * item; // pointer to item we are going to deal with

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: fs/reiserfs/file.c:174:
+    __u32 * item; // pointer to item we are going to deal with
+    INITIALIZE_PATH(path); // path to item, that we are going to deal with.

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: fs/reiserfs/file.c:174:
+    INITIALIZE_PATH(path); // path to item, that we are going to deal with.$

WARNING:LONG_LINE_COMMENT: line length of 177 exceeds 100 columns
#476: FILE: fs/reiserfs/file.c:175:
+    b_blocknr_t allocated_blocks[blocks_to_allocate]; // Pointer to a place where allocated blocknumbers would be stored. Right now statically allocated, later that will change.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: fs/reiserfs/file.c:175:
+    b_blocknr_t allocated_blocks[blocks_to_allocate]; // Pointer to a place where allocated blocknumbers would be stored. Right now statically allocated, later that will change.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: fs/reiserfs/file.c:176:
+    reiserfs_blocknr_hint_t hint; // hint structure for block allocator.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: fs/reiserfs/file.c:177:
+    size_t res; // return value of various functions that we call.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: fs/reiserfs/file.c:178:
+    int curr_block; // current block used to keep track of unmapped blocks.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: fs/reiserfs/file.c:179:
+    int i; // loop counter$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: fs/reiserfs/file.c:180:
+    int itempos; // position in item$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: fs/reiserfs/file.c:181:
+    unsigned int from = (pos & (PAGE_CACHE_SIZE - 1)); // writing position in$

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#484: FILE: fs/reiserfs/file.c:183:
+    unsigned int to = ((pos + write_bytes - 1) & (PAGE_CACHE_SIZE - 1)) + 1; /* last modified byte offset in last page */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: fs/reiserfs/file.c:183:
+    unsigned int to = ((pos + write_bytes - 1) & (PAGE_CACHE_SIZE - 1)) + 1; /* last modified byte offset in last page */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: fs/reiserfs/file.c:184:
+    __u64 hole_size ; // amount of blocks for a file hole, if it needed to be created.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: fs/reiserfs/file.c:185:
+    int modifying_this_item = 0; // Flag for items traversal code to keep track$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#490: FILE: fs/reiserfs/file.c:189:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: fs/reiserfs/file.c:190:
+    RFALSE(!blocks_to_allocate, "green-9004: tried to allocate zero blocks?");$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#494: FILE: fs/reiserfs/file.c:193:
+    /* First we compose a key to point at the writing position, we want to do
+       that outside of any locking region. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#494: FILE: fs/reiserfs/file.c:193:
+       that outside of any locking region. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: fs/reiserfs/file.c:194:
+    make_cpu_key (&key, inode, pos+1, TYPE_ANY, 3/*key length*/);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: fs/reiserfs/file.c:194:
+    make_cpu_key (&key, inode, pos+1, TYPE_ANY, 3/*key length*/);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#495: FILE: fs/reiserfs/file.c:194:
+    make_cpu_key (&key, inode, pos+1, TYPE_ANY, 3/*key length*/);
                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#498: FILE: fs/reiserfs/file.c:197:
+    /* If we came here, it means we absolutely need to open a transaction,
+       since we need to allocate some blocks */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#498: FILE: fs/reiserfs/file.c:197:
+       since we need to allocate some blocks */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: fs/reiserfs/file.c:198:
+    reiserfs_write_lock(inode->i_sb); // Journaling stuff and we need that.$

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#500: FILE: fs/reiserfs/file.c:199:
+    journal_begin(&th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1); // Wish I know if this number enough

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: fs/reiserfs/file.c:199:
+    journal_begin(&th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1); // Wish I know if this number enough$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: fs/reiserfs/file.c:200:
+    reiserfs_update_inode_transaction(inode) ;$

WARNING:SPACING: space prohibited before semicolon
#501: FILE: fs/reiserfs/file.c:200:
+    reiserfs_update_inode_transaction(inode) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: fs/reiserfs/file.c:203:
+    res = search_for_position_by_key(inode->i_sb, &key, &path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: fs/reiserfs/file.c:204:
+    if ( res == IO_ERROR ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#505: FILE: fs/reiserfs/file.c:204:
+    if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#505: FILE: fs/reiserfs/file.c:204:
+    if ( res == IO_ERROR ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/reiserfs/file.c:207:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: fs/reiserfs/file.c:208:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/reiserfs/file.c:208:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: fs/reiserfs/file.c:211:
+    hint.th = &th; // transaction handle.$

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#513: FILE: fs/reiserfs/file.c:212:
+    hint.path = &path; // Path, so that block allocator can determine packing locality or whatever it needs to determine.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: fs/reiserfs/file.c:212:
+    hint.path = &path; // Path, so that block allocator can determine packing locality or whatever it needs to determine.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: fs/reiserfs/file.c:213:
+    hint.inode = inode; // Inode is needed by block allocator too.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: fs/reiserfs/file.c:214:
+    hint.search_start = 0; // We have no hint on where to search free blocks for block allocator.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: fs/reiserfs/file.c:215:
+    hint.key = key.on_disk_key; // on disk key of file.$

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#517: FILE: fs/reiserfs/file.c:216:
+    hint.block = inode->i_blocks>>(inode->i_sb->s_blocksize_bits-9); // Number of disk blocks this file occupies already.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: fs/reiserfs/file.c:216:
+    hint.block = inode->i_blocks>>(inode->i_sb->s_blocksize_bits-9); // Number of disk blocks this file occupies already.$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#517: FILE: fs/reiserfs/file.c:216:
+    hint.block = inode->i_blocks>>(inode->i_sb->s_blocksize_bits-9); // Number of disk blocks this file occupies already.
                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#517: FILE: fs/reiserfs/file.c:216:
+    hint.block = inode->i_blocks>>(inode->i_sb->s_blocksize_bits-9); // Number of disk blocks this file occupies already.
                                                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: fs/reiserfs/file.c:217:
+    hint.formatted_node = 0; // We are allocating blocks for unformatted node.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: fs/reiserfs/file.c:218:
+    hint.preallocate = 0; // We do not do any preallocation for now.$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#522: FILE: fs/reiserfs/file.c:221:
+    res = reiserfs_allocate_blocknrs(&hint, allocated_blocks, blocks_to_allocate, blocks_to_allocate);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: fs/reiserfs/file.c:221:
+    res = reiserfs_allocate_blocknrs(&hint, allocated_blocks, blocks_to_allocate, blocks_to_allocate);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: fs/reiserfs/file.c:222:
+    if ( res != CARRY_ON ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#523: FILE: fs/reiserfs/file.c:222:
+    if ( res != CARRY_ON ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: fs/reiserfs/file.c:222:
+    if ( res != CARRY_ON ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#524: FILE: fs/reiserfs/file.c:223:
+	if ( res == NO_DISK_SPACE ) {
[...]
+	    SB_JOURNAL(inode->i_sb)->j_must_wait = 1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#524: FILE: fs/reiserfs/file.c:223:
+	if ( res == NO_DISK_SPACE ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#524: FILE: fs/reiserfs/file.c:223:
+	if ( res == NO_DISK_SPACE ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#526: FILE: fs/reiserfs/file.c:225:
+	    /* We flush the transaction in case of no space. This way some
+	       blocks might become free */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: fs/reiserfs/file.c:225:
+	       blocks might become free */

WARNING:TABSTOP: Statements should start on a tabstop
#532: FILE: fs/reiserfs/file.c:231:
+	    if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#532: FILE: fs/reiserfs/file.c:231:
+	    if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#532: FILE: fs/reiserfs/file.c:231:
+	    if ( res == IO_ERROR ) {

WARNING:TABSTOP: Statements should start on a tabstop
#535: FILE: fs/reiserfs/file.c:234:
+	    }

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#538: FILE: fs/reiserfs/file.c:237:
+	    res = reiserfs_allocate_blocknrs(&hint, allocated_blocks, blocks_to_allocate, blocks_to_allocate);

WARNING:TABSTOP: Statements should start on a tabstop
#539: FILE: fs/reiserfs/file.c:238:
+	    if ( res != CARRY_ON ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#539: FILE: fs/reiserfs/file.c:238:
+	    if ( res != CARRY_ON ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#539: FILE: fs/reiserfs/file.c:238:
+	    if ( res != CARRY_ON ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: fs/reiserfs/file.c:239:
+^I^Ires = -ENOSPC; $

WARNING:TABSTOP: Statements should start on a tabstop
#543: FILE: fs/reiserfs/file.c:242:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#544: FILE: fs/reiserfs/file.c:243:
+	} else {
+	    res = -ENOSPC;

WARNING:TABSTOP: Statements should start on a tabstop
#547: FILE: fs/reiserfs/file.c:246:
+	    goto error_exit;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: fs/reiserfs/file.c:248:
+    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: fs/reiserfs/file.c:251:
+        // Too bad, I have not found any way to convert a given region from$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: fs/reiserfs/file.c:252:
+        // cpu format to little endian format$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: fs/reiserfs/file.c:253:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: fs/reiserfs/file.c:254:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: fs/reiserfs/file.c:254:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: fs/reiserfs/file.c:255:
+        for ( i = 0; i < blocks_to_allocate ; i++)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#556: FILE: fs/reiserfs/file.c:255:
+        int i;
+        for ( i = 0; i < blocks_to_allocate ; i++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: fs/reiserfs/file.c:255:
+        for ( i = 0; i < blocks_to_allocate ; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#556: FILE: fs/reiserfs/file.c:255:
+        for ( i = 0; i < blocks_to_allocate ; i++)
+            allocated_blocks[i]=cpu_to_le32(allocated_blocks[i]);

ERROR:SPACING: space prohibited after that open parenthesis '('
#556: FILE: fs/reiserfs/file.c:255:
+        for ( i = 0; i < blocks_to_allocate ; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: fs/reiserfs/file.c:256:
+            allocated_blocks[i]=cpu_to_le32(allocated_blocks[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: fs/reiserfs/file.c:256:
+            allocated_blocks[i]=cpu_to_le32(allocated_blocks[i]);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#557: FILE: fs/reiserfs/file.c:256:
+            allocated_blocks[i]=cpu_to_le32(allocated_blocks[i]);
                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: fs/reiserfs/file.c:257:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#562: FILE: fs/reiserfs/file.c:261:
+    /* Blocks allocating well might have scheduled and tree might have changed,
+       let's search the tree again */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#562: FILE: fs/reiserfs/file.c:261:
+       let's search the tree again */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/reiserfs/file.c:263:
+    res = search_for_position_by_key(inode->i_sb, &key, &path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: fs/reiserfs/file.c:264:
+    if ( res == IO_ERROR ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#565: FILE: fs/reiserfs/file.c:264:
+    if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#565: FILE: fs/reiserfs/file.c:264:
+    if ( res == IO_ERROR ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: fs/reiserfs/file.c:267:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: fs/reiserfs/file.c:269:
+    bh = get_last_bh( &path ); // Get a bufferhead for last element in path.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#570: FILE: fs/reiserfs/file.c:269:
+    bh = get_last_bh( &path ); // Get a bufferhead for last element in path.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#570: FILE: fs/reiserfs/file.c:269:
+    bh = get_last_bh( &path ); // Get a bufferhead for last element in path.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: fs/reiserfs/file.c:270:
+    ih = get_ih( &path );      // Get a pointer to last item head in path.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#571: FILE: fs/reiserfs/file.c:270:
+    ih = get_ih( &path );      // Get a pointer to last item head in path.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#571: FILE: fs/reiserfs/file.c:270:
+    ih = get_ih( &path );      // Get a pointer to last item head in path.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: fs/reiserfs/file.c:271:
+    item = get_item( &path );  // Get a pointer to last item in path$

ERROR:SPACING: space prohibited after that open parenthesis '('
#572: FILE: fs/reiserfs/file.c:271:
+    item = get_item( &path );  // Get a pointer to last item in path

ERROR:SPACING: space prohibited before that close parenthesis ')'
#572: FILE: fs/reiserfs/file.c:271:
+    item = get_item( &path );  // Get a pointer to last item in path

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: fs/reiserfs/file.c:274:
+    if ( res != POSITION_FOUND ) { /* position not found, this means that we$

ERROR:SPACING: space prohibited after that open parenthesis '('
#575: FILE: fs/reiserfs/file.c:274:
+    if ( res != POSITION_FOUND ) { /* position not found, this means that we

ERROR:SPACING: space prohibited before that close parenthesis ')'
#575: FILE: fs/reiserfs/file.c:274:
+    if ( res != POSITION_FOUND ) { /* position not found, this means that we

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#576: FILE: fs/reiserfs/file.c:275:
+    if ( res != POSITION_FOUND ) { /* position not found, this means that we
+				      might need to append file with holes

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#577: FILE: fs/reiserfs/file.c:276:
+				      first */

WARNING:LONG_LINE: line length of 180 exceeds 100 columns
#583: FILE: fs/reiserfs/file.c:282:
+	hole_size = (pos + 1 - (le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key))+op_bytes_number(ih, inode->i_sb->s_blocksize))) >> inode->i_sb->s_blocksize_bits;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#583: FILE: fs/reiserfs/file.c:282:
+	hole_size = (pos + 1 - (le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key))+op_bytes_number(ih, inode->i_sb->s_blocksize))) >> inode->i_sb->s_blocksize_bits;
 	                                                                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#583: FILE: fs/reiserfs/file.c:282:
+	hole_size = (pos + 1 - (le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key))+op_bytes_number(ih, inode->i_sb->s_blocksize))) >> inode->i_sb->s_blocksize_bits;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ih->ih_key
#583: FILE: fs/reiserfs/file.c:282:
+	hole_size = (pos + 1 - (le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key))+op_bytes_number(ih, inode->i_sb->s_blocksize))) >> inode->i_sb->s_blocksize_bits;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#585: FILE: fs/reiserfs/file.c:284:
+	if ( hole_size > 0 ) {
+	    int to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE ); // How much data to insert first time.

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: fs/reiserfs/file.c:284:
+	if ( hole_size > 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#585: FILE: fs/reiserfs/file.c:284:
+	if ( hole_size > 0 ) {

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#586: FILE: fs/reiserfs/file.c:285:
+	    int to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE ); // How much data to insert first time.

WARNING:TABSTOP: Statements should start on a tabstop
#586: FILE: fs/reiserfs/file.c:285:
+	    int to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE ); // How much data to insert first time.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#586: FILE: fs/reiserfs/file.c:285:
+	    int to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE ); // How much data to insert first time.
 	                                                                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#586: FILE: fs/reiserfs/file.c:285:
+	    int to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE ); // How much data to insert first time.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#588: FILE: fs/reiserfs/file.c:287:
+	    /* area filled with zeroes, to supply as list of zero blocknumbers
+	       We allocate it outside of loop just in case loop would spin for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#589: FILE: fs/reiserfs/file.c:288:
+	       several iterations. */

WARNING:LONG_LINE_COMMENT: line length of 125 exceeds 100 columns
#590: FILE: fs/reiserfs/file.c:289:
+	    char *zeros = kmalloc(to_paste*UNFM_P_SIZE, GFP_ATOMIC); // We cannot insert more than MAX_ITEM_LEN bytes anyway.

WARNING:TABSTOP: Statements should start on a tabstop
#590: FILE: fs/reiserfs/file.c:289:
+	    char *zeros = kmalloc(to_paste*UNFM_P_SIZE, GFP_ATOMIC); // We cannot insert more than MAX_ITEM_LEN bytes anyway.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#590: FILE: fs/reiserfs/file.c:289:
+	    char *zeros = kmalloc(to_paste*UNFM_P_SIZE, GFP_ATOMIC); // We cannot insert more than MAX_ITEM_LEN bytes anyway.
 	                                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: fs/reiserfs/file.c:290:
+	    if ( !zeros ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#591: FILE: fs/reiserfs/file.c:290:
+	    char *zeros = kmalloc(to_paste*UNFM_P_SIZE, GFP_ATOMIC); // We cannot insert more than MAX_ITEM_LEN bytes anyway.
+	    if ( !zeros ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#591: FILE: fs/reiserfs/file.c:290:
+	    if ( !zeros ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#591: FILE: fs/reiserfs/file.c:290:
+	    if ( !zeros ) {

WARNING:TABSTOP: Statements should start on a tabstop
#594: FILE: fs/reiserfs/file.c:293:
+	    }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: fs/reiserfs/file.c:294:
+	    memset ( zeros, 0, to_paste*UNFM_P_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#595: FILE: fs/reiserfs/file.c:294:
+	    memset ( zeros, 0, to_paste*UNFM_P_SIZE);
 	                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#595: FILE: fs/reiserfs/file.c:294:
+	    memset ( zeros, 0, to_paste*UNFM_P_SIZE);

WARNING:TABSTOP: Statements should start on a tabstop
#596: FILE: fs/reiserfs/file.c:295:
+	    do {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#597: FILE: fs/reiserfs/file.c:296:
+		to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE );

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#597: FILE: fs/reiserfs/file.c:296:
+		to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE );
 		                                                                         ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#597: FILE: fs/reiserfs/file.c:296:
+		to_paste = min_t(__u64, hole_size, MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#598: FILE: fs/reiserfs/file.c:297:
+		if ( is_indirect_le_ih(ih) ) {
[...]
+		    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

ERROR:SPACING: space prohibited after that open parenthesis '('
#598: FILE: fs/reiserfs/file.c:297:
+		if ( is_indirect_le_ih(ih) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#598: FILE: fs/reiserfs/file.c:297:
+		if ( is_indirect_le_ih(ih) ) {

WARNING:LONG_LINE: line length of 181 exceeds 100 columns
#601: FILE: fs/reiserfs/file.c:300:
+		    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: fs/reiserfs/file.c:300:
+		    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ih->ih_key
#601: FILE: fs/reiserfs/file.c:300:
+		    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#602: FILE: fs/reiserfs/file.c:301:
+		    res = reiserfs_paste_into_item( &th, &path, &key, (char *)zeros, UNFM_P_SIZE*to_paste);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#602: FILE: fs/reiserfs/file.c:301:
+		    res = reiserfs_paste_into_item( &th, &path, &key, (char *)zeros, UNFM_P_SIZE*to_paste);
 		                                                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#602: FILE: fs/reiserfs/file.c:301:
+		    res = reiserfs_paste_into_item( &th, &path, &key, (char *)zeros, UNFM_P_SIZE*to_paste);

WARNING:TABSTOP: Statements should start on a tabstop
#603: FILE: fs/reiserfs/file.c:302:
+		    if ( res ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#603: FILE: fs/reiserfs/file.c:302:
+		    if ( res ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#603: FILE: fs/reiserfs/file.c:302:
+		    if ( res ) {

WARNING:TABSTOP: Statements should start on a tabstop
#606: FILE: fs/reiserfs/file.c:305:
+		    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#607: FILE: fs/reiserfs/file.c:306:
+		} else if ( is_statdata_le_ih(ih) ) {
[...]
+		    struct item_head ins_ih;

ERROR:SPACING: space prohibited after that open parenthesis '('
#607: FILE: fs/reiserfs/file.c:306:
+		} else if ( is_statdata_le_ih(ih) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#607: FILE: fs/reiserfs/file.c:306:
+		} else if ( is_statdata_le_ih(ih) ) {

WARNING:TABSTOP: Statements should start on a tabstop
#610: FILE: fs/reiserfs/file.c:309:
+		    struct item_head ins_ih;

ERROR:SPACING: space prohibited after that open parenthesis '('
#613: FILE: fs/reiserfs/file.c:312:
+		    make_cpu_key( &key, inode, 1, TYPE_INDIRECT, 3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: fs/reiserfs/file.c:315:
+		    make_le_item_head (&ins_ih, &key, key.version, 1,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#617: FILE: fs/reiserfs/file.c:316:
+				       TYPE_INDIRECT, to_paste*UNFM_P_SIZE,
 				                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#621: FILE: fs/reiserfs/file.c:320:
+		    res = search_item (inode->i_sb, &key, &path);

WARNING:TABSTOP: Statements should start on a tabstop
#622: FILE: fs/reiserfs/file.c:321:
+		    if ( res != ITEM_NOT_FOUND ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#622: FILE: fs/reiserfs/file.c:321:
+		    if ( res != ITEM_NOT_FOUND ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#622: FILE: fs/reiserfs/file.c:321:
+		    if ( res != ITEM_NOT_FOUND ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#624: FILE: fs/reiserfs/file.c:323:
+			if ( res != -ENOSPC ) {
+			    reiserfs_warning ("green-9008: search_by_key (%K) returned %d\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#624: FILE: fs/reiserfs/file.c:323:
+			if ( res != -ENOSPC ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#624: FILE: fs/reiserfs/file.c:323:
+			if ( res != -ENOSPC ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: fs/reiserfs/file.c:324:
+			    reiserfs_warning ("green-9008: search_by_key (%K) returned %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: fs/reiserfs/file.c:325:
+			    reiserfs_warning ("green-9008: search_by_key (%K) returned %d\n",
+					       &key, res);

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: fs/reiserfs/file.c:328:
+^I^I        kfree(zeros);$

WARNING:TABSTOP: Statements should start on a tabstop
#631: FILE: fs/reiserfs/file.c:330:
+		    }

ERROR:SPACING: space prohibited after that open parenthesis '('
#632: FILE: fs/reiserfs/file.c:331:
+		    res = reiserfs_insert_item( &th, &path, &key, &ins_ih, (char *)zeros);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#633: FILE: fs/reiserfs/file.c:332:
+		} else {
+		    reiserfs_panic(inode->i_sb, "green-9011: Unexpected key type %K\n", &key);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#636: FILE: fs/reiserfs/file.c:335:
+		if ( res ) {
+		    kfree(zeros);

ERROR:SPACING: space prohibited after that open parenthesis '('
#636: FILE: fs/reiserfs/file.c:335:
+		if ( res ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#636: FILE: fs/reiserfs/file.c:335:
+		if ( res ) {

WARNING:TABSTOP: Statements should start on a tabstop
#638: FILE: fs/reiserfs/file.c:337:
+		    goto error_exit_free_blocks;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: fs/reiserfs/file.c:340:
+		/* Now we want to check if transaction is too full, and if it is
+		   we restart it. This will also free the path. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#641: FILE: fs/reiserfs/file.c:340:
+		   we restart it. This will also free the path. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#642: FILE: fs/reiserfs/file.c:341:
+		if (journal_transaction_should_end(&th, th.t_blocks_allocated))
+		    restart_transaction(&th, inode, &path);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#646: FILE: fs/reiserfs/file.c:345:
+		set_cpu_key_k_offset( &key, cpu_key_k_offset(&key) + (to_paste << inode->i_blkbits));

ERROR:SPACING: space prohibited after that open parenthesis '('
#646: FILE: fs/reiserfs/file.c:345:
+		set_cpu_key_k_offset( &key, cpu_key_k_offset(&key) + (to_paste << inode->i_blkbits));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#648: FILE: fs/reiserfs/file.c:347:
+		if ( res == IO_ERROR ) {
+		    res = -EIO;

ERROR:SPACING: space prohibited after that open parenthesis '('
#648: FILE: fs/reiserfs/file.c:347:
+		if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#648: FILE: fs/reiserfs/file.c:347:
+		if ( res == IO_ERROR ) {

WARNING:TABSTOP: Statements should start on a tabstop
#651: FILE: fs/reiserfs/file.c:350:
+		    goto error_exit_free_blocks;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#653: FILE: fs/reiserfs/file.c:352:
+		bh=get_last_bh(&path);
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#654: FILE: fs/reiserfs/file.c:353:
+		ih=get_ih(&path);
 		  ^

WARNING:TABSTOP: Statements should start on a tabstop
#657: FILE: fs/reiserfs/file.c:356:
+	    } while ( hole_size );

ERROR:SPACING: space prohibited after that open parenthesis '('
#657: FILE: fs/reiserfs/file.c:356:
+	    } while ( hole_size );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#657: FILE: fs/reiserfs/file.c:356:
+	    } while ( hole_size );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: fs/reiserfs/file.c:359:
+    }$

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#667: FILE: fs/reiserfs/file.c:366:
+    for ( curr_block = 0, itempos = path.pos_in_item ; curr_block < blocks_to_allocate && res == POSITION_FOUND ; ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: fs/reiserfs/file.c:366:
+    for ( curr_block = 0, itempos = path.pos_in_item ; curr_block < blocks_to_allocate && res == POSITION_FOUND ; ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#667: FILE: fs/reiserfs/file.c:366:
+    for ( curr_block = 0, itempos = path.pos_in_item ; curr_block < blocks_to_allocate && res == POSITION_FOUND ; ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#668: FILE: fs/reiserfs/file.c:367:
+    for ( curr_block = 0, itempos = path.pos_in_item ; curr_block < blocks_to_allocate && res == POSITION_FOUND ; ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#669: FILE: fs/reiserfs/file.c:368:
+	if ( itempos >= ih_item_len(ih)/UNFM_P_SIZE ) {
[...]
+	    if ( modifying_this_item ) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#669: FILE: fs/reiserfs/file.c:368:
+	if ( itempos >= ih_item_len(ih)/UNFM_P_SIZE ) {
 	                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#669: FILE: fs/reiserfs/file.c:368:
+	if ( itempos >= ih_item_len(ih)/UNFM_P_SIZE ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#669: FILE: fs/reiserfs/file.c:368:
+	if ( itempos >= ih_item_len(ih)/UNFM_P_SIZE ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#671: FILE: fs/reiserfs/file.c:370:
+	    /* We run out of data in this indirect item, let's look for another
+	       one. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#671: FILE: fs/reiserfs/file.c:370:
+	       one. */

WARNING:TABSTOP: Statements should start on a tabstop
#673: FILE: fs/reiserfs/file.c:372:
+	    if ( modifying_this_item ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#673: FILE: fs/reiserfs/file.c:372:
+	    if ( modifying_this_item ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#673: FILE: fs/reiserfs/file.c:372:
+	    if ( modifying_this_item ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#674: FILE: fs/reiserfs/file.c:373:
+		journal_mark_dirty (&th, inode->i_sb, bh);

WARNING:TABSTOP: Statements should start on a tabstop
#676: FILE: fs/reiserfs/file.c:375:
+	    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#678: FILE: fs/reiserfs/file.c:377:
+	    /* Then set the key to look for a new indirect item (offset of old
+	       item is added to old item length */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#678: FILE: fs/reiserfs/file.c:377:
+	       item is added to old item length */

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#679: FILE: fs/reiserfs/file.c:378:
+	    set_cpu_key_k_offset( &key, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize));

ERROR:SPACING: space prohibited after that open parenthesis '('
#679: FILE: fs/reiserfs/file.c:378:
+	    set_cpu_key_k_offset( &key, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ih->ih_key
#679: FILE: fs/reiserfs/file.c:378:
+	    set_cpu_key_k_offset( &key, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize));

WARNING:TABSTOP: Statements should start on a tabstop
#682: FILE: fs/reiserfs/file.c:381:
+	    if ( res == IO_ERROR) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#682: FILE: fs/reiserfs/file.c:381:
+	    if ( res == IO_ERROR) {

WARNING:TABSTOP: Statements should start on a tabstop
#685: FILE: fs/reiserfs/file.c:384:
+	    }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#686: FILE: fs/reiserfs/file.c:385:
+	    bh=get_last_bh(&path);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#687: FILE: fs/reiserfs/file.c:386:
+	    ih=get_ih(&path);
 	      ^

WARNING:TABSTOP: Statements should start on a tabstop
#690: FILE: fs/reiserfs/file.c:389:
+	    continue; // loop to check all kinds of conditions and so on.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#693: FILE: fs/reiserfs/file.c:392:
+	/* Ok, we have correct position in item now, so let's see if it is
+	   representing file hole (blocknumber is zero) and fill it if needed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#693: FILE: fs/reiserfs/file.c:392:
+	   representing file hole (blocknumber is zero) and fill it if needed */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#694: FILE: fs/reiserfs/file.c:393:
+	if ( !item[itempos] ) {
[...]
+	    while ( !modifying_this_item ) { // loop until succeed

ERROR:SPACING: space prohibited after that open parenthesis '('
#694: FILE: fs/reiserfs/file.c:393:
+	if ( !item[itempos] ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#694: FILE: fs/reiserfs/file.c:393:
+	if ( !item[itempos] ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#696: FILE: fs/reiserfs/file.c:395:
+	    /* Ok, a hole. Now we need to check if we already prepared this
+	       block to be journaled */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#696: FILE: fs/reiserfs/file.c:395:
+	       block to be journaled */

WARNING:TABSTOP: Statements should start on a tabstop
#697: FILE: fs/reiserfs/file.c:396:
+	    while ( !modifying_this_item ) { // loop until succeed

ERROR:SPACING: space prohibited after that open parenthesis '('
#697: FILE: fs/reiserfs/file.c:396:
+	    while ( !modifying_this_item ) { // loop until succeed

ERROR:SPACING: space prohibited before that close parenthesis ')'
#697: FILE: fs/reiserfs/file.c:396:
+	    while ( !modifying_this_item ) { // loop until succeed

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#699: FILE: fs/reiserfs/file.c:398:
+		/* Well, this item is not journaled yet, so we must prepare
+		   it for journal first, before we can change it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#699: FILE: fs/reiserfs/file.c:398:
+		   it for journal first, before we can change it */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#707: FILE: fs/reiserfs/file.c:406:
+		copy_item_head (&tmp_ih, ih); // Remember itemhead

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: fs/reiserfs/file.c:407:
+		fs_gen = get_generation (inode->i_sb); // remember fs generation

WARNING:LONG_LINE_COMMENT: line length of 136 exceeds 100 columns
#709: FILE: fs/reiserfs/file.c:408:
+		reiserfs_prepare_for_journal(inode->i_sb, bh, 1); // Prepare a buffer within which indirect item is stored for changing.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#710: FILE: fs/reiserfs/file.c:409:
+		if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {
[...]
+		    reiserfs_restore_prepared_buffer(inode->i_sb, bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: fs/reiserfs/file.c:409:
+		if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: fs/reiserfs/file.c:409:
+		if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#715: FILE: fs/reiserfs/file.c:414:
+		    /* unmark prepaerd area as journaled and search for it's
+		       new position */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#715: FILE: fs/reiserfs/file.c:414:
+		       new position */

WARNING:TABSTOP: Statements should start on a tabstop
#718: FILE: fs/reiserfs/file.c:417:
+		    if ( res == IO_ERROR) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#718: FILE: fs/reiserfs/file.c:417:
+		    if ( res == IO_ERROR) {

WARNING:TABSTOP: Statements should start on a tabstop
#721: FILE: fs/reiserfs/file.c:420:
+		    }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#722: FILE: fs/reiserfs/file.c:421:
+		    bh=get_last_bh(&path);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#723: FILE: fs/reiserfs/file.c:422:
+		    ih=get_ih(&path);
 		      ^

WARNING:TABSTOP: Statements should start on a tabstop
#726: FILE: fs/reiserfs/file.c:425:
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#729: FILE: fs/reiserfs/file.c:428:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: fs/reiserfs/file.c:433:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: fs/reiserfs/file.c:435:
+    if ( modifying_this_item ) { // We need to log last-accessed block, if it$

ERROR:SPACING: space prohibited after that open parenthesis '('
#736: FILE: fs/reiserfs/file.c:435:
+    if ( modifying_this_item ) { // We need to log last-accessed block, if it

ERROR:SPACING: space prohibited before that close parenthesis ')'
#736: FILE: fs/reiserfs/file.c:435:
+    if ( modifying_this_item ) { // We need to log last-accessed block, if it

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: fs/reiserfs/file.c:437:
+	journal_mark_dirty (&th, inode->i_sb, bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: fs/reiserfs/file.c:438:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: fs/reiserfs/file.c:440:
+    if ( curr_block < blocks_to_allocate ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#741: FILE: fs/reiserfs/file.c:440:
+    if ( curr_block < blocks_to_allocate ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#741: FILE: fs/reiserfs/file.c:440:
+    if ( curr_block < blocks_to_allocate ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#744: FILE: fs/reiserfs/file.c:443:
+	if ( is_indirect_le_ih(ih) ) {
[...]
+	    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

ERROR:SPACING: space prohibited after that open parenthesis '('
#744: FILE: fs/reiserfs/file.c:443:
+	if ( is_indirect_le_ih(ih) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#744: FILE: fs/reiserfs/file.c:443:
+	if ( is_indirect_le_ih(ih) ) {

WARNING:LONG_LINE: line length of 173 exceeds 100 columns
#748: FILE: fs/reiserfs/file.c:447:
+	    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

ERROR:SPACING: space prohibited after that open parenthesis '('
#748: FILE: fs/reiserfs/file.c:447:
+	    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ih->ih_key
#748: FILE: fs/reiserfs/file.c:447:
+	    make_cpu_key( &key, inode, le_key_k_offset( get_inode_item_key_version(inode), &(ih->ih_key)) + op_bytes_number(ih, inode->i_sb->s_blocksize), TYPE_INDIRECT, 3);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#749: FILE: fs/reiserfs/file.c:448:
+	    res = reiserfs_paste_into_item( &th, &path, &key, (char *)(allocated_blocks+curr_block), UNFM_P_SIZE*(blocks_to_allocate-curr_block));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#749: FILE: fs/reiserfs/file.c:448:
+	    res = reiserfs_paste_into_item( &th, &path, &key, (char *)(allocated_blocks+curr_block), UNFM_P_SIZE*(blocks_to_allocate-curr_block));
 	                                                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#749: FILE: fs/reiserfs/file.c:448:
+	    res = reiserfs_paste_into_item( &th, &path, &key, (char *)(allocated_blocks+curr_block), UNFM_P_SIZE*(blocks_to_allocate-curr_block));
 	                                                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#749: FILE: fs/reiserfs/file.c:448:
+	    res = reiserfs_paste_into_item( &th, &path, &key, (char *)(allocated_blocks+curr_block), UNFM_P_SIZE*(blocks_to_allocate-curr_block));
 	                                                                                                                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#749: FILE: fs/reiserfs/file.c:448:
+	    res = reiserfs_paste_into_item( &th, &path, &key, (char *)(allocated_blocks+curr_block), UNFM_P_SIZE*(blocks_to_allocate-curr_block));

WARNING:TABSTOP: Statements should start on a tabstop
#750: FILE: fs/reiserfs/file.c:449:
+	    if ( res ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#750: FILE: fs/reiserfs/file.c:449:
+	    if ( res ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#750: FILE: fs/reiserfs/file.c:449:
+	    if ( res ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#750: FILE: fs/reiserfs/file.c:449:
+	    if ( res ) {
+		goto error_exit_free_blocks;
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#752: FILE: fs/reiserfs/file.c:451:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#753: FILE: fs/reiserfs/file.c:452:
+	} else if (is_statdata_le_ih(ih) ) {
[...]
+	    struct item_head ins_ih; /* itemhead for new item */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#753: FILE: fs/reiserfs/file.c:452:
+	} else if (is_statdata_le_ih(ih) ) {

WARNING:TABSTOP: Statements should start on a tabstop
#755: FILE: fs/reiserfs/file.c:454:
+	    struct item_head ins_ih; /* itemhead for new item */

ERROR:SPACING: space prohibited after that open parenthesis '('
#758: FILE: fs/reiserfs/file.c:457:
+	    make_cpu_key( &key, inode, 1, TYPE_INDIRECT, 3); // Position one,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#764: FILE: fs/reiserfs/file.c:463:
+	    make_le_item_head (&ins_ih, &key, key.version, 1, TYPE_INDIRECT,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#765: FILE: fs/reiserfs/file.c:464:
+			       (blocks_to_allocate-curr_block)*UNFM_P_SIZE,
 			                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#765: FILE: fs/reiserfs/file.c:464:
+			       (blocks_to_allocate-curr_block)*UNFM_P_SIZE,
 			                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: fs/reiserfs/file.c:467:
+	    res = search_item (inode->i_sb, &key, &path);

WARNING:TABSTOP: Statements should start on a tabstop
#769: FILE: fs/reiserfs/file.c:468:
+	    if ( res != ITEM_NOT_FOUND ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#769: FILE: fs/reiserfs/file.c:468:
+	    if ( res != ITEM_NOT_FOUND ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#769: FILE: fs/reiserfs/file.c:468:
+	    if ( res != ITEM_NOT_FOUND ) {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#771: FILE: fs/reiserfs/file.c:470:
+		   occured, we need to warn user and return error */
 		   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#771: FILE: fs/reiserfs/file.c:470:
+		/* Well, if we have found such item already, or some error
+		   occured, we need to warn user and return error */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#771: FILE: fs/reiserfs/file.c:470:
+		   occured, we need to warn user and return error */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#772: FILE: fs/reiserfs/file.c:471:
+		if ( res != -ENOSPC ) {
+		    reiserfs_warning ("green-9009: search_by_key (%K) returned %d\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#772: FILE: fs/reiserfs/file.c:471:
+		if ( res != -ENOSPC ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#772: FILE: fs/reiserfs/file.c:471:
+		if ( res != -ENOSPC ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: fs/reiserfs/file.c:472:
+		    reiserfs_warning ("green-9009: search_by_key (%K) returned %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: fs/reiserfs/file.c:473:
+^I^I^I              &key, res);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: fs/reiserfs/file.c:473:
+		    reiserfs_warning ("green-9009: search_by_key (%K) returned %d\n",
+			              &key, res);

WARNING:TABSTOP: Statements should start on a tabstop
#778: FILE: fs/reiserfs/file.c:477:
+	    }

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#780: FILE: fs/reiserfs/file.c:479:
+	    res = reiserfs_insert_item( &th, &path, &key, &ins_ih, (char *)(allocated_blocks+curr_block));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#780: FILE: fs/reiserfs/file.c:479:
+	    res = reiserfs_insert_item( &th, &path, &key, &ins_ih, (char *)(allocated_blocks+curr_block));
 	                                                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#780: FILE: fs/reiserfs/file.c:479:
+	    res = reiserfs_insert_item( &th, &path, &key, &ins_ih, (char *)(allocated_blocks+curr_block));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#781: FILE: fs/reiserfs/file.c:480:
+	} else {
+	    reiserfs_panic(inode->i_sb, "green-9010: unexpected item type for key %K\n",&key);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#782: FILE: fs/reiserfs/file.c:481:
+	    reiserfs_panic(inode->i_sb, "green-9010: unexpected item type for key %K\n",&key);
 	                                                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#782: FILE: fs/reiserfs/file.c:481:
+	    reiserfs_panic(inode->i_sb, "green-9010: unexpected item type for key %K\n",&key);
 	                                                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: fs/reiserfs/file.c:483:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: fs/reiserfs/file.c:486:
+    if ( pos + write_bytes > inode->i_size) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#787: FILE: fs/reiserfs/file.c:486:
+    if ( pos + write_bytes > inode->i_size) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#787: FILE: fs/reiserfs/file.c:486:
+    if ( pos + write_bytes > inode->i_size) {
+	inode->i_size = pos + write_bytes; // Set new size
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: fs/reiserfs/file.c:488:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: fs/reiserfs/file.c:491:
+    inode->i_blocks += blocks_to_allocate << (inode->i_blkbits - 9);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: fs/reiserfs/file.c:492:
+    reiserfs_update_sd(&th, inode); // And update on-disk metadata$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: fs/reiserfs/file.c:495:
+    pathrelse(&path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: fs/reiserfs/file.c:496:
+    journal_end(&th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: fs/reiserfs/file.c:497:
+    reiserfs_write_unlock(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: fs/reiserfs/file.c:501:
+    curr_block = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: fs/reiserfs/file.c:502:
+    for ( i = 0; i < num_pages ; i++ ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#803: FILE: fs/reiserfs/file.c:502:
+    for ( i = 0; i < num_pages ; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#803: FILE: fs/reiserfs/file.c:502:
+    for ( i = 0; i < num_pages ; i++ ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#804: FILE: fs/reiserfs/file.c:503:
+	struct page *page=prepared_pages[i]; //current page
 	                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#808: FILE: fs/reiserfs/file.c:507:
+	if (!page_buffers(page))
+	    reiserfs_panic(inode->i_sb, "green-9005: No buffers for prepared page???");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#812: FILE: fs/reiserfs/file.c:511:
+	for(bh = head, block_start = 0; bh != head || !block_start;
[...]
+	    if (!bh)

ERROR:SPACING: space required before the open parenthesis '('
#812: FILE: fs/reiserfs/file.c:511:
+	for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#813: FILE: fs/reiserfs/file.c:512:
+	    block_start=block_end, bh = bh->b_this_page) {
 	               ^

WARNING:TABSTOP: Statements should start on a tabstop
#814: FILE: fs/reiserfs/file.c:513:
+	    if (!bh)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#816: FILE: fs/reiserfs/file.c:515:
+	    block_end = block_start+inode->i_sb->s_blocksize;
 	                           ^

WARNING:TABSTOP: Statements should start on a tabstop
#817: FILE: fs/reiserfs/file.c:516:
+	    if (i == 0 && block_end <= from )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#817: FILE: fs/reiserfs/file.c:516:
+	    if (i == 0 && block_end <= from )

WARNING:TABSTOP: Statements should start on a tabstop
#820: FILE: fs/reiserfs/file.c:519:
+	    if (i == num_pages - 1 && block_start >= to)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#822: FILE: fs/reiserfs/file.c:521:
+		/* If this buffer is after requested data to map, abort
+		   processing of current page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#822: FILE: fs/reiserfs/file.c:521:
+		   processing of current page */

WARNING:TABSTOP: Statements should start on a tabstop
#825: FILE: fs/reiserfs/file.c:524:
+	    if ( !buffer_mapped(bh) ) { // Ok, unmapped buffer, need to map it

ERROR:SPACING: space prohibited after that open parenthesis '('
#825: FILE: fs/reiserfs/file.c:524:
+	    if ( !buffer_mapped(bh) ) { // Ok, unmapped buffer, need to map it

ERROR:SPACING: space prohibited before that close parenthesis ')'
#825: FILE: fs/reiserfs/file.c:524:
+	    if ( !buffer_mapped(bh) ) { // Ok, unmapped buffer, need to map it

ERROR:SPACING: space prohibited after that open parenthesis '('
#826: FILE: fs/reiserfs/file.c:525:
+		map_bh( bh, inode->i_sb, le32_to_cpu(allocated_blocks[curr_block]));

WARNING:TABSTOP: Statements should start on a tabstop
#828: FILE: fs/reiserfs/file.c:527:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: fs/reiserfs/file.c:529:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: fs/reiserfs/file.c:531:
+    RFALSE( curr_block > blocks_to_allocate, "green-9007: Used too many blocks? weird");$

ERROR:SPACING: space prohibited after that open parenthesis '('
#832: FILE: fs/reiserfs/file.c:531:
+    RFALSE( curr_block > blocks_to_allocate, "green-9007: Used too many blocks? weird");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: fs/reiserfs/file.c:533:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: fs/reiserfs/file.c:537:
+    pathrelse(&path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: fs/reiserfs/file.c:539:
+    for( i = 0; i < blocks_to_allocate; i++ )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#840: FILE: fs/reiserfs/file.c:539:
+    for( i = 0; i < blocks_to_allocate; i++ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#840: FILE: fs/reiserfs/file.c:539:
+    for( i = 0; i < blocks_to_allocate; i++ )

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: fs/reiserfs/file.c:539:
+    for( i = 0; i < blocks_to_allocate; i++ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#841: FILE: fs/reiserfs/file.c:540:
+	reiserfs_free_block( &th, le32_to_cpu(allocated_blocks[i]));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: fs/reiserfs/file.c:543:
+    journal_end(&th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: fs/reiserfs/file.c:544:
+    reiserfs_write_unlock(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: fs/reiserfs/file.c:546:
+    return res;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#851: FILE: fs/reiserfs/file.c:550:
+void reiserfs_unprepare_pages(struct page **prepared_pages, /* list of locked pages */
+			      int num_pages /* amount of pages */) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: fs/reiserfs/file.c:552:
+    int i; // loop counter$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: fs/reiserfs/file.c:554:
+    for (i=0; i < num_pages ; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#855: FILE: fs/reiserfs/file.c:554:
+    for (i=0; i < num_pages ; i++) {
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: fs/reiserfs/file.c:561:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#866: FILE: fs/reiserfs/file.c:565:
+/* This function will copy data from userspace to specified pages within
+   supplied byte range */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#866: FILE: fs/reiserfs/file.c:565:
+   supplied byte range */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#867: FILE: fs/reiserfs/file.c:566:
+int reiserfs_copy_from_user_to_file_region(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: fs/reiserfs/file.c:570:
+^I^I^I^Istruct page **prepared_pages, /* pointer to $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#872: FILE: fs/reiserfs/file.c:571:
+				struct page **prepared_pages, /* pointer to 
+								 array to

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#876: FILE: fs/reiserfs/file.c:575:
+				const char *buf /* Pointer to user-supplied
+						   data*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#876: FILE: fs/reiserfs/file.c:575:
+						   data*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: fs/reiserfs/file.c:578:
+    long page_fault=0; // status of copy_from_user.$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#879: FILE: fs/reiserfs/file.c:578:
+    long page_fault=0; // status of copy_from_user.
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: fs/reiserfs/file.c:579:
+    int i; // loop counter.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: fs/reiserfs/file.c:580:
+    int offset; // offset in page$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: fs/reiserfs/file.c:582:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#883: FILE: fs/reiserfs/file.c:582:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#883: FILE: fs/reiserfs/file.c:582:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#883: FILE: fs/reiserfs/file.c:582:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#883: FILE: fs/reiserfs/file.c:582:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#884: FILE: fs/reiserfs/file.c:583:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page

ERROR:SPACING: space required after that ',' (ctx:VxV)
#884: FILE: fs/reiserfs/file.c:583:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#884: FILE: fs/reiserfs/file.c:583:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#884: FILE: fs/reiserfs/file.c:583:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#885: FILE: fs/reiserfs/file.c:584:
+	struct page *page=prepared_pages[i]; // Current page we process.
 	                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#887: FILE: fs/reiserfs/file.c:586:
+	fault_in_pages_readable( buf, count);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#891: FILE: fs/reiserfs/file.c:590:
+	page_fault = __copy_from_user(page_address(page)+offset, buf, count); // Copy the data.
 	                                                ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#895: FILE: fs/reiserfs/file.c:594:
+	buf+=count;
 	   ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#896: FILE: fs/reiserfs/file.c:595:
+	write_bytes-=count;
 	           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#898: FILE: fs/reiserfs/file.c:597:
+	if (page_fault)
+	    break; // Was there a fault? abort.

WARNING:TABSTOP: Statements should start on a tabstop
#899: FILE: fs/reiserfs/file.c:598:
+	    break; // Was there a fault? abort.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: fs/reiserfs/file.c:599:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: fs/reiserfs/file.c:601:
+    return page_fault?-EFAULT:0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#902: FILE: fs/reiserfs/file.c:601:
+    return page_fault?-EFAULT:0;
                      ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#902: FILE: fs/reiserfs/file.c:601:
+    return page_fault?-EFAULT:0;
                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#902: FILE: fs/reiserfs/file.c:601:
+    return page_fault?-EFAULT:0;
                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#905: FILE: fs/reiserfs/file.c:604:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#908: FILE: fs/reiserfs/file.c:607:
+/* Submit pages for write. This was separated from actual file copying
+   because we might want to allocate block numbers in-between.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#909: FILE: fs/reiserfs/file.c:608:
+   This function assumes that caller will adjust file size to correct value. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#910: FILE: fs/reiserfs/file.c:609:
+int reiserfs_submit_file_region_for_write(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: fs/reiserfs/file.c:616:
+    int status; // return status of block_commit_write.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: fs/reiserfs/file.c:617:
+    int retval = 0; // Return value we are going to return.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: fs/reiserfs/file.c:618:
+    int i; // loop counter$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: fs/reiserfs/file.c:619:
+    int offset; // Writing offset in page.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: fs/reiserfs/file.c:621:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#922: FILE: fs/reiserfs/file.c:621:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#922: FILE: fs/reiserfs/file.c:621:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#922: FILE: fs/reiserfs/file.c:621:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {
                                                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#922: FILE: fs/reiserfs/file.c:621:
+    for ( i = 0, offset = (pos & (PAGE_CACHE_SIZE-1)); i < num_pages ; i++,offset=0) {

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#923: FILE: fs/reiserfs/file.c:622:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page

ERROR:SPACING: space required after that ',' (ctx:VxV)
#923: FILE: fs/reiserfs/file.c:622:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#923: FILE: fs/reiserfs/file.c:622:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#923: FILE: fs/reiserfs/file.c:622:
+	int count = min_t(int,PAGE_CACHE_SIZE-offset,write_bytes); // How much of bytes to write to this page
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#924: FILE: fs/reiserfs/file.c:623:
+	struct page *page=prepared_pages[i]; // Current page we process.
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#926: FILE: fs/reiserfs/file.c:625:
+	status = block_commit_write(page, offset, offset+count);
 	                                                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#927: FILE: fs/reiserfs/file.c:626:
+	if ( status )
+	    retval = status; // To not overcomplicate matters We are going to

ERROR:SPACING: space prohibited after that open parenthesis '('
#927: FILE: fs/reiserfs/file.c:626:
+	if ( status )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#927: FILE: fs/reiserfs/file.c:626:
+	if ( status )

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#932: FILE: fs/reiserfs/file.c:631:
+	write_bytes-=count;
 	           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: fs/reiserfs/file.c:636:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: fs/reiserfs/file.c:637:
+    return retval;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#942: FILE: fs/reiserfs/file.c:641:
+/* Look if passed writing region is going to touch file's tail
+   (if it is present). And if it is, convert the tail to unformatted node */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#942: FILE: fs/reiserfs/file.c:641:
+   (if it is present). And if it is, convert the tail to unformatted node */

ERROR:SPACING: space prohibited after that open parenthesis '('
#943: FILE: fs/reiserfs/file.c:642:
+int reiserfs_check_for_tail_and_convert( struct inode *inode, /* inode to deal with */

WARNING:LINE_SPACING: Missing a blank line after declarations
#945: FILE: fs/reiserfs/file.c:644:
+					 loff_t pos, /* Writing position */
+					 int write_bytes /* amount of bytes to write */

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: fs/reiserfs/file.c:645:
+^I^I^I^I        )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: fs/reiserfs/file.c:647:
+    INITIALIZE_PATH(path); // needed for search_for_position$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: fs/reiserfs/file.c:648:
+    struct cpu_key key; // Key that would represent last touched writing byte.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: fs/reiserfs/file.c:649:
+    struct item_head *ih; // item header of found block;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: fs/reiserfs/file.c:650:
+    int res; // Return value of various functions we call.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: fs/reiserfs/file.c:651:
+    int cont_expand_offset; // We will put offset for generic_cont_expand here$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: fs/reiserfs/file.c:654:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: fs/reiserfs/file.c:654:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: fs/reiserfs/file.c:656:
+    if ( inode->i_size >= inode->i_sb->s_blocksize*4 ) {$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#957: FILE: fs/reiserfs/file.c:656:
+    if ( inode->i_size >= inode->i_sb->s_blocksize*4 ) {
                                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#957: FILE: fs/reiserfs/file.c:656:
+    if ( inode->i_size >= inode->i_sb->s_blocksize*4 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#957: FILE: fs/reiserfs/file.c:656:
+    if ( inode->i_size >= inode->i_sb->s_blocksize*4 ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#959: FILE: fs/reiserfs/file.c:658:
+	/* such a big files do not have tails, so we won't bother ourselves
+	   to look for tails, simply return */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#959: FILE: fs/reiserfs/file.c:658:
+	   to look for tails, simply return */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: fs/reiserfs/file.c:660:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: fs/reiserfs/file.c:662:
+    reiserfs_write_lock(inode->i_sb);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#966: FILE: fs/reiserfs/file.c:665:
+     * file (and then we check its type). */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: fs/reiserfs/file.c:666:
+    make_cpu_key (&key, inode, pos+write_bytes+1, TYPE_ANY, 3/*key length*/);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#967: FILE: fs/reiserfs/file.c:666:
+    make_cpu_key (&key, inode, pos+write_bytes+1, TYPE_ANY, 3/*key length*/);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#967: FILE: fs/reiserfs/file.c:666:
+    make_cpu_key (&key, inode, pos+write_bytes+1, TYPE_ANY, 3/*key length*/);
                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#967: FILE: fs/reiserfs/file.c:666:
+    make_cpu_key (&key, inode, pos+write_bytes+1, TYPE_ANY, 3/*key length*/);
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: fs/reiserfs/file.c:667:
+    res = search_for_position_by_key(inode->i_sb, &key, &path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: fs/reiserfs/file.c:668:
+    if ( res == IO_ERROR ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#969: FILE: fs/reiserfs/file.c:668:
+    if ( res == IO_ERROR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#969: FILE: fs/reiserfs/file.c:668:
+    if ( res == IO_ERROR ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: fs/reiserfs/file.c:669:
+        reiserfs_write_unlock(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: fs/reiserfs/file.c:669:
+        reiserfs_write_unlock(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: fs/reiserfs/file.c:671:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: fs/reiserfs/file.c:672:
+    ih = get_ih(&path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: fs/reiserfs/file.c:673:
+    res = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: fs/reiserfs/file.c:674:
+    if ( is_direct_le_ih(ih) ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#975: FILE: fs/reiserfs/file.c:674:
+    if ( is_direct_le_ih(ih) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#975: FILE: fs/reiserfs/file.c:674:
+    if ( is_direct_le_ih(ih) ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#975: FILE: fs/reiserfs/file.c:674:
+    if ( is_direct_le_ih(ih) ) {
[...]
+    } else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#977: FILE: fs/reiserfs/file.c:676:
+	 * items), so we need to unpack it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#979: FILE: fs/reiserfs/file.c:678:
+	/* To not overcomplicate matters, we just call generic_cont_expand
+	   which will in turn call other stuff and finally will boil down to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: fs/reiserfs/file.c:679:
+	    reiserfs_get_block() that would do necessary conversion. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ih->ih_key
#981: FILE: fs/reiserfs/file.c:680:
+	cont_expand_offset = le_key_k_offset(get_inode_item_key_version(inode), &(ih->ih_key));

ERROR:SPACING: space prohibited after that open parenthesis '('
#983: FILE: fs/reiserfs/file.c:682:
+	res = generic_cont_expand( inode, cont_expand_offset);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: fs/reiserfs/file.c:683:
+    } else$

CHECK:BRACES: Unbalanced braces around else statement
#984: FILE: fs/reiserfs/file.c:683:
+    } else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: fs/reiserfs/file.c:686:
+    reiserfs_write_unlock(inode->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: fs/reiserfs/file.c:687:
+    return res;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#992: FILE: fs/reiserfs/file.c:691:
+/* This function locks pages starting from @pos for @inode.
+   @num_pages pages are locked and stored in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: fs/reiserfs/file.c:695:
+   append), it is zeroed, then. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#998: FILE: fs/reiserfs/file.c:697:
+   new file data.*/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#999: FILE: fs/reiserfs/file.c:698:
+int reiserfs_prepare_file_region_for_write(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: fs/reiserfs/file.c:702:
+^I^I^I^I^I          prepare */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1003: FILE: fs/reiserfs/file.c:702:
+				int num_pages, /* number of pages to
+					          prepare */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1003: FILE: fs/reiserfs/file.c:702:
+					          prepare */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1005: FILE: fs/reiserfs/file.c:704:
+				int write_bytes, /* Amount of bytes to be
+						    overwritten from

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1006: FILE: fs/reiserfs/file.c:705:
+						    @pos */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1008: FILE: fs/reiserfs/file.c:707:
+				struct page **prepared_pages /* pointer to array
+							       where to store

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1009: FILE: fs/reiserfs/file.c:708:
+							       prepared pages */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: fs/reiserfs/file.c:711:
+    int res=0; // Return values of different functions we call.$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1012: FILE: fs/reiserfs/file.c:711:
+    int res=0; // Return values of different functions we call.
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: fs/reiserfs/file.c:712:
+    unsigned long index = pos >> PAGE_CACHE_SHIFT; // Offset in file in pages.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: fs/reiserfs/file.c:713:
+    int from = (pos & (PAGE_CACHE_SIZE - 1)); // Writing offset in first page$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: fs/reiserfs/file.c:714:
+    int to = ((pos + write_bytes - 1) & (PAGE_CACHE_SIZE - 1)) + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: fs/reiserfs/file.c:716:
+^I^I^I^I            page */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1017: FILE: fs/reiserfs/file.c:716:
+					 /* offset of last modified byte in last
+				            page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1017: FILE: fs/reiserfs/file.c:716:
+				            page */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: fs/reiserfs/file.c:717:
+    struct address_space *mapping = inode->i_mapping; // Pages are mapped here.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: fs/reiserfs/file.c:718:
+    int i; // Simple counter$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: fs/reiserfs/file.c:719:
+    int blocks = 0; /* Return value (blocks that should be allocated) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: fs/reiserfs/file.c:720:
+    struct buffer_head *bh, *head; // Current bufferhead and first bufferhead$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: fs/reiserfs/file.c:722:
+    unsigned block_start, block_end; // Starting and ending offsets of current$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1023: FILE: fs/reiserfs/file.c:722:
+    unsigned block_start, block_end; // Starting and ending offsets of current

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: fs/reiserfs/file.c:724:
+    struct buffer_head *wait[2], **wait_bh=wait; // Buffers for page, if$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1025: FILE: fs/reiserfs/file.c:724:
+    struct buffer_head *wait[2], **wait_bh=wait; // Buffers for page, if
                                           ^

WARNING:LONG_LINE_COMMENT: line length of 159 exceeds 100 columns
#1031: FILE: fs/reiserfs/file.c:730:
+						 // buffers for one page. One at                                                 // the beginning of write area

WARNING:TYPO_SPELLING: 'inthe' may be misspelled - perhaps 'in the'?
#1033: FILE: fs/reiserfs/file.c:732:
+						 // Everything inthe middle gets                                                 // overwritten totally.
 						               ^^^^^

WARNING:LONG_LINE_COMMENT: line length of 152 exceeds 100 columns
#1033: FILE: fs/reiserfs/file.c:732:
+						 // Everything inthe middle gets                                                 // overwritten totally.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: fs/reiserfs/file.c:734:
+    struct cpu_key key; // cpu key of item that we are going to deal with$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: fs/reiserfs/file.c:735:
+    struct item_head *ih = NULL; // pointer to item head that we are going to deal with$

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1037: FILE: fs/reiserfs/file.c:736:
+    struct buffer_head *itembuf=NULL; // Buffer head that contains items that we are going to deal with

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: fs/reiserfs/file.c:736:
+    struct buffer_head *itembuf=NULL; // Buffer head that contains items that we are going to deal with$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1037: FILE: fs/reiserfs/file.c:736:
+    struct buffer_head *itembuf=NULL; // Buffer head that contains items that we are going to deal with
                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1038: FILE: fs/reiserfs/file.c:737:
+    struct buffer_head *itembuf=NULL; // Buffer head that contains items that we are going to deal with
+    INITIALIZE_PATH(path); // path to item, that we are going to deal with.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: fs/reiserfs/file.c:737:
+    INITIALIZE_PATH(path); // path to item, that we are going to deal with.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: fs/reiserfs/file.c:738:
+    __u32 * item=0; // pointer to item we are going to deal with$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1039: FILE: fs/reiserfs/file.c:738:
+    __u32 * item=0; // pointer to item we are going to deal with

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1039: FILE: fs/reiserfs/file.c:738:
+    __u32 * item=0; // pointer to item we are going to deal with
                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1041: FILE: fs/reiserfs/file.c:740:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: fs/reiserfs/file.c:741:
+    if ( num_pages < 1 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1042: FILE: fs/reiserfs/file.c:741:
+    if ( num_pages < 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1042: FILE: fs/reiserfs/file.c:741:
+    if ( num_pages < 1 ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_prepare_file_region_for_write', this function's name, in a string
#1043: FILE: fs/reiserfs/file.c:742:
+	reiserfs_warning("green-9001: reiserfs_prepare_file_region_for_write called with zero number of pages to process\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: fs/reiserfs/file.c:744:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1048: FILE: fs/reiserfs/file.c:747:
+    /* We have 2 loops for pages. In first loop we grab and lock the pages, so
+       that nobody would touch these until we release the pages. Then

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1049: FILE: fs/reiserfs/file.c:748:
+       we'd start to deal with mapping buffers to blocks. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: fs/reiserfs/file.c:749:
+    for ( i = 0; i < num_pages; i++) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1050: FILE: fs/reiserfs/file.c:749:
+    for ( i = 0; i < num_pages; i++) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1052: FILE: fs/reiserfs/file.c:751:
+	if ( !prepared_pages[i]) {
+	    res = -ENOMEM;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1052: FILE: fs/reiserfs/file.c:751:
+	if ( !prepared_pages[i]) {

WARNING:TABSTOP: Statements should start on a tabstop
#1054: FILE: fs/reiserfs/file.c:753:
+	    goto failed_page_grabbing;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1056: FILE: fs/reiserfs/file.c:755:
+	if (!page_has_buffers(prepared_pages[i]))
+	    create_empty_buffers(prepared_pages[i], inode->i_sb->s_blocksize, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: fs/reiserfs/file.c:757:
+    }$

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1061: FILE: fs/reiserfs/file.c:760:
+       overwritten are new (we will substract already allocated blocks later)*/
                                     ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1061: FILE: fs/reiserfs/file.c:760:
+    /* Let's count amount of blocks for a case where all the blocks
+       overwritten are new (we will substract already allocated blocks later)*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1061: FILE: fs/reiserfs/file.c:760:
+       overwritten are new (we will substract already allocated blocks later)*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: fs/reiserfs/file.c:761:
+    if ( num_pages > 2 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1062: FILE: fs/reiserfs/file.c:761:
+    if ( num_pages > 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1062: FILE: fs/reiserfs/file.c:761:
+    if ( num_pages > 2 )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1064: FILE: fs/reiserfs/file.c:763:
+	/* These are full-overwritten pages so we count all the blocks in
+	   these pages are counted as needed to be allocated */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1064: FILE: fs/reiserfs/file.c:763:
+	   these pages are counted as needed to be allocated */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: fs/reiserfs/file.c:767:
+    blocks += ((PAGE_CACHE_SIZE - from) >> inode->i_blkbits) +$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1069: FILE: fs/reiserfs/file.c:768:
+	   !!(from & (inode->i_sb->s_blocksize-1)); /* roundup */
 	                                      ^

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1072: FILE: fs/reiserfs/file.c:771:
+       overwrite only one page), we substract all the blocks past the
                                     ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1072: FILE: fs/reiserfs/file.c:771:
+    /* Now we account for last page. If last page == first page (we
+       overwrite only one page), we substract all the blocks past the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1074: FILE: fs/reiserfs/file.c:773:
+       of blocks */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: fs/reiserfs/file.c:774:
+    blocks += ((num_pages > 1) << (PAGE_CACHE_SHIFT-inode->i_blkbits)) -$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1075: FILE: fs/reiserfs/file.c:774:
+    blocks += ((num_pages > 1) << (PAGE_CACHE_SHIFT-inode->i_blkbits)) -
                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1078: FILE: fs/reiserfs/file.c:777:
+	   /* Note how we do not roundup here since partial blocks still
+		   should be allocated */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1078: FILE: fs/reiserfs/file.c:777:
+		   should be allocated */

WARNING:TYPO_SPELLING: 'maping' may be misspelled - perhaps 'mapping'?
#1081: FILE: fs/reiserfs/file.c:780:
+       maping blocks, since there is none, so we just zero out remaining
        ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1081: FILE: fs/reiserfs/file.c:780:
+    /* Now if all the write area lies past the file end, no point in
+       maping blocks, since there is none, so we just zero out remaining

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: fs/reiserfs/file.c:781:
+       parts of first and last pages in write area (if needed) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: fs/reiserfs/file.c:782:
+    if ( (pos & ~(PAGE_CACHE_SIZE - 1)) > inode->i_size ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1083: FILE: fs/reiserfs/file.c:782:
+    if ( (pos & ~(PAGE_CACHE_SIZE - 1)) > inode->i_size ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1083: FILE: fs/reiserfs/file.c:782:
+    if ( (pos & ~(PAGE_CACHE_SIZE - 1)) > inode->i_size ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1084: FILE: fs/reiserfs/file.c:783:
+	if ( from != 0 ) {/* First page needs to be partially zeroed */
+	    char *kaddr = kmap_atomic(prepared_pages[0], KM_USER0);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1084: FILE: fs/reiserfs/file.c:783:
+	if ( from != 0 ) {/* First page needs to be partially zeroed */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1084: FILE: fs/reiserfs/file.c:783:
+	if ( from != 0 ) {/* First page needs to be partially zeroed */

WARNING:TABSTOP: Statements should start on a tabstop
#1085: FILE: fs/reiserfs/file.c:784:
+	    char *kaddr = kmap_atomic(prepared_pages[0], KM_USER0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1086: FILE: fs/reiserfs/file.c:785:
+	    char *kaddr = kmap_atomic(prepared_pages[0], KM_USER0);
+	    memset(kaddr, 0, from);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1087: FILE: fs/reiserfs/file.c:786:
+	    kunmap_atomic( kaddr, KM_USER0);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1089: FILE: fs/reiserfs/file.c:788:
+	if ( to != PAGE_CACHE_SIZE ) { /* Last page needs to be partially zeroed */
+	    char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1089: FILE: fs/reiserfs/file.c:788:
+	if ( to != PAGE_CACHE_SIZE ) { /* Last page needs to be partially zeroed */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1089: FILE: fs/reiserfs/file.c:788:
+	if ( to != PAGE_CACHE_SIZE ) { /* Last page needs to be partially zeroed */

WARNING:TABSTOP: Statements should start on a tabstop
#1090: FILE: fs/reiserfs/file.c:789:
+	    char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1090: FILE: fs/reiserfs/file.c:789:
+	    char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);
 	                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1091: FILE: fs/reiserfs/file.c:790:
+	    char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);
+	    memset(kaddr+to, 0, PAGE_CACHE_SIZE - to);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1091: FILE: fs/reiserfs/file.c:790:
+	    memset(kaddr+to, 0, PAGE_CACHE_SIZE - to);
 	                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1092: FILE: fs/reiserfs/file.c:791:
+	    kunmap_atomic( kaddr, KM_USER0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: fs/reiserfs/file.c:796:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1100: FILE: fs/reiserfs/file.c:799:
+    /* Well, since we write somewhere into the middle of a file, there is
+       possibility we are writing over some already allocated blocks, so

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1101: FILE: fs/reiserfs/file.c:800:
+       let's map these blocks and substract number of such blocks out of blocks
                                   ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1102: FILE: fs/reiserfs/file.c:801:
+       we need to allocate (calculated above) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1104: FILE: fs/reiserfs/file.c:803:
+    /* Mask write position to start on blocksize, we do it out of the
+       loop for performance reasons */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1104: FILE: fs/reiserfs/file.c:803:
+       loop for performance reasons */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: fs/reiserfs/file.c:804:
+    pos &= ~(inode->i_sb->s_blocksize - 1);$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1107: FILE: fs/reiserfs/file.c:806:
+    make_cpu_key (&key, inode, 1 + ((pos) & ~(inode->i_sb->s_blocksize - 1)), TYPE_ANY, 3/*key length*/);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: fs/reiserfs/file.c:806:
+    make_cpu_key (&key, inode, 1 + ((pos) & ~(inode->i_sb->s_blocksize - 1)), TYPE_ANY, 3/*key length*/);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1107: FILE: fs/reiserfs/file.c:806:
+    make_cpu_key (&key, inode, 1 + ((pos) & ~(inode->i_sb->s_blocksize - 1)), TYPE_ANY, 3/*key length*/);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: fs/reiserfs/file.c:808:
+    reiserfs_write_lock(inode->i_sb); // We need that for at least search_by_key()$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: fs/reiserfs/file.c:809:
+    for ( i = 0; i < num_pages ; i++ ) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: fs/reiserfs/file.c:809:
+    for ( i = 0; i < num_pages ; i++ ) { $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1110: FILE: fs/reiserfs/file.c:809:
+    for ( i = 0; i < num_pages ; i++ ) { 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1110: FILE: fs/reiserfs/file.c:809:
+    for ( i = 0; i < num_pages ; i++ ) { 

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#1111: FILE: fs/reiserfs/file.c:810:
+	int item_pos=-1; /* Position in indirect item */
 	            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1111: FILE: fs/reiserfs/file.c:810:
+	int item_pos=-1; /* Position in indirect item */
 	             ^

ERROR:SPACING: space required before the open parenthesis '('
#1115: FILE: fs/reiserfs/file.c:814:
+	for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1116: FILE: fs/reiserfs/file.c:815:
+	    block_start=block_end, bh = bh->b_this_page) {
 	               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1117: FILE: fs/reiserfs/file.c:816:
+		if (!bh)
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#1118: FILE: fs/reiserfs/file.c:817:
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1120: FILE: fs/reiserfs/file.c:819:
+		block_end = block_start+inode->i_sb->s_blocksize;
 		                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1121: FILE: fs/reiserfs/file.c:820:
+		if (i == 0 && block_end <= from )
[...]
+		    continue;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1121: FILE: fs/reiserfs/file.c:820:
+		if (i == 0 && block_end <= from )

WARNING:TABSTOP: Statements should start on a tabstop
#1123: FILE: fs/reiserfs/file.c:822:
+		    continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1125: FILE: fs/reiserfs/file.c:824:
+		if (i == num_pages - 1 && block_start >= to) {
[...]
+		    break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1127: FILE: fs/reiserfs/file.c:826:
+		    /* If this buffer is after requested data to map, abort
+		       processing of current page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1127: FILE: fs/reiserfs/file.c:826:
+		       processing of current page */

WARNING:TABSTOP: Statements should start on a tabstop
#1128: FILE: fs/reiserfs/file.c:827:
+		    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1131: FILE: fs/reiserfs/file.c:830:
+		if ( buffer_mapped(bh) && bh->b_blocknr !=0 ) {
[...]
+		    item_pos++;

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1131: FILE: fs/reiserfs/file.c:830:
+		if ( buffer_mapped(bh) && bh->b_blocknr !=0 ) {
 		                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1131: FILE: fs/reiserfs/file.c:830:
+		if ( buffer_mapped(bh) && bh->b_blocknr !=0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1131: FILE: fs/reiserfs/file.c:830:
+		if ( buffer_mapped(bh) && bh->b_blocknr !=0 ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1133: FILE: fs/reiserfs/file.c:832:
+		    /* This is optimisation for a case where buffer is mapped
+		       and have blocknumber assigned. In case significant amount

ERROR:SPACING: space prohibited after that open parenthesis '('
#1142: FILE: fs/reiserfs/file.c:841:
+		    set_cpu_key_k_offset( &key, cpu_key_k_offset(&key) + inode->i_sb->s_blocksize);

WARNING:TABSTOP: Statements should start on a tabstop
#1145: FILE: fs/reiserfs/file.c:844:
+		    continue; // Go to the next buffer

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1148: FILE: fs/reiserfs/file.c:847:
+		if ( !itembuf || /* if first iteration */
+		     item_pos >= ih_item_len(ih)/UNFM_P_SIZE)
+					     { /* or if we progressed past the

ERROR:SPACING: space prohibited after that open parenthesis '('
#1148: FILE: fs/reiserfs/file.c:847:
+		if ( !itembuf || /* if first iteration */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1149: FILE: fs/reiserfs/file.c:848:
+		     item_pos >= ih_item_len(ih)/UNFM_P_SIZE)
 		                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#1150: FILE: fs/reiserfs/file.c:849:
+					     { /* or if we progressed past the

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1151: FILE: fs/reiserfs/file.c:850:
+					     { /* or if we progressed past the
+						  current unformatted_item */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1151: FILE: fs/reiserfs/file.c:850:
+						  current unformatted_item */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#1155: FILE: fs/reiserfs/file.c:854:
+			if ( res != POSITION_FOUND )
+			    break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1155: FILE: fs/reiserfs/file.c:854:
+			if ( res != POSITION_FOUND )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1155: FILE: fs/reiserfs/file.c:854:
+			if ( res != POSITION_FOUND )

WARNING:TABSTOP: Statements should start on a tabstop
#1156: FILE: fs/reiserfs/file.c:855:
+			    break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1159: FILE: fs/reiserfs/file.c:858:
+			itembuf = get_last_bh( &path );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1159: FILE: fs/reiserfs/file.c:858:
+			itembuf = get_last_bh( &path );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1160: FILE: fs/reiserfs/file.c:859:
+			ih = get_ih( &path );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1160: FILE: fs/reiserfs/file.c:859:
+			ih = get_ih( &path );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1161: FILE: fs/reiserfs/file.c:860:
+			item = get_item( &path );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1161: FILE: fs/reiserfs/file.c:860:
+			item = get_item( &path );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1164: FILE: fs/reiserfs/file.c:863:
+			RFALSE( !is_indirect_le_ih (ih), "green-9003: indirect item expected");

ERROR:SPACING: space prohibited after that open parenthesis '('
#1164: FILE: fs/reiserfs/file.c:863:
+			RFALSE( !is_indirect_le_ih (ih), "green-9003: indirect item expected");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1168: FILE: fs/reiserfs/file.c:867:
+		/* See if there is some block associated with the file
+		   at that position, map the buffer to this block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1168: FILE: fs/reiserfs/file.c:867:
+		   at that position, map the buffer to this block */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1169: FILE: fs/reiserfs/file.c:868:
+		if ( get_block_num(item,item_pos) ) {
+		    map_bh(bh, inode->i_sb, get_block_num(item,item_pos));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1169: FILE: fs/reiserfs/file.c:868:
+		if ( get_block_num(item,item_pos) ) {
 		                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1169: FILE: fs/reiserfs/file.c:868:
+		if ( get_block_num(item,item_pos) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1169: FILE: fs/reiserfs/file.c:868:
+		if ( get_block_num(item,item_pos) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1170: FILE: fs/reiserfs/file.c:869:
+		    map_bh(bh, inode->i_sb, get_block_num(item,item_pos));
 		                                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1176: FILE: fs/reiserfs/file.c:875:
+		set_cpu_key_k_offset( &key, cpu_key_k_offset(&key) + inode->i_sb->s_blocksize);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: fs/reiserfs/file.c:877:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: fs/reiserfs/file.c:878:
+    pathrelse(&path); // Free the path$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: fs/reiserfs/file.c:879:
+    reiserfs_write_unlock(inode->i_sb);$

WARNING:TYPO_SPELLING: 'unmappend' may be misspelled - perhaps 'unmapped'?
#1182: FILE: fs/reiserfs/file.c:881:
+	/* Now zero out unmappend buffers for the first and last pages of
 	                ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1183: FILE: fs/reiserfs/file.c:882:
+	/* Now zero out unmappend buffers for the first and last pages of
+	   write area or issue read requests if page is mapped. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1183: FILE: fs/reiserfs/file.c:882:
+	   write area or issue read requests if page is mapped. */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1184: FILE: fs/reiserfs/file.c:883:
+	/* First page, see if it is not uptodate */
 	                                ^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1185: FILE: fs/reiserfs/file.c:884:
+	if ( !PageUptodate(prepared_pages[0]) ) {
+	    head = page_buffers(prepared_pages[0]);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1185: FILE: fs/reiserfs/file.c:884:
+	if ( !PageUptodate(prepared_pages[0]) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1185: FILE: fs/reiserfs/file.c:884:
+	if ( !PageUptodate(prepared_pages[0]) ) {

WARNING:TABSTOP: Statements should start on a tabstop
#1189: FILE: fs/reiserfs/file.c:888:
+	    for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: space required before the open parenthesis '('
#1189: FILE: fs/reiserfs/file.c:888:
+	    for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1190: FILE: fs/reiserfs/file.c:889:
+		block_start=block_end, bh = bh->b_this_page) {
 		           ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1191: FILE: fs/reiserfs/file.c:890:
+		block_start=block_end, bh = bh->b_this_page) {
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1192: FILE: fs/reiserfs/file.c:891:
+		if (!bh)
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#1193: FILE: fs/reiserfs/file.c:892:
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1195: FILE: fs/reiserfs/file.c:894:
+		block_end = block_start+inode->i_sb->s_blocksize;
 		                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1196: FILE: fs/reiserfs/file.c:895:
+		if ( block_end <= from )
[...]
+		    continue;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1196: FILE: fs/reiserfs/file.c:895:
+		if ( block_end <= from )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1196: FILE: fs/reiserfs/file.c:895:
+		if ( block_end <= from )

WARNING:TABSTOP: Statements should start on a tabstop
#1198: FILE: fs/reiserfs/file.c:897:
+		    continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1199: FILE: fs/reiserfs/file.c:898:
+		if ( block_start < from ) { /* Aha, our partial buffer */
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited after that open parenthesis '('
#1199: FILE: fs/reiserfs/file.c:898:
+		if ( block_start < from ) { /* Aha, our partial buffer */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1199: FILE: fs/reiserfs/file.c:898:
+		if ( block_start < from ) { /* Aha, our partial buffer */

WARNING:TABSTOP: Statements should start on a tabstop
#1200: FILE: fs/reiserfs/file.c:899:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited after that open parenthesis '('
#1200: FILE: fs/reiserfs/file.c:899:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1200: FILE: fs/reiserfs/file.c:899:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1201: FILE: fs/reiserfs/file.c:900:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to
+						  issue READ request for it to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1202: FILE: fs/reiserfs/file.c:901:
+						  not loose data */

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1204: FILE: fs/reiserfs/file.c:903:
+			*wait_bh++=bh;
 			          ^

WARNING:TABSTOP: Statements should start on a tabstop
#1205: FILE: fs/reiserfs/file.c:904:
+		    } else { /* Not mapped, zero it */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1207: FILE: fs/reiserfs/file.c:906:
+			char *kaddr = kmap_atomic(prepared_pages[0], KM_USER0);
+			memset(kaddr+block_start, 0, from-block_start);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1207: FILE: fs/reiserfs/file.c:906:
+			memset(kaddr+block_start, 0, from-block_start);
 			            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1207: FILE: fs/reiserfs/file.c:906:
+			memset(kaddr+block_start, 0, from-block_start);
 			                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1208: FILE: fs/reiserfs/file.c:907:
+			kunmap_atomic( kaddr, KM_USER0);

WARNING:TABSTOP: Statements should start on a tabstop
#1210: FILE: fs/reiserfs/file.c:909:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#1212: FILE: fs/reiserfs/file.c:911:
+	    }

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1215: FILE: fs/reiserfs/file.c:914:
+	/* Last page, see if it is not uptodate, or if the last page is past the end of the file. */
 	                               ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1216: FILE: fs/reiserfs/file.c:915:
+^Iif ( !PageUptodate(prepared_pages[num_pages-1]) || $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1216: FILE: fs/reiserfs/file.c:915:
+	if ( !PageUptodate(prepared_pages[num_pages-1]) || 
[...]
+	    head = page_buffers(prepared_pages[num_pages-1]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1216: FILE: fs/reiserfs/file.c:915:
+	if ( !PageUptodate(prepared_pages[num_pages-1]) || 
 	                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1216: FILE: fs/reiserfs/file.c:915:
+	if ( !PageUptodate(prepared_pages[num_pages-1]) || 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1217: FILE: fs/reiserfs/file.c:916:
+	    ((pos+write_bytes)>>PAGE_CACHE_SHIFT) > (inode->i_size>>PAGE_CACHE_SHIFT) ) {
 	         ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1217: FILE: fs/reiserfs/file.c:916:
+	    ((pos+write_bytes)>>PAGE_CACHE_SHIFT) > (inode->i_size>>PAGE_CACHE_SHIFT) ) {
 	                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1217: FILE: fs/reiserfs/file.c:916:
+	    ((pos+write_bytes)>>PAGE_CACHE_SHIFT) > (inode->i_size>>PAGE_CACHE_SHIFT) ) {
 	                                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1217: FILE: fs/reiserfs/file.c:916:
+	    ((pos+write_bytes)>>PAGE_CACHE_SHIFT) > (inode->i_size>>PAGE_CACHE_SHIFT) ) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1218: FILE: fs/reiserfs/file.c:917:
+	    head = page_buffers(prepared_pages[num_pages-1]);
 	                                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#1221: FILE: fs/reiserfs/file.c:920:
+	    for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: space required before the open parenthesis '('
#1221: FILE: fs/reiserfs/file.c:920:
+	    for(bh = head, block_start = 0; bh != head || !block_start;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1222: FILE: fs/reiserfs/file.c:921:
+		block_start=block_end, bh = bh->b_this_page) {
 		           ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1223: FILE: fs/reiserfs/file.c:922:
+		block_start=block_end, bh = bh->b_this_page) {
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1224: FILE: fs/reiserfs/file.c:923:
+		if (!bh)
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#1225: FILE: fs/reiserfs/file.c:924:
+		    reiserfs_panic(inode->i_sb, "green-9002: Allocated but absent buffer for a page?");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1227: FILE: fs/reiserfs/file.c:926:
+		block_end = block_start+inode->i_sb->s_blocksize;
 		                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1228: FILE: fs/reiserfs/file.c:927:
+		if ( block_start >= to )
[...]
+		    break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1228: FILE: fs/reiserfs/file.c:927:
+		if ( block_start >= to )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1228: FILE: fs/reiserfs/file.c:927:
+		if ( block_start >= to )

WARNING:TABSTOP: Statements should start on a tabstop
#1230: FILE: fs/reiserfs/file.c:929:
+		    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1231: FILE: fs/reiserfs/file.c:930:
+		if ( block_end > to ) { /* Aha, our partial buffer */
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited after that open parenthesis '('
#1231: FILE: fs/reiserfs/file.c:930:
+		if ( block_end > to ) { /* Aha, our partial buffer */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1231: FILE: fs/reiserfs/file.c:930:
+		if ( block_end > to ) { /* Aha, our partial buffer */

WARNING:TABSTOP: Statements should start on a tabstop
#1232: FILE: fs/reiserfs/file.c:931:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited after that open parenthesis '('
#1232: FILE: fs/reiserfs/file.c:931:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1232: FILE: fs/reiserfs/file.c:931:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1233: FILE: fs/reiserfs/file.c:932:
+		    if ( buffer_mapped(bh) ) { /* If it is mapped, we need to
+						  issue READ request for it to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1234: FILE: fs/reiserfs/file.c:933:
+						  not loose data */

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1236: FILE: fs/reiserfs/file.c:935:
+			*wait_bh++=bh;
 			          ^

WARNING:TABSTOP: Statements should start on a tabstop
#1237: FILE: fs/reiserfs/file.c:936:
+		    } else { /* Not mapped, zero it */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1238: FILE: fs/reiserfs/file.c:937:
+			char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);
 			                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1239: FILE: fs/reiserfs/file.c:938:
+			char *kaddr = kmap_atomic(prepared_pages[num_pages-1], KM_USER0);
+			memset(kaddr+to, 0, block_end-to);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1239: FILE: fs/reiserfs/file.c:938:
+			memset(kaddr+to, 0, block_end-to);
 			            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1239: FILE: fs/reiserfs/file.c:938:
+			memset(kaddr+to, 0, block_end-to);
 			                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1240: FILE: fs/reiserfs/file.c:939:
+			kunmap_atomic( kaddr, KM_USER0);

WARNING:TABSTOP: Statements should start on a tabstop
#1242: FILE: fs/reiserfs/file.c:941:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#1244: FILE: fs/reiserfs/file.c:943:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: fs/reiserfs/file.c:947:
+    while(wait_bh > wait) {$

ERROR:SPACING: space required before the open parenthesis '('
#1248: FILE: fs/reiserfs/file.c:947:
+    while(wait_bh > wait) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1250: FILE: fs/reiserfs/file.c:949:
+	if (!buffer_uptodate(*wait_bh)) {
+	    res = -EIO;

WARNING:TABSTOP: Statements should start on a tabstop
#1252: FILE: fs/reiserfs/file.c:951:
+	    goto failed_read;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: fs/reiserfs/file.c:953:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: fs/reiserfs/file.c:955:
+    return blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: fs/reiserfs/file.c:957:
+    num_pages = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: fs/reiserfs/file.c:959:
+    reiserfs_unprepare_pages(prepared_pages, num_pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: fs/reiserfs/file.c:960:
+    return res;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1265: FILE: fs/reiserfs/file.c:964:
+   from the buffer @buf.  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1265: FILE: fs/reiserfs/file.c:964:
+/* Write @count bytes at position @ppos in a file indicated by @file
+   from the buffer @buf.  

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#1267: FILE: fs/reiserfs/file.c:966:
+   generic_file_write() is only appropriate for filesystems that are not seeking to optimize performance and want

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#1268: FILE: fs/reiserfs/file.c:967:
+   something simple that works.  It is not for serious use by general purpose filesystems, excepting the one that it was

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1275: FILE: fs/reiserfs/file.c:974:
+   * It depends on reiserfs_get_block() function which if implemented by reiserfs performs costly search_by_key

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#1276: FILE: fs/reiserfs/file.c:975:
+   * operation for each page it is supplied with. By contrast reiserfs_file_write() feeds as much as possible at a time

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1279: FILE: fs/reiserfs/file.c:978:
+   * Each indirect pointer insertion takes a lot of cpu, because it involves memory moves inside of blocks.

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#1283: FILE: fs/reiserfs/file.c:982:
+   All of these reasons for not using only generic file write were understood back when reiserfs was first miscoded to

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1284: FILE: fs/reiserfs/file.c:983:
+   use it, but we were in a hurry to make code freeze, and so it couldn't be revised then.  This new code should make

ERROR:SPACING: space prohibited after that open parenthesis '('
#1290: FILE: fs/reiserfs/file.c:989:
+ssize_t reiserfs_file_write( struct file *file, /* the file we are going to write into */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: fs/reiserfs/file.c:990:
+                             const char *buf, /*  pointer to user supplied data$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: fs/reiserfs/file.c:990:
+                             const char *buf, /*  pointer to user supplied data$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1292: FILE: fs/reiserfs/file.c:991:
+                             const char *buf, /*  pointer to user supplied data
+(in userspace) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1292: FILE: fs/reiserfs/file.c:991:
+(in userspace) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: fs/reiserfs/file.c:992:
+                             size_t count, /* amount of bytes to write */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: fs/reiserfs/file.c:992:
+                             size_t count, /* amount of bytes to write */$

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#1294: FILE: fs/reiserfs/file.c:993:
+                             loff_t *ppos /* pointer to position in file that we start writing at. Should be updated to

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: fs/reiserfs/file.c:993:
+                             loff_t *ppos /* pointer to position in file that we start writing at. Should be updated to$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1294: FILE: fs/reiserfs/file.c:993:
+                             size_t count, /* amount of bytes to write */
+                             loff_t *ppos /* pointer to position in file that we start writing at. Should be updated to

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: fs/reiserfs/file.c:993:
+                             loff_t *ppos /* pointer to position in file that we start writing at. Should be updated to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1295: FILE: fs/reiserfs/file.c:994:
+                                           * new current position before returning. */ )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1295: FILE: fs/reiserfs/file.c:994:
+                                           * new current position before returning. */ )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: fs/reiserfs/file.c:996:
+    size_t already_written = 0; // Number of bytes already written to the file.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: fs/reiserfs/file.c:997:
+    loff_t pos; // Current position in the file.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: fs/reiserfs/file.c:998:
+    size_t res; // return value of various functions that we call.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: fs/reiserfs/file.c:999:
+    struct inode *inode = file->f_dentry->d_inode; // Inode of the file that we are writing to.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: fs/reiserfs/file.c:1000:
+    struct page * prepared_pages[REISERFS_WRITE_PAGES_AT_A_TIME];$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1301: FILE: fs/reiserfs/file.c:1000:
+    struct page * prepared_pages[REISERFS_WRITE_PAGES_AT_A_TIME];

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1303: FILE: fs/reiserfs/file.c:1002:
+				/* To simplify coding at this time, we store
+				   locked pages in array for now */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1303: FILE: fs/reiserfs/file.c:1002:
+				   locked pages in array for now */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: fs/reiserfs/file.c:1003:
+    if ( count <= PAGE_CACHE_SIZE || file->f_flags & O_DIRECT)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1304: FILE: fs/reiserfs/file.c:1003:
+    if ( count <= PAGE_CACHE_SIZE || file->f_flags & O_DIRECT)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1305: FILE: fs/reiserfs/file.c:1004:
+        return generic_file_write(file, buf, count, ppos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: fs/reiserfs/file.c:1004:
+        return generic_file_write(file, buf, count, ppos);$

CHECK:SPACING: No space is necessary after a cast
#1307: FILE: fs/reiserfs/file.c:1006:
+    if ( unlikely((ssize_t) count < 0 ))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: fs/reiserfs/file.c:1006:
+    if ( unlikely((ssize_t) count < 0 ))$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1307: FILE: fs/reiserfs/file.c:1006:
+    if ( unlikely((ssize_t) count < 0 ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1307: FILE: fs/reiserfs/file.c:1006:
+    if ( unlikely((ssize_t) count < 0 ))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1308: FILE: fs/reiserfs/file.c:1007:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1308: FILE: fs/reiserfs/file.c:1007:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: fs/reiserfs/file.c:1009:
+    if (unlikely(!access_ok(VERIFY_READ, buf, count)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: fs/reiserfs/file.c:1010:
+        return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1311: FILE: fs/reiserfs/file.c:1010:
+        return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: fs/reiserfs/file.c:1012:
+    down(&inode->i_sem); // locks the entire file for just us$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: fs/reiserfs/file.c:1014:
+    pos = *ppos;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1318: FILE: fs/reiserfs/file.c:1017:
+    /* Check if we can write to specified region of file, file
+       is not overly big and this kind of stuff. Adjust pos and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1319: FILE: fs/reiserfs/file.c:1018:
+       count, if needed */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: fs/reiserfs/file.c:1019:
+    res = generic_write_checks(inode, file, &pos, &count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: fs/reiserfs/file.c:1020:
+    if (res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: fs/reiserfs/file.c:1023:
+    if ( count == 0 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1324: FILE: fs/reiserfs/file.c:1023:
+    if ( count == 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1324: FILE: fs/reiserfs/file.c:1023:
+    if ( count == 0 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: fs/reiserfs/file.c:1026:
+    remove_suid(file->f_dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: fs/reiserfs/file.c:1027:
+    inode_update_time(inode, 1); /* Both mtime and ctime */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1335: FILE: fs/reiserfs/file.c:1034:
+    /* If we are going to write past the file's packed tail or if we are going
+       to overwrite part of the tail, we need that tail to be converted into

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1336: FILE: fs/reiserfs/file.c:1035:
+       unformatted node */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: fs/reiserfs/file.c:1036:
+    res = reiserfs_check_for_tail_and_convert( inode, pos, count);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1337: FILE: fs/reiserfs/file.c:1036:
+    res = reiserfs_check_for_tail_and_convert( inode, pos, count);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: fs/reiserfs/file.c:1037:
+    if (res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: fs/reiserfs/file.c:1040:
+    while ( count > 0) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1341: FILE: fs/reiserfs/file.c:1040:
+    while ( count > 0) {

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#1342: FILE: fs/reiserfs/file.c:1041:
+	/* This is the main loop in which we running until some error occures
 	                                                              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1343: FILE: fs/reiserfs/file.c:1042:
+	/* This is the main loop in which we running until some error occures
+	   or until we write all of the data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1343: FILE: fs/reiserfs/file.c:1042:
+	   or until we write all of the data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1347: FILE: fs/reiserfs/file.c:1046:
+	int blocks_to_allocate; /* how much blocks we need to allocate for
+				   this iteration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1347: FILE: fs/reiserfs/file.c:1046:
+				   this iteration */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: fs/reiserfs/file.c:1047:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1348: FILE: fs/reiserfs/file.c:1047:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: fs/reiserfs/file.c:1047:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1349: FILE: fs/reiserfs/file.c:1048:
+        /*  (pos & (PAGE_CACHE_SIZE-1)) is an idiom for offset into a page of pos*/$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1350: FILE: fs/reiserfs/file.c:1049:
+	num_pages = !!((pos+count) & (PAGE_CACHE_SIZE - 1)) + /* round up partial
 	                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1351: FILE: fs/reiserfs/file.c:1050:
+	num_pages = !!((pos+count) & (PAGE_CACHE_SIZE - 1)) + /* round up partial
+							  pages */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1351: FILE: fs/reiserfs/file.c:1050:
+							  pages */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1352: FILE: fs/reiserfs/file.c:1051:
+^I^I    ((count + (pos & (PAGE_CACHE_SIZE-1))) >> PAGE_CACHE_SHIFT); $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1352: FILE: fs/reiserfs/file.c:1051:
+		    ((count + (pos & (PAGE_CACHE_SIZE-1))) >> PAGE_CACHE_SHIFT); 
 		                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1354: FILE: fs/reiserfs/file.c:1053:
+						/* convert size to amount of
+						   pages */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1354: FILE: fs/reiserfs/file.c:1053:
+						   pages */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: fs/reiserfs/file.c:1055:
+^Iif ( num_pages > REISERFS_WRITE_PAGES_AT_A_TIME $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1356: FILE: fs/reiserfs/file.c:1055:
+	if ( num_pages > REISERFS_WRITE_PAGES_AT_A_TIME 
[...]
+	    num_pages = min_t(int, REISERFS_WRITE_PAGES_AT_A_TIME, reiserfs_can_fit_pages(inode->i_sb));

ERROR:SPACING: space prohibited after that open parenthesis '('
#1356: FILE: fs/reiserfs/file.c:1055:
+	if ( num_pages > REISERFS_WRITE_PAGES_AT_A_TIME 

CHECK:BRACES: braces {} should be used on all arms of this statement
#1356: FILE: fs/reiserfs/file.c:1055:
+	if ( num_pages > REISERFS_WRITE_PAGES_AT_A_TIME 
[...]
+	} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1357: FILE: fs/reiserfs/file.c:1056:
+	if ( num_pages > REISERFS_WRITE_PAGES_AT_A_TIME 
+		|| num_pages > reiserfs_can_fit_pages(inode->i_sb) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1357: FILE: fs/reiserfs/file.c:1056:
+		|| num_pages > reiserfs_can_fit_pages(inode->i_sb) ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1359: FILE: fs/reiserfs/file.c:1058:
+	    /* If we were asked to write more data than we want to or if there
+	       is not that much space, then we shorten amount of data to write

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1360: FILE: fs/reiserfs/file.c:1059:
+	       for this iteration. */

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1361: FILE: fs/reiserfs/file.c:1060:
+	    num_pages = min_t(int, REISERFS_WRITE_PAGES_AT_A_TIME, reiserfs_can_fit_pages(inode->i_sb));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1363: FILE: fs/reiserfs/file.c:1062:
+^I    write_bytes = (num_pages << PAGE_CACHE_SHIFT) - $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1364: FILE: fs/reiserfs/file.c:1063:
+			    (pos & (PAGE_CACHE_SIZE-1));
 			                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1366: FILE: fs/reiserfs/file.c:1065:
+					 /* If position is not on the
+					    start of the page, we need

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1367: FILE: fs/reiserfs/file.c:1066:
+					    to substract the offset
 					       ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1368: FILE: fs/reiserfs/file.c:1067:
+					    within page */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1369: FILE: fs/reiserfs/file.c:1068:
+	} else
+	    write_bytes = count;

CHECK:BRACES: Unbalanced braces around else statement
#1369: FILE: fs/reiserfs/file.c:1068:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1373: FILE: fs/reiserfs/file.c:1072:
+	/* reserve the blocks to be allocated later, so that later on
+	   we still have the space to write the blocks to */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1373: FILE: fs/reiserfs/file.c:1072:
+	   we still have the space to write the blocks to */

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1374: FILE: fs/reiserfs/file.c:1073:
+	reiserfs_claim_blocks_to_be_allocated(inode->i_sb, num_pages << (PAGE_CACHE_SHIFT - inode->i_blkbits));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1377: FILE: fs/reiserfs/file.c:1076:
+	if ( !num_pages ) { /* If we do not have enough space even for */
+	    res = -ENOSPC;  /* single page, return -ENOSPC */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1377: FILE: fs/reiserfs/file.c:1076:
+	if ( !num_pages ) { /* If we do not have enough space even for */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1377: FILE: fs/reiserfs/file.c:1076:
+	if ( !num_pages ) { /* If we do not have enough space even for */

WARNING:TABSTOP: Statements should start on a tabstop
#1379: FILE: fs/reiserfs/file.c:1078:
+	    if ( pos > (inode->i_size & (inode->i_sb->s_blocksize-1)))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1379: FILE: fs/reiserfs/file.c:1078:
+	    if ( pos > (inode->i_size & (inode->i_sb->s_blocksize-1)))
 	                                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1379: FILE: fs/reiserfs/file.c:1078:
+	    if ( pos > (inode->i_size & (inode->i_sb->s_blocksize-1)))

WARNING:TYPO_SPELLING: 'absolutelly' may be misspelled - perhaps 'absolutely'?
#1384: FILE: fs/reiserfs/file.c:1083:
+	    // But overwriting files on absolutelly full volumes would not
 	                                ^^^^^^^^^^^

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1387: FILE: fs/reiserfs/file.c:1086:
+	    write_bytes = min_t(int, count, inode->i_sb->s_blocksize - (pos & (inode->i_sb->s_blocksize - 1)));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1392: FILE: fs/reiserfs/file.c:1091:
+	/* Prepare for writing into the region, read in all the
+	   partially overwritten pages, if needed. And lock the pages,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1394: FILE: fs/reiserfs/file.c:1093:
+	   We get number of actual blocks needed as a result.*/

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#1395: FILE: fs/reiserfs/file.c:1094:
+	blocks_to_allocate = reiserfs_prepare_file_region_for_write(inode, pos, num_pages, write_bytes, prepared_pages);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1396: FILE: fs/reiserfs/file.c:1095:
+	if ( blocks_to_allocate < 0 ) {
+	    res = blocks_to_allocate;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1396: FILE: fs/reiserfs/file.c:1095:
+	if ( blocks_to_allocate < 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1396: FILE: fs/reiserfs/file.c:1095:
+	if ( blocks_to_allocate < 0 ) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1398: FILE: fs/reiserfs/file.c:1097:
+	    reiserfs_release_claimed_blocks(inode->i_sb, num_pages << (PAGE_CACHE_SHIFT - inode->i_blkbits));

WARNING:TABSTOP: Statements should start on a tabstop
#1399: FILE: fs/reiserfs/file.c:1098:
+	    break;

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#1403: FILE: fs/reiserfs/file.c:1102:
+	reiserfs_release_claimed_blocks(inode->i_sb, (num_pages << (PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits)) - blocks_to_allocate );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1403: FILE: fs/reiserfs/file.c:1102:
+	reiserfs_release_claimed_blocks(inode->i_sb, (num_pages << (PAGE_CACHE_SHIFT - inode->i_sb->s_blocksize_bits)) - blocks_to_allocate );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1405: FILE: fs/reiserfs/file.c:1104:
+	if ( blocks_to_allocate > 0) {/*We only allocate blocks if we need to*/
[...]
+	    res = reiserfs_allocate_blocks_for_region(inode, pos, num_pages, write_bytes, prepared_pages, blocks_to_allocate);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1405: FILE: fs/reiserfs/file.c:1104:
+	if ( blocks_to_allocate > 0) {/*We only allocate blocks if we need to*/

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1407: FILE: fs/reiserfs/file.c:1106:
+	    res = reiserfs_allocate_blocks_for_region(inode, pos, num_pages, write_bytes, prepared_pages, blocks_to_allocate);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1408: FILE: fs/reiserfs/file.c:1107:
+	} else if ( pos + write_bytes > inode->i_size ) {
[...]
+	    inode->i_size = pos + write_bytes;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1408: FILE: fs/reiserfs/file.c:1107:
+	} else if ( pos + write_bytes > inode->i_size ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1408: FILE: fs/reiserfs/file.c:1107:
+	} else if ( pos + write_bytes > inode->i_size ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1415: FILE: fs/reiserfs/file.c:1114:
+	/* well, we have allocated the blocks, so it is time to free
+	   the reservation we made earlier. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1415: FILE: fs/reiserfs/file.c:1114:
+	   the reservation we made earlier. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1417: FILE: fs/reiserfs/file.c:1116:
+	if ( res ) {
+	    reiserfs_unprepare_pages(prepared_pages, num_pages);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1417: FILE: fs/reiserfs/file.c:1116:
+	if ( res ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1417: FILE: fs/reiserfs/file.c:1116:
+	if ( res ) {

WARNING:TABSTOP: Statements should start on a tabstop
#1419: FILE: fs/reiserfs/file.c:1118:
+	    break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1423: FILE: fs/reiserfs/file.c:1122:
+/* NOTE that allocating blocks and filling blocks can be done in reverse order
+   and probably we would do that just to get rid of garbage in files after a

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1424: FILE: fs/reiserfs/file.c:1123:
+   crash */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1427: FILE: fs/reiserfs/file.c:1126:
+	res = reiserfs_copy_from_user_to_file_region(pos, num_pages, write_bytes, prepared_pages, buf);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1428: FILE: fs/reiserfs/file.c:1127:
+	if ( res ) {
+	    reiserfs_unprepare_pages(prepared_pages, num_pages);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1428: FILE: fs/reiserfs/file.c:1127:
+	if ( res ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1428: FILE: fs/reiserfs/file.c:1127:
+	if ( res ) {

WARNING:TABSTOP: Statements should start on a tabstop
#1430: FILE: fs/reiserfs/file.c:1129:
+	    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1435: FILE: fs/reiserfs/file.c:1134:
+	if ( res )
+	    break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1435: FILE: fs/reiserfs/file.c:1134:
+	if ( res )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1435: FILE: fs/reiserfs/file.c:1134:
+	if ( res )

WARNING:TABSTOP: Statements should start on a tabstop
#1436: FILE: fs/reiserfs/file.c:1135:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: fs/reiserfs/file.c:1141:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: fs/reiserfs/file.c:1143:
+    if ((file->f_flags & O_SYNC) || IS_SYNC(inode))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1445: FILE: fs/reiserfs/file.c:1144:
+	res = generic_osync_inode(inode, OSYNC_METADATA|OSYNC_DATA);
 	                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: fs/reiserfs/file.c:1146:
+    up(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: fs/reiserfs/file.c:1147:
+    return (already_written != 0)?already_written:res;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1448: FILE: fs/reiserfs/file.c:1147:
+    return (already_written != 0)?already_written:res;
                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1448: FILE: fs/reiserfs/file.c:1147:
+    return (already_written != 0)?already_written:res;
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: fs/reiserfs/file.c:1150:
+    up(&inode->i_sem); // unlock the file on exit.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1452: FILE: fs/reiserfs/file.c:1151:
+    return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: fs/reiserfs/file.c:1156:
+    .write^I= reiserfs_file_write,$

WARNING:TABSTOP: Statements should start on a tabstop
#1479: FILE: fs/reiserfs/inode.c:771:
+	    unp_t unf_single=0; // We use this in case we need to allocate only

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1479: FILE: fs/reiserfs/inode.c:771:
+	    unp_t unf_single=0; // We use this in case we need to allocate only
 	                    ^

WARNING:TABSTOP: Statements should start on a tabstop
#1481: FILE: fs/reiserfs/inode.c:773:
+	    unp_t *un;

WARNING:TABSTOP: Statements should start on a tabstop
#1482: FILE: fs/reiserfs/inode.c:774:
+	    __u64 max_to_insert=MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1482: FILE: fs/reiserfs/inode.c:774:
+	    __u64 max_to_insert=MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1482: FILE: fs/reiserfs/inode.c:774:
+	    __u64 max_to_insert=MAX_ITEM_LEN(inode->i_sb->s_blocksize)/UNFM_P_SIZE;
 	                                                              ^

WARNING:TABSTOP: Statements should start on a tabstop
#1483: FILE: fs/reiserfs/inode.c:775:
+	    __u64 blocks_needed;

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1494: FILE: fs/reiserfs/inode.c:785:
+	    blocks_needed = 1 + ((cpu_key_k_offset (&key) - cpu_key_k_offset (&tmp_key)) >> inode->i_sb->s_blocksize_bits);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1494: FILE: fs/reiserfs/inode.c:785:
+	    blocks_needed = 1 + ((cpu_key_k_offset (&key) - cpu_key_k_offset (&tmp_key)) >> inode->i_sb->s_blocksize_bits);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1494: FILE: fs/reiserfs/inode.c:785:
+	    blocks_needed = 1 + ((cpu_key_k_offset (&key) - cpu_key_k_offset (&tmp_key)) >> inode->i_sb->s_blocksize_bits);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1495: FILE: fs/reiserfs/inode.c:786:
+	    RFALSE( blocks_needed < 0, "green-805: invalid offset");

WARNING:TABSTOP: Statements should start on a tabstop
#1497: FILE: fs/reiserfs/inode.c:788:
+	    if ( blocks_needed == 1 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1497: FILE: fs/reiserfs/inode.c:788:
+	    if ( blocks_needed == 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1497: FILE: fs/reiserfs/inode.c:788:
+	    if ( blocks_needed == 1 ) {

WARNING:TABSTOP: Statements should start on a tabstop
#1499: FILE: fs/reiserfs/inode.c:790:
+	    } else {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1500: FILE: fs/reiserfs/inode.c:791:
+		un=kmalloc( min(blocks_needed,max_to_insert)*UNFM_P_SIZE,
 		  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1500: FILE: fs/reiserfs/inode.c:791:
+		un=kmalloc( min(blocks_needed,max_to_insert)*UNFM_P_SIZE,
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1500: FILE: fs/reiserfs/inode.c:791:
+		un=kmalloc( min(blocks_needed,max_to_insert)*UNFM_P_SIZE,
 		                                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1500: FILE: fs/reiserfs/inode.c:791:
+		un=kmalloc( min(blocks_needed,max_to_insert)*UNFM_P_SIZE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1501: FILE: fs/reiserfs/inode.c:792:
+		un=kmalloc( min(blocks_needed,max_to_insert)*UNFM_P_SIZE,
+			    GFP_ATOMIC); // We need to avoid scheduling.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1502: FILE: fs/reiserfs/inode.c:793:
+		if ( !un) {
+		    un = &unf_single;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1502: FILE: fs/reiserfs/inode.c:793:
+		if ( !un) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1502: FILE: fs/reiserfs/inode.c:793:
+		if ( !un) {
[...]
+		} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1506: FILE: fs/reiserfs/inode.c:797:
+		} else
+		    memset(un, 0, UNFM_P_SIZE * min(blocks_needed,max_to_insert));

CHECK:BRACES: Unbalanced braces around else statement
#1506: FILE: fs/reiserfs/inode.c:797:
+		} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1507: FILE: fs/reiserfs/inode.c:798:
+		    memset(un, 0, UNFM_P_SIZE * min(blocks_needed,max_to_insert));
 		                                                 ^

WARNING:TABSTOP: Statements should start on a tabstop
#1508: FILE: fs/reiserfs/inode.c:799:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#1509: FILE: fs/reiserfs/inode.c:800:
+	    if ( blocks_needed <= max_to_insert) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1509: FILE: fs/reiserfs/inode.c:800:
+	    if ( blocks_needed <= max_to_insert) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1513: FILE: fs/reiserfs/inode.c:803:
+		un[blocks_needed-1] = cpu_to_le32 (allocated_block_nr);
 		                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1520: FILE: fs/reiserfs/inode.c:810:
+		/* If kmalloc failed, max_to_insert becomes zero and it means we
+		   only have space for one block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1520: FILE: fs/reiserfs/inode.c:810:
+		   only have space for one block */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1521: FILE: fs/reiserfs/inode.c:811:
+		blocks_needed=max_to_insert?max_to_insert:1;
 		             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1521: FILE: fs/reiserfs/inode.c:811:
+		blocks_needed=max_to_insert?max_to_insert:1;
 		                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1521: FILE: fs/reiserfs/inode.c:811:
+		blocks_needed=max_to_insert?max_to_insert:1;
 		                                         ^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1524: FILE: fs/reiserfs/inode.c:813:
+	    retval = reiserfs_paste_into_item (&th, &path, &tmp_key, (char *)un, UNFM_P_SIZE * blocks_needed);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1524: FILE: fs/reiserfs/inode.c:813:
+	    retval = reiserfs_paste_into_item (&th, &path, &tmp_key, (char *)un, UNFM_P_SIZE * blocks_needed);

WARNING:TABSTOP: Statements should start on a tabstop
#1526: FILE: fs/reiserfs/inode.c:815:
+	    if (blocks_needed != 1)

WARNING:TABSTOP: Statements should start on a tabstop
#1534: FILE: fs/reiserfs/inode.c:822:
+	    if (done) {

WARNING:TABSTOP: Statements should start on a tabstop
#1536: FILE: fs/reiserfs/inode.c:824:
+	    } else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1538: FILE: fs/reiserfs/inode.c:826:
+		/* We need to mark new file size in case this function will be
+		   interrupted/aborted later on. And we may do this only for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1539: FILE: fs/reiserfs/inode.c:827:
+		   holes. */

WARNING:TABSTOP: Statements should start on a tabstop
#1541: FILE: fs/reiserfs/inode.c:829:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: fs/reiserfs/inode.c:913:
+    inode->i_blksize = reiserfs_default_io_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: fs/reiserfs/inode.c:1604:
+    inode->i_blksize = reiserfs_default_io_size;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1579: FILE: fs/reiserfs/super.c:536:
+int reiserfs_default_io_size = 128 * 1024; /* Default recommended I/O size is 128k.
+					      There might be broken applications that are

ERROR:SPACING: space prohibited after that open parenthesis '('
#1598: FILE: fs/reiserfs/super.c:697:
+	if ( c == 'w' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1598: FILE: fs/reiserfs/super.c:697:
+	if ( c == 'w' ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: fs/reiserfs/super.c:1331:
+    sbi->bitmap_lock = SPIN_LOCK_UNLOCKED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: fs/reiserfs/tail_conversion.c:33:
+    unp_t unfm_ptr;  /* Handle on an unformatted node$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1631: FILE: fs/reiserfs/tail_conversion.c:62:
+    unfm_ptr = cpu_to_le32 (unbh->b_blocknr);$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1651: FILE: include/linux/reiserfs_fs.h:1842:
+void restart_transaction(struct reiserfs_transaction_handle *th, struct inode *inode, struct path *path);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: include/linux/reiserfs_fs_sb.h:400:
+    spinlock_t bitmap_lock; /* this lock on now only used to protect reserved_blocks variable */$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1690: FILE: kernel/ksyms.c:576:
+EXPORT_SYMBOL(remove_suid);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 314 errors, 637 warnings, 94 checks, 1495 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
