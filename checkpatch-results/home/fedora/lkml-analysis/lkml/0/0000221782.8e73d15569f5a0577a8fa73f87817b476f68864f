WARNING:REPEATED_WORD: Possible repeated word: 'and'
#44: 
struct page can be moved to linux/mmzone.h and and asm/mmzone.h should die 

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
--- linux-mm.orig/include/linux/mmzone.h	2004-12-17 12:01:55.000000000 +0100

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#72: FILE: include/linux/mmzone.h:18:
+typedef unsigned page_flags_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#72: FILE: include/linux/mmzone.h:18:
+typedef unsigned page_flags_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#74: FILE: include/linux/mmzone.h:20:
+typedef unsigned long page_flags_t;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#85: FILE: include/linux/mmzone.h:31:
+					 * updated asynchronously */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: include/linux/mmzone.h:65:
+	void *virtual;			/* Kernel virtual address (NULL if
+					   not kmapped, ie. highmem) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#119: FILE: include/linux/mmzone.h:65:
+					   not kmapped, ie. highmem) */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: include/linux/mmzone.h:76:
+	struct mm_struct * vm_mm;	/* The address space we belong to. */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#133: FILE: include/linux/mmzone.h:79:
+	unsigned long vm_end;		/* The first byte after our end address
+					   within vm_mm. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#133: FILE: include/linux/mmzone.h:79:
+					   within vm_mm. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: include/linux/mmzone.h:115:
+	struct vm_operations_struct * vm_ops;

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#169: FILE: include/linux/mmzone.h:115:
+	struct vm_operations_struct * vm_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: include/linux/mmzone.h:119:
+	unsigned long vm_pgoff;		/* Offset (within vm_file) in PAGE_SIZE
+					   units, *not* PAGE_CACHE_SIZE */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#173: FILE: include/linux/mmzone.h:119:
+					   units, *not* PAGE_CACHE_SIZE */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: include/linux/mmzone.h:120:
+	struct file * vm_file;		/* File we map to (can be NULL). */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: include/linux/mmzone.h:121:
+	void * vm_private_data;		/* was vm_pte (shared mem) */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#226: FILE: include/linux/mmzone.h:172:
+#define VM_ClearReadHint(v)		(v)->vm_flags &= ~VM_READHINTMASK

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#290: FILE: include/linux/mmzone.h:444:
+#define NODEZONE_SHIFT (sizeof(page_flags_t)*8 - MAX_NODES_SHIFT - MAX_ZONES_SHIFT)
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'node' may be better as '(node)' to avoid precedence issues
#291: FILE: include/linux/mmzone.h:445:
+#define NODEZONE(node, zone)	((node << ZONES_SHIFT) | zone)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone' may be better as '(zone)' to avoid precedence issues
#291: FILE: include/linux/mmzone.h:445:
+#define NODEZONE(node, zone)	((node << ZONES_SHIFT) | zone)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#297: FILE: include/linux/mmzone.h:451:
+}
+static inline unsigned long page_to_nid(struct page *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#369: +++ linux-mm/include/asm/mmzone.h	2004-12-20 21:36:42.708848071 +0100

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#409: +++ linux-mm/include/asm/pgtable.h	2004-12-20 21:36:42.717846519 +0100

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#420: FILE: include/asm/pgtable.h:34:
+}
+static inline unsigned long page_to_pfn(struct page *page)

WARNING:LINE_SPACING: Missing a blank line after declarations
#432: FILE: include/asm/pgtable.h:46:
+	int node = pfn_to_nid(pfn);
+	return &node_mem_map(node)[node_localnr(pfn, node)];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#434: FILE: include/asm/pgtable.h:48:
+}
+static inline unsigned long page_to_pfn(struct page *page)

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: include/asm/pgtable.h:51:
+	struct zone *zone = page_zone(page);
+	return zone->zone_start_pfn + (page - zone->zone_mem_map);

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#681: +++ linux-mm/include/asm/page.h	2004-12-20 21:36:42.718846346 +0100

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221782.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 6 checks, 608 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221782.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
