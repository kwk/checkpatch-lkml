WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
while doing this patch (which could only be a workaround for some strange bug,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: arch/um/sys-x86_64/syscalls.c:25:
+asmlinkage long sys_uname64(struct new_utsname __user * name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: arch/um/sys-x86_64/syscalls.c:28:
+	int err;
+	down_read(&uts_sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: arch/um/sys-x86_64/syscalls.c:29:
+	err = copy_to_user(name, &system_utsname, sizeof (*name));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#422: FILE: arch/um/sys-x86_64/syscall_table.c:1:
+/* System call table for UML/x86-64, copied from arch/x86_64/kernel/syscall.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#423: FILE: arch/um/sys-x86_64/syscall_table.c:2:
+ * with some changes for UML. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: arch/um/sys-x86_64/syscall_table.c:12:
+ * and the UML syscall table. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: arch/um/sys-x86_64/syscall_table.c:19:
+ * is needed only for the ia32 compatibility. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#442: FILE: arch/um/sys-x86_64/syscall_table.c:21:
+/*#define sys_set_thread_area sys_ni_syscall
+#define sys_get_thread_area sys_ni_syscall*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#442: FILE: arch/um/sys-x86_64/syscall_table.c:21:
+#define sys_get_thread_area sys_ni_syscall*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#446: FILE: arch/um/sys-x86_64/syscall_table.c:25:
+ * this. Remove below the obsoleted line. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#453: FILE: arch/um/sys-x86_64/syscall_table.c:32:
+ * See arch/x86_64/kernel/sys_x86_64.c */

CHECK:SPACING: No space is necessary after a cast
#464: FILE: arch/um/sys-x86_64/syscall_table.c:43:
+#define __SYSCALL(nr, sym) extern asmlinkage void sym(void) ;

WARNING:SPACING: space prohibited before semicolon
#464: FILE: arch/um/sys-x86_64/syscall_table.c:43:
+#define __SYSCALL(nr, sym) extern asmlinkage void sym(void) ;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#464: FILE: arch/um/sys-x86_64/syscall_table.c:43:
+#define __SYSCALL(nr, sym) extern asmlinkage void sym(void) ;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#469: FILE: arch/um/sys-x86_64/syscall_table.c:48:
+#define __SYSCALL(nr, sym) [ nr ] = sym,

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space prohibited after that open square bracket '['
#469: FILE: arch/um/sys-x86_64/syscall_table.c:48:
+#define __SYSCALL(nr, sym) [ nr ] = sym,

ERROR:SPACING: space prohibited before that close square bracket ']'
#469: FILE: arch/um/sys-x86_64/syscall_table.c:48:
+#define __SYSCALL(nr, sym) [ nr ] = sym,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#474: FILE: arch/um/sys-x86_64/syscall_table.c:53:
+extern void sys_ni_syscall(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#476: FILE: arch/um/sys-x86_64/syscall_table.c:55:
+sys_call_ptr_t sys_call_table[__NR_syscall_max+1] __cacheline_aligned = {
                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 2 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
