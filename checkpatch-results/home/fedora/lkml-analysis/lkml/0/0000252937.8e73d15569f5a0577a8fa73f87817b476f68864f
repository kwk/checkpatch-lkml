WARNING:TYPO_SPELLING: 'unuseful' may be misspelled - perhaps 'useless'?
#32: 
But if data blocks was fragmenting, unfortunately this cache is unuseful.
                                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#98: FILE: fs/fat/cache.c:15:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: fs/fat/cache.c:16:
+#define debug_pr(fmt, args...)	printk(fmt, ##args)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#125: FILE: fs/fat/cache.c:42:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) ==
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/fat/cache.c:50:
+	fat_cache_cachep = kmem_cache_create("fat_cache",
+				sizeof(struct fat_cache),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fat_cache_cachep"
#136: FILE: fs/fat/cache.c:53:
+	if (fat_cache_cachep == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#144: FILE: fs/fat/cache.c:61:
+		printk(KERN_INFO "fat_cache: not all structures were freed\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#154: FILE: fs/fat/cache.c:71:
+	BUG_ON(!list_empty(&cache->cache_list));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#176: FILE: fs/fat/cache.c:93:
+	debug_pr("FAT: %s, fclus %d", __FUNCTION__, fclus);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#211: FILE: fs/fat/cache.c:128:
+			BUG_ON(p->dcluster != new->dcluster);

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: fs/fat/cache.c:130:
+			debug_pr("FAT: %s: merged fclus %d, dclus %d, "
+				 "cur cont %d => new cont %d\n", __FUNCTION__,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: fs/fat/cache.c:130:
+				 "cur cont %d => new cont %d\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#230: FILE: fs/fat/cache.c:147:
+	debug_pr("FAT: %s: fclus %d, dclus %d, cont %d\n", __FUNCTION__,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cache"
#238: FILE: fs/fat/cache.c:155:
+	if (cache == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cache"
#246: FILE: fs/fat/cache.c:163:
+			if (cache != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: fs/fat/cache.c:171:
+			struct list_head *p = MSDOS_I(inode)->cache_lru.prev;
+			cache = list_entry(p, struct fat_cache, cache_list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: fs/fat/cache.c:183:
+		debug_pr("(fclus %d, dclus %d, cont %d), ",
+		       cache->fcluster, cache->dcluster, cache->nr_contig);

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: fs/fat/cache.c:197:
+	struct fat_cache *cache;
+	while (!list_empty(&i->cache_lru)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#286: FILE: fs/fat/cache.c:203:
+	debug_pr("FAT: %s\n", __FUNCTION__);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#514: FILE: fs/fat/fatfs_syms.c:36:
+int __init fat_cache_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#515: FILE: fs/fat/fatfs_syms.c:37:
+void __exit fat_cache_destroy(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 15 warnings, 6 checks, 511 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
