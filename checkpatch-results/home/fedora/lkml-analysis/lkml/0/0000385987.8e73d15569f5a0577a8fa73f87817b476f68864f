WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
 drivers/i2c/busses/i2c-i801.c |  710 ++++++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/drivers/i2c/busses/Kconfig	Thu Mar 13 16:57:50 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: drivers/i2c/busses/Kconfig:69:
+^I  This can also be built as a module which can be inserted and removed $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#61: FILE: drivers/i2c/busses/Kconfig:75:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: drivers/i2c/busses/Kconfig:76:
+^I  in the lm_sensors package, which you can download at $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/i2c/busses/i2c-i801.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: drivers/i2c/busses/i2c-i801.c:2:
+/*
+    i801.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/i2c/busses/i2c-i801.c:3:
+              monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/busses/i2c-i801.c:19:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/i2c/busses/i2c-i801.c:20:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#102: FILE: drivers/i2c/busses/i2c-i801.c:24:
+/*
+    SUPPORTED DEVICES	PCI ID

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: drivers/i2c/busses/i2c-i801.c:25:
+    82801AA^I^I2413           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/i2c/busses/i2c-i801.c:26:
+    82801AB^I^I2423           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/i2c/busses/i2c-i801.c:27:
+    82801BA^I^I2443           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: drivers/i2c/busses/i2c-i801.c:28:
+    82801CA/CAM^I^I2483           $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#128: FILE: drivers/i2c/busses/i2c-i801.c:50:
+#include <asm/io.h>

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/i2c/busses/i2c-i801.c:67:
+                          PCI_DEVICE_ID_INTEL_82801AB_3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/i2c/busses/i2c-i801.c:67:
+                          PCI_DEVICE_ID_INTEL_82801AB_3,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/i2c/busses/i2c-i801.c:68:
+                          PCI_DEVICE_ID_INTEL_82801BA_2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/i2c/busses/i2c-i801.c:68:
+                          PCI_DEVICE_ID_INTEL_82801BA_2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/i2c/busses/i2c-i801.c:71:
+                          0 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/i2c/busses/i2c-i801.c:71:
+                          0 };$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: drivers/i2c/busses/i2c-i801.c:115:
+/* If force_addr is set to anything different from 0, we forcibly enable
+   the I801 at the given address. VERY DANGEROUS! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: drivers/i2c/busses/i2c-i801.c:115:
+   the I801 at the given address. VERY DANGEROUS! */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#194: FILE: drivers/i2c/busses/i2c-i801.c:116:
+static int force_addr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPLIT_STRING: quoted string split across lines
#198: FILE: drivers/i2c/busses/i2c-i801.c:120:
+		 "Forcibly enable the I801 at the given address. "
+		 "EXTREMELY DANGEROUS!");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: drivers/i2c/busses/i2c-i801.c:122:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: drivers/i2c/busses/i2c-i801.c:124:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/i2c/busses/i2c-i801.c:131:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: drivers/i2c/busses/i2c-i801.c:133:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#212: FILE: drivers/i2c/busses/i2c-i801.c:134:
+static unsigned short i801_smba = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#213: FILE: drivers/i2c/busses/i2c-i801.c:135:
+static struct pci_dev *I801_dev = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#214: FILE: drivers/i2c/busses/i2c-i801.c:136:
+static int isich4 = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#217: FILE: drivers/i2c/busses/i2c-i801.c:139:
+/* Detect whether a I801 can be found, and initialize it, where necessary.
+   Note the differences between kernels with the old PCI BIOS interface and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: drivers/i2c/busses/i2c-i801.c:141:
+   defined to make the transition easier. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#228: FILE: drivers/i2c/busses/i2c-i801.c:150:
+		printk(KERN_WARNING "i2c-i801.o: Error: No PCI-bus found!\n");

ERROR:SPACING: space required before the open parenthesis '('
#237: FILE: drivers/i2c/busses/i2c-i801.c:159:
+		if((I801_dev = pci_find_device(PCI_VENDOR_ID_INTEL,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#237: FILE: drivers/i2c/busses/i2c-i801.c:159:
+		if((I801_dev = pci_find_device(PCI_VENDOR_ID_INTEL,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/i2c/busses/i2c-i801.c:160:
+		if((I801_dev = pci_find_device(PCI_VENDOR_ID_INTEL,
+					      *num, I801_dev))) {

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: drivers/i2c/busses/i2c-i801.c:161:
+			if(PCI_FUNC(I801_dev->devfn) != 3)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!I801_dev"
#246: FILE: drivers/i2c/busses/i2c-i801.c:168:
+	if (I801_dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#260: FILE: drivers/i2c/busses/i2c-i801.c:182:
+		if(i801_smba == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: drivers/i2c/busses/i2c-i801.c:183:
+			printk(KERN_ERR "i2c-i801.o: SMB base address uninitialized - upgrade BIOS or use force_addr=0xaddr\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#278: FILE: drivers/i2c/busses/i2c-i801.c:200:
+/* If force_addr is set, we program the new address here. Just to make
+   sure, we disable the device first. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#278: FILE: drivers/i2c/busses/i2c-i801.c:200:
+   sure, we disable the device first. */

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: drivers/i2c/busses/i2c-i801.c:207:
+		    (KERN_WARNING "i2c-i801.o: WARNING: I801 SMBus interface set to new "
+		     "address %04x!\n", i801_smba);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#288: FILE: drivers/i2c/busses/i2c-i801.c:210:
+		printk(KERN_WARNING "i2c-i801.o: enabling SMBus device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#302: FILE: drivers/i2c/busses/i2c-i801.c:224:
+	printk(KERN_DEBUG "i2c-i801.o: SMBREV = 0x%X\n", temp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#303: FILE: drivers/i2c/busses/i2c-i801.c:225:
+	printk(KERN_DEBUG "i2c-i801.o: I801_smba = 0x%X\n", i801_smba);

WARNING:INDENTED_LABEL: labels should not be indented
#306: FILE: drivers/i2c/busses/i2c-i801.c:228:
+      END:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#310: FILE: drivers/i2c/busses/i2c-i801.c:232:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#326: FILE: drivers/i2c/busses/i2c-i801.c:248:
+	    (KERN_DEBUG "i2c-i801.o: Transaction (pre): CNT=%02x, CMD=%02x, ADD=%02x, DAT0=%02x, "
+	     "DAT1=%02x\n", inb_p(SMBHSTCNT), inb_p(SMBHSTCMD),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#332: FILE: drivers/i2c/busses/i2c-i801.c:254:
+	if ((temp = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#334: FILE: drivers/i2c/busses/i2c-i801.c:256:
+		printk(KERN_DEBUG "i2c-i801.o: SMBus busy (%02x). Resetting... \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#334: FILE: drivers/i2c/busses/i2c-i801.c:256:
+		printk(KERN_DEBUG "i2c-i801.o: SMBus busy (%02x). Resetting... \n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: drivers/i2c/busses/i2c-i801.c:260:
+		if ((temp = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#340: FILE: drivers/i2c/busses/i2c-i801.c:262:
+			printk(KERN_DEBUG "i2c-i801.o: Failed! (%02x)\n", temp);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#343: FILE: drivers/i2c/busses/i2c-i801.c:265:
+			return -1;
+		} else {

WARNING:TYPO_SPELLING: 'Successfull' may be misspelled - perhaps 'Successful'?
#345: FILE: drivers/i2c/busses/i2c-i801.c:267:
+			printk(KERN_DEBUG "i2c-i801.o: Successfull!\n");
 			                               ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#345: FILE: drivers/i2c/busses/i2c-i801.c:267:
+			printk(KERN_DEBUG "i2c-i801.o: Successfull!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#361: FILE: drivers/i2c/busses/i2c-i801.c:283:
+		printk(KERN_DEBUG "i2c-i801.o: SMBus Timeout!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#369: FILE: drivers/i2c/busses/i2c-i801.c:291:
+		printk(KERN_DEBUG "i2c-i801.o: Error: Failed bus transaction\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#384: FILE: drivers/i2c/busses/i2c-i801.c:306:
+		printk(KERN_DEBUG "i2c-i801.o: Error: no response!\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#391: FILE: drivers/i2c/busses/i2c-i801.c:313:
+	if ((temp = (0x1f & inb_p(SMBHSTSTS))) != 0x00) {

WARNING:SPLIT_STRING: quoted string split across lines
#401: FILE: drivers/i2c/busses/i2c-i801.c:323:
+	    (KERN_DEBUG "i2c-i801.o: Transaction (post): CNT=%02x, CMD=%02x, ADD=%02x, "
+	     "DAT0=%02x, DAT1=%02x\n", inb_p(SMBHSTCNT), inb_p(SMBHSTCMD),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/i2c/busses/i2c-i801.c:330:
+int i801_block_transaction(union i2c_smbus_data *data, char read_write, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/i2c/busses/i2c-i801.c:331:
+                           int command)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/i2c/busses/i2c-i801.c:331:
+                           int command)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/i2c/busses/i2c-i801.c:338:
+        unsigned char hostc, errmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/i2c/busses/i2c-i801.c:338:
+        unsigned char hostc, errmask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/i2c/busses/i2c-i801.c:340:
+        if (command == I2C_SMBUS_I2C_BLOCK_DATA) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/i2c/busses/i2c-i801.c:340:
+        if (command == I2C_SMBUS_I2C_BLOCK_DATA) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: drivers/i2c/busses/i2c-i801.c:341:
+                if (read_write == I2C_SMBUS_WRITE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/i2c/busses/i2c-i801.c:341:
+                if (read_write == I2C_SMBUS_WRITE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: drivers/i2c/busses/i2c-i801.c:342:
+                        /* set I2C_EN bit in configuration register */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: drivers/i2c/busses/i2c-i801.c:343:
+                        pci_read_config_byte(I801_dev, SMBHSTCFG, &hostc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/i2c/busses/i2c-i801.c:343:
+                        pci_read_config_byte(I801_dev, SMBHSTCFG, &hostc);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/i2c/busses/i2c-i801.c:344:
+                        pci_write_config_byte(I801_dev, SMBHSTCFG, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/i2c/busses/i2c-i801.c:344:
+                        pci_write_config_byte(I801_dev, SMBHSTCFG, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/i2c/busses/i2c-i801.c:344:
+                        pci_write_config_byte(I801_dev, SMBHSTCFG, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/i2c/busses/i2c-i801.c:345:
+                                              hostc | SMBHSTCFG_I2C_EN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/i2c/busses/i2c-i801.c:345:
+                                              hostc | SMBHSTCFG_I2C_EN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: drivers/i2c/busses/i2c-i801.c:346:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/i2c/busses/i2c-i801.c:346:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: drivers/i2c/busses/i2c-i801.c:347:
+                        printk("i2c-i801.o: "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/i2c/busses/i2c-i801.c:347:
+                        printk("i2c-i801.o: "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: drivers/i2c/busses/i2c-i801.c:347:
+                        printk("i2c-i801.o: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/i2c/busses/i2c-i801.c:348:
+                               "I2C_SMBUS_I2C_BLOCK_READ not supported!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/i2c/busses/i2c-i801.c:348:
+                               "I2C_SMBUS_I2C_BLOCK_READ not supported!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#426: FILE: drivers/i2c/busses/i2c-i801.c:348:
+                        printk("i2c-i801.o: "
+                               "I2C_SMBUS_I2C_BLOCK_READ not supported!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: drivers/i2c/busses/i2c-i801.c:349:
+                        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: drivers/i2c/busses/i2c-i801.c:349:
+                        return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/i2c/busses/i2c-i801.c:350:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/i2c/busses/i2c-i801.c:350:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/i2c/busses/i2c-i801.c:351:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/i2c/busses/i2c-i801.c:351:
+        }$

ERROR:SPACING: space required before the open parenthesis '('
#443: FILE: drivers/i2c/busses/i2c-i801.c:365:
+	if(isich4 && command != I2C_SMBUS_I2C_BLOCK_DATA) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#443: FILE: drivers/i2c/busses/i2c-i801.c:365:
+	if(isich4 && command != I2C_SMBUS_I2C_BLOCK_DATA) {
+		/* set 32 byte buffer */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#452: FILE: drivers/i2c/busses/i2c-i801.c:374:
+#if 0 /* now using HW PEC */

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: drivers/i2c/busses/i2c-i801.c:375:
+		if(isich4 && command == I2C_SMBUS_BLOCK_DATA_PEC)

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: drivers/i2c/busses/i2c-i801.c:383:
+		    (KERN_DEBUG "i2c-i801.o: Block (pre %d): CNT=%02x, CMD=%02x, ADD=%02x, "
+		     "DAT0=%02x, BLKDAT=%02x\n", i, inb_p(SMBHSTCNT),

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: drivers/i2c/busses/i2c-i801.c:390:
+                if (i == 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/i2c/busses/i2c-i801.c:390:
+                if (i == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#468: FILE: drivers/i2c/busses/i2c-i801.c:390:
+                if (i == 1) {
[...]
+                    errmask=0x9f; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: drivers/i2c/busses/i2c-i801.c:391:
+                    /* Erronenous conditions before transaction: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: drivers/i2c/busses/i2c-i801.c:391:
+                    /* Erronenous conditions before transaction: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/i2c/busses/i2c-i801.c:392:
+                     * Byte_Done, Failed, Bus_Err, Dev_Err, Intr, Host_Busy */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#470: FILE: drivers/i2c/busses/i2c-i801.c:392:
+                     * Byte_Done, Failed, Bus_Err, Dev_Err, Intr, Host_Busy */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/i2c/busses/i2c-i801.c:393:
+                    errmask=0x9f; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: drivers/i2c/busses/i2c-i801.c:393:
+                    errmask=0x9f; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/i2c/busses/i2c-i801.c:393:
+                    errmask=0x9f; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#471: FILE: drivers/i2c/busses/i2c-i801.c:393:
+                    errmask=0x9f; 
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: drivers/i2c/busses/i2c-i801.c:394:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/i2c/busses/i2c-i801.c:394:
+                } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#472: FILE: drivers/i2c/busses/i2c-i801.c:394:
+                } else {
[...]
+                    errmask=0x1e; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/i2c/busses/i2c-i801.c:395:
+                    /* Erronenous conditions during transaction: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: drivers/i2c/busses/i2c-i801.c:395:
+                    /* Erronenous conditions during transaction: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: drivers/i2c/busses/i2c-i801.c:396:
+                     * Failed, Bus_Err, Dev_Err, Intr */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#474: FILE: drivers/i2c/busses/i2c-i801.c:396:
+                     * Failed, Bus_Err, Dev_Err, Intr */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: drivers/i2c/busses/i2c-i801.c:397:
+                    errmask=0x1e; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/i2c/busses/i2c-i801.c:397:
+                    errmask=0x1e; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/i2c/busses/i2c-i801.c:397:
+                    errmask=0x1e; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#475: FILE: drivers/i2c/busses/i2c-i801.c:397:
+                    errmask=0x1e; 
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/i2c/busses/i2c-i801.c:398:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/i2c/busses/i2c-i801.c:398:
+                }$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#480: FILE: drivers/i2c/busses/i2c-i801.c:402:
+			    (KERN_DEBUG "i2c-i801.o: SMBus busy (%02x). Resetting... \n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#484: FILE: drivers/i2c/busses/i2c-i801.c:406:
+			if (((temp = inb_p(SMBHSTSTS)) & errmask) != 0x00) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/i2c/busses/i2c-i801.c:411:
+                                goto END;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/i2c/busses/i2c-i801.c:411:
+                                goto END;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: drivers/i2c/busses/i2c-i801.c:414:
+                                result = -1;  /* if die in middle of block transaction, fail */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/i2c/busses/i2c-i801.c:414:
+                                result = -1;  /* if die in middle of block transaction, fail */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/i2c/busses/i2c-i801.c:415:
+                                goto END;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/i2c/busses/i2c-i801.c:415:
+                                goto END;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/i2c/busses/i2c-i801.c:416:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/i2c/busses/i2c-i801.c:416:
+                        }$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#498: FILE: drivers/i2c/busses/i2c-i801.c:420:
+#if 0 /* #ifdef HAVE_PEC (now using HW PEC) */

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: drivers/i2c/busses/i2c-i801.c:421:
+			if(isich4 && command == I2C_SMBUS_BLOCK_DATA_PEC) {

ERROR:SPACING: space required before the open parenthesis '('
#500: FILE: drivers/i2c/busses/i2c-i801.c:422:
+				if(read_write == I2C_SMBUS_WRITE)

WARNING:TABSTOP: Statements should start on a tabstop
#513: FILE: drivers/i2c/busses/i2c-i801.c:435:
+		    while ((!(temp & 0x80))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#514: FILE: drivers/i2c/busses/i2c-i801.c:436:
+		    while ((!(temp & 0x80))
+			   && (timeout++ < MAX_TIMEOUT));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#520: FILE: drivers/i2c/busses/i2c-i801.c:442:
+			printk(KERN_DEBUG "i2c-i801.o: SMBus Timeout!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#532: FILE: drivers/i2c/busses/i2c-i801.c:454:
+			printk(KERN_ERR "i2c-i801.o: Bus collision!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#536: FILE: drivers/i2c/busses/i2c-i801.c:458:
+			printk(KERN_DEBUG "i2c-i801.o: Error: no response!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: drivers/i2c/busses/i2c-i801.c:471:
+                /* Retrieve/store value in SMBBLKDAT */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#552: FILE: drivers/i2c/busses/i2c-i801.c:474:
+		if (read_write == I2C_SMBUS_WRITE && i+1 <= len)
 		                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#553: FILE: drivers/i2c/busses/i2c-i801.c:475:
+			outb_p(data->block[i+1], SMBBLKDAT);
 			                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#558: FILE: drivers/i2c/busses/i2c-i801.c:480:
+		if ((temp = (0x1e & inb_p(SMBHSTSTS))) != 0x00) {

WARNING:SPLIT_STRING: quoted string split across lines
#565: FILE: drivers/i2c/busses/i2c-i801.c:487:
+		    (KERN_DEBUG "i2c-i801.o: Block (post %d): CNT=%02x, CMD=%02x, ADD=%02x, "
+		     "DAT0=%02x, BLKDAT=%02x\n", i, inb_p(SMBHSTCNT),

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: drivers/i2c/busses/i2c-i801.c:497:
+	if(isich4 && command == I2C_SMBUS_BLOCK_DATA_PEC) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/i2c/busses/i2c-i801.c:504:
+		} while ((!(temp & 0x02))
+			   && (timeout++ < MAX_TIMEOUT));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#584: FILE: drivers/i2c/busses/i2c-i801.c:506:
+		if (timeout >= MAX_TIMEOUT) {
+			printk(KERN_DEBUG "i2c-i801.o: PEC Timeout!\n");
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#585: FILE: drivers/i2c/busses/i2c-i801.c:507:
+			printk(KERN_DEBUG "i2c-i801.o: PEC Timeout!\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#587: FILE: drivers/i2c/busses/i2c-i801.c:509:
+#if 0 /* now using HW PEC */

ERROR:SPACING: space required before the open parenthesis '('
#588: FILE: drivers/i2c/busses/i2c-i801.c:510:
+		if(read_write == I2C_SMBUS_READ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#588: FILE: drivers/i2c/busses/i2c-i801.c:510:
+		if(read_write == I2C_SMBUS_READ) {
+			data->block[len + 1] = inb_p(SMBPEC);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: drivers/i2c/busses/i2c-i801.c:514:
+^I^Ioutb_p(temp, SMBHSTSTS); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: drivers/i2c/busses/i2c-i801.c:517:
+        result = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/i2c/busses/i2c-i801.c:517:
+        result = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: drivers/i2c/busses/i2c-i801.c:519:
+        if (command == I2C_SMBUS_I2C_BLOCK_DATA) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/i2c/busses/i2c-i801.c:519:
+        if (command == I2C_SMBUS_I2C_BLOCK_DATA) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: drivers/i2c/busses/i2c-i801.c:520:
+                /* restore saved configuration register value */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: drivers/i2c/busses/i2c-i801.c:522:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/i2c/busses/i2c-i801.c:522:
+        }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: drivers/i2c/busses/i2c-i801.c:527:
+s32 i801_access(struct i2c_adapter * adap, u16 addr, unsigned short flags,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#607: FILE: drivers/i2c/busses/i2c-i801.c:529:
+		union i2c_smbus_data * data)

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: drivers/i2c/busses/i2c-i801.c:536:
+	if(isich4)

ERROR:SPACING: space required before the open parenthesis '('
#653: FILE: drivers/i2c/busses/i2c-i801.c:575:
+		if(hwpec && size == I2C_SMBUS_BLOCK_DATA)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#663: FILE: drivers/i2c/busses/i2c-i801.c:585:
+		printk(KERN_ERR "i2c-i801.o: Unsupported transaction %d\n", size);

ERROR:SPACING: space required before the open parenthesis '('
#668: FILE: drivers/i2c/busses/i2c-i801.c:590:
+	if(isich4 && hwpec) {

ERROR:SPACING: space required before the open parenthesis '('
#669: FILE: drivers/i2c/busses/i2c-i801.c:591:
+		if(size != I2C_SMBUS_QUICK &&

ERROR:SPACING: space required before the open parenthesis '('
#674: FILE: drivers/i2c/busses/i2c-i801.c:596:
+	if(block)

CHECK:BRACES: braces {} should be used on all arms of this statement
#674: FILE: drivers/i2c/busses/i2c-i801.c:596:
+	if(block)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#676: FILE: drivers/i2c/busses/i2c-i801.c:598:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#682: FILE: drivers/i2c/busses/i2c-i801.c:604:
+	if(isich4 && hwpec) {

ERROR:SPACING: space required before the open parenthesis '('
#683: FILE: drivers/i2c/busses/i2c-i801.c:605:
+		if(size != I2C_SMBUS_QUICK &&

ERROR:SPACING: space required before the open parenthesis '('
#689: FILE: drivers/i2c/busses/i2c-i801.c:611:
+	if(block)

ERROR:SPACING: space required before the open parenthesis '('
#691: FILE: drivers/i2c/busses/i2c-i801.c:613:
+	if(ret)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'read_write == I2C_SMBUS_WRITE'
#693: FILE: drivers/i2c/busses/i2c-i801.c:615:
+	if ((read_write == I2C_SMBUS_WRITE) || (xact == I801_QUICK))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'xact == I801_QUICK'
#693: FILE: drivers/i2c/busses/i2c-i801.c:615:
+	if ((read_write == I2C_SMBUS_WRITE) || (xact == I801_QUICK))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: drivers/i2c/busses/i2c-i801.c:630:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/i2c/busses/i2c-i801.c:638:
+^I                 I2C_FUNC_SMBUS_HWPEC_CALC$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/i2c/busses/i2c-i801.c:639:
+^I               : 0)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#736: FILE: drivers/i2c/busses/i2c-i801.c:658:
+
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#738: FILE: drivers/i2c/busses/i2c-i801.c:660:
+static struct pci_device_id i801_ids[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#742: FILE: drivers/i2c/busses/i2c-i801.c:664:
+static int __devinit i801_probe(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#744: FILE: drivers/i2c/busses/i2c-i801.c:666:
+{
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#756: FILE: drivers/i2c/busses/i2c-i801.c:678:
+static void __devexit i801_remove(struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#770: FILE: drivers/i2c/busses/i2c-i801.c:692:
+	printk(KERN_INFO "i2c-i801.o version %s (%s)\n", I2C_VERSION, I2C_DATE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#774: FILE: drivers/i2c/busses/i2c-i801.c:696:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#781: FILE: drivers/i2c/busses/i2c-i801.c:703:
+
+

WARNING:LONG_LINE_STRING: line length of 125 exceeds 100 columns
#784: FILE: drivers/i2c/busses/i2c-i801.c:706:
+    ("Frodo Looijaard <frodol@dds.nl>, Philip Edelbrock <phil@netroedge.com>, and Mark D. Studebaker <mdsxyz123@yahoo.com>");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/i2c/busses/i2c-i801.c:706:
+    ("Frodo Looijaard <frodol@dds.nl>, Philip Edelbrock <phil@netroedge.com>, and Mark D. Studebaker <mdsxyz123@yahoo.com>");$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000385987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 86 errors, 86 warnings, 20 checks, 742 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000385987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
