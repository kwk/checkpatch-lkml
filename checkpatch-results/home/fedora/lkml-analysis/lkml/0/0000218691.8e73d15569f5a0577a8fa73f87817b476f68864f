WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#   2005/01/03 20:13:18-08:00 jack@suse.cz 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#   [PATCH] Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#   Implement quota journaling and quota reading and writing functions for

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
#   reiserfs.  Solves also several other deadlocks possible for reiserfs due to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#   reiserfs.  Solves also several other deadlocks possible for reiserfs due to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#   the lock inversion on journal_begin and quota locks.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#   From: Vladimir Saveliev <vs@namesys.com>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#   When CONFIG_QUOTA is defined reiserfs's finish_unfinished sets and clears

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#   MS_ACTIVE bit in s_flags field of super block.  If that bit was set already

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#   it should not be set.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#   Signed-off-by: Jan Kara <jack@suse.cz>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#   Signed-off-by: Andrew Morton <akpm@osdl.org>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# include/linux/reiserfs_fs_sb.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +4 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# include/linux/reiserfs_fs.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +16 -0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# fs/reiserfs/super.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +410 -5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# fs/reiserfs/namei.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +27 -33

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# fs/reiserfs/inode.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +37 -17

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# fs/reiserfs/file.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#   2005/01/03 15:49:13-08:00 jack@suse.cz +3 -3

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#   Fix of quota deadlock on pagelock: reiserfs

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#85: 
--- a/fs/reiserfs/file.c	2005-01-05 11:01:19 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#101: FILE: fs/reiserfs/file.c:204:
+    res = journal_begin(th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS); // Wish I know if this number enough

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/reiserfs/file.c:204:
+    res = journal_begin(th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS); // Wish I know if this number enough$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#110: FILE: fs/reiserfs/file.c:579:
+        err = journal_end(th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS);

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/reiserfs/file.c:579:
+        err = journal_end(th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/reiserfs/file.c:579:
+        err = journal_end(th, inode->i_sb, JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/reiserfs/inode.c:29:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 * REISERFS_QUOTA_INIT_BLOCKS;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: fs/reiserfs/inode.c:53:
+	 * stat data deletion */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: fs/reiserfs/inode.c:591:
+       quota update for user, group */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/reiserfs/inode.c:592:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 1 + 2 * REISERFS_QUOTA_TRANS_BLOCKS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/reiserfs/inode.c:1698:
+    if (DQUOT_ALLOC_INODE(inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/reiserfs/inode.c:1701:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: fs/reiserfs/inode.c:1873:
+    journal_end(th, th->t_super, th->t_blocks_allocated) ;$

WARNING:SPACING: space prohibited before semicolon
#192: FILE: fs/reiserfs/inode.c:1873:
+    journal_end(th, th->t_super, th->t_blocks_allocated) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: fs/reiserfs/inode.c:2802:
+                if (!error) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: fs/reiserfs/inode.c:2802:
+                if (!error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#202: FILE: fs/reiserfs/inode.c:2802:
+                if (!error) {
+		    struct reiserfs_transaction_handle th;

WARNING:TABSTOP: Statements should start on a tabstop
#203: FILE: fs/reiserfs/inode.c:2803:
+		    struct reiserfs_transaction_handle th;

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#205: FILE: fs/reiserfs/inode.c:2805:
+		    /* (user+group)*(old+new) structure - we count quota info and , inode write (sb, inode) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#206: FILE: fs/reiserfs/inode.c:2806:
+		    journal_begin(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#206: FILE: fs/reiserfs/inode.c:2806:
+		    journal_begin(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 		                                                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#208: FILE: fs/reiserfs/inode.c:2808:
+		    if (error) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#209: FILE: fs/reiserfs/inode.c:2809:
+			journal_end(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#209: FILE: fs/reiserfs/inode.c:2809:
+			journal_end(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 			                                                          ^

WARNING:TABSTOP: Statements should start on a tabstop
#211: FILE: fs/reiserfs/inode.c:2811:
+		    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: fs/reiserfs/inode.c:2813:
+		     * one transaction */

WARNING:TABSTOP: Statements should start on a tabstop
#214: FILE: fs/reiserfs/inode.c:2814:
+		    if (attr->ia_valid & ATTR_UID)

WARNING:TABSTOP: Statements should start on a tabstop
#216: FILE: fs/reiserfs/inode.c:2816:
+		    if (attr->ia_valid & ATTR_GID)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: fs/reiserfs/inode.c:2819:
+		    journal_end(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#219: FILE: fs/reiserfs/inode.c:2819:
+		    journal_end(&th, inode->i_sb, 4*REISERFS_QUOTA_INIT_BLOCKS+2);
 		                                                              ^

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#266: FILE: fs/reiserfs/namei.c:588:
+    /* We need blocks for transaction + (user+group)*(quotas for new inode + update of quota for directory owner) */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#267: FILE: fs/reiserfs/namei.c:589:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: fs/reiserfs/namei.c:589:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#267: FILE: fs/reiserfs/namei.c:589:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: fs/reiserfs/namei.c:596:
+    new_inode_init(inode, dir, mode);$

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#286: FILE: fs/reiserfs/namei.c:655:
+    /* We need blocks for transaction + (user+group)*(quotas for new inode + update of quota for directory owner) */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#287: FILE: fs/reiserfs/namei.c:656:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/reiserfs/namei.c:656:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: fs/reiserfs/namei.c:656:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/reiserfs/namei.c:665:
+    new_inode_init(inode, dir, mode);$

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#307: FILE: fs/reiserfs/namei.c:729:
+    /* We need blocks for transaction + (user+group)*(quotas for new inode + update of quota for directory owner) */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#308: FILE: fs/reiserfs/namei.c:730:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: fs/reiserfs/namei.c:730:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#308: FILE: fs/reiserfs/namei.c:730:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: fs/reiserfs/namei.c:741:
+    new_inode_init(inode, dir, mode);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: fs/reiserfs/namei.c:832:
+     * of the owner of the directory and of the owner of the parent directory */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#331: FILE: fs/reiserfs/namei.c:833:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: fs/reiserfs/namei.c:833:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#331: FILE: fs/reiserfs/namei.c:833:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#341: FILE: fs/reiserfs/namei.c:916:
+       two stat datas, we change quotas of the owner of the directory and of
                 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: fs/reiserfs/namei.c:917:
+       the owner of the parent directory */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#343: FILE: fs/reiserfs/namei.c:918:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/reiserfs/namei.c:918:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: fs/reiserfs/namei.c:918:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 2 + 2 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#352: FILE: fs/reiserfs/namei.c:1002:
+    /* We need blocks for transaction + (user+group)*(quotas for new inode + update of quota for directory owner) */

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#353: FILE: fs/reiserfs/namei.c:1003:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: fs/reiserfs/namei.c:1003:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#353: FILE: fs/reiserfs/namei.c:1003:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * (REISERFS_QUOTA_INIT_BLOCKS+REISERFS_QUOTA_TRANS_BLOCKS);
                                                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: fs/reiserfs/namei.c:1008:
+    new_inode_init(inode, parent_dir, mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: fs/reiserfs/namei.c:1079:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 2 * REISERFS_QUOTA_TRANS_BLOCKS;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#383: FILE: fs/reiserfs/namei.c:1198:
+       quota updates: two parent directories */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: fs/reiserfs/namei.c:1199:
+    jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 5 + 4 * REISERFS_QUOTA_TRANS_BLOCKS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/reiserfs/super.c:160:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: fs/reiserfs/super.c:161:
+    int ms_active_set;$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#427: FILE: fs/reiserfs/super.c:171:
+    /* Needed for iput() to work correctly and not trash data */
                   ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: fs/reiserfs/super.c:172:
+    if (s->s_flags & MS_ACTIVE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#428: FILE: fs/reiserfs/super.c:172:
+    if (s->s_flags & MS_ACTIVE) {
+	    ms_active_set = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: fs/reiserfs/super.c:174:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#430: FILE: fs/reiserfs/super.c:174:
+    } else {
+	    ms_active_set = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: fs/reiserfs/super.c:177:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: fs/reiserfs/super.c:179:
+    for (i = 0; i < MAXQUOTAS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#436: FILE: fs/reiserfs/super.c:180:
+	if (REISERFS_SB(s)->s_qf_names[i]) {
+	    int ret = reiserfs_quota_on_mount(s, i);

WARNING:TABSTOP: Statements should start on a tabstop
#437: FILE: fs/reiserfs/super.c:181:
+	    int ret = reiserfs_quota_on_mount(s, i);

WARNING:TABSTOP: Statements should start on a tabstop
#438: FILE: fs/reiserfs/super.c:182:
+	    if (ret < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: fs/reiserfs/super.c:182:
+	    int ret = reiserfs_quota_on_mount(s, i);
+	    if (ret < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/reiserfs/super.c:185:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: fs/reiserfs/super.c:281:
+    for (i = 0; i < MAXQUOTAS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#460: FILE: fs/reiserfs/super.c:281:
+    for (i = 0; i < MAXQUOTAS; i++) {
+            if (sb_dqopt(s)->files[i])

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: fs/reiserfs/super.c:282:
+            if (sb_dqopt(s)->files[i])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: fs/reiserfs/super.c:282:
+            if (sb_dqopt(s)->files[i])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#461: FILE: fs/reiserfs/super.c:282:
+            if (sb_dqopt(s)->files[i])
+                    vfs_quota_off_mount(s, i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: fs/reiserfs/super.c:283:
+                    vfs_quota_off_mount(s, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: fs/reiserfs/super.c:283:
+                    vfs_quota_off_mount(s, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: fs/reiserfs/super.c:284:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: fs/reiserfs/super.c:285:
+    if (ms_active_set)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#464: FILE: fs/reiserfs/super.c:285:
+    if (ms_active_set)
[...]
+	    s->s_flags &= ~MS_ACTIVE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: fs/reiserfs/super.c:580:
+  .quota_read = reiserfs_quota_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/reiserfs/super.c:581:
+  .quota_write = reiserfs_quota_write,$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#494: FILE: fs/reiserfs/super.c:586:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#494: FILE: fs/reiserfs/super.c:586:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#494: FILE: fs/reiserfs/super.c:586:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":"group")
                                            ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#506: FILE: fs/reiserfs/super.c:598:
+static struct dquot_operations reiserfs_quota_operations =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: fs/reiserfs/super.c:599:
+  .initialize = reiserfs_dquot_initialize,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/reiserfs/super.c:600:
+  .drop = reiserfs_dquot_drop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/reiserfs/super.c:601:
+  .alloc_space = dquot_alloc_space,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: fs/reiserfs/super.c:602:
+  .alloc_inode = dquot_alloc_inode,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: fs/reiserfs/super.c:603:
+  .free_space = dquot_free_space,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: fs/reiserfs/super.c:604:
+  .free_inode = dquot_free_inode,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: fs/reiserfs/super.c:605:
+  .transfer = dquot_transfer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: fs/reiserfs/super.c:606:
+  .write_dquot = reiserfs_write_dquot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: fs/reiserfs/super.c:607:
+  .acquire_dquot = reiserfs_acquire_dquot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: fs/reiserfs/super.c:608:
+  .release_dquot = reiserfs_release_dquot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: fs/reiserfs/super.c:609:
+  .mark_dirty = reiserfs_mark_dquot_dirty,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: fs/reiserfs/super.c:610:
+  .write_info = reiserfs_write_info,$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#522: FILE: fs/reiserfs/super.c:614:
+static struct quotactl_ops reiserfs_qctl_operations =
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: fs/reiserfs/super.c:615:
+  .quota_on = reiserfs_quota_on,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: fs/reiserfs/super.c:616:
+  .quota_off = vfs_quota_off,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: fs/reiserfs/super.c:617:
+  .quota_sync = vfs_quota_sync,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/reiserfs/super.c:618:
+  .get_info = vfs_get_dqinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: fs/reiserfs/super.c:619:
+  .set_info = vfs_set_dqinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: fs/reiserfs/super.c:620:
+  .get_dqblk = vfs_get_dqblk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: fs/reiserfs/super.c:621:
+  .set_dqblk = vfs_set_dqblk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: fs/reiserfs/super.c:797:
+    if ( opt->arg_required && !(opt->arg_required & (1<<REISERFS_OPT_ALLOWEMPTY)) && !strlen (p) ) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: fs/reiserfs/super.c:797:
+    if ( opt->arg_required && !(opt->arg_required & (1<<REISERFS_OPT_ALLOWEMPTY)) && !strlen (p) ) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#551: FILE: fs/reiserfs/super.c:797:
+    if ( opt->arg_required && !(opt->arg_required & (1<<REISERFS_OPT_ALLOWEMPTY)) && !strlen (p) ) {
                                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#551: FILE: fs/reiserfs/super.c:797:
+    if ( opt->arg_required && !(opt->arg_required & (1<<REISERFS_OPT_ALLOWEMPTY)) && !strlen (p) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#551: FILE: fs/reiserfs/super.c:797:
+    if ( opt->arg_required && !(opt->arg_required & (1<<REISERFS_OPT_ALLOWEMPTY)) && !strlen (p) ) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#561: FILE: fs/reiserfs/super.c:806:
+	return opt->arg_required & ~(1<<REISERFS_OPT_ALLOWEMPTY);
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#569: FILE: fs/reiserfs/super.c:870:
+	{"usrjquota",	.arg_required = 'u'|(1<<REISERFS_OPT_ALLOWEMPTY), .values = NULL},
 	             	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#569: FILE: fs/reiserfs/super.c:870:
+	{"usrjquota",	.arg_required = 'u'|(1<<REISERFS_OPT_ALLOWEMPTY), .values = NULL},
 	             	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#570: FILE: fs/reiserfs/super.c:871:
+	{"grpjquota",	.arg_required = 'g'|(1<<REISERFS_OPT_ALLOWEMPTY), .values = NULL},
 	             	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#570: FILE: fs/reiserfs/super.c:871:
+	{"grpjquota",	.arg_required = 'g'|(1<<REISERFS_OPT_ALLOWEMPTY), .values = NULL},
 	             	                      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#581: FILE: fs/reiserfs/super.c:936:
+	if (c == 'u' || c == 'g') {
+	    int qtype = c == 'u' ? USRQUOTA : GRPQUOTA;

WARNING:TABSTOP: Statements should start on a tabstop
#582: FILE: fs/reiserfs/super.c:937:
+	    int qtype = c == 'u' ? USRQUOTA : GRPQUOTA;

WARNING:TABSTOP: Statements should start on a tabstop
#584: FILE: fs/reiserfs/super.c:939:
+	    if (sb_any_quota_enabled(s)) {

WARNING:TABSTOP: Statements should start on a tabstop
#587: FILE: fs/reiserfs/super.c:942:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#588: FILE: fs/reiserfs/super.c:943:
+	    if (*arg) {	/* Some filename specified? */

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#589: FILE: fs/reiserfs/super.c:944:
+	        if (REISERFS_SB(s)->s_qf_names[qtype] && strcmp(REISERFS_SB(s)->s_qf_names[qtype], arg)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: fs/reiserfs/super.c:944:
+^I        if (REISERFS_SB(s)->s_qf_names[qtype] && strcmp(REISERFS_SB(s)->s_qf_names[qtype], arg)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#589: FILE: fs/reiserfs/super.c:944:
+	        if (REISERFS_SB(s)->s_qf_names[qtype] && strcmp(REISERFS_SB(s)->s_qf_names[qtype], arg)) {
+		    reiserfs_warning(s, "reiserfs_parse_options: %s quota file already specified.", QTYPE2NAME(qtype));

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#590: FILE: fs/reiserfs/super.c:945:
+		    reiserfs_warning(s, "reiserfs_parse_options: %s quota file already specified.", QTYPE2NAME(qtype));

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: fs/reiserfs/super.c:946:
+		    return 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#593: FILE: fs/reiserfs/super.c:948:
+		if (strchr(arg, '/')) {
+		    reiserfs_warning(s, "reiserfs_parse_options: quotafile must be on filesystem root.");

WARNING:TABSTOP: Statements should start on a tabstop
#595: FILE: fs/reiserfs/super.c:950:
+		    return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: fs/reiserfs/super.c:952:
+^I    ^IREISERFS_SB(s)->s_qf_names[qtype] = kmalloc(strlen(arg)+1, GFP_KERNEL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#597: FILE: fs/reiserfs/super.c:952:
+^I    ^IREISERFS_SB(s)->s_qf_names[qtype] = kmalloc(strlen(arg)+1, GFP_KERNEL);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#597: FILE: fs/reiserfs/super.c:952:
+	    	REISERFS_SB(s)->s_qf_names[qtype] = kmalloc(strlen(arg)+1, GFP_KERNEL);
 	    	                                                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#598: FILE: fs/reiserfs/super.c:953:
+		if (!REISERFS_SB(s)->s_qf_names[qtype]) {
+		    reiserfs_warning(s, "reiserfs_parse_options: not enough memory for storing quotafile name.");

WARNING:TABSTOP: Statements should start on a tabstop
#600: FILE: fs/reiserfs/super.c:955:
+		    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#603: FILE: fs/reiserfs/super.c:958:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#604: FILE: fs/reiserfs/super.c:959:
+	    else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#604: FILE: fs/reiserfs/super.c:959:
+	    }
+	    else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#604: FILE: fs/reiserfs/super.c:959:
+	    else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#605: FILE: fs/reiserfs/super.c:960:
+		if (REISERFS_SB(s)->s_qf_names[qtype]) {
+		    kfree(REISERFS_SB(s)->s_qf_names[qtype]);

WARNING:TABSTOP: Statements should start on a tabstop
#609: FILE: fs/reiserfs/super.c:964:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#611: FILE: fs/reiserfs/super.c:966:
+	if (c == 'f') {
+	    if (!strcmp(arg, "vfsold"))

WARNING:TABSTOP: Statements should start on a tabstop
#612: FILE: fs/reiserfs/super.c:967:
+	    if (!strcmp(arg, "vfsold"))

CHECK:BRACES: braces {} should be used on all arms of this statement
#612: FILE: fs/reiserfs/super.c:967:
+	    if (!strcmp(arg, "vfsold"))
[...]
+	    else if (!strcmp(arg, "vfsv0"))
[...]
+	    else {
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#614: FILE: fs/reiserfs/super.c:969:
+	    else if (!strcmp(arg, "vfsv0"))

WARNING:TABSTOP: Statements should start on a tabstop
#616: FILE: fs/reiserfs/super.c:971:
+	    else {

CHECK:BRACES: Unbalanced braces around else statement
#616: FILE: fs/reiserfs/super.c:971:
+	    else {

WARNING:TABSTOP: Statements should start on a tabstop
#619: FILE: fs/reiserfs/super.c:974:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#622: FILE: fs/reiserfs/super.c:977:
+	if (c == 'u' || c == 'g' || c == 'f') {
+	    reiserfs_warning(s, "reiserfs_parse_options: journalled quota options not supported.");

WARNING:TABSTOP: Statements should start on a tabstop
#624: FILE: fs/reiserfs/super.c:979:
+	    return 0;

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#630: FILE: fs/reiserfs/super.c:985:
+    if (!REISERFS_SB(s)->s_jquota_fmt && (REISERFS_SB(s)->s_qf_names[USRQUOTA] || REISERFS_SB(s)->s_qf_names[GRPQUOTA])) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: fs/reiserfs/super.c:985:
+    if (!REISERFS_SB(s)->s_jquota_fmt && (REISERFS_SB(s)->s_qf_names[USRQUOTA] || REISERFS_SB(s)->s_qf_names[GRPQUOTA])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: fs/reiserfs/super.c:988:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: fs/reiserfs/super.c:1066:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: fs/reiserfs/super.c:1071:
+  if (!reiserfs_parse_options(s, arg, &mount_options, &blocks, NULL, &commit_max_age)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#649: FILE: fs/reiserfs/super.c:1071:
+  if (!reiserfs_parse_options(s, arg, &mount_options, &blocks, NULL, &commit_max_age)) {
[...]
+    for (i = 0; i < MAXQUOTAS; i++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: fs/reiserfs/super.c:1073:
+    for (i = 0; i < MAXQUOTAS; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#652: FILE: fs/reiserfs/super.c:1074:
+	if (REISERFS_SB(s)->s_qf_names[i]) {
+	    kfree(REISERFS_SB(s)->s_qf_names[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: fs/reiserfs/super.c:1080:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: fs/reiserfs/super.c:1386:
+    s->s_qcop = &reiserfs_qctl_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: fs/reiserfs/super.c:1387:
+    s->dq_op = &reiserfs_quota_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: fs/reiserfs/super.c:1821:
+    for (j = 0; j < MAXQUOTAS; j++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#680: FILE: fs/reiserfs/super.c:1822:
+	if (sbi->s_qf_names[j])
+	    kfree(sbi->s_qf_names[j]);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#681: FILE: fs/reiserfs/super.c:1823:
+	if (sbi->s_qf_names[j])
+	    kfree(sbi->s_qf_names[j]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: fs/reiserfs/super.c:1824:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: fs/reiserfs/super.c:1852:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: fs/reiserfs/super.c:1853:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: fs/reiserfs/super.c:1856:
+    journal_begin(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#699: FILE: fs/reiserfs/super.c:1856:
+    journal_begin(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: fs/reiserfs/super.c:1857:
+    ret = dquot_initialize(inode, type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: fs/reiserfs/super.c:1858:
+    journal_end(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#701: FILE: fs/reiserfs/super.c:1858:
+    journal_end(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: fs/reiserfs/super.c:1859:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: fs/reiserfs/super.c:1864:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: fs/reiserfs/super.c:1865:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: fs/reiserfs/super.c:1868:
+    journal_begin(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#711: FILE: fs/reiserfs/super.c:1868:
+    journal_begin(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: fs/reiserfs/super.c:1869:
+    ret = dquot_drop(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: fs/reiserfs/super.c:1870:
+    journal_end(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#713: FILE: fs/reiserfs/super.c:1870:
+    journal_end(&th, inode->i_sb, 2*REISERFS_QUOTA_INIT_BLOCKS);
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: fs/reiserfs/super.c:1871:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: fs/reiserfs/super.c:1876:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: fs/reiserfs/super.c:1877:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: fs/reiserfs/super.c:1879:
+    journal_begin(&th, dquot->dq_sb, REISERFS_QUOTA_TRANS_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: fs/reiserfs/super.c:1880:
+    ret = dquot_commit(dquot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: fs/reiserfs/super.c:1881:
+    journal_end(&th, dquot->dq_sb, REISERFS_QUOTA_TRANS_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: fs/reiserfs/super.c:1882:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: fs/reiserfs/super.c:1887:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: fs/reiserfs/super.c:1888:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: fs/reiserfs/super.c:1890:
+    journal_begin(&th, dquot->dq_sb, REISERFS_QUOTA_INIT_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: fs/reiserfs/super.c:1891:
+    ret = dquot_acquire(dquot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: fs/reiserfs/super.c:1892:
+    journal_end(&th, dquot->dq_sb, REISERFS_QUOTA_INIT_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: fs/reiserfs/super.c:1893:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: fs/reiserfs/super.c:1898:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: fs/reiserfs/super.c:1899:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: fs/reiserfs/super.c:1901:
+    journal_begin(&th, dquot->dq_sb, REISERFS_QUOTA_INIT_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: fs/reiserfs/super.c:1902:
+    ret = dquot_release(dquot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: fs/reiserfs/super.c:1903:
+    journal_end(&th, dquot->dq_sb, REISERFS_QUOTA_INIT_BLOCKS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: fs/reiserfs/super.c:1904:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: fs/reiserfs/super.c:1910:
+    if (REISERFS_SB(dquot->dq_sb)->s_qf_names[USRQUOTA] ||$

CHECK:BRACES: braces {} should be used on all arms of this statement
#753: FILE: fs/reiserfs/super.c:1910:
+    if (REISERFS_SB(dquot->dq_sb)->s_qf_names[USRQUOTA] ||
[...]
+    else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: fs/reiserfs/super.c:1911:
+        REISERFS_SB(dquot->dq_sb)->s_qf_names[GRPQUOTA]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: fs/reiserfs/super.c:1911:
+        REISERFS_SB(dquot->dq_sb)->s_qf_names[GRPQUOTA]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: fs/reiserfs/super.c:1914:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: fs/reiserfs/super.c:1915:
+    else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#758: FILE: fs/reiserfs/super.c:1915:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: fs/reiserfs/super.c:1921:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: fs/reiserfs/super.c:1922:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: fs/reiserfs/super.c:1925:
+    journal_begin(&th, sb, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: fs/reiserfs/super.c:1926:
+    ret = dquot_commit_info(sb, type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: fs/reiserfs/super.c:1927:
+    journal_end(&th, sb, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: fs/reiserfs/super.c:1928:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: fs/reiserfs/super.c:1937:
+    int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: fs/reiserfs/super.c:1938:
+    struct dentry *dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: fs/reiserfs/super.c:1939:
+    struct qstr name = { .name = REISERFS_SB(sb)->s_qf_names[type],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: fs/reiserfs/super.c:1940:
+                         .hash = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: fs/reiserfs/super.c:1940:
+                         .hash = 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: fs/reiserfs/super.c:1941:
+                         .len = strlen(REISERFS_SB(sb)->s_qf_names[type])};$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: fs/reiserfs/super.c:1941:
+                         .len = strlen(REISERFS_SB(sb)->s_qf_names[type])};$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: fs/reiserfs/super.c:1943:
+    dentry = lookup_hash(&name, sb->s_root);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: fs/reiserfs/super.c:1944:
+    if (IS_ERR(dentry))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#787: FILE: fs/reiserfs/super.c:1944:
+    if (IS_ERR(dentry))
+            return PTR_ERR(dentry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: fs/reiserfs/super.c:1945:
+            return PTR_ERR(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: fs/reiserfs/super.c:1945:
+            return PTR_ERR(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: fs/reiserfs/super.c:1946:
+    err = vfs_quota_on_mount(type, REISERFS_SB(sb)->s_jquota_fmt, dentry);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#792: FILE: fs/reiserfs/super.c:1949:
+     * throw it away */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: fs/reiserfs/super.c:1950:
+    d_invalidate(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: fs/reiserfs/super.c:1951:
+    dput(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: fs/reiserfs/super.c:1952:
+    return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: fs/reiserfs/super.c:1960:
+    int err;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#804: FILE: fs/reiserfs/super.c:1961:
+    struct nameidata nd;
                      ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: fs/reiserfs/super.c:1961:
+    struct nameidata nd;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#806: FILE: fs/reiserfs/super.c:1963:
+    err = path_lookup(path, LOOKUP_FOLLOW, &nd);
                                             ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: fs/reiserfs/super.c:1963:
+    err = path_lookup(path, LOOKUP_FOLLOW, &nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: fs/reiserfs/super.c:1964:
+    if (err)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: fs/reiserfs/super.c:1965:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: fs/reiserfs/super.c:1965:
+        return err;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#810: FILE: fs/reiserfs/super.c:1967:
+    if (nd.mnt->mnt_sb != sb) {
         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: fs/reiserfs/super.c:1967:
+    if (nd.mnt->mnt_sb != sb) {$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#811: FILE: fs/reiserfs/super.c:1968:
+	path_release(&nd);
 	              ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: fs/reiserfs/super.c:1969:
+        return -EXDEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: fs/reiserfs/super.c:1969:
+        return -EXDEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: fs/reiserfs/super.c:1970:
+    }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#815: FILE: fs/reiserfs/super.c:1972:
+    if (!REISERFS_I(nd.dentry->d_inode)->i_flags & i_nopack_mask) {
                     ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: fs/reiserfs/super.c:1972:
+    if (!REISERFS_I(nd.dentry->d_inode)->i_flags & i_nopack_mask) {$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#817: FILE: fs/reiserfs/super.c:1974:
+	path_release(&nd);
 	              ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: fs/reiserfs/super.c:1976:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: fs/reiserfs/super.c:1978:
+    if (!REISERFS_SB(sb)->s_qf_names[USRQUOTA] &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: fs/reiserfs/super.c:1979:
+        !REISERFS_SB(sb)->s_qf_names[GRPQUOTA]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: fs/reiserfs/super.c:1979:
+        !REISERFS_SB(sb)->s_qf_names[GRPQUOTA]) {$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#823: FILE: fs/reiserfs/super.c:1980:
+	path_release(&nd);
 	              ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: fs/reiserfs/super.c:1981:
+        return vfs_quota_on(sb, type, format_id, path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: fs/reiserfs/super.c:1981:
+        return vfs_quota_on(sb, type, format_id, path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: fs/reiserfs/super.c:1982:
+    }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#827: FILE: fs/reiserfs/super.c:1984:
+    if (nd.dentry->d_parent->d_inode != sb->s_root->d_inode)
         ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: fs/reiserfs/super.c:1984:
+    if (nd.dentry->d_parent->d_inode != sb->s_root->d_inode)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: fs/reiserfs/super.c:1986:
+                             "Journalled quota will not work.");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: fs/reiserfs/super.c:1986:
+                             "Journalled quota will not work.");$

WARNING:SPLIT_STRING: quoted string split across lines
#829: FILE: fs/reiserfs/super.c:1986:
+	reiserfs_warning(sb, "reiserfs: Quota file not on filesystem root. "
+                             "Journalled quota will not work.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#830: FILE: fs/reiserfs/super.c:1987:
+    path_release(&nd);
                   ^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: fs/reiserfs/super.c:1987:
+    path_release(&nd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: fs/reiserfs/super.c:1988:
+    return vfs_quota_on(sb, type, format_id, path);$

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#836: FILE: fs/reiserfs/super.c:1993:
+ * itself serializes the operations (and noone else should touch the files)
                                          ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#837: FILE: fs/reiserfs/super.c:1994:
+ * we don't have to be afraid of races */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: fs/reiserfs/super.c:1998:
+    struct inode *inode = sb_dqopt(sb)->files[type];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: fs/reiserfs/super.c:1999:
+    unsigned long blk = off >> sb->s_blocksize_bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: fs/reiserfs/super.c:2000:
+    int err = 0, offset = off & (sb->s_blocksize - 1), tocopy;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: fs/reiserfs/super.c:2001:
+    size_t toread;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: fs/reiserfs/super.c:2002:
+    struct buffer_head tmp_bh, *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: fs/reiserfs/super.c:2003:
+    loff_t i_size = i_size_read(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: fs/reiserfs/super.c:2005:
+    if (off > i_size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: fs/reiserfs/super.c:2007:
+    if (off+len > i_size)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#850: FILE: fs/reiserfs/super.c:2007:
+    if (off+len > i_size)
            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#851: FILE: fs/reiserfs/super.c:2008:
+	len = i_size-off;
 	            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: fs/reiserfs/super.c:2009:
+    toread = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: fs/reiserfs/super.c:2010:
+    while (toread > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#858: FILE: fs/reiserfs/super.c:2015:
+	if (err)
+	    return err;

WARNING:TABSTOP: Statements should start on a tabstop
#859: FILE: fs/reiserfs/super.c:2016:
+	    return err;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#860: FILE: fs/reiserfs/super.c:2017:
+	if (!buffer_mapped(&tmp_bh))    /* A hole? */
+	    memset(data, 0, tocopy);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#862: FILE: fs/reiserfs/super.c:2019:
+	else {
+	    bh = sb_bread(sb, tmp_bh.b_blocknr);

CHECK:BRACES: Unbalanced braces around else statement
#862: FILE: fs/reiserfs/super.c:2019:
+	else {

WARNING:TABSTOP: Statements should start on a tabstop
#864: FILE: fs/reiserfs/super.c:2021:
+	    if (!bh)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#866: FILE: fs/reiserfs/super.c:2023:
+	    memcpy(data, bh->b_data+offset, tocopy);
 	                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: fs/reiserfs/super.c:2030:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: fs/reiserfs/super.c:2031:
+    return len;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#878: FILE: fs/reiserfs/super.c:2035:
+ * enough credits) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: fs/reiserfs/super.c:2039:
+    struct inode *inode = sb_dqopt(sb)->files[type];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: fs/reiserfs/super.c:2040:
+    unsigned long blk = off >> sb->s_blocksize_bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: fs/reiserfs/super.c:2041:
+    int err = 0, offset = off & (sb->s_blocksize - 1), tocopy;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: fs/reiserfs/super.c:2042:
+    int journal_quota = REISERFS_SB(sb)->s_qf_names[type] != NULL;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_qf_names[type]"
#885: FILE: fs/reiserfs/super.c:2042:
+    int journal_quota = REISERFS_SB(sb)->s_qf_names[type] != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: fs/reiserfs/super.c:2043:
+    size_t towrite = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: fs/reiserfs/super.c:2044:
+    struct buffer_head tmp_bh, *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: fs/reiserfs/super.c:2046:
+    down(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: fs/reiserfs/super.c:2047:
+    while (towrite > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: fs/reiserfs/super.c:2049:
+^I         sb->s_blocksize - offset : towrite;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#895: FILE: fs/reiserfs/super.c:2052:
+	if (err)
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#896: FILE: fs/reiserfs/super.c:2053:
+	    goto out;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#897: FILE: fs/reiserfs/super.c:2054:
+	if (offset || tocopy != sb->s_blocksize)
+	    bh = sb_bread(sb, tmp_bh.b_blocknr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#899: FILE: fs/reiserfs/super.c:2056:
+	else
+	    bh = sb_getblk(sb, tmp_bh.b_blocknr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#901: FILE: fs/reiserfs/super.c:2058:
+	if (!bh) {
+	    err = -EIO;

WARNING:TABSTOP: Statements should start on a tabstop
#903: FILE: fs/reiserfs/super.c:2060:
+	    goto out;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#905: FILE: fs/reiserfs/super.c:2062:
+	memcpy(bh->b_data+offset, data, tocopy);
 	                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: fs/reiserfs/super.c:2073:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: fs/reiserfs/super.c:2075:
+    if (len == towrite)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: fs/reiserfs/super.c:2077:
+    if (inode->i_size < off+len-towrite)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#920: FILE: fs/reiserfs/super.c:2077:
+    if (inode->i_size < off+len-towrite)
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#920: FILE: fs/reiserfs/super.c:2077:
+    if (inode->i_size < off+len-towrite)
                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#921: FILE: fs/reiserfs/super.c:2078:
+	i_size_write(inode, off+len-towrite);
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#921: FILE: fs/reiserfs/super.c:2078:
+	i_size_write(inode, off+len-towrite);
 	                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: fs/reiserfs/super.c:2079:
+    inode->i_version++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: fs/reiserfs/super.c:2080:
+    inode->i_mtime = inode->i_ctime = CURRENT_TIME;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#923: FILE: fs/reiserfs/super.c:2080:
+    inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: fs/reiserfs/super.c:2081:
+    mark_inode_dirty(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: fs/reiserfs/super.c:2082:
+    up(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: fs/reiserfs/super.c:2083:
+    return len - towrite;$

WARNING:LONG_LINE_COMMENT: line length of 152 exceeds 100 columns
#942: FILE: include/linux/reiserfs_fs.h:1693:
+#define REISERFS_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(JOURNAL_PER_BALANCE_CNT+2)+1)	/* 1 balancing, 1 bitmap, 1 data per write + stat data update */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#942: FILE: include/linux/reiserfs_fs.h:1693:
+#define REISERFS_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(JOURNAL_PER_BALANCE_CNT+2)+1)	/* 1 balancing, 1 bitmap, 1 data per write + stat data update */
                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#942: FILE: include/linux/reiserfs_fs.h:1693:
+#define REISERFS_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(JOURNAL_PER_BALANCE_CNT+2)+1)	/* 1 balancing, 1 bitmap, 1 data per write + stat data update */
                                                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#942: FILE: include/linux/reiserfs_fs.h:1693:
+#define REISERFS_QUOTA_INIT_BLOCKS (DQUOT_MAX_WRITES*(JOURNAL_PER_BALANCE_CNT+2)+1)	/* 1 balancing, 1 bitmap, 1 data per write + stat data update */
                                                                                 ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#968: FILE: include/linux/reiserfs_fs.h:1954:
+int reiserfs_get_block (struct inode * inode, sector_t block, struct buffer_head * bh_result, int create);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#968: FILE: include/linux/reiserfs_fs.h:1954:
+int reiserfs_get_block (struct inode * inode, sector_t block, struct buffer_head * bh_result, int create);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#968: FILE: include/linux/reiserfs_fs.h:1954:
+int reiserfs_get_block (struct inode * inode, sector_t block, struct buffer_head * bh_result, int create);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#968: FILE: include/linux/reiserfs_fs.h:1954:
+int reiserfs_get_block (struct inode * inode, sector_t block, struct buffer_head * bh_result, int create);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: include/linux/reiserfs_fs_sb.h:414:
+    char *s_qf_names[MAXQUOTAS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: include/linux/reiserfs_fs_sb.h:415:
+    int s_jquota_fmt;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 306 warnings, 43 checks, 843 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
