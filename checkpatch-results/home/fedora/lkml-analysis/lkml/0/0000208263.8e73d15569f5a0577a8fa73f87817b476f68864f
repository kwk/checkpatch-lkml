WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/char/Kconfig:838:
+config TANBAC_TB0219
+	tristate "TANBAC TB0219 base board support"
+	depends TANBAC_TB0229
+
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: drivers/char/tb0219.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: drivers/char/tb0219.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#148: FILE: drivers/char/tb0219.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#155: FILE: drivers/char/tb0219.c:25:
+#include <asm/io.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#186: FILE: drivers/char/tb0219.c:56:
+typedef enum {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#230: FILE: drivers/char/tb0219.c:100:
+	uint16_t values;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#241: FILE: drivers/char/tb0219.c:111:
+	uint16_t values;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#252: FILE: drivers/char/tb0219.c:122:
+	uint16_t values;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#271: FILE: drivers/char/tb0219.c:141:
+	uint16_t value;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#287: FILE: drivers/char/tb0219.c:157:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/char/tb0219.c:160:
+                                  loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/char/tb0219.c:160:
+                                  loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: drivers/char/tb0219.c:193:
+                                   size_t len, loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/char/tb0219.c:193:
+                                   size_t len, loff_t *ppos)$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#386: FILE: drivers/char/tb0219.c:256:
+static struct file_operations tb0219_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#403: FILE: drivers/char/tb0219.c:273:
+	if (request_mem_region(TB0219_START, TB0219_SIZE, "TB0219") == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tb0219_base"
#407: FILE: drivers/char/tb0219.c:277:
+	if (tb0219_base == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#427: FILE: drivers/char/tb0219.c:297:
+		printk(KERN_INFO "TB0219: major number %d\n", major);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#454: FILE: drivers/char/tb0219.c:324:
+static int __devinit tanbac_tb0219_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#469: FILE: drivers/char/tb0219.c:339:
+static void __devexit tanbac_tb0219_exit(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208263.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 10 warnings, 7 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208263.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
