WARNING:TYPO_SPELLING: 'ather' may be misspelled - perhaps 'other'?
#30: 
 I hope this may be base for ather multi-byte languege support.
                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'languege' may be misspelled - perhaps 'language'?
#30: 
 I hope this may be base for ather multi-byte languege support.
                                              ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: drivers/char/console_pc9800.h:1:
+#ifndef __CONSOLE_PC9800_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/consolemap.c:165:
+  },$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: drivers/char/consolemap.c:168:
+  /* code marked with ** is not defined in JIS X0201.
+	 So 0x00 - 0x1f are mapped to same to Laten1,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'directry' may be misspelled - perhaps 'directory'?
#160: FILE: drivers/char/consolemap.c:169:
+	 and others are mapped to PC-9800 internal font# directry */
 	                                                 ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: drivers/char/consolemap.c:169:
+	 and others are mapped to PC-9800 internal font# directry */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/char/consolemap.c:170:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/char/consolemap.c:171:
+    0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/char/consolemap.c:173:
+    0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/char/consolemap.c:175:
+    0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/consolemap.c:177:
+    0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/consolemap.c:179:
+    0x0020, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/consolemap.c:180:
+    0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/consolemap.c:181:
+    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/char/consolemap.c:182:
+    0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/char/consolemap.c:183:
+    0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/char/consolemap.c:184:
+    0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/char/consolemap.c:185:
+    0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/char/consolemap.c:186:
+    0x0058, 0x0059, 0x005a, 0x005b, 0x00a5, 0x005d, 0x005e, 0x005f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/char/consolemap.c:187:
+    0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/char/consolemap.c:188:
+    0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/char/consolemap.c:189:
+    0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/char/consolemap.c:190:
+    0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x203e, 0xf07f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/char/consolemap.c:192:
+    0xf080, 0xf081, 0xf082, 0xf083, 0xf084, 0xf085, 0xf086, 0xf087,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/char/consolemap.c:194:
+    0xf088, 0xf089, 0xf08a, 0xf08b, 0xf08c, 0xf08d, 0xf08e, 0xf08f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/char/consolemap.c:196:
+    0xf090, 0xf091, 0xf092, 0xf093, 0xf094, 0xf095, 0xf096, 0xf097,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/char/consolemap.c:198:
+    0xf098, 0xf099, 0xf09a, 0xf09b, 0xf09c, 0xf09d, 0xf09e, 0xf09f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/char/consolemap.c:200:
+    0xf0a0, 0xff61, 0xff62, 0xff63, 0xff64, 0xff65, 0xff66, 0xff67,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/char/consolemap.c:202:
+    0xff68, 0xff69, 0xff6a, 0xff6b, 0xff6c, 0xff6d, 0xff6e, 0xff6f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/consolemap.c:203:
+    0xff70, 0xff71, 0xff72, 0xff73, 0xff74, 0xff75, 0xff76, 0xff77,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/consolemap.c:204:
+    0xff78, 0xff79, 0xff7a, 0xff7b, 0xff7c, 0xff7d, 0xff7e, 0xff7f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/consolemap.c:205:
+    0xff80, 0xff81, 0xff82, 0xff83, 0xff84, 0xff85, 0xff86, 0xff87,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/consolemap.c:206:
+    0xff88, 0xff89, 0xff8a, 0xff8b, 0xff8c, 0xff8d, 0xff8e, 0xff8f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/consolemap.c:207:
+    0xff90, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96, 0xff97,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/consolemap.c:208:
+    0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, 0xff9e, 0xff9f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/char/consolemap.c:209:
+    0xf0e0, 0xf0e1, 0xf0e2, 0xf0e3, 0xf0e4, 0xf0e5, 0xf0e6, 0xf0e7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/consolemap.c:211:
+    0xf0e8, 0xf0e9, 0xf0ea, 0xf0eb, 0xf0ec, 0xf0ed, 0xf0ee, 0xf0ef,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/char/consolemap.c:213:
+    0xf0f0, 0xf0f1, 0xf0f2, 0xf0f3, 0xf0f4, 0xf0f5, 0xf0f6, 0xf0f7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/char/consolemap.c:215:
+    0xf0f8, 0xf0f9, 0xf0fa, 0xf0fb, 0xf0fc, 0xf0fd, 0xf0fe, 0xf0ff$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/char/consolemap.c:217:
+  },$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: drivers/char/pc9800.uni:12:
+0x00^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#593: FILE: drivers/char/vt.c:541:
+	vram_char_t i = scr_readw((u16 *) pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/char/vt.c:681:
+        complement_mask = 0x0400;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/char/vt.c:681:
+        complement_mask = 0x0400;$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#628: FILE: drivers/char/vt.c:763:
+			unsigned short *p = (unsigned short *)kmalloc(ss * 2, GFP_USER);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#668: FILE: drivers/char/vt.c:1314:
+	if (sw->con_setterm_command
+	    && sw->con_setterm_command(vc_cons[currcons].d))

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/char/vt.c:1462:
+        s_kanji_mode = kanji_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/char/vt.c:1462:
+        s_kanji_mode = kanji_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: drivers/char/vt.c:1463:
+        s_kanji_jis_mode = kanji_jis_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/char/vt.c:1463:
+        s_kanji_jis_mode = kanji_jis_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: drivers/char/vt.c:1468:
+        kanji_mode = s_kanji_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/char/vt.c:1468:
+        kanji_mode = s_kanji_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: drivers/char/vt.c:1469:
+        kanji_jis_mode = s_kanji_jis_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/char/vt.c:1469:
+        kanji_jis_mode = s_kanji_jis_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: drivers/char/vt.c:1470:
+        kanji_char1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/char/vt.c:1470:
+        kanji_char1 = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <ESsetJIS>
#719: FILE: drivers/char/vt.c:1477:
+	ESsetJIS, ESsetJIS2,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ESsetJIS2>
#719: FILE: drivers/char/vt.c:1477:
+	ESsetJIS, ESsetJIS2,

CHECK:BRACES: braces {} should be used on all arms of this statement
#793: FILE: drivers/char/vt.c:1912:
+		if (c == 'J')
[...]
+		else if (c == 'I'){
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#795: FILE: drivers/char/vt.c:1914:
+		else if (c == 'I'){

CHECK:BRACES: braces {} should be used on all arms of this statement
#820: FILE: drivers/char/vt.c:1942:
+		if (c == 'J')
[...]
+		else if (c == 'I') {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <ESnormal>
#837: FILE: drivers/char/vt.c:1959:
+		vc_state = ESnormal;

CHECK:BRACES: braces {} should be used on all arms of this statement
#841: FILE: drivers/char/vt.c:1963:
+		if (c == '@')
[...]
+		else if (c == 'B')
[...]
+		else if (c == '('){
[...]
+		} else {
[...]

ERROR:SPACING: space required before the open brace '{'
#845: FILE: drivers/char/vt.c:1967:
+		else if (c == '('){

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#848: FILE: drivers/char/vt.c:1970:
+			return;
+		} else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#848: FILE: drivers/char/vt.c:1970:
+		} else {
 		vc_state = ESnormal;

ERROR:SPACING: space required before the open brace '{'
#856: FILE: drivers/char/vt.c:1978:
+		if (c == 'D'){

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: drivers/char/vt.c:2094:
+                        (((unsigned int)c) & 0x007f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: drivers/char/vt.c:2094:
+                        (((unsigned int)c) & 0x007f);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/char/vt.c:2100:
+^I^I^I^I} $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#949: FILE: drivers/char/vt.c:2106:
+					if (kanji_char1) {
+                        if ((0x40 <= c && c <= 0x7E) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: drivers/char/vt.c:2107:
+                        if ((0x40 <= c && c <= 0x7E) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/char/vt.c:2107:
+                        if ((0x40 <= c && c <= 0x7E) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#950: FILE: drivers/char/vt.c:2107:
+                        if ((0x40 <= c && c <= 0x7E) ||
[...]
+							realkanji = 1;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#950: FILE: drivers/char/vt.c:2107:
+                        if ((0x40 <= c && c <= 0x7E) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: drivers/char/vt.c:2108:
+                            (0x80 <= c && c <= 0xFC)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/char/vt.c:2108:
+                            (0x80 <= c && c <= 0xFC)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#951: FILE: drivers/char/vt.c:2108:
+                            (0x80 <= c && c <= 0xFC)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#959: FILE: drivers/char/vt.c:2116:
+							if (!(c & 0x80)) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#960: FILE: drivers/char/vt.c:2117:
+								if (c < 0x61)

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: drivers/char/vt.c:2127:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: drivers/char/vt.c:2127:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#971: FILE: drivers/char/vt.c:2128:
+					} else {
+                        if ((0x81 <= c && c <= 0x9f) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: drivers/char/vt.c:2129:
+                        if ((0x81 <= c && c <= 0x9f) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/char/vt.c:2129:
+                        if ((0x81 <= c && c <= 0x9f) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#972: FILE: drivers/char/vt.c:2129:
+                        if ((0x81 <= c && c <= 0x9f) ||
[...]
+							realkanji = 1;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#972: FILE: drivers/char/vt.c:2129:
+                        if ((0x81 <= c && c <= 0x9f) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: drivers/char/vt.c:2130:
+                            (0xE0 <= c && c <= 0xEF)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: drivers/char/vt.c:2130:
+                            (0xE0 <= c && c <= 0xEF)) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#973: FILE: drivers/char/vt.c:2130:
+                            (0xE0 <= c && c <= 0xEF)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: drivers/char/vt.c:2134:
+                        } else if (0xA1 <= c && c <= 0xDF) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: drivers/char/vt.c:2134:
+                        } else if (0xA1 <= c && c <= 0xDF) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#977: FILE: drivers/char/vt.c:2134:
+                        } else if (0xA1 <= c && c <= 0xDF) {
+							tc = (unsigned int)translations[JP_MAP][c];

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#977: FILE: drivers/char/vt.c:2134:
+                        } else if (0xA1 <= c && c <= 0xDF) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: drivers/char/vt.c:2137:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: drivers/char/vt.c:2137:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#984: FILE: drivers/char/vt.c:2141:
+					if (utf)
+                        break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: drivers/char/vt.c:2142:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: drivers/char/vt.c:2142:
+                        break;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#986: FILE: drivers/char/vt.c:2143:
+					if (c <= 0x7f) {
+                        kanji_char1 = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: drivers/char/vt.c:2144:
+                        kanji_char1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: drivers/char/vt.c:2144:
+                        kanji_char1 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: drivers/char/vt.c:2145:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: drivers/char/vt.c:2145:
+                        break;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#990: FILE: drivers/char/vt.c:2147:
+					if (kanji_char1) {
+                        if (kanji_char1 == 0x8e) {  /* SS2 */

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: drivers/char/vt.c:2148:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: drivers/char/vt.c:2148:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#991: FILE: drivers/char/vt.c:2148:
+                        if (kanji_char1 == 0x8e) {  /* SS2 */
[...]
+							tc = (unsigned int)translations[JP_MAP][c];

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/char/vt.c:2153:
+                        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: drivers/char/vt.c:2153:
+                        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 56)
#996: FILE: drivers/char/vt.c:2153:
+                        } else {
+							tc = (((unsigned int)kanji_char1) << 8) |

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: drivers/char/vt.c:2158:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: drivers/char/vt.c:2158:
+                        }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 24)
#1002: FILE: drivers/char/vt.c:2159:
+					} else {
+                        kanji_char1 = (unsigned int)c;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: drivers/char/vt.c:2160:
+                        kanji_char1 = (unsigned int)c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: drivers/char/vt.c:2160:
+                        kanji_char1 = (unsigned int)c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: drivers/char/vt.c:2161:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: drivers/char/vt.c:2161:
+                        continue;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#1016: FILE: drivers/char/vt.c:2173:
+			if (utf) {
[...]
+			    if(c > 0x7f) {

WARNING:TABSTOP: Statements should start on a tabstop
#1019: FILE: drivers/char/vt.c:2176:
+			    if(c > 0x7f) {

ERROR:SPACING: space required before the open parenthesis '('
#1019: FILE: drivers/char/vt.c:2176:
+			    if(c > 0x7f) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1023: FILE: drivers/char/vt.c:2180:
+					if (utf_count == 0)
+					    tc = c = utf_char;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1024: FILE: drivers/char/vt.c:2181:
+					    tc = c = utf_char;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1025: FILE: drivers/char/vt.c:2182:
+					else continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1027: FILE: drivers/char/vt.c:2184:
+					if ((c & 0xe0) == 0xc0) {
+					    utf_count = 1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1027: FILE: drivers/char/vt.c:2184:
+					if ((c & 0xe0) == 0xc0) {
[...]
+					} else if ((c & 0xf0) == 0xe0) {
[...]
+					} else if ((c & 0xf8) == 0xf0) {
[...]
+					} else if ((c & 0xfc) == 0xf8) {
[...]
+					} else if ((c & 0xfe) == 0xfc) {
[...]
+					} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1030: FILE: drivers/char/vt.c:2187:
+					} else if ((c & 0xf0) == 0xe0) {
+					    utf_count = 2;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1033: FILE: drivers/char/vt.c:2190:
+					} else if ((c & 0xf8) == 0xf0) {
+					    utf_count = 3;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1036: FILE: drivers/char/vt.c:2193:
+					} else if ((c & 0xfc) == 0xf8) {
+					    utf_count = 4;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1039: FILE: drivers/char/vt.c:2196:
+					} else if ((c & 0xfe) == 0xfc) {
+					    utf_count = 5;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 44)
#1042: FILE: drivers/char/vt.c:2199:
+					} else
+					    utf_count = 0;

CHECK:BRACES: Unbalanced braces around else statement
#1042: FILE: drivers/char/vt.c:2199:
+					} else

WARNING:TABSTOP: Statements should start on a tabstop
#1045: FILE: drivers/char/vt.c:2202:
+				      }

WARNING:TABSTOP: Statements should start on a tabstop
#1046: FILE: drivers/char/vt.c:2203:
+			    } else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 30)
#1046: FILE: drivers/char/vt.c:2203:
+			    } else {
+			      tc = c;

WARNING:TABSTOP: Statements should start on a tabstop
#1049: FILE: drivers/char/vt.c:2206:
+			    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 26)
#1050: FILE: drivers/char/vt.c:2207:
+			} else {	/* no utf */
[...]
+			  tc = translate[toggle_meta ? (c|0x80) : c];

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1052: FILE: drivers/char/vt.c:2209:
+			  tc = translate[toggle_meta ? (c|0x80) : c];
 			                                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#1059: FILE: drivers/char/vt.c:2216:
+	hankana_skip:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1068: FILE: drivers/char/vt.c:2234:
+                ok |= realkanji;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: drivers/char/vt.c:2234:
+                ok |= realkanji;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 33)
#1077: FILE: drivers/char/vt.c:2240:
+				if ( tc == -4 ) {
[...]
+       	                         tc = conv_uni_to_pc(vc_cons[currcons].d, 0xfffd);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1077: FILE: drivers/char/vt.c:2240:
+				if ( tc == -4 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1077: FILE: drivers/char/vt.c:2240:
+				if ( tc == -4 ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: drivers/char/vt.c:2243:
+       ^I                         tc = conv_uni_to_pc(vc_cons[currcons].d, 0xfffd);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1081: FILE: drivers/char/vt.c:2243:
+       ^I                         tc = conv_uni_to_pc(vc_cons[currcons].d, 0xfffd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: drivers/char/vt.c:2243:
+       ^I                         tc = conv_uni_to_pc(vc_cons[currcons].d, 0xfffd);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 45)
#1089: FILE: drivers/char/vt.c:2248:
+					if (tc == -4)
+					     tc = c;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1091: FILE: drivers/char/vt.c:2250:
+				} else if ( tc == -3 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1091: FILE: drivers/char/vt.c:2250:
+				} else if ( tc == -3 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/char/vt.c:2278:
+^I^I^I^Itc = ((tc >> 8) & 0xff) | ((tc << 8) & 0xff00); $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1126: FILE: drivers/char/vt.c:2281:
+				x ++;
 				  ^

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#1139: FILE: drivers/char/vt.c:2294:
+					draw_x --;
 					       ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1188: FILE: drivers/char/vt.c:2795:
+		screenbuf
+			= (unsigned short *) alloc_bootmem(screenbuf_size * 2);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: No space is necessary after a cast
#1188: FILE: drivers/char/vt.c:2795:
+			= (unsigned short *) alloc_bootmem(screenbuf_size * 2);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/char/vt_ioctl.c:646:
+^I^I^Ireturn -EPERM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1252: FILE: drivers/char/vt_ioctl.c:651:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1271: FILE: drivers/char/vt_ioctl.c:871:
+#ifndef CONFIG_PC9800^I^I    $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vc_data *' should also have an identifier name
#1313: FILE: include/linux/console.h:42:
+	void	(*con_putc)(struct vc_data *, int, vram_char_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1313: FILE: include/linux/console.h:42:
+	void	(*con_putc)(struct vc_data *, int, vram_char_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'vram_char_t' should also have an identifier name
#1313: FILE: include/linux/console.h:42:
+	void	(*con_putc)(struct vc_data *, int, vram_char_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1313: FILE: include/linux/console.h:42:
+	void	(*con_putc)(struct vc_data *, int, vram_char_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vc_data *' should also have an identifier name
#1321: FILE: include/linux/console.h:58:
+	int	(*con_setterm_command)(struct vc_data *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 109 warnings, 14 checks, 1295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
