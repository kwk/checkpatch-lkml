WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
> > +static inline unsigned long __do_mmap_pgoff(struct file * file, unsign=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#89: FILE: include/asm-i386/mman.h:16:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: include/linux/mman.h:62:
+               _calc_vm_trans(flags, MAP_HUGETLB,    VM_HUGETLB   ) |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/linux/mman.h:62:
+               _calc_vm_trans(flags, MAP_HUGETLB,    VM_HUGETLB   ) |$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#122: FILE: include/linux/mman.h:62:
+               _calc_vm_trans(flags, MAP_HUGETLB,    VM_HUGETLB   ) |

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#397: FILE: mm/mmap.c:479:
 }
+static inline unsigned long __do_mmap_pgoff(struct file * file, unsigned l=

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: mm/mmap.c:479:
+static inline unsigned long __do_mmap_pgoff(struct file * file, unsigned l=

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#397: FILE: mm/mmap.c:479:
+static inline unsigned long __do_mmap_pgoff(struct file * file, unsigned l=

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#397: FILE: mm/mmap.c:479:
+static inline unsigned long __do_mmap_pgoff(struct file * file, unsigned l=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#448: FILE: mm/mmap.c:503:
+		accountable =3D 0;
 		            ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#465: FILE: mm/mmap.c:707:
+	 * the file afterward.                               =20
+	 */                                                  =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#465: FILE: mm/mmap.c:707:
+	 */                                                  =20
 	                                                     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#469: FILE: mm/mmap.c:711:
+		fput(vma->vm_file);=20
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#469: FILE: mm/mmap.c:711:
+		fput(vma->vm_file);=20
 		                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#478: FILE: mm/mmap.c:721:
 }
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: mm/mmap.c:725:
+unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: mm/mmap.c:726:
+unsigned long do_mmap_pgoff(struct file * file, unsigned long addr,
+			unsigned long len, unsigned long prot,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#486: FILE: mm/mmap.c:729:
+	struct file *hugetlb_file =3D NULL;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#504: FILE: mm/mmap.c:747:
+	len =3D PAGE_ALIGN(len);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#518: FILE: mm/mmap.c:761:
+		file =3D hugetlb_file =3D hugetlb_zero_setup(len);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#518: FILE: mm/mmap.c:761:
+		file =3D hugetlb_file =3D hugetlb_zero_setup(len);
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#523: FILE: mm/mmap.c:766:
+	result =3D __do_mmap_pgoff(file, addr, len, prot, flags, pgoff);
 	       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282242.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 3 warnings, 4 checks, 407 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000282242.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
