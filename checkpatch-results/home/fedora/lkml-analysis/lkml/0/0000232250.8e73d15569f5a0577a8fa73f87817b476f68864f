WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
.         loop0p17  loop0p27  loop0p38  loop0p49  loop0p59  loop0p69  loop0p79

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#136: FILE: linux-2.6.9/drivers/block/loop.c:804:
+		printk(KERN_WARNING "loop: invalidate_partition(disk, 0) for loop%i returned %i!\n", lo->lo_number, res);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#136: FILE: linux-2.6.9/drivers/block/loop.c:804:
+		printk(KERN_WARNING "loop: invalidate_partition(disk, 0) for loop%i returned %i!\n", lo->lo_number, res);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#166: FILE: linux-2.6.9/drivers/block/loop.c:1146:
+		printk(KERN_WARNING "loop: invalid max_part (must be between"

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: linux-2.6.9/drivers/block/loop.c:1147:
+		printk(KERN_WARNING "loop: invalid max_part (must be between"
+				    " 1 and 128), using default (1)\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#172: FILE: linux-2.6.9/drivers/block/loop.c:1152:
+		printk(KERN_WARNING "loop: max_loop*max_part is too big (must"

WARNING:SPLIT_STRING: quoted string split across lines
#173: FILE: linux-2.6.9/drivers/block/loop.c:1153:
+		printk(KERN_WARNING "loop: max_loop*max_part is too big (must"
+				"be <=%u), using default for both\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#173: FILE: linux-2.6.9/drivers/block/loop.c:1153:
+		printk(KERN_WARNING "loop: max_loop*max_part is too big (must"
+				"be <=%u), using default for both\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_part > 1'
#179: FILE: linux-2.6.9/drivers/block/loop.c:1159:
+	if (register_blkdev((max_part > 1) ? MY_DYN_MAJOR_START : LOOP_MAJOR, "loop"))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#208: FILE: linux-2.6.9/drivers/block/loop.c:1204:
+	printk(KERN_INFO "loop: loaded (max %d devices, max %d partitions per"

WARNING:SPLIT_STRING: quoted string split across lines
#209: FILE: linux-2.6.9/drivers/block/loop.c:1205:
+	printk(KERN_INFO "loop: loaded (max %d devices, max %d partitions per"
+			" device)\n", max_loop, max_part);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_part > 1'
#227: FILE: linux-2.6.9/drivers/block/loop.c:1235:
+	if (unregister_blkdev((max_part > 1) ? MY_DYN_MAJOR_START : LOOP_MAJOR, "loop"))

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#237: FILE: linux-2.6.9/drivers/block/loop.c:1254:
+	max_part = simple_strtol(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#242: FILE: linux-2.6.9/drivers/block/loop.c:1259:
+__setup("max_part=", max_part_setup);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 3 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
