ERROR:CODE_INDENT: code indent should use tabs where possible
#44: FILE: arch/um/drivers/line.c:608:
+        int n;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: arch/um/drivers/line.c:608:
+        int n;$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#46: FILE: arch/um/drivers/line.c:610:
+	n = simple_strtoul(*str, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == *str'
#47: FILE: arch/um/drivers/line.c:611:
+	if((*end != '\0') || (end == *str))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#47: FILE: arch/um/drivers/line.c:611:
+	if((*end != '\0') || (end == *str))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#48: FILE: arch/um/drivers/line.c:612:
+                return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: arch/um/drivers/line.c:612:
+                return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: arch/um/drivers/line.c:614:
+        *str = end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: arch/um/drivers/line.c:614:
+        *str = end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: arch/um/drivers/line.c:615:
+        *start_out = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: arch/um/drivers/line.c:615:
+        *start_out = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: arch/um/drivers/line.c:616:
+        *end_out = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: arch/um/drivers/line.c:616:
+        *end_out = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: arch/um/drivers/line.c:617:
+        return n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: arch/um/drivers/line.c:617:
+        return n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: arch/um/drivers/mconsole_kern.c:423:
+        char error[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/um/drivers/mconsole_kern.c:423:
+        char error[256];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/um/drivers/mconsole_kern.c:434:
+        ptr = &ptr[strlen(dev->name)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/um/drivers/mconsole_kern.c:434:
+        ptr = &ptr[strlen(dev->name)];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/um/drivers/mconsole_kern.c:436:
+        err = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/um/drivers/mconsole_kern.c:436:
+        err = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/um/drivers/mconsole_kern.c:437:
+        n = (*dev->id)(&ptr, &start, &end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/um/drivers/mconsole_kern.c:437:
+        n = (*dev->id)(&ptr, &start, &end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/um/drivers/mconsole_kern.c:438:
+        if(n < 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/um/drivers/mconsole_kern.c:438:
+        if(n < 0){$

ERROR:SPACING: space required before the open brace '{'
#92: FILE: arch/um/drivers/mconsole_kern.c:438:
+        if(n < 0){

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: arch/um/drivers/mconsole_kern.c:438:
+        if(n < 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/um/drivers/mconsole_kern.c:439:
+                err_msg = "Couldn't parse device number";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/um/drivers/mconsole_kern.c:439:
+                err_msg = "Couldn't parse device number";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/um/drivers/mconsole_kern.c:440:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/um/drivers/mconsole_kern.c:440:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/um/drivers/mconsole_kern.c:441:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/um/drivers/mconsole_kern.c:441:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: arch/um/drivers/mconsole_kern.c:442:
+        else if((n < start) || (n > end)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/um/drivers/mconsole_kern.c:442:
+        else if((n < start) || (n > end)){$

ERROR:SPACING: space required before the open brace '{'
#96: FILE: arch/um/drivers/mconsole_kern.c:442:
+        else if((n < start) || (n > end)){

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: arch/um/drivers/mconsole_kern.c:442:
+        else if((n < start) || (n > end)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#96: FILE: arch/um/drivers/mconsole_kern.c:442:
+        }
+        else if((n < start) || (n > end)){

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: arch/um/drivers/mconsole_kern.c:443:
+                sprintf(error, "Invalid device number - must be between "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/um/drivers/mconsole_kern.c:443:
+                sprintf(error, "Invalid device number - must be between "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/um/drivers/mconsole_kern.c:444:
+                        "%d and %d", start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/um/drivers/mconsole_kern.c:444:
+                        "%d and %d", start, end);$

WARNING:SPLIT_STRING: quoted string split across lines
#98: FILE: arch/um/drivers/mconsole_kern.c:444:
+                sprintf(error, "Invalid device number - must be between "
+                        "%d and %d", start, end);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/um/drivers/mconsole_kern.c:445:
+                err_msg = error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/um/drivers/mconsole_kern.c:445:
+                err_msg = error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/um/drivers/mconsole_kern.c:446:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/um/drivers/mconsole_kern.c:446:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/um/drivers/mconsole_kern.c:447:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/um/drivers/mconsole_kern.c:447:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/um/drivers/mconsole_kern.c:450:
+        switch(err){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/um/drivers/mconsole_kern.c:450:
+        switch(err){$

ERROR:SPACING: space required before the open brace '{'
#104: FILE: arch/um/drivers/mconsole_kern.c:450:
+        switch(err){

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: arch/um/drivers/mconsole_kern.c:450:
+        switch(err){

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/um/drivers/mconsole_kern.c:451:
+        case -ENODEV:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/um/drivers/mconsole_kern.c:451:
+        case -ENODEV:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: arch/um/drivers/mconsole_kern.c:452:
+                err_msg = "Device doesn't exist";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/um/drivers/mconsole_kern.c:452:
+                err_msg = "Device doesn't exist";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/um/drivers/mconsole_kern.c:453:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/um/drivers/mconsole_kern.c:453:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/um/drivers/mconsole_kern.c:454:
+        case -EBUSY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/um/drivers/mconsole_kern.c:454:
+        case -EBUSY:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/um/drivers/mconsole_kern.c:455:
+                err_msg = "Device is currently open";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/um/drivers/mconsole_kern.c:455:
+                err_msg = "Device is currently open";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/um/drivers/mconsole_kern.c:456:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/um/drivers/mconsole_kern.c:456:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/um/drivers/mconsole_kern.c:457:
+        default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/um/drivers/mconsole_kern.c:458:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/um/drivers/mconsole_kern.c:458:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/um/drivers/mconsole_kern.c:459:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/um/drivers/mconsole_kern.c:459:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/um/drivers/net_kern.c:617:
+        char *end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/um/drivers/net_kern.c:617:
+        char *end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/um/drivers/net_kern.c:618:
+        int n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/um/drivers/net_kern.c:618:
+        int n;$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#133: FILE: arch/um/drivers/net_kern.c:620:
+	n = simple_strtoul(*str, &end, 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == *str'
#134: FILE: arch/um/drivers/net_kern.c:621:
+	if((*end != '\0') || (end == *str))

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: arch/um/drivers/net_kern.c:621:
+	if((*end != '\0') || (end == *str))

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/um/drivers/net_kern.c:624:
+        *start_out = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/um/drivers/net_kern.c:624:
+        *start_out = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/um/drivers/net_kern.c:625:
+        *end_out = n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/um/drivers/net_kern.c:625:
+        *end_out = n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/um/drivers/net_kern.c:626:
+        *str = end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/um/drivers/net_kern.c:626:
+        *str = end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/um/drivers/net_kern.c:627:
+        return n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/um/drivers/net_kern.c:627:
+        return n;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/um/drivers/net_kern.c:642:
+^Iif(lp->fd > 0) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: arch/um/drivers/net_kern.c:642:
+	if(lp->fd > 0) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/um/drivers/net_kern.c:643:
+                return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/um/drivers/net_kern.c:643:
+                return -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/um/drivers/net_kern.c:658:
+        .id^I^I= net_id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/um/drivers/net_kern.c:658:
+        .id^I^I= net_id,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/um/drivers/ssl.c:72:
+                .id^I^I= line_id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/um/drivers/ssl.c:72:
+                .id^I^I= line_id,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: arch/um/drivers/ssl.c:100:
+        return line_remove(serial_lines, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/um/drivers/ssl.c:100:
+        return line_remove(serial_lines, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/um/drivers/ssl.c:100:
+        return line_remove(serial_lines, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/um/drivers/ssl.c:101:
+                           sizeof(serial_lines)/sizeof(serial_lines[0]), n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/um/drivers/ssl.c:101:
+                           sizeof(serial_lines)/sizeof(serial_lines[0]), n);$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(serial_lines)
#215: FILE: arch/um/drivers/ssl.c:101:
+                           sizeof(serial_lines)/sizeof(serial_lines[0]), n);

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#215: FILE: arch/um/drivers/ssl.c:101:
+                           sizeof(serial_lines)/sizeof(serial_lines[0]), n);
                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/um/drivers/stdio_console.c:78:
+                .id^I^I= line_id,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/um/drivers/stdio_console.c:78:
+                .id^I^I= line_id,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/um/drivers/stdio_console.c:105:
+        return line_remove(vts, sizeof(vts)/sizeof(vts[0]), n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/um/drivers/stdio_console.c:105:
+        return line_remove(vts, sizeof(vts)/sizeof(vts[0]), n);$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(vts)
#248: FILE: arch/um/drivers/stdio_console.c:105:
+        return line_remove(vts, sizeof(vts)/sizeof(vts[0]), n);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#248: FILE: arch/um/drivers/stdio_console.c:105:
+        return line_remove(vts, sizeof(vts)/sizeof(vts[0]), n);
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: arch/um/drivers/ubd_kern.c:759:
+        int n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/um/drivers/ubd_kern.c:759:
+        int n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/um/drivers/ubd_kern.c:762:
+        *start_out = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/um/drivers/ubd_kern.c:762:
+        *start_out = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/um/drivers/ubd_kern.c:763:
+        *end_out = MAX_DEV - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/um/drivers/ubd_kern.c:763:
+        *end_out = MAX_DEV - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/um/drivers/ubd_kern.c:764:
+        return n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/um/drivers/ubd_kern.c:764:
+        return n;$

ERROR:SPACING: space required before the open parenthesis '('
#282: FILE: arch/um/drivers/ubd_kern.c:774:
+	if(ubd_gendisk[n] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_gendisk[n]"
#282: FILE: arch/um/drivers/ubd_kern.c:774:
+	if(ubd_gendisk[n] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#291: FILE: arch/um/drivers/ubd_kern.c:779:
+	if(dev->file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->file"
#291: FILE: arch/um/drivers/ubd_kern.c:779:
+	if(dev->file == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: arch/um/drivers/ubd_kern.c:784:
+	if(dev->count > 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: arch/um/include/line.h:104:
+extern int line_id(char **str, int *start_out, int *end_out);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: arch/um/include/line.h:105:
+extern int line_remove(struct line *lines, unsigned int sizeof_lines, int n);

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/um/include/mconsole_kern.h:23:
+        int (*id)(char **, int *, int *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/um/include/mconsole_kern.h:23:
+        int (*id)(char **, int *, int *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#344: FILE: arch/um/include/mconsole_kern.h:23:
+        int (*id)(char **, int *, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#344: FILE: arch/um/include/mconsole_kern.h:23:
+        int (*id)(char **, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#344: FILE: arch/um/include/mconsole_kern.h:23:
+        int (*id)(char **, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#345: FILE: arch/um/include/mconsole_kern.h:24:
+	int (*remove)(int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/um/kernel/tt/gdb.c:159:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/um/kernel/tt/gdb.c:159:
+        return 0;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#375: FILE: arch/um/kernel/tt/gdb_kern.c:13:
+extern int gdb_remove(int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: arch/um/kernel/tt/include/debug.h:16:
+extern int gdb_remove(int unused);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 58 warnings, 9 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
