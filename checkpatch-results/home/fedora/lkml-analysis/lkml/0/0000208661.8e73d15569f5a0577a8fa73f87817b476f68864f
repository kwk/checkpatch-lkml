ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: fs/nfsd/export.c:518:
+static int exp_set_key(svc_client *clp, int fsid_type, u32 *fsidv, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct nlmsvc_binding should normally be const
#127: FILE: fs/nfsd/lockd.c:63:
+static struct nlmsvc_binding	nfsd_nlm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#137: FILE: include/linux/nfs4_acl.h:47:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#169: FILE: fs/nfsd/nfs4acl.c:942:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: fs/nfsd/nfs4state.c:69:
+static u32 list_add_perfile = 0; $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#308: FILE: fs/nfsd/nfs4state.c:69:
+static u32 list_add_perfile = 0; 

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#309: FILE: fs/nfsd/nfs4state.c:70:
+static u32 list_del_perfile = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#310: FILE: fs/nfsd/nfs4state.c:71:
+static u32 add_perclient = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#311: FILE: fs/nfsd/nfs4state.c:72:
+static u32 del_perclient = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#312: FILE: fs/nfsd/nfs4state.c:73:
+static u32 alloc_file = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#313: FILE: fs/nfsd/nfs4state.c:74:
+static u32 free_file = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#314: FILE: fs/nfsd/nfs4state.c:75:
+static u32 alloc_sowner = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#315: FILE: fs/nfsd/nfs4state.c:76:
+static u32 free_sowner = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#316: FILE: fs/nfsd/nfs4state.c:77:
+static u32 vfsopen = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#317: FILE: fs/nfsd/nfs4state.c:78:
+static u32 vfsclose = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#318: FILE: fs/nfsd/nfs4state.c:79:
+static u32 alloc_lsowner= 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#318: FILE: fs/nfsd/nfs4state.c:79:
+static u32 alloc_lsowner= 0;
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#319: FILE: fs/nfsd/nfs4state.c:80:
+static u32 alloc_delegation= 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#319: FILE: fs/nfsd/nfs4state.c:80:
+static u32 alloc_delegation= 0;
                            ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#320: FILE: fs/nfsd/nfs4state.c:81:
+static u32 free_delegation= 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#320: FILE: fs/nfsd/nfs4state.c:81:
+static u32 free_delegation= 0;
                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: fs/nfsd/nfs4state.c:84:
+static struct nfs4_stateid * find_stateid(stateid_t *stid, int flags);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#396: FILE: fs/nfsd/nfs4state.c:1246:
+static void
 set_access(unsigned int *access, unsigned long bmap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#405: FILE: fs/nfsd/nfs4state.c:1257:
+static void
 set_deny(unsigned int *deny, unsigned long bmap) {

WARNING:CONST_STRUCT: struct lock_manager_operations should normally be const
#414: FILE: fs/nfsd/nfs4state.c:1402:
+static struct lock_manager_operations nfsd_lease_mng_ops = {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#432: FILE: fs/nfsd/nfs4state.c:1917:
+static struct nfs4_stateowner *
 find_openstateowner_id(u32 st_id, int flags) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#574: FILE: fs/nfsd/nfssvc.c:63:
 };
+static struct list_head nfsd_list = LIST_HEAD_INIT(nfsd_list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#586: FILE: fs/nfsd/vfs.c:707:
+static inline void nfsd_dosync(struct file *filp, struct dentry *dp, 
                                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: fs/nfsd/vfs.c:707:
+static inline void nfsd_dosync(struct file *filp, struct dentry *dp, $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#587: FILE: fs/nfsd/vfs.c:708:
+			       struct file_operations *fop)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208661.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 6 warnings, 1 checks, 478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208661.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
