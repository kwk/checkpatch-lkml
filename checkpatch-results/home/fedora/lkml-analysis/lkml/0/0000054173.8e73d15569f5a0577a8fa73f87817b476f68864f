WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
Rename struct nfs4_client to struct nfs_client so that it can become the basis

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#31: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#270: FILE: fs/nfs/idmap.c:516:
 }
+int nfs_map_gid_to_group(struct nfs_client *clp, __u32 uid, char *buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: fs/nfs/nfs4_fs.h:213:
+extern int nfs4_proc_setclientid(struct nfs_client *, u32, unsigned short, struct rpc_cred *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#307: FILE: fs/nfs/nfs4_fs.h:213:
+extern int nfs4_proc_setclientid(struct nfs_client *, u32, unsigned short, struct rpc_cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#307: FILE: fs/nfs/nfs4_fs.h:213:
+extern int nfs4_proc_setclientid(struct nfs_client *, u32, unsigned short, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#307: FILE: fs/nfs/nfs4_fs.h:213:
+extern int nfs4_proc_setclientid(struct nfs_client *, u32, unsigned short, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#307: FILE: fs/nfs/nfs4_fs.h:213:
+extern int nfs4_proc_setclientid(struct nfs_client *, u32, unsigned short, struct rpc_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: fs/nfs/nfs4_fs.h:214:
+extern int nfs4_proc_setclientid_confirm(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#308: FILE: fs/nfs/nfs4_fs.h:214:
+extern int nfs4_proc_setclientid_confirm(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#308: FILE: fs/nfs/nfs4_fs.h:214:
+extern int nfs4_proc_setclientid_confirm(struct nfs_client *, struct rpc_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: fs/nfs/nfs4_fs.h:215:
+extern int nfs4_proc_async_renew(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#309: FILE: fs/nfs/nfs4_fs.h:215:
+extern int nfs4_proc_async_renew(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#309: FILE: fs/nfs/nfs4_fs.h:215:
+extern int nfs4_proc_async_renew(struct nfs_client *, struct rpc_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: fs/nfs/nfs4_fs.h:216:
+extern int nfs4_proc_renew(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#310: FILE: fs/nfs/nfs4_fs.h:216:
+extern int nfs4_proc_renew(struct nfs_client *, struct rpc_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#310: FILE: fs/nfs/nfs4_fs.h:216:
+extern int nfs4_proc_renew(struct nfs_client *, struct rpc_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: fs/nfs/nfs4_fs.h:234:
+extern void nfs4_schedule_state_renewal(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#319: FILE: fs/nfs/nfs4_fs.h:234:
+extern void nfs4_schedule_state_renewal(struct nfs_client *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: fs/nfs/nfs4_fs.h:236:
+extern void nfs4_kill_renewd(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#322: FILE: fs/nfs/nfs4_fs.h:236:
+extern void nfs4_kill_renewd(struct nfs_client *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: fs/nfs/nfs4_fs.h:242:
+extern struct nfs_client *nfs4_get_client(struct in_addr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct in_addr *' should also have an identifier name
#333: FILE: fs/nfs/nfs4_fs.h:242:
+extern struct nfs_client *nfs4_get_client(struct in_addr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: fs/nfs/nfs4_fs.h:243:
+extern void nfs4_put_client(struct nfs_client *clp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: fs/nfs/nfs4_fs.h:244:
+extern struct nfs_client *nfs4_find_client(struct in_addr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct in_addr *' should also have an identifier name
#335: FILE: fs/nfs/nfs4_fs.h:244:
+extern struct nfs_client *nfs4_find_client(struct in_addr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: fs/nfs/nfs4_fs.h:246:
+extern u32 nfs4_alloc_lockowner_id(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#337: FILE: fs/nfs/nfs4_fs.h:246:
+extern u32 nfs4_alloc_lockowner_id(struct nfs_client *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: fs/nfs/nfs4_fs.h:255:
+extern void nfs4_schedule_state_recovery(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#346: FILE: fs/nfs/nfs4_fs.h:255:
+extern void nfs4_schedule_state_recovery(struct nfs_client *);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#458: FILE: fs/nfs/nfs4proc.c:2876:
+int nfs4_proc_setclientid(struct nfs_client *clp, u32 program, unsigned short port, struct rpc_cred *cred)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#778: FILE: fs/nfs/nfs4xdr.c:1978:
+static int nfs4_xdr_enc_setclientid_confirm(struct rpc_rqst *req, uint32_t *p, struct nfs_client *clp)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#796: FILE: fs/nfs/nfs4xdr.c:2639:
+static int decode_attr_owner(struct xdr_stream *xdr, uint32_t *bitmap, struct nfs_client *clp, int32_t *uid)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#805: FILE: fs/nfs/nfs4xdr.c:2663:
+static int decode_attr_group(struct xdr_stream *xdr, uint32_t *bitmap, struct nfs_client *clp, int32_t *gid)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#858: FILE: include/linux/nfs_fs_sb.h:46:
+	struct nfs_client *	nfs4_state;	/* all NFSv4 state starts here */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#875: FILE: include/linux/nfs_idmap.h:67:
+void nfs_idmap_new(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#876: FILE: include/linux/nfs_idmap.h:68:
+void nfs_idmap_delete(struct nfs_client *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#882: FILE: include/linux/nfs_idmap.h:70:
+int nfs_map_name_to_uid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#882: FILE: include/linux/nfs_idmap.h:70:
+int nfs_map_name_to_uid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#882: FILE: include/linux/nfs_idmap.h:70:
+int nfs_map_name_to_uid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#882: FILE: include/linux/nfs_idmap.h:70:
+int nfs_map_name_to_uid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#883: FILE: include/linux/nfs_idmap.h:71:
+int nfs_map_group_to_gid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#883: FILE: include/linux/nfs_idmap.h:71:
+int nfs_map_group_to_gid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#883: FILE: include/linux/nfs_idmap.h:71:
+int nfs_map_group_to_gid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32 *' should also have an identifier name
#883: FILE: include/linux/nfs_idmap.h:71:
+int nfs_map_group_to_gid(struct nfs_client *, const char *, size_t, __u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#884: FILE: include/linux/nfs_idmap.h:72:
+int nfs_map_uid_to_name(struct nfs_client *, __u32, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#884: FILE: include/linux/nfs_idmap.h:72:
+int nfs_map_uid_to_name(struct nfs_client *, __u32, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#884: FILE: include/linux/nfs_idmap.h:72:
+int nfs_map_uid_to_name(struct nfs_client *, __u32, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_client *' should also have an identifier name
#885: FILE: include/linux/nfs_idmap.h:73:
+int nfs_map_gid_to_group(struct nfs_client *, __u32, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#885: FILE: include/linux/nfs_idmap.h:73:
+int nfs_map_gid_to_group(struct nfs_client *, __u32, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#885: FILE: include/linux/nfs_idmap.h:73:
+int nfs_map_gid_to_group(struct nfs_client *, __u32, char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 38 warnings, 12 checks, 711 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
