WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> In article <20020921033137.GA26017@kroah.com>, Greg KH  <greg@kroah.com> wrote:

WARNING:TYPO_SPELLING: 'nautral' may be misspelled - perhaps 'natural'?
#44: 
>    the special node something truly boring and nautral like "node", and
                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'happpens' may be misspelled - perhaps 'happens'?
#85: 
happpens when you try to write to it.
^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
# tree /sys/root/foo0/

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
# ls -l /sys/root/foo0/node 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: drivers/base/fs/device.c:89:
+int device_create_node(struct device * dev, mode_t mode, kdev_t kdev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/base/fs/device.c:95:
+	printk("creating node (kdev = %d, mode = %d, dev = %s)\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/base/fs/device.c:96:
+	       kdev_t_to_nr(kdev),mode,dev->bus_id);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: drivers/base/fs/device.c:96:
+	       kdev_t_to_nr(kdev),mode,dev->bus_id);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#132: FILE: drivers/base/fs/device.c:97:
+	return driverfs_create_node(&attr,&dev->dir,kdev);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#132: FILE: drivers/base/fs/device.c:97:
+	return driverfs_create_node(&attr,&dev->dir,kdev);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: drivers/base/fs/device.c:97:
+	return driverfs_create_node(&attr,&dev->dir,kdev);
 	                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: fs/driverfs/inode.c:600:
+int driverfs_create_node(struct attribute * attr, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: fs/driverfs/inode.c:600:
+int driverfs_create_node(struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: fs/driverfs/inode.c:601:
+			 struct driver_dir_entry * parent, kdev_t kdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: fs/driverfs/inode.c:603:
+	struct dentry * dentry;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: fs/driverfs/inode.c:613:
+	dentry = get_dentry(parent->dentry,attr->name);
 	                                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#175: FILE: fs/driverfs/inode.c:614:
+	if (!IS_ERR(dentry)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: fs/driverfs/inode.c:615:
+		error = driverfs_mknod(parent->dentry->d_inode,dentry,
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: fs/driverfs/inode.c:616:
+				       attr->mode,kdev_t_to_nr(kdev));
 				                 ^

CHECK:BRACES: Unbalanced braces around else statement
#178: FILE: fs/driverfs/inode.c:617:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/device.h:349:
+extern int device_create_node(struct device *device, mode_t mode, kdev_t kdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#216: FILE: include/linux/driverfs_fs.h:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: include/linux/driverfs_fs.h:64:
+extern int driverfs_create_node(struct attribute * attr, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: include/linux/driverfs_fs.h:64:
+extern int driverfs_create_node(struct attribute * attr, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/driverfs_fs.h:64:
+extern int driverfs_create_node(struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: include/linux/driverfs_fs.h:65:
+				struct driver_dir_entry * parent, kdev_t kdev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 6 warnings, 5 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430183.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
