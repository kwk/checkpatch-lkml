WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#46: FILE: fs/fcntl.c:303:
+			err = fcntl_getlk(filp, (struct flock *) arg);
 			                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#46: FILE: fs/fcntl.c:303:
+			err = fcntl_getlk(filp, (struct flock *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#51: FILE: fs/fcntl.c:307:
+			err = fcntl_setlk(filp, cmd, (struct flock *) arg);
 			                  ^^^^

CHECK:SPACING: No space is necessary after a cast
#51: FILE: fs/fcntl.c:307:
+			err = fcntl_setlk(filp, cmd, (struct flock *) arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#60: FILE: fs/fcntl.c:389:
+			err = fcntl_getlk64(filp, (struct flock64 *) arg);
 			                    ^^^^

CHECK:SPACING: No space is necessary after a cast
#60: FILE: fs/fcntl.c:389:
+			err = fcntl_getlk64(filp, (struct flock64 *) arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#67: FILE: fs/fcntl.c:393:
+			err = fcntl_setlk64(filp, cmd, (struct flock64 *) arg);
 			                    ^^^^

CHECK:SPACING: No space is necessary after a cast
#67: FILE: fs/fcntl.c:393:
+			err = fcntl_setlk64(filp, cmd, (struct flock64 *) arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#79: FILE: fs/locks.c:1356:
+int fcntl_getlk(struct file *filp, struct flock *l)
                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#134: FILE: fs/locks.c:1418:
+int fcntl_setlk(struct file *filp, unsigned int cmd, struct flock *l)
                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#214: FILE: fs/locks.c:1506:
+int fcntl_getlk64(struct file *filp, struct flock64 *l)
                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#256: FILE: fs/locks.c:1556:
+int fcntl_setlk64(struct file *filp, unsigned int cmd, struct flock64 *l)
                                ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: include/linux/fs.h:579:
+extern int fcntl_getlk(struct file *, struct flock *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: include/linux/fs.h:580:
+extern int fcntl_setlk(struct file *, unsigned int, struct flock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#335: FILE: include/linux/fs.h:580:
+extern int fcntl_setlk(struct file *, unsigned int, struct flock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#335: FILE: include/linux/fs.h:580:
+extern int fcntl_setlk(struct file *, unsigned int, struct flock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct flock *' should also have an identifier name
#335: FILE: include/linux/fs.h:580:
+extern int fcntl_setlk(struct file *, unsigned int, struct flock *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: include/linux/fs.h:582:
+extern int fcntl_getlk64(struct file *, struct flock64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#339: FILE: include/linux/fs.h:582:
+extern int fcntl_getlk64(struct file *, struct flock64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct flock64 *' should also have an identifier name
#339: FILE: include/linux/fs.h:582:
+extern int fcntl_getlk64(struct file *, struct flock64 *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/fs.h:583:
+extern int fcntl_setlk64(struct file *, unsigned int, struct flock64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#340: FILE: include/linux/fs.h:583:
+extern int fcntl_setlk64(struct file *, unsigned int, struct flock64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#340: FILE: include/linux/fs.h:583:
+extern int fcntl_setlk64(struct file *, unsigned int, struct flock64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct flock64 *' should also have an identifier name
#340: FILE: include/linux/fs.h:583:
+extern int fcntl_setlk64(struct file *, unsigned int, struct flock64 *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 16 warnings, 8 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
