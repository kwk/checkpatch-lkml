WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urpN htlb-2.5.47-1/arch/i386/mm/hugetlbpage.c htlb-2.5.47-2/arch/i386/mm/hugetlbpage.c

CHECK:BRACES: braces {} should be used on all arms of this statement
#61: FILE: arch/i386/mm/hugetlbpage.c:60:
+		if (!inode) {
[...]
+		} else if (atomic_read(&inode->i_writecount)) {
[...]
+		} else if (check_size_prot(inode, len, prot, flag) < 0)
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#62: FILE: arch/i386/mm/hugetlbpage.c:61:
+			if (!capable(CAP_SYS_ADMIN) || !in_group_p(0))
[...]
+			else if (!(flag & IPC_CREAT))
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#66: FILE: arch/i386/mm/hugetlbpage.c:65:
+			else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*inode)...) over kmalloc(sizeof(struct inode)...)
#67: FILE: arch/i386/mm/hugetlbpage.c:66:
+				inode = kmalloc(sizeof(struct inode), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#68: FILE: arch/i386/mm/hugetlbpage.c:67:
+				if (!inode)
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#70: FILE: arch/i386/mm/hugetlbpage.c:69:
+				else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: arch/i386/mm/hugetlbpage.c:71:
+					int i;
+					for (i = 0; i < MAX_ID; ++i)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#73: FILE: arch/i386/mm/hugetlbpage.c:72:
+						if (!htlbpagek[i].key)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:BRACES: braces {} should be used on all arms of this statement
#152: FILE: arch/i386/mm/hugetlbpage.c:347:
+	if (IS_ERR(inode)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: arch/i386/mm/hugetlbpage.c:351:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 8 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
