WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
 hid-tmff.c   |  461 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/drivers/usb/input/Kconfig	Wed Feb 12 11:56:42 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#150: FILE: drivers/usb/input/hid-ff.c:41:
+extern int hid_tmff_init(struct hid_device* hid);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: drivers/usb/input/hid-ff.c:41:
+extern int hid_tmff_init(struct hid_device* hid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: drivers/usb/input/hid-tmff.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#193: FILE: drivers/usb/input/hid-tmff.c:26:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#194: FILE: drivers/usb/input/hid-tmff.c:27:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/usb/input/hid-tmff.c:43:
+#define DELAY_CALC(t,delay)		((t) + (delay)*HZ/1000)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#210: FILE: drivers/usb/input/hid-tmff.c:43:
+#define DELAY_CALC(t,delay)		((t) + (delay)*HZ/1000)
                            		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#210: FILE: drivers/usb/input/hid-tmff.c:43:
+#define DELAY_CALC(t,delay)		((t) + (delay)*HZ/1000)
                            		                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'effect' may be better as '(effect)' to avoid precedence issues
#221: FILE: drivers/usb/input/hid-tmff.c:54:
+#define CHECK_OWNERSHIP(effect) (current->pid == 0 \
+        || effect.owner == current->pid)

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/usb/input/hid-tmff.c:55:
+        || effect.owner == current->pid)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#222: FILE: drivers/usb/input/hid-tmff.c:55:
+#define CHECK_OWNERSHIP(effect) (current->pid == 0 \
+        || effect.owner == current->pid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/usb/input/hid-tmff.c:55:
+        || effect.owner == current->pid)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#224: FILE: drivers/usb/input/hid-tmff.c:57:
+#define TMFF_CHECK_ID(id)	((id) >= 0 && (id) < TMFF_EFFECTS)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#226: FILE: drivers/usb/input/hid-tmff.c:59:
+#define TMFF_CHECK_OWNERSHIP(i, l) \
+        (test_bit(EFFECT_USED, l->effects[i].flags) \
+        && CHECK_OWNERSHIP(l->effects[i]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#226: FILE: drivers/usb/input/hid-tmff.c:59:
+#define TMFF_CHECK_OWNERSHIP(i, l) \
+        (test_bit(EFFECT_USED, l->effects[i].flags) \
+        && CHECK_OWNERSHIP(l->effects[i]))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'l' may be better as '(l)' to avoid precedence issues
#226: FILE: drivers/usb/input/hid-tmff.c:59:
+#define TMFF_CHECK_OWNERSHIP(i, l) \
+        (test_bit(EFFECT_USED, l->effects[i].flags) \
+        && CHECK_OWNERSHIP(l->effects[i]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/usb/input/hid-tmff.c:60:
+        (test_bit(EFFECT_USED, l->effects[i].flags) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/usb/input/hid-tmff.c:60:
+        (test_bit(EFFECT_USED, l->effects[i].flags) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/usb/input/hid-tmff.c:61:
+        && CHECK_OWNERSHIP(l->effects[i]))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#228: FILE: drivers/usb/input/hid-tmff.c:61:
+        (test_bit(EFFECT_USED, l->effects[i].flags) \
+        && CHECK_OWNERSHIP(l->effects[i]))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/usb/input/hid-tmff.c:61:
+        && CHECK_OWNERSHIP(l->effects[i]))$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#253: FILE: drivers/usb/input/hid-tmff.c:86:
+	spinlock_t lock;             /* device-level lock. Having locks on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#254: FILE: drivers/usb/input/hid-tmff.c:87:
+	spinlock_t lock;             /* device-level lock. Having locks on
+					a per-effect basis could be nice, but

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#255: FILE: drivers/usb/input/hid-tmff.c:88:
+					isn't really necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#258: FILE: drivers/usb/input/hid-tmff.c:91:
+	unsigned long flags[1];      /* Contains various information about the
+					state of the driver for this device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#258: FILE: drivers/usb/input/hid-tmff.c:91:
+					state of the driver for this device */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*private)...) over kmalloc(sizeof(struct tmff_device)...)
#281: FILE: drivers/usb/input/hid-tmff.c:114:
+	private = kmalloc(sizeof(struct tmff_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: drivers/usb/input/hid-tmff.c:115:
+	if (!private) return -ENOMEM;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#298: FILE: drivers/usb/input/hid-tmff.c:131:
+			switch (field->usage[0].hid) {
+				case THRUSTMASTER_USAGE_RUMBLE_LR:
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_STRING: line length of 116 exceeds 100 columns
#301: FILE: drivers/usb/input/hid-tmff.c:134:
+						warn("ignoring THRUSTMASTER_USAGE_RUMBLE_LR with report_count < 2");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 134 exceeds 100 columns
#306: FILE: drivers/usb/input/hid-tmff.c:139:
+						warn("ignoring THRUSTMASTER_USAGE_RUMBLE_LR with logical_maximum == logical_minimum");

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#311: FILE: drivers/usb/input/hid-tmff.c:144:
+						warn("ignoring THRUSTMASTER_USAGE_RUMBLE_LR in other report");

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#316: FILE: drivers/usb/input/hid-tmff.c:149:
+						warn("ignoring duplicate THRUSTMASTER_USAGE_RUMBLE_LR");

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#327: FILE: drivers/usb/input/hid-tmff.c:160:
+					warn("ignoring unknown output usage %08x", field->usage[0].hid);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#331: FILE: drivers/usb/input/hid-tmff.c:164:
+			/* Fallthrough to here only when a valid usage is found */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#351: FILE: drivers/usb/input/hid-tmff.c:184:
+	info("Force feedback for ThrustMaster rumble pad devices by Zinx Verituse <zinx@epicsol.org>");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#405: FILE: drivers/usb/input/hid-tmff.c:238:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#415: FILE: drivers/usb/input/hid-tmff.c:248:
+	for (i=0; i<dev->ff_effects_max; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#415: FILE: drivers/usb/input/hid-tmff.c:248:
+	for (i=0; i<dev->ff_effects_max; ++i)
 	           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#418: FILE: drivers/usb/input/hid-tmff.c:251:
+	     /* NOTE: no need to lock here. The only times EFFECT_USED is
+		modified is when effects are uploaded or when an effect is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#420: FILE: drivers/usb/input/hid-tmff.c:253:
+		and perform ioctls on the same fd all at the same time */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#423: FILE: drivers/usb/input/hid-tmff.c:256:
+		if (current->pid == tmff->effects[i].owner
+		     && test_bit(EFFECT_USED, tmff->effects[i].flags))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#427: FILE: drivers/usb/input/hid-tmff.c:260:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#469: FILE: drivers/usb/input/hid-tmff.c:302:
+		for (id = 0; id < TMFF_EFFECTS && test_bit(EFFECT_USED, tmff->effects[id].flags); ++id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#469: FILE: drivers/usb/input/hid-tmff.c:302:
+		for (id = 0; id < TMFF_EFFECTS && test_bit(EFFECT_USED, tmff->effects[id].flags); ++id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#526: FILE: drivers/usb/input/hid-tmff.c:359:
+		if (events == 1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#528: FILE: drivers/usb/input/hid-tmff.c:361:
+		else {

CHECK:SPACING: No space is necessary after a cast
#564: FILE: drivers/usb/input/hid-tmff.c:397:
+	struct tmff_device *tmff = (struct tmff_device *) timer_data;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#584: FILE: drivers/usb/input/hid-tmff.c:417:
+		if (time_after(jiffies, effect->stop_at)) {
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#603: FILE: drivers/usb/input/hid-tmff.c:436:
+		switch (effect->effect.type) {
+			case FF_RUMBLE:
[...]
+			default:

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#609: FILE: drivers/usb/input/hid-tmff.c:442:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 21 warnings, 18 checks, 560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
