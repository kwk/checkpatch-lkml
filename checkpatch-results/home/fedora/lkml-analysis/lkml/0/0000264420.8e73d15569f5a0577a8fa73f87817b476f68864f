WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
--- linux-2.6.8-rc2-mm1-lch/include/asm-i386/cpu.h	28 Jul 2004 14:35:23 -0000	1.1.1.1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: include/asm-i386/smp.h:88:
+extern int __cpu_disable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/asm-i386/smp.h:89:
+extern void __cpu_die(unsigned int cpu);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#115: FILE: arch/i386/Kconfig:1171:
+config HOTPLUG_CPU
+	bool "Support for hot-pluggable CPUs (EXPERIMENTAL)"
+	depends on SMP && HOTPLUG && EXPERIMENTAL
+	---help---
+	  Say Y here to experiment with turning CPUs off and on.  CPUs
+	  can be controlled through /sys/devices/system/cpu.
+
+	  Say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#147: FILE: arch/i386/kernel/apic.c:1011:
+void __devinit disable_APIC_timer(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: arch/i386/kernel/irq.c:155:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'system_state == SYSTEM_RUNNING'
#238: FILE: arch/i386/kernel/irq.c:413:
+	if (cpu_is_offline(smp_processor_id())			\
+	    && (system_state == SYSTEM_RUNNING)			\
+	    && !irqs_stabilizing)				\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#239: FILE: arch/i386/kernel/irq.c:414:
+	if (cpu_is_offline(smp_processor_id())			\
+	    && (system_state == SYSTEM_RUNNING)			\

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#240: FILE: arch/i386/kernel/irq.c:415:
+	    && (system_state == SYSTEM_RUNNING)			\
+	    && !irqs_stabilizing)				\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#241: FILE: arch/i386/kernel/irq.c:416:
+		printk(KERN_ERR "IRQ %i on offline %i\n",	\

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: arch/i386/kernel/irq.c:1053:
+		cpumask_t mask;
+		if (irq == 2)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#279: FILE: arch/i386/kernel/irq.c:1057:
+		if (any_online_cpu(mask) == NR_CPUS) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: arch/i386/kernel/irq.c:1058:
+			printk("Breaking affinity for irq %i\n", irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#286: FILE: arch/i386/kernel/irq.c:1064:
+			printk("Cannot set affinity for irq %i\n", irq);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#289: FILE: arch/i386/kernel/irq.c:1067:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#293: FILE: arch/i386/kernel/irq.c:1071:
+	/* Ingo Molnar says: "after the IO-APIC masks have been redirected
+	   [note the nop - the interrupt-enable boundary on x86 is two

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#295: FILE: arch/i386/kernel/irq.c:1073:
+	   IPIs. After this point nothing is supposed to reach this CPU." */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#303: FILE: arch/i386/kernel/irq.c:1081:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#323: FILE: arch/i386/kernel/msr.c:263:
+static int __devinit msr_class_simple_device_add(int i)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#357: FILE: arch/i386/kernel/process.c:140:
+#include <asm/nmi.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#366: FILE: arch/i386/kernel/process.c:149:
+	 * it "work" for testing purposes. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: arch/i386/kernel/process.c:163:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#465: FILE: arch/i386/kernel/smp.c:533:
+	cpus = num_online_cpus()-1;
 	                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#515: FILE: arch/i386/kernel/smpboot.c:1150:
+	mb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#528: FILE: arch/i386/kernel/smpboot.c:1164:
+static int __devinit cpu_enable(unsigned int cpu)

WARNING:MEMORY_BARRIER: memory barrier without comment
#536: FILE: arch/i386/kernel/smpboot.c:1168:
+	wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: arch/i386/kernel/smpboot.c:1185:
+ ^I *$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#553: FILE: arch/i386/kernel/smpboot.c:1185:
+ ^I *$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#578: FILE: arch/i386/kernel/smpboot.c:1210:
+		schedule_timeout(HZ/10);
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/i386/kernel/smpboot.c:1212:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: arch/i386/kernel/smpboot.c:1212:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/i386/kernel/smpboot.c:1212:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#580: FILE: arch/i386/kernel/smpboot.c:1212:
+ 	printk(KERN_ERR "CPU %u didn't die...\n", cpu);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#585: FILE: arch/i386/kernel/smpboot.c:1217:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#591: FILE: arch/i386/kernel/smpboot.c:1223:
+	BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#595: FILE: arch/i386/kernel/smpboot.c:1227:
+int __devinit __cpu_up(unsigned int cpu)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#599: FILE: arch/i386/kernel/smpboot.c:1231:
+		printk(KERN_DEBUG "skipping cpu%d, didn't come online\n", cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 25 warnings, 9 checks, 464 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
