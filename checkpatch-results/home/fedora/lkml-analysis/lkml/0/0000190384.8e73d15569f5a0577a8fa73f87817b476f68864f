WARNING:TYPO_SPELLING: 'Trival' may be misspelled - perhaps 'Trivial'?
#32: 
> > Trival patch for CPU hotplug. In CPU identify  part, only did cleaup
    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#66: 
Trival patch for CPU hotplug. In CPU identify  part, only did cleaup for intel

WARNING:TYPO_SPELLING: 'Trival' may be misspelled - perhaps 'Trivial'?
#66: 
Trival patch for CPU hotplug. In CPU identify  part, only did cleaup for intel
^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#93: FILE: arch/i386/kernel/apic.c:408:
+void __devinit setup_local_APIC(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#102: FILE: arch/i386/kernel/apic.c:679:
+static void __devinit apic_pm_activate(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#111: FILE: arch/i386/kernel/apic.c:880:
+static unsigned int __devinit get_8254_timer_count(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#120: FILE: arch/i386/kernel/apic.c:899:
+static void __devinit wait_8254_wraparound(void)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#129: FILE: arch/i386/kernel/apic.c:919:
+void (*wait_timer_tick)(void) __devinitdata = wait_8254_wraparound;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#138: FILE: arch/i386/kernel/apic.c:955:
+static void __devinit setup_APIC_timer(unsigned int clocks)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#147: FILE: arch/i386/kernel/apic.c:1068:
+void __devinit setup_secondary_APIC_clock(void)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#161: FILE: arch/i386/kernel/cpu/common.c:27:
+static int cachesize_override __devinitdata = -1;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#162: FILE: arch/i386/kernel/cpu/common.c:28:
+static int disable_x86_fxsr __devinitdata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#162: FILE: arch/i386/kernel/cpu/common.c:28:
+static int disable_x86_fxsr __devinitdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#163: FILE: arch/i386/kernel/cpu/common.c:29:
+static int disable_x86_serial_nr __devinitdata = 1;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#172: FILE: arch/i386/kernel/cpu/common.c:62:
+int __devinit get_model_name(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#181: FILE: arch/i386/kernel/cpu/common.c:92:
+void __devinit display_cacheinfo(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#190: FILE: arch/i386/kernel/cpu/common.c:133:
+static char __devinit *table_lookup_model(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#199: FILE: arch/i386/kernel/cpu/common.c:154:
+void __devinit get_cpu_vendor(struct cpuinfo_x86 *c, int early)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#208: FILE: arch/i386/kernel/cpu/common.c:205:
+static int __devinit have_cpuid_p(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#217: FILE: arch/i386/kernel/cpu/common.c:248:
+void __devinit generic_identify(struct cpuinfo_x86 * c)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: arch/i386/kernel/cpu/common.c:248:
+void __devinit generic_identify(struct cpuinfo_x86 * c)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#226: FILE: arch/i386/kernel/cpu/common.c:295:
+static void __devinit squash_the_stupid_serial_number(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#235: FILE: arch/i386/kernel/cpu/common.c:323:
+void __devinit identify_cpu(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#244: FILE: arch/i386/kernel/cpu/common.c:434:
+void __devinit detect_ht(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#253: FILE: arch/i386/kernel/cpu/common.c:489:
+void __devinit print_cpu_info(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#262: FILE: arch/i386/kernel/cpu/common.c:512:
+cpumask_t cpu_initialized __devinitdata = CPU_MASK_NONE;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#271: FILE: arch/i386/kernel/cpu/common.c:559:
+void __devinit cpu_init(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#283: FILE: arch/i386/kernel/cpu/intel.c:31:
+void __devinit early_intel_workaround(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#292: FILE: arch/i386/kernel/cpu/intel.c:46:
+int __devinit ppro_with_ram_bug(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#301: FILE: arch/i386/kernel/cpu/intel.c:64:
+static void __devinit Intel_errata_workarounds(struct cpuinfo_x86 *c)

CHECK:CAMELCASE: Avoid CamelCase: <Intel_errata_workarounds>
#301: FILE: arch/i386/kernel/cpu/intel.c:64:
+static void __devinit Intel_errata_workarounds(struct cpuinfo_x86 *c)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#310: FILE: arch/i386/kernel/cpu/intel.c:83:
+static int __devinit num_cpu_cores(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#319: FILE: arch/i386/kernel/cpu/intel.c:101:
+static void __devinit init_intel(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#328: FILE: arch/i386/kernel/cpu/intel.c:207:
+static struct cpu_dev intel_cpu_dev __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#340: FILE: arch/i386/kernel/cpu/intel_cacheinfo.c:31:
+static struct _cache_table cache_table[] __devinitdata =

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#349: FILE: arch/i386/kernel/cpu/intel_cacheinfo.c:163:
+unsigned int __devinit init_intel_cacheinfo(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#361: FILE: arch/i386/kernel/cpu/mcheck/mce.c:19:
+int mce_disabled __devinitdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#361: FILE: arch/i386/kernel/cpu/mcheck/mce.c:19:
+int mce_disabled __devinitdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#370: FILE: arch/i386/kernel/cpu/mcheck/mce.c:34:
+void __devinit mcheck_init(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#382: FILE: arch/i386/kernel/cpu/mcheck/p4.c:81:
+static void __devinit intel_init_thermal(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#391: FILE: arch/i386/kernel/cpu/mcheck/p4.c:235:
+void __devinit intel_p4_mcheck_init(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#403: FILE: arch/i386/kernel/cpu/mcheck/p5.c:32:
+void __devinit intel_p5_mcheck_init(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#415: FILE: arch/i386/kernel/cpu/mcheck/p6.c:83:
+void __devinit intel_p6_mcheck_init(struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#427: FILE: arch/i386/kernel/process.c:259:
+void __devinit select_idle_routine(const struct cpuinfo_x86 *c)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#439: FILE: arch/i386/kernel/setup.c:69:
+int disable_pse __devinitdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#439: FILE: arch/i386/kernel/setup.c:69:
+int disable_pse __devinitdata = 0;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#451: FILE: arch/i386/kernel/smpboot.c:62:
+static int __devinitdata smp_b_stepping;

WARNING:MISPLACED_INIT: __devinitdata should be placed after smp_b_stepping
#451: FILE: arch/i386/kernel/smpboot.c:62:
+static int __devinitdata smp_b_stepping;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#460: FILE: arch/i386/kernel/smpboot.c:110:
+static unsigned long __devinit setup_trampoline(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#469: FILE: arch/i386/kernel/smpboot.c:140:
+static void __devinit smp_store_cpu_info(int id)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#478: FILE: arch/i386/kernel/smpboot.c:334:
+static void __devinit smp_callin(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#487: FILE: arch/i386/kernel/smpboot.c:460:
+static void __devinit start_secondary(void *unused)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#496: FILE: arch/i386/kernel/smpboot.c:505:
+void __devinit initialize_secondary(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#505: FILE: arch/i386/kernel/smpboot.c:620:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#514: FILE: arch/i386/kernel/smpboot.c:666:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#523: FILE: arch/i386/kernel/smpboot.c:802:
+static int __devinit do_boot_cpu(int apicid)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#535: FILE: arch/i386/kernel/timers/timer_tsc.c:36:
+int tsc_disable __devinitdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#535: FILE: arch/i386/kernel/timers/timer_tsc.c:36:
+int tsc_disable __devinitdata = 0;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 52 warnings, 1 checks, 372 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
