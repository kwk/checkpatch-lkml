WARNING:LEADING_SPACE: please, no spaces at the start of a line
#36: FILE: fs/reiserfs/file.c:594:
+    int logit = reiserfs_file_data_log(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#37: FILE: fs/reiserfs/file.c:595:
+    struct super_block *s = inode->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#38: FILE: fs/reiserfs/file.c:596:
+    int bh_per_page = PAGE_CACHE_SIZE / s->s_blocksize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#39: FILE: fs/reiserfs/file.c:597:
+    struct reiserfs_transaction_handle th;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#40: FILE: fs/reiserfs/file.c:598:
+    struct reiserfs_transaction_handle th;
+    th.t_trans_id = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: fs/reiserfs/file.c:598:
+    th.t_trans_id = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: fs/reiserfs/file.c:602:
+    if (logit) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: fs/reiserfs/file.c:606:
+    }$

WARNING:TABSTOP: Statements should start on a tabstop
#57: FILE: fs/reiserfs/file.c:620:
+	    if (logit) {

WARNING:TABSTOP: Statements should start on a tabstop
#60: FILE: fs/reiserfs/file.c:623:
+	    } else if (!buffer_dirty(bh)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/reiserfs/file.c:635:
+    if (logit) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/reiserfs/file.c:638:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/reiserfs/inode.c:2150:
+    int checked = PageChecked(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/reiserfs/inode.c:2151:
+    struct reiserfs_transaction_handle th;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/reiserfs/inode.c:2152:
+    struct super_block *s = inode->i_sb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/reiserfs/inode.c:2153:
+    int bh_per_page = PAGE_CACHE_SIZE / s->s_blocksize;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#88: FILE: fs/reiserfs/inode.c:2154:
+    int bh_per_page = PAGE_CACHE_SIZE / s->s_blocksize;
+    th.t_trans_id = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/reiserfs/inode.c:2154:
+    th.t_trans_id = 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: fs/reiserfs/inode.c:2163:
+	create_empty_buffers(page, s->s_blocksize,
 	                    (1 << BH_Dirty) | (1 << BH_Uptodate));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/reiserfs/inode.c:2186:
+    block = page->index << (PAGE_CACHE_SHIFT - s->s_blocksize_bits) ;$

WARNING:SPACING: space prohibited before semicolon
#106: FILE: fs/reiserfs/inode.c:2186:
+    block = page->index << (PAGE_CACHE_SHIFT - s->s_blocksize_bits) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: fs/reiserfs/inode.c:2190:
+	if ((checked || buffer_dirty(bh)) && (!buffer_mapped(bh) ||
 	   (buffer_mapped(bh) && bh->b_blocknr == 0))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/reiserfs/inode.c:2209:
+    if (checked) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/reiserfs/inode.c:2214:
+    }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#137: FILE: fs/reiserfs/inode.c:2223:
+	if (checked) {
+	    reiserfs_prepare_for_journal(s, bh, 1);

WARNING:TABSTOP: Statements should start on a tabstop
#140: FILE: fs/reiserfs/inode.c:2226:
+	    continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/reiserfs/inode.c:2246:
+    if (checked) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/reiserfs/inode.c:2249:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/reiserfs/inode.c:2556:
+    if (offset == 0)$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#193: FILE: fs/reiserfs/inode.c:2592:
+static int reiserfs_set_page_dirty(struct page *page) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: fs/reiserfs/inode.c:2593:
+    struct inode *inode = page->mapping->host;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: fs/reiserfs/inode.c:2594:
+    struct inode *inode = page->mapping->host;
+    if (reiserfs_file_data_log(inode)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: fs/reiserfs/inode.c:2594:
+    if (reiserfs_file_data_log(inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/reiserfs/inode.c:2597:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/reiserfs/inode.c:2598:
+    return __set_page_dirty_buffers(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/reiserfs/inode.c:2618:
+    WARN_ON(PageChecked(page));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/reiserfs/inode.c:2724:
+    .direct_IO = reiserfs_direct_IO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/reiserfs/inode.c:2725:
+    .set_page_dirty = reiserfs_set_page_dirty,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: fs/reiserfs/journal.c:1546:
+    int limit = 256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: fs/reiserfs/journal.c:1554:
+    if (reiserfs_data_log(s))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: fs/reiserfs/journal.c:1557:
+    for(i = 0 ; i < 256 && len < limit ; i++) {$

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: fs/reiserfs/journal.c:1557:
+    for(i = 0 ; i < 256 && len < limit ; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/reiserfs/journal.c:3486:
+      char *addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/reiserfs/journal.c:3487:
+      struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/reiserfs/journal.c:3491:
+      page = cn->bh->b_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/reiserfs/journal.c:3492:
+      addr = kmap(page);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: fs/reiserfs/journal.c:3493:
+      memcpy(tmp_bh->b_data, addr, cn->bh->b_size) ; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/reiserfs/journal.c:3493:
+      memcpy(tmp_bh->b_data, addr, cn->bh->b_size) ; $

WARNING:SPACING: space prohibited before semicolon
#266: FILE: fs/reiserfs/journal.c:3493:
+      memcpy(tmp_bh->b_data, addr, cn->bh->b_size) ; 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: fs/reiserfs/journal.c:3494:
+      kunmap(page);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#279: FILE: fs/reiserfs/stree.c:1498:
+static void
+unmap_buffers(struct page *page, loff_t pos) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/reiserfs/stree.c:1500:
+    struct buffer_head *bh ;$

WARNING:SPACING: space prohibited before semicolon
#281: FILE: fs/reiserfs/stree.c:1500:
+    struct buffer_head *bh ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/reiserfs/stree.c:1501:
+    struct buffer_head *head ;$

WARNING:SPACING: space prohibited before semicolon
#282: FILE: fs/reiserfs/stree.c:1501:
+    struct buffer_head *head ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/reiserfs/stree.c:1502:
+    struct buffer_head *next ;$

WARNING:SPACING: space prohibited before semicolon
#283: FILE: fs/reiserfs/stree.c:1502:
+    struct buffer_head *next ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/reiserfs/stree.c:1503:
+    unsigned long tail_index ;$

WARNING:SPACING: space prohibited before semicolon
#284: FILE: fs/reiserfs/stree.c:1503:
+    unsigned long tail_index ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/reiserfs/stree.c:1504:
+    unsigned long cur_index ;$

WARNING:SPACING: space prohibited before semicolon
#285: FILE: fs/reiserfs/stree.c:1504:
+    unsigned long cur_index ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/reiserfs/stree.c:1506:
+    if (page) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#288: FILE: fs/reiserfs/stree.c:1507:
+	if (page_has_buffers(page)) {
+	    tail_index = pos & (PAGE_CACHE_SIZE - 1) ;

WARNING:SPACING: space prohibited before semicolon
#289: FILE: fs/reiserfs/stree.c:1508:
+	    tail_index = pos & (PAGE_CACHE_SIZE - 1) ;

WARNING:SPACING: space prohibited before semicolon
#290: FILE: fs/reiserfs/stree.c:1509:
+	    cur_index = 0 ;

WARNING:SPACING: space prohibited before semicolon
#291: FILE: fs/reiserfs/stree.c:1510:
+	    head = page_buffers(page) ;

WARNING:SPACING: space prohibited before semicolon
#292: FILE: fs/reiserfs/stree.c:1511:
+	    bh = head ;

WARNING:TABSTOP: Statements should start on a tabstop
#293: FILE: fs/reiserfs/stree.c:1512:
+	    do {

WARNING:SPACING: space prohibited before semicolon
#294: FILE: fs/reiserfs/stree.c:1513:
+		next = bh->b_this_page ;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#297: FILE: fs/reiserfs/stree.c:1516:
+		/* we want to unmap the buffers that contain the tail, and
+		** all the buffers after it (since the tail must be at the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited before semicolon
#302: FILE: fs/reiserfs/stree.c:1521:
+		cur_index += bh->b_size ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#303: FILE: fs/reiserfs/stree.c:1522:
+		if (cur_index > tail_index) {
+		    reiserfs_unmap_buffer(bh) ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#303: FILE: fs/reiserfs/stree.c:1522:
+		if (cur_index > tail_index) {
+		    reiserfs_unmap_buffer(bh) ;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#304: FILE: fs/reiserfs/stree.c:1523:
+		    reiserfs_unmap_buffer(bh) ;

WARNING:SPACING: space prohibited before semicolon
#306: FILE: fs/reiserfs/stree.c:1525:
+		bh = next ;

WARNING:TABSTOP: Statements should start on a tabstop
#307: FILE: fs/reiserfs/stree.c:1526:
+	    } while (bh != head) ;

WARNING:SPACING: space prohibited before semicolon
#307: FILE: fs/reiserfs/stree.c:1526:
+	    } while (bh != head) ;

WARNING:TABSTOP: Statements should start on a tabstop
#308: FILE: fs/reiserfs/stree.c:1527:
+	    if ( PAGE_SIZE == bh->b_size ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#308: FILE: fs/reiserfs/stree.c:1527:
+	    if ( PAGE_SIZE == bh->b_size ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#308: FILE: fs/reiserfs/stree.c:1527:
+	    if ( PAGE_SIZE == bh->b_size ) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#308: FILE: fs/reiserfs/stree.c:1527:
+	    if ( PAGE_SIZE == bh->b_size ) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: fs/reiserfs/stree.c:1529:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/reiserfs/stree.c:1531:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/reiserfs/stree.c:1625:
+    loff_t tail_pos = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: include/linux/reiserfs_fs.h:1757:
+    if (reiserfs_data_log(inode->i_sb) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: include/linux/reiserfs_fs.h:1758:
+    if (reiserfs_data_log(inode->i_sb) ||
+       (REISERFS_I(inode)->i_flags & i_data_log))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: include/linux/reiserfs_fs.h:1758:
+       (REISERFS_I(inode)->i_flags & i_data_log))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: include/linux/reiserfs_fs.h:1759:
+        return 1 ;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: include/linux/reiserfs_fs.h:1759:
+        return 1 ;$

WARNING:SPACING: space prohibited before semicolon
#418: FILE: include/linux/reiserfs_fs.h:1759:
+        return 1 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: include/linux/reiserfs_fs.h:1760:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#419: FILE: include/linux/reiserfs_fs.h:1760:
+    return 0 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: include/linux/reiserfs_fs_i.h:28:
+    i_data_log^I               =  0x0200,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 83 warnings, 3 checks, 356 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
