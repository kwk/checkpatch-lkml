WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> >  >     Adam> This problem was annoying me a few months ago so I coded up

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'task' - possible side-effects?
#106: FILE: arch/i386/kernel/traps.c:96:
+#define valid_stack_ptr(task, p) \
+	((p > (unsigned long)task->thread_info) && \
+	 (p < (unsigned long)task->thread_info+THREAD_SIZE))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#106: FILE: arch/i386/kernel/traps.c:96:
+#define valid_stack_ptr(task, p) \
+	((p > (unsigned long)task->thread_info) && \
+	 (p < (unsigned long)task->thread_info+THREAD_SIZE))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#106: FILE: arch/i386/kernel/traps.c:96:
+#define valid_stack_ptr(task, p) \
+	((p > (unsigned long)task->thread_info) && \
+	 (p < (unsigned long)task->thread_info+THREAD_SIZE))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#106: FILE: arch/i386/kernel/traps.c:96:
+#define valid_stack_ptr(task, p) \
+	((p > (unsigned long)task->thread_info) && \
+	 (p < (unsigned long)task->thread_info+THREAD_SIZE))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: arch/i386/kernel/traps.c:98:
+	 (p < (unsigned long)task->thread_info+THREAD_SIZE))
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: arch/i386/kernel/traps.c:104:
+	printk("              ");

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#116: FILE: arch/i386/kernel/traps.c:106:
+		if ((i - start) && ((i - start)%24 == 0))
 		                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: arch/i386/kernel/traps.c:107:
+			printk("\n              ");

CHECK:SPACING: No space is necessary after a cast
#118: FILE: arch/i386/kernel/traps.c:108:
+		printk("%08lx ", *(unsigned long *) i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: arch/i386/kernel/traps.c:108:
+		printk("%08lx ", *(unsigned long *) i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: arch/i386/kernel/traps.c:110:
+	printk("\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: arch/i386/kernel/traps.c:113:
+void show_trace(struct task_struct *task, unsigned long * stack)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: arch/i386/kernel/traps.c:121:
+		printk("Stack pointer is garbage, not printing trace\n");

CHECK:SPACING: No space is necessary after a cast
#140: FILE: arch/i386/kernel/traps.c:130:
+		ebp = *(unsigned long *) task->thread.esp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: arch/i386/kernel/traps.c:133:
+	printk("Call Trace:\n");

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/i386/kernel/traps.c:134:
+	show_stack_frame((unsigned long) stack, ebp+4);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: arch/i386/kernel/traps.c:134:
+	show_stack_frame((unsigned long) stack, ebp+4);
 	                                           ^

CHECK:SPACING: No space is necessary after a cast
#146: FILE: arch/i386/kernel/traps.c:136:
+		addr = *(unsigned long *) (ebp + 4);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: arch/i386/kernel/traps.c:137:
+		printk(" [<%08lx>] ", addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: arch/i386/kernel/traps.c:139:
+		printk("\n");

CHECK:SPACING: No space is necessary after a cast
#152: FILE: arch/i386/kernel/traps.c:142:
+		show_stack_frame(ebp + 8, (*(unsigned long *) ebp) + 4);

CHECK:SPACING: No space is necessary after a cast
#153: FILE: arch/i386/kernel/traps.c:143:
+		ebp = *(unsigned long *) ebp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/i386/kernel/traps.c:156:
+	printk("Call Trace:\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 13 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
