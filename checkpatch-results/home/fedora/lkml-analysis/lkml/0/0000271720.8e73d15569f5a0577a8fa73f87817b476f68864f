WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> /usr/src/25/kernel/power/swsusp.c:841: undefined reference to `disable_nonboot_cpus'

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#48: 
noone should try to freeze_processes() when thats not implemented, we
^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#48: 
noone should try to freeze_processes() when thats not implemented, we
                                            ^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#75: FILE: include/linux/suspend.h:71:
+static inline int freeze_processes(void) { BUG(); }

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/linux/suspend.h:76:
+extern void disable_nonboot_cpus(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: include/linux/suspend.h:77:
+extern void enable_nonboot_cpus(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: kernel/power/swsusp.c:854:
+		printk("Suspending devices... ");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#138: FILE: kernel/power/swsusp.c:855:
+		if ((res = device_suspend(3))==0) {
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#138: FILE: kernel/power/swsusp.c:855:
+		if ((res = device_suspend(3))==0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: kernel/power/smp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#183: FILE: kernel/power/smp.c:16:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: kernel/power/smp.c:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#189: FILE: kernel/power/smp.c:22:
+static void smp_pause(void * data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: kernel/power/smp.c:25:
+	struct saved_context ctxt;
+	__save_processor_state(&ctxt);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: kernel/power/smp.c:26:
+	printk("Sleeping in:\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: kernel/power/smp.c:30:
+^I^I/* FIXME: restore takes place at random piece inside this. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#198: FILE: kernel/power/smp.c:31:
+		/* FIXME: restore takes place at random piece inside this. 
+		   This should probably be written in assembly, and

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: kernel/power/smp.c:49:
+	printk("Freezing CPUs (at %d)", smp_processor_id());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: kernel/power/smp.c:54:
+	printk("...");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#222: FILE: kernel/power/smp.c:55:
+	BUG_ON(smp_processor_id() != 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#225: FILE: kernel/power/smp.c:58:
+	 * "idle" thread (or we deadlock). Is that guaranteed? */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: kernel/power/smp.c:67:
+	printk("ok\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: kernel/power/smp.c:72:
+	printk("Restarting CPUs");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: kernel/power/smp.c:78:
+	printk("...");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: kernel/power/smp.c:81:
+	printk("ok\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#250: FILE: kernel/power/smp.c:83:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: kernel/power/smp.c:85:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 18 warnings, 5 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271720.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
