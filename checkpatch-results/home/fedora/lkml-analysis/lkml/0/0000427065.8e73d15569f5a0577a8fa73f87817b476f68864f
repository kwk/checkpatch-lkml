WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#32: 
was a seperate version of a patch similar to this which implemented 
      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN linux-2.5.36/arch/i386/kernel/cpuid.c linux-2.5.36-bk/arch/i386/kernel/cpuid.c

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#82: FILE: arch/i386/kernel/cpuid.c:121:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#82: FILE: arch/i386/kernel/cpuid.c:121:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/kernel/cpuid.c:121:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#91: FILE: arch/i386/kernel/cpuid.c:139:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

CHECK:SPACING: No space is necessary after a cast
#91: FILE: arch/i386/kernel/cpuid.c:139:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/i386/kernel/cpuid.c:139:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/i386/kernel/cpuid.c:162:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/i386/kernel/cpuid.c:163:
+  char devname[24];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/i386/kernel/cpuid.c:165:
+  if (register_chrdev(CPUID_MAJOR, "cpu/%d/cpuid", &cpuid_fops)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#103: FILE: arch/i386/kernel/cpuid.c:165:
+  if (register_chrdev(CPUID_MAJOR, "cpu/%d/cpuid", &cpuid_fops)) {
     printk(KERN_ERR "cpuid: unable to get major %d for cpuid\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#109: FILE: arch/i386/kernel/cpuid.c:171:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#109: FILE: arch/i386/kernel/cpuid.c:171:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/i386/kernel/cpuid.c:171:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#109: FILE: arch/i386/kernel/cpuid.c:171:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/i386/kernel/cpuid.c:172:
+  if (!devfs_handles) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#110: FILE: arch/i386/kernel/cpuid.c:172:
+  if (!devfs_handles) {
+    printk(KERN_ERR "cpuid: unable to allocate memory for devfs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/i386/kernel/cpuid.c:173:
+    printk(KERN_ERR "cpuid: unable to allocate memory for devfs\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#111: FILE: arch/i386/kernel/cpuid.c:173:
+    printk(KERN_ERR "cpuid: unable to allocate memory for devfs\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#111: FILE: arch/i386/kernel/cpuid.c:173:
+  if (!devfs_handles) {
+    printk(KERN_ERR "cpuid: unable to allocate memory for devfs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/i386/kernel/cpuid.c:174:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/i386/kernel/cpuid.c:175:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/i386/kernel/cpuid.c:177:
+  for (i = 0; i < num_online_cpus(); ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#115: FILE: arch/i386/kernel/cpuid.c:177:
+  for (i = 0; i < num_online_cpus(); ++i)
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#115: FILE: arch/i386/kernel/cpuid.c:177:
+  for (i = 0; i < num_online_cpus(); ++i)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/i386/kernel/cpuid.c:178:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/i386/kernel/cpuid.c:179:
+    snprintf(devname, 24, "cpu/%i/cpuid", i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/cpuid.c:180:
+    devfs_handles[i] = devfs_register(NULL, devname, DEVFS_FL_DEFAULT, CPUID_MAJOR, i,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/i386/kernel/cpuid.c:181:
+ ^I^I^I^I      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: arch/i386/kernel/cpuid.c:181:
+ ^I^I^I^I      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: arch/i386/kernel/cpuid.c:181:
+    devfs_handles[i] = devfs_register(NULL, devname, DEVFS_FL_DEFAULT, CPUID_MAJOR, i,
+ 				      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: arch/i386/kernel/cpuid.c:181:
+ 				      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/i386/kernel/cpuid.c:181:
+ ^I^I^I^I      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#119: FILE: arch/i386/kernel/cpuid.c:181:
+ 				      S_IFCHR | S_IRUGO, &cpuid_fops, (void *) i + 1);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/i386/kernel/cpuid.c:182:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/i386/kernel/cpuid.c:189:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/cpuid.c:191:
+  unregister_chrdev(CPUID_MAJOR, "cpu/%d/cpuid");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/kernel/cpuid.c:193:
+  for (i = 0; i < num_online_cpus(); ++i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#132: FILE: arch/i386/kernel/cpuid.c:193:
+  for (i = 0; i < num_online_cpus(); ++i)
+    devfs_unregister(devfs_handles[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/kernel/cpuid.c:194:
+    devfs_unregister(devfs_handles[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/cpuid.c:196:
+  kfree(devfs_handles);$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#174: FILE: arch/i386/kernel/msr.c:195:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

CHECK:SPACING: No space is necessary after a cast
#174: FILE: arch/i386/kernel/msr.c:195:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/kernel/msr.c:195:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#183: FILE: arch/i386/kernel/msr.c:220:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

CHECK:SPACING: No space is necessary after a cast
#183: FILE: arch/i386/kernel/msr.c:220:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/i386/kernel/msr.c:220:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#192: FILE: arch/i386/kernel/msr.c:240:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

CHECK:SPACING: No space is necessary after a cast
#192: FILE: arch/i386/kernel/msr.c:240:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/i386/kernel/msr.c:240:
+  int cpu = file->private_data ? (int) file->private_data - 1 : minor(file->f_dentry->d_inode->i_rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/i386/kernel/msr.c:264:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/i386/kernel/msr.c:265:
+  char devname[24];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/i386/kernel/msr.c:267:
+  if (register_chrdev(MSR_MAJOR, "cpu/%d/msr", &msr_fops)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#204: FILE: arch/i386/kernel/msr.c:267:
+  if (register_chrdev(MSR_MAJOR, "cpu/%d/msr", &msr_fops)) {
     printk(KERN_ERR "msr: unable to get major %d for msr\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#211: FILE: arch/i386/kernel/msr.c:273:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#211: FILE: arch/i386/kernel/msr.c:273:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/msr.c:273:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#211: FILE: arch/i386/kernel/msr.c:273:
+  devfs_handles = (devfs_handle_t *) kmalloc(num_online_cpus() * sizeof(devfs_handle_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/i386/kernel/msr.c:274:
+  if (!devfs_handles) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#212: FILE: arch/i386/kernel/msr.c:274:
+  if (!devfs_handles) {
+    printk(KERN_ERR "msr: unable to allocate memory for devfs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/i386/kernel/msr.c:275:
+    printk(KERN_ERR "msr: unable to allocate memory for devfs\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#213: FILE: arch/i386/kernel/msr.c:275:
+    printk(KERN_ERR "msr: unable to allocate memory for devfs\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#213: FILE: arch/i386/kernel/msr.c:275:
+  if (!devfs_handles) {
+    printk(KERN_ERR "msr: unable to allocate memory for devfs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/i386/kernel/msr.c:276:
+    return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/i386/kernel/msr.c:277:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/i386/kernel/msr.c:279:
+  for (i = 0; i < num_online_cpus(); ++i)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#217: FILE: arch/i386/kernel/msr.c:279:
+  for (i = 0; i < num_online_cpus(); ++i)
+  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#217: FILE: arch/i386/kernel/msr.c:279:
+  for (i = 0; i < num_online_cpus(); ++i)
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/i386/kernel/msr.c:280:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/i386/kernel/msr.c:281:
+    snprintf(devname, 24, "cpu/%i/msr", i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/kernel/msr.c:282:
+    devfs_handles[i] = devfs_register(NULL, devname, DEVFS_FL_DEFAULT, MSR_MAJOR, i,$

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/i386/kernel/msr.c:283:
+				      S_IFCHR | S_IRUGO | S_IWUSR, &msr_fops, (void *) i + 1);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#221: FILE: arch/i386/kernel/msr.c:283:
+				      S_IFCHR | S_IRUGO | S_IWUSR, &msr_fops, (void *) i + 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/msr.c:284:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/i386/kernel/msr.c:291:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/i386/kernel/msr.c:293:
+  unregister_chrdev(MSR_MAJOR, "cpu/%d/msr");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/kernel/msr.c:295:
+  for (i = 0; i < num_online_cpus(); ++i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#234: FILE: arch/i386/kernel/msr.c:295:
+  for (i = 0; i < num_online_cpus(); ++i)
+    devfs_unregister(devfs_handles[i]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/kernel/msr.c:296:
+    devfs_unregister(devfs_handles[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/i386/kernel/msr.c:298:
+  kfree(devfs_handles);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 68 warnings, 10 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
