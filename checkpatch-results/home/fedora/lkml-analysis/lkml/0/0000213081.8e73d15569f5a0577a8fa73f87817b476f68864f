WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
- [DVB] dvb-core: fix handling of discontinuity indicator in section filter,

WARNING:TYPO_SPELLING: 'frequeny' may be misspelled - perhaps 'frequency'?
#37: 
- [DVB] dvb-core: Fixed slow tuning problems, remove frequeny bending support from
                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:255:
+**  - end of section A and start of section B $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:257:
+**  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#74: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:313:
+		if(feed->pusi_seen)
 		dvb_dmx_swfilter_section_feed(feed);

ERROR:SPACING: space required before the open parenthesis '('
#74: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:313:
+		if(feed->pusi_seen)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#78: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:317:
+			printk("dvb_demux.c pusi not seen, discarding section data\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[4] > 0'
#104: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:346:
+		if ((buf[4] > 0) && (buf[5] & 0x80))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#116: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:358:
+		/* Discontinuity detected. Reset pusi_seen = 0 to
+		** stop feeding of suspicious data until next PUSI=1 arrives

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:96:
+        int pusi_seen; /* prevents feeding of garbage from previous section */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:96:
+        int pusi_seen; /* prevents feeding of garbage from previous section */$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#203: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:93:
+struct dvb_frontend_private {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:117:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#231: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:120:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#231: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:120:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:139:
+	memcpy (&e->parameters, &fepriv->parameters,

CHECK:SPACING: No space is necessary after a cast
#250: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:158:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#250: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:158:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:179:
+		if (down_interruptible (&fepriv->sem))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&fepriv->sem'
#266: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:179:
+		if (down_interruptible (&fepriv->sem))

CHECK:SPACING: No space is necessary after a cast
#276: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:237:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#276: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:237:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:258:
+		switch(fepriv->auto_sub_step) {

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#313: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:267:
+			fepriv->inversion = (fepriv->inversion == INVERSION_OFF) ? INVERSION_ON : INVERSION_OFF;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#319: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:272:
+			if (fepriv->lnb_drift == 0) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#328: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:279:
+			if (fepriv->lnb_drift == 0) break;

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#333: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:282:
+			fepriv->inversion = (fepriv->inversion == INVERSION_OFF) ? INVERSION_ON : INVERSION_OFF;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#347: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:293:
+		if (!ready) fepriv->auto_sub_step++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fepriv->auto_step == fepriv->started_auto_step'
#354: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:298:
+	if ((fepriv->auto_step == fepriv->started_auto_step) &&
+	    (fepriv->auto_sub_step == 0) && check_wrapped) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fepriv->auto_sub_step == 0'
#354: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:298:
+	if ((fepriv->auto_step == fepriv->started_auto_step) &&
+	    (fepriv->auto_sub_step == 0) && check_wrapped) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#363: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:305:
+		__FUNCTION__, fepriv->lnb_drift, fepriv->inversion,

CHECK:SPACING: No space is necessary after a cast
#389: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:324:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#389: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:324:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

CHECK:SPACING: No space is necessary after a cast
#407: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:338:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#407: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:338:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:349:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#420: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:349:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

CHECK:SPACING: No space is necessary after a cast
#431: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:361:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#431: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:361:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#479: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:411:
+			if (s != fepriv->status) {
 			dvb_frontend_add_event (fe, s);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fepriv->max_drift == 0'
#528: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:447:
+		if ((fepriv->state & FESTATE_LOSTLOCK) &&
+		    (fe->ops->info.caps & FE_CAN_RECOVER) && (fepriv->max_drift == 0)) {

CHECK:SPACING: No space is necessary after a cast
#610: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:523:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#610: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:523:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:538:
+		init_MUTEX (&fepriv->sem);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#639: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:546:
+	ret = wait_event_interruptible(fepriv->wait_queue,0 == fepriv->thread_pid);
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#659: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:562:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#659: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:562:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:575:
+	if (down_interruptible (&fepriv->sem))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&fepriv->sem'
#675: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:575:
+	if (down_interruptible (&fepriv->sem))

CHECK:SPACING: No space is necessary after a cast
#707: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:600:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#707: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:600:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#722: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:613:
+	if (down_interruptible (&fepriv->sem))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&fepriv->sem'
#722: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:613:
+	if (down_interruptible (&fepriv->sem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#800: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:715:
+		memcpy (&fepriv->parameters, parg,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#838: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:744:
+				fepriv->min_delay = HZ/20;
 				                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#847: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:750:
+				fepriv->min_delay = HZ/20;
 				                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#856: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:756:
+				fepriv->min_delay = HZ/20;
 				                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#883: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:782:
+			memcpy (parg, &fepriv->parameters, sizeof (struct dvb_frontend_parameters));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#883: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:782:
+			memcpy (parg, &fepriv->parameters, sizeof (struct dvb_frontend_parameters));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#890: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:788:
+	up (&fepriv->sem);

CHECK:SPACING: No space is necessary after a cast
#898: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:796:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#898: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:796:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#903: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:800:
+	poll_wait (file, &fepriv->events.wait_queue, wait);

CHECK:SPACING: No space is necessary after a cast
#914: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:812:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#914: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:812:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#923: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:826:
+		fepriv->events.eventr = fepriv->events.eventw = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#931: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:836:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#931: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:836:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fe->frontend_priv)...) over kmalloc(sizeof(struct dvb_frontend_private)...)
#959: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:871:
+	fe->frontend_priv = kmalloc(sizeof(struct dvb_frontend_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fe->frontend_priv"
#960: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:872:
+	if (fe->frontend_priv == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#964: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:876:
+	fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#964: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:876:
+	fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#967: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:879:
+	init_MUTEX (&fepriv->sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#968: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:880:
+	init_waitqueue_head (&fepriv->wait_queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#969: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:881:
+	init_waitqueue_head (&fepriv->events.wait_queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#970: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:882:
+	init_MUTEX (&fepriv->events.sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#980: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:890:
+	dvb_register_device (fe->dvb, &fepriv->dvbdev, &dvbdev_template,

CHECK:SPACING: No space is necessary after a cast
#988: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:900:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#988: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:900:
+	struct dvb_frontend_private *fepriv = (struct dvb_frontend_private*) fe->frontend_priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#993: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:904:
+	dvb_unregister_device (fepriv->dvbdev);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1000: FILE: drivers/media/dvb/dvb-core/dvb_frontend.c:911:
+	if (fe->frontend_priv)
+		kfree(fe->frontend_priv);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1033: FILE: drivers/media/dvb/dvb-core/dvb_frontend.h:118:
+	void* frontend_priv;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1073: FILE: drivers/media/dvb/dvb-core/dvb_net.c:1201:
+	printk("dvb_net: created network interface %s\n", net->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1081: FILE: drivers/media/dvb/dvb-core/dvb_net.c:1219:
+	printk("dvb_net: removed network interface %s\n", net->name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 29 warnings, 30 checks, 1049 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
