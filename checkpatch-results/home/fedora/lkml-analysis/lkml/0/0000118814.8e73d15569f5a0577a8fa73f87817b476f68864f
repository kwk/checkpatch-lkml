ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Michael O'Donnell <Michael.ODonnell at stratus dot com>'
#63: 
Signed-off-by: Michael O'Donnell <Michael.ODonnell at stratus dot com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#103: FILE: net/e100.c:587:
+	spinlock_t mdio_lock;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#122: FILE: net/e100.c:900:
data)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#130: FILE: net/e100.c:908:
+	/*
+	 * Stratus87247: we shouldn't be writing the MDI control

ERROR:SPACING: space prohibited after that open parenthesis '('
#135: FILE: net/e100.c:913:
+	spin_lock_irqsave( &(nic->mdio_lock), flags );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: net/e100.c:913:
+	spin_lock_irqsave( &(nic->mdio_lock), flags );

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around nic->mdio_lock
#135: FILE: net/e100.c:913:
+	spin_lock_irqsave( &(nic->mdio_lock), flags );

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited after that open parenthesis '('
#136: FILE: net/e100.c:914:
+	for( i = 100;  i;  --i )  {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#136: FILE: net/e100.c:914:
+	for( i = 100;  i;  --i )  {

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: net/e100.c:914:
+	for( i = 100;  i;  --i )  {

ERROR:SPACING: space prohibited after that open parenthesis '('
#137: FILE: net/e100.c:915:
+		if( readl( &(nic->csr->mdi_ctrl) ) & mdi_ready )  {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#137: FILE: net/e100.c:915:
+		if( readl( &(nic->csr->mdi_ctrl) ) & mdi_ready )  {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around nic->csr->mdi_ctrl
#137: FILE: net/e100.c:915:
+		if( readl( &(nic->csr->mdi_ctrl) ) & mdi_ready )  {

ERROR:SPACING: space required before the open parenthesis '('
#137: FILE: net/e100.c:915:
+		if( readl( &(nic->csr->mdi_ctrl) ) & mdi_ready )  {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#137: FILE: net/e100.c:915:
+		if( readl( &(nic->csr->mdi_ctrl) ) & mdi_ready )  {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#140: FILE: net/e100.c:918:
+		udelay( 20 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#140: FILE: net/e100.c:918:
+		udelay( 20 );

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#140: FILE: net/e100.c:918:
+		udelay( 20 );

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space prohibited after that open parenthesis '('
#142: FILE: net/e100.c:920:
+	if( unlikely( !i ) )  {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#142: FILE: net/e100.c:920:
+	if( unlikely( !i ) )  {

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: net/e100.c:920:
+	if( unlikely( !i ) )  {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: net/e100.c:921:
+		printk( "e100.mdio_ctrl(%s)won't go Ready\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: net/e100.c:921:
+		printk( "e100.mdio_ctrl(%s)won't go Ready\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: net/e100.c:922:
+		printk( "e100.mdio_ctrl(%s)won't go Ready\n",
+		spin_unlock_irqrestore( &(nic->mdio_lock), flags );

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: net/e100.c:922:
+		spin_unlock_irqrestore( &(nic->mdio_lock), flags );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#145: FILE: net/e100.c:922:
+		spin_unlock_irqrestore( &(nic->mdio_lock), flags );

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around nic->mdio_lock
#145: FILE: net/e100.c:922:
+		spin_unlock_irqrestore( &(nic->mdio_lock), flags );

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: net/e100.c:923:
+		return( 0 );		/* No way to indicate timeout

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: net/e100.c:923:
+		return( 0 );		/* No way to indicate timeout

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#146: FILE: net/e100.c:923:
+		return( 0 );		/* No way to indicate timeout

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#148: FILE: net/e100.c:924:
+		return( 0 );		/* No way to indicate timeout
+	}

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 5 warnings, 6 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
