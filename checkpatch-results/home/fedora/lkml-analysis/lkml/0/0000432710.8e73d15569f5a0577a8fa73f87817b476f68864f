ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#51: 
--- a/Documentation/Configure.help	Fri Sep 13 20:33:41 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: Documentation/Configure.help:265:
+  by unsynced TSCs. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: arch/i386/kernel/mpparse.c:407:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#91: FILE: arch/i386/kernel/mpparse.c:408:
+extern int cyclone_setup(char*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#101: FILE: arch/i386/kernel/mpparse.c:457:
+	if (!strncmp(oem, "IBM ENSW", 8) && (!strncmp(prod, "NF 6000R", 8) || !strncmp(prod, "VIGIL SMP", 9))){

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open brace '{'
#101: FILE: arch/i386/kernel/mpparse.c:457:
+	if (!strncmp(oem, "IBM ENSW", 8) && (!strncmp(prod, "NF 6000R", 8) || !strncmp(prod, "VIGIL SMP", 9))){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#101: FILE: arch/i386/kernel/mpparse.c:457:
+	if (!strncmp(oem, "IBM ENSW", 8) && (!strncmp(prod, "NF 6000R", 8) || !strncmp(prod, "VIGIL SMP", 9))){
[...]
+		cyclone_setup((char*)0);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#105: FILE: arch/i386/kernel/mpparse.c:460:
+		cyclone_setup((char*)0);

ERROR:SPACING: space required after that close brace '}'
#106: FILE: arch/i386/kernel/mpparse.c:461:
+	}else if (!strncmp(oem, "IBM NUMA", 8))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#117: FILE: arch/i386/kernel/time.c:259:
 
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#127: FILE: arch/i386/kernel/time.c:269:
+int use_cyclone = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/kernel/time.c:270:
+int __init cyclone_setup(char *str) $

ERROR:POINTER_LOCATION: "foo* volatile bar" should be "foo * volatile bar"
#134: FILE: arch/i386/kernel/time.c:276:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#134: FILE: arch/i386/kernel/time.c:276:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: arch/i386/kernel/time.c:282:
+	int count;
+	spin_lock(&i8253_lock);

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: arch/i386/kernel/time.c:284:
+	if(cyclone_timer)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#152: FILE: arch/i386/kernel/time.c:294:
+	count = ((LATCH-1) - count) * TICK_SIZE;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#153: FILE: arch/i386/kernel/time.c:295:
+	delay_at_last_interrupt = (count + LATCH/2) / LATCH;
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: arch/i386/kernel/time.c:302:
+	if(!cyclone_timer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/time.c:311:
+^I/* convert cyclone ticks to microseconds */^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#171: FILE: arch/i386/kernel/time.c:313:
+	offset = offset/(CYCLONE_TIMER_FREQ/1000000);
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#171: FILE: arch/i386/kernel/time.c:313:
+	offset = offset/(CYCLONE_TIMER_FREQ/1000000);
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: arch/i386/kernel/time.c:321:
+^Iu32* reg;^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#179: FILE: arch/i386/kernel/time.c:321:
+	u32* reg;	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#184: FILE: arch/i386/kernel/time.c:326:
+	printk(KERN_INFO "Summit chipset: Starting Cyclone Clock.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#187: FILE: arch/i386/kernel/time.c:329:
+	pageaddr = (CYCLONE_CBAR_ADDR)&PAGE_MASK;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#188: FILE: arch/i386/kernel/time.c:330:
+	offset = (CYCLONE_CBAR_ADDR)&(~PAGE_MASK);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#190: FILE: arch/i386/kernel/time.c:332:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#191: FILE: arch/i386/kernel/time.c:333:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: arch/i386/kernel/time.c:333:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#192: FILE: arch/i386/kernel/time.c:334:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR register.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: arch/i386/kernel/time.c:337:
+^Ibase = *reg;^I$

ERROR:SPACING: space required before the open brace '{'
#196: FILE: arch/i386/kernel/time.c:338:
+	if(!base){

ERROR:SPACING: space required before the open parenthesis '('
#196: FILE: arch/i386/kernel/time.c:338:
+	if(!base){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#197: FILE: arch/i386/kernel/time.c:339:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR value.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/kernel/time.c:342:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#202: FILE: arch/i386/kernel/time.c:344:
+	pageaddr = (base + CYCLONE_PMCC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#203: FILE: arch/i386/kernel/time.c:345:
+	offset = (base + CYCLONE_PMCC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#205: FILE: arch/i386/kernel/time.c:347:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#206: FILE: arch/i386/kernel/time.c:348:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: arch/i386/kernel/time.c:348:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#207: FILE: arch/i386/kernel/time.c:349:
+		printk(KERN_ERR "Summit chipset: Could not find valid PMCC register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#213: FILE: arch/i386/kernel/time.c:355:
+	pageaddr = (base + CYCLONE_MPCS_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#214: FILE: arch/i386/kernel/time.c:356:
+	offset = (base + CYCLONE_MPCS_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#216: FILE: arch/i386/kernel/time.c:358:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#217: FILE: arch/i386/kernel/time.c:359:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/i386/kernel/time.c:359:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#218: FILE: arch/i386/kernel/time.c:360:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPCS register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#224: FILE: arch/i386/kernel/time.c:366:
+	pageaddr = (base + CYCLONE_MPMC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#225: FILE: arch/i386/kernel/time.c:367:
+	offset = (base + CYCLONE_MPMC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#227: FILE: arch/i386/kernel/time.c:369:
+	cyclone_timer = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#228: FILE: arch/i386/kernel/time.c:370:
+	if(!cyclone_timer){

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: arch/i386/kernel/time.c:370:
+	if(!cyclone_timer){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#229: FILE: arch/i386/kernel/time.c:371:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPMC register.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/i386/kernel/time.c:376:
+^Ido_gettimeoffset = do_gettimeoffset_cyclone;^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: arch/i386/kernel/time.c:382:
+	unsigned long bclock, now;
+	if(!cyclone_timer)

ERROR:SPACING: space required before the open parenthesis '('
#240: FILE: arch/i386/kernel/time.c:382:
+	if(!cyclone_timer)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#246: FILE: arch/i386/kernel/time.c:388:
+	} while ((now-bclock) < loops);
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: arch/i386/kernel/time.c:400:
+int __init cyclone_setup(char *str) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: arch/i386/kernel/time.c:402:
+	printk(KERN_ERR "cyclone: Kernel not compiled with CONFIG_SUMMIT, cannot use the cyclone-timer.\n");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#264: FILE: arch/i386/kernel/time.c:406:
+const int use_cyclone = 0;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#266: FILE: arch/i386/kernel/time.c:408:
+static unsigned long do_gettimeoffset_cyclone(void) {return 0;}
                                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: arch/i386/kernel/time.c:632:
+	if(use_cyclone)

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/i386/kernel/time.c:823:
+ ^Iif(use_cyclone)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: arch/i386/kernel/time.c:823:
+ ^Iif(use_cyclone)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/i386/kernel/time.c:823:
+ ^Iif(use_cyclone)$

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: arch/i386/kernel/time.c:823:
+ 	if(use_cyclone)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: arch/i386/kernel/time.c:825:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: arch/i386/kernel/time.c:831:
+^I^I^I * However, we want to allow for the cyclone timer $

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#314: FILE: arch/i386/kernel/time.c:832:
+			 * to work w/ or w/o the TSCs being avaliable
 			                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open brace '{'
#318: FILE: arch/i386/kernel/time.c:835:
+			if(!use_cyclone){

ERROR:SPACING: space required before the open parenthesis '('
#318: FILE: arch/i386/kernel/time.c:835:
+			if(!use_cyclone){

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/i386/kernel/time.c:839:
+^I^I^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: arch/i386/kernel/time.c:839:
+^I^I^I ^I */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#350: FILE: arch/i386/lib/delay.c:59:
 }
+extern __cyclone_delay(unsigned long loops);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#351: FILE: arch/i386/lib/delay.c:60:
+extern int use_cyclone;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: include/asm-i386/fixmap.h:69:
+#endif $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 16 warnings, 17 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
