ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#34: 
--- a/drivers/pci/pm.c	2005-11-07 08:08:00.000000000 -0500

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#41: FILE: drivers/pci/pm.c:298:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#58: FILE: drivers/pci/pm.c:315:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#58: FILE: drivers/pci/pm.c:315:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#58: FILE: drivers/pci/pm.c:315:
+	pci_read_config_word(dev,pm + PCI_PM_PMC,&pmc);
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#61: FILE: drivers/pci/pm.c:318:
+		printk(KERN_DEBUG

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#67: FILE: drivers/pci/pm.c:324:
+	dev->pm = pm_data = kmalloc(sizeof(struct pci_dev_pm), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pm_data)...) over kmalloc(sizeof(struct pci_dev_pm)...)
#67: FILE: drivers/pci/pm.c:324:
+	dev->pm = pm_data = kmalloc(sizeof(struct pci_dev_pm), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: include/linux/pci.h:75:
+	unsigned int	dsi:1;		/* vendor-specific initialization needed
+					   after a reset */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#119: FILE: include/linux/pci.h:75:
+					   after a reset */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#121: FILE: include/linux/pci.h:77:
+	unsigned int	no_soft_reset:1; /* PCI config context retained when
+					    going from D3_hot to D0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: include/linux/pci.h:77:
+					    going from D3_hot to D0 */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: include/linux/pci.h:80:
+^Iunsigned char^Ipme_mask;^I/* a mask of power states that allow #PME */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#134: FILE: include/linux/pci.h:93:
+#define PCI_PME_D0	0x01;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#135: FILE: include/linux/pci.h:94:
+#define PCI_PME_D1	0x02;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#136: FILE: include/linux/pci.h:95:
+#define PCI_PME_D2	0x04;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#137: FILE: include/linux/pci.h:96:
+#define PCI_PME_D3hot	0x08;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#138: FILE: include/linux/pci.h:97:
+#define PCI_PME_D3cold	0x10;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 10 warnings, 3 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
