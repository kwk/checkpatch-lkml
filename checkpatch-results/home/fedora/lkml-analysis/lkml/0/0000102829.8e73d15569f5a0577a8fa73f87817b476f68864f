WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: include/linux/relay.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#66: FILE: include/linux/relay.h:2:
+ * linux/include/linux/relay.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#98: FILE: include/linux/relay.h:34:
+struct rchan_buf
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#122: FILE: include/linux/relay.h:58:
+struct rchan
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#138: FILE: include/linux/relay.h:74:
+struct rchan_callbacks
+{

WARNING:SPACING: Unnecessary space before function pointer arguments
#156: FILE: include/linux/relay.h:92:
+	int (*subbuf_start) (struct rchan_buf *buf,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#164: FILE: include/linux/relay.h:100:
+	 * @filp: relay file pointer
 	    ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: include/linux/relay.h:104:
+        void (*buf_mapped)(struct rchan_buf *buf,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/relay.h:104:
+        void (*buf_mapped)(struct rchan_buf *buf,$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#169: FILE: include/linux/relay.h:105:
+			   struct file *filp);
 			                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#174: FILE: include/linux/relay.h:110:
+	 * @filp: relay file pointer
 	    ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: include/linux/relay.h:114:
+        void (*buf_unmapped)(struct rchan_buf *buf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: include/linux/relay.h:114:
+        void (*buf_unmapped)(struct rchan_buf *buf,$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#179: FILE: include/linux/relay.h:115:
+			     struct file *filp);
 			                  ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/linux/relay.h:167:
+extern void relay_close(struct rchan *chan);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/linux/relay.h:168:
+extern void relay_flush(struct rchan *chan);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: include/linux/relay.h:169:
+extern void relay_subbufs_consumed(struct rchan *chan,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/linux/relay.h:172:
+extern void relay_reset(struct rchan *chan);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: include/linux/relay.h:173:
+extern int relay_buf_full(struct rchan_buf *buf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#239: FILE: include/linux/relay.h:175:
+extern size_t relay_switch_subbuf(struct rchan_buf *buf,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#335: FILE: include/linux/relay.h:271:
+	BUG_ON(length >= buf->chan->subbuf_size - 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONST_STRUCT: struct file_operations should normally be const
#342: FILE: include/linux/relay.h:278:
+extern struct file_operations relay_file_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 12 warnings, 6 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
