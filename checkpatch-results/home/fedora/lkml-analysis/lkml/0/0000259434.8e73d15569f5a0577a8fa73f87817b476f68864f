WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#50: FILE: drivers/net/dmfe.c:867:
+ *^Iflag = ^I1 : return the reverse CRC (for the received packet CRC)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#54: FILE: drivers/net/dmfe.c:871:
+static inline u32 cal_CRC(unsigned char * Data, unsigned int Len, u8 flag)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#54: FILE: drivers/net/dmfe.c:871:
+static inline u32 cal_CRC(unsigned char * Data, unsigned int Len, u8 flag)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Len>
#54: FILE: drivers/net/dmfe.c:871:
+static inline u32 cal_CRC(unsigned char * Data, unsigned int Len, u8 flag)

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: drivers/net/dmfe.c:874:
+	u32 crc = ether_crc_le(Len, Data);
+	if (flag) crc = ~crc;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#57: FILE: drivers/net/dmfe.c:874:
+	if (flag) crc = ~crc;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#61: FILE: drivers/net/dmfe.c:878:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#204: FILE: drivers/net/hamachi.c:1578:
+/* The interrupt handler does all of the Rx thread work and cleans up
+   after the Tx thread. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: drivers/net/hamachi.c:1578:
+   after the Tx thread. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#212: FILE: drivers/net/hamachi.c:1586:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#213: FILE: drivers/net/hamachi.c:1587:
+		printk (KERN_ERR "hamachi_interrupt(): irq %d for unknown device.\n", irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: drivers/net/hamachi.c:1587:
+		printk (KERN_ERR "hamachi_interrupt(): irq %d for unknown device.\n", irq);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hamachi_interrupt', this function's name, in a string
#213: FILE: drivers/net/hamachi.c:1587:
+		printk (KERN_ERR "hamachi_interrupt(): irq %d for unknown device.\n", irq);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CAMELCASE: Avoid CamelCase: <InterruptClear>
#223: FILE: drivers/net/hamachi.c:1597:
+		u32 intr_status = readl(ioaddr + InterruptClear);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#226: FILE: drivers/net/hamachi.c:1600:
+			printk(KERN_DEBUG "%s: Hamachi interrupt, status %4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/net/hamachi.c:1601:
+			printk(KERN_DEBUG "%s: Hamachi interrupt, status %4.4x.\n",
+				   dev->name, intr_status);

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxDone>
#232: FILE: drivers/net/hamachi.c:1606:
+		if (intr_status & IntrRxDone)

ERROR:SPACING: space required before the open brace '{'
#235: FILE: drivers/net/hamachi.c:1609:
+		if (intr_status & IntrTxDone){

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxDone>
#235: FILE: drivers/net/hamachi.c:1609:
+		if (intr_status & IntrTxDone){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/net/hamachi.c:1613:
+^I^I^I */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#240: FILE: drivers/net/hamachi.c:1614:
+			if (hmp->tx_full){

ERROR:SPACING: space required before the open brace '{'
#241: FILE: drivers/net/hamachi.c:1615:
+				for (; hmp->cur_tx - hmp->dirty_tx > 0; hmp->dirty_tx++){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/net/hamachi.c:1619:
+^I^I^I^I^Iif (hmp->tx_ring[entry].status_n_length & cpu_to_le32(DescOwn)) $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#245: FILE: drivers/net/hamachi.c:1619:
+					if (hmp->tx_ring[entry].status_n_length & cpu_to_le32(DescOwn)) 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <DescOwn>
#245: FILE: drivers/net/hamachi.c:1619:
+					if (hmp->tx_ring[entry].status_n_length & cpu_to_le32(DescOwn)) 

ERROR:SPACING: space required before the open brace '{'
#249: FILE: drivers/net/hamachi.c:1623:
+					if (skb){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/net/hamachi.c:1624:
+^I^I^I^I^I^Ipci_unmap_single(hmp->pci_dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/net/hamachi.c:1625:
+^I^I^I^I^I^I^Ihmp->tx_ring[entry].addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/net/hamachi.c:1625:
+						pci_unmap_single(hmp->pci_dev, 
+							hmp->tx_ring[entry].addr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/net/hamachi.c:1632:
+^I^I^I^I^Iif (entry >= TX_RING_SIZE-1)  $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#258: FILE: drivers/net/hamachi.c:1632:
+					if (entry >= TX_RING_SIZE-1)  
 					                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: drivers/net/hamachi.c:1633:
+^I^I^I^I^I^Ihmp->tx_ring[TX_RING_SIZE-1].status_n_length |= $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#259: FILE: drivers/net/hamachi.c:1633:
+						hmp->tx_ring[TX_RING_SIZE-1].status_n_length |= 
 						                         ^

CHECK:CAMELCASE: Avoid CamelCase: <DescEndRing>
#260: FILE: drivers/net/hamachi.c:1634:
+							cpu_to_le32(DescEndRing);

ERROR:SPACING: space required before the open brace '{'
#263: FILE: drivers/net/hamachi.c:1637:
+				if (hmp->cur_tx - hmp->dirty_tx < TX_RING_SIZE - 4){

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: drivers/net/hamachi.c:1647:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxPCIFault>
#276: FILE: drivers/net/hamachi.c:1650:
+			(IntrTxPCIFault | IntrTxPCIErr | IntrRxPCIFault | IntrRxPCIErr |

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxPCIErr>
#276: FILE: drivers/net/hamachi.c:1650:
+			(IntrTxPCIFault | IntrTxPCIErr | IntrRxPCIFault | IntrRxPCIErr |

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxPCIFault>
#276: FILE: drivers/net/hamachi.c:1650:
+			(IntrTxPCIFault | IntrTxPCIErr | IntrRxPCIFault | IntrRxPCIErr |

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxPCIErr>
#276: FILE: drivers/net/hamachi.c:1650:
+			(IntrTxPCIFault | IntrTxPCIErr | IntrRxPCIFault | IntrRxPCIErr |

CHECK:CAMELCASE: Avoid CamelCase: <LinkChange>
#277: FILE: drivers/net/hamachi.c:1651:
+			 LinkChange | NegotiationChange | StatsMax))

CHECK:CAMELCASE: Avoid CamelCase: <NegotiationChange>
#277: FILE: drivers/net/hamachi.c:1651:
+			 LinkChange | NegotiationChange | StatsMax))

CHECK:CAMELCASE: Avoid CamelCase: <StatsMax>
#277: FILE: drivers/net/hamachi.c:1651:
+			 LinkChange | NegotiationChange | StatsMax))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#281: FILE: drivers/net/hamachi.c:1655:
+			printk(KERN_WARNING "%s: Too much work at interrupt, status=0x%4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/net/hamachi.c:1656:
+			printk(KERN_WARNING "%s: Too much work at interrupt, status=0x%4.4x.\n",
+				   dev->name, intr_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#288: FILE: drivers/net/hamachi.c:1662:
+		printk(KERN_DEBUG "%s: exiting interrupt, status=%#4.4x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/net/hamachi.c:1663:
+		printk(KERN_DEBUG "%s: exiting interrupt, status=%#4.4x.\n",
+			   dev->name, readl(ioaddr + IntrStatus));

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#289: FILE: drivers/net/hamachi.c:1663:
+			   dev->name, readl(ioaddr + IntrStatus));

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: drivers/net/hamachi.c:1669:
+		static int stopit = 10;
+		if (dev->start == 0  &&  --stopit < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#296: FILE: drivers/net/hamachi.c:1670:
+			printk(KERN_ERR "%s: Emergency stop, looping startup interrupt.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/net/hamachi.c:1671:
+			printk(KERN_ERR "%s: Emergency stop, looping startup interrupt.\n",
+				   dev->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#448: FILE: drivers/net/smc9194.c:1327:
+/*--------------------------------------------------------------------
+ .

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: drivers/net/smc9194.c:1337:
+ ---------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: drivers/net/smc9194.c:1339:
+static void smc_interrupt(int irq, void * dev_id,  struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: drivers/net/smc9194.c:1339:
+static void smc_interrupt(int irq, void * dev_id,  struct pt_regs * regs)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: drivers/net/smc9194.c:1341:
+^Istruct net_device *dev ^I= dev_id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#463: FILE: drivers/net/smc9194.c:1342:
+^Iint ioaddr ^I^I= dev->base_addr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#464: FILE: drivers/net/smc9194.c:1343:
+^Istruct smc_local *lp ^I= (struct smc_local *)dev->priv;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: drivers/net/smc9194.c:1353:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#476: FILE: drivers/net/smc9194.c:1355:
+	PRINTK3((CARDNAME": SMC interrupt started \n"));

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#476: FILE: drivers/net/smc9194.c:1355:
+	PRINTK3((CARDNAME": SMC interrupt started \n"));

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: space prohibited after that open parenthesis '('
#478: FILE: drivers/net/smc9194.c:1357:
+	saved_bank = inw( ioaddr + BANK_SELECT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#478: FILE: drivers/net/smc9194.c:1357:
+	saved_bank = inw( ioaddr + BANK_SELECT );

ERROR:SPACING: space prohibited after that open parenthesis '('
#481: FILE: drivers/net/smc9194.c:1360:
+	saved_pointer = inw( ioaddr + POINTER );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#481: FILE: drivers/net/smc9194.c:1360:
+	saved_pointer = inw( ioaddr + POINTER );

ERROR:SPACING: space prohibited after that open parenthesis '('
#483: FILE: drivers/net/smc9194.c:1362:
+	mask = inb( ioaddr + INT_MASK );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#483: FILE: drivers/net/smc9194.c:1362:
+	mask = inb( ioaddr + INT_MASK );

ERROR:SPACING: space prohibited after that open parenthesis '('
#485: FILE: drivers/net/smc9194.c:1364:
+	outb( 0, ioaddr + INT_MASK );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#485: FILE: drivers/net/smc9194.c:1364:
+	outb( 0, ioaddr + INT_MASK );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: drivers/net/smc9194.c:1366:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#491: FILE: drivers/net/smc9194.c:1370:
+	PRINTK2((KERN_WARNING CARDNAME ": MASK IS %x \n", mask ));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#491: FILE: drivers/net/smc9194.c:1370:
+	PRINTK2((KERN_WARNING CARDNAME ": MASK IS %x \n", mask ));

ERROR:SPACING: space prohibited after that open parenthesis '('
#494: FILE: drivers/net/smc9194.c:1373:
+		status = inb( ioaddr + INTERRUPT ) & mask;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#494: FILE: drivers/net/smc9194.c:1373:
+		status = inb( ioaddr + INTERRUPT ) & mask;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#495: FILE: drivers/net/smc9194.c:1374:
+		if (!status )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#499: FILE: drivers/net/smc9194.c:1378:
+			": Handling interrupt status %x \n", status ));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#499: FILE: drivers/net/smc9194.c:1378:
+			": Handling interrupt status %x \n", status ));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#506: FILE: drivers/net/smc9194.c:1385:
+		} else if (status & IM_TX_INT ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#510: FILE: drivers/net/smc9194.c:1389:
+			outb(IM_TX_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#511: FILE: drivers/net/smc9194.c:1390:
+		} else if (status & IM_TX_EMPTY_INT ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#513: FILE: drivers/net/smc9194.c:1392:
+			SMC_SELECT_BANK( 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#513: FILE: drivers/net/smc9194.c:1392:
+			SMC_SELECT_BANK( 0 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#514: FILE: drivers/net/smc9194.c:1393:
+			card_stats = inw( ioaddr + COUNTER );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#514: FILE: drivers/net/smc9194.c:1393:
+			card_stats = inw( ioaddr + COUNTER );

ERROR:SPACING: space prohibited after that open parenthesis '('
#523: FILE: drivers/net/smc9194.c:1402:
+			SMC_SELECT_BANK( 2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: drivers/net/smc9194.c:1402:
+			SMC_SELECT_BANK( 2 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#526: FILE: drivers/net/smc9194.c:1405:
+			outb( IM_TX_EMPTY_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#526: FILE: drivers/net/smc9194.c:1405:
+			outb( IM_TX_EMPTY_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#531: FILE: drivers/net/smc9194.c:1410:
+		} else if (status & IM_ALLOC_INT ) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#533: FILE: drivers/net/smc9194.c:1412:
+				": Allocation interrupt \n"));

ERROR:SPACING: space prohibited after that open parenthesis '('
#537: FILE: drivers/net/smc9194.c:1416:
+			smc_hardware_send_packet( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#537: FILE: drivers/net/smc9194.c:1416:
+			smc_hardware_send_packet( dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#540: FILE: drivers/net/smc9194.c:1419:
+			mask |= ( IM_TX_EMPTY_INT | IM_TX_INT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#540: FILE: drivers/net/smc9194.c:1419:
+			mask |= ( IM_TX_EMPTY_INT | IM_TX_INT );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: drivers/net/smc9194.c:1423:
+^I^I^I$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#545: FILE: drivers/net/smc9194.c:1424:
+			PRINTK2((CARDNAME": Handoff done successfully.\n"));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#546: FILE: drivers/net/smc9194.c:1425:
+		} else if (status & IM_RX_OVRN_INT ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#549: FILE: drivers/net/smc9194.c:1428:
+			outb( IM_RX_OVRN_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#549: FILE: drivers/net/smc9194.c:1428:
+			outb( IM_RX_OVRN_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#550: FILE: drivers/net/smc9194.c:1429:
+		} else if (status & IM_EPH_INT ) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#551: FILE: drivers/net/smc9194.c:1430:
+			PRINTK((CARDNAME ": UNSUPPORTED: EPH INTERRUPT \n"));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#552: FILE: drivers/net/smc9194.c:1431:
+		} else if (status & IM_ERCV_INT ) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#553: FILE: drivers/net/smc9194.c:1432:
+			PRINTK((CARDNAME ": UNSUPPORTED: ERCV INTERRUPT \n"));

ERROR:SPACING: space prohibited after that open parenthesis '('
#554: FILE: drivers/net/smc9194.c:1433:
+			outb( IM_ERCV_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#554: FILE: drivers/net/smc9194.c:1433:
+			outb( IM_ERCV_INT, ioaddr + INTERRUPT );

ERROR:SPACING: space required one side of that '--' (ctx:WxW)
#556: FILE: drivers/net/smc9194.c:1435:
+	} while ( timeout -- );
 	                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#556: FILE: drivers/net/smc9194.c:1435:
+	} while ( timeout -- );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#556: FILE: drivers/net/smc9194.c:1435:
+	} while ( timeout -- );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#558: FILE: drivers/net/smc9194.c:1437:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#560: FILE: drivers/net/smc9194.c:1439:
+	SMC_SELECT_BANK( 2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#560: FILE: drivers/net/smc9194.c:1439:
+	SMC_SELECT_BANK( 2 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#561: FILE: drivers/net/smc9194.c:1440:
+	outb( mask, ioaddr + INT_MASK );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#561: FILE: drivers/net/smc9194.c:1440:
+	outb( mask, ioaddr + INT_MASK );

ERROR:SPACING: space prohibited after that open parenthesis '('
#563: FILE: drivers/net/smc9194.c:1442:
+	PRINTK3(( KERN_WARNING CARDNAME ": MASK is now %x \n", mask ));

ERROR:SPACING: space prohibited before that close parenthesis ')'
#563: FILE: drivers/net/smc9194.c:1442:
+	PRINTK3(( KERN_WARNING CARDNAME ": MASK is now %x \n", mask ));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#563: FILE: drivers/net/smc9194.c:1442:
+	PRINTK3(( KERN_WARNING CARDNAME ": MASK is now %x \n", mask ));

ERROR:SPACING: space prohibited after that open parenthesis '('
#564: FILE: drivers/net/smc9194.c:1443:
+	outw( saved_pointer, ioaddr + POINTER );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#564: FILE: drivers/net/smc9194.c:1443:
+	outw( saved_pointer, ioaddr + POINTER );

ERROR:SPACING: space prohibited after that open parenthesis '('
#566: FILE: drivers/net/smc9194.c:1445:
+	SMC_SELECT_BANK( saved_bank );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#566: FILE: drivers/net/smc9194.c:1445:
+	SMC_SELECT_BANK( saved_bank );

WARNING:RETURN_VOID: void function return statements are not generally useful
#570: FILE: drivers/net/smc9194.c:1449:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#586: FILE: drivers/net/eql.c:343:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#589: FILE: drivers/net/eql.c:346:
+	if (eql_number_slaves (queue) == 0)

CHECK:SPACING: No space is necessary after a cast
#596: FILE: drivers/net/eql.c:353:
+	equalizer_t *eql = (equalizer_t *) queue->master_dev->priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: drivers/net/eql.c:355:
+	if (eql_number_slaves (queue) == eql->max_slaves)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#608: FILE: drivers/net/eql.c:365:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: drivers/net/eql.c:384:
+^I^Iprintk ("%s: schedule %d slaves\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#627: FILE: drivers/net/eql.c:384:
+		printk ("%s: schedule %d slaves\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: drivers/net/eql.c:384:
+		printk ("%s: schedule %d slaves\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: drivers/net/eql.c:385:
+			master_dev->name, eql_number_slaves (queue));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#630: FILE: drivers/net/eql.c:387:
+	if ( eql_is_empty (queue) )
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: drivers/net/eql.c:387:
+	if ( eql_is_empty (queue) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#630: FILE: drivers/net/eql.c:387:
+	if ( eql_is_empty (queue) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#630: FILE: drivers/net/eql.c:387:
+	if ( eql_is_empty (queue) )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: drivers/net/eql.c:390:
+^I^I *^INo slaves to play with $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#633: FILE: drivers/net/eql.c:390:
+		/*
+		 *	No slaves to play with 

CHECK:SPACING: No space is necessary after a cast
#635: FILE: drivers/net/eql.c:392:
+		eql_set_best_slave (queue, (slave_t *) 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: drivers/net/eql.c:392:
+		eql_set_best_slave (queue, (slave_t *) 0);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#638: FILE: drivers/net/eql.c:395:
+	else
+	{		

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#638: FILE: drivers/net/eql.c:395:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: drivers/net/eql.c:396:
+^I{^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/net/eql.c:398:
+^I^I *^IMake a pass to set the best slave $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#641: FILE: drivers/net/eql.c:398:
+		/*
+		 *	Make a pass to set the best slave 

CHECK:SPACING: No space is necessary after a cast
#643: FILE: drivers/net/eql.c:400:
+		unsigned long best_load = (unsigned long) ULONG_MAX;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: drivers/net/eql.c:406:
+		cli ();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#650: FILE: drivers/net/eql.c:407:
+		for (i = 1, slave = eql_first_slave (queue);
+			i <= eql_number_slaves (queue);
+			i++, slave = eql_next_slave (queue, slave))
+		{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: drivers/net/eql.c:407:
+		for (i = 1, slave = eql_first_slave (queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: drivers/net/eql.c:408:
+			i <= eql_number_slaves (queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: drivers/net/eql.c:409:
+			i++, slave = eql_next_slave (queue, slave))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/net/eql.c:412:
+^I^I^I *^IGo through the slave list once, updating best_slave $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#655: FILE: drivers/net/eql.c:412:
+			/*
+			 *	Go through the slave list once, updating best_slave 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: drivers/net/eql.c:414:
+^I^I^I *^Islave is found, it is marked to be pulled out of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: drivers/net/eql.c:415:
+^I^I^I *^Iqueue $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: drivers/net/eql.c:417:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: drivers/net/eql.c:419:
+^I^I^Iunsigned long bytes_queued; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: drivers/net/eql.c:420:
+^I^I^Iunsigned long priority_Bps; $

CHECK:CAMELCASE: Avoid CamelCase: <priority_Bps>
#663: FILE: drivers/net/eql.c:420:
+			unsigned long priority_Bps; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: drivers/net/eql.c:421:
+^I  ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#664: FILE: drivers/net/eql.c:421:
+^I  ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: drivers/net/eql.c:422:
+^I  ^I^Iif (slave != 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#665: FILE: drivers/net/eql.c:422:
+^I  ^I^Iif (slave != 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#665: FILE: drivers/net/eql.c:422:
+	  		if (slave != 0)
+			{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: drivers/net/eql.c:425:
+^I^I^I^Ipriority_Bps = slave->priority_Bps;    $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#669: FILE: drivers/net/eql.c:426:
+				if ( slave->dev != 0)
+				{

ERROR:SPACING: space prohibited after that open parenthesis '('
#669: FILE: drivers/net/eql.c:426:
+				if ( slave->dev != 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#671: FILE: drivers/net/eql.c:428:
+					if ((slave->dev->flags & IFF_UP) == IFF_UP )
+					{

ERROR:SPACING: space prohibited before that close parenthesis ')'
#671: FILE: drivers/net/eql.c:428:
+					if ((slave->dev->flags & IFF_UP) == IFF_UP )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/net/eql.c:430:
+^I^I^I^I^I^Islave_load = (ULONG_MAX - (ULONG_MAX / 2)) - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: drivers/net/eql.c:433:
+^I^I      ^I^I^I^Iif (slave_load < best_load)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/net/eql.c:433:
+^I^I      ^I^I^I^Iif (slave_load < best_load)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#676: FILE: drivers/net/eql.c:433:
+		      				if (slave_load < best_load)
+						{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#682: FILE: drivers/net/eql.c:439:
+					else		/* we found a dead slave */
+					{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#682: FILE: drivers/net/eql.c:439:
+					}
+					else		/* we found a dead slave */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/net/eql.c:441:
+^I^I^I^I^I^I/* $

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#685: FILE: drivers/net/eql.c:442:
+						 *	We only bury one slave at a time, if more than

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#685: FILE: drivers/net/eql.c:442:
+						/* 
+						 *	We only bury one slave at a time, if more than

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/net/eql.c:443:
+^I^I^I^I^I^I *^Ione slave dies, we will bury him on the next $

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#686: FILE: drivers/net/eql.c:443:
+						 *	one slave dies, we will bury him on the next 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: drivers/net/eql.c:444:
+^I^I^I^I^I^I *^Ireschedule. slaves don't die all at once that $

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#687: FILE: drivers/net/eql.c:444:
+						 *	reschedule. slaves don't die all at once that 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/net/eql.c:445:
+^I^I^I^I^I^I *^Imuch anyway $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: drivers/net/eql.c:453:
+		eql_set_best_slave (queue, best_slave);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#698: FILE: drivers/net/eql.c:455:
+	if (slave_corpse != 0)
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#700: FILE: drivers/net/eql.c:457:
+		printk ("eql: scheduler found dead slave, burying...\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: drivers/net/eql.c:457:
+		printk ("eql: scheduler found dead slave, burying...\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: drivers/net/eql.c:458:
+		eql_delete_slave (eql_remove_slave (queue, slave_corpse));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: drivers/net/eql.c:458:
+		eql_delete_slave (eql_remove_slave (queue, slave_corpse));

WARNING:RETURN_VOID: void function return statements are not generally useful
#704: FILE: drivers/net/eql.c:461:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#706: FILE: drivers/net/eql.c:463:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#709: FILE: drivers/net/eql.c:466:
+	if (queue->best_slave != 0)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#716: FILE: drivers/net/eql.c:473:
+	}
+	else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#720: FILE: drivers/net/eql.c:477:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#726: FILE: drivers/net/eql.c:483:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#736: FILE: drivers/net/eql.c:534:
+	if (dev)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#744: FILE: drivers/net/eql.c:542:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#747: FILE: drivers/net/eql.c:545:
+	if (dev)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#749: FILE: drivers/net/eql.c:547:
+		if ((dev->flags & IFF_MASTER) == IFF_MASTER)
+		return 1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#755: FILE: drivers/net/eql.c:553:
+
+

WARNING:TYPO_SPELLING: 'appropiate' may be misspelled - perhaps 'appropriate'?
#965: FILE: drivers/net/e100/e100_main.c:1082:
+ * the message length for the appropiate size. It picks up a
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#985: FILE: drivers/net/e100/e100_main.c:1102:
+	if(bdp->vlgrp && vlan_tx_tag_present(skb)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#989: FILE: drivers/net/e100/e100_main.c:1106:
+^I$

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#992: FILE: drivers/net/e100/e100_main.c:1109:
+	tcb->tcb_hdr.cb_cmd |= __constant_cpu_to_le16(CB_S_BIT);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#996: FILE: drivers/net/e100/e100_main.c:1113:
+		tcb->tcb_hdr.cb_cmd |= __constant_cpu_to_le16(CB_I_BIT);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#999: FILE: drivers/net/e100/e100_main.c:1116:
+		tcb->tcb_hdr.cb_cmd &= ~__constant_cpu_to_le16(CB_I_BIT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ip->protocol == IPPROTO_TCP'
#1006: FILE: drivers/net/e100/e100_main.c:1123:
+		if ((ip->protocol == IPPROTO_TCP) ||
+		    (ip->protocol == IPPROTO_UDP)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ip->protocol == IPPROTO_UDP'
#1006: FILE: drivers/net/e100/e100_main.c:1123:
+		if ((ip->protocol == IPPROTO_TCP) ||
+		    (ip->protocol == IPPROTO_UDP)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1008: FILE: drivers/net/e100/e100_main.c:1125:
+		    (ip->protocol == IPPROTO_UDP)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tcb->tbd_ptr[1]
#1029: FILE: drivers/net/e100/e100_main.c:1146:
+		tbd_t *tbd_arr_ptr = &(tcb->tbd_ptr[1]);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1041: FILE: drivers/net/e100/e100_main.c:1158:
+		     i++, tbd_arr_ptr++, frag++) {
+

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: drivers/net/e100/e100_main.c:1159:
+			addr = ((void *) page_address(frag->page) +

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: drivers/net/e100/e100_main.c:1175:
+	prev_tcb->tcb_hdr.cb_cmd &= __constant_cpu_to_le16((u16) ~CB_S_BIT);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#1058: FILE: drivers/net/e100/e100_main.c:1175:
+	prev_tcb->tcb_hdr.cb_cmd &= __constant_cpu_to_le16((u16) ~CB_S_BIT);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1062: FILE: drivers/net/e100/e100_main.c:1179:
+	wmb();

ERROR:SPACING: space required before the open parenthesis '('
#1269: FILE: drivers/net/e1000/e1000_main.c:259:
+	if(atomic_dec_and_test(&adapter->irq_sem)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1339: FILE: drivers/net/e1000/e1000_main.c:2238:
+                  struct e1000_rx_desc *rx_desc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: drivers/net/e1000/e1000_main.c:2238:
+                  struct e1000_rx_desc *rx_desc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1340: FILE: drivers/net/e1000/e1000_main.c:2239:
+                  struct sk_buff *skb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: drivers/net/e1000/e1000_main.c:2239:
+                  struct sk_buff *skb)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter->hw.mac_type < e1000_82543'
#1343: FILE: drivers/net/e1000/e1000_main.c:2242:
+	if((adapter->hw.mac_type < e1000_82543) ||
+	/* Ignore Checksum bit is set */
+	(rx_desc->status & E1000_RXD_STAT_IXSM) ||
+	/* TCP Checksum has not been calculated */
+	(!(rx_desc->status & E1000_RXD_STAT_TCPCS))) {

ERROR:SPACING: space required before the open parenthesis '('
#1343: FILE: drivers/net/e1000/e1000_main.c:2242:
+	if((adapter->hw.mac_type < e1000_82543) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1344: FILE: drivers/net/e1000/e1000_main.c:2243:
+	if((adapter->hw.mac_type < e1000_82543) ||
+	/* Ignore Checksum bit is set */

ERROR:SPACING: space required before the open parenthesis '('
#1354: FILE: drivers/net/e1000/e1000_main.c:2253:
+	if(rx_desc->errors & E1000_RXD_ERR_TCPE) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1417: FILE: drivers/net/hamradio/dmascc.c:359:
+static inline unsigned char random(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: drivers/net/hamradio/dmascc.c:361:
+  rand = rand * 1664525L + 1013904223L;$

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/net/hamradio/dmascc.c:362:
+  return (unsigned char) (rand >> 24);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: drivers/net/hamradio/dmascc.c:362:
+  return (unsigned char) (rand >> 24);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1430: FILE: drivers/net/hamradio/dmascc.c:959:
+static inline void z8530_isr(struct scc_info *info) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: drivers/net/hamradio/dmascc.c:960:
+  int is, i = 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: drivers/net/hamradio/dmascc.c:962:
+  while ((is = read_scc(&info->priv[0], R3)) && i--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1433: FILE: drivers/net/hamradio/dmascc.c:962:
+  while ((is = read_scc(&info->priv[0], R3)) && i--) {
+    if (is & CHARxIP) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (is & CHARxIP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1434: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (is & CHARxIP) {
+      rx_isr(&info->priv[0]);

CHECK:CAMELCASE: Avoid CamelCase: <CHARxIP>
#1434: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (is & CHARxIP) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1434: FILE: drivers/net/hamradio/dmascc.c:963:
+    if (is & CHARxIP) {
[...]
+    } else if (is & CHATxIP) {
[...]
+    } else if (is & CHAEXT) {
[...]
+    } else if (is & CHBRxIP) {
[...]
+    } else if (is & CHBTxIP) {
[...]
+    } else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: drivers/net/hamradio/dmascc.c:964:
+      rx_isr(&info->priv[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: drivers/net/hamradio/dmascc.c:965:
+    } else if (is & CHATxIP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1436: FILE: drivers/net/hamradio/dmascc.c:965:
+    } else if (is & CHATxIP) {
+      tx_isr(&info->priv[0]);

CHECK:CAMELCASE: Avoid CamelCase: <CHATxIP>
#1436: FILE: drivers/net/hamradio/dmascc.c:965:
+    } else if (is & CHATxIP) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: drivers/net/hamradio/dmascc.c:966:
+      tx_isr(&info->priv[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: drivers/net/hamradio/dmascc.c:967:
+    } else if (is & CHAEXT) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1438: FILE: drivers/net/hamradio/dmascc.c:967:
+    } else if (is & CHAEXT) {
+      es_isr(&info->priv[0]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: drivers/net/hamradio/dmascc.c:968:
+      es_isr(&info->priv[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: drivers/net/hamradio/dmascc.c:969:
+    } else if (is & CHBRxIP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1440: FILE: drivers/net/hamradio/dmascc.c:969:
+    } else if (is & CHBRxIP) {
+      rx_isr(&info->priv[1]);

CHECK:CAMELCASE: Avoid CamelCase: <CHBRxIP>
#1440: FILE: drivers/net/hamradio/dmascc.c:969:
+    } else if (is & CHBRxIP) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1441: FILE: drivers/net/hamradio/dmascc.c:970:
+      rx_isr(&info->priv[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: drivers/net/hamradio/dmascc.c:971:
+    } else if (is & CHBTxIP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1442: FILE: drivers/net/hamradio/dmascc.c:971:
+    } else if (is & CHBTxIP) {
+      tx_isr(&info->priv[1]);

CHECK:CAMELCASE: Avoid CamelCase: <CHBTxIP>
#1442: FILE: drivers/net/hamradio/dmascc.c:971:
+    } else if (is & CHBTxIP) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: drivers/net/hamradio/dmascc.c:972:
+      tx_isr(&info->priv[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: drivers/net/hamradio/dmascc.c:973:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1444: FILE: drivers/net/hamradio/dmascc.c:973:
+    } else {
+      es_isr(&info->priv[1]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: drivers/net/hamradio/dmascc.c:974:
+      es_isr(&info->priv[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: drivers/net/hamradio/dmascc.c:975:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: drivers/net/hamradio/dmascc.c:976:
+    write_scc(&info->priv[0], R0, RES_H_IUS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: drivers/net/hamradio/dmascc.c:977:
+    i++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/net/hamradio/dmascc.c:978:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: drivers/net/hamradio/dmascc.c:979:
+  if (i < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1450: FILE: drivers/net/hamradio/dmascc.c:979:
+  if (i < 0) {
+    printk("dmascc: stuck in ISR with RR3=0x%02x.\n", is);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: drivers/net/hamradio/dmascc.c:980:
+    printk("dmascc: stuck in ISR with RR3=0x%02x.\n", is);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1451: FILE: drivers/net/hamradio/dmascc.c:980:
+    printk("dmascc: stuck in ISR with RR3=0x%02x.\n", is);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1452: FILE: drivers/net/hamradio/dmascc.c:981:
+  }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1454: FILE: drivers/net/hamradio/dmascc.c:983:
+  /* Ok, no interrupts pending from this 8530. The INT line should
+     be inactive now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1454: FILE: drivers/net/hamradio/dmascc.c:983:
+     be inactive now. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1457: FILE: drivers/net/hamradio/dmascc.c:986:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1500: FILE: drivers/net/hamradio/dmascc.c:1169:
+static inline void tx_on(struct scc_priv *priv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: drivers/net/hamradio/dmascc.c:1170:
+  int i, n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: drivers/net/hamradio/dmascc.c:1171:
+  unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1504: FILE: drivers/net/hamradio/dmascc.c:1173:
+  if (priv->param.dma >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1504: FILE: drivers/net/hamradio/dmascc.c:1173:
+  if (priv->param.dma >= 0) {
+    n = (priv->chip == Z85230) ? 3 : 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: drivers/net/hamradio/dmascc.c:1174:
+    n = (priv->chip == Z85230) ? 3 : 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: drivers/net/hamradio/dmascc.c:1176:
+    flags = claim_dma_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/net/hamradio/dmascc.c:1177:
+    set_dma_mode(priv->param.dma, DMA_MODE_WRITE);$

CHECK:SPACING: No space is necessary after a cast
#1509: FILE: drivers/net/hamradio/dmascc.c:1178:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: drivers/net/hamradio/dmascc.c:1178:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1509: FILE: drivers/net/hamradio/dmascc.c:1178:
+    set_dma_addr(priv->param.dma, (int) priv->tx_buf[priv->tx_tail]+n);
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: drivers/net/hamradio/dmascc.c:1179:
+    set_dma_count(priv->param.dma, priv->tx_len[priv->tx_tail]-n);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1510: FILE: drivers/net/hamradio/dmascc.c:1179:
+    set_dma_count(priv->param.dma, priv->tx_len[priv->tx_tail]-n);
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: drivers/net/hamradio/dmascc.c:1180:
+    release_dma_lock(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/net/hamradio/dmascc.c:1182:
+    write_scc(priv, R15, TxUIE);$

CHECK:CAMELCASE: Avoid CamelCase: <TxUIE>
#1513: FILE: drivers/net/hamradio/dmascc.c:1182:
+    write_scc(priv, R15, TxUIE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: drivers/net/hamradio/dmascc.c:1184:
+    if (priv->type == TYPE_TWIN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1515: FILE: drivers/net/hamradio/dmascc.c:1184:
+    if (priv->type == TYPE_TWIN)
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_T1 : TWIN_DMA_HDX_T3,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/net/hamradio/dmascc.c:1185:
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_T1 : TWIN_DMA_HDX_T3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/net/hamradio/dmascc.c:1187:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1518: FILE: drivers/net/hamradio/dmascc.c:1187:
+    else
+      write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | WT_RDY_ENAB);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/net/hamradio/dmascc.c:1188:
+      write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | WT_RDY_ENAB);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: drivers/net/hamradio/dmascc.c:1190:
+    save_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: drivers/net/hamradio/dmascc.c:1191:
+    cli();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: drivers/net/hamradio/dmascc.c:1192:
+    for (i = 0; i < n; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1523: FILE: drivers/net/hamradio/dmascc.c:1192:
+    for (i = 0; i < n; i++)
+      write_scc_data(priv, priv->tx_buf[priv->tx_tail][i], 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1524: FILE: drivers/net/hamradio/dmascc.c:1193:
+      write_scc_data(priv, priv->tx_buf[priv->tx_tail][i], 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1525: FILE: drivers/net/hamradio/dmascc.c:1194:
+    enable_dma(priv->param.dma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: drivers/net/hamradio/dmascc.c:1195:
+    restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: drivers/net/hamradio/dmascc.c:1196:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1527: FILE: drivers/net/hamradio/dmascc.c:1196:
+  } else {
+    write_scc(priv, R15, TxUIE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/net/hamradio/dmascc.c:1197:
+    write_scc(priv, R15, TxUIE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: drivers/net/hamradio/dmascc.c:1198:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | TxINT_ENAB);$

CHECK:CAMELCASE: Avoid CamelCase: <TxINT_ENAB>
#1529: FILE: drivers/net/hamradio/dmascc.c:1198:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN | TxINT_ENAB);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: drivers/net/hamradio/dmascc.c:1199:
+    tx_isr(priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: drivers/net/hamradio/dmascc.c:1200:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: drivers/net/hamradio/dmascc.c:1202:
+  if (priv->chip == Z8530) write_scc(priv, R0, RES_EOM_L);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1533: FILE: drivers/net/hamradio/dmascc.c:1202:
+  if (priv->chip == Z8530) write_scc(priv, R0, RES_EOM_L);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1536: FILE: drivers/net/hamradio/dmascc.c:1205:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1537: FILE: drivers/net/hamradio/dmascc.c:1206:
+static inline void rx_on(struct scc_priv *priv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: drivers/net/hamradio/dmascc.c:1207:
+  unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: drivers/net/hamradio/dmascc.c:1210:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1541: FILE: drivers/net/hamradio/dmascc.c:1210:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);

CHECK:CAMELCASE: Avoid CamelCase: <Rx_CH_AV>
#1541: FILE: drivers/net/hamradio/dmascc.c:1210:
+  while (read_scc(priv, R0) & Rx_CH_AV) read_scc_data(priv);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: drivers/net/hamradio/dmascc.c:1211:
+  priv->rx_over = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: drivers/net/hamradio/dmascc.c:1212:
+  if (priv->param.dma >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1543: FILE: drivers/net/hamradio/dmascc.c:1212:
+  if (priv->param.dma >= 0) {
[...]
+    flags = claim_dma_lock();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: drivers/net/hamradio/dmascc.c:1214:
+    flags = claim_dma_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: drivers/net/hamradio/dmascc.c:1215:
+    set_dma_mode(priv->param.dma, DMA_MODE_READ);$

CHECK:SPACING: No space is necessary after a cast
#1547: FILE: drivers/net/hamradio/dmascc.c:1216:
+    set_dma_addr(priv->param.dma, (int) priv->rx_buf[priv->rx_head]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: drivers/net/hamradio/dmascc.c:1216:
+    set_dma_addr(priv->param.dma, (int) priv->rx_buf[priv->rx_head]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: drivers/net/hamradio/dmascc.c:1217:
+    set_dma_count(priv->param.dma, BUF_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: drivers/net/hamradio/dmascc.c:1218:
+    release_dma_lock(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: drivers/net/hamradio/dmascc.c:1219:
+    enable_dma(priv->param.dma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: drivers/net/hamradio/dmascc.c:1221:
+    if (priv->type == TYPE_TWIN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#1552: FILE: drivers/net/hamradio/dmascc.c:1221:
+    if (priv->type == TYPE_TWIN) {
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_R1 : TWIN_DMA_HDX_R3,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: drivers/net/hamradio/dmascc.c:1222:
+      outb((priv->param.dma == 1) ? TWIN_DMA_HDX_R1 : TWIN_DMA_HDX_R3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: drivers/net/hamradio/dmascc.c:1224:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: drivers/net/hamradio/dmascc.c:1226:
+    write_scc(priv, R1, EXT_INT_ENAB | INT_ERR_Rx |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: drivers/net/hamradio/dmascc.c:1228:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1559: FILE: drivers/net/hamradio/dmascc.c:1228:
+  } else {
[...]
+    priv->rx_ptr = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: drivers/net/hamradio/dmascc.c:1230:
+    priv->rx_ptr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/net/hamradio/dmascc.c:1232:
+    write_scc(priv, R1, EXT_INT_ENAB | INT_ALL_Rx | WT_RDY_RT |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: drivers/net/hamradio/dmascc.c:1234:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: drivers/net/hamradio/dmascc.c:1235:
+  write_scc(priv, R0, ERR_RES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/net/hamradio/dmascc.c:1236:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);$

CHECK:CAMELCASE: Avoid CamelCase: <RxENABLE>
#1567: FILE: drivers/net/hamradio/dmascc.c:1236:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:CAMELCASE: Avoid CamelCase: <Rx8>
#1567: FILE: drivers/net/hamradio/dmascc.c:1236:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:CAMELCASE: Avoid CamelCase: <RxCRC_ENAB>
#1567: FILE: drivers/net/hamradio/dmascc.c:1236:
+  write_scc(priv, R3, RxENABLE | Rx8 | RxCRC_ENAB);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1570: FILE: drivers/net/hamradio/dmascc.c:1239:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1571: FILE: drivers/net/hamradio/dmascc.c:1240:
+static inline void rx_off(struct scc_priv *priv) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: drivers/net/hamradio/dmascc.c:1242:
+  write_scc(priv, R3, Rx8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: drivers/net/hamradio/dmascc.c:1244:
+  if (priv->param.dma >= 0 && priv->type == TYPE_TWIN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1575: FILE: drivers/net/hamradio/dmascc.c:1244:
+  if (priv->param.dma >= 0 && priv->type == TYPE_TWIN)
+    outb(0, priv->card_base + TWIN_DMA_CFG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: drivers/net/hamradio/dmascc.c:1245:
+    outb(0, priv->card_base + TWIN_DMA_CFG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: drivers/net/hamradio/dmascc.c:1246:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#1577: FILE: drivers/net/hamradio/dmascc.c:1246:
+  else
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: drivers/net/hamradio/dmascc.c:1247:
+    write_scc(priv, R1, EXT_INT_ENAB | WT_FN_RDYFN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: drivers/net/hamradio/dmascc.c:1249:
+  if (priv->param.dma >= 0) disable_dma(priv->param.dma);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1580: FILE: drivers/net/hamradio/dmascc.c:1249:
+  if (priv->param.dma >= 0) disable_dma(priv->param.dma);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1583: FILE: drivers/net/hamradio/dmascc.c:1252:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259434.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 118 errors, 159 warnings, 69 checks, 1599 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259434.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
