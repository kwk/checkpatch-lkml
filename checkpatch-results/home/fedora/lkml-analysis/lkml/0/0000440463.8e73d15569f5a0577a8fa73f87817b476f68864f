WARNING:INLINE: plain inline is preferred over __inline__
#59: FILE: include/asm-alpha/smplock.h:18:
+static __inline__ void release_kernel_lock(struct task_struct *task)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#230: FILE: include/asm-alpha/hardirq.h:40:
+#define __MASK(x)	((1UL << (x))-1)
                  	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#240: FILE: include/asm-alpha/hardirq.h:50:
+#define PREEMPT_OFFSET	(1UL << PREEMPT_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#241: FILE: include/asm-alpha/hardirq.h:51:
+#define SOFTIRQ_OFFSET	(1UL << SOFTIRQ_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#242: FILE: include/asm-alpha/hardirq.h:52:
+#define HARDIRQ_OFFSET	(1UL << HARDIRQ_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: include/asm-alpha/hardirq.h:78:
+# define IRQ_EXIT_OFFSET (HARDIRQ_OFFSET-1)
                                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#283: FILE: include/asm-alpha/hardirq.h:83:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/asm-alpha/hardirq.h:94:
+  extern void synchronize_irq(unsigned int irq);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/asm-alpha/hardirq.h:94:
+  extern void synchronize_irq(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#689: FILE: arch/alpha/kernel/alpha_ksyms.c:35:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 39)
#772: FILE: arch/alpha/kernel/irq.c:683:
 	for (delay = jiffies + HZ/50; time_after(delay, jiffies); )
+		/* about 20ms delay */ barrier();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 40)
#781: FILE: arch/alpha/kernel/irq.c:704:
 	for (delay = jiffies + HZ/10; time_after(delay, jiffies); )
+		/* about 100ms delay */ barrier();

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: arch/alpha/kernel/irq.c:807:
+        /* is there anything to synchronize with? */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 7 checks, 468 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440463.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
