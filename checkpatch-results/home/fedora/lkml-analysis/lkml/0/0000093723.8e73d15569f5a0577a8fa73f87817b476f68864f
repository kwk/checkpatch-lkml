WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
> The proper way to prevent unloading is just not to have a module exit routine,

WARNING:REPEATED_WORD: Possible repeated word: 'The'
#58: 
> rather than causing ref count to be off. The the module subsystem will

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: drivers/pci/hotplug/ibmphp_hpc.c:833:
+	down (&semOperations);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <semOperations>
#187: FILE: drivers/pci/hotplug/ibmphp_hpc.c:833:
+	down (&semOperations);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: drivers/pci/hotplug/ibmphp_hpc.c:836:
+^Icase POLL_LATCH_REGISTER: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: drivers/pci/hotplug/ibmphp_hpc.c:839:
+		list_for_each (pslotlist, &ibmphp_slot_head) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: drivers/pci/hotplug/ibmphp_hpc.c:842:
+			pslot = list_entry (pslotlist, struct slot, ibm_slot_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/pci/hotplug/ibmphp_hpc.c:845:
+				if (READ_SLOT_LATCH (pslot->ctrl)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pslot->ctrl'
#245: FILE: drivers/pci/hotplug/ibmphp_hpc.c:845:
+				if (READ_SLOT_LATCH (pslot->ctrl)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: drivers/pci/hotplug/ibmphp_hpc.c:846:
+					rc = ibmphp_hpc_readslot (pslot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/pci/hotplug/ibmphp_hpc.c:850:
+						process_changeinlatch (oldlatchlow,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: drivers/pci/hotplug/ibmphp_hpc.c:860:
+		list_for_each (pslotlist, &ibmphp_slot_head) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: drivers/pci/hotplug/ibmphp_hpc.c:861:
+			pslot = list_entry (pslotlist, struct slot, ibm_slot_list);

CHECK:SPACING: No space is necessary after a cast
#272: FILE: drivers/pci/hotplug/ibmphp_hpc.c:863:
+			memcpy ((void *) &myslot, (void *) pslot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: drivers/pci/hotplug/ibmphp_hpc.c:863:
+			memcpy ((void *) &myslot, (void *) pslot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/pci/hotplug/ibmphp_hpc.c:864:
+				sizeof (struct slot));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: drivers/pci/hotplug/ibmphp_hpc.c:865:
+			rc = ibmphp_hpc_readslot (pslot, READ_ALLSTAT, NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'myslot.status != pslot->status'
#275: FILE: drivers/pci/hotplug/ibmphp_hpc.c:866:
+			if ((myslot.status != pslot->status)
+			    || (myslot.ext_status != pslot->ext_status))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'myslot.ext_status != pslot->ext_status'
#275: FILE: drivers/pci/hotplug/ibmphp_hpc.c:866:
+			if ((myslot.status != pslot->status)
+			    || (myslot.ext_status != pslot->ext_status))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#276: FILE: drivers/pci/hotplug/ibmphp_hpc.c:867:
+			if ((myslot.status != pslot->status)
+			    || (myslot.ext_status != pslot->ext_status))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: drivers/pci/hotplug/ibmphp_hpc.c:868:
+				process_changeinstatus (pslot, &myslot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/pci/hotplug/ibmphp_hpc.c:871:
+		list_for_each (pslotlist, &ibmphp_slot_head) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: drivers/pci/hotplug/ibmphp_hpc.c:874:
+			pslot = list_entry (pslotlist, struct slot, ibm_slot_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: drivers/pci/hotplug/ibmphp_hpc.c:877:
+				if (READ_SLOT_LATCH (pslot->ctrl))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pslot->ctrl'
#297: FILE: drivers/pci/hotplug/ibmphp_hpc.c:877:
+				if (READ_SLOT_LATCH (pslot->ctrl))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: drivers/pci/hotplug/ibmphp_hpc.c:878:
+					rc = ibmphp_hpc_readslot (pslot,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/pci/hotplug/ibmphp_hpc.c:890:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: drivers/pci/hotplug/ibmphp_hpc.c:891:
+		down (&semOperations);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/pci/hotplug/ibmphp_hpc.c:892:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#317: FILE: drivers/pci/hotplug/ibmphp_hpc.c:893:
+		if (poll_count >= POLL_LATCH_CNT) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#320: FILE: drivers/pci/hotplug/ibmphp_hpc.c:896:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: drivers/pci/hotplug/ibmphp_hpc.c:899:
+^I}^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: drivers/pci/hotplug/ibmphp_hpc.c:901:
+	up (&semOperations);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 20 warnings, 9 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093723.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
