WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#51: 
Signed-Off-By: Shailabh Nagar <nagar@watson.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/taskstats_kern.h:67:
+extern void taskstats_exit_alloc(struct taskstats **, unsigned int *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/taskstats_kern.h:68:
+extern void taskstats_exit_send(struct task_struct *, struct taskstats *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#127: FILE: include/linux/taskstats_kern.h:68:
+extern void taskstats_exit_send(struct task_struct *, struct taskstats *, int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct taskstats *' should also have an identifier name
#127: FILE: include/linux/taskstats_kern.h:68:
+extern void taskstats_exit_send(struct task_struct *, struct taskstats *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#127: FILE: include/linux/taskstats_kern.h:68:
+extern void taskstats_exit_send(struct task_struct *, struct taskstats *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#127: FILE: include/linux/taskstats_kern.h:68:
+extern void taskstats_exit_send(struct task_struct *, struct taskstats *, int, unsigned int);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#160: FILE: kernel/taskstats.c:31:
+#define TASKSTATS_CPUMASK_MAXLEN	(100+6*NR_CPUS)
                                 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#160: FILE: kernel/taskstats.c:31:
+#define TASKSTATS_CPUMASK_MAXLEN	(100+6*NR_CPUS)
                                 	      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#181: FILE: kernel/taskstats.c:60:
+};
+static DEFINE_PER_CPU(struct listener_list, listener_array);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: kernel/taskstats.c:131:
+		struct listener *s = list_entry(p, struct listener, list);
+		ret = genlmsg_unicast(skb, s->pid);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*s)...) over kmalloc_node(sizeof(struct listener)...)
#255: FILE: kernel/taskstats.c:264:
+			s = kmalloc_node(sizeof(struct listener), GFP_KERNEL,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000060364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 6 checks, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000060364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
