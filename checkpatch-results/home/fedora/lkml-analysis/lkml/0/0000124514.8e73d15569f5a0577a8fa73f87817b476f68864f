WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#36: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#76: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:36:
+ * $Id: ipath_driver.c 4500 2005-12-16 01:34:22Z rjwalsh $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#123: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:83:
+uint64_t ipath_dummy_val_for_testing;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:92:
+#define IPATH_SMA_HDRSZ (8+12+8)	/* LRH+BTH+DETH */
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:92:
+#define IPATH_SMA_HDRSZ (8+12+8)	/* LRH+BTH+DETH */
                              ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#136: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:96:
+	uint32_t len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#138: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:98:
+	uint32_t unit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#139: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:99:
+	uint8_t *buf;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:102:
+static unsigned ipath_sma_first; /* oldest sma packet index */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:103:
+static unsigned ipath_sma_next;	/* next sma packet index to use */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:111:
+#define SMA_MAX_PKTSZ (IPATH_SMA_HDRSZ+256)	/* max len of an SMA packet */
                                       ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#153: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:113:
+static uint8_t ipath_sma_data_bufs[IPATH_NUM_SMAPKTS + 1][SMA_MAX_PKTSZ];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#154: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:114:
+static uint8_t *ipath_sma_data_spare;

WARNING:INLINE: plain inline is preferred over __inline__
#161: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:121:
+static __inline__ uint64_t ipath_kget_sreg(const ipath_type, ipath_sreg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:122:
+    __attribute__ ((always_inline));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __always_inline over __attribute__((always_inline))
#162: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:122:
+    __attribute__ ((always_inline));

WARNING:INLINE: plain inline is preferred over __inline__
#169: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:129:
+static __inline__ uint64_t ipath_kget_sreg(const ipath_type stype,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#172: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:132:
+	uint64_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#173: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:133:
+	uint64_t *sbase;

CHECK:SPACING: No space is necessary after a cast
#175: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:135:
+	sbase = (uint64_t *) (devdata[stype].ipath_sregbase

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#201: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:161:
+static void ipath_disarm_piobufs(const ipath_type, unsigned, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#201: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:161:
+static void ipath_disarm_piobufs(const ipath_type, unsigned, unsigned);

WARNING:INLINE: plain inline is preferred over __inline__
#207: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:167:
+static __inline__ void *ipath_get_egrbuf(const ipath_type, uint32_t, int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#210: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:170:
+int ipath_bringup_serdes(const ipath_type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const ipath_type' should also have an identifier name
#210: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:170:
+int ipath_bringup_serdes(const ipath_type);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#216: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:176:
+void ipath_free_pddata(ipath_devdata *, uint32_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ipath_devdata *' should also have an identifier name
#216: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:176:
+void ipath_free_pddata(ipath_devdata *, uint32_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint32_t' should also have an identifier name
#216: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:176:
+void ipath_free_pddata(ipath_devdata *, uint32_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#216: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:176:
+void ipath_free_pddata(ipath_devdata *, uint32_t, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#217: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:177:
+static void ipath_clear_tids(const ipath_type, unsigned);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#239: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:199:
+int ipath_diags_enabled = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:205:
+void ipath_chip_cleanup(ipath_devdata * dd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#259: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:219:
+static volatile uint64_t ipath_port0_rcvhdrtail[512]

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#259: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:219:
+static volatile uint64_t ipath_port0_rcvhdrtail[512]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:220:
+    __attribute__ ((aligned(4096)));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#260: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:220:
+    __attribute__ ((aligned(4096)));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#296: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:256:
+extern int ipath_diags_ioctl(struct file *, unsigned, unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#296: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:256:
+extern int ipath_diags_ioctl(struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#296: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:256:
+extern int ipath_diags_ioctl(struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#296: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:256:
+extern int ipath_diags_ioctl(struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#296: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:256:
+extern int ipath_diags_ioctl(struct file *, unsigned, unsigned long);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#301: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:261:
+static const char *ipath_ibcstatus_str[] = {

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:292:
+	if(!dd)

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:295:
+	if(!dd->ipath_statusp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_statusp
#338: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:298:
+	return snprintf(buf, PAGE_SIZE, "%llx\n", *(dd->ipath_statusp));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#341: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:301:
+static const char *ipath_status_str[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:316:
+static ssize_t show_status_str(struct device *dev,
+			   struct device_attribute *attr,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#361: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:321:
+	uint64_t s;

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:323:
+	if(!dd)

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:326:
+	if(!dd->ipath_statusp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_statusp
#369: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:329:
+	s = *(dd->ipath_statusp);

ERROR:SPACING: space required before the open parenthesis '('
#383: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:343:
+	if(any)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:350:
+static ssize_t show_lid(struct device *dev,
+			   struct device_attribute *attr,

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:355:
+	if(!dd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:362:
+static ssize_t show_mlid(struct device *dev,
+			   struct device_attribute *attr,

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:367:
+	if(!dd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:374:
+static ssize_t show_guid(struct device *dev,
+			   struct device_attribute *attr,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#418: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:378:
+	uint8_t *guid;

ERROR:SPACING: space required before the open parenthesis '('
#420: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:380:
+	if(!dd)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dd->ipath_guid
#423: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:383:
+	guid = (uint8_t *)&(dd->ipath_guid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:391:
+static ssize_t show_nguid(struct device *dev,
+			   struct device_attribute *attr,

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:396:
+	if(!dd)

ERROR:SPACING: space required before the open parenthesis '('
#448: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:408:
+	if(!dd)

WARNING:SIZEOF_PARENTHESIS: sizeof dd->ipath_serial should be sizeof(dd->ipath_serial)
#451: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:411:
+	buf[sizeof dd->ipath_serial] = '\0';

WARNING:SIZEOF_PARENTHESIS: sizeof dd->ipath_serial should be sizeof(dd->ipath_serial)
#452: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:412:
+	memcpy(buf, dd->ipath_serial, sizeof dd->ipath_serial);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:418:
+static ssize_t show_unit(struct device *dev,
+			   struct device_attribute *attr,

ERROR:SPACING: space required before the open parenthesis '('
#463: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:423:
+	if(!dd)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#470: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:430:
+static DRIVER_ATTR(version, S_IRUGO, show_version, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status' to 'status_show'
#471: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:431:
+static DEVICE_ATTR(status, S_IRUGO, show_status, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#471: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:431:
+static DEVICE_ATTR(status, S_IRUGO, show_status, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status_str' to 'status_str_show'
#472: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:432:
+static DEVICE_ATTR(status_str, S_IRUGO, show_status_str, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#472: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:432:
+static DEVICE_ATTR(status_str, S_IRUGO, show_status_str, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_lid' to 'lid_show'
#473: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:433:
+static DEVICE_ATTR(lid, S_IRUGO, show_lid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#473: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:433:
+static DEVICE_ATTR(lid, S_IRUGO, show_lid, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_mlid' to 'mlid_show'
#474: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:434:
+static DEVICE_ATTR(mlid, S_IRUGO, show_mlid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#474: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:434:
+static DEVICE_ATTR(mlid, S_IRUGO, show_mlid, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_guid' to 'guid_show'
#475: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:435:
+static DEVICE_ATTR(guid, S_IRUGO, show_guid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#475: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:435:
+static DEVICE_ATTR(guid, S_IRUGO, show_guid, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_nguid' to 'nguid_show'
#476: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:436:
+static DEVICE_ATTR(nguid, S_IRUGO, show_nguid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#476: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:436:
+static DEVICE_ATTR(nguid, S_IRUGO, show_nguid, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_serial' to 'serial_show'
#477: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:437:
+static DEVICE_ATTR(serial, S_IRUGO, show_serial, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#477: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:437:
+static DEVICE_ATTR(serial, S_IRUGO, show_serial, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_unit' to 'unit_show'
#478: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:438:
+static DEVICE_ATTR(unit, S_IRUGO, show_unit, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#478: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:438:
+static DEVICE_ATTR(unit, S_IRUGO, show_unit, NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:447:
+static int ipath_sysctl(ctl_table * ct, int wr, struct file *f, void __user * b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:447:
+static int ipath_sysctl(ctl_table * ct, int wr, struct file *f, void __user * b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#488: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:448:
+			size_t * l, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#488: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:448:
+			size_t * l, loff_t * ppos)

WARNING:SIZEOF_PARENTHESIS: sizeof t should be sizeof(t)
#501: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:461:
+	len = min_t(int, sizeof t, *l);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#505: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:465:
+		*l = snprintf(t, len, "%x\n", *(unsigned *)ct->data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:473:
+		char *e;
+		if (copy_from_user(t, b, len)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof t should be sizeof(t)
#517: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:477:
+		t[len < (sizeof t - 1) ? len : (sizeof t - 1)] = '\0';

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#518: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:478:
+		i = simple_strtoul(t, &e, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#544: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:504:
+						if (i >

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#544: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:504:
+						if (i >
+						    (devdata[d].ipath_piobcnt -
+						     (devdata[d].
+						      ipath_cfgports *
+						      IPATH_MIN_USER_PORT_BUFCNT)))
+						{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[d].ipath_cfgports'
#547: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:507:
+						     (devdata[d].
+						      ipath_cfgports *

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#557: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:517:
+									  IPATH_MIN_USER_PORT_BUFCNT);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#568: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:528:
+			*(unsigned *)ct->data = i;

WARNING:TABSTOP: Statements should start on a tabstop
#595: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:555:
+	 }

WARNING:TABSTOP: Statements should start on a tabstop
#604: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:564:
+	 }

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#631: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:591:
+	uint32_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#632: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:592:
+	uint64_t val64, t0, t1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#634: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:594:
+	static uint64_t one_sec_in_cycles;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#635: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:595:
+	extern uint32_t _ipath_pico_per_cycle;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#635: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:595:
+	extern uint32_t _ipath_pico_per_cycle;

CHECK:BRACES: braces {} should be used on all arms of this statement
#657: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:617:
+	if (creg == cr_wordsendcnt) {
[...]
+	} else if (creg == cr_wordrcvcnt) {
[...]
+	} else if (creg == cr_pktsendcnt) {
[...]
+	} else if (creg == cr_pktrcvcnt) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#681: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:641:
+	} else

CHECK:SPACING: No space is necessary after a cast
#682: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:642:
+		val64 = (uint64_t) val;

WARNING:TYPO_SPELLING: 'meaningfull' may be misspelled - perhaps 'meaningful'?
#691: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:651:
+ * someday, and so function name when printed by _IPATH_INFO is meaningfull
                                                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#696: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:656:
+	static uint64_t last_tot_hdrqfull;

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#703: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:663:
+		blen = snprintf(buf, sizeof buf, "port 0 hdrqfull %u",

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#710: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:670:
+		    snprintf(buf + blen, sizeof buf - blen, "%srcvegrfull %llu",

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#726: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:686:
+		    snprintf(buf + blen, sizeof buf - blen,

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:694:
+	if(*dd->ipath_hdrqtailptr != dd->ipath_port0head) {

ERROR:SPACING: space required before the open parenthesis '('
#735: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:695:
+		if(dd->ipath_lastport0rcv_cnt == ipath_stats.sps_port0pkts) {

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#737: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:697:
+				*dd->ipath_hdrqtailptr, dd->ipath_port0head,ipath_stats.sps_port0pkts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:697:
+			_IPATH_PDBG("missing rcv interrupts? port0 hd=%llx tl=%x; port0pkts %llx\n",
+				*dd->ipath_hdrqtailptr, dd->ipath_port0head,ipath_stats.sps_port0pkts);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:697:
+				*dd->ipath_hdrqtailptr, dd->ipath_port0head,ipath_stats.sps_port0pkts);
 				                                           ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#751: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:711:
+	uint32_t val;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#753: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:713:
+	static unsigned cnt;

CHECK:SPACING: No space is necessary after a cast
#765: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:725:
+	ipath_snap_cntr((ipath_type) t, cr_wordsendcnt);

CHECK:SPACING: No space is necessary after a cast
#766: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:726:
+	ipath_snap_cntr((ipath_type) t, cr_wordrcvcnt);

CHECK:SPACING: No space is necessary after a cast
#767: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:727:
+	ipath_snap_cntr((ipath_type) t, cr_pktsendcnt);

CHECK:SPACING: No space is necessary after a cast
#768: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:728:
+	ipath_snap_cntr((ipath_type) t, cr_pktrcvcnt);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#786: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:746:
+	if ((devdata[t].ipath_maskederrs & ~devdata[t].ipath_ignorederrs)
+	    && get_cycles() > devdata[t].ipath_unmasktime) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#788: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:748:
+		char ebuf[256];
+		ipath_decode_err(ebuf, sizeof ebuf,

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#788: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:748:
+		ipath_decode_err(ebuf, sizeof ebuf,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[t].ipath_ignorederrs'
#790: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:750:
+				 (devdata[t].ipath_maskederrs & ~devdata[t].
+				  ipath_ignorederrs));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[t].ipath_ignorederrs'
#792: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:752:
+		if ((devdata[t].ipath_maskederrs & ~devdata[t].
+		     ipath_ignorederrs)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#813: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:773:
+		uint64_t ibc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#814: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:774:
+		uint64_t ibc;
+		_IPATH_VDBG("linkinitcmd SLEEP, move to POLL\n");

ERROR:SPACING: space required before the open parenthesis '('
#838: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:798:
+	if(dd->ipath_nosma_bufs) {

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:800:
+		if(dd->ipath_nosma_secs >= 30) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:802:
+			_IPATH_SMADBG("No SMA bufs avail %u seconds; cancelling pending sends\n",
+				dd->ipath_nosma_secs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:804:
+			ipath_disarm_piobufs(t, dd->ipath_lastport_piobuf,
+				dd->ipath_piobcnt - dd->ipath_lastport_piobuf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:807:
+^I^Ielse $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#847: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:807:
+		}
+		else 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:809:
+			_IPATH_SMADBG("No SMA bufs avail %u tries, after %u seconds\n",
+				dd->ipath_nosma_bufs, dd->ipath_nosma_secs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#856: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:816:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#857: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:817:
+static void __devexit infinipath_remove_one(struct pci_dev *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#877: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:837:
+#if defined (pgprot_writecombine) && defined(_PAGE_MA_WC)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#888: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:848:
+	uint64_t pioaddr, piolen, intconfig;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#889: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:849:
+	uint8_t rev;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev >= 1'
#901: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:861:
+	if ((!infinipath_cfgunits && (dev >= 1)) ||
+	    (infinipath_cfgunits && (dev >= infinipath_cfgunits)) ||
+	    (dev >= infinipath_max)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev >= infinipath_cfgunits'
#901: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:861:
+	if ((!infinipath_cfgunits && (dev >= 1)) ||
+	    (infinipath_cfgunits && (dev >= infinipath_cfgunits)) ||
+	    (dev >= infinipath_max)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev >= infinipath_max'
#901: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:861:
+	if ((!infinipath_cfgunits && (dev >= 1)) ||
+	    (infinipath_cfgunits && (dev >= infinipath_cfgunits)) ||
+	    (dev >= infinipath_max)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#912: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:872:
+	if ((ret = pci_enable_device(pdev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#912: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:872:
+	if ((ret = pci_enable_device(pdev))) {
+		_IPATH_DBG("pci_enable unit %u failed: %x\n", dev, ret);
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#916: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:876:
+	if ((ret = pci_request_regions(pdev, MODNAME)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#920: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:880:
+	if ((ret = pci_set_dma_mask(pdev, DMA_64BIT_MASK)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#945: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:905:
+	if ((ret = pci_read_config_byte(pdev, PCI_REVISION_ID, &rev))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#945: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:905:
+	if ((ret = pci_read_config_byte(pdev, PCI_REVISION_ID, &rev))) {
[...]
+	} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#950: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:910:
+		return ret;	/* shouldn't ever happen */
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#950: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:910:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#954: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:914:
+#if defined (pgprot_writecombine) && defined(_PAGE_MA_WC)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#955: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:915:
+	printk("Remapping pages WC\n");

CHECK:SPACING: No space is necessary after a cast
#956: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:916:
+	remap_area_pages((u64) devdata[dev].ipath_kregbase + 1024 * 1024,

CHECK:SPACING: No space is necessary after a cast
#968: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:928:
+	    (uint64_t *) ((void *)devdata[dev].ipath_kregbase + len);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around devdata[dev]
#980: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:940:
+	pci_set_drvdata(pdev, &(devdata[dev]));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#992: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:952:
+	if ((ret = request_irq(pdev->irq, ipath_intr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1012: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:972:
+		unsigned bits;

WARNING:SPACING: space prohibited before semicolon
#1026: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:986:
+		for (bits = 0; !(piolen & (1ULL << bits)); bits++) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1026: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:986:
+		for (bits = 0; !(piolen & (1ULL << bits)); bits++) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1038: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:998:
+			uint64_t atmp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1039: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:999:
+			uint64_t atmp;
+			_IPATH_DBG

WARNING:LINE_SPACING: Missing a blank line after declarations
#1059: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1019:
+			int cookie;
+			_IPATH_VDBG

CHECK:SPACING: No space is necessary after a cast
#1072: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1032:
+				devdata[dev].ipath_mtrr = (uint32_t) cookie;

CHECK:BRACES: Unbalanced braces around else statement
#1093: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1053:
+		} else

ERROR:SPACING: space required before the open parenthesis '('
#1096: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1056:
+	} else if(ret != -EPERM)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1100: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1060:
+	device_create_file(&(pdev->dev), &dev_attr_status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1101: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1061:
+	device_create_file(&(pdev->dev), &dev_attr_status_str);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1102: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1062:
+	device_create_file(&(pdev->dev), &dev_attr_lid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1103: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1063:
+	device_create_file(&(pdev->dev), &dev_attr_mlid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1104: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1064:
+	device_create_file(&(pdev->dev), &dev_attr_guid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1105: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1065:
+	device_create_file(&(pdev->dev), &dev_attr_nguid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1106: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1066:
+	device_create_file(&(pdev->dev), &dev_attr_serial);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1107: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1067:
+	device_create_file(&(pdev->dev), &dev_attr_unit);

ERROR:SPACING: space required before the open parenthesis '('
#1116: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1076:
+	if(ret == -EPERM) /* disabled device, don't want module load error;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1077:
+		* just want to carry status through to this point */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1117: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1077:
+	if(ret == -EPERM) /* disabled device, don't want module load error;
+		* just want to carry status through to this point */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1123: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1083:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1136: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1096:
+static int ipath_setup_htconfig(struct pci_dev *pdev, uint64_t * iaddr,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1139: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1099:
+	uint8_t cap_type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1140: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1100:
+	uint32_t int_handler_addr_lower;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1141: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1101:
+	uint32_t int_handler_addr_upper;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1142: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1102:
+	uint64_t ihandler = 0;

ERROR:SPACING: space required before the open parenthesis '('
#1153: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1113:
+	if(!(pos = pci_find_capability(pdev, HT_CAPABILITY_ID))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1153: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1113:
+	if(!(pos = pci_find_capability(pdev, HT_CAPABILITY_ID))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1115:
+		_IPATH_UNIT_ERROR(t,
+		    "Couldn't find HyperTransport capability; no interrupts\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1119:
+^I    ^I/* the HT capability type byte is 3 bytes after the$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1159: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1119:
+^I    ^I/* the HT capability type byte is 3 bytes after the$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1162: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1122:
+		if(pci_read_config_byte(pdev, pos+3, &cap_type)) {
 		                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#1162: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1122:
+		if(pci_read_config_byte(pdev, pos+3, &cap_type)) {

ERROR:SPACING: space required before the open parenthesis '('
#1167: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1127:
+		if(!(cap_type & 0xE0)) {

WARNING:REPEATED_WORD: Possible repeated word: 'for'
#1174: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1134:
+			 * it's fatal anyway.  Also need to not check for
+			 * for upper byte errors if we are in 8 bit mode,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1178: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1138:
+			uint8_t linkwidth = 0, linkerr, link_a_b_off, link_off;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1179: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1139:
+			uint16_t linkctrl = 0;

ERROR:SPACING: space required before the open parenthesis '('
#1183: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1143:
+			if((cap_type >> 2) & 1) /* master host || slave */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1163:
+					_IPATH_UNIT_ERROR(t,
+					  "Couldn't read HT link control%d register\n",

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#1229: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1189:
+					    ("Couldn't read linkerror%d of HT slave/primary block\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#1247: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1207:
+						    ("Couldn't reread linkerror%d of HT slave/primary block\n",

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#1251: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1211:
+						    ("HT linkerror%d bits 0x%x couldn't be cleared\n",

CHECK:BRACES: Unbalanced braces around else statement
#1265: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1225:
+			else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1266: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1226:
+				uint32_t width;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1267: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1227:
+				uint32_t width;
+				switch (linkwidth & 7) {

CHECK:SPACING: No space is necessary after a cast
#1285: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1245:
+				((ipath_devdata *) pci_get_drvdata(pdev))->

CHECK:BRACES: Unbalanced braces around else statement
#1311: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1271:
+			else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1312: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1272:
+				uint32_t speed;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1313: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1273:
+				uint32_t speed;
+				switch (linkwidth & 0xf) {

CHECK:SPACING: No space is necessary after a cast
#1341: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1301:
+				((ipath_devdata *) pci_get_drvdata(pdev))->

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1305:
+^I^I    ^I/* use indirection register to get the intr handler */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1345: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1305:
+^I^I    ^I/* use indirection register to get the intr handler */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1346: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1306:
+			uint32_t intvec;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1347: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1307:
+			uint32_t intvec;
+			pci_write_config_byte(pdev, pos + HT_INTR_REG_INDEX,

CHECK:SPACING: No space is necessary after a cast
#1357: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1317:
+			ihandler = (uint64_t) int_handler_addr_lower |

CHECK:SPACING: No space is necessary after a cast
#1358: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1318:
+				((uint64_t) int_handler_addr_upper << 32);

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1362: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1322:
+			 * the the actual vector, either from the PCI

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1401: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1361:
+	} while((pos=pci_find_next_capability(pdev, pos, HT_CAPABILITY_ID)));
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#1401: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1361:
+	} while((pos=pci_find_next_capability(pdev, pos, HT_CAPABILITY_ID)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1405: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1365:
+		_IPATH_UNIT_ERROR(t,
+			"Couldn't find interrupt handler in config space\n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1422: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1382:
+	uint64_t guid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1424: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1384:
+	uint8_t csum, *bguid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1427: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1387:
+		uint8_t oguid;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1428: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1388:
+		uint8_t oguid;
+		devdata[t].ipath_guid = devdata[0].ipath_guid;

CHECK:SPACING: No space is necessary after a cast
#1429: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1389:
+		bguid = (uint8_t *) & devdata[t].ipath_guid;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1429: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1389:
+		bguid = (uint8_t *) & devdata[t].ipath_guid;
 		                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1456: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1416:
+	if (!(buf = vmalloc(len))) {

CHECK:SPACING: No space is necessary after a cast
#1475: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1435:
+	if (*(uint64_t *) ifp->if_guid == 0ULL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1476: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1436:
+	if (*(uint64_t *) ifp->if_guid == 0ULL
+	    || *(uint64_t *) ifp->if_guid == ~0ULL) {

CHECK:SPACING: No space is necessary after a cast
#1476: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1436:
+	    || *(uint64_t *) ifp->if_guid == ~0ULL) {

CHECK:SPACING: No space is necessary after a cast
#1478: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1438:
+				  *(uint64_t *) ifp->if_guid);

CHECK:SPACING: No space is necessary after a cast
#1483: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1443:
+	if (*(uint64_t *) ifp->if_guid == 0x100007511000000)

WARNING:TYPO_SPELLING: 'probabaly' may be misspelled - perhaps 'probably'?
#1485: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1445:
+		    ("Warning, GUID %llx is default, probabaly not correct!\n",
 		                                     ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1486: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1446:
+		     *(uint64_t *) ifp->if_guid);

ERROR:SPACING: space required before the open parenthesis '('
#1489: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1449:
+	if(!bguid[0] && !bguid[1] && !bguid[2]) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1489: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1449:
+	if(!bguid[0] && !bguid[1] && !bguid[2]) {
[...]
+	else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1492: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1452:
+		 * it and shifted are 0.. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1495: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1455:
+		bguid[3] = bguid[4] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1499: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1459:
+	}
+	else

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1511: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1471:
+static void __devexit infinipath_remove_one(struct pci_dev *pdev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1517: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1477:
+		device_remove_file(&(pdev->dev), &dev_attr_status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1518: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1478:
+		device_remove_file(&(pdev->dev), &dev_attr_status_str);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1519: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1479:
+		device_remove_file(&(pdev->dev), &dev_attr_lid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1520: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1480:
+		device_remove_file(&(pdev->dev), &dev_attr_mlid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1521: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1481:
+		device_remove_file(&(pdev->dev), &dev_attr_guid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1522: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1482:
+		device_remove_file(&(pdev->dev), &dev_attr_nguid);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1523: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1483:
+		device_remove_file(&(pdev->dev), &dev_attr_serial);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#1524: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1484:
+		device_remove_file(&(pdev->dev), &dev_attr_unit);

CHECK:SPACING: No space is necessary after a cast
#1529: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1489:
+		     (uint32_t) (dd - devdata));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1544: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1504:
+int ipath_close(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1544: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1504:
+int ipath_close(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1544: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1504:
+int ipath_close(struct inode *, struct file *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1546: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1506:
+long ipath_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1546: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1506:
+long ipath_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1546: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1506:
+long ipath_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1546: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1506:
+long ipath_ioctl(struct file *, unsigned int, unsigned long);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1550: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1510:
+static struct file_operations ipath_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#1576: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1536:
+	int ret = 0, minor, i, prefunit=-1, devmax;
 	                               ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1576: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1536:
+	int ret = 0, minor, i, prefunit=-1, devmax;
 	                                ^

ERROR:SPACING: space required before the open parenthesis '('
#1600: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1560:
+	if(minor != IPATH_SMA

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1602: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1562:
+#ifdef IPATH_DIAG
+		&& minor != IPATH_DIAG

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1604: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1564:
+#endif
+		&& minor != IPATH_CTRL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1605: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1565:
+		&& minor != IPATH_CTRL
+		&& !cpus_empty(current->cpus_allowed)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1606: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1566:
+		&& !cpus_empty(current->cpus_allowed)
+		&& !cpus_full(current->cpus_allowed)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1608: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1568:
+		int ncpus = num_online_cpus(), curcpu = -1;
+		for(i=0; i<ncpus; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1608: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1568:
+		for(i=0; i<ncpus; i++)
 		     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1608: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1568:
+		for(i=0; i<ncpus; i++)
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1608: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1568:
+		for(i=0; i<ncpus; i++)

ERROR:SPACING: space required before the open parenthesis '('
#1609: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1569:
+			if(cpu_isset(i, current->cpus_allowed)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1571:
+				_IPATH_PRDBG("%s[%u] affinity set for cpu %d\n",
+					current->comm, current->pid, i);

ERROR:SPACING: space required before the open parenthesis '('
#1614: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1574:
+		if(curcpu != -1) {

ERROR:SPACING: space required before the open parenthesis '('
#1615: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1575:
+			for(ndev = 0; ndev < infinipath_max; ndev++)

ERROR:SPACING: space required before the open parenthesis '('
#1616: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1576:
+				if((devdata[ndev].ipath_flags & IPATH_PRESENT)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1617: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1577:
+				if((devdata[ndev].ipath_flags & IPATH_PRESENT)
+				    && devdata[ndev].ipath_kregbase)

ERROR:SPACING: space required before the open parenthesis '('
#1619: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1579:
+			if(npresent) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1620: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1580:
+				prefunit = curcpu/(ncpus/npresent);
 				                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1620: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1580:
+				prefunit = curcpu/(ncpus/npresent);
 				                        ^

WARNING:SPLIT_STRING: quoted string split across lines
#1622: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1582:
+				_IPATH_DBG("%s[%u] %d chips, %d cpus, "
+					   "%d cpus/chip, select unit %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1624: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1584:
+					   npresent, ncpus, ncpus/npresent,
 					                         ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1650: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1610:
+	}
+	else if (minor) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1664: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1624:
+^I * topology aware, and round-robin across chips that are $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1670: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1630:
+	npresent = maxofallports = 0;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[ndev].ipath_flags'
#1677: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1637:
+		if ((devdata[ndev].
+		     ipath_flags & (IPATH_LINKDOWN | IPATH_LINKUNK))) {

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#1698: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1658:
+	devmax = prefunit!=-1 ? prefunit+1 : infinipath_max;
 	                 ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1698: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1658:
+	devmax = prefunit!=-1 ? prefunit+1 : infinipath_max;
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1698: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1658:
+	devmax = prefunit!=-1 ? prefunit+1 : infinipath_max;
 	                                ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#1701: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1661:
+		for (ndev = prefunit!=-1?prefunit:0; ndev < devmax; ndev++) {
 		                    ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1701: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1661:
+		for (ndev = prefunit!=-1?prefunit:0; ndev < devmax; ndev++) {
 		                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1701: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1661:
+		for (ndev = prefunit!=-1?prefunit:0; ndev < devmax; ndev++) {
 		                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1701: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1661:
+		for (ndev = prefunit!=-1?prefunit:0; ndev < devmax; ndev++) {
 		                                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1704: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1664:
+			    !devdata[ndev].ipath_kregbase
+			    || !devdata[ndev].ipath_lid

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1705: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1665:
+			    || !devdata[ndev].ipath_lid
+			    || (devdata[ndev].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[ndev].ipath_flags'
#1706: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1666:
+			    || (devdata[ndev].
+				ipath_flags & (IPATH_LINKDOWN | IPATH_LINKUNK)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1712: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1672:
+				void *p, *ptmp;
+				p = kmalloc(sizeof(ipath_portdata), GFP_KERNEL);

CHECK:SPACING: space preferred before that '+' (ctx:ExE)
#1724: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1684:
+					    +
 					    ^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[ndev].ipath_pd[i]->port_wait'
#1742: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1702:
+				init_waitqueue_head(&devdata[ndev].ipath_pd[i]->
+						    port_wait);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[ndev].ipath_pd[i]->port_comm'
#1756: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1716:
+					sizeof(devdata[ndev].ipath_pd[i]->
+					       port_comm));

ERROR:SPACING: space required before the open parenthesis '('
#1769: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1729:
+			if(prefunit > 0) { /* if we started above unit 0, retry from 0 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1771: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1731:
+				_IPATH_PRDBG("%s[%u] no ports on prefunit %d, clear and re-check\n",
+					current->comm, current->pid, prefunit);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1820: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1780:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1845: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1805:
+		if ((devdata[s].ipath_flags & IPATH_PRESENT)
+		    && devdata[s].ipath_kregbase) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1861: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1821:
+static void ipath_clear_tids(const ipath_type t, unsigned port)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1863: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1823:
+	volatile uint64_t *tidbase;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1863: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1823:
+	volatile uint64_t *tidbase;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1866: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1826:
+	uint64_t tidval;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1867: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1827:
+	uint64_t tidval;
+	dd = &devdata[t];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1888: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1848:
+	tidbase = (volatile uint64_t *)((char *)(dd->ipath_kregbase) +

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1896: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1856:
+	yield();		/* don't hog the cpu */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1899: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1859:
+	tidbase = (volatile uint64_t *)((char *)(dd->ipath_kregbase) +

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1906: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1866:
+	yield();		/* don't hog the cpu */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1941: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1901:
+		unsigned port;

CHECK:SPACING: No space is necessary after a cast
#1944: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1904:
+		pd = (ipath_portdata *) fp->private_data;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1964: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1924:
+		if (pd->port_rcvwait_to || pd->port_piowait_to
+		    || pd->port_rcvnowait || pd->port_pionowait) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1970: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1930:
+			pd->port_rcvwait_to = pd->port_piowait_to =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1971: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1931:
+			    pd->port_rcvnowait = pd->port_pionowait = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1996: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1956:
+				int i = dd->ipath_pbufsport * (port - 1);
+				ipath_disarm_piobufs(t, i, dd->ipath_pbufsport);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#2020: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1980:
+						if (dd->ipath_pageshadow[i]) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pageshadow'
#2023: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1983:
+								      &dd->
+								      ipath_pageshadow

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2026: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1986:
+							dd->ipath_pageshadow[i]
+							    = NULL;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ipath_stats.sps_pageunlocks'
#2029: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1989:
+							ipath_stats.
+							    sps_pageunlocks++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2037: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1997:
+					if (ipath_stats.sps_pagelocks
+					    || ipath_stats.sps_pageunlocks)

WARNING:SPLIT_STRING: quoted string split across lines
#2040: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2000:
+						    ("%llu pages locked, %llu unlocked with"
+						     " ipath_m{un}lock\n",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ipath_stats.sps_pageunlocks'
#2043: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2003:
+						     ipath_stats.
+						     sps_pageunlocks);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2072: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2032:
+static void ipath_disarm_piobufs(const ipath_type t, unsigned first,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2073: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2033:
+				 unsigned cnt)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2075: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2035:
+	unsigned i, last = first + cnt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2076: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2036:
+	uint64_t sendctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2077: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2037:
+	uint64_t sendctrl;
+	for (i = first; i < last; i++) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2084: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2044:
+static void ipath_clean_partkey(ipath_portdata * pd, ipath_devdata * dd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2084: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2044:
+static void ipath_clean_partkey(ipath_portdata * pd, ipath_devdata * dd)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2087: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2047:
+	uint64_t oldpkey;

CHECK:SPACING: No space is necessary after a cast
#2091: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2051:
+	    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeys[1]'
#2092: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2052:
+	    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->
+					     ipath_pkeys[1] << 16)

CHECK:SPACING: No space is necessary after a cast
#2093: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2053:
+	    | ((uint64_t) dd->ipath_pkeys[2] << 32)

CHECK:SPACING: No space is necessary after a cast
#2094: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2054:
+	    | ((uint64_t) dd->ipath_pkeys[3] << 48);

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(pd->port_pkeys)
#2096: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2056:
+	for (i = 0; i < (sizeof(pd->port_pkeys) / sizeof(pd->port_pkeys[0]));

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(dd->ipath_pkeys)
#2103: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2063:
+		     j < (sizeof(dd->ipath_pkeys) / sizeof(dd->ipath_pkeys[0]));

CHECK:BRACES: Unbalanced braces around else statement
#2116: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2076:
+				} else

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeyrefs[j]'
#2122: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2082:
+					     atomic_read(&dd->
+							 ipath_pkeyrefs[j]));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2129: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2089:
+		uint64_t pkey;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2130: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2090:
+		uint64_t pkey;
+		pkey =

CHECK:SPACING: No space is necessary after a cast
#2131: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2091:
+		    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeys[1]'
#2132: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2092:
+		    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->
+						     ipath_pkeys[1] << 16)

CHECK:SPACING: No space is necessary after a cast
#2133: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2093:
+		    | ((uint64_t) dd->ipath_pkeys[2] << 32)

CHECK:SPACING: No space is necessary after a cast
#2134: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2094:
+		    | ((uint64_t) dd->ipath_pkeys[3] << 48);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2184: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2144:
+	unsigned unit = (arg >> 16) & 0xffff;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2187: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2147:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2201: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2161:
+	unsigned unit = (arg >> 16) & 0xffff;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2204: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2164:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2212: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2172:
+	ipath_stats.sps_mlid[unit] = devdata[unit].ipath_mlid = arg;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2220: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2180:
+static int ipath_get_devstatus(uint64_t * a)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2223: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2183:
+	uint64_t unit64;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2224: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2184:
+	uint32_t unit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2225: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2185:
+	uint64_t devstatus;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2227: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2187:
+	if ((ret = copy_from_user(&unit64, a, sizeof unit64))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit64 should be sizeof(unit64)
#2227: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2187:
+	if ((ret = copy_from_user(&unit64, a, sizeof unit64))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2233: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2193:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2240: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2200:
+	if ((ret = copy_to_user(a, &devstatus, sizeof devstatus)))

WARNING:SIZEOF_PARENTHESIS: sizeof devstatus should be sizeof(devstatus)
#2240: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2200:
+	if ((ret = copy_to_user(a, &devstatus, sizeof devstatus)))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2247: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2207:
+static int ipath_get_mlid(uint32_t * a)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2250: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2210:
+	uint32_t unit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2251: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2211:
+	uint32_t mlid;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2253: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2213:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#2253: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2213:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2258: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2218:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2265: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2225:
+	if ((ret = copy_to_user(a, &mlid, sizeof mlid)))

WARNING:SIZEOF_PARENTHESIS: sizeof mlid should be sizeof(mlid)
#2265: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2225:
+	if ((ret = copy_to_user(a, &mlid, sizeof mlid)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2275: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2235:
+	if ((ret = copy_from_user(&setguid, a, sizeof setguid))) {

WARNING:SIZEOF_PARENTHESIS: sizeof setguid should be sizeof(setguid)
#2275: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2235:
+	if ((ret = copy_from_user(&setguid, a, sizeof setguid))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2303: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2263:
+ * We put the actual received count into the iov on return, and the unit we $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2310: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2270:
+static int ipath_rcvsma_pkt(struct ipath_sendpkt * p)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2316: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2276:
+	if ((ret = copy_from_user(&rpkt, p, sizeof rpkt))) {

WARNING:SIZEOF_PARENTHESIS: sizeof rpkt should be sizeof(rpkt)
#2316: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2276:
+	if ((ret = copy_from_user(&rpkt, p, sizeof rpkt))) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2339: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2299:
+		uint32_t slen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2340: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2300:
+		uint8_t *sdata;

CHECK:SPACING: No space is necessary after a cast
#2367: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2327:
+		len = min((uint32_t) rpkt.sps_iov[0].iov_len, slen);

WARNING:MINMAX: min() should probably be min_t(uint32_t, rpkt.sps_iov[0].iov_len, slen)
#2367: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2327:
+		len = min((uint32_t) rpkt.sps_iov[0].iov_len, slen);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2374: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2334:
+		if (!ret) {
[...]
+		} else
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2378: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2338:
+			if ((ret = copy_to_user(p, &rpkt, sizeof rpkt)))

WARNING:SIZEOF_PARENTHESIS: sizeof rpkt should be sizeof(rpkt)
#2378: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2338:
+			if ((ret = copy_to_user(p, &rpkt, sizeof rpkt)))

CHECK:BRACES: Unbalanced braces around else statement
#2382: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2342:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2394: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2354:
+static int ipath_get_portinfo(uint32_t * a)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2397: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2357:
+	uint32_t unit, tmp, tmp2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2399: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2359:
+	uint32_t portinfo[13];	/* just the data for Portinfo, in host horder */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2401: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2361:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#2401: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2361:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2406: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2366:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#2412: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2372:
+	memset(portinfo, 0, sizeof portinfo);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2432: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2392:
+	    |(2 << 16)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2434: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2394:
+	    |(3 << 8)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2436: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2396:
+	    |(2 << 0);
 	    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2439: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2399:
+	if (tmp == 0x11)
[...]
+	else if (tmp == 0x21)
[...]
+	else if (tmp == 0x31)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2445: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2405:
+	else {

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2450: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2410:
+	    |(tmp << 24)	/* PortState */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2451: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2411:
+	    |(tmp2 << 20)	/* PortPhysicalState */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2452: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2412:
+	    |(2 << 16)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2457: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2417:
+	    |(1 << 4)		/* LinkSpeedActive */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2458: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2418:
+	    |(1 << 0);		/* LinkSpeedEnabled */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2485: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2445:
+	    |(1 << 20)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2494: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2454:
+	    |(7 << 13)		/* VLStallCount */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2495: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2455:
+	    |(0x1f << 8)	/* HOQLife */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2496: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2456:
+	    |(1 << 4)		/* OperationalVLs 0 */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2497: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2457:
+	    |(1 << 3)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2517: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2477:
+	    |(0xf << 16)	/* OverRunErrors are programmed to max */
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2520: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2480:
+	if ((ret = copy_to_user(a, portinfo, sizeof portinfo)))

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#2520: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2480:
+	if ((ret = copy_to_user(a, portinfo, sizeof portinfo)))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2526: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2486:
+static int ipath_get_nodeinfo(uint32_t * a)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2529: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2489:
+	uint32_t unit;		/*, tmp, tmp2; */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2531: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2491:
+	uint32_t nodeinfo[10];	/* just the data for Nodeinfo, in host horder */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2533: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2493:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#2533: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2493:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2538: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2498:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:SIZEOF_PARENTHESIS: sizeof nodeinfo should be sizeof(nodeinfo)
#2546: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2506:
+	memset(nodeinfo, 0, sizeof nodeinfo);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2551: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2511:
+	    |(1 << 0);		/* NumPorts */
 	    ^

CHECK:SPACING: No space is necessary after a cast
#2552: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2512:
+	nodeinfo[1] = (uint32_t) (dd->ipath_guid >> 32);

CHECK:SPACING: No space is necessary after a cast
#2553: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2513:
+	nodeinfo[2] = (uint32_t) (dd->ipath_guid & 0xffffffff);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2559: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2519:
+	    |(dd->ipath_deviceid << 0);
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2564: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2524:
+	if ((ret = copy_to_user(a, nodeinfo, sizeof nodeinfo)))

WARNING:SIZEOF_PARENTHESIS: sizeof nodeinfo should be sizeof(nodeinfo)
#2564: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2524:
+	if ((ret = copy_to_user(a, nodeinfo, sizeof nodeinfo)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2572: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2532:
+	int ret = 0;
+	switch (cmd) {

CHECK:SPACING: No space is necessary after a cast
#2574: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2534:
+		if (!(ret = ipath_send_smapkt((struct ipath_sendpkt *) a)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2574: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2534:
+		if (!(ret = ipath_send_smapkt((struct ipath_sendpkt *) a)))

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#2578: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2538:
+	case IPATH_RCV_SMA_PKT:	/* recieve an SMA or MAD packet */
 	                       	   ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2579: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2539:
+		ret = ipath_rcvsma_pkt((struct ipath_sendpkt *) a);

CHECK:SPACING: No space is necessary after a cast
#2582: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2542:
+		ret = ipath_kset_lid((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#2585: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2545:
+		ret = ipath_kset_mtu((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2549:
+		ret = ipath_kset_linkstate((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#2592: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2552:
+		ret = ipath_get_portinfo((uint32_t *) a);

CHECK:SPACING: No space is necessary after a cast
#2595: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2555:
+		ret = ipath_get_nodeinfo((uint32_t *) a);

CHECK:SPACING: No space is necessary after a cast
#2606: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2566:
+		ret = ipath_kset_mlid((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#2609: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2569:
+		ret = ipath_get_mlid((uint32_t *) a);

CHECK:SPACING: No space is necessary after a cast
#2612: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2572:
+		ret = ipath_get_devstatus((uint64_t *) a);

ERROR:SPACING: space required before the open parenthesis '('
#2626: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2586:
+	if(copy_from_user(&c, (void *)a, sizeof c))

WARNING:SIZEOF_PARENTHESIS: sizeof c should be sizeof(c)
#2626: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2586:
+	if(copy_from_user(&c, (void *)a, sizeof c))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 86 errors, 155 warnings, 194 checks, 2589 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124514.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
