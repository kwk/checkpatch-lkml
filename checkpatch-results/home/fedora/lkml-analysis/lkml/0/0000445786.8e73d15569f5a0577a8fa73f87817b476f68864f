WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#32: 
work without beeing totally rewritten and this patch is an alternate
             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: drivers/char/mem.c:47:
+extern long vread(char *buf, char *addr, unsigned long count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: include/linux/vmalloc.h:1:
+#ifndef _LINUX_VMALLOC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: include/linux/vmalloc.h:9:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: include/linux/vmalloc.h:22:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: include/linux/vmalloc.h:24:
+extern void * vmalloc(unsigned long size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/vmalloc.h:24:
+extern void * vmalloc(unsigned long size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: include/linux/vmalloc.h:25:
+extern void * vmalloc_32(unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/vmalloc.h:25:
+extern void * vmalloc_32(unsigned long size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: include/linux/vmalloc.h:26:
+extern void * vmap_pages(struct page **pages, unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/vmalloc.h:26:
+extern void * vmap_pages(struct page **pages, unsigned long size,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#117: FILE: include/linux/vmalloc.h:28:
+extern void vfree(void * addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/vmalloc.h:28:
+extern void vfree(void * addr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: include/linux/vmalloc.h:30:
+extern struct vm_struct * get_vm_area (unsigned long size, unsigned long flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: include/linux/vmalloc.h:30:
+extern struct vm_struct * get_vm_area (unsigned long size, unsigned long flags);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/vmalloc.h:30:
+extern struct vm_struct * get_vm_area (unsigned long size, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/vmalloc.h:33:
+extern void vmfree_area_pages(unsigned long address, unsigned long size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: mm/vmalloc.c:102:
+static inline int alloc_area_pte(pte_t * pte, struct page ** pages,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#150: FILE: mm/vmalloc.c:102:
+static inline int alloc_area_pte(pte_t * pte, struct page ** pages,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: mm/vmalloc.c:136:
+static inline int alloc_area_pmd(pmd_t * pmd, struct page ** pages,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#182: FILE: mm/vmalloc.c:136:
+static inline int alloc_area_pmd(pmd_t * pmd, struct page ** pages,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: mm/vmalloc.c:151:
+		if (alloc_area_pte(pte, pages, address, end - address,
+					gfp_mask, prot))

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#204: FILE: mm/vmalloc.c:159:
+int __vmap_area_pages(struct page ** pages, unsigned long address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: mm/vmalloc.c:178:
+		if (alloc_area_pmd(pmd, pages, address, end - address,
+					gfp_mask, prot))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: mm/vmalloc.c:267:
+void * vmap_pages(struct page **pages, unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: mm/vmalloc.c:268:
+void * vmap_pages(struct page **pages, unsigned long size,
+		 int gfp_mask, pgprot_t prot)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: mm/vmalloc.c:289:
+void * __vmalloc (unsigned long size, int gfp_mask, pgprot_t prot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: mm/vmalloc.c:289:
+void * __vmalloc (unsigned long size, int gfp_mask, pgprot_t prot)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#301: FILE: mm/vmalloc.c:298:
+void * vmalloc (unsigned long size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: mm/vmalloc.c:298:
+void * vmalloc (unsigned long size)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#303: FILE: mm/vmalloc.c:300:
+	return vmap_pages(NULL, size, GFP_KERNEL|__GFP_HIGHMEM, PAGE_KERNEL);
 	                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: mm/vmalloc.c:307:
+void * vmalloc_32(unsigned long size)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#312: FILE: mm/vmalloc.c:309:
+	return vmap_pages(NULL, size, GFP_KERNEL|GFP_DMA, PAGE_KERNEL);
 	                                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#315: FILE: mm/vmalloc.c:312:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 6 warnings, 14 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
