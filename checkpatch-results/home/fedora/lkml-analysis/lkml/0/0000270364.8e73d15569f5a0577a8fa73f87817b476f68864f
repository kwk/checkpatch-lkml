ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: arch/ppc64/kernel/rtas.c:117:
+	char * buff_copy = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: arch/ppc64/kernel/rtas.c:152:
+	/* A -1 return code indicates that the last command couldn't
+	   be completed due to a hardware error. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: arch/ppc64/kernel/rtas.c:152:
+	   be completed due to a hardware error. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#102: FILE: arch/ppc64/kernel/rtas.c:169:
+		if (buff_copy) {
+			memcpy(buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#134: FILE: arch/ppc64/kernel/rtas.c:375:
+	printk("RTAS system-reboot returned %d\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: arch/ppc64/kernel/rtas.c:377:
+	for (;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: arch/ppc64/kernel/rtas.c:386:
+	printk("RTAS power-off returned %d\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#152: FILE: arch/ppc64/kernel/rtas.c:388:
+	for (;;);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: arch/ppc64/kernel/rtas.c:426:
+	char * buff_copy;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#190: FILE: arch/ppc64/kernel/rtas.c:458:
+	/* A -1 return code indicates that the last command couldn't
+	   be completed due to a hardware error. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: arch/ppc64/kernel/rtas.c:458:
+	   be completed due to a hardware error. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err_rc == 0'
#193: FILE: arch/ppc64/kernel/rtas.c:461:
+		if ((err_rc == 0) && buff_copy) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#193: FILE: arch/ppc64/kernel/rtas.c:461:
+		if ((err_rc == 0) && buff_copy) {
+			memcpy(buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err_rc == 0'
#204: FILE: arch/ppc64/kernel/rtas.c:469:
+		if ((args.rets[0] == -1) && (err_rc == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#204: FILE: arch/ppc64/kernel/rtas.c:469:
+		if ((args.rets[0] == -1) && (err_rc == 0)) {
+			log_error(buff_copy, ERR_TYPE_RTAS_LOG, 0);
+		}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 2 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
