WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
The truth is the current PnP Layer is not flexable enough to easily handle PnP

WARNING:TYPO_SPELLING: 'flexable' may be misspelled - perhaps 'flexible'?
#26: 
The truth is the current PnP Layer is not flexable enough to easily handle PnP
                                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#29: 
EISA ID.  These IDs are now kept entirely seperate from the pnp device matching
                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'resetted' may be misspelled - perhaps 'reset'?
#55: 
which is resetted to a sane value in the next cycle.
         ^^^^^^^^

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/drivers/input/gameport/ns558.c	Wed Nov  6 17:52:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: drivers/pnp/base.h:8:
+extern int __pnp_add_device(struct pnp_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: drivers/pnp/base.h:9:
+extern void __pnp_remove_device(struct pnp_dev *dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#170: FILE: drivers/pnp/card.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: drivers/pnp/card.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#194: FILE: drivers/pnp/card.c:25:
+static const struct pnp_card_id * match_card(struct pnpc_driver *drv, struct pnp_card *card)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: drivers/pnp/card.c:28:
+	const struct pnp_card_id *drv_id = drv->id_table;
+	while (*drv_id->id){

ERROR:SPACING: space required before the open brace '{'
#197: FILE: drivers/pnp/card.c:28:
+	while (*drv_id->id){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/pnp/card.c:29:
+		if (compare_pnp_id(card->id,drv_id->id))
 		                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#207: FILE: drivers/pnp/card.c:38:
+	struct pnp_card * card = to_pnp_card(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/pnp/card.c:39:
+	struct pnpc_driver * pnp_drv = to_pnpc_driver(drv);

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: drivers/pnp/card.c:40:
+	struct pnpc_driver * pnp_drv = to_pnpc_driver(drv);
+	if (match_card(pnp_drv, card) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!match_card"
#209: FILE: drivers/pnp/card.c:40:
+	if (match_card(pnp_drv, card) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:INDENTED_LABEL: labels should not be indented
#215: FILE: drivers/pnp/card.c:46:
+	name:	"pnp_card",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#216: FILE: drivers/pnp/card.c:47:
+	match:	card_bus_match,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#216: FILE: drivers/pnp/card.c:47:
+	match:	card_bus_match,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: drivers/pnp/card.c:50:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/pnp/card.c:61:
+	struct pnp_id *ptr;
+	if (!id)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: drivers/pnp/card.c:77:
+	struct pnp_id * id;

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: drivers/pnp/card.c:79:
+	struct pnp_id *next;
+	if (!card)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: drivers/pnp/card.c:91:
+	struct pnp_card * card = to_pnp_card(dmdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: drivers/pnp/card.c:92:
+	struct pnp_card * card = to_pnp_card(dmdev);
+	pnpc_free_ids(card);

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: drivers/pnp/card.c:104:
+	int error = 0;
+	if (!card || !card->protocol)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: drivers/pnp/card.c:108:
+	strcpy(card->dev.name,card->name);
 	                     ^

ERROR:SPACING: space required before the open brace '{'
#282: FILE: drivers/pnp/card.c:113:
+	if (error == 0){

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: drivers/pnp/card.c:115:
+		struct list_head *pos;
+		spin_lock(&pnp_lock);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#288: FILE: drivers/pnp/card.c:119:
+		list_for_each(pos,&card->devices){
 		                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#288: FILE: drivers/pnp/card.c:119:
+		list_for_each(pos,&card->devices){
 		                  ^

ERROR:SPACING: space required before the open brace '{'
#288: FILE: drivers/pnp/card.c:119:
+		list_for_each(pos,&card->devices){

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: drivers/pnp/card.c:121:
+			struct pnp_dev *dev = card_to_pnp_dev(pos);
+			__pnp_add_device(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: drivers/pnp/card.c:135:
+	struct list_head *pos;
+	if (!card)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#311: FILE: drivers/pnp/card.c:142:
+	list_for_each(pos,&card->devices){
 	                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#311: FILE: drivers/pnp/card.c:142:
+	list_for_each(pos,&card->devices){
 	                  ^

ERROR:SPACING: space required before the open brace '{'
#311: FILE: drivers/pnp/card.c:142:
+	list_for_each(pos,&card->devices){

WARNING:LINE_SPACING: Missing a blank line after declarations
#313: FILE: drivers/pnp/card.c:144:
+		struct pnp_dev *dev = card_to_pnp_dev(pos);
+		__pnp_remove_device(dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#328: FILE: drivers/pnp/card.c:159:
+	sprintf(dev->dev.bus_id, "%02x:%02x.%02x", dev->protocol->number, card->number,dev->number);
 	                                                                              ^

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#355: FILE: drivers/pnp/card.c:186:
+ * @from: Starting place to search from. If NULL it will start from the begining.
                                                                         ^^^^^^^^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#360: FILE: drivers/pnp/card.c:191:
+struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#360: FILE: drivers/pnp/card.c:191:
+struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from)

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: drivers/pnp/card.c:195:
+	struct pnp_dev *dev;
+	if (!card || !id)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: drivers/pnp/card.c:206:
+		if (compare_pnp_id(dev->id,id))
 		                          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#385: FILE: drivers/pnp/card.c:216:
+		if(pnp_activate_dev(dev)<0)
 		                        ^

ERROR:SPACING: space required before the open parenthesis '('
#385: FILE: drivers/pnp/card.c:216:
+		if(pnp_activate_dev(dev)<0)

WARNING:TYPO_SPELLING: 'stucture' may be misspelled - perhaps 'structure'?
#395: FILE: drivers/pnp/card.c:226:
+ * @dev: pointer to the PnP device stucture
                                    ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: drivers/pnp/card.c:242:
+	struct list_head *pos;
+	list_for_each(pos,&card->rdevs){

ERROR:SPACING: space required after that ',' (ctx:VxO)
#411: FILE: drivers/pnp/card.c:242:
+	list_for_each(pos,&card->rdevs){
 	                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#411: FILE: drivers/pnp/card.c:242:
+	list_for_each(pos,&card->rdevs){
 	                  ^

ERROR:SPACING: space required before the open brace '{'
#411: FILE: drivers/pnp/card.c:242:
+	list_for_each(pos,&card->rdevs){

WARNING:LINE_SPACING: Missing a blank line after declarations
#413: FILE: drivers/pnp/card.c:244:
+		struct pnp_dev *dev = list_entry(pos, struct pnp_dev, rdev_list);
+		pnp_release_card_device(dev);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#424: FILE: drivers/pnp/card.c:255:
+	pnp_dbg("pnp: match found with the PnP card '%s' and the driver '%s'", dev->bus_id,drv->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#424: FILE: drivers/pnp/card.c:255:
+	pnp_dbg("pnp: match found with the PnP card '%s' and the driver '%s'", dev->bus_id,drv->name);
 	                                                                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "card_id"
#428: FILE: drivers/pnp/card.c:259:
+		if (card_id != NULL)

ERROR:SPACING: space required before the open brace '{'
#430: FILE: drivers/pnp/card.c:261:
+		if (error >= 0){

CHECK:BRACES: braces {} should be used on all arms of this statement
#430: FILE: drivers/pnp/card.c:261:
+		if (error >= 0){
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#433: FILE: drivers/pnp/card.c:264:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: drivers/pnp/card.c:272:
+	struct pnp_card * card = to_pnp_card(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: drivers/pnp/card.c:273:
+	struct pnpc_driver * drv = card->driver;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: drivers/pnp/card.c:289:
+int pnpc_register_driver(struct pnpc_driver * drv)

ERROR:SPACING: space required before the open brace '{'
#473: FILE: drivers/pnp/card.c:304:
+	if (count >= 0){

ERROR:SPACING: space required after that ',' (ctx:VxO)
#475: FILE: drivers/pnp/card.c:306:
+		list_for_each(pos,&drv->driver.devices){
 		                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#475: FILE: drivers/pnp/card.c:306:
+		list_for_each(pos,&drv->driver.devices){
 		                  ^

ERROR:SPACING: space required before the open brace '{'
#475: FILE: drivers/pnp/card.c:306:
+		list_for_each(pos,&drv->driver.devices){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#497: FILE: drivers/pnp/card.c:328:
+	printk(KERN_INFO "pnp: Enabling Plug and Play Card Services.\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#503: FILE: drivers/pnp/card.c:334:
+EXPORT_SYMBOL(pnpc_add_card);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#504: FILE: drivers/pnp/card.c:335:
+EXPORT_SYMBOL(pnpc_remove_card);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#505: FILE: drivers/pnp/card.c:336:
+EXPORT_SYMBOL(pnpc_add_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#506: FILE: drivers/pnp/card.c:337:
+EXPORT_SYMBOL(pnpc_remove_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#507: FILE: drivers/pnp/card.c:338:
+EXPORT_SYMBOL(pnp_request_card_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#508: FILE: drivers/pnp/card.c:339:
+EXPORT_SYMBOL(pnp_release_card_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#509: FILE: drivers/pnp/card.c:340:
+EXPORT_SYMBOL(pnpc_register_driver);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#510: FILE: drivers/pnp/card.c:341:
+EXPORT_SYMBOL(pnpc_unregister_driver);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#511: FILE: drivers/pnp/card.c:342:
+EXPORT_SYMBOL(pnpc_add_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: drivers/pnp/core.c:92:
+	struct pnp_id * id;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#566: FILE: drivers/pnp/core.c:93:
+	struct pnp_id * next;

WARNING:LINE_SPACING: Missing a blank line after declarations
#567: FILE: drivers/pnp/core.c:94:
+	struct pnp_id * next;
+	if (!dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#667: FILE: drivers/pnp/core.c:173:
+	printk(KERN_INFO "Linux Plug and Play Support v0.93 (c) Adam Belay\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#675: FILE: drivers/pnp/core.c:179:
+EXPORT_SYMBOL(pnp_register_protocol);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#676: FILE: drivers/pnp/core.c:180:
+EXPORT_SYMBOL(pnp_unregister_protocol);

ERROR:SPACING: space required before the open brace '{'
#700: FILE: drivers/pnp/driver.c:43:
+	while (pos){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#701: FILE: drivers/pnp/driver.c:44:
+		if (memcmp(pos->id,id,3)==0)
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#701: FILE: drivers/pnp/driver.c:44:
+		if (memcmp(pos->id,id,3)==0)
 		                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#701: FILE: drivers/pnp/driver.c:44:
+		if (memcmp(pos->id,id,3)==0)
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#702: FILE: drivers/pnp/driver.c:45:
+			if (compare_func(pos->id,id)==1)
 			                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#702: FILE: drivers/pnp/driver.c:45:
+			if (compare_func(pos->id,id)==1)
 			                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#725: FILE: drivers/pnp/driver.c:52:
+static const struct pnp_device_id * match_device(struct pnp_driver *drv, struct pnp_dev *dev)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: drivers/pnp/driver.c:60:
+		if (compare_pnp_id(dev->id,drv_id->id))
 		                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev_id"
#772: FILE: drivers/pnp/driver.c:83:
+		if (dev_id != NULL)

ERROR:SPACING: space required before the open brace '{'
#775: FILE: drivers/pnp/driver.c:86:
+	if (error >= 0){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#849: FILE: drivers/pnp/interface.c:324:
+	struct pnp_id * pos = dev->id;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#856: FILE: drivers/pnp/interface.c:328:
+		str += sprintf(str,"%s\n", pos->id);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: drivers/pnp/isapnp/core.c:643:
+	pnpc_add_device(card,dev);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: drivers/pnp/isapnp/core.c:656:
+				pnpc_add_device(card,dev);
 				                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#918: FILE: drivers/pnp/isapnp/core.c:851:
+	pnpc_add_id(id,card);
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#927: FILE: drivers/pnp/isapnp/core.c:882:
+		if ((card = isapnp_alloc(sizeof(struct pnp_card))) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#978: FILE: drivers/pnp/isapnp/core.c:1087:
+	if(pnp_register_protocol(&isapnp_protocol)<0)
 	                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#978: FILE: drivers/pnp/isapnp/core.c:1087:
+	if(pnp_register_protocol(&isapnp_protocol)<0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#987: FILE: drivers/pnp/isapnp/core.c:1126:
+	protocol_for_each_card(&isapnp_protocol,card) {
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1007: FILE: drivers/pnp/isapnp/proc.c:149:
+	protocol_for_each_dev(&isapnp_protocol,dev) {
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1019: FILE: drivers/pnp/names.c:35:
+		if (compare_pnp_id(dev->id,pnp_id_eisaid[i])){
 		                          ^

ERROR:SPACING: space required before the open brace '{'
#1019: FILE: drivers/pnp/names.c:35:
+		if (compare_pnp_id(dev->id,pnp_id_eisaid[i])){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1031: FILE: drivers/pnp/pnpbios/core.c:1345:
+	for (i=0; i < 8; i++)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1034: FILE: drivers/pnp/pnpbios/core.c:1347:
+	for (i=0; i < 4; i++)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1037: FILE: drivers/pnp/pnpbios/core.c:1349:
+	for (i=0; i < 2; i++)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1040: FILE: drivers/pnp/pnpbios/core.c:1351:
+	for (i=0; i < 2; i++)
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1078: FILE: drivers/pnp/quirks.c:160:
+		if (compare_pnp_id(dev->id,pnp_fixups[i].id)) {
 		                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1104: FILE: drivers/pnp/system.c:99:
+static int system_pnp_probe(struct pnp_dev * dev, const struct pnp_device_id *dev_id)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1138: FILE: drivers/serial/8250_pnp.c:384:
+serial_pnp_probe(struct pnp_dev * dev, const struct pnp_device_id *dev_id)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1179: FILE: include/linux/pnp.h:35:
+	struct pnp_protocol * protocol;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1180: FILE: include/linux/pnp.h:36:
+	struct pnp_id * id;		/* contains supported EISA IDs*/

ERROR:POINTER_LOCATION: "foo	      * bar" should be "foo	      *bar"
#1186: FILE: include/linux/pnp.h:42:
+	void	      * protocol_data;	/* Used to store protocol specific data */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1188: FILE: include/linux/pnp.h:44:
+	struct pnpc_driver * driver;	/* pointer to the driver bound to this device */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#1198: FILE: include/linux/pnp.h:53:
+#define pnp_for_each_card(card) \
+	for(dev = global_to_pnp_card(pnp_cards.next); \
+	dev != global_to_pnp_card(&cards); \
+	dev = global_to_pnp_card(card>global_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#1199: FILE: include/linux/pnp.h:54:
+	for(dev = global_to_pnp_card(pnp_cards.next); \

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1201: FILE: include/linux/pnp.h:56:
+	dev = global_to_pnp_card(card>global_list.next))
 	                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: include/linux/pnp.h:58:
+static inline void *pnpc_get_drvdata (struct pnp_card *pcard)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1208: FILE: include/linux/pnp.h:63:
+static inline void pnpc_set_drvdata (struct pnp_card *pcard, void *data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1213: FILE: include/linux/pnp.h:68:
+static inline void *pnpc_get_protodata (struct pnp_card *pcard)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1218: FILE: include/linux/pnp.h:73:
+static inline void pnpc_set_protodata (struct pnp_card *pcard, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1236: FILE: include/linux/pnp.h:87:
+	struct pnp_card * card;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1237: FILE: include/linux/pnp.h:88:
+	struct pnp_id * id;		/* contains supported EISA IDs*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1239: FILE: include/linux/pnp.h:90:
+	void * protocol_data;		/* Used to store protocol specific data */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: include/linux/pnp.h:93:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1250: FILE: include/linux/pnp.h:99:
+	struct pnp_driver * driver;	/* pointer to the driver bound to this device */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1293: FILE: include/linux/pnp.h:146:
+	struct pnp_id * next;

WARNING:SPACING: Unnecessary space before function pointer arguments
#1319: FILE: include/linux/pnp.h:166:
+	int  (*probe)  (struct pnp_dev *dev, const struct pnp_device_id *dev_id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1331: FILE: include/linux/pnp.h:177:
+	int  (*probe)  (struct pnp_card *card, const struct pnp_card_id *card_id);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1332: FILE: include/linux/pnp.h:178:
+	void (*remove) (struct pnp_card *card);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: include/linux/pnp.h:182:
+#define	to_pnpc_driver(drv) container_of(drv,struct pnpc_driver, driver)
        	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1350: FILE: include/linux/pnp.h:314:
+#define protocol_for_each_card(protocol,card) \
                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'protocol' - possible side-effects?
#1350: FILE: include/linux/pnp.h:314:
+#define protocol_for_each_card(protocol,card) \
+	for((card) = protocol_to_pnp_card((protocol)->cards.next); \
+	(card) != protocol_to_pnp_card(&(protocol)->cards); \
+	(card) = protocol_to_pnp_card((card)->protocol_list.next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'card' - possible side-effects?
#1350: FILE: include/linux/pnp.h:314:
+#define protocol_for_each_card(protocol,card) \
+	for((card) = protocol_to_pnp_card((protocol)->cards.next); \
+	(card) != protocol_to_pnp_card(&(protocol)->cards); \
+	(card) = protocol_to_pnp_card((card)->protocol_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#1351: FILE: include/linux/pnp.h:315:
+	for((card) = protocol_to_pnp_card((protocol)->cards.next); \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1354: FILE: include/linux/pnp.h:318:
+#define protocol_for_each_dev(protocol,dev) \
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'protocol' - possible side-effects?
#1354: FILE: include/linux/pnp.h:318:
+#define protocol_for_each_dev(protocol,dev) \
+	for((dev) = protocol_to_pnp_dev((protocol)->devices.next); \
+	(dev) != protocol_to_pnp_dev(&(protocol)->devices); \
+	(dev) = protocol_to_pnp_dev((dev)->protocol_list.next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#1354: FILE: include/linux/pnp.h:318:
+#define protocol_for_each_dev(protocol,dev) \
+	for((dev) = protocol_to_pnp_dev((protocol)->devices.next); \
+	(dev) != protocol_to_pnp_dev(&(protocol)->devices); \
+	(dev) = protocol_to_pnp_dev((dev)->protocol_list.next))

ERROR:SPACING: space required before the open parenthesis '('
#1355: FILE: include/linux/pnp.h:319:
+	for((dev) = protocol_to_pnp_dev((protocol)->devices.next); \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1376: FILE: include/linux/pnp.h:347:
+int compare_pnp_id(struct pnp_id * pos, const char * id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1376: FILE: include/linux/pnp.h:347:
+int compare_pnp_id(struct pnp_id * pos, const char * id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1396: FILE: include/linux/pnp.h:371:
+static inline int compare_pnp_id(struct list_head * id_list, const char * id) { return -ENODEV; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1396: FILE: include/linux/pnp.h:371:
+static inline int compare_pnp_id(struct list_head * id_list, const char * id) { return -ENODEV; }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1403: FILE: include/linux/pnp.h:378:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1411: FILE: include/linux/pnp.h:386:
+struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1411: FILE: include/linux/pnp.h:386:
+struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1413: FILE: include/linux/pnp.h:388:
+int pnpc_register_driver(struct pnpc_driver * drv);

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#1424: FILE: include/linux/pnp.h:399:
+static inline struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1424: FILE: include/linux/pnp.h:399:
+static inline struct pnp_dev * pnp_request_card_device(struct pnp_card *card, const char *id, struct pnp_dev *from) { return NULL; }

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1502: FILE: sound/isa/opl3sa2.c:169:
+	{.id = "YMH0020", .driver_data = 0, devs : { {.id="YMH0021"}, } },
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1505: FILE: sound/isa/opl3sa2.c:171:
+	{.id = "YMH0030", .driver_data = 0, devs : { {.id="YMH0021"}, } },
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1508: FILE: sound/isa/opl3sa2.c:173:
+	{.id = "YMH0800", .driver_data = 0, devs : { {.id="YMH0021"}, } },
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1511: FILE: sound/isa/opl3sa2.c:175:
+	{.id = "NMX2200", .driver_data = 0, devs : { {.id="NMX2210"}, } },
 	                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1543: FILE: sound/isa/opl3sa2.c:630:
+        const struct pnp_card_id *id = snd_opl3sa2_isapnp_id[dev];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: sound/isa/opl3sa2.c:630:
+        const struct pnp_card_id *id = snd_opl3sa2_isapnp_id[dev];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1544: FILE: sound/isa/opl3sa2.c:631:
+        struct pnp_card *card = snd_opl3sa2_isapnp_cards[dev];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: sound/isa/opl3sa2.c:631:
+        struct pnp_card *card = snd_opl3sa2_isapnp_cards[dev];$

ERROR:SPACING: space required before the open brace '{'
#1570: FILE: sound/isa/opl3sa2.c:636:
+	if (!pdev){

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1571: FILE: sound/isa/opl3sa2.c:637:
+		snd_printdd("isapnp OPL3-SA: a card was found but it did not contain the needed devices\n",);

ERROR:SPACING: space required after that ',' (ctx:VxB)
#1571: FILE: sound/isa/opl3sa2.c:637:
+		snd_printdd("isapnp OPL3-SA: a card was found but it did not contain the needed devices\n",);
 		                                                                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1645: FILE: sound/isa/opl3sa2.c:838:
+static void snd_opl3sa2_isapnp_remove(struct pnp_card * card)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 97 errors, 50 warnings, 15 checks, 1517 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
