ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: arch/i386/pci/fixup.c:264:
+ * to select an initial video card for boot display. This boot video $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: arch/i386/pci/fixup.c:265:
+ * card will have it's BIOS copied to C0000 in system RAM. $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#100: FILE: arch/i386/pci/fixup.c:273:
+ */static void __devinit pci_fixup_video(struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/pci/pci-sysfs.c:184:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: drivers/pci/pci-sysfs.c:201:
+	u32 rom_addr;
+	pci_read_config_dword(pdev, pdev->rom_base_reg, &rom_addr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/pci/pci-sysfs.c:213:
+ * the shadow BIOS copy will be returned instead of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/pci/pci-sysfs.c:223:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/pci/pci-sysfs.c:225:
+^I^Istart = (loff_t)0xC0000; ^I/* primary video rom always starts here */$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#208: FILE: drivers/pci/pci-sysfs.c:231:
+			return (unsigned char *)pci_resource_start(pdev, PCI_ROM_RESOURCE);
+		} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res->parent"
#210: FILE: drivers/pci/pci-sysfs.c:233:
+			if (res->parent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/pci/pci-sysfs.c:235:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/pci/pci-sysfs.c:240:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/pci/pci-sysfs.c:245:
+^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#226: FILE: drivers/pci/pci-sysfs.c:249:
+		if (!(res->flags & (IORESOURCE_ROM_ENABLE | IORESOURCE_ROM_SHADOW | IORESOURCE_ROM_COPY)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/pci/pci-sysfs.c:252:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/pci/pci-sysfs.c:292:
+ * the shadow BIOS copy will be returned instead of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/pci/pci-sysfs.c:300:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/pci/pci-sysfs.c:304:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/pci/pci-sysfs.c:307:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/pci/pci-sysfs.c:309:
+^Iif (!res->start) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/pci/pci-sysfs.c:312:
+^Ires->end = res->start + *size; $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#290: FILE: drivers/pci/pci-sysfs.c:313:
+	memcpy((void*)res->start, rom, *size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/pci/pci-sysfs.c:316:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/pci/pci-sysfs.c:327:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/pci/pci-sysfs.c:334:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: drivers/pci/pci-sysfs.c:336:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/pci/pci-sysfs.c:347:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/pci/pci-sysfs.c:348:
+pci_remove_rom(struct pci_dev *pdev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: drivers/pci/pci-sysfs.c:351:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/pci/pci-sysfs.c:359:
+ * pci_cleanup_rom - internal routine for freeing the ROM copy created $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: drivers/pci/pci-sysfs.c:364:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/pci/pci-sysfs.c:365:
+pci_cleanup_rom(struct pci_dev *pdev) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: drivers/pci/pci-sysfs.c:368:
+	struct resource *res = &pdev->resource[PCI_ROM_RESOURCE];
+	if (res->flags & IORESOURCE_ROM_COPY) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#346: FILE: drivers/pci/pci-sysfs.c:369:
+		kfree((void*)res->start);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/pci/pci-sysfs.c:392:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/pci/pci-sysfs.c:396:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#374: FILE: drivers/pci/pci-sysfs.c:397:
+	if (off >= size)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#376: FILE: drivers/pci/pci-sysfs.c:399:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/pci/pci-sysfs.c:402:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/pci/pci-sysfs.c:406:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: drivers/pci/pci-sysfs.c:432:
+int pci_create_sysfs_dev_files (struct pci_dev *pdev)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/pci/pci-sysfs.c:445:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#414: FILE: drivers/pci/pci-sysfs.c:451:
+			rom_attr->attr.mode = S_IRUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/pci/pci-sysfs.c:459:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: drivers/pci/pci-sysfs.c:487:
+^I$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#458: FILE: drivers/pci/pci-sysfs.c:495:
+__initcall(pci_sysfs_init);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#460: FILE: drivers/pci/pci-sysfs.c:497:
+EXPORT_SYMBOL(pci_map_rom);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#461: FILE: drivers/pci/pci-sysfs.c:498:
+EXPORT_SYMBOL(pci_map_rom_copy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#462: FILE: drivers/pci/pci-sysfs.c:499:
+EXPORT_SYMBOL(pci_unmap_rom);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#463: FILE: drivers/pci/pci-sysfs.c:500:
+EXPORT_SYMBOL(pci_remove_rom);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: drivers/pci/pci.h:5:
+extern int pci_create_sysfs_dev_files(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: drivers/pci/pci.h:6:
+extern void pci_remove_sysfs_dev_files(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#474: FILE: drivers/pci/pci.h:7:
+extern void pci_cleanup_rom(struct pci_dev *dev);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#529: FILE: include/linux/ioport.h:86:
+#define IORESOURCE_ROM_ENABLE		(1<<0)	/* ROM is enabled, same as PCI_ROM_ADDRESS_ENABLE */
                              		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#529: FILE: include/linux/ioport.h:86:
+#define IORESOURCE_ROM_ENABLE		(1<<0)	/* ROM is enabled, same as PCI_ROM_ADDRESS_ENABLE */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#530: FILE: include/linux/ioport.h:87:
+#define IORESOURCE_ROM_SHADOW		(1<<1)	/* ROM is copy at C000:0 */
                              		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#530: FILE: include/linux/ioport.h:87:
+#define IORESOURCE_ROM_SHADOW		(1<<1)	/* ROM is copy at C000:0 */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#531: FILE: include/linux/ioport.h:88:
+#define IORESOURCE_ROM_COPY		(1<<2)	/* ROM is alloc'd copy, resource field overlaid */
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#531: FILE: include/linux/ioport.h:88:
+#define IORESOURCE_ROM_COPY		(1<<2)	/* ROM is alloc'd copy, resource field overlaid */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255683.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 13 warnings, 12 checks, 445 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255683.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
