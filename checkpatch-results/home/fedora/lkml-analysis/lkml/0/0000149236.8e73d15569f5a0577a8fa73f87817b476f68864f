WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
The attached patch adds extra permission grants to keys for the possessor of a

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#45: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/key.h:232:
+extern struct key_ref *key_create_or_update(struct key_ref *keyring,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: include/linux/key.h:239:
+extern int key_update(struct key_ref *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: include/linux/key.h:254:
+extern struct key_ref *keyring_search(struct key_ref *keyring,

CHECK:SPACING: No space is necessary after a cast
#255: FILE: include/linux/key.h:283:
+	return (struct key_ref *) ((unsigned long) key | possession);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#260: FILE: include/linux/key.h:288:
+	return (struct key *) ((unsigned long) key & ~1UL);

CHECK:SPACING: No space is necessary after a cast
#265: FILE: include/linux/key.h:293:
+	return (unsigned long) key & 1UL;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#335: FILE: include/linux/key-ui.h:113:
+	}
+	else if (key->uid == context->fsuid) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/linux/key-ui.h:134:
+extern struct key_ref *lookup_user_key(struct task_struct *context,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: security/keys/internal.h:74:
+extern struct key_ref *__keyring_search_one(struct key_ref *keyring,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: security/keys/internal.h:84:
+extern struct key_ref *keyring_search_aux(struct key_ref *keyring,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: security/keys/internal.h:90:
+extern struct key_ref *search_process_keyrings(struct key_type *type,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#483: FILE: security/keys/key.c:771:
+	 * to modify the keyring */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1509: FILE: security/keys/process_keys.c:420:
+		key = keyring_search_aux(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1552: FILE: security/keys/process_keys.c:500:
+		key = keyring_search_aux(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1748: FILE: security/keys/request_key.c:382:
+	}
+	else if (PTR_ERR(key_ref) != -EAGAIN) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1751: FILE: security/keys/request_key.c:385:
+	}
+	else  {

CHECK:BRACES: Unbalanced braces around else statement
#1751: FILE: security/keys/request_key.c:385:
+	else  {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 13 checks, 1607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
