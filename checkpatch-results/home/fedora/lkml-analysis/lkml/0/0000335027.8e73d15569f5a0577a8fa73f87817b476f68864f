WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#147: FILE: include/asm-h8300/hardirq.h:86:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#168: FILE: include/asm-i386/hardirq.h:88:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#225: FILE: include/asm-m68knommu/hardirq.h:90:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#267: FILE: include/asm-parisc/hardirq.h:100:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#309: FILE: include/asm-ppc64/hardirq.h:93:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#353: FILE: include/asm-sh/hardirq.h:87:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#374: FILE: include/asm-sparc/hardirq.h:100:
+do {								\
+                preempt_count() -= IRQ_EXIT_OFFSET;		\

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: include/asm-sparc/hardirq.h:101:
+                preempt_count() -= IRQ_EXIT_OFFSET;^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: include/asm-sparc/hardirq.h:101:
+                preempt_count() -= IRQ_EXIT_OFFSET;^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: include/asm-sparc/hardirq.h:102:
+                if (!in_interrupt() && softirq_pending())^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: include/asm-sparc/hardirq.h:102:
+                if (!in_interrupt() && softirq_pending())^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: include/asm-sparc/hardirq.h:103:
+                        do_softirq();^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: include/asm-sparc/hardirq.h:103:
+                        do_softirq();^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: include/asm-sparc/hardirq.h:104:
+                preempt_enable_no_resched();^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: include/asm-sparc/hardirq.h:104:
+                preempt_enable_no_resched();^I^I^I\$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#395: FILE: include/asm-sparc64/hardirq.h:89:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#437: FILE: include/asm-x86_64/hardirq.h:88:
+do {								\
+		preempt_count() -= IRQ_EXIT_OFFSET;		\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#452: FILE: include/linux/interrupt.h:98:
+#define __raise_softirq_irqoff(nr) do { softirq_pending() |= 1UL << (nr); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: include/linux/netdevice.h:660:
+       if (softirq_pending())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#475: FILE: include/linux/netdevice.h:660:
+       if (softirq_pending())
                do_softirq();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 16 warnings, 0 checks, 410 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
