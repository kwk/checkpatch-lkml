CHECK:SPACING: No space is necessary after a cast
#183: FILE: drivers/bluetooth/bfusb.c:330:
+		skb->dev = (void *) bfusb->hdev;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#298: FILE: drivers/bluetooth/bluecard_cs.c:407:
+			info->rx_skb->dev = (void *) info->hdev;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#326: FILE: drivers/bluetooth/bluecard_cs.c:783:
+		printk(KERN_WARNING "bluecard_cs: Can't allocate HCI device.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#340: FILE: drivers/bluetooth/bluecard_cs.c:802:
+		printk(KERN_WARNING "bluecard_cs: Can't register HCI device.\n");

CHECK:SPACING: No space is necessary after a cast
#407: FILE: drivers/bluetooth/bt3c_cs.c:271:
+			info->rx_skb->dev = (void *) info->hdev;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->hdev->flags
#418: FILE: drivers/bluetooth/bt3c_cs.c:297:
+				clear_bit(HCI_RUNNING, &(info->hdev->flags));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#428: FILE: drivers/bluetooth/bt3c_cs.c:539:
+		printk(KERN_WARNING "bt3c_cs: Can't allocate HCI device.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#442: FILE: drivers/bluetooth/bt3c_cs.c:558:
+		printk(KERN_WARNING "bt3c_cs: Can't register HCI device.\n");

CHECK:SPACING: No space is necessary after a cast
#508: FILE: drivers/bluetooth/btuart_cs.c:219:
+			info->rx_skb->dev = (void *) info->hdev;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->hdev->flags
#519: FILE: drivers/bluetooth/btuart_cs.c:243:
+				clear_bit(HCI_RUNNING, &(info->hdev->flags));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#529: FILE: drivers/bluetooth/btuart_cs.c:534:
+		printk(KERN_WARNING "btuart_cs: Can't allocate HCI device.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#543: FILE: drivers/bluetooth/btuart_cs.c:553:
+		printk(KERN_WARNING "btuart_cs: Can't register HCI device.\n");

CHECK:SPACING: No space is necessary after a cast
#610: FILE: drivers/bluetooth/dtl1_cs.c:280:
+					info->rx_skb->dev = (void *) info->hdev;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#620: FILE: drivers/bluetooth/dtl1_cs.c:513:
+		printk(KERN_WARNING "dtl1_cs: Can't allocate HCI device.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#637: FILE: drivers/bluetooth/dtl1_cs.c:532:
+		printk(KERN_WARNING "dtl1_cs: Can't register HCI device.\n");

CHECK:SPACING: No space is necessary after a cast
#677: FILE: drivers/bluetooth/hci_bcsp.c:620:
+				bcsp->rx_skb->dev = (void *) hu->hdev;

CHECK:SPACING: No space is necessary after a cast
#698: FILE: drivers/bluetooth/hci_h4.c:246:
+		h4->rx_skb->dev = (void *) hu->hdev;

CHECK:SPACING: No space is necessary after a cast
#935: FILE: drivers/bluetooth/hci_usb.c:649:
+			skb->dev = (void *) husb->hdev;

CHECK:SPACING: No space is necessary after a cast
#1030: FILE: drivers/bluetooth/hci_vhci.c:145:
+	skb->dev = (void *) hci_vhci->hdev;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1086: FILE: drivers/bluetooth/hci_vhci.c:311:
+	if (hci_unregister_dev(hci_vhci->hdev) < 0) {
+		BT_ERR("Can't unregister HCI device %s", hci_vhci->hdev->name);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hdev)...) over kmalloc(sizeof(struct hci_dev)...)
#1131: FILE: net/bluetooth/hci_core.c:770:
+	hdev = kmalloc(sizeof(struct hci_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 12 checks, 952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
