WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
diff --minimal -urN -X /usr/share/dontdiff linux-2.5.73.vanilla/kernel/irq.=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: kernel/irq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#68: FILE: kernel/irq.c:2:
+ *  linux/kernel/irq.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'apropriate' may be misspelled - perhaps 'appropriate'?
#94: FILE: kernel/irq.c:28:
+ * interrupt source is transparently wired to the apropriate
                                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#118: FILE: kernel/irq.c:52:
+#include <asm/uaccess.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#140: FILE: kernel/irq.c:74:
+	printk(KERN_CRIT "Unexpected IRQ trap at vector %u\n", irq);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#144: FILE: kernel/irq.c:78:
+struct hw_interrupt_type no_irq_type =3D {
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#145: FILE: kernel/irq.c:79:
+	.typename	=3D "none",
 	         	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#146: FILE: kernel/irq.c:80:
+	.startup	=3D no_irq_startup,
 	        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: kernel/irq.c:81:
+	.shutdown	=3D no_irq_enable_disable,
 	         	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#148: FILE: kernel/irq.c:82:
+	.enable		=3D no_irq_enable_disable,
 	       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#149: FILE: kernel/irq.c:83:
+	.disable	=3D no_irq_enable_disable,
 	        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: kernel/irq.c:84:
+	.ack		=3D no_irq_ack,
 	    		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: kernel/irq.c:85:
+	.end		=3D no_irq_enable_disable,
 	    		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#164: FILE: kernel/irq.c:98:
+	int status =3D 1;	/* Force the "do bottom halves" bit */
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: kernel/irq.c:99:
+	int retval =3D 0;
 	           ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#171: FILE: kernel/irq.c:105:
+		status |=3D action->flags;
 		       ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#172: FILE: kernel/irq.c:106:
+		retval |=3D action->handler(irq, action->dev_id, regs);
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: kernel/irq.c:107:
+		action =3D action->next;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#184: FILE: kernel/irq.c:118:
+static void __report_bad_irq(int irq, irq_desc_t *desc, irqreturn_t action=
                                                                           ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#185: FILE: kernel/irq.c:118:
_ret)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#186: FILE: kernel/irq.c:119:
+static void __report_bad_irq(int irq, irq_desc_t *desc, irqreturn_t action=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#189: FILE: kernel/irq.c:122:
+	if (action_ret !=3D IRQ_HANDLED && action_ret !=3D IRQ_NONE) {
 	               ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#189: FILE: kernel/irq.c:122:
+	if (action_ret !=3D IRQ_HANDLED && action_ret !=3D IRQ_NONE) {
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#190: FILE: kernel/irq.c:123:
+		printk(KERN_ERR "irq event %d: bogus return value %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: kernel/irq.c:124:
+		printk(KERN_ERR "irq event %d: bogus return value %x\n",
+				irq, action_ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#193: FILE: kernel/irq.c:126:
+		printk(KERN_ERR "irq %d: nobody cared!\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#196: FILE: kernel/irq.c:129:
+	printk(KERN_ERR "handlers:\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#197: FILE: kernel/irq.c:130:
+	action =3D desc->action;
 	       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#199: FILE: kernel/irq.c:132:
+		printk(KERN_ERR "[<%p>]", action->handler);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: kernel/irq.c:134:
+		print_symbol(" (%s)",
+			(unsigned long)action->handler);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: kernel/irq.c:135:
+		printk("\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#203: FILE: kernel/irq.c:136:
+		action =3D action->next;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#207: FILE: kernel/irq.c:140:
+static void report_bad_irq(int irq, irq_desc_t *desc, irqreturn_t action_r=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#209: FILE: kernel/irq.c:141:
+static void report_bad_irq(int irq, irq_desc_t *desc, irqreturn_t action_r=
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#210: FILE: kernel/irq.c:142:
+	static int count =3D 100;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#222: FILE: kernel/irq.c:154:
+	noirqdebug =3D 1;
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#223: FILE: kernel/irq.c:155:
+	printk(KERN_INFO "IRQ lockup detection disabled\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#227: FILE: kernel/irq.c:159:
+__setup("noirqdebug", noirqdebug_setup);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#246: FILE: kernel/irq.c:177:
+	if (action_ret !=3D IRQ_HANDLED) {
 	               ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#248: FILE: kernel/irq.c:179:
+		if (action_ret !=3D IRQ_NONE)
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#256: FILE: kernel/irq.c:187:
+	desc->irq_count =3D 0;
 	                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#265: FILE: kernel/irq.c:196:
+		printk(KERN_EMERG "Disabling IRQ #%d\n", irq);

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#266: FILE: kernel/irq.c:197:
+		desc->status |=3D IRQ_DISABLED;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#269: FILE: kernel/irq.c:200:
+	desc->irqs_unhandled =3D 0;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#276: FILE: kernel/irq.c:207:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: kernel/irq.c:209:
+        /* is there anything to synchronize with? */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#296: FILE: kernel/irq.c:226:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: kernel/irq.c:232:
+	else=20
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: kernel/irq.c:232:
+	else=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: kernel/irq.c:233:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#309: FILE: kernel/irq.c:239:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#315: FILE: kernel/irq.c:245:
+	else=20
 	    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#315: FILE: kernel/irq.c:245:
+	else=20

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#316: FILE: kernel/irq.c:246:
+		BUG();

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#325: FILE: kernel/irq.c:255:
+=20
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#339: FILE: kernel/irq.c:269:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#346: FILE: kernel/irq.c:276:
+			desc->status |=3D IRQ_DISABLED;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#382: FILE: kernel/irq.c:312:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#388: FILE: kernel/irq.c:318:
+		unsigned int status =3D desc->status & ~IRQ_DISABLED;
 		                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: kernel/irq.c:319:
+		unsigned int status =3D desc->status & ~IRQ_DISABLED;
+		desc->status =3D status;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#389: FILE: kernel/irq.c:319:
+		desc->status =3D status;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#390: FILE: kernel/irq.c:320:
+		if ((status & (IRQ_PENDING | IRQ_REPLAY)) =3D=3D IRQ_PENDING) {
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#390: FILE: kernel/irq.c:320:
+		if ((status & (IRQ_PENDING | IRQ_REPLAY)) =3D=3D IRQ_PENDING) {
 		                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#390: FILE: kernel/irq.c:320:
+		if ((status & (IRQ_PENDING | IRQ_REPLAY)) =3D=3D IRQ_PENDING) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#391: FILE: kernel/irq.c:321:
+			desc->status =3D status | IRQ_REPLAY;
 			             ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#395: FILE: kernel/irq.c:325:
+		/* fall-through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#401: FILE: kernel/irq.c:331:
+		printk(KERN_ERR "enable_irq(%u) unbalanced from %p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enable_irq', this function's name, in a string
#401: FILE: kernel/irq.c:331:
+		printk(KERN_ERR "enable_irq(%u) unbalanced from %p\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#454: FILE: kernel/irq.c:384:
+			printk(KERN_ERR "Bad boy: %s (at %p) called us " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#454: FILE: kernel/irq.c:384:
+			printk(KERN_ERR "Bad boy: %s (at %p) called us " \

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#464: FILE: kernel/irq.c:394:
+	action =3D kmalloc(sizeof(struct irqaction), GFP_ATOMIC);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#468: FILE: kernel/irq.c:398:
+	action->handler =3D handler;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#469: FILE: kernel/irq.c:399:
+	action->flags =3D irqflags;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#470: FILE: kernel/irq.c:400:
+	action->mask =3D 0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#471: FILE: kernel/irq.c:401:
+	action->name =3D devname;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#472: FILE: kernel/irq.c:402:
+	action->next =3D NULL;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#473: FILE: kernel/irq.c:403:
+	action->dev_id =3D dev_id;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#475: FILE: kernel/irq.c:405:
+	retval =3D setup_irq(irq, action);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#487: FILE: kernel/irq.c:417:
+	int shared =3D 0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#490: FILE: kernel/irq.c:420:
+	irq_desc_t *desc =3D irq_desc(irq);
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#492: FILE: kernel/irq.c:422:
+	if (desc->handler =3D=3D &no_irq_type)
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#492: FILE: kernel/irq.c:422:
+	if (desc->handler =3D=3D &no_irq_type)
 	                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#492: FILE: kernel/irq.c:422:
+	if (desc->handler =3D=3D &no_irq_type)
 	                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#492: FILE: kernel/irq.c:422:
+	if (desc->handler =3D=3D &no_irq_type)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#493: FILE: kernel/irq.c:423:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#518: FILE: kernel/irq.c:448:
+	p =3D &desc->action;
 	  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#518: FILE: kernel/irq.c:448:
+	p =3D &desc->action;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#519: FILE: kernel/irq.c:449:
+	if ((old =3D *p) !=3D NULL) {
 	         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#519: FILE: kernel/irq.c:449:
+	if ((old =3D *p) !=3D NULL) {
 	             ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#519: FILE: kernel/irq.c:449:
+	if ((old =3D *p) !=3D NULL) {
 	                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#519: FILE: kernel/irq.c:449:
+	if ((old =3D *p) !=3D NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#528: FILE: kernel/irq.c:458:
+			p =3D &old->next;
 			  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#528: FILE: kernel/irq.c:458:
+			p =3D &old->next;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#529: FILE: kernel/irq.c:459:
+			old =3D *p;
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#529: FILE: kernel/irq.c:459:
+			old =3D *p;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#531: FILE: kernel/irq.c:461:
+		shared =3D 1;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#534: FILE: kernel/irq.c:464:
+	*p =3D new;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#537: FILE: kernel/irq.c:467:
+		desc->depth =3D 0;
 		            ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#538: FILE: kernel/irq.c:468:
+		desc->status &=3D ARCH_NONSHARED_IRQ_MASK;
 		             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#569: FILE: kernel/irq.c:499:
+		printk(KERN_CRIT "Trying to free IRQ%d\n", irq);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#573: FILE: kernel/irq.c:503:
+	desc =3D irq_desc(irq);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#575: FILE: kernel/irq.c:505:
+	p =3D &desc->action;
 	  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#575: FILE: kernel/irq.c:505:
+	p =3D &desc->action;
 	      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#577: FILE: kernel/irq.c:507:
+		struct irqaction * action =3D *p;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#577: FILE: kernel/irq.c:507:
+		struct irqaction * action =3D *p;
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#577: FILE: kernel/irq.c:507:
+		struct irqaction * action =3D *p;
 		                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#578: FILE: kernel/irq.c:508:
+		struct irqaction * action =3D *p;
+		if (action) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#579: FILE: kernel/irq.c:509:
+			struct irqaction **pp =3D p;
 			                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: kernel/irq.c:510:
+			struct irqaction **pp =3D p;
+			p =3D &action->next;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#580: FILE: kernel/irq.c:510:
+			p =3D &action->next;
 			  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#580: FILE: kernel/irq.c:510:
+			p =3D &action->next;
 			      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#581: FILE: kernel/irq.c:511:
+			if (action->dev_id !=3D dev_id)
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#585: FILE: kernel/irq.c:515:
+			*pp =3D action->next;
 			    ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#587: FILE: kernel/irq.c:517:
+				desc->status |=3D IRQ_DISABLED;
 				             ^

WARNING:REPEATED_WORD: Possible repeated word: 'free'
#597: FILE: kernel/irq.c:527:
+		printk(KERN_CRIT "Trying to free free IRQ%d\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#597: FILE: kernel/irq.c:527:
+		printk(KERN_CRIT "Trying to free free IRQ%d\n", irq);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#636: FILE: kernel/irq.c:566:
+		desc =3D irq_desc(i);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#639: FILE: kernel/irq.c:569:
+		if (!desc->action)=20
 		                  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#639: FILE: kernel/irq.c:569:
+		if (!desc->action)=20

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 39)
#645: FILE: kernel/irq.c:575:
+	for (delay =3D jiffies + HZ/50; time_after(delay, jiffies); )
+		/* about 20ms delay */ barrier();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#645: FILE: kernel/irq.c:575:
+	for (delay =3D jiffies + HZ/50; time_after(delay, jiffies); )
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#645: FILE: kernel/irq.c:575:
+	for (delay =3D jiffies + HZ/50; time_after(delay, jiffies); )
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#654: FILE: kernel/irq.c:584:
+		desc =3D irq_desc(i);
 		     ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#658: FILE: kernel/irq.c:588:
+			desc->status |=3D IRQ_AUTODETECT | IRQ_WAITING;
 			             ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#660: FILE: kernel/irq.c:590:
+				desc->status |=3D IRQ_PENDING;
 				             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 40)
#668: FILE: kernel/irq.c:598:
+	for (delay =3D jiffies + HZ/10; time_after(delay, jiffies); )
+		/* about 100ms delay */ barrier();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#668: FILE: kernel/irq.c:598:
+	for (delay =3D jiffies + HZ/10; time_after(delay, jiffies); )
 	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#668: FILE: kernel/irq.c:598:
+	for (delay =3D jiffies + HZ/10; time_after(delay, jiffies); )
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#674: FILE: kernel/irq.c:604:
+	val =3D 0;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#676: FILE: kernel/irq.c:606:
+		irq_desc_t *desc =3D irq_desc(i);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#680: FILE: kernel/irq.c:610:
+		status =3D desc->status;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#685: FILE: kernel/irq.c:615:
+				desc->status =3D status & ~IRQ_AUTODETECT;
 				             ^

CHECK:BRACES: Unbalanced braces around else statement
#687: FILE: kernel/irq.c:617:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#689: FILE: kernel/irq.c:619:
+					val |=3D 1 << i;
 					    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#715: FILE: kernel/irq.c:645:
+	mask =3D 0;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#717: FILE: kernel/irq.c:647:
+		irq_desc_t *desc =3D irq_desc(i);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#721: FILE: kernel/irq.c:651:
+		status =3D desc->status;
 		       ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#725: FILE: kernel/irq.c:655:
+				mask |=3D 1 << i;
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#727: FILE: kernel/irq.c:657:
+			desc->status =3D status & ~IRQ_AUTODETECT;
 			             ^

WARNING:TYPO_SPELLING: 'shouldnt' may be misspelled - perhaps 'shouldn't'?
#750: FILE: kernel/irq.c:680:
+ *	BUGS: When used in a module (which arguably shouldnt happen)
   	                                            ^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#758: FILE: kernel/irq.c:688:
+	nr_irqs =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#759: FILE: kernel/irq.c:689:
+	irq_found =3D 0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#761: FILE: kernel/irq.c:691:
+		irq_desc_t *desc =3D irq_desc(i);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#765: FILE: kernel/irq.c:695:
+		status =3D desc->status;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#770: FILE: kernel/irq.c:700:
+					irq_found =3D i;
 					          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#773: FILE: kernel/irq.c:703:
+			desc->status =3D status & ~IRQ_AUTODETECT;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#781: FILE: kernel/irq.c:711:
+		irq_found =3D -irq_found;
 		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#781: FILE: kernel/irq.c:711:
+		irq_found =3D -irq_found;
 		              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#787: FILE: kernel/irq.c:717:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#790: FILE: kernel/irq.c:720:
+unsigned int parse_hex_value(const char __user *buffer, unsigned long coun=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#800: FILE: kernel/irq.c:729:
+		count =3D ARCH_AFFINITY_WIDTH;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#809: FILE: kernel/irq.c:738:
+	value =3D 0;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#811: FILE: kernel/irq.c:740:
+	for (i =3D 0; i < count; i++) {
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#812: FILE: kernel/irq.c:741:
+		unsigned int c =3D hexnum[i];
 		               ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#814: FILE: kernel/irq.c:743:
+		switch (c) {
+			case '0' ... '9': c -=3D '0'; break;
+			case 'a' ... 'f': c -=3D 'a' - 10; break;
+			case 'A' ... 'F': c -=3D 'A' - 10; break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#815: FILE: kernel/irq.c:744:
+			case '0' ... '9': c -=3D '0'; break;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#815: FILE: kernel/irq.c:744:
+			case '0' ... '9': c -=3D '0'; break;

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#816: FILE: kernel/irq.c:745:
+			case 'a' ... 'f': c -=3D 'a' - 10; break;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#816: FILE: kernel/irq.c:745:
+			case 'a' ... 'f': c -=3D 'a' - 10; break;

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#817: FILE: kernel/irq.c:746:
+			case 'A' ... 'F': c -=3D 'A' - 10; break;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#817: FILE: kernel/irq.c:746:
+			case 'A' ... 'F': c -=3D 'A' - 10; break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#821: FILE: kernel/irq.c:750:
+		value =3D (value << 4) | c;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#821: FILE: kernel/irq.c:750:
+		value =3D (value << 4) | c;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#824: FILE: kernel/irq.c:753:
+	*ret =3D value;
 	     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: kernel/irq.c:766:
+	int irq =3D (long)data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#837: FILE: kernel/irq.c:766:
+	int irq =3D (long)data;
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#843: FILE: kernel/irq.c:772:
+	return sprintf (page, "%0" __stringify(ARCH_AFFINITY_WIDTH) "lx\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#847: FILE: kernel/irq.c:776:
+static int irq_affinity_write_proc(struct file *file, const char __user *b=
                                                                           ^

CHECK:SPACING: No space is necessary after a cast
#851: FILE: kernel/irq.c:779:
+	int irq =3D (long) data, full_count =3D count, err;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#851: FILE: kernel/irq.c:779:
+	int irq =3D (long) data, full_count =3D count, err;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#851: FILE: kernel/irq.c:779:
+	int irq =3D (long) data, full_count =3D count, err;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#851: FILE: kernel/irq.c:779:
+	int irq =3D (long) data, full_count =3D count, err;
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#858: FILE: kernel/irq.c:786:
+	desc =3D irq_desc(irq);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#863: FILE: kernel/irq.c:791:
+	err =3D parse_hex_value(buffer, count, &new_value);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#873: FILE: kernel/irq.c:801:
+	desc->irq_affinity =3D new_value;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#888: FILE: kernel/irq.c:816:
+	desc =3D irq_desc(irq);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#890: FILE: kernel/irq.c:818:
+	if ((desc->handler =3D=3D &no_irq_type) || desc->irq_dir)
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#890: FILE: kernel/irq.c:818:
+	if ((desc->handler =3D=3D &no_irq_type) || desc->irq_dir)
 	                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#890: FILE: kernel/irq.c:818:
+	if ((desc->handler =3D=3D &no_irq_type) || desc->irq_dir)
 	                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#890: FILE: kernel/irq.c:818:
+	if ((desc->handler =3D=3D &no_irq_type) || desc->irq_dir)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#897: FILE: kernel/irq.c:825:
+	desc->irq_dir =3D proc_mkdir(name, root_irq_dir);
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#904: FILE: kernel/irq.c:832:
+		entry =3D create_proc_entry("smp_affinity", 0600, desc->irq_dir);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#907: FILE: kernel/irq.c:835:
+			entry->nlink =3D 1;
 			             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#908: FILE: kernel/irq.c:836:
+			entry->data =3D (void *)(long)irq;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#908: FILE: kernel/irq.c:836:
+			entry->data =3D (void *)(long)irq;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#909: FILE: kernel/irq.c:837:
+			entry->read_proc =3D irq_affinity_read_proc;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#910: FILE: kernel/irq.c:838:
+			entry->write_proc =3D irq_affinity_write_proc;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#913: FILE: kernel/irq.c:841:
+		desc->smp_affinity_entry =3D entry;
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#920: FILE: kernel/irq.c:848:
+unsigned long prof_cpu_mask =3D ~0UL;
                             ^

CHECK:SPACING: No space is necessary after a cast
#925: FILE: kernel/irq.c:853:
+	unsigned long *mask =3D (unsigned long *) data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#925: FILE: kernel/irq.c:853:
+	unsigned long *mask =3D (unsigned long *) data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#925: FILE: kernel/irq.c:853:
+	unsigned long *mask =3D (unsigned long *) data;
 	                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: kernel/irq.c:854:
+	unsigned long *mask =3D (unsigned long *) data;
+	if (count < ARCH_AFFINITY_WIDTH + 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: kernel/irq.c:856:
+	return sprintf (page, "%0" __stringify(ARCH_AFFINITY_WIDTH) "lx\n",=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#928: FILE: kernel/irq.c:856:
+	return sprintf (page, "%0" __stringify(ARCH_AFFINITY_WIDTH) "lx\n",=20
 	                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#928: FILE: kernel/irq.c:856:
+	return sprintf (page, "%0" __stringify(ARCH_AFFINITY_WIDTH) "lx\n",=20
 	                                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#929: FILE: kernel/irq.c:857:
+			*mask);
 			^

CHECK:SPACING: No space is necessary after a cast
#936: FILE: kernel/irq.c:863:
+	unsigned long *mask =3D (unsigned long *) data, full_count =3D count, err;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#936: FILE: kernel/irq.c:863:
+	unsigned long *mask =3D (unsigned long *) data, full_count =3D count, err;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#936: FILE: kernel/irq.c:863:
+	unsigned long *mask =3D (unsigned long *) data, full_count =3D count, err;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#936: FILE: kernel/irq.c:863:
+	unsigned long *mask =3D (unsigned long *) data, full_count =3D count, err;
 	                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#939: FILE: kernel/irq.c:866:
+	err =3D parse_hex_value(buffer, count, &new_value);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#943: FILE: kernel/irq.c:870:
+	*mask =3D new_value;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#953: FILE: kernel/irq.c:880:
+	root_irq_dir =3D proc_mkdir("irq", 0);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#960: FILE: kernel/irq.c:887:
+		entry =3D create_proc_entry("prof_cpu_mask", 0600, root_irq_dir);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#964: FILE: kernel/irq.c:891:
+		entry->nlink =3D 1;
 		             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#965: FILE: kernel/irq.c:892:
+		entry->data =3D (void *)&prof_cpu_mask;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#965: FILE: kernel/irq.c:892:
+		entry->data =3D (void *)&prof_cpu_mask;
 		            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#965: FILE: kernel/irq.c:892:
+		entry->data =3D (void *)&prof_cpu_mask;
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#966: FILE: kernel/irq.c:893:
+		entry->read_proc =3D prof_cpu_mask_read_proc;
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#967: FILE: kernel/irq.c:894:
+		entry->write_proc =3D prof_cpu_mask_write_proc;
 		                  ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#976: FILE: kernel/irq.c:903:
+			if (irq_desc(i)->handler !=3D &no_irq_type)
 			                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#976: FILE: kernel/irq.c:903:
+			if (irq_desc(i)->handler !=3D &no_irq_type)
 			                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 151 errors, 40 warnings, 23 checks, 941 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
