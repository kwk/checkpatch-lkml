WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#59: FILE: arch/i386/kernel/acpi/boot.c:547:
+	printk ("Limit-cpus... activating CPU %d APIC_ID = %d\n", cpu, physid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#59: FILE: arch/i386/kernel/acpi/boot.c:547:
+	printk ("Limit-cpus... activating CPU %d APIC_ID = %d\n", cpu, physid);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#90: FILE: arch/x86_64/Kconfig:363:
+config LIMIT_CPUS
+   bool "Limits the present CPUs  at boot time"
+   depends on HOTPLUG_CPU
+   default n
+   ---help---
+   At boot time pass command line option "limit_cpus=xx" to start with
+   xx number of cpus. The cpu_present_map is trimmed to hide these CPUs
+   so they can be made to appear hotplugged for testing purposes.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#111: FILE: arch/x86_64/kernel/mpparse.c:68:
+unsigned int num_processors __cpuinitdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/x86_64/kernel/smpboot.c:1013:
+   extern unsigned int limit_cpus;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#127: FILE: arch/x86_64/kernel/smpboot.c:1013:
+   extern unsigned int limit_cpus;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/x86_64/kernel/smpboot.c:1014:
+   char str[NR_CPUS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/x86_64/kernel/smpboot.c:1015:
+   unsigned int cnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/x86_64/kernel/smpboot.c:1017:
+   if (num_processors <= limit_cpus)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#131: FILE: arch/x86_64/kernel/smpboot.c:1017:
+   if (num_processors <= limit_cpus)
+       return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/x86_64/kernel/smpboot.c:1018:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/x86_64/kernel/smpboot.c:1020:
+   printk (KERN_INFO "cpu_present_map = %s\n",\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#134: FILE: arch/x86_64/kernel/smpboot.c:1020:
+   printk (KERN_INFO "cpu_present_map = %s\n",\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: arch/x86_64/kernel/smpboot.c:1020:
+   printk (KERN_INFO "cpu_present_map = %s\n",\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#134: FILE: arch/x86_64/kernel/smpboot.c:1020:
+   printk (KERN_INFO "cpu_present_map = %s\n",\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/x86_64/kernel/smpboot.c:1021:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#135: FILE: arch/x86_64/kernel/smpboot.c:1021:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);
                                                        ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#135: FILE: arch/x86_64/kernel/smpboot.c:1021:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/x86_64/kernel/smpboot.c:1023:
+   printk (KERN_INFO "Limiting to %d CPUs\n", limit_cpus);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#137: FILE: arch/x86_64/kernel/smpboot.c:1023:
+   printk (KERN_INFO "Limiting to %d CPUs\n", limit_cpus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: arch/x86_64/kernel/smpboot.c:1023:
+   printk (KERN_INFO "Limiting to %d CPUs\n", limit_cpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/x86_64/kernel/smpboot.c:1025:
+   for (cnt=limit_cpus; (cnt < num_processors); cnt++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#139: FILE: arch/x86_64/kernel/smpboot.c:1025:
+   for (cnt=limit_cpus; (cnt < num_processors); cnt++)
+   {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#139: FILE: arch/x86_64/kernel/smpboot.c:1025:
+   for (cnt=limit_cpus; (cnt < num_processors); cnt++)
+   {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#139: FILE: arch/x86_64/kernel/smpboot.c:1025:
+   for (cnt=limit_cpus; (cnt < num_processors); cnt++)
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/x86_64/kernel/smpboot.c:1026:
+   {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/x86_64/kernel/smpboot.c:1027:
+       cpu_clear(cnt, cpu_present_map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/x86_64/kernel/smpboot.c:1028:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/x86_64/kernel/smpboot.c:1029:
+   printk(KERN_INFO "cpu_present_map = %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#143: FILE: arch/x86_64/kernel/smpboot.c:1029:
+   printk(KERN_INFO "cpu_present_map = %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: arch/x86_64/kernel/smpboot.c:1030:
+   printk(KERN_INFO "cpu_present_map = %s\n",
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/x86_64/kernel/smpboot.c:1030:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#144: FILE: arch/x86_64/kernel/smpboot.c:1030:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);
                                                        ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#144: FILE: arch/x86_64/kernel/smpboot.c:1030:
+       cpumask_scnprintf(str, NR_CPUS, cpu_present_map)? str : NULL);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#146: FILE: arch/x86_64/kernel/smpboot.c:1032:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#161: FILE: init/main.c:155:
+unsigned int limit_cpus=NR_CPUS;
                        ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#161: FILE: init/main.c:155:
+unsigned int limit_cpus=NR_CPUS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: init/main.c:160:
+   int ncpus;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: init/main.c:161:
+   int ncpus;
+   get_option (&str, &ncpus);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: init/main.c:161:
+   get_option (&str, &ncpus);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: init/main.c:161:
+   get_option (&str, &ncpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: init/main.c:162:
+   limit_cpus = ncpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: init/main.c:163:
+   printk (KERN_INFO "Limiting cpus present count to %d\n", ncpus);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#169: FILE: init/main.c:163:
+   printk (KERN_INFO "Limiting cpus present count to %d\n", ncpus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: init/main.c:163:
+   printk (KERN_INFO "Limiting cpus present count to %d\n", ncpus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: init/main.c:164:
+   return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#173: FILE: init/main.c:167:
+__setup("limit_cpus=", set_limit_cpus);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: init/main.c:170:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: init/main.c:378:
+   extern __init void limit_cpu_present_map(void);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: init/main.c:379:
+   limit_cpu_present_map();$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000099455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 40 warnings, 4 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000099455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
