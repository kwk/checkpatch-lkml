WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: mm/page_alloc.c:72:
+       int addfront=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#55: FILE: mm/page_alloc.c:72:
+       int addfront=1;
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#63: FILE: mm/page_alloc.c:116:
 		if (!__test_and_change_bit(index, area->map))
+                 {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#63: FILE: mm/page_alloc.c:116:
 		if (!__test_and_change_bit(index, area->map))
[...]
+                    */

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: mm/page_alloc.c:117:
+                 {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: mm/page_alloc.c:117:
+                 {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: mm/page_alloc.c:118:
+                   /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: mm/page_alloc.c:119:
+                    * the buddy page is still allocated.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: mm/page_alloc.c:120:
+                    *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: mm/page_alloc.c:121:
+                    * see how many bits are set in its bitmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: mm/page_alloc.c:122:
+                    * if 50% or more, we conclude the buddy is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: mm/page_alloc.c:123:
+                    * unlikely to be freed soon, and add the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: mm/page_alloc.c:124:
+                    * area to the head of the queue; else we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: mm/page_alloc.c:125:
+                    * conclude the buddy may be free soon and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: mm/page_alloc.c:126:
+                    * add it to the head.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: mm/page_alloc.c:127:
+                    */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: mm/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: mm/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 21)
#79: FILE: mm/page_alloc.c:128:
+                   if (mask & 1) /* not order 0 merge */
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
                                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#80: FILE: mm/page_alloc.c:129:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#81: FILE: mm/page_alloc.c:130:
+                     addfront = ( !test_bit((index^1)<<1, (area-1)->map)
+                                  && !test_bit((index^1)<<1, (area-1)->map) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );
                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );
                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );
                                                                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: mm/page_alloc.c:130:
+                                  && !test_bit((index^1)<<1, (area-1)->map) );

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: mm/page_alloc.c:131:
+                   break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: mm/page_alloc.c:131:
+                   break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: mm/page_alloc.c:132:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: mm/page_alloc.c:132:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: mm/page_alloc.c:150:
+       if (addfront)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#93: FILE: mm/page_alloc.c:150:
+       if (addfront)
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: mm/page_alloc.c:151:
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: mm/page_alloc.c:151:
+         memlist_add_head(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: mm/page_alloc.c:152:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#95: FILE: mm/page_alloc.c:152:
+       else
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: mm/page_alloc.c:153:
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: mm/page_alloc.c:153:
+         memlist_add_tail(&(base + page_idx)->list, &area->free_list);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 16 warnings, 7 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
