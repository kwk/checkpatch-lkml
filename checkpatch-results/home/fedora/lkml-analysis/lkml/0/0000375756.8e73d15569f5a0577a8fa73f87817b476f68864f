WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -purNX /kernel_exclude.txt linux_ppc/drivers/net/irda/ma600.c linux_ppc/drivers/net/irda/ma600.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/net/irda/ma600.c:56:
+^I        func}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#74: FILE: drivers/net/tokenring/olympic.c:658:
+	printk("Rx_ring_dma_addr = %08x, rx_status_dma_addr ="

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/net/tokenring/olympic.c:659:
+"%08x\n",olympic_priv->rx_ring_dma_addr,olympic_priv->rx_status_ring_dma_addr) ; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: drivers/net/tokenring/olympic.c:659:
+"%08x\n",olympic_priv->rx_ring_dma_addr,olympic_priv->rx_status_ring_dma_addr) ; 
         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: drivers/net/tokenring/olympic.c:659:
+"%08x\n",olympic_priv->rx_ring_dma_addr,olympic_priv->rx_status_ring_dma_addr) ; 
                                        ^

WARNING:SPACING: space prohibited before semicolon
#75: FILE: drivers/net/tokenring/olympic.c:659:
+"%08x\n",olympic_priv->rx_ring_dma_addr,olympic_priv->rx_status_ring_dma_addr) ; 

WARNING:SPLIT_STRING: quoted string split across lines
#75: FILE: drivers/net/tokenring/olympic.c:659:
+	printk("Rx_ring_dma_addr = %08x, rx_status_dma_addr ="
+"%08x\n",olympic_priv->rx_ring_dma_addr,olympic_priv->rx_status_ring_dma_addr) ; 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/sound/cs46xx.c:950:
+    u32 off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/sound/cs46xx.c:951:
+    u32 val;$

WARNING:INLINE: plain inline is preferred over __inline__
#101: FILE: include/asm-ppc/io.h:87:
+static __inline__ unsigned int name(unsigned int port)	\

WARNING:INLINE: plain inline is preferred over __inline__
#110: FILE: include/asm-ppc/io.h:112:
+static __inline__ void name(unsigned int val, unsigned int port) \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: include/asm-ppc/io.h:206:
+static inline unsigned long virt_to_bus(volatile void * address)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#119: FILE: include/asm-ppc/io.h:206:
+static inline unsigned long virt_to_bus(volatile void * address)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: include/asm-ppc/io.h:217:
+static inline void * bus_to_virt(unsigned long address)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: include/asm-ppc/io.h:232:
+static inline unsigned long virt_to_phys(volatile void * address)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#137: FILE: include/asm-ppc/io.h:232:
+static inline unsigned long virt_to_phys(volatile void * address)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: include/asm-ppc/io.h:241:
+static inline void * phys_to_virt(unsigned long address)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#164: FILE: include/asm-ppc/io.h:278:
+static inline int in_8(volatile unsigned char *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#173: FILE: include/asm-ppc/io.h:286:
+static inline void out_8(volatile unsigned char *addr, int val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#179: FILE: include/asm-ppc/io.h:291:
+static inline int in_le16(volatile unsigned short *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: include/asm-ppc/io.h:300:
+static inline int in_be16(volatile unsigned short *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#197: FILE: include/asm-ppc/io.h:308:
+static inline void out_le16(volatile unsigned short *addr, int val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#204: FILE: include/asm-ppc/io.h:314:
+static inline void out_be16(volatile unsigned short *addr, int val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: include/asm-ppc/io.h:319:
+static inline unsigned in_le32(volatile unsigned *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#210: FILE: include/asm-ppc/io.h:319:
+static inline unsigned in_le32(volatile unsigned *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#210: FILE: include/asm-ppc/io.h:319:
+static inline unsigned in_le32(volatile unsigned *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#219: FILE: include/asm-ppc/io.h:328:
+static inline unsigned in_be32(volatile unsigned *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#219: FILE: include/asm-ppc/io.h:328:
+static inline unsigned in_be32(volatile unsigned *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#219: FILE: include/asm-ppc/io.h:328:
+static inline unsigned in_be32(volatile unsigned *addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#228: FILE: include/asm-ppc/io.h:336:
+static inline void out_le32(volatile unsigned *addr, int val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#228: FILE: include/asm-ppc/io.h:336:
+static inline void out_le32(volatile unsigned *addr, int val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#235: FILE: include/asm-ppc/io.h:342:
+static inline void out_be32(volatile unsigned *addr, int val)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#235: FILE: include/asm-ppc/io.h:342:
+static inline void out_be32(volatile unsigned *addr, int val)

WARNING:INLINE: plain inline is preferred over __inline__
#247: FILE: include/asm-ppc/pgalloc.h:58:
+static __inline__ pgd_t *get_pgd_slow(void)

WARNING:INLINE: plain inline is preferred over __inline__
#256: FILE: include/asm-ppc/pgalloc.h:67:
+static __inline__ pgd_t *get_pgd_fast(void)

WARNING:INLINE: plain inline is preferred over __inline__
#265: FILE: include/asm-ppc/pgalloc.h:80:
+static __inline__ void free_pgd_fast(pgd_t *pgd)

WARNING:INLINE: plain inline is preferred over __inline__
#273: FILE: include/asm-ppc/pgalloc.h:87:
+static __inline__ void free_pgd_slow(pgd_t *pgd)

WARNING:INLINE: plain inline is preferred over __inline__
#282: FILE: include/asm-ppc/pgalloc.h:131:
+static __inline__ void pte_free_fast(pte_t *pte)

WARNING:INLINE: plain inline is preferred over __inline__
#290: FILE: include/asm-ppc/pgalloc.h:138:
+static __inline__ void pte_free_slow(pte_t *pte)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: include/asm-ppc/semaphore.h:84:
+static inline void down(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#311: FILE: include/asm-ppc/semaphore.h:98:
+static inline int down_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#320: FILE: include/asm-ppc/semaphore.h:112:
+static inline int down_trylock(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: include/asm-ppc/semaphore.h:125:
+static inline void up(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: include/asm-ppc/uaccess.h:38:
+static inline int verify_area(int type, const void * addr, unsigned long size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: net/decnet/dn_table.c:839:
+                printk(KERN_DEBUG "DECnet: BUG! Attempt to create routing table from interrupt\n"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: net/decnet/dn_table.c:839:
+                printk(KERN_DEBUG "DECnet: BUG! Attempt to create routing table from interrupt\n"); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: net/decnet/dn_table.c:839:
+                printk(KERN_DEBUG "DECnet: BUG! Attempt to create routing table from interrupt\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#390: FILE: net/decnet/dn_table.c:839:
+                printk(KERN_DEBUG "DECnet: BUG! Attempt to create routing table from interrupt\n"); 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000375756.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 34 warnings, 0 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000375756.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
