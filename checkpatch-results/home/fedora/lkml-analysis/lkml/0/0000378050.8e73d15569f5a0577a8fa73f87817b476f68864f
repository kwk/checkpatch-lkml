WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urN linux-2.5.67/arch/s390/kernel/compat_linux.c linux-2.5.67-s390/arch/s390/kernel/compat_linux.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: arch/s390/kernel/compat_linux.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: arch/s390/kernel/compat_linux.c:7:
+ *               Gerhard Tonn (ton@de.ibm.com)   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: arch/s390/kernel/compat_linux.c:11:
+ * Heavily inspired by the 32-bit Sparc compat code which is $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#52: FILE: arch/s390/kernel/compat_linux.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: arch/s390/kernel/compat_linux.c:21:
+#include <linux/fs.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: arch/s390/kernel/compat_linux.c:22:
+#include <linux/mm.h> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: arch/s390/kernel/compat_linux.c:23:
+#include <linux/file.h> $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#100: FILE: arch/s390/kernel/compat_linux.c:65:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: arch/s390/kernel/compat_linux.c:73:
+extern asmlinkage long sys_chown(const char *, uid_t,gid_t);
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: arch/s390/kernel/compat_linux.c:74:
+extern asmlinkage long sys_lchown(const char *, uid_t,gid_t);
                                                      ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#109: FILE: arch/s390/kernel/compat_linux.c:74:
+extern asmlinkage long sys_lchown(const char *, uid_t,gid_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: arch/s390/kernel/compat_linux.c:75:
+extern asmlinkage long sys_fchown(unsigned int, uid_t,gid_t);
                                                      ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#110: FILE: arch/s390/kernel/compat_linux.c:75:
+extern asmlinkage long sys_fchown(unsigned int, uid_t,gid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#111: FILE: arch/s390/kernel/compat_linux.c:76:
+extern asmlinkage long sys_setregid(gid_t, gid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#112: FILE: arch/s390/kernel/compat_linux.c:77:
+extern asmlinkage long sys_setgid(gid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#113: FILE: arch/s390/kernel/compat_linux.c:78:
+extern asmlinkage long sys_setreuid(uid_t, uid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#114: FILE: arch/s390/kernel/compat_linux.c:79:
+extern asmlinkage long sys_setuid(uid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#115: FILE: arch/s390/kernel/compat_linux.c:80:
+extern asmlinkage long sys_setresuid(uid_t, uid_t, uid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#116: FILE: arch/s390/kernel/compat_linux.c:81:
+extern asmlinkage long sys_setresgid(gid_t, gid_t, gid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#117: FILE: arch/s390/kernel/compat_linux.c:82:
+extern asmlinkage long sys_setfsuid(uid_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#118: FILE: arch/s390/kernel/compat_linux.c:83:
+extern asmlinkage long sys_setfsgid(gid_t);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: arch/s390/kernel/compat_linux.c:84:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/s390/kernel/compat_linux.c:84:
+ $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#135: FILE: arch/s390/kernel/compat_linux.c:100:
+#define high2lowuid(uid) ((uid) > 65535) ? (u16)overflowuid : (u16)(uid)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uid' - possible side-effects?
#135: FILE: arch/s390/kernel/compat_linux.c:100:
+#define high2lowuid(uid) ((uid) > 65535) ? (u16)overflowuid : (u16)(uid)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#136: FILE: arch/s390/kernel/compat_linux.c:101:
+#define high2lowgid(gid) ((gid) > 65535) ? (u16)overflowgid : (u16)(gid)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gid' - possible side-effects?
#136: FILE: arch/s390/kernel/compat_linux.c:101:
+#define high2lowgid(gid) ((gid) > 65535) ? (u16)overflowgid : (u16)(gid)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#137: FILE: arch/s390/kernel/compat_linux.c:102:
+#define low2highuid(uid) ((uid) == (u16)-1) ? (uid_t)-1 : (uid_t)(uid)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uid' - possible side-effects?
#137: FILE: arch/s390/kernel/compat_linux.c:102:
+#define low2highuid(uid) ((uid) == (u16)-1) ? (uid_t)-1 : (uid_t)(uid)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: arch/s390/kernel/compat_linux.c:103:
+#define low2highgid(gid) ((gid) == (u16)-1) ? (gid_t)-1 : (gid_t)(gid)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'gid' - possible side-effects?
#138: FILE: arch/s390/kernel/compat_linux.c:103:
+#define low2highgid(gid) ((gid) == (u16)-1) ? (gid_t)-1 : (gid_t)(gid)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#139: FILE: arch/s390/kernel/compat_linux.c:104:
+#define SET_UID16(var, uid)	var = high2lowuid(uid)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#140: FILE: arch/s390/kernel/compat_linux.c:105:
+#define SET_GID16(var, gid)	var = high2lowgid(gid)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: arch/s390/kernel/compat_linux.c:113:
+asmlinkage long sys32_chown16(const char * filename, u16 user, u16 group)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: arch/s390/kernel/compat_linux.c:118:
+asmlinkage long sys32_lchown16(const char * filename, u16 user, u16 group)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: arch/s390/kernel/compat_linux.c:158:
+	if (!(retval = put_user(high2lowuid(current->uid), ruid)) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: arch/s390/kernel/compat_linux.c:175:
+	if (!(retval = put_user(high2lowgid(current->gid), rgid)) &&

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: arch/s390/kernel/compat_linux.c:195:
+	int i,j;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#238: FILE: arch/s390/kernel/compat_linux.c:203:
+		for(j=0;j<i;j++)
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#238: FILE: arch/s390/kernel/compat_linux.c:203:
+		for(j=0;j<i;j++)
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#238: FILE: arch/s390/kernel/compat_linux.c:203:
+		for(j=0;j<i;j++)
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#238: FILE: arch/s390/kernel/compat_linux.c:203:
+		for(j=0;j<i;j++)
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#238: FILE: arch/s390/kernel/compat_linux.c:203:
+		for(j=0;j<i;j++)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: arch/s390/kernel/compat_linux.c:205:
+		if (copy_to_user(grouplist, groups, sizeof(u16)*i))
 		                                               ^

CHECK:SPACING: No space is necessary after a cast
#253: FILE: arch/s390/kernel/compat_linux.c:218:
+	if ((unsigned) gidsetsize > NGROUPS)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#253: FILE: arch/s390/kernel/compat_linux.c:218:
+	if ((unsigned) gidsetsize > NGROUPS)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#302: FILE: arch/s390/kernel/compat_linux.c:267:
+struct ipc64_perm_ds32
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/s390/kernel/compat_linux.c:268:
+        __kernel_key_t          key;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/s390/kernel/compat_linux.c:268:
+        __kernel_key_t          key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/s390/kernel/compat_linux.c:269:
+        __kernel_uid32_t        uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/s390/kernel/compat_linux.c:269:
+        __kernel_uid32_t        uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/s390/kernel/compat_linux.c:270:
+        __kernel_gid32_t        gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/s390/kernel/compat_linux.c:270:
+        __kernel_gid32_t        gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/s390/kernel/compat_linux.c:271:
+        __kernel_uid32_t        cuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/s390/kernel/compat_linux.c:271:
+        __kernel_uid32_t        cuid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/s390/kernel/compat_linux.c:272:
+        __kernel_gid32_t        cgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/s390/kernel/compat_linux.c:272:
+        __kernel_gid32_t        cgid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/s390/kernel/compat_linux.c:273:
+        compat_mode_t       mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/s390/kernel/compat_linux.c:273:
+        compat_mode_t       mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/s390/kernel/compat_linux.c:274:
+        unsigned short          __pad1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/s390/kernel/compat_linux.c:274:
+        unsigned short          __pad1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/s390/kernel/compat_linux.c:275:
+        unsigned short          seq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/s390/kernel/compat_linux.c:275:
+        unsigned short          seq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/s390/kernel/compat_linux.c:276:
+        unsigned short          __pad2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/s390/kernel/compat_linux.c:276:
+        unsigned short          __pad2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/s390/kernel/compat_linux.c:277:
+        unsigned int            __unused1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/s390/kernel/compat_linux.c:277:
+        unsigned int            __unused1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/s390/kernel/compat_linux.c:278:
+        unsigned int            __unused2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/s390/kernel/compat_linux.c:278:
+        unsigned int            __unused2;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#317: FILE: arch/s390/kernel/compat_linux.c:282:
+struct ipc_perm32
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: arch/s390/kernel/compat_linux.c:283:
+^Ikey_t    ^I  key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/s390/kernel/compat_linux.c:284:
+        compat_uid_t  uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/s390/kernel/compat_linux.c:284:
+        compat_uid_t  uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/s390/kernel/compat_linux.c:285:
+        compat_gid_t  gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/s390/kernel/compat_linux.c:285:
+        compat_gid_t  gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/s390/kernel/compat_linux.c:286:
+        compat_uid_t  cuid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/s390/kernel/compat_linux.c:286:
+        compat_uid_t  cuid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/s390/kernel/compat_linux.c:287:
+        compat_gid_t  cgid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/s390/kernel/compat_linux.c:287:
+        compat_gid_t  cgid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/s390/kernel/compat_linux.c:288:
+        compat_mode_t mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/s390/kernel/compat_linux.c:288:
+        compat_mode_t mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/s390/kernel/compat_linux.c:289:
+        unsigned short  seq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/s390/kernel/compat_linux.c:289:
+        unsigned short  seq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: arch/s390/kernel/compat_linux.c:293:
+        struct ipc_perm32 sem_perm;               /* permissions .. see ipc.h */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/s390/kernel/compat_linux.c:293:
+        struct ipc_perm32 sem_perm;               /* permissions .. see ipc.h */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: arch/s390/kernel/compat_linux.c:294:
+        compat_time_t   sem_otime;              /* last semop time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/s390/kernel/compat_linux.c:294:
+        compat_time_t   sem_otime;              /* last semop time */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: arch/s390/kernel/compat_linux.c:295:
+        compat_time_t   sem_ctime;              /* last change time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/s390/kernel/compat_linux.c:295:
+        compat_time_t   sem_ctime;              /* last change time */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: arch/s390/kernel/compat_linux.c:296:
+        u32 sem_base;              /* ptr to first semaphore in array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/s390/kernel/compat_linux.c:296:
+        u32 sem_base;              /* ptr to first semaphore in array */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/s390/kernel/compat_linux.c:297:
+        u32 sem_pending;          /* pending operations to be processed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/s390/kernel/compat_linux.c:297:
+        u32 sem_pending;          /* pending operations to be processed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/s390/kernel/compat_linux.c:298:
+        u32 sem_pending_last;    /* last pending operation */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/s390/kernel/compat_linux.c:298:
+        u32 sem_pending_last;    /* last pending operation */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: arch/s390/kernel/compat_linux.c:299:
+        u32 undo;                  /* undo requests on this array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/s390/kernel/compat_linux.c:299:
+        u32 undo;                  /* undo requests on this array */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/s390/kernel/compat_linux.c:300:
+        unsigned short  sem_nsems;              /* no. of semaphores in array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/s390/kernel/compat_linux.c:300:
+        unsigned short  sem_nsems;              /* no. of semaphores in array */$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#350: FILE: arch/s390/kernel/compat_linux.c:315:
+struct msqid_ds32
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/s390/kernel/compat_linux.c:316:
+        struct ipc_perm32 msg_perm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/s390/kernel/compat_linux.c:316:
+        struct ipc_perm32 msg_perm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/s390/kernel/compat_linux.c:317:
+        u32 msg_first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/s390/kernel/compat_linux.c:317:
+        u32 msg_first;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/s390/kernel/compat_linux.c:318:
+        u32 msg_last;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/s390/kernel/compat_linux.c:318:
+        u32 msg_last;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/s390/kernel/compat_linux.c:319:
+        compat_time_t   msg_stime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/s390/kernel/compat_linux.c:319:
+        compat_time_t   msg_stime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/s390/kernel/compat_linux.c:320:
+        compat_time_t   msg_rtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/s390/kernel/compat_linux.c:320:
+        compat_time_t   msg_rtime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/s390/kernel/compat_linux.c:321:
+        compat_time_t   msg_ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/s390/kernel/compat_linux.c:321:
+        compat_time_t   msg_ctime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/s390/kernel/compat_linux.c:322:
+        u32 wwait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/s390/kernel/compat_linux.c:322:
+        u32 wwait;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/s390/kernel/compat_linux.c:323:
+        u32 rwait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/s390/kernel/compat_linux.c:323:
+        u32 rwait;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/s390/kernel/compat_linux.c:324:
+        unsigned short msg_cbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/s390/kernel/compat_linux.c:324:
+        unsigned short msg_cbytes;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: arch/s390/kernel/compat_linux.c:325:
+        unsigned short msg_qnum;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/s390/kernel/compat_linux.c:325:
+        unsigned short msg_qnum;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/s390/kernel/compat_linux.c:325:
+        unsigned short msg_qnum;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/s390/kernel/compat_linux.c:326:
+        unsigned short msg_qbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/s390/kernel/compat_linux.c:326:
+        unsigned short msg_qbytes;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/s390/kernel/compat_linux.c:327:
+        compat_ipc_pid_t msg_lspid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/s390/kernel/compat_linux.c:327:
+        compat_ipc_pid_t msg_lspid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/s390/kernel/compat_linux.c:328:
+        compat_ipc_pid_t msg_lrpid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/s390/kernel/compat_linux.c:328:
+        compat_ipc_pid_t msg_lrpid;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: arch/s390/kernel/compat_linux.c:348:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: arch/s390/kernel/compat_linux.c:355:
+^Icompat_ipc_pid_t    shm_cpid; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: arch/s390/kernel/compat_linux.c:356:
+^Icompat_ipc_pid_t    shm_lpid; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#398: FILE: arch/s390/kernel/compat_linux.c:363:
+^Icompat_time_t  ^Ishm_atime;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#400: FILE: arch/s390/kernel/compat_linux.c:365:
+^Icompat_time_t  ^Ishm_dtime;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#402: FILE: arch/s390/kernel/compat_linux.c:367:
+^Icompat_time_t  ^Ishm_ctime;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: arch/s390/kernel/compat_linux.c:376:
+                                                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/s390/kernel/compat_linux.c:376:
+                                                        $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#411: FILE: arch/s390/kernel/compat_linux.c:376:
+
+                                                        

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/s390/kernel/compat_linux.c:376:
+                                                        $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: arch/s390/kernel/compat_linux.c:392:
+	if (get_user (pad, (u32 *)uptr))

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: arch/s390/kernel/compat_linux.c:394:
+	if(third == SETVAL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: arch/s390/kernel/compat_linux.c:398:
+	if (IPCOP_MASK (third) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: arch/s390/kernel/compat_linux.c:399:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SEM_INFO) | IPCOP_MASK (GETVAL) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: arch/s390/kernel/compat_linux.c:399:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SEM_INFO) | IPCOP_MASK (GETVAL) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: arch/s390/kernel/compat_linux.c:399:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SEM_INFO) | IPCOP_MASK (GETVAL) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: arch/s390/kernel/compat_linux.c:400:
+	     IPCOP_MASK (GETPID) | IPCOP_MASK (GETNCNT) | IPCOP_MASK (GETZCNT) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: arch/s390/kernel/compat_linux.c:400:
+	     IPCOP_MASK (GETPID) | IPCOP_MASK (GETNCNT) | IPCOP_MASK (GETZCNT) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: arch/s390/kernel/compat_linux.c:400:
+	     IPCOP_MASK (GETPID) | IPCOP_MASK (GETNCNT) | IPCOP_MASK (GETZCNT) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: arch/s390/kernel/compat_linux.c:401:
+	     IPCOP_MASK (GETALL) | IPCOP_MASK (SETALL) | IPCOP_MASK (IPC_RMID))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: arch/s390/kernel/compat_linux.c:401:
+	     IPCOP_MASK (GETALL) | IPCOP_MASK (SETALL) | IPCOP_MASK (IPC_RMID))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: arch/s390/kernel/compat_linux.c:401:
+	     IPCOP_MASK (GETALL) | IPCOP_MASK (SETALL) | IPCOP_MASK (IPC_RMID))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: arch/s390/kernel/compat_linux.c:402:
+		err = sys_semctl (first, second, third, fourth);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#444: FILE: arch/s390/kernel/compat_linux.c:409:
+		if (third == (IPC_SET|IPC_64)) {
 		                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: arch/s390/kernel/compat_linux.c:410:
+			err = get_user (s.sem_perm.uid, &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: arch/s390/kernel/compat_linux.c:411:
+			err |= __get_user (s.sem_perm.gid, &usp->sem_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: arch/s390/kernel/compat_linux.c:412:
+			err |= __get_user (s.sem_perm.mode, &usp->sem_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#453: FILE: arch/s390/kernel/compat_linux.c:418:
+			(IPCOP_MASK (third) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#454: FILE: arch/s390/kernel/compat_linux.c:419:
+			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#454: FILE: arch/s390/kernel/compat_linux.c:419:
+			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: arch/s390/kernel/compat_linux.c:422:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: arch/s390/kernel/compat_linux.c:423:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: arch/s390/kernel/compat_linux.c:424:
+		err = sys_semctl (first, second, third, fourth);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: arch/s390/kernel/compat_linux.c:425:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: arch/s390/kernel/compat_linux.c:427:
+			int err2 = put_user (s.sem_perm.key, &usp->sem_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: arch/s390/kernel/compat_linux.c:428:
+			int err2 = put_user (s.sem_perm.key, &usp->sem_perm.key);
+			err2 |= __put_user (high2lowuid(s.sem_perm.uid), &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: arch/s390/kernel/compat_linux.c:428:
+			err2 |= __put_user (high2lowuid(s.sem_perm.uid), &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: arch/s390/kernel/compat_linux.c:429:
+			err2 |= __put_user (high2lowgid(s.sem_perm.gid), &usp->sem_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: arch/s390/kernel/compat_linux.c:430:
+			err2 |= __put_user (high2lowuid(s.sem_perm.cuid), &usp->sem_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: arch/s390/kernel/compat_linux.c:431:
+			err2 |= __put_user (high2lowgid(s.sem_perm.cgid), &usp->sem_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: arch/s390/kernel/compat_linux.c:432:
+			err2 |= __put_user (s.sem_perm.mode, &usp->sem_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: arch/s390/kernel/compat_linux.c:433:
+			err2 |= __put_user (s.sem_perm.seq, &usp->sem_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: arch/s390/kernel/compat_linux.c:434:
+			err2 |= __put_user (s.sem_otime, &usp->sem_otime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: arch/s390/kernel/compat_linux.c:435:
+			err2 |= __put_user (s.sem_ctime, &usp->sem_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: arch/s390/kernel/compat_linux.c:436:
+			err2 |= __put_user (s.sem_nsems, &usp->sem_nsems);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#472: FILE: arch/s390/kernel/compat_linux.c:437:
+			if (err2) err = -EFAULT;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: arch/s390/kernel/compat_linux.c:446:
+			err = get_user (s.sem_perm.uid, &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: arch/s390/kernel/compat_linux.c:447:
+			err |= __get_user (s.sem_perm.gid, &usp->sem_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: arch/s390/kernel/compat_linux.c:448:
+			err |= __get_user (s.sem_perm.mode, &usp->sem_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#489: FILE: arch/s390/kernel/compat_linux.c:454:
+			(IPCOP_MASK (third) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#490: FILE: arch/s390/kernel/compat_linux.c:455:
+			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#490: FILE: arch/s390/kernel/compat_linux.c:455:
+			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: arch/s390/kernel/compat_linux.c:458:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: arch/s390/kernel/compat_linux.c:459:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: arch/s390/kernel/compat_linux.c:460:
+		err = sys_semctl (first, second, third, fourth);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: arch/s390/kernel/compat_linux.c:461:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#498: FILE: arch/s390/kernel/compat_linux.c:463:
+			int err2 = put_user (s.sem_perm.key, &usp->sem_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#499: FILE: arch/s390/kernel/compat_linux.c:464:
+			int err2 = put_user (s.sem_perm.key, &usp->sem_perm.key);
+			err2 |= __put_user (high2lowuid(s.sem_perm.uid), &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#499: FILE: arch/s390/kernel/compat_linux.c:464:
+			err2 |= __put_user (high2lowuid(s.sem_perm.uid), &usp->sem_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: arch/s390/kernel/compat_linux.c:465:
+			err2 |= __put_user (high2lowgid(s.sem_perm.gid), &usp->sem_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: arch/s390/kernel/compat_linux.c:466:
+			err2 |= __put_user (high2lowuid(s.sem_perm.cuid), &usp->sem_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: arch/s390/kernel/compat_linux.c:467:
+			err2 |= __put_user (high2lowgid(s.sem_perm.cgid), &usp->sem_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#503: FILE: arch/s390/kernel/compat_linux.c:468:
+			err2 |= __put_user (s.sem_perm.mode, &usp->sem_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: arch/s390/kernel/compat_linux.c:469:
+			err2 |= __put_user (s.sem_perm.seq, &usp->sem_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: arch/s390/kernel/compat_linux.c:470:
+			err2 |= __put_user (s.sem_otime, &usp->sem_otime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#506: FILE: arch/s390/kernel/compat_linux.c:471:
+			err2 |= __put_user (s.sem_ctime, &usp->sem_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: arch/s390/kernel/compat_linux.c:472:
+			err2 |= __put_user (s.sem_nsems, &usp->sem_nsems);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#508: FILE: arch/s390/kernel/compat_linux.c:473:
+			if (err2) err = -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#515: FILE: arch/s390/kernel/compat_linux.c:480:
+static int do_sys32_msgsnd (int first, int second, int third, void *uptr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: arch/s390/kernel/compat_linux.c:482:
+	struct msgbuf *p = kmalloc (second + sizeof (struct msgbuf), GFP_USER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: arch/s390/kernel/compat_linux.c:482:
+	struct msgbuf *p = kmalloc (second + sizeof (struct msgbuf), GFP_USER);

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: arch/s390/kernel/compat_linux.c:497:
+        if (get_user (p->mtype, &up->mtype) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/s390/kernel/compat_linux.c:497:
+        if (get_user (p->mtype, &up->mtype) ||$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: arch/s390/kernel/compat_linux.c:497:
+        if (get_user (p->mtype, &up->mtype) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: arch/s390/kernel/compat_linux.c:498:
+	    __copy_from_user (p->mtext, &up->mtext, second))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#535: FILE: arch/s390/kernel/compat_linux.c:500:
+	old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#536: FILE: arch/s390/kernel/compat_linux.c:501:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#537: FILE: arch/s390/kernel/compat_linux.c:502:
+	err = sys_msgsnd (first, p, second, third);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#538: FILE: arch/s390/kernel/compat_linux.c:503:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: arch/s390/kernel/compat_linux.c:505:
+	kfree (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: arch/s390/kernel/compat_linux.c:509:
+static int do_sys32_msgrcv (int first, int second, int msgtyp, int third,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: arch/s390/kernel/compat_linux.c:528:
+		if (copy_from_user (&ipck, uipck, sizeof (struct ipc_kludge_32)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: arch/s390/kernel/compat_linux.c:528:
+		if (copy_from_user (&ipck, uipck, sizeof (struct ipc_kludge_32)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: arch/s390/kernel/compat_linux.c:534:
+	p = kmalloc (second + sizeof (struct msgbuf), GFP_USER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: arch/s390/kernel/compat_linux.c:534:
+	p = kmalloc (second + sizeof (struct msgbuf), GFP_USER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: arch/s390/kernel/compat_linux.c:537:
+	old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#573: FILE: arch/s390/kernel/compat_linux.c:538:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#574: FILE: arch/s390/kernel/compat_linux.c:539:
+	err = sys_msgrcv (first, p, second, msgtyp, third);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#575: FILE: arch/s390/kernel/compat_linux.c:540:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: arch/s390/kernel/compat_linux.c:544:
+	if (put_user (p->mtype, &up->mtype) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: arch/s390/kernel/compat_linux.c:545:
+	    __copy_to_user (&up->mtext, p->mtext, err))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: arch/s390/kernel/compat_linux.c:548:
+	kfree (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#588: FILE: arch/s390/kernel/compat_linux.c:553:
+static int do_sys32_msgctl (int first, int second, void *uptr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#592: FILE: arch/s390/kernel/compat_linux.c:557:
+	if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: arch/s390/kernel/compat_linux.c:558:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (MSG_INFO) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: arch/s390/kernel/compat_linux.c:558:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (MSG_INFO) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: arch/s390/kernel/compat_linux.c:559:
+	     IPCOP_MASK (IPC_RMID))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: arch/s390/kernel/compat_linux.c:560:
+		err = sys_msgctl (first, second, (struct msqid_ds *)uptr);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#601: FILE: arch/s390/kernel/compat_linux.c:566:
+		if (second == (IPC_SET|IPC_64)) {
 		                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: arch/s390/kernel/compat_linux.c:567:
+			err = get_user (m.msg_perm.uid, &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: arch/s390/kernel/compat_linux.c:568:
+			err |= __get_user (m.msg_perm.gid, &up->msg_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#604: FILE: arch/s390/kernel/compat_linux.c:569:
+			err |= __get_user (m.msg_perm.mode, &up->msg_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#605: FILE: arch/s390/kernel/compat_linux.c:570:
+			err |= __get_user (m.msg_qbytes, &up->msg_qbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: arch/s390/kernel/compat_linux.c:574:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: arch/s390/kernel/compat_linux.c:575:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: arch/s390/kernel/compat_linux.c:576:
+		err = sys_msgctl (first, second, (struct msqid_ds *)&m);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#612: FILE: arch/s390/kernel/compat_linux.c:577:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#613: FILE: arch/s390/kernel/compat_linux.c:578:
+		if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#614: FILE: arch/s390/kernel/compat_linux.c:579:
+		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#614: FILE: arch/s390/kernel/compat_linux.c:579:
+		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#615: FILE: arch/s390/kernel/compat_linux.c:580:
+			int err2 = put_user (m.msg_perm.key, &up->msg_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: arch/s390/kernel/compat_linux.c:581:
+			int err2 = put_user (m.msg_perm.key, &up->msg_perm.key);
+			err2 |= __put_user (high2lowuid(m.msg_perm.uid), &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: arch/s390/kernel/compat_linux.c:581:
+			err2 |= __put_user (high2lowuid(m.msg_perm.uid), &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: arch/s390/kernel/compat_linux.c:582:
+			err2 |= __put_user (high2lowgid(m.msg_perm.gid), &up->msg_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: arch/s390/kernel/compat_linux.c:583:
+			err2 |= __put_user (high2lowuid(m.msg_perm.cuid), &up->msg_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: arch/s390/kernel/compat_linux.c:584:
+			err2 |= __put_user (high2lowgid(m.msg_perm.cgid), &up->msg_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: arch/s390/kernel/compat_linux.c:585:
+			err2 |= __put_user (m.msg_perm.mode, &up->msg_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#621: FILE: arch/s390/kernel/compat_linux.c:586:
+			err2 |= __put_user (m.msg_perm.seq, &up->msg_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#622: FILE: arch/s390/kernel/compat_linux.c:587:
+			err2 |= __put_user (m.msg_stime, &up->msg_stime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#623: FILE: arch/s390/kernel/compat_linux.c:588:
+			err2 |= __put_user (m.msg_rtime, &up->msg_rtime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#624: FILE: arch/s390/kernel/compat_linux.c:589:
+			err2 |= __put_user (m.msg_ctime, &up->msg_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: arch/s390/kernel/compat_linux.c:590:
+			err2 |= __put_user (m.msg_cbytes, &up->msg_cbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: arch/s390/kernel/compat_linux.c:591:
+			err2 |= __put_user (m.msg_qnum, &up->msg_qnum);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#627: FILE: arch/s390/kernel/compat_linux.c:592:
+			err2 |= __put_user (m.msg_qbytes, &up->msg_qbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: arch/s390/kernel/compat_linux.c:593:
+			err2 |= __put_user (m.msg_lspid, &up->msg_lspid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#629: FILE: arch/s390/kernel/compat_linux.c:594:
+			err2 |= __put_user (m.msg_lrpid, &up->msg_lrpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#639: FILE: arch/s390/kernel/compat_linux.c:604:
+			err = get_user (m.msg_perm.uid, &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: arch/s390/kernel/compat_linux.c:605:
+			err |= __get_user (m.msg_perm.gid, &up->msg_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: arch/s390/kernel/compat_linux.c:606:
+			err |= __get_user (m.msg_perm.mode, &up->msg_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: arch/s390/kernel/compat_linux.c:607:
+			err |= __get_user (m.msg_qbytes, &up->msg_qbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: arch/s390/kernel/compat_linux.c:611:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: arch/s390/kernel/compat_linux.c:612:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#648: FILE: arch/s390/kernel/compat_linux.c:613:
+		err = sys_msgctl (first, second, &m);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: arch/s390/kernel/compat_linux.c:614:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: arch/s390/kernel/compat_linux.c:615:
+		if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: arch/s390/kernel/compat_linux.c:616:
+		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: arch/s390/kernel/compat_linux.c:616:
+		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: arch/s390/kernel/compat_linux.c:617:
+			int err2 = put_user (m.msg_perm.key, &up->msg_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#653: FILE: arch/s390/kernel/compat_linux.c:618:
+			int err2 = put_user (m.msg_perm.key, &up->msg_perm.key);
+			err2 |= __put_user (high2lowuid(m.msg_perm.uid), &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#653: FILE: arch/s390/kernel/compat_linux.c:618:
+			err2 |= __put_user (high2lowuid(m.msg_perm.uid), &up->msg_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#654: FILE: arch/s390/kernel/compat_linux.c:619:
+			err2 |= __put_user (high2lowgid(m.msg_perm.gid), &up->msg_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: arch/s390/kernel/compat_linux.c:620:
+			err2 |= __put_user (high2lowuid(m.msg_perm.cuid), &up->msg_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: arch/s390/kernel/compat_linux.c:621:
+			err2 |= __put_user (high2lowgid(m.msg_perm.cgid), &up->msg_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: arch/s390/kernel/compat_linux.c:622:
+			err2 |= __put_user (m.msg_perm.mode, &up->msg_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: arch/s390/kernel/compat_linux.c:623:
+			err2 |= __put_user (m.msg_perm.seq, &up->msg_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: arch/s390/kernel/compat_linux.c:624:
+			err2 |= __put_user (m.msg_stime, &up->msg_stime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: arch/s390/kernel/compat_linux.c:625:
+			err2 |= __put_user (m.msg_rtime, &up->msg_rtime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: arch/s390/kernel/compat_linux.c:626:
+			err2 |= __put_user (m.msg_ctime, &up->msg_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: arch/s390/kernel/compat_linux.c:627:
+			err2 |= __put_user (m.msg_cbytes, &up->msg_cbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: arch/s390/kernel/compat_linux.c:628:
+			err2 |= __put_user (m.msg_qnum, &up->msg_qnum);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#664: FILE: arch/s390/kernel/compat_linux.c:629:
+			err2 |= __put_user (m.msg_qbytes, &up->msg_qbytes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: arch/s390/kernel/compat_linux.c:630:
+			err2 |= __put_user (m.msg_lspid, &up->msg_lspid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: arch/s390/kernel/compat_linux.c:631:
+			err2 |= __put_user (m.msg_lrpid, &up->msg_lrpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: arch/s390/kernel/compat_linux.c:641:
+static int do_sys32_shmat (int first, int second, int third, int version, void *uptr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: arch/s390/kernel/compat_linux.c:649:
+	err = sys_shmat (first, uptr, second, &raddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#687: FILE: arch/s390/kernel/compat_linux.c:652:
+	err = put_user (raddr, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: arch/s390/kernel/compat_linux.c:657:
+static int do_sys32_shmctl (int first, int second, void *uptr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: arch/s390/kernel/compat_linux.c:661:
+	if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: arch/s390/kernel/compat_linux.c:662:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SHM_LOCK) | IPCOP_MASK (SHM_UNLOCK) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: arch/s390/kernel/compat_linux.c:662:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SHM_LOCK) | IPCOP_MASK (SHM_UNLOCK) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: arch/s390/kernel/compat_linux.c:662:
+	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SHM_LOCK) | IPCOP_MASK (SHM_UNLOCK) |

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: arch/s390/kernel/compat_linux.c:663:
+	     IPCOP_MASK (IPC_RMID))) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#699: FILE: arch/s390/kernel/compat_linux.c:664:
+		if (second == (IPC_INFO|IPC_64))
 		                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#701: FILE: arch/s390/kernel/compat_linux.c:666:
+		err = sys_shmctl (first, second, (struct shmid_ds *)uptr);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#702: FILE: arch/s390/kernel/compat_linux.c:667:
+	} else if ((second & IPC_64) && second != (SHM_INFO|IPC_64)) {
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#707: FILE: arch/s390/kernel/compat_linux.c:672:
+		if (second == (IPC_SET|IPC_64)) {
 		                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: arch/s390/kernel/compat_linux.c:673:
+			err = get_user (s.shm_perm.uid, &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#709: FILE: arch/s390/kernel/compat_linux.c:674:
+			err |= __get_user (s.shm_perm.gid, &up->shm_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: arch/s390/kernel/compat_linux.c:675:
+			err |= __get_user (s.shm_perm.mode, &up->shm_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: arch/s390/kernel/compat_linux.c:679:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: arch/s390/kernel/compat_linux.c:680:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#716: FILE: arch/s390/kernel/compat_linux.c:681:
+		err = sys_shmctl (first, second, (struct shmid_ds *)&s);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#717: FILE: arch/s390/kernel/compat_linux.c:682:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#722: FILE: arch/s390/kernel/compat_linux.c:687:
+		if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: arch/s390/kernel/compat_linux.c:688:
+		    (IPCOP_MASK (SHM_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: arch/s390/kernel/compat_linux.c:688:
+		    (IPCOP_MASK (SHM_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: arch/s390/kernel/compat_linux.c:689:
+			int err2 = put_user (s.shm_perm.key, &up->shm_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#725: FILE: arch/s390/kernel/compat_linux.c:690:
+			int err2 = put_user (s.shm_perm.key, &up->shm_perm.key);
+			err2 |= __put_user (high2lowuid(s.shm_perm.uid), &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: arch/s390/kernel/compat_linux.c:690:
+			err2 |= __put_user (high2lowuid(s.shm_perm.uid), &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: arch/s390/kernel/compat_linux.c:691:
+			err2 |= __put_user (high2lowgid(s.shm_perm.gid), &up->shm_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#727: FILE: arch/s390/kernel/compat_linux.c:692:
+			err2 |= __put_user (high2lowuid(s.shm_perm.cuid), &up->shm_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: arch/s390/kernel/compat_linux.c:693:
+			err2 |= __put_user (high2lowgid(s.shm_perm.cgid), &up->shm_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#729: FILE: arch/s390/kernel/compat_linux.c:694:
+			err2 |= __put_user (s.shm_perm.mode, &up->shm_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#730: FILE: arch/s390/kernel/compat_linux.c:695:
+			err2 |= __put_user (s.shm_perm.seq, &up->shm_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: arch/s390/kernel/compat_linux.c:696:
+			err2 |= __put_user (s.shm_atime, &up->shm_atime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: arch/s390/kernel/compat_linux.c:697:
+			err2 |= __put_user (s.shm_dtime, &up->shm_dtime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: arch/s390/kernel/compat_linux.c:698:
+			err2 |= __put_user (s.shm_ctime, &up->shm_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#734: FILE: arch/s390/kernel/compat_linux.c:699:
+			err2 |= __put_user (s.shm_segsz, &up->shm_segsz);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#735: FILE: arch/s390/kernel/compat_linux.c:700:
+			err2 |= __put_user (s.shm_nattch, &up->shm_nattch);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#736: FILE: arch/s390/kernel/compat_linux.c:701:
+			err2 |= __put_user (s.shm_cpid, &up->shm_cpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#737: FILE: arch/s390/kernel/compat_linux.c:702:
+			err2 |= __put_user (s.shm_lpid, &up->shm_lpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: arch/s390/kernel/compat_linux.c:713:
+			err = get_user (s.shm_perm.uid, &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: arch/s390/kernel/compat_linux.c:714:
+			err |= __get_user (s.shm_perm.gid, &up->shm_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#750: FILE: arch/s390/kernel/compat_linux.c:715:
+			err |= __get_user (s.shm_perm.mode, &up->shm_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: arch/s390/kernel/compat_linux.c:719:
+		old_fs = get_fs ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: arch/s390/kernel/compat_linux.c:720:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#756: FILE: arch/s390/kernel/compat_linux.c:721:
+		err = sys_shmctl (first, second, &s);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#757: FILE: arch/s390/kernel/compat_linux.c:722:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#769: FILE: arch/s390/kernel/compat_linux.c:734:
+			int err2 = put_user (kp->used_ids, &uip->used_ids);

WARNING:LINE_SPACING: Missing a blank line after declarations
#770: FILE: arch/s390/kernel/compat_linux.c:735:
+			int err2 = put_user (kp->used_ids, &uip->used_ids);
+			err2 |= __put_user (kp->shm_tot, &uip->shm_tot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: arch/s390/kernel/compat_linux.c:735:
+			err2 |= __put_user (kp->shm_tot, &uip->shm_tot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: arch/s390/kernel/compat_linux.c:736:
+			err2 |= __put_user (kp->shm_rss, &uip->shm_rss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: arch/s390/kernel/compat_linux.c:737:
+			err2 |= __put_user (kp->shm_swp, &uip->shm_swp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: arch/s390/kernel/compat_linux.c:738:
+			err2 |= __put_user (kp->swap_attempts, &uip->swap_attempts);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#774: FILE: arch/s390/kernel/compat_linux.c:739:
+			err2 |= __put_user (kp->swap_successes, &uip->swap_successes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#777: FILE: arch/s390/kernel/compat_linux.c:742:
+		} else if (IPCOP_MASK (second) &

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: arch/s390/kernel/compat_linux.c:743:
+			   (IPCOP_MASK (SHM_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: arch/s390/kernel/compat_linux.c:743:
+			   (IPCOP_MASK (SHM_STAT) | IPCOP_MASK (IPC_STAT))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: arch/s390/kernel/compat_linux.c:744:
+			int err2 = put_user (s.shm_perm.key, &up->shm_perm.key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#780: FILE: arch/s390/kernel/compat_linux.c:745:
+			int err2 = put_user (s.shm_perm.key, &up->shm_perm.key);
+			err2 |= __put_user (high2lowuid(s.shm_perm.uid), &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#780: FILE: arch/s390/kernel/compat_linux.c:745:
+			err2 |= __put_user (high2lowuid(s.shm_perm.uid), &up->shm_perm.uid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: arch/s390/kernel/compat_linux.c:746:
+			err2 |= __put_user (high2lowgid(s.shm_perm.gid), &up->shm_perm.gid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: arch/s390/kernel/compat_linux.c:747:
+			err2 |= __put_user (high2lowuid(s.shm_perm.cuid), &up->shm_perm.cuid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: arch/s390/kernel/compat_linux.c:748:
+			err2 |= __put_user (high2lowgid(s.shm_perm.cgid), &up->shm_perm.cgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#784: FILE: arch/s390/kernel/compat_linux.c:749:
+			err2 |= __put_user (s.shm_perm.mode, &up->shm_perm.mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: arch/s390/kernel/compat_linux.c:750:
+			err2 |= __put_user (s.shm_perm.seq, &up->shm_perm.seq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: arch/s390/kernel/compat_linux.c:751:
+			err2 |= __put_user (s.shm_atime, &up->shm_atime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#787: FILE: arch/s390/kernel/compat_linux.c:752:
+			err2 |= __put_user (s.shm_dtime, &up->shm_dtime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: arch/s390/kernel/compat_linux.c:753:
+			err2 |= __put_user (s.shm_ctime, &up->shm_ctime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#789: FILE: arch/s390/kernel/compat_linux.c:754:
+			err2 |= __put_user (s.shm_segsz, &up->shm_segsz);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#790: FILE: arch/s390/kernel/compat_linux.c:755:
+			err2 |= __put_user (s.shm_nattch, &up->shm_nattch);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#791: FILE: arch/s390/kernel/compat_linux.c:756:
+			err2 |= __put_user (s.shm_cpid, &up->shm_cpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#792: FILE: arch/s390/kernel/compat_linux.c:757:
+			err2 |= __put_user (s.shm_lpid, &up->shm_lpid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#801: FILE: arch/s390/kernel/compat_linux.c:766:
+asmlinkage int sys32_ipc (u32 call, int first, int second, int third, u32 ptr, u32 fifth)

ERROR:SPACING: space required before the open parenthesis '('
#808: FILE: arch/s390/kernel/compat_linux.c:773:
+	if(version)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#815: FILE: arch/s390/kernel/compat_linux.c:780:
+			err = sys_semop (first, (struct sembuf *)AA(ptr), second);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#818: FILE: arch/s390/kernel/compat_linux.c:783:
+			err = sys_semget (first, second, third);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#821: FILE: arch/s390/kernel/compat_linux.c:786:
+			err = do_sys32_semctl (first, second, third, (void *)AA(ptr));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: arch/s390/kernel/compat_linux.c:792:
+^Iif (call <= MSGCTL) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#830: FILE: arch/s390/kernel/compat_linux.c:795:
+			err = do_sys32_msgsnd (first, second, third, (void *)AA(ptr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#833: FILE: arch/s390/kernel/compat_linux.c:798:
+			err = do_sys32_msgrcv (first, second, 0, third,

CHECK:SPACING: No space is necessary after a cast
#837: FILE: arch/s390/kernel/compat_linux.c:802:
+			err = sys_msgget ((key_t) first, second);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: arch/s390/kernel/compat_linux.c:802:
+			err = sys_msgget ((key_t) first, second);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#840: FILE: arch/s390/kernel/compat_linux.c:805:
+			err = do_sys32_msgctl (first, second, (void *)AA(ptr));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: arch/s390/kernel/compat_linux.c:811:
+^Iif (call <= SHMCTL) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#849: FILE: arch/s390/kernel/compat_linux.c:814:
+			err = do_sys32_shmat (first, second, third,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: arch/s390/kernel/compat_linux.c:817:
+^I^Icase SHMDT: $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#853: FILE: arch/s390/kernel/compat_linux.c:818:
+			err = sys_shmdt ((char *)AA(ptr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#856: FILE: arch/s390/kernel/compat_linux.c:821:
+			err = sys_shmget (first, second, third);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#859: FILE: arch/s390/kernel/compat_linux.c:824:
+			err = do_sys32_shmctl (first, second, (void *)AA(ptr));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#872: FILE: arch/s390/kernel/compat_linux.c:837:
+extern asmlinkage long sys_truncate(const char * path, unsigned long length);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#873: FILE: arch/s390/kernel/compat_linux.c:838:
+extern asmlinkage long sys_ftruncate(unsigned int fd, unsigned long length);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: arch/s390/kernel/compat_linux.c:840:
+asmlinkage int sys32_truncate64(const char * path, unsigned long high, unsigned long low)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#899: FILE: arch/s390/kernel/compat_linux.c:864:
+	struct iovec *iov=iovstack, *ivp;
 	                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#910: FILE: arch/s390/kernel/compat_linux.c:875:
+	if (verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#915: FILE: arch/s390/kernel/compat_linux.c:880:
+		iov = kmalloc(count*sizeof(struct iovec), GFP_KERNEL);
 		                   ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#915: FILE: arch/s390/kernel/compat_linux.c:880:
+		iov = kmalloc(count*sizeof(struct iovec), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: space required before the open parenthesis '('
#923: FILE: arch/s390/kernel/compat_linux.c:888:
+	while(i > 0) {

CHECK:SPACING: No space is necessary after a cast
#931: FILE: arch/s390/kernel/compat_linux.c:896:
+		ivp->iov_len = (__kernel_size_t) len;

CHECK:SPACING: No space is necessary after a cast
#953: FILE: arch/s390/kernel/compat_linux.c:918:
+	      (io_fn_t) file->f_op->write);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#957: FILE: arch/s390/kernel/compat_linux.c:922:
+		void * base;

ERROR:SPACING: space required before the open parenthesis '('
#987: FILE: arch/s390/kernel/compat_linux.c:952:
+	if(!file)

ERROR:SPACING: space required before the open parenthesis '('
#1005: FILE: arch/s390/kernel/compat_linux.c:970:
+	if(!file)

CHECK:SPACING: No space is necessary after a cast
#1018: FILE: arch/s390/kernel/compat_linux.c:983:
+#define NAME_OFFSET(de) ((int) ((de)->d_name - (char *) (de)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'de' - possible side-effects?
#1018: FILE: arch/s390/kernel/compat_linux.c:983:
+#define NAME_OFFSET(de) ((int) ((de)->d_name - (char *) (de)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1019: FILE: arch/s390/kernel/compat_linux.c:984:
+#define ROUND_UP(x) (((x)+sizeof(u32)-1) & ~(sizeof(u32)-1))
                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1019: FILE: arch/s390/kernel/compat_linux.c:984:
+#define ROUND_UP(x) (((x)+sizeof(u32)-1) & ~(sizeof(u32)-1))
                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1019: FILE: arch/s390/kernel/compat_linux.c:984:
+#define ROUND_UP(x) (((x)+sizeof(u32)-1) & ~(sizeof(u32)-1))
                                                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1029: FILE: arch/s390/kernel/compat_linux.c:994:
+	struct old_linux_dirent32 * dirent;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1033: FILE: arch/s390/kernel/compat_linux.c:998:
+static int fillonedir(void * __buf, const char * name, int namlen,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1033: FILE: arch/s390/kernel/compat_linux.c:998:
+static int fillonedir(void * __buf, const char * name, int namlen,

CHECK:SPACING: No space is necessary after a cast
#1036: FILE: arch/s390/kernel/compat_linux.c:1001:
+	struct readdir_callback32 * buf = (struct readdir_callback32 *) __buf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1036: FILE: arch/s390/kernel/compat_linux.c:1001:
+	struct readdir_callback32 * buf = (struct readdir_callback32 *) __buf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1037: FILE: arch/s390/kernel/compat_linux.c:1002:
+	struct old_linux_dirent32 * dirent;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1054: FILE: arch/s390/kernel/compat_linux.c:1019:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1083: FILE: arch/s390/kernel/compat_linux.c:1048:
+	struct linux_dirent32 * current_dir;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1084: FILE: arch/s390/kernel/compat_linux.c:1049:
+	struct linux_dirent32 * previous;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1089: FILE: arch/s390/kernel/compat_linux.c:1054:
+static int filldir(void * __buf, const char * name, int namlen, loff_t offset, ino_t ino,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1089: FILE: arch/s390/kernel/compat_linux.c:1054:
+static int filldir(void * __buf, const char * name, int namlen, loff_t offset, ino_t ino,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1092: FILE: arch/s390/kernel/compat_linux.c:1057:
+	struct linux_dirent32 * dirent;

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: arch/s390/kernel/compat_linux.c:1058:
+	struct getdents_callback32 * buf = (struct getdents_callback32 *) __buf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1093: FILE: arch/s390/kernel/compat_linux.c:1058:
+	struct getdents_callback32 * buf = (struct getdents_callback32 *) __buf;

CHECK:SPACING: No space is necessary after a cast
#1108: FILE: arch/s390/kernel/compat_linux.c:1073:
+	((char *) dirent) += reclen;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1116: FILE: arch/s390/kernel/compat_linux.c:1081:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1117: FILE: arch/s390/kernel/compat_linux.c:1082:
+	struct linux_dirent32 * lastdirent;

ERROR:SPACING: space required before the open parenthesis '('
#1135: FILE: arch/s390/kernel/compat_linux.c:1100:
+	if(lastdirent) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1158: FILE: arch/s390/kernel/compat_linux.c:1123:
+		if (verify_area(VERIFY_WRITE, ufdset, n*sizeof(u32)))
 		                                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1165: FILE: arch/s390/kernel/compat_linux.c:1130:
+			unsigned long h, l;
+			__get_user(l, ufdset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1166: FILE: arch/s390/kernel/compat_linux.c:1131:
+			__get_user(h, ufdset+1);
 			                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1178: FILE: arch/s390/kernel/compat_linux.c:1143:
+		memset(fdset, 0, ((n + 1) & ~1)*sizeof(u32));
 		                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1195: FILE: arch/s390/kernel/compat_linux.c:1160:
+		unsigned long h, l;
+		l = *fdset++;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1198: FILE: arch/s390/kernel/compat_linux.c:1163:
+		__put_user(h, ufdset+1);
 		                    ^

CHECK:SPACING: No space is necessary after a cast
#1207: FILE: arch/s390/kernel/compat_linux.c:1172:
+	((unsigned long) (MAX_SCHEDULE_TIMEOUT / HZ)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1207: FILE: arch/s390/kernel/compat_linux.c:1172:
+	((unsigned long) (MAX_SCHEDULE_TIMEOUT / HZ)-1)
 	                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1222: FILE: arch/s390/kernel/compat_linux.c:1187:
+		if ((ret = verify_area(VERIFY_READ, tvp, sizeof(*tvp)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1223: FILE: arch/s390/kernel/compat_linux.c:1188:
+		if ((ret = verify_area(VERIFY_READ, tvp, sizeof(*tvp)))
+		    || (ret = __get_user(sec, &tvp->tv_sec))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1224: FILE: arch/s390/kernel/compat_linux.c:1189:
+		    || (ret = __get_user(sec, &tvp->tv_sec))
+		    || (ret = __get_user(usec, &tvp->tv_usec)))

ERROR:SPACING: space required before the open parenthesis '('
#1228: FILE: arch/s390/kernel/compat_linux.c:1193:
+		if(sec < 0 || usec < 0)

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: arch/s390/kernel/compat_linux.c:1196:
+		if ((unsigned long) sec < MAX_SELECT_SECONDS) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1232: FILE: arch/s390/kernel/compat_linux.c:1197:
+			timeout = (usec + 1000000/HZ - 1) / (1000000/HZ);
 			                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1232: FILE: arch/s390/kernel/compat_linux.c:1197:
+			timeout = (usec + 1000000/HZ - 1) / (1000000/HZ);
 			                                            ^

CHECK:SPACING: No space is necessary after a cast
#1233: FILE: arch/s390/kernel/compat_linux.c:1198:
+			timeout += sec * (unsigned long) HZ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: arch/s390/kernel/compat_linux.c:1211:
+^I * long-words. $

CHECK:SPACING: No space is necessary after a cast
#1253: FILE: arch/s390/kernel/compat_linux.c:1218:
+	fds.in      = (unsigned long *)  bits;

CHECK:SPACING: No space is necessary after a cast
#1254: FILE: arch/s390/kernel/compat_linux.c:1219:
+	fds.out     = (unsigned long *) (bits +   size);

CHECK:SPACING: No space is necessary after a cast
#1255: FILE: arch/s390/kernel/compat_linux.c:1220:
+	fds.ex      = (unsigned long *) (bits + 2*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1255: FILE: arch/s390/kernel/compat_linux.c:1220:
+	fds.ex      = (unsigned long *) (bits + 2*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1256: FILE: arch/s390/kernel/compat_linux.c:1221:
+	fds.res_in  = (unsigned long *) (bits + 3*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1256: FILE: arch/s390/kernel/compat_linux.c:1221:
+	fds.res_in  = (unsigned long *) (bits + 3*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1257: FILE: arch/s390/kernel/compat_linux.c:1222:
+	fds.res_out = (unsigned long *) (bits + 4*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1257: FILE: arch/s390/kernel/compat_linux.c:1222:
+	fds.res_out = (unsigned long *) (bits + 4*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1258: FILE: arch/s390/kernel/compat_linux.c:1223:
+	fds.res_ex  = (unsigned long *) (bits + 5*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1258: FILE: arch/s390/kernel/compat_linux.c:1223:
+	fds.res_ex  = (unsigned long *) (bits + 5*size);
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1260: FILE: arch/s390/kernel/compat_linux.c:1225:
+	nn = (n + 8*sizeof(u32) - 1) / (8*sizeof(u32));
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1260: FILE: arch/s390/kernel/compat_linux.c:1225:
+	nn = (n + 8*sizeof(u32) - 1) / (8*sizeof(u32));
 	                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1261: FILE: arch/s390/kernel/compat_linux.c:1226:
+	if ((ret = get_fd_set32(nn, fds.in, inp)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#1273: FILE: arch/s390/kernel/compat_linux.c:1238:
+		int sec = 0, usec = 0;
+		if (timeout) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1276: FILE: arch/s390/kernel/compat_linux.c:1241:
+			usec *= (1000000/HZ);
 			                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1322: FILE: arch/s390/kernel/compat_linux.c:1287:
+/* fixme
+	err |= put_user(0, &statbuf->__unused4[0]);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: arch/s390/kernel/compat_linux.c:1301:
+        int version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: arch/s390/kernel/compat_linux.c:1301:
+        int version;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: arch/s390/kernel/compat_linux.c:1302:
+        unsigned int ncp_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: arch/s390/kernel/compat_linux.c:1302:
+        unsigned int ncp_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: arch/s390/kernel/compat_linux.c:1303:
+        compat_uid_t mounted_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: arch/s390/kernel/compat_linux.c:1303:
+        compat_uid_t mounted_uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1339: FILE: arch/s390/kernel/compat_linux.c:1304:
+        compat_pid_t wdog_pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: arch/s390/kernel/compat_linux.c:1304:
+        compat_pid_t wdog_pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1340: FILE: arch/s390/kernel/compat_linux.c:1305:
+        unsigned char mounted_vol[NCP_VOLNAME_LEN + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: arch/s390/kernel/compat_linux.c:1305:
+        unsigned char mounted_vol[NCP_VOLNAME_LEN + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: arch/s390/kernel/compat_linux.c:1306:
+        unsigned int time_out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: arch/s390/kernel/compat_linux.c:1306:
+        unsigned int time_out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1342: FILE: arch/s390/kernel/compat_linux.c:1307:
+        unsigned int retry_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: arch/s390/kernel/compat_linux.c:1307:
+        unsigned int retry_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: arch/s390/kernel/compat_linux.c:1308:
+        unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: arch/s390/kernel/compat_linux.c:1308:
+        unsigned int flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1344: FILE: arch/s390/kernel/compat_linux.c:1309:
+        compat_uid_t uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: arch/s390/kernel/compat_linux.c:1309:
+        compat_uid_t uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: arch/s390/kernel/compat_linux.c:1310:
+        compat_gid_t gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: arch/s390/kernel/compat_linux.c:1310:
+        compat_gid_t gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: arch/s390/kernel/compat_linux.c:1311:
+        compat_mode_t file_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: arch/s390/kernel/compat_linux.c:1311:
+        compat_mode_t file_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: arch/s390/kernel/compat_linux.c:1312:
+        compat_mode_t dir_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: arch/s390/kernel/compat_linux.c:1312:
+        compat_mode_t dir_mode;$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1359: FILE: arch/s390/kernel/compat_linux.c:1324:
+	memmove (n->mounted_vol, n32->mounted_vol, (sizeof (n32->mounted_vol) + 3 * sizeof (unsigned int)));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1359: FILE: arch/s390/kernel/compat_linux.c:1324:
+	memmove (n->mounted_vol, n32->mounted_vol, (sizeof (n32->mounted_vol) + 3 * sizeof (unsigned int)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1359: FILE: arch/s390/kernel/compat_linux.c:1324:
+	memmove (n->mounted_vol, n32->mounted_vol, (sizeof (n32->mounted_vol) + 3 * sizeof (unsigned int)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1359: FILE: arch/s390/kernel/compat_linux.c:1324:
+	memmove (n->mounted_vol, n32->mounted_vol, (sizeof (n32->mounted_vol) + 3 * sizeof (unsigned int)));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: arch/s390/kernel/compat_linux.c:1331:
+        int version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: arch/s390/kernel/compat_linux.c:1331:
+        int version;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: arch/s390/kernel/compat_linux.c:1332:
+        compat_uid_t mounted_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: arch/s390/kernel/compat_linux.c:1332:
+        compat_uid_t mounted_uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: arch/s390/kernel/compat_linux.c:1333:
+        compat_uid_t uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: arch/s390/kernel/compat_linux.c:1333:
+        compat_uid_t uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: arch/s390/kernel/compat_linux.c:1334:
+        compat_gid_t gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: arch/s390/kernel/compat_linux.c:1334:
+        compat_gid_t gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: arch/s390/kernel/compat_linux.c:1335:
+        compat_mode_t file_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: arch/s390/kernel/compat_linux.c:1335:
+        compat_mode_t file_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1371: FILE: arch/s390/kernel/compat_linux.c:1336:
+        compat_mode_t dir_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: arch/s390/kernel/compat_linux.c:1336:
+        compat_mode_t dir_mode;$

ERROR:SPACING: space required before the open parenthesis '('
#1398: FILE: arch/s390/kernel/compat_linux.c:1363:
+	if(!user)

ERROR:SPACING: space required before the open parenthesis '('
#1401: FILE: arch/s390/kernel/compat_linux.c:1366:
+	if(!vma || (unsigned long)user < vma->vm_start)

ERROR:SPACING: space required before the open parenthesis '('
#1403: FILE: arch/s390/kernel/compat_linux.c:1368:
+	if(!(vma->vm_flags & VM_READ))

CHECK:SPACING: No space is necessary after a cast
#1405: FILE: arch/s390/kernel/compat_linux.c:1370:
+	i = vma->vm_end - (unsigned long) user;

CHECK:SPACING: No space is necessary after a cast
#1406: FILE: arch/s390/kernel/compat_linux.c:1371:
+	if(PAGE_SIZE <= (unsigned long) i)

ERROR:SPACING: space required before the open parenthesis '('
#1406: FILE: arch/s390/kernel/compat_linux.c:1371:
+	if(PAGE_SIZE <= (unsigned long) i)

ERROR:SPACING: space required before the open parenthesis '('
#1408: FILE: arch/s390/kernel/compat_linux.c:1373:
+	if(!(page = __get_free_page(GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1408: FILE: arch/s390/kernel/compat_linux.c:1373:
+	if(!(page = __get_free_page(GFP_KERNEL)))

CHECK:SPACING: No space is necessary after a cast
#1410: FILE: arch/s390/kernel/compat_linux.c:1375:
+	if(copy_from_user((void *) page, user, i)) {

ERROR:SPACING: space required before the open parenthesis '('
#1410: FILE: arch/s390/kernel/compat_linux.c:1375:
+	if(copy_from_user((void *) page, user, i)) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1421: FILE: arch/s390/kernel/compat_linux.c:1386:
+asmlinkage int sys32_mount(char *dev_name, char *dir_name, char *type, unsigned long new_flags, u32 data)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1429: FILE: arch/s390/kernel/compat_linux.c:1394:
+	is_smb = is_ncp = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1457: FILE: arch/s390/kernel/compat_linux.c:1422:
+		err = do_mount((char*)dev_page, (char*)dir_page,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1457: FILE: arch/s390/kernel/compat_linux.c:1422:
+		err = do_mount((char*)dev_page, (char*)dir_page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1458: FILE: arch/s390/kernel/compat_linux.c:1423:
+		err = do_mount((char*)dev_page, (char*)dir_page,
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1458: FILE: arch/s390/kernel/compat_linux.c:1423:
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1458: FILE: arch/s390/kernel/compat_linux.c:1423:
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1467: FILE: arch/s390/kernel/compat_linux.c:1432:
+		err = do_mount((char*)dev_page, (char*)dir_page,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1467: FILE: arch/s390/kernel/compat_linux.c:1432:
+		err = do_mount((char*)dev_page, (char*)dir_page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: arch/s390/kernel/compat_linux.c:1433:
+		err = do_mount((char*)dev_page, (char*)dir_page,
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1468: FILE: arch/s390/kernel/compat_linux.c:1433:
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1468: FILE: arch/s390/kernel/compat_linux.c:1433:
+				(char*)type_page, new_flags, (char*)data_page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: arch/s390/kernel/compat_linux.c:1452:
+        struct compat_timeval ru_utime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: arch/s390/kernel/compat_linux.c:1452:
+        struct compat_timeval ru_utime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: arch/s390/kernel/compat_linux.c:1453:
+        struct compat_timeval ru_stime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: arch/s390/kernel/compat_linux.c:1453:
+        struct compat_timeval ru_stime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: arch/s390/kernel/compat_linux.c:1454:
+        s32    ru_maxrss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: arch/s390/kernel/compat_linux.c:1454:
+        s32    ru_maxrss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: arch/s390/kernel/compat_linux.c:1455:
+        s32    ru_ixrss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: arch/s390/kernel/compat_linux.c:1455:
+        s32    ru_ixrss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1491: FILE: arch/s390/kernel/compat_linux.c:1456:
+        s32    ru_idrss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1491: FILE: arch/s390/kernel/compat_linux.c:1456:
+        s32    ru_idrss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1492: FILE: arch/s390/kernel/compat_linux.c:1457:
+        s32    ru_isrss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: arch/s390/kernel/compat_linux.c:1457:
+        s32    ru_isrss;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1493: FILE: arch/s390/kernel/compat_linux.c:1458:
+        s32    ru_minflt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: arch/s390/kernel/compat_linux.c:1458:
+        s32    ru_minflt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1494: FILE: arch/s390/kernel/compat_linux.c:1459:
+        s32    ru_majflt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: arch/s390/kernel/compat_linux.c:1459:
+        s32    ru_majflt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1495: FILE: arch/s390/kernel/compat_linux.c:1460:
+        s32    ru_nswap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: arch/s390/kernel/compat_linux.c:1460:
+        s32    ru_nswap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1496: FILE: arch/s390/kernel/compat_linux.c:1461:
+        s32    ru_inblock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: arch/s390/kernel/compat_linux.c:1461:
+        s32    ru_inblock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: arch/s390/kernel/compat_linux.c:1462:
+        s32    ru_oublock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: arch/s390/kernel/compat_linux.c:1462:
+        s32    ru_oublock;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1498: FILE: arch/s390/kernel/compat_linux.c:1463:
+        s32    ru_msgsnd; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1498: FILE: arch/s390/kernel/compat_linux.c:1463:
+        s32    ru_msgsnd; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1498: FILE: arch/s390/kernel/compat_linux.c:1463:
+        s32    ru_msgsnd; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1499: FILE: arch/s390/kernel/compat_linux.c:1464:
+        s32    ru_msgrcv; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1499: FILE: arch/s390/kernel/compat_linux.c:1464:
+        s32    ru_msgrcv; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: arch/s390/kernel/compat_linux.c:1464:
+        s32    ru_msgrcv; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1500: FILE: arch/s390/kernel/compat_linux.c:1465:
+        s32    ru_nsignals;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: arch/s390/kernel/compat_linux.c:1465:
+        s32    ru_nsignals;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: arch/s390/kernel/compat_linux.c:1466:
+        s32    ru_nvcsw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: arch/s390/kernel/compat_linux.c:1466:
+        s32    ru_nvcsw;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1502: FILE: arch/s390/kernel/compat_linux.c:1467:
+        s32    ru_nivcsw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: arch/s390/kernel/compat_linux.c:1467:
+        s32    ru_nivcsw;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1505: FILE: arch/s390/kernel/compat_linux.c:1470:
+static int put_rusage (struct rusage32 *ru, struct rusage *r)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1508: FILE: arch/s390/kernel/compat_linux.c:1473:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1509: FILE: arch/s390/kernel/compat_linux.c:1474:
+	err = put_user (r->ru_utime.tv_sec, &ru->ru_utime.tv_sec);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1510: FILE: arch/s390/kernel/compat_linux.c:1475:
+	err |= __put_user (r->ru_utime.tv_usec, &ru->ru_utime.tv_usec);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1511: FILE: arch/s390/kernel/compat_linux.c:1476:
+	err |= __put_user (r->ru_stime.tv_sec, &ru->ru_stime.tv_sec);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1512: FILE: arch/s390/kernel/compat_linux.c:1477:
+	err |= __put_user (r->ru_stime.tv_usec, &ru->ru_stime.tv_usec);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: arch/s390/kernel/compat_linux.c:1478:
+	err |= __put_user (r->ru_maxrss, &ru->ru_maxrss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1514: FILE: arch/s390/kernel/compat_linux.c:1479:
+	err |= __put_user (r->ru_ixrss, &ru->ru_ixrss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1515: FILE: arch/s390/kernel/compat_linux.c:1480:
+	err |= __put_user (r->ru_idrss, &ru->ru_idrss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1516: FILE: arch/s390/kernel/compat_linux.c:1481:
+	err |= __put_user (r->ru_isrss, &ru->ru_isrss);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1517: FILE: arch/s390/kernel/compat_linux.c:1482:
+	err |= __put_user (r->ru_minflt, &ru->ru_minflt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1518: FILE: arch/s390/kernel/compat_linux.c:1483:
+	err |= __put_user (r->ru_majflt, &ru->ru_majflt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1519: FILE: arch/s390/kernel/compat_linux.c:1484:
+	err |= __put_user (r->ru_nswap, &ru->ru_nswap);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1520: FILE: arch/s390/kernel/compat_linux.c:1485:
+	err |= __put_user (r->ru_inblock, &ru->ru_inblock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1521: FILE: arch/s390/kernel/compat_linux.c:1486:
+	err |= __put_user (r->ru_oublock, &ru->ru_oublock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1522: FILE: arch/s390/kernel/compat_linux.c:1487:
+	err |= __put_user (r->ru_msgsnd, &ru->ru_msgsnd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1523: FILE: arch/s390/kernel/compat_linux.c:1488:
+	err |= __put_user (r->ru_msgrcv, &ru->ru_msgrcv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1524: FILE: arch/s390/kernel/compat_linux.c:1489:
+	err |= __put_user (r->ru_nsignals, &ru->ru_nsignals);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1525: FILE: arch/s390/kernel/compat_linux.c:1490:
+	err |= __put_user (r->ru_nvcsw, &ru->ru_nvcsw);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1526: FILE: arch/s390/kernel/compat_linux.c:1491:
+	err |= __put_user (r->ru_nivcsw, &ru->ru_nivcsw);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1530: FILE: arch/s390/kernel/compat_linux.c:1495:
+asmlinkage int sys32_wait4(compat_pid_t pid, unsigned int *stat_addr, int options, struct rusage32 *ru)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1532: FILE: arch/s390/kernel/compat_linux.c:1497:
+	if (!ru)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1534: FILE: arch/s390/kernel/compat_linux.c:1499:
+		return sys_wait4(pid, stat_addr, options, NULL);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1534: FILE: arch/s390/kernel/compat_linux.c:1499:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1539: FILE: arch/s390/kernel/compat_linux.c:1504:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1540: FILE: arch/s390/kernel/compat_linux.c:1505:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1542: FILE: arch/s390/kernel/compat_linux.c:1507:
+		set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1543: FILE: arch/s390/kernel/compat_linux.c:1508:
+		if (put_rusage (ru, &r)) return -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1543: FILE: arch/s390/kernel/compat_linux.c:1508:
+		if (put_rusage (ru, &r)) return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1544: FILE: arch/s390/kernel/compat_linux.c:1509:
+		if (stat_addr && put_user (status, stat_addr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1551: FILE: arch/s390/kernel/compat_linux.c:1516:
+        s32 uptime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: arch/s390/kernel/compat_linux.c:1516:
+        s32 uptime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1552: FILE: arch/s390/kernel/compat_linux.c:1517:
+        u32 loads[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: arch/s390/kernel/compat_linux.c:1517:
+        u32 loads[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1553: FILE: arch/s390/kernel/compat_linux.c:1518:
+        u32 totalram;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: arch/s390/kernel/compat_linux.c:1518:
+        u32 totalram;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1554: FILE: arch/s390/kernel/compat_linux.c:1519:
+        u32 freeram;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: arch/s390/kernel/compat_linux.c:1519:
+        u32 freeram;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1555: FILE: arch/s390/kernel/compat_linux.c:1520:
+        u32 sharedram;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: arch/s390/kernel/compat_linux.c:1520:
+        u32 sharedram;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1556: FILE: arch/s390/kernel/compat_linux.c:1521:
+        u32 bufferram;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: arch/s390/kernel/compat_linux.c:1521:
+        u32 bufferram;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1557: FILE: arch/s390/kernel/compat_linux.c:1522:
+        u32 totalswap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: arch/s390/kernel/compat_linux.c:1522:
+        u32 totalswap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: arch/s390/kernel/compat_linux.c:1523:
+        u32 freeswap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: arch/s390/kernel/compat_linux.c:1523:
+        u32 freeswap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1559: FILE: arch/s390/kernel/compat_linux.c:1524:
+        unsigned short procs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: arch/s390/kernel/compat_linux.c:1524:
+        unsigned short procs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1560: FILE: arch/s390/kernel/compat_linux.c:1525:
+        char _f[22];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: arch/s390/kernel/compat_linux.c:1525:
+        char _f[22];$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1563: FILE: arch/s390/kernel/compat_linux.c:1528:
+extern asmlinkage int sys_sysinfo(struct sysinfo *info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1569: FILE: arch/s390/kernel/compat_linux.c:1534:
+	mm_segment_t old_fs = get_fs ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1570: FILE: arch/s390/kernel/compat_linux.c:1535:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1571: FILE: arch/s390/kernel/compat_linux.c:1536:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1573: FILE: arch/s390/kernel/compat_linux.c:1538:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1574: FILE: arch/s390/kernel/compat_linux.c:1539:
+	err = put_user (s.uptime, &info->uptime);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1575: FILE: arch/s390/kernel/compat_linux.c:1540:
+	err |= __put_user (s.loads[0], &info->loads[0]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1576: FILE: arch/s390/kernel/compat_linux.c:1541:
+	err |= __put_user (s.loads[1], &info->loads[1]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1577: FILE: arch/s390/kernel/compat_linux.c:1542:
+	err |= __put_user (s.loads[2], &info->loads[2]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1578: FILE: arch/s390/kernel/compat_linux.c:1543:
+	err |= __put_user (s.totalram, &info->totalram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1579: FILE: arch/s390/kernel/compat_linux.c:1544:
+	err |= __put_user (s.freeram, &info->freeram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1580: FILE: arch/s390/kernel/compat_linux.c:1545:
+	err |= __put_user (s.sharedram, &info->sharedram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1581: FILE: arch/s390/kernel/compat_linux.c:1546:
+	err |= __put_user (s.bufferram, &info->bufferram);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1582: FILE: arch/s390/kernel/compat_linux.c:1547:
+	err |= __put_user (s.totalswap, &info->totalswap);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1583: FILE: arch/s390/kernel/compat_linux.c:1548:
+	err |= __put_user (s.freeswap, &info->freeswap);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1584: FILE: arch/s390/kernel/compat_linux.c:1549:
+	err |= __put_user (s.procs, &info->procs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1593: FILE: arch/s390/kernel/compat_linux.c:1558:
+asmlinkage int sys32_sched_rr_get_interval(compat_pid_t pid,
+		struct compat_timespec *interval)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1597: FILE: arch/s390/kernel/compat_linux.c:1562:
+	mm_segment_t old_fs = get_fs ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1598: FILE: arch/s390/kernel/compat_linux.c:1563:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1599: FILE: arch/s390/kernel/compat_linux.c:1564:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: arch/s390/kernel/compat_linux.c:1566:
+	set_fs (old_fs);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1609: FILE: arch/s390/kernel/compat_linux.c:1574:
+asmlinkage int sys32_rt_sigprocmask(int how, compat_sigset_t *set, compat_sigset_t *oset, compat_size_t sigsetsize)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: arch/s390/kernel/compat_linux.c:1580:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1617: FILE: arch/s390/kernel/compat_linux.c:1582:
+		if (copy_from_user (&s32, set, sizeof(compat_sigset_t)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1620: FILE: arch/s390/kernel/compat_linux.c:1585:
+		case 4: s.sig[3] = s32.sig[6] | (((long)s32.sig[7]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1621: FILE: arch/s390/kernel/compat_linux.c:1586:
+		case 3: s.sig[2] = s32.sig[4] | (((long)s32.sig[5]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1622: FILE: arch/s390/kernel/compat_linux.c:1587:
+		case 2: s.sig[1] = s32.sig[2] | (((long)s32.sig[3]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1623: FILE: arch/s390/kernel/compat_linux.c:1588:
+		case 1: s.sig[0] = s32.sig[0] | (((long)s32.sig[1]) << 32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1626: FILE: arch/s390/kernel/compat_linux.c:1591:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1628: FILE: arch/s390/kernel/compat_linux.c:1593:
+	set_fs (old_fs);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1629: FILE: arch/s390/kernel/compat_linux.c:1594:
+	if (ret) return ret;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1632: FILE: arch/s390/kernel/compat_linux.c:1597:
+		case 4: s32.sig[7] = (s.sig[3] >> 32); s32.sig[6] = s.sig[3];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1633: FILE: arch/s390/kernel/compat_linux.c:1598:
+		case 3: s32.sig[5] = (s.sig[2] >> 32); s32.sig[4] = s.sig[2];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1634: FILE: arch/s390/kernel/compat_linux.c:1599:
+		case 2: s32.sig[3] = (s.sig[1] >> 32); s32.sig[2] = s.sig[1];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1635: FILE: arch/s390/kernel/compat_linux.c:1600:
+		case 1: s32.sig[1] = (s.sig[0] >> 32); s32.sig[0] = s.sig[0];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1637: FILE: arch/s390/kernel/compat_linux.c:1602:
+		if (copy_to_user (oset, &s32, sizeof(compat_sigset_t)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: arch/s390/kernel/compat_linux.c:1616:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1652: FILE: arch/s390/kernel/compat_linux.c:1617:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1654: FILE: arch/s390/kernel/compat_linux.c:1619:
+	set_fs (old_fs);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1657: FILE: arch/s390/kernel/compat_linux.c:1622:
+		case 4: s32.sig[7] = (s.sig[3] >> 32); s32.sig[6] = s.sig[3];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1658: FILE: arch/s390/kernel/compat_linux.c:1623:
+		case 3: s32.sig[5] = (s.sig[2] >> 32); s32.sig[4] = s.sig[2];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1659: FILE: arch/s390/kernel/compat_linux.c:1624:
+		case 2: s32.sig[3] = (s.sig[1] >> 32); s32.sig[2] = s.sig[1];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1660: FILE: arch/s390/kernel/compat_linux.c:1625:
+		case 1: s32.sig[1] = (s.sig[0] >> 32); s32.sig[0] = s.sig[0];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1662: FILE: arch/s390/kernel/compat_linux.c:1627:
+		if (copy_to_user (set, &s32, sizeof(compat_sigset_t)))

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1669: FILE: arch/s390/kernel/compat_linux.c:1634:
+copy_siginfo_to_user32(siginfo_t32 *to, siginfo_t *from);
                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1686: FILE: arch/s390/kernel/compat_linux.c:1651:
+	if (copy_from_user (&these32, uthese, sizeof(compat_sigset_t)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1690: FILE: arch/s390/kernel/compat_linux.c:1655:
+	case 4: these.sig[3] = these32.sig[6] | (((long)these32.sig[7]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1691: FILE: arch/s390/kernel/compat_linux.c:1656:
+	case 3: these.sig[2] = these32.sig[4] | (((long)these32.sig[5]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1692: FILE: arch/s390/kernel/compat_linux.c:1657:
+	case 2: these.sig[1] = these32.sig[2] | (((long)these32.sig[3]) << 32);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1693: FILE: arch/s390/kernel/compat_linux.c:1658:
+	case 1: these.sig[0] = these32.sig[0] | (((long)these32.sig[1]) << 32);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1695: FILE: arch/s390/kernel/compat_linux.c:1660:
+^I^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1700: FILE: arch/s390/kernel/compat_linux.c:1665:
+	sigdelsetmask(&these, sigmask(SIGKILL)|sigmask(SIGSTOP));
 	                                      ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1707: FILE: arch/s390/kernel/compat_linux.c:1672:
+		if (ts.tv_nsec >= 1000000000L || ts.tv_nsec < 0
+		    || ts.tv_sec < 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1715: FILE: arch/s390/kernel/compat_linux.c:1680:
+		/* None ready -- temporarily unblock those we're interested
+		   in so that we'll be awakened when they arrive.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1715: FILE: arch/s390/kernel/compat_linux.c:1680:
+		   in so that we'll be awakened when they arrive.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1761: FILE: arch/s390/kernel/compat_linux.c:1726:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1762: FILE: arch/s390/kernel/compat_linux.c:1727:
+	if (copy_from_user (&info, uinfo, 3*sizeof(int)) ||

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1762: FILE: arch/s390/kernel/compat_linux.c:1727:
+	if (copy_from_user (&info, uinfo, 3*sizeof(int)) ||
 	                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1763: FILE: arch/s390/kernel/compat_linux.c:1728:
+	    copy_from_user (info._sifields._pad, uinfo->_sifields._pad, SI_PAD_SIZE))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1765: FILE: arch/s390/kernel/compat_linux.c:1730:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1767: FILE: arch/s390/kernel/compat_linux.c:1732:
+	set_fs (old_fs);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1773: FILE: arch/s390/kernel/compat_linux.c:1738:
+#define RESOURCE32_OLD(x)	((x > RLIM_OLD_INFINITY32) ? RLIM_OLD_INFINITY32 : x)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1773: FILE: arch/s390/kernel/compat_linux.c:1738:
+#define RESOURCE32_OLD(x)	((x > RLIM_OLD_INFINITY32) ? RLIM_OLD_INFINITY32 : x)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1774: FILE: arch/s390/kernel/compat_linux.c:1739:
+#define RESOURCE32(x) ^I^I((x > RLIM_INFINITY32) ? RLIM_INFINITY32 : x)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1774: FILE: arch/s390/kernel/compat_linux.c:1739:
+#define RESOURCE32(x) 		((x > RLIM_INFINITY32) ? RLIM_INFINITY32 : x)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1774: FILE: arch/s390/kernel/compat_linux.c:1739:
+#define RESOURCE32(x) 		((x > RLIM_INFINITY32) ? RLIM_INFINITY32 : x)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1781: FILE: arch/s390/kernel/compat_linux.c:1746:
+extern asmlinkage long sys_getrlimit(unsigned int resource, struct rlimit *rlim);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1787: FILE: arch/s390/kernel/compat_linux.c:1752:
+	mm_segment_t old_fs = get_fs ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1788: FILE: arch/s390/kernel/compat_linux.c:1753:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1789: FILE: arch/s390/kernel/compat_linux.c:1754:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1791: FILE: arch/s390/kernel/compat_linux.c:1756:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1793: FILE: arch/s390/kernel/compat_linux.c:1758:
+		ret = put_user (RESOURCE32_OLD(r.rlim_cur), &rlim->rlim_cur);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1794: FILE: arch/s390/kernel/compat_linux.c:1759:
+		ret |= __put_user (RESOURCE32_OLD(r.rlim_max), &rlim->rlim_max);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1803: FILE: arch/s390/kernel/compat_linux.c:1768:
+	mm_segment_t old_fs = get_fs ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1804: FILE: arch/s390/kernel/compat_linux.c:1769:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1805: FILE: arch/s390/kernel/compat_linux.c:1770:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1807: FILE: arch/s390/kernel/compat_linux.c:1772:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1809: FILE: arch/s390/kernel/compat_linux.c:1774:
+		ret = put_user (RESOURCE32(r.rlim_cur), &rlim->rlim_cur);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1810: FILE: arch/s390/kernel/compat_linux.c:1775:
+		ret |= __put_user (RESOURCE32(r.rlim_max), &rlim->rlim_max);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1821: FILE: arch/s390/kernel/compat_linux.c:1786:
+	mm_segment_t old_fs = get_fs ();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1823: FILE: arch/s390/kernel/compat_linux.c:1788:
+^Iif (resource >= RLIM_NLIMITS) return -EINVAL;^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1823: FILE: arch/s390/kernel/compat_linux.c:1788:
+	if (resource >= RLIM_NLIMITS) return -EINVAL;	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1824: FILE: arch/s390/kernel/compat_linux.c:1789:
+	if (get_user (r.rlim_cur, &rlim->rlim_cur) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1825: FILE: arch/s390/kernel/compat_linux.c:1790:
+	    __get_user (r.rlim_max, &rlim->rlim_max))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1831: FILE: arch/s390/kernel/compat_linux.c:1796:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1833: FILE: arch/s390/kernel/compat_linux.c:1798:
+	set_fs (old_fs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1844: FILE: arch/s390/kernel/compat_linux.c:1809:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1845: FILE: arch/s390/kernel/compat_linux.c:1810:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1847: FILE: arch/s390/kernel/compat_linux.c:1812:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1848: FILE: arch/s390/kernel/compat_linux.c:1813:
+	if (put_rusage (ru, &r)) return -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1848: FILE: arch/s390/kernel/compat_linux.c:1813:
+	if (put_rusage (ru, &r)) return -EFAULT;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1857: FILE: arch/s390/kernel/compat_linux.c:1822:
+static int count32(u32 * argv)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "argv"
#1861: FILE: arch/s390/kernel/compat_linux.c:1826:
+	if (argv != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1865: FILE: arch/s390/kernel/compat_linux.c:1830:
+			error = get_user(p,argv);
 			                  ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1866: FILE: arch/s390/kernel/compat_linux.c:1831:
+			if (error) return error;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1867: FILE: arch/s390/kernel/compat_linux.c:1832:
+			if (!p) break;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1879: FILE: arch/s390/kernel/compat_linux.c:1844:
+static int copy_strings32(int argc, u32 * argv, struct linux_binprm *bprm)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1886: FILE: arch/s390/kernel/compat_linux.c:1851:
+		if (get_user(str, argv + argc) ||

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1920: FILE: arch/s390/kernel/compat_linux.c:1885:
+					memset(kaddr+offset+len, 0,
 					            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1920: FILE: arch/s390/kernel/compat_linux.c:1885:
+					memset(kaddr+offset+len, 0,
 					                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: arch/s390/kernel/compat_linux.c:1886:
+					       PAGE_SIZE-offset-len);
 					                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: arch/s390/kernel/compat_linux.c:1886:
+					       PAGE_SIZE-offset-len);
 					                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1942: FILE: arch/s390/kernel/compat_linux.c:1907:
+static inline int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1943: FILE: arch/s390/kernel/compat_linux.c:1908:
+do_execve32(char * filename, u32 * argv, u32 * envp, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1943: FILE: arch/s390/kernel/compat_linux.c:1908:
+do_execve32(char * filename, u32 * argv, u32 * envp, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1943: FILE: arch/s390/kernel/compat_linux.c:1908:
+do_execve32(char * filename, u32 * argv, u32 * envp, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1943: FILE: arch/s390/kernel/compat_linux.c:1908:
+do_execve32(char * filename, u32 * argv, u32 * envp, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1946: FILE: arch/s390/kernel/compat_linux.c:1911:
+	struct file * file;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1958: FILE: arch/s390/kernel/compat_linux.c:1923:
+	bprm.p = PAGE_SIZE*MAX_ARG_PAGES-sizeof(void *);
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1958: FILE: arch/s390/kernel/compat_linux.c:1923:
+	bprm.p = PAGE_SIZE*MAX_ARG_PAGES-sizeof(void *);
 	                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1974: FILE: arch/s390/kernel/compat_linux.c:1939:
+	if ((retval = bprm.argc) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1978: FILE: arch/s390/kernel/compat_linux.c:1943:
+	if ((retval = bprm.envc) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1988: FILE: arch/s390/kernel/compat_linux.c:1953:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2011: FILE: arch/s390/kernel/compat_linux.c:1976:
+	for (i=0 ; i<MAX_ARG_PAGES ; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2011: FILE: arch/s390/kernel/compat_linux.c:1976:
+	for (i=0 ; i<MAX_ARG_PAGES ; i++) {
 	            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2012: FILE: arch/s390/kernel/compat_linux.c:1977:
+		struct page * page = bprm.page[i];

WARNING:LINE_SPACING: Missing a blank line after declarations
#2013: FILE: arch/s390/kernel/compat_linux.c:1978:
+		struct page * page = bprm.page[i];
+		if (page)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2039: FILE: arch/s390/kernel/compat_linux.c:2004:
+        int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2039: FILE: arch/s390/kernel/compat_linux.c:2004:
+        int error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2040: FILE: arch/s390/kernel/compat_linux.c:2005:
+        char * filename;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2040: FILE: arch/s390/kernel/compat_linux.c:2005:
+        char * filename;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2040: FILE: arch/s390/kernel/compat_linux.c:2005:
+        char * filename;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2042: FILE: arch/s390/kernel/compat_linux.c:2007:
+        filename = getname((char *)A(regs.orig_gpr2));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2042: FILE: arch/s390/kernel/compat_linux.c:2007:
+        filename = getname((char *)A(regs.orig_gpr2));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2043: FILE: arch/s390/kernel/compat_linux.c:2008:
+        error = PTR_ERR(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2043: FILE: arch/s390/kernel/compat_linux.c:2008:
+        error = PTR_ERR(filename);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2044: FILE: arch/s390/kernel/compat_linux.c:2009:
+        if (IS_ERR(filename))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2044: FILE: arch/s390/kernel/compat_linux.c:2009:
+        if (IS_ERR(filename))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2045: FILE: arch/s390/kernel/compat_linux.c:2010:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2045: FILE: arch/s390/kernel/compat_linux.c:2010:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2046: FILE: arch/s390/kernel/compat_linux.c:2011:
+        error = do_execve32(filename, (u32 *)A(regs.gprs[3]), (u32 *)A(regs.gprs[4]), &regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2046: FILE: arch/s390/kernel/compat_linux.c:2011:
+        error = do_execve32(filename, (u32 *)A(regs.gprs[3]), (u32 *)A(regs.gprs[4]), &regs);$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2047: FILE: arch/s390/kernel/compat_linux.c:2012:
+	if (error == 0)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2050: FILE: arch/s390/kernel/compat_linux.c:2015:
+		current->thread.fp_regs.fpc=0;
 		                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2052: FILE: arch/s390/kernel/compat_linux.c:2017:
+^I^I        ("sr  0,0\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2053: FILE: arch/s390/kernel/compat_linux.c:2018:
+^I^I         "sfpc 0,0\n\t"$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2054: FILE: arch/s390/kernel/compat_linux.c:2019:
+			 : : :"0");
 			     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2056: FILE: arch/s390/kernel/compat_linux.c:2021:
+        putname(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2056: FILE: arch/s390/kernel/compat_linux.c:2021:
+        putname(filename);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2058: FILE: arch/s390/kernel/compat_linux.c:2023:
+        return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2058: FILE: arch/s390/kernel/compat_linux.c:2023:
+        return error;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2061: FILE: arch/s390/kernel/compat_linux.c:2026:
+
+

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2093: FILE: arch/s390/kernel/compat_linux.c:2058:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2099: FILE: arch/s390/kernel/compat_linux.c:2064:
+	return -ENOSYS;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2111: FILE: arch/s390/kernel/compat_linux.c:2076:
+	s8			cl32_ident[NFSCLNT_IDMAX+1];
 	  			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2120: FILE: arch/s390/kernel/compat_linux.c:2085:
+	s8			ex32_client[NFSCLNT_IDMAX+1];
 	  			                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2121: FILE: arch/s390/kernel/compat_linux.c:2086:
+	s8			ex32_path[NFS_MAXPATHLEN+1];
 	  			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2131: FILE: arch/s390/kernel/compat_linux.c:2096:
+	s8			gd32_path[NFS_MAXPATHLEN+1];
 	  			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2137: FILE: arch/s390/kernel/compat_linux.c:2102:
+	s8			gd32_path[NFS_MAXPATHLEN+1];
 	  			                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2166: FILE: arch/s390/kernel/compat_linux.c:2131:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2176: FILE: arch/s390/kernel/compat_linux.c:2141:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2198: FILE: arch/s390/kernel/compat_linux.c:2163:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2224: FILE: arch/s390/kernel/compat_linux.c:2189:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2231: FILE: arch/s390/kernel/compat_linux.c:2196:
+			  (NFS_MAXPATHLEN+1));
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2240: FILE: arch/s390/kernel/compat_linux.c:2205:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2247: FILE: arch/s390/kernel/compat_linux.c:2212:
+			  (NFS_MAXPATHLEN+1));
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2262: FILE: arch/s390/kernel/compat_linux.c:2227:
+asmlinkage long sys_ni_syscall(void); $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2262: FILE: arch/s390/kernel/compat_linux.c:2227:
+/*
+asmlinkage long sys_ni_syscall(void); 

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'int'
#2265: FILE: arch/s390/kernel/compat_linux.c:2230:
+int asmlinkage sys32_nfsservctl(int cmd, struct nfsctl_arg32 *arg32, union nfsctl_res32 *res32)

ERROR:SPACING: space required before the open parenthesis '('
#2273: FILE: arch/s390/kernel/compat_linux.c:2238:
+	if(!karg)

ERROR:SPACING: space required before the open parenthesis '('
#2275: FILE: arch/s390/kernel/compat_linux.c:2240:
+	if(res32) {

ERROR:SPACING: space required before the open parenthesis '('
#2277: FILE: arch/s390/kernel/compat_linux.c:2242:
+		if(!kres) {

ERROR:SPACING: space required before the open parenthesis '('
#2282: FILE: arch/s390/kernel/compat_linux.c:2247:
+	switch(cmd) {

ERROR:SPACING: space required before the open parenthesis '('
#2306: FILE: arch/s390/kernel/compat_linux.c:2271:
+	if(err)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == NFSCTL_GETFD'
#2316: FILE: arch/s390/kernel/compat_linux.c:2281:
+	if((cmd == NFSCTL_GETFD) ||
+	   (cmd == NFSCTL_GETFS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == NFSCTL_GETFS'
#2316: FILE: arch/s390/kernel/compat_linux.c:2281:
+	if((cmd == NFSCTL_GETFD) ||
+	   (cmd == NFSCTL_GETFS))

ERROR:SPACING: space required before the open parenthesis '('
#2316: FILE: arch/s390/kernel/compat_linux.c:2281:
+	if((cmd == NFSCTL_GETFD) ||

ERROR:SPACING: space required before the open parenthesis '('
#2321: FILE: arch/s390/kernel/compat_linux.c:2286:
+	if(karg)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2322: FILE: arch/s390/kernel/compat_linux.c:2287:
+	if(karg)
+		kfree(karg);

ERROR:SPACING: space required before the open parenthesis '('
#2323: FILE: arch/s390/kernel/compat_linux.c:2288:
+	if(kres)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2324: FILE: arch/s390/kernel/compat_linux.c:2289:
+	if(kres)
+		kfree(kres);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2329: FILE: arch/s390/kernel/compat_linux.c:2294:
+/* Translations due to time_t size differences.  Which affects all
+   sorts of things, like timeval and itimerval.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2329: FILE: arch/s390/kernel/compat_linux.c:2294:
+   sorts of things, like timeval and itimerval.  */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2332: FILE: arch/s390/kernel/compat_linux.c:2297:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2338: FILE: arch/s390/kernel/compat_linux.c:2303:
+		struct timeval ktv;
+		do_gettimeofday(&ktv);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2354: FILE: arch/s390/kernel/compat_linux.c:2319:
+ ^Iif (tv) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2354: FILE: arch/s390/kernel/compat_linux.c:2319:
+ ^Iif (tv) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2354: FILE: arch/s390/kernel/compat_linux.c:2319:
+ ^Iif (tv) {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2380: FILE: arch/s390/kernel/compat_linux.c:2345:
+			    get_tv32(&ktvs[1], 1+tvs))
 			                        ^

CHECK:SPACING: No space is necessary after a cast
#2408: FILE: arch/s390/kernel/compat_linux.c:2373:
+			 (unsigned long) arg2,

CHECK:SPACING: No space is necessary after a cast
#2409: FILE: arch/s390/kernel/compat_linux.c:2374:
+			 (unsigned long) arg3,

CHECK:SPACING: No space is necessary after a cast
#2410: FILE: arch/s390/kernel/compat_linux.c:2375:
+			 (unsigned long) arg4,

CHECK:SPACING: No space is necessary after a cast
#2411: FILE: arch/s390/kernel/compat_linux.c:2376:
+			 (unsigned long) arg5);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2414: FILE: arch/s390/kernel/compat_linux.c:2379:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2415: FILE: arch/s390/kernel/compat_linux.c:2380:
+extern asmlinkage ssize_t sys_pread64(unsigned int fd, char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2418: FILE: arch/s390/kernel/compat_linux.c:2383:
+extern asmlinkage ssize_t sys_pwrite64(unsigned int fd, const char * buf,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2418: FILE: arch/s390/kernel/compat_linux.c:2383:
+extern asmlinkage ssize_t sys_pwrite64(unsigned int fd, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2422: FILE: arch/s390/kernel/compat_linux.c:2387:
+asmlinkage compat_ssize_t sys32_pread64(unsigned int fd, char *ubuf,
+				 compat_size_t count, u32 poshi, u32 poslo)

CHECK:SPACING: No space is necessary after a cast
#2424: FILE: arch/s390/kernel/compat_linux.c:2389:
+	if ((compat_ssize_t) count < 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2430: FILE: arch/s390/kernel/compat_linux.c:2395:
+asmlinkage compat_ssize_t sys32_pwrite64(unsigned int fd, char *ubuf,
+				  compat_size_t count, u32 poshi, u32 poslo)

CHECK:SPACING: No space is necessary after a cast
#2432: FILE: arch/s390/kernel/compat_linux.c:2397:
+	if ((compat_ssize_t) count < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2451: FILE: arch/s390/kernel/compat_linux.c:2416:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2454: FILE: arch/s390/kernel/compat_linux.c:2419:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2458: FILE: arch/s390/kernel/compat_linux.c:2423:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2461: FILE: arch/s390/kernel/compat_linux.c:2426:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2465: FILE: arch/s390/kernel/compat_linux.c:2430:
+extern asmlinkage ssize_t sys_sendfile64(int out_fd, int in_fd, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2468: FILE: arch/s390/kernel/compat_linux.c:2433:
+asmlinkage int sys32_sendfile64(int out_fd, int in_fd, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2474: FILE: arch/s390/kernel/compat_linux.c:2439:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2477: FILE: arch/s390/kernel/compat_linux.c:2442:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2481: FILE: arch/s390/kernel/compat_linux.c:2446:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2484: FILE: arch/s390/kernel/compat_linux.c:2449:
+^I^I$

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2498: FILE: arch/s390/kernel/compat_linux.c:2463:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2498: FILE: arch/s390/kernel/compat_linux.c:2463:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	               ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2498: FILE: arch/s390/kernel/compat_linux.c:2463:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                         ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2498: FILE: arch/s390/kernel/compat_linux.c:2463:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                                   ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2499: FILE: arch/s390/kernel/compat_linux.c:2464:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2499: FILE: arch/s390/kernel/compat_linux.c:2464:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	               ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2499: FILE: arch/s390/kernel/compat_linux.c:2464:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                         ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2499: FILE: arch/s390/kernel/compat_linux.c:2464:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                                   ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2500: FILE: arch/s390/kernel/compat_linux.c:2465:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2500: FILE: arch/s390/kernel/compat_linux.c:2465:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	               ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2500: FILE: arch/s390/kernel/compat_linux.c:2465:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                         ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#2500: FILE: arch/s390/kernel/compat_linux.c:2465:
+	s32  :32; s32  :32; s32  :32; s32  :32;
 	                                   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2503: FILE: arch/s390/kernel/compat_linux.c:2468:
+extern int do_adjtimex(struct timex *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timex *' should also have an identifier name
#2503: FILE: arch/s390/kernel/compat_linux.c:2468:
+extern int do_adjtimex(struct timex *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required before the open parenthesis '('
#2512: FILE: arch/s390/kernel/compat_linux.c:2477:
+	if(get_user(txc.modes, &utp->modes) ||

ERROR:SPACING: space required before the open parenthesis '('
#2536: FILE: arch/s390/kernel/compat_linux.c:2501:
+	if(put_user(txc.modes, &utp->modes) ||

CHECK:SPACING: No space is necessary after a cast
#2565: FILE: arch/s390/kernel/compat_linux.c:2530:
+	return sys_setpriority((int) which,

CHECK:SPACING: No space is necessary after a cast
#2566: FILE: arch/s390/kernel/compat_linux.c:2531:
+			       (int) who,

CHECK:SPACING: No space is necessary after a cast
#2567: FILE: arch/s390/kernel/compat_linux.c:2532:
+			       (int) niceval);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2580: FILE: arch/s390/kernel/compat_linux.c:2545:
+extern asmlinkage long sys32_sysctl(struct __sysctl_args32 *args)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2592: FILE: arch/s390/kernel/compat_linux.c:2557:
+		/* Duh, this is ugly and might not work if sysctl_args
+		   is in read-only memory, but do_sysctl does indirectly

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2596: FILE: arch/s390/kernel/compat_linux.c:2561:
+		   anyway.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2643: FILE: arch/s390/kernel/compat_linux.c:2608:
+};^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2646: FILE: arch/s390/kernel/compat_linux.c:2611:
+putstat64 (struct stat64_emu31 *ubuf, struct stat *kbuf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2648: FILE: arch/s390/kernel/compat_linux.c:2613:
+    struct stat64_emu31 tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2649: FILE: arch/s390/kernel/compat_linux.c:2614:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2649: FILE: arch/s390/kernel/compat_linux.c:2614:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2650: FILE: arch/s390/kernel/compat_linux.c:2615:
+    memset(&tmp, 0, sizeof(tmp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2652: FILE: arch/s390/kernel/compat_linux.c:2617:
+    tmp.st_dev = (unsigned short)kbuf->st_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2653: FILE: arch/s390/kernel/compat_linux.c:2618:
+    tmp.st_ino = kbuf->st_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2654: FILE: arch/s390/kernel/compat_linux.c:2619:
+    tmp.__st_ino = (u32)kbuf->st_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2655: FILE: arch/s390/kernel/compat_linux.c:2620:
+    tmp.st_mode = kbuf->st_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2656: FILE: arch/s390/kernel/compat_linux.c:2621:
+    tmp.st_nlink = (unsigned int)kbuf->st_nlink;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2657: FILE: arch/s390/kernel/compat_linux.c:2622:
+    tmp.st_uid = kbuf->st_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2658: FILE: arch/s390/kernel/compat_linux.c:2623:
+    tmp.st_gid = kbuf->st_gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2659: FILE: arch/s390/kernel/compat_linux.c:2624:
+    tmp.st_rdev = (unsigned short)kbuf->st_rdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2660: FILE: arch/s390/kernel/compat_linux.c:2625:
+    tmp.st_size = kbuf->st_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2661: FILE: arch/s390/kernel/compat_linux.c:2626:
+    tmp.st_blksize = (u32)kbuf->st_blksize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2662: FILE: arch/s390/kernel/compat_linux.c:2627:
+    tmp.st_blocks = (u32)kbuf->st_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2663: FILE: arch/s390/kernel/compat_linux.c:2628:
+    tmp.st_atime = (u32)kbuf->st_atime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2664: FILE: arch/s390/kernel/compat_linux.c:2629:
+    tmp.st_mtime = (u32)kbuf->st_mtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2665: FILE: arch/s390/kernel/compat_linux.c:2630:
+    tmp.st_ctime = (u32)kbuf->st_ctime;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2667: FILE: arch/s390/kernel/compat_linux.c:2632:
+    return copy_to_user(ubuf,&tmp,sizeof(tmp)) ? -EFAULT : 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2667: FILE: arch/s390/kernel/compat_linux.c:2632:
+    return copy_to_user(ubuf,&tmp,sizeof(tmp)) ? -EFAULT : 0; $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2667: FILE: arch/s390/kernel/compat_linux.c:2632:
+    return copy_to_user(ubuf,&tmp,sizeof(tmp)) ? -EFAULT : 0; 
                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2667: FILE: arch/s390/kernel/compat_linux.c:2632:
+    return copy_to_user(ubuf,&tmp,sizeof(tmp)) ? -EFAULT : 0; 
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2667: FILE: arch/s390/kernel/compat_linux.c:2632:
+    return copy_to_user(ubuf,&tmp,sizeof(tmp)) ? -EFAULT : 0; 
                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2670: FILE: arch/s390/kernel/compat_linux.c:2635:
+extern asmlinkage long sys_newstat(char * filename, struct stat * statbuf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2670: FILE: arch/s390/kernel/compat_linux.c:2635:
+extern asmlinkage long sys_newstat(char * filename, struct stat * statbuf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2672: FILE: arch/s390/kernel/compat_linux.c:2637:
+asmlinkage long sys32_stat64(char * filename, struct stat64_emu31 * statbuf, long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2672: FILE: arch/s390/kernel/compat_linux.c:2637:
+asmlinkage long sys32_stat64(char * filename, struct stat64_emu31 * statbuf, long flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2674: FILE: arch/s390/kernel/compat_linux.c:2639:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2675: FILE: arch/s390/kernel/compat_linux.c:2640:
+    struct stat s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2676: FILE: arch/s390/kernel/compat_linux.c:2641:
+    char * tmp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2676: FILE: arch/s390/kernel/compat_linux.c:2641:
+    char * tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2677: FILE: arch/s390/kernel/compat_linux.c:2642:
+    int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2678: FILE: arch/s390/kernel/compat_linux.c:2643:
+    mm_segment_t old_fs = get_fs();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2679: FILE: arch/s390/kernel/compat_linux.c:2644:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2679: FILE: arch/s390/kernel/compat_linux.c:2644:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2680: FILE: arch/s390/kernel/compat_linux.c:2645:
+    tmp = getname(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2681: FILE: arch/s390/kernel/compat_linux.c:2646:
+    err = PTR_ERR(tmp);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2682: FILE: arch/s390/kernel/compat_linux.c:2647:
+    if (IS_ERR(tmp))   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2682: FILE: arch/s390/kernel/compat_linux.c:2647:
+    if (IS_ERR(tmp))   $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2682: FILE: arch/s390/kernel/compat_linux.c:2647:
+    if (IS_ERR(tmp))   
+	    return err;

WARNING:TABSTOP: Statements should start on a tabstop
#2683: FILE: arch/s390/kernel/compat_linux.c:2648:
+	    return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2685: FILE: arch/s390/kernel/compat_linux.c:2650:
+    set_fs (KERNEL_DS);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2685: FILE: arch/s390/kernel/compat_linux.c:2650:
+    set_fs (KERNEL_DS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2686: FILE: arch/s390/kernel/compat_linux.c:2651:
+    ret = sys_newstat(tmp, &s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2687: FILE: arch/s390/kernel/compat_linux.c:2652:
+    set_fs (old_fs);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2687: FILE: arch/s390/kernel/compat_linux.c:2652:
+    set_fs (old_fs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2688: FILE: arch/s390/kernel/compat_linux.c:2653:
+    putname(tmp);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2689: FILE: arch/s390/kernel/compat_linux.c:2654:
+    if (putstat64 (statbuf, &s)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2689: FILE: arch/s390/kernel/compat_linux.c:2654:
+    if (putstat64 (statbuf, &s)) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2689: FILE: arch/s390/kernel/compat_linux.c:2654:
+    if (putstat64 (statbuf, &s)) 
+	    return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2689: FILE: arch/s390/kernel/compat_linux.c:2654:
+    if (putstat64 (statbuf, &s)) 

WARNING:TABSTOP: Statements should start on a tabstop
#2690: FILE: arch/s390/kernel/compat_linux.c:2655:
+	    return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2691: FILE: arch/s390/kernel/compat_linux.c:2656:
+    return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2694: FILE: arch/s390/kernel/compat_linux.c:2659:
+extern asmlinkage long sys_newlstat(char * filename, struct stat * statbuf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2694: FILE: arch/s390/kernel/compat_linux.c:2659:
+extern asmlinkage long sys_newlstat(char * filename, struct stat * statbuf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2696: FILE: arch/s390/kernel/compat_linux.c:2661:
+asmlinkage long sys32_lstat64(char * filename, struct stat64_emu31 * statbuf, long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2696: FILE: arch/s390/kernel/compat_linux.c:2661:
+asmlinkage long sys32_lstat64(char * filename, struct stat64_emu31 * statbuf, long flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2698: FILE: arch/s390/kernel/compat_linux.c:2663:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2699: FILE: arch/s390/kernel/compat_linux.c:2664:
+    struct stat s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2700: FILE: arch/s390/kernel/compat_linux.c:2665:
+    char * tmp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2700: FILE: arch/s390/kernel/compat_linux.c:2665:
+    char * tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2701: FILE: arch/s390/kernel/compat_linux.c:2666:
+    int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2702: FILE: arch/s390/kernel/compat_linux.c:2667:
+    mm_segment_t old_fs = get_fs();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2703: FILE: arch/s390/kernel/compat_linux.c:2668:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2703: FILE: arch/s390/kernel/compat_linux.c:2668:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2704: FILE: arch/s390/kernel/compat_linux.c:2669:
+    tmp = getname(filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2705: FILE: arch/s390/kernel/compat_linux.c:2670:
+    err = PTR_ERR(tmp);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2706: FILE: arch/s390/kernel/compat_linux.c:2671:
+    if (IS_ERR(tmp))   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2706: FILE: arch/s390/kernel/compat_linux.c:2671:
+    if (IS_ERR(tmp))   $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2706: FILE: arch/s390/kernel/compat_linux.c:2671:
+    if (IS_ERR(tmp))   
+	    return err;

WARNING:TABSTOP: Statements should start on a tabstop
#2707: FILE: arch/s390/kernel/compat_linux.c:2672:
+	    return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2709: FILE: arch/s390/kernel/compat_linux.c:2674:
+    set_fs (KERNEL_DS);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2709: FILE: arch/s390/kernel/compat_linux.c:2674:
+    set_fs (KERNEL_DS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2710: FILE: arch/s390/kernel/compat_linux.c:2675:
+    ret = sys_newlstat(tmp, &s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2711: FILE: arch/s390/kernel/compat_linux.c:2676:
+    set_fs (old_fs);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2711: FILE: arch/s390/kernel/compat_linux.c:2676:
+    set_fs (old_fs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2712: FILE: arch/s390/kernel/compat_linux.c:2677:
+    putname(tmp);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2713: FILE: arch/s390/kernel/compat_linux.c:2678:
+    if (putstat64 (statbuf, &s)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2713: FILE: arch/s390/kernel/compat_linux.c:2678:
+    if (putstat64 (statbuf, &s)) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2713: FILE: arch/s390/kernel/compat_linux.c:2678:
+    if (putstat64 (statbuf, &s)) 
+	    return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2713: FILE: arch/s390/kernel/compat_linux.c:2678:
+    if (putstat64 (statbuf, &s)) 

WARNING:TABSTOP: Statements should start on a tabstop
#2714: FILE: arch/s390/kernel/compat_linux.c:2679:
+	    return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2715: FILE: arch/s390/kernel/compat_linux.c:2680:
+    return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2718: FILE: arch/s390/kernel/compat_linux.c:2683:
+extern asmlinkage long sys_newfstat(unsigned int fd, struct stat * statbuf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2720: FILE: arch/s390/kernel/compat_linux.c:2685:
+asmlinkage long sys32_fstat64(unsigned long fd, struct stat64_emu31 * statbuf, long flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2722: FILE: arch/s390/kernel/compat_linux.c:2687:
+    int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2723: FILE: arch/s390/kernel/compat_linux.c:2688:
+    struct stat s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2724: FILE: arch/s390/kernel/compat_linux.c:2689:
+    mm_segment_t old_fs = get_fs();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2725: FILE: arch/s390/kernel/compat_linux.c:2690:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2725: FILE: arch/s390/kernel/compat_linux.c:2690:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2726: FILE: arch/s390/kernel/compat_linux.c:2691:
+    set_fs (KERNEL_DS);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2726: FILE: arch/s390/kernel/compat_linux.c:2691:
+    set_fs (KERNEL_DS);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2727: FILE: arch/s390/kernel/compat_linux.c:2692:
+    ret = sys_newfstat(fd, &s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2728: FILE: arch/s390/kernel/compat_linux.c:2693:
+    set_fs (old_fs);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2728: FILE: arch/s390/kernel/compat_linux.c:2693:
+    set_fs (old_fs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2729: FILE: arch/s390/kernel/compat_linux.c:2694:
+    if (putstat64 (statbuf, &s))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2729: FILE: arch/s390/kernel/compat_linux.c:2694:
+    if (putstat64 (statbuf, &s))
+	    return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2729: FILE: arch/s390/kernel/compat_linux.c:2694:
+    if (putstat64 (statbuf, &s))

WARNING:TABSTOP: Statements should start on a tabstop
#2730: FILE: arch/s390/kernel/compat_linux.c:2695:
+	    return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2731: FILE: arch/s390/kernel/compat_linux.c:2696:
+    return ret;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2750: FILE: arch/s390/kernel/compat_linux.c:2715:
+static inline long do_mmap2(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2755: FILE: arch/s390/kernel/compat_linux.c:2720:
+	struct file * file = NULL;

CHECK:SPACING: No space is necessary after a cast
#2767: FILE: arch/s390/kernel/compat_linux.c:2732:
+	if (!IS_ERR((void *) error) && error + len >= 0x80000000ULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2776: FILE: arch/s390/kernel/compat_linux.c:2741:
+out:    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2780: FILE: arch/s390/kernel/compat_linux.c:2745:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2794: FILE: arch/s390/kernel/compat_linux.c:2759:
+^Ierror = do_mmap2(a.addr, a.len, a.prot, a.flags, a.fd, a.offset >> PAGE_SHIFT); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2799: FILE: arch/s390/kernel/compat_linux.c:2764:
+asmlinkage long $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2862: FILE: arch/s390/kernel/compat_linux.c:2827:
+asmlinkage ssize_t sys_read(unsigned int fd, char * buf, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2864: FILE: arch/s390/kernel/compat_linux.c:2829:
+asmlinkage compat_ssize_t sys32_read(unsigned int fd, char * buf, size_t count)

CHECK:SPACING: No space is necessary after a cast
#2866: FILE: arch/s390/kernel/compat_linux.c:2831:
+	if ((compat_ssize_t) count < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2867: FILE: arch/s390/kernel/compat_linux.c:2832:
+^I^Ireturn -EINVAL; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2872: FILE: arch/s390/kernel/compat_linux.c:2837:
+asmlinkage ssize_t sys_write(unsigned int fd, const char * buf, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2874: FILE: arch/s390/kernel/compat_linux.c:2839:
+asmlinkage compat_ssize_t sys32_write(unsigned int fd, char * buf, size_t count)

CHECK:SPACING: No space is necessary after a cast
#2876: FILE: arch/s390/kernel/compat_linux.c:2841:
+	if ((compat_ssize_t) count < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2877: FILE: arch/s390/kernel/compat_linux.c:2842:
+^I^Ireturn -EINVAL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2884: FILE: arch/s390/kernel/compat_linux.c:2849:
+        unsigned long clone_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2884: FILE: arch/s390/kernel/compat_linux.c:2849:
+        unsigned long clone_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2885: FILE: arch/s390/kernel/compat_linux.c:2850:
+        unsigned long newsp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2885: FILE: arch/s390/kernel/compat_linux.c:2850:
+        unsigned long newsp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2889: FILE: arch/s390/kernel/compat_linux.c:2854:
+        clone_flags = regs.gprs[3] & 0xffffffffUL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2889: FILE: arch/s390/kernel/compat_linux.c:2854:
+        clone_flags = regs.gprs[3] & 0xffffffffUL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2890: FILE: arch/s390/kernel/compat_linux.c:2855:
+        newsp = regs.orig_gpr2 & 0x7fffffffUL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2890: FILE: arch/s390/kernel/compat_linux.c:2855:
+        newsp = regs.orig_gpr2 & 0x7fffffffUL;$

CHECK:SPACING: No space is necessary after a cast
#2891: FILE: arch/s390/kernel/compat_linux.c:2856:
+	parent_tidptr = (int *) (regs.gprs[4] & 0x7fffffffUL);

CHECK:SPACING: No space is necessary after a cast
#2892: FILE: arch/s390/kernel/compat_linux.c:2857:
+	child_tidptr = (int *) (regs.gprs[5] & 0x7fffffffUL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2893: FILE: arch/s390/kernel/compat_linux.c:2858:
+        if (!newsp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2893: FILE: arch/s390/kernel/compat_linux.c:2858:
+        if (!newsp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2894: FILE: arch/s390/kernel/compat_linux.c:2859:
+                newsp = regs.gprs[15];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2894: FILE: arch/s390/kernel/compat_linux.c:2859:
+                newsp = regs.gprs[15];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2895: FILE: arch/s390/kernel/compat_linux.c:2860:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2895: FILE: arch/s390/kernel/compat_linux.c:2860:
+        p = do_fork(clone_flags & ~CLONE_IDLETASK, newsp, &regs, 0,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2903: FILE: arch/s390/kernel/compat_linux.h:1:
+#ifndef _ASM_S390X_S390_H

ERROR:CODE_INDENT: code indent should use tabs where possible
#2922: FILE: arch/s390/kernel/compat_linux.h:20:
+        __u32   msgp;                           /* pointer              */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2922: FILE: arch/s390/kernel/compat_linux.h:20:
+        __u32   msgp;                           /* pointer              */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2923: FILE: arch/s390/kernel/compat_linux.h:21:
+        __s32   msgtyp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2923: FILE: arch/s390/kernel/compat_linux.h:21:
+        __s32   msgtyp;$

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2927: FILE: arch/s390/kernel/compat_linux.h:25:
+       __u32			sa_handler;	/* Really a pointer, but need to deal with 32 bits */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2927: FILE: arch/s390/kernel/compat_linux.h:25:
+       __u32^I^I^Isa_handler;^I/* Really a pointer, but need to deal with 32 bits */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2928: FILE: arch/s390/kernel/compat_linux.h:26:
+       compat_old_sigset_t^Isa_mask;^I/* A 32 bit mask */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2929: FILE: arch/s390/kernel/compat_linux.h:27:
+       __u32^I^I^Isa_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2930: FILE: arch/s390/kernel/compat_linux.h:28:
+       __u32^I^I^Isa_restorer;^I/* Another 32 bit pointer */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2932: FILE: arch/s390/kernel/compat_linux.h:30:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2932: FILE: arch/s390/kernel/compat_linux.h:30:
+ $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2933: FILE: arch/s390/kernel/compat_linux.h:31:
+typedef union sigval32 {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2934: FILE: arch/s390/kernel/compat_linux.h:32:
+        int     sival_int;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2934: FILE: arch/s390/kernel/compat_linux.h:32:
+        int     sival_int;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2935: FILE: arch/s390/kernel/compat_linux.h:33:
+        __u32   sival_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2935: FILE: arch/s390/kernel/compat_linux.h:33:
+        __u32   sival_ptr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2937: FILE: arch/s390/kernel/compat_linux.h:35:
+                 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2937: FILE: arch/s390/kernel/compat_linux.h:35:
+                 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2937: FILE: arch/s390/kernel/compat_linux.h:35:
+                 $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2938: FILE: arch/s390/kernel/compat_linux.h:36:
+typedef struct siginfo32 {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2944: FILE: arch/s390/kernel/compat_linux.h:42:
+		int _pad[((128/sizeof(int)) - 3)];
 		              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2956: FILE: arch/s390/kernel/compat_linux.h:54:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2956: FILE: arch/s390/kernel/compat_linux.h:54:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2956: FILE: arch/s390/kernel/compat_linux.h:54:
+                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2979: FILE: arch/s390/kernel/compat_linux.h:77:
+                          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#2979: FILE: arch/s390/kernel/compat_linux.h:77:
+                          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2979: FILE: arch/s390/kernel/compat_linux.h:77:
+                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2986: FILE: arch/s390/kernel/compat_linux.h:84:
+} siginfo_t32;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3001: FILE: arch/s390/kernel/compat_linux.h:99:
+#define si_fd^I^I_sifields._sigpoll._fd    $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3004: FILE: arch/s390/kernel/compat_linux.h:102:
+typedef union

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#3005: FILE: arch/s390/kernel/compat_linux.h:103:
+typedef union
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3007: FILE: arch/s390/kernel/compat_linux.h:105:
+^I__u32   f; $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3010: FILE: arch/s390/kernel/compat_linux.h:108:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3011: FILE: arch/s390/kernel/compat_linux.h:109:
+typedef struct
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3013: FILE: arch/s390/kernel/compat_linux.h:111:
+^Ifreg_t32^Ifprs[__NUM_FPRS];              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3016: FILE: arch/s390/kernel/compat_linux.h:114:
+typedef struct $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3016: FILE: arch/s390/kernel/compat_linux.h:114:
+typedef struct 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3017: FILE: arch/s390/kernel/compat_linux.h:115:
+typedef struct 
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#3018: FILE: arch/s390/kernel/compat_linux.h:116:
+        __u32   mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3018: FILE: arch/s390/kernel/compat_linux.h:116:
+        __u32   mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3019: FILE: arch/s390/kernel/compat_linux.h:117:
+        __u32^Iaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3019: FILE: arch/s390/kernel/compat_linux.h:117:
+        __u32^Iaddr;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#3020: FILE: arch/s390/kernel/compat_linux.h:118:
+} _psw_t32 __attribute__ ((aligned(8)));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3048: FILE: arch/s390/kernel/compat_linux.h:146:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3049: FILE: arch/s390/kernel/compat_linux.h:147:
+typedef struct
+{

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3055: FILE: arch/s390/kernel/compat_linux.h:153:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3056: FILE: arch/s390/kernel/compat_linux.h:154:
+typedef struct
+{

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3064: FILE: arch/s390/kernel/compat_linux.h:162:
+#define _SIGMASK_COPY_SIZE32	(sizeof(u32)*2)
                             	            ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3067: FILE: arch/s390/kernel/compat_linux.h:165:
+struct sigcontext32
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#3076: FILE: arch/s390/kernel/compat_linux.h:174:
+        __u32^I^Isa_restorer;^I^I/* pointer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3076: FILE: arch/s390/kernel/compat_linux.h:174:
+        __u32^I^Isa_restorer;^I^I/* pointer */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3080: FILE: arch/s390/kernel/compat_linux.h:178:
+typedef struct {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3089: FILE: arch/s390/kernel/compat_linux.h:187:
+^I__u32^I^I^Iuc_link;^I/* pointer */^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3100: FILE: arch/s390/kernel/compat_ptrace.h:1:
+#ifndef _PTRACE32_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3105: FILE: arch/s390/kernel/compat_ptrace.h:6:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3106: FILE: arch/s390/kernel/compat_ptrace.h:7:
+typedef struct
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3108: FILE: arch/s390/kernel/compat_ptrace.h:9:
+} per_cr_words32  __attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3110: FILE: arch/s390/kernel/compat_ptrace.h:11:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3111: FILE: arch/s390/kernel/compat_ptrace.h:12:
+typedef struct
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3115: FILE: arch/s390/kernel/compat_ptrace.h:16:
+} per_lowcore_words32  __attribute__((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3117: FILE: arch/s390/kernel/compat_ptrace.h:18:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3118: FILE: arch/s390/kernel/compat_ptrace.h:19:
+typedef struct
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3121: FILE: arch/s390/kernel/compat_ptrace.h:22:
+	} control_regs  __attribute__((packed));

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#3129: FILE: arch/s390/kernel/compat_ptrace.h:30:
+	unsigned                    : 30;
 	                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3138: FILE: arch/s390/kernel/compat_ptrace.h:39:
+^I} lowcore; $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#3139: FILE: arch/s390/kernel/compat_ptrace.h:40:
+} per_struct32 __attribute__((packed));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3142: FILE: arch/s390/kernel/compat_ptrace.h:43:
+struct user_regs_struct32
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3154: FILE: arch/s390/kernel/compat_ptrace.h:55:
+^Iu32  ieee_instruction_pointer; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3160: FILE: arch/s390/kernel/compat_ptrace.h:61:
+	/* We start with the registers, to mimic the way that "memory"
+	   is returned from the ptrace(3,...) function.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3160: FILE: arch/s390/kernel/compat_ptrace.h:61:
+	   is returned from the ptrace(3,...) function.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3168: FILE: arch/s390/kernel/compat_ptrace.h:69:
+	u32 start_stack;	/* Starting virtual address of stack area.
+				   This is actually the bottom of the stack,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3170: FILE: arch/s390/kernel/compat_ptrace.h:71:
+				   esp register.  */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3171: FILE: arch/s390/kernel/compat_ptrace.h:72:
+^Is32 signal;     ^I /* Signal that caused the core dump. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3173: FILE: arch/s390/kernel/compat_ptrace.h:74:
+^I                         /* the registers. */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#3178: FILE: arch/s390/kernel/compat_ptrace.h:79:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3179: FILE: arch/s390/kernel/compat_ptrace.h:80:
+typedef struct
+{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378050.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 349 errors, 558 warnings, 109 checks, 3142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378050.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
