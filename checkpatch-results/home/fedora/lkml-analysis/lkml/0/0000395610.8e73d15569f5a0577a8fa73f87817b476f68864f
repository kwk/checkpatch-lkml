ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/block/ll_rw_blk.c:268:
+        q->ordered = flag;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/block/ll_rw_blk.c:268:
+        q->ordered = flag;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/block/ll_rw_blk.c:942:
+^Iif (buffer_ordered_tag(bh)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/block/ll_rw_blk.c:944:
+^Ielse if (buffer_ordered_flush(bh)) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#116: FILE: drivers/block/ll_rw_blk.c:958:
+	latency = rw_ahead = 0;	/* normal case; gets changed below for READA */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#178: FILE: drivers/ide/ide-disk.c:769:
+	return ide_end_request(drive, uptodate);
 	                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#201: FILE: drivers/ide/ide-io.c:92:
+ /*
+ * preempt pending requests, and store this cache flush for immediate

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#222: FILE: drivers/ide/ide-io.c:113:
+	if (!post) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: drivers/ide/ide-io.c:116:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/ide/ide-io.c:156:
+                 * if this is a write barrier, flush the writecache before$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/ide/ide-io.c:157:
+                 * signalling completion of this request.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/ide/ide-io.c:158:
+                 */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: drivers/ide/ide-io.c:159:
+		if (rq->cmd_flags & RQ_WRITE_ORDERED)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: drivers/ide/ide-io.c:161:
+		else {

WARNING:TYPO_SPELLING: 'cacheing' may be misspelled - perhaps 'caching'?
#275: FILE: drivers/ide/ide-io.c:278:
+			printk("%s: cache flushing failed. disable write back cacheing for journalled file systems\n", drive->name);
 			                                                      ^^^^^^^^

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#275: FILE: drivers/ide/ide-io.c:278:
+			printk("%s: cache flushing failed. disable write back cacheing for journalled file systems\n", drive->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#275: FILE: drivers/ide/ide-io.c:278:
+			printk("%s: cache flushing failed. disable write back cacheing for journalled file systems\n", drive->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive"
#298: FILE: drivers/ide/ide-io.c:351:
+	if (drive == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#303: FILE: drivers/ide/ide-io.c:355:
+	if ((rq = HWGROUP(drive)->rq) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/ide/ide-io.c:911:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#328: FILE: drivers/ide/ide-io.c:911:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/ide/ide-io.c:911:
+ ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/ide/ide-io.c:912:
+ ^I^I * if rq is a barrier write, issue pre cache flush if not$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#329: FILE: drivers/ide/ide-io.c:912:
+ ^I^I * if rq is a barrier write, issue pre cache flush if not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/ide/ide-io.c:913:
+ ^I^I * already done$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: drivers/ide/ide-io.c:913:
+ ^I^I * already done$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/ide/ide-io.c:914:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#331: FILE: drivers/ide/ide-io.c:914:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: drivers/ide/ide-io.c:917:
+ ^I^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: drivers/ide/ide-io.c:917:
+ ^I^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/ide/ide-io.c:917:
+ ^I^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: fs/jbd/commit.c:603:
+		/* if we're on an ide device, setting BH_Ordered_Flush
+		   will force a write cache flush before and after the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#369: FILE: fs/jbd/commit.c:604:
+		   commit block.  Otherwise, it'll do nothing.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: fs/jbd/commit.c:606:
+^I^Iset_bit(BH_Ordered_Flush, &bh->b_state); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#425: FILE: include/linux/blkdev.h:240:
+extern void blk_queue_ordered(request_queue_t *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#425: FILE: include/linux/blkdev.h:240:
+extern void blk_queue_ordered(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#425: FILE: include/linux/blkdev.h:240:
+extern void blk_queue_ordered(request_queue_t *, int);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: include/linux/fs.h:290:
+#define buffer_ordered_tag(bh)	__buffer_state(bh,Ordered_Tag)
                               	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Tag>
#448: FILE: include/linux/fs.h:290:
+#define buffer_ordered_tag(bh)	__buffer_state(bh,Ordered_Tag)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/fs.h:291:
+#define buffer_ordered_hard(bh)	__buffer_state(bh,Ordered_Hard)
                                	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Hard>
#449: FILE: include/linux/fs.h:291:
+#define buffer_ordered_hard(bh)	__buffer_state(bh,Ordered_Hard)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: include/linux/fs.h:292:
+#define buffer_ordered_flush(bh)	__buffer_state(bh,Ordered_Flush)
                                 	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Flush>
#450: FILE: include/linux/fs.h:292:
+#define buffer_ordered_flush(bh)	__buffer_state(bh,Ordered_Flush)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: include/linux/fs.h:293:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: include/linux/fs.h:293:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 18 warnings, 10 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
