ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: Documentation/filesystems/Locking:358:
*);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: drivers/char/raw.c:257:
+^I.aio_write = ^Igeneric_file_aio_write_nolock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: fs/block_dev.c:1191:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: fs/block_dev.c:1191:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: fs/block_dev.c:1191:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#406: FILE: fs/xfs/linux-2.6/xfs_file.c:86:
+	return __xfs_file_read(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#458: FILE: fs/xfs/linux-2.6/xfs_file.c:125:
+	return __xfs_file_write(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                    ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#477: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#477: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#477: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#477: FILE: include/linux/fs.h:1107:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned

WARNING:SPACING: Unnecessary space before function pointer arguments
#479: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#479: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#479: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#479: FILE: include/linux/fs.h:1108:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#494: FILE: include/linux/fs.h:1695:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#494: FILE: include/linux/fs.h:1695:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec' should also have an identifier name
#494: FILE: include/linux/fs.h:1695:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#494: FILE: include/linux/fs.h:1695:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#494: FILE: include/linux/fs.h:1695:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/fs.h:1697:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#500: FILE: include/linux/fs.h:1697:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct
 ovec *' should also have an identifier name
#500: FILE: include/linux/fs.h:1697:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#500: FILE: include/linux/fs.h:1697:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#500: FILE: include/linux/fs.h:1697:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: mm/filemap.c:1231:
+generic_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: mm/filemap.c:2320:
+ssize_t generic_file_aio_write_nolock(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#569: FILE: mm/filemap.c:2327:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: space preferred before that '-' (ctx:VxE)
#571: FILE: mm/filemap.c:2329:
+	ret = __generic_file_aio_write_nolock(iocb, iov, nr_segs, &iocb-
 	                                                               ^

CHECK:SPACING: space preferred before that '-' (ctx:VxE)
#632: FILE: mm/filemap.c:2385:
+	ret = __generic_file_aio_write_nolock(iocb, iov, nr_segs, &iocb-
 	                                                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#715: FILE: net/socket.c:769:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#803: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: drivers/usb/gadget/inode.c:563:
+  ^I/* we "retry" to get the right mm context for this: */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#805: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/usb/gadget/inode.c:565:
+ ^I/* copy stuff into user buffers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#806: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/usb/gadget/inode.c:566:
+ ^Itotal = priv->actual;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#807: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: drivers/usb/gadget/inode.c:567:
+ ^Ilen = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#808: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/usb/gadget/inode.c:568:
+ ^Ifor (i=0; i < priv->nr_segs; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#808: FILE: drivers/usb/gadget/inode.c:568:
+ 	for (i=0; i < priv->nr_segs; i++) {
  	      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#809: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: drivers/usb/gadget/inode.c:569:
+ ^I^Issize_t this = min((ssize_t)(priv->iv[i].iov_len), total);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#811: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: drivers/usb/gadget/inode.c:571:
+ ^I^Iif (copy_to_user(priv->iv[i].iov_base, priv->buf, this)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#812: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/usb/gadget/inode.c:572:
+ ^I^I^Iif (len == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#813: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/usb/gadget/inode.c:573:
+ ^I^I^I^Ilen = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#814: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: drivers/usb/gadget/inode.c:574:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#815: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: drivers/usb/gadget/inode.c:575:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#817: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/usb/gadget/inode.c:577:
+ ^I^Itotal -= this;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#818: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/usb/gadget/inode.c:578:
+ ^I^Ilen += this;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#819: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: drivers/usb/gadget/inode.c:579:
+ ^I^Iif (total == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#820: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: drivers/usb/gadget/inode.c:580:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#821: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: drivers/usb/gadget/inode.c:581:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#822: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: drivers/usb/gadget/inode.c:582:
+  ^Ikfree(priv->buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#823: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: drivers/usb/gadget/inode.c:583:
+  ^Ikfree(priv);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#824: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/usb/gadget/inode.c:584:
+  ^Iaio_put_req(iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#825: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: drivers/usb/gadget/inode.c:585:
+ ^Ireturn len;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv->iv"
#834: FILE: drivers/usb/gadget/inode.c:598:
+	if (priv->iv == NULL

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#844: FILE: drivers/usb/gadget/inode.c:634:
+^Iunsigned long ^Inr_segs$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#871: FILE: drivers/usb/gadget/inode.c:696:
+ep_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t o)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: drivers/usb/gadget/inode.c:714:
+ep_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t o)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#911: FILE: drivers/usb/gadget/inode.c:728:
+	for (i=0; i < nr_segs; i++) {
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: drivers/usb/gadget/inode.c:730:
+		if (unlikely(copy_from_user(&buf[len], iov[i].iov_base,
+				iov[i].iov_len) != 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: fs/nfs/file.c:45:
+static ssize_t nfs_file_read(struct kiocb *, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: fs/nfs/file.c:47:
+static ssize_t nfs_file_write(struct kiocb *, const struct iovec *iov,
+				unsigned long nr_segs, loff_t pos);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#1090: FILE: fs/nfs/file.c:230:
+	dfprintk(VFS, "nfs: read(%s/%s, %lu@%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1091: FILE: fs/nfs/file.c:231:
+	dfprintk(VFS, "nfs: read(%s/%s, %lu@%Ld)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: fs/nfs/file.c:232:
+		(unsigned long) count, (long long) pos);

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#1129: FILE: fs/nfs/file.c:362:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: fs/nfs/file.c:363:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu@%Ld)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#1132: FILE: fs/nfs/file.c:364:
+		inode->i_ino, (unsigned long) count, (long long) pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1162: FILE: include/linux/nfs_fs.h:368:
+extern ssize_t nfs_file_direct_read(struct kiocb *iocb, const struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1165: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_file_direct_write(struct kiocb *iocb, const struct

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1196: FILE: fs/ocfs2/file.c:973:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1251: FILE: fs/ocfs2/file.c:1140:
+	mlog_entry("(0x%p, %u, '%.*s')\n", filp,
 	                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1318: FILE: fs/gfs2/ops_file.c:177:
+static ssize_t gfs2_file_aio_read(struct kiocb *iocb,
 				    const struct iovec *iov,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1328: FILE: fs/gfs2/ops_file.c:187:
+	BUG_ON(iocb->ki_pos != pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1355: FILE: fs/gfs2/ops_file.c:255:
+			do_generic_file_read(filp, &iocb->ki_pos, &desc,
 			                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1356: FILE: fs/gfs2/ops_file.c:256:
+			do_generic_file_read(filp, &iocb->ki_pos, &desc,
+						file_read_actor);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 67 warnings, 23 checks, 1150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000069246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
