WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#26: 
Signed-Off-By: dhowells@redhat.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: include/asm-frv/ipcbuf.h:1:
+#ifndef __ASM_IPCBUF_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#81: FILE: include/asm-frv/ipcbuf.h:15:
+struct ipc64_perm
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: include/asm-frv/ipc.h:1:
+#ifndef __ASM_IPC_H__

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: include/asm-frv/ipc.h:4:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-frv/ipc.h:30:
+#define IPCCALL(version,op)	((version)<<16 | (op))
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: include/asm-frv/ipc.h:30:
+#define IPCCALL(version,op)	((version)<<16 | (op))
                            	          ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#138: FILE: include/asm-frv/irc-regs.h:1:
+/* irc-regs.h: on-chip interrupt controller registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#152: FILE: include/asm-frv/irc-regs.h:15:
+#define __reg(ADDR) (*(volatile unsigned long *)(ADDR))

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: include/asm-frv/irc-regs.h:19:
+#define __set_TM1(V)	do { __reg(0xfeff9808) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#156: FILE: include/asm-frv/irc-regs.h:19:
+#define __set_TM1(V)	do { __reg(0xfeff9808) = (V); mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: include/asm-frv/irc-regs.h:21:
+#define __set_TM1x(XI,V)			\
                      ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#165: FILE: include/asm-frv/irc-regs.h:28:
+	mb();					\

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: include/asm-frv/irc-regs.h:29:
+} while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: include/asm-frv/irc-regs.h:31:
+#define __get_RS(C)	({ (__reg(0xfeff9810) >> ((C)+16)) & 1; })
                    	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#170: FILE: include/asm-frv/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)
                    	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#170: FILE: include/asm-frv/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#170: FILE: include/asm-frv/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: include/asm-frv/irc-regs.h:35:
+#define __get_MASK(C)	({ (__reg(0xfeff9820) >> ((C)+16)) & 1; })
                      	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: include/asm-frv/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)
                      	                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: include/asm-frv/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#173: FILE: include/asm-frv/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: include/asm-frv/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)
                      	                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: include/asm-frv/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#174: FILE: include/asm-frv/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: include/asm-frv/irc-regs.h:44:
+#define __clr_IRL()	do { __reg(0xfeff9828) = 0x100000; mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#181: FILE: include/asm-frv/irc-regs.h:44:
+#define __clr_IRL()	do { __reg(0xfeff9828) = 0x100000; mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: include/asm-frv/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: include/asm-frv/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#184: FILE: include/asm-frv/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: include/asm-frv/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: include/asm-frv/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#187: FILE: include/asm-frv/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: include/asm-frv/irc-regs.h:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#195: FILE: include/asm-frv/irq.h:1:
+/* irq.h: FRV IRQ definitions

CHECK:BIT_MACRO: Prefer using the BIT macro
#221: FILE: include/asm-frv/irq.h:27:
+#define NR_IRQ_ACTIONS_PER_GROUP	(1 << NR_IRQ_LOG2_ACTIONS_PER_GROUP)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: include/asm-frv/irq.h:39:
+extern void disable_irq_nosync(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: include/asm-frv/irq.h:40:
+extern void disable_irq(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/asm-frv/irq.h:41:
+extern void enable_irq(unsigned int irq);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: include/asm-frv/irq.h:43:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#243: FILE: include/asm-frv/irq-routing.h:1:
+/* irq-routing.h: multiplexed IRQ routing

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#284: FILE: include/asm-frv/irq-routing.h:42:
+	volatile void __iomem	*muxdata;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/asm-frv/irq-routing.h:62:
+extern void frv_irq_route(struct irq_source *source, int irqlevel);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/asm-frv/irq-routing.h:63:
+extern void frv_irq_route_external(struct irq_source *source, int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/asm-frv/irq-routing.h:64:
+extern void frv_irq_set_group(struct irq_group *group);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/asm-frv/irq-routing.h:65:
+extern void distribute_irqs(struct irq_group *group, unsigned long irqmask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/asm-frv/irq-routing.h:66:
+extern void route_cpu_irqs(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: include/asm-frv/kmap_types.h:1:
+                                                                                $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#317: FILE: include/asm-frv/kmap_types.h:1:
+                                                                                

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: include/asm-frv/kmap_types.h:1:
+                                                                                $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: include/asm-frv/kmap_types.h:1:
+                                                                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: include/asm-frv/kmap_types.h:4:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: include/asm-frv/kmap_types.h:4:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: include/asm-frv/kmap_types.h:13:
+        KM_BOUNCE_READ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: include/asm-frv/kmap_types.h:13:
+        KM_BOUNCE_READ,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: include/asm-frv/kmap_types.h:14:
+        KM_SKB_SUNRPC_DATA,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: include/asm-frv/kmap_types.h:14:
+        KM_SKB_SUNRPC_DATA,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: include/asm-frv/kmap_types.h:15:
+        KM_SKB_DATA_SOFTIRQ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: include/asm-frv/kmap_types.h:15:
+        KM_SKB_DATA_SOFTIRQ,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: include/asm-frv/kmap_types.h:16:
+        KM_USER0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: include/asm-frv/kmap_types.h:16:
+        KM_USER0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: include/asm-frv/kmap_types.h:17:
+        KM_USER1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: include/asm-frv/kmap_types.h:17:
+        KM_USER1,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: include/asm-frv/kmap_types.h:28:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/asm-frv/kmap_types.h:28:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#350: FILE: include/asm-frv/linkage.h:1:
+#ifndef __ASM_LINKAGE_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#353: FILE: include/asm-frv/linkage.h:4:
+#define __ALIGN		.align 4

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: include/asm-frv/local.h:1:
+#ifndef _ASM_LOCAL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: include/asm-frv/math-emu.h:1:
+#ifndef _ASM_MATH_EMU_H

CHECK:SPACING: No space is necessary after a cast
#397: FILE: include/asm-frv/math-emu.h:27:
+#define FPSR_QUOTIENT(fpsr) (*((signed char *) &(fpsr) + 1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: include/asm-frv/math-emu.h:35:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: include/asm-frv/math-emu.h:49:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#430: FILE: include/asm-frv/math-emu.h:60:
+#define PMDECODE	(1<<PDECODE)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#430: FILE: include/asm-frv/math-emu.h:60:
+#define PMDECODE	(1<<PDECODE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#431: FILE: include/asm-frv/math-emu.h:61:
+#define PMEXECUTE	(1<<PEXECUTE)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#431: FILE: include/asm-frv/math-emu.h:61:
+#define PMEXECUTE	(1<<PEXECUTE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#432: FILE: include/asm-frv/math-emu.h:62:
+#define PMCONV		(1<<PCONV)
               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#432: FILE: include/asm-frv/math-emu.h:62:
+#define PMCONV		(1<<PCONV)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: include/asm-frv/math-emu.h:63:
+#define PMNORM		(1<<PNORM)
               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#433: FILE: include/asm-frv/math-emu.h:63:
+#define PMNORM		(1<<PNORM)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#434: FILE: include/asm-frv/math-emu.h:64:
+#define PMREGISTER	(1<<PREGISTER)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#434: FILE: include/asm-frv/math-emu.h:64:
+#define PMREGISTER	(1<<PREGISTER)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#435: FILE: include/asm-frv/math-emu.h:65:
+#define PMINSTR		(1<<PINSTR)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#435: FILE: include/asm-frv/math-emu.h:65:
+#define PMINSTR		(1<<PINSTR)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#436: FILE: include/asm-frv/math-emu.h:66:
+#define PMUNIMPL	(1<<PUNIMPL)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#436: FILE: include/asm-frv/math-emu.h:66:
+#define PMUNIMPL	(1<<PUNIMPL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#437: FILE: include/asm-frv/math-emu.h:67:
+#define PMMOVEM		(1<<PMOVEM)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#437: FILE: include/asm-frv/math-emu.h:67:
+#define PMMOVEM		(1<<PMOVEM)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#464: FILE: include/asm-frv/math-emu.h:94:
+/* NOTE: if you change this, you have to change the assembler offsets
+   below and the size in <asm/fpu.h>, too */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: include/asm-frv/math-emu.h:94:
+   below and the size in <asm/fpu.h>, too */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#480: FILE: include/asm-frv/math-emu.h:110:
+		printk(fmt, ## args);			\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#490: FILE: include/asm-frv/math-emu.h:120:
+		printk("You just hit an unimplemented "	\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: include/asm-frv/math-emu.h:122:
+		printk("Please report this to ....\n");	\

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#501: FILE: include/asm-frv/math-emu.h:131:
+#define FPDATA		%a2
               		^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#501: FILE: include/asm-frv/math-emu.h:131:
+#define FPDATA		%a2

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#504: FILE: include/asm-frv/math-emu.h:134:
+#define FPD_FPREG	(TASK_THREAD+THREAD_FPREG+0)
                  	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#504: FILE: include/asm-frv/math-emu.h:134:
+#define FPD_FPREG	(TASK_THREAD+THREAD_FPREG+0)
                  	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#505: FILE: include/asm-frv/math-emu.h:135:
+#define FPD_FPCR	(TASK_THREAD+THREAD_FPREG+96)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#505: FILE: include/asm-frv/math-emu.h:135:
+#define FPD_FPCR	(TASK_THREAD+THREAD_FPREG+96)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#506: FILE: include/asm-frv/math-emu.h:136:
+#define FPD_FPSR	(TASK_THREAD+THREAD_FPREG+100)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#506: FILE: include/asm-frv/math-emu.h:136:
+#define FPD_FPSR	(TASK_THREAD+THREAD_FPREG+100)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#507: FILE: include/asm-frv/math-emu.h:137:
+#define FPD_FPIAR	(TASK_THREAD+THREAD_FPREG+104)
                  	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#507: FILE: include/asm-frv/math-emu.h:137:
+#define FPD_FPIAR	(TASK_THREAD+THREAD_FPREG+104)
                  	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#508: FILE: include/asm-frv/math-emu.h:138:
+#define FPD_PREC	(TASK_THREAD+THREAD_FPREG+108)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#508: FILE: include/asm-frv/math-emu.h:138:
+#define FPD_PREC	(TASK_THREAD+THREAD_FPREG+108)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: include/asm-frv/math-emu.h:139:
+#define FPD_RND		(TASK_THREAD+THREAD_FPREG+110)
                		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: include/asm-frv/math-emu.h:139:
+#define FPD_RND		(TASK_THREAD+THREAD_FPREG+110)
                		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#510: FILE: include/asm-frv/math-emu.h:140:
+#define FPD_TEMPFP1	(TASK_THREAD+THREAD_FPREG+112)
                    	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#510: FILE: include/asm-frv/math-emu.h:140:
+#define FPD_TEMPFP1	(TASK_THREAD+THREAD_FPREG+112)
                    	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#511: FILE: include/asm-frv/math-emu.h:141:
+#define FPD_TEMPFP2	(TASK_THREAD+THREAD_FPREG+124)
                    	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#511: FILE: include/asm-frv/math-emu.h:141:
+#define FPD_TEMPFP2	(TASK_THREAD+THREAD_FPREG+124)
                    	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: include/asm-frv/math-emu.h:142:
+#define FPD_SIZEOF	(TASK_THREAD+THREAD_FPREG+136)
                   	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#512: FILE: include/asm-frv/math-emu.h:142:
+#define FPD_SIZEOF	(TASK_THREAD+THREAD_FPREG+136)
                   	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#526: FILE: include/asm-frv/math-emu.h:156:
+#define FPS_EA		(PT_PC+6)
               		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#527: FILE: include/asm-frv/math-emu.h:157:
+#define FPS_PC2		(PT_PC+10)
                		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#530: FILE: include/asm-frv/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#531: FILE: include/asm-frv/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: include/asm-frv/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#540: FILE: include/asm-frv/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#540: FILE: include/asm-frv/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#540: FILE: include/asm-frv/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#540: FILE: include/asm-frv/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#543: FILE: include/asm-frv/math-emu.h:173:
+.macro	fp_put_pc src,jump=0
       	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#543: FILE: include/asm-frv/math-emu.h:173:
+.macro	fp_put_pc src,jump=0
       	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#544: FILE: include/asm-frv/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#544: FILE: include/asm-frv/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#544: FILE: include/asm-frv/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#544: FILE: include/asm-frv/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: include/asm-frv/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: include/asm-frv/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: include/asm-frv/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#548: FILE: include/asm-frv/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#549: FILE: include/asm-frv/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#549: FILE: include/asm-frv/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#549: FILE: include/asm-frv/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: include/asm-frv/math-emu.h:182:
+.macro	fp_get_instr_word	dest,label,addr
       	                 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: include/asm-frv/math-emu.h:182:
+.macro	fp_get_instr_word	dest,label,addr
       	                 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: include/asm-frv/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: include/asm-frv/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: include/asm-frv/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: include/asm-frv/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#556: FILE: include/asm-frv/math-emu.h:186:
+.macro	fp_get_instr_long	dest,label,addr
       	                 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#556: FILE: include/asm-frv/math-emu.h:186:
+.macro	fp_get_instr_long	dest,label,addr
       	                 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: include/asm-frv/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: include/asm-frv/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: include/asm-frv/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: include/asm-frv/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: include/asm-frv/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: include/asm-frv/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: include/asm-frv/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: include/asm-frv/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#566: FILE: include/asm-frv/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#566: FILE: include/asm-frv/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: include/asm-frv/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: include/asm-frv/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#567: FILE: include/asm-frv/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#567: FILE: include/asm-frv/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest
        	          	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu1>
#567: FILE: include/asm-frv/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: include/asm-frv/math-emu.h:199:
+	.section .fixup,"ax"
 	               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#571: FILE: include/asm-frv/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#571: FILE: include/asm-frv/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
        	      	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#571: FILE: include/asm-frv/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
        	      	      ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu2>
#571: FILE: include/asm-frv/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#575: FILE: include/asm-frv/math-emu.h:205:
+	.section __ex_table,"a"
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: include/asm-frv/math-emu.h:207:
+	.long	.Lu1\@,.Lu2\@
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: include/asm-frv/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: include/asm-frv/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: include/asm-frv/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: include/asm-frv/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#582: FILE: include/asm-frv/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#582: FILE: include/asm-frv/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: include/asm-frv/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: include/asm-frv/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#583: FILE: include/asm-frv/math-emu.h:213:
+.Lu1\@:	moves\size	\src,\dest
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: include/asm-frv/math-emu.h:213:
+.Lu1\@:	moves\size	\src,\dest
        	          	    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#584: FILE: include/asm-frv/math-emu.h:214:
+.Lu2\@:
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: include/asm-frv/math-emu.h:216:
+	.section .fixup,"ax"
 	               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#588: FILE: include/asm-frv/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#588: FILE: include/asm-frv/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
        	      	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#588: FILE: include/asm-frv/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
        	      	      ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu3>
#588: FILE: include/asm-frv/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#592: FILE: include/asm-frv/math-emu.h:222:
+	.section __ex_table,"a"
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: include/asm-frv/math-emu.h:224:
+	.long	.Lu1\@,.Lu3\@
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#595: FILE: include/asm-frv/math-emu.h:225:
+	.long	.Lu2\@,.Lu3\@
 	     	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#599: FILE: include/asm-frv/math-emu.h:229:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-frv/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-frv/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-frv/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-frv/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-frv/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-frv/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#603: FILE: include/asm-frv/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	     ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#603: FILE: include/asm-frv/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#603: FILE: include/asm-frv/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	   ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#607: FILE: include/asm-frv/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#610: FILE: include/asm-frv/math-emu.h:240:
+.Lpdata\@:
          ^

CHECK:CAMELCASE: Avoid CamelCase: <Lpdata>
#610: FILE: include/asm-frv/math-emu.h:240:
+.Lpdata\@:

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	               ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#614: FILE: include/asm-frv/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#615: FILE: include/asm-frv/math-emu.h:245:
+	.if	\bit+1
 	   	    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#616: FILE: include/asm-frv/math-emu.h:246:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#617: FILE: include/asm-frv/math-emu.h:247:
+	moveq	#\bit,%d0
 	     	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#617: FILE: include/asm-frv/math-emu.h:247:
+	moveq	#\bit,%d0
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#618: FILE: include/asm-frv/math-emu.h:248:
+	andw	#7,%d0
 	    	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#618: FILE: include/asm-frv/math-emu.h:248:
+	andw	#7,%d0
 	    	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#619: FILE: include/asm-frv/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: include/asm-frv/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#619: FILE: include/asm-frv/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#619: FILE: include/asm-frv/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#619: FILE: include/asm-frv/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#621: FILE: include/asm-frv/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#621: FILE: include/asm-frv/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#621: FILE: include/asm-frv/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#621: FILE: include/asm-frv/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Lpskip>
#623: FILE: include/asm-frv/math-emu.h:253:
+	jeq	.Lpskip\@

ERROR:SPACING: space required after that ',' (ctx:VxV)
#625: FILE: include/asm-frv/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#625: FILE: include/asm-frv/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#625: FILE: include/asm-frv/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#625: FILE: include/asm-frv/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#625: FILE: include/asm-frv/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#628: FILE: include/asm-frv/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#629: FILE: include/asm-frv/math-emu.h:259:
+.Lpskip\@:
          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	     ^

ERROR:SPACING: space required after that ',' (ctx:OxO)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#630: FILE: include/asm-frv/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#634: FILE: include/asm-frv/math-emu.h:264:
+.macro	printx	bit,fp
       	      	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	       ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#636: FILE: include/asm-frv/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#637: FILE: include/asm-frv/math-emu.h:267:
+	lea	\fp,%a0
 	   	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#637: FILE: include/asm-frv/math-emu.h:267:
+	lea	\fp,%a0
 	   	    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#638: FILE: include/asm-frv/math-emu.h:268:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#639: FILE: include/asm-frv/math-emu.h:269:
+	moveq	#'+',%d0
 	     	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#639: FILE: include/asm-frv/math-emu.h:269:
+	moveq	#'+',%d0
 	     	     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#640: FILE: include/asm-frv/math-emu.h:270:
+	tst.w	(%a0)

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#640: FILE: include/asm-frv/math-emu.h:270:
+	tst.w	(%a0)
 	     	 ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx1>
#641: FILE: include/asm-frv/math-emu.h:271:
+	jeq	.Lx1\@

ERROR:SPACING: space required after that ',' (ctx:VxO)
#642: FILE: include/asm-frv/math-emu.h:272:
+	moveq	#'-',%d0
 	     	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#642: FILE: include/asm-frv/math-emu.h:272:
+	moveq	#'-',%d0
 	     	     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#643: FILE: include/asm-frv/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: include/asm-frv/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: include/asm-frv/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#643: FILE: include/asm-frv/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#643: FILE: include/asm-frv/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#644: FILE: include/asm-frv/math-emu.h:274:
+	move.l	(4,%a0),%d0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#644: FILE: include/asm-frv/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#644: FILE: include/asm-frv/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#644: FILE: include/asm-frv/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#644: FILE: include/asm-frv/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#645: FILE: include/asm-frv/math-emu.h:275:
+	bclr	#31,%d0
 	    	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#645: FILE: include/asm-frv/math-emu.h:275:
+	bclr	#31,%d0
 	    	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx2>
#646: FILE: include/asm-frv/math-emu.h:276:
+	jne	.Lx2\@

ERROR:SPACING: space required after that ',' (ctx:VxV)
#647: FILE: include/asm-frv/math-emu.h:277:
+	printf	\bit,"0."
 	      	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx3>
#648: FILE: include/asm-frv/math-emu.h:278:
+	jra	.Lx3\@

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#649: FILE: include/asm-frv/math-emu.h:279:
+.Lx2\@:	printf	\bit,"1."
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: include/asm-frv/math-emu.h:279:
+.Lx2\@:	printf	\bit,"1."
        	      	    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#650: FILE: include/asm-frv/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#651: FILE: include/asm-frv/math-emu.h:281:
+	move.w	(2,%a0),%d0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#651: FILE: include/asm-frv/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#651: FILE: include/asm-frv/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#651: FILE: include/asm-frv/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#651: FILE: include/asm-frv/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#652: FILE: include/asm-frv/math-emu.h:282:
+	ext.l	%d0
 	     	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: include/asm-frv/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#653: FILE: include/asm-frv/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#653: FILE: include/asm-frv/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#653: FILE: include/asm-frv/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#655: FILE: include/asm-frv/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	     ^

ERROR:SPACING: space required after that ',' (ctx:OxO)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#657: FILE: include/asm-frv/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#661: FILE: include/asm-frv/math-emu.h:291:
+.macro	debug	instr,args
       	     	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#667: FILE: include/asm-frv/math-emu.h:297:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#676: FILE: include/asm-frv/mb86943a.h:1:
+/* mb86943a.h: MB86943 SPARClite <-> PCI bridge registers

CHECK:SPACING: No space is necessary after a cast
#692: FILE: include/asm-frv/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#692: FILE: include/asm-frv/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#692: FILE: include/asm-frv/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

CHECK:SPACING: No space is necessary after a cast
#703: FILE: include/asm-frv/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#703: FILE: include/asm-frv/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))
                                 	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#703: FILE: include/asm-frv/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#703: FILE: include/asm-frv/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

CHECK:SPACING: No space is necessary after a cast
#704: FILE: include/asm-frv/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#704: FILE: include/asm-frv/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))
                                   	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#704: FILE: include/asm-frv/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#704: FILE: include/asm-frv/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

CHECK:SPACING: No space is necessary after a cast
#705: FILE: include/asm-frv/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#705: FILE: include/asm-frv/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))
                                  	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#705: FILE: include/asm-frv/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#705: FILE: include/asm-frv/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

CHECK:SPACING: No space is necessary after a cast
#707: FILE: include/asm-frv/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#707: FILE: include/asm-frv/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#707: FILE: include/asm-frv/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

CHECK:SPACING: No space is necessary after a cast
#708: FILE: include/asm-frv/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#708: FILE: include/asm-frv/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#708: FILE: include/asm-frv/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

CHECK:SPACING: No space is necessary after a cast
#709: FILE: include/asm-frv/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#709: FILE: include/asm-frv/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#709: FILE: include/asm-frv/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

CHECK:SPACING: No space is necessary after a cast
#710: FILE: include/asm-frv/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#710: FILE: include/asm-frv/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#710: FILE: include/asm-frv/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

CHECK:SPACING: No space is necessary after a cast
#711: FILE: include/asm-frv/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#711: FILE: include/asm-frv/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#711: FILE: include/asm-frv/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

CHECK:SPACING: No space is necessary after a cast
#712: FILE: include/asm-frv/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#712: FILE: include/asm-frv/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#712: FILE: include/asm-frv/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#719: FILE: include/asm-frv/mb93091-fpga-irqs.h:1:
+/* mb93091-fpga-irqs.h: MB93091 CPU board FPGA IRQs

CHECK:LINE_SPACING: Please don't use multiple blank lines
#759: FILE: include/asm-frv/mb93091-fpga-irqs.h:41:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#767: FILE: include/asm-frv/mb93093-fpga-irqs.h:1:
+/* mb93093-fpga-irqs.h: MB93093 CPU board FPGA IRQs

CHECK:LINE_SPACING: Please don't use multiple blank lines
#794: FILE: include/asm-frv/mb93093-fpga-irqs.h:28:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#802: FILE: include/asm-frv/mb93493-irqs.h:1:
+/* mb93493-irqs.h: MB93493 companion chip IRQs

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#858: FILE: include/asm-frv/mb93493-regs.h:1:
+/* mb93493-regs.h: MB93493 companion chip registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#875: FILE: include/asm-frv/mb93493-regs.h:18:
+#define __get_MB93493(X)	({ *(volatile unsigned long *)(__region_CS3 + (X)); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#877: FILE: include/asm-frv/mb93493-regs.h:20:
+#define __set_MB93493(X,V)						\
                        ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#879: FILE: include/asm-frv/mb93493-regs.h:22:
+	*(volatile unsigned long *)(__region_CS3 + (X)) = (V); mb();	\

WARNING:MEMORY_BARRIER: memory barrier without comment
#879: FILE: include/asm-frv/mb93493-regs.h:22:
+	*(volatile unsigned long *)(__region_CS3 + (X)) = (V); mb();	\

ERROR:SPACING: space required before the open parenthesis '('
#880: FILE: include/asm-frv/mb93493-regs.h:23:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#883: FILE: include/asm-frv/mb93493-regs.h:26:
+#define __set_MB93493_STSR(X,V)	__set_MB93493(0x3c0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#887: FILE: include/asm-frv/mb93493-regs.h:30:
+#define __set_MB93493_IQSR(X,V)	__set_MB93493(0x3d0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#890: FILE: include/asm-frv/mb93493-regs.h:33:
+#define __set_MB93493_DQSR(X,V)	__set_MB93493(0x3e0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#911: FILE: include/asm-frv/mb93493-regs.h:54:
+#define __set_MB93493_VDC(X,V)	__set_MB93493(MB93493_VDC_##X, (V))
                            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#925: FILE: include/asm-frv/mb93493-regs.h:68:
+#define __addr_MB93493_VDC_BCI(X)  ({ (volatile unsigned long *)(__region_CS3 + 0x000 + (X)); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#949: FILE: include/asm-frv/mb93493-regs.h:92:
+#define __set_MB93493_VCC(X,V)	__set_MB93493(MB93493_VCC_##X, (V))
                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1025: FILE: include/asm-frv/mb93493-regs.h:168:
+#define MB93493_I2C_BSR ^I0x340^I^I/* bus status */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1032: FILE: include/asm-frv/mb93493-regs.h:175:
+#define __addr_MB93493_I2C(port,X)   (__region_CS3 + MB93493_I2C_##X + ((port)*0x20))
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1032: FILE: include/asm-frv/mb93493-regs.h:175:
+#define __addr_MB93493_I2C(port,X)   (__region_CS3 + MB93493_I2C_##X + ((port)*0x20))
                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1033: FILE: include/asm-frv/mb93493-regs.h:176:
+#define __get_MB93493_I2C(port,X)    __get_MB93493(MB93493_I2C_##X + ((port)*0x20))
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1033: FILE: include/asm-frv/mb93493-regs.h:176:
+#define __get_MB93493_I2C(port,X)    __get_MB93493(MB93493_I2C_##X + ((port)*0x20))
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1034: FILE: include/asm-frv/mb93493-regs.h:177:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1034: FILE: include/asm-frv/mb93493-regs.h:177:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1034: FILE: include/asm-frv/mb93493-regs.h:177:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                                                                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1036: FILE: include/asm-frv/mb93493-regs.h:179:
+#define I2C_BSR_BB	(1 << 7)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1042: FILE: include/asm-frv/mb93493-regs.h:185:
+#define __set_MB93493_I2S(X,V)	__set_MB93493(MB93493_I2S_##X, (V))
                            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1104: FILE: include/asm-frv/mb93493-regs.h:247:
+#define __addr_MB93493_PCMCIA(X)  ((volatile unsigned long *)(__region_CS5 + (X)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1110: FILE: include/asm-frv/mb93493-regs.h:253:
+#define __set_MB93493_GPIO_PDR(X,V)	__set_MB93493(0x380 + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1113: FILE: include/asm-frv/mb93493-regs.h:256:
+#define __set_MB93493_GPIO_GPDR(X,V)	__set_MB93493(0x384 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1116: FILE: include/asm-frv/mb93493-regs.h:259:
+#define __set_MB93493_GPIO_SIR(X,V)	__set_MB93493(0x388 + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: include/asm-frv/mb93493-regs.h:262:
+#define __set_MB93493_GPIO_SOR(X,V)	__set_MB93493(0x38c + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: include/asm-frv/mb93493-regs.h:265:
+#define __set_MB93493_GPIO_PDSR(X,V)	__set_MB93493(0x390 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1125: FILE: include/asm-frv/mb93493-regs.h:268:
+#define __set_MB93493_GPIO_PDCR(X,V)	__set_MB93493(0x394 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1128: FILE: include/asm-frv/mb93493-regs.h:271:
+#define __set_MB93493_GPIO_INTST(X,V)	__set_MB93493(0x398 + (X) * 0xc0, (V))
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: include/asm-frv/mb93493-regs.h:274:
+#define __set_MB93493_GPIO_IEHL(X,V)	__set_MB93493(0x39c + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: include/asm-frv/mb93493-regs.h:277:
+#define __set_MB93493_GPIO_IELH(X,V)	__set_MB93493(0x3a0 + (X) * 0xc0, (V))
                                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1141: FILE: include/asm-frv/mb-regs.h:1:
+/* mb-regs.h: motherboard registers

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1200: FILE: include/asm-frv/mb-regs.h:60:
+#define __flush_PCI_writes()						\
+do {									\
+	__builtin_write8((volatile void *) __region_PCI_MEM, 0);	\
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#1202: FILE: include/asm-frv/mb-regs.h:62:
+	__builtin_write8((volatile void *) __region_PCI_MEM, 0);	\

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1202: FILE: include/asm-frv/mb-regs.h:62:
+	__builtin_write8((volatile void *) __region_PCI_MEM, 0);	\

ERROR:SPACING: space required before the open parenthesis '('
#1203: FILE: include/asm-frv/mb-regs.h:63:
+} while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1211: FILE: include/asm-frv/mb-regs.h:71:
+#define __get_CLKSW()	({ *(volatile unsigned long *)(__region_CS2 + 0x0130000cUL) & 0xffUL; })

CHECK:SPACING: No space is necessary after a cast
#1223: FILE: include/asm-frv/mb-regs.h:83:
+		__builtin_write32((void *) __addr_LEDS(), ~(X));	\

CHECK:SPACING: No space is necessary after a cast
#1230: FILE: include/asm-frv/mb-regs.h:90:
+#define __get_LCD(B)		__builtin_read32((volatile void *) (B))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1230: FILE: include/asm-frv/mb-regs.h:90:
+#define __get_LCD(B)		__builtin_read32((volatile void *) (B))

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: include/asm-frv/mb-regs.h:91:
+#define __set_LCD(B,X)		__builtin_write32((volatile void *) (B), (X))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1231: FILE: include/asm-frv/mb-regs.h:91:
+#define __set_LCD(B,X)		__builtin_write32((volatile void *) (B), (X))
                    ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1231: FILE: include/asm-frv/mb-regs.h:91:
+#define __set_LCD(B,X)		__builtin_write32((volatile void *) (B), (X))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1238: FILE: include/asm-frv/mb-regs.h:98:
+#define LCD_CMD_CLEAR		(LCD_E|0x001)
                      		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1239: FILE: include/asm-frv/mb-regs.h:99:
+#define LCD_CMD_HOME		(LCD_E|0x002)
                     		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1240: FILE: include/asm-frv/mb-regs.h:100:
+#define LCD_CMD_CURSOR_INC	(LCD_E|0x004)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1241: FILE: include/asm-frv/mb-regs.h:101:
+#define LCD_CMD_SCROLL_INC	(LCD_E|0x005)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1242: FILE: include/asm-frv/mb-regs.h:102:
+#define LCD_CMD_CURSOR_DEC	(LCD_E|0x006)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1243: FILE: include/asm-frv/mb-regs.h:103:
+#define LCD_CMD_SCROLL_DEC	(LCD_E|0x007)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1244: FILE: include/asm-frv/mb-regs.h:104:
+#define LCD_CMD_OFF		(LCD_E|0x008)
                    		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'CRSR' may be better as '(CRSR)' to avoid precedence issues
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'BLINK' may be better as '(BLINK)' to avoid precedence issues
#1245: FILE: include/asm-frv/mb-regs.h:105:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1246: FILE: include/asm-frv/mb-regs.h:106:
+#define LCD_CMD_CURSOR_MOVE_L	(LCD_E|0x010)
                              	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1247: FILE: include/asm-frv/mb-regs.h:107:
+#define LCD_CMD_CURSOR_MOVE_R	(LCD_E|0x014)
                              	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1248: FILE: include/asm-frv/mb-regs.h:108:
+#define LCD_CMD_DISPLAY_SHIFT_L	(LCD_E|0x018)
                                	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1249: FILE: include/asm-frv/mb-regs.h:109:
+#define LCD_CMD_DISPLAY_SHIFT_R	(LCD_E|0x01c)
                                	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'DL' may be better as '(DL)' to avoid precedence issues
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'N' may be better as '(N)' to avoid precedence issues
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'F' may be better as '(F)' to avoid precedence issues
#1250: FILE: include/asm-frv/mb-regs.h:110:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1251: FILE: include/asm-frv/mb-regs.h:111:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1251: FILE: include/asm-frv/mb-regs.h:111:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)
                               	            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'X' may be better as '(X)' to avoid precedence issues
#1251: FILE: include/asm-frv/mb-regs.h:111:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1252: FILE: include/asm-frv/mb-regs.h:112:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1252: FILE: include/asm-frv/mb-regs.h:112:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)
                               	            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'X' may be better as '(X)' to avoid precedence issues
#1252: FILE: include/asm-frv/mb-regs.h:112:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1253: FILE: include/asm-frv/mb-regs.h:113:
+#define LCD_CMD_READ_BUSY	(LCD_E|LCD_RW)
                          	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1254: FILE: include/asm-frv/mb-regs.h:114:
+#define LCD_DATA_WRITE(X)	(LCD_E|LCD_RS|(X))
                          	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1254: FILE: include/asm-frv/mb-regs.h:114:
+#define LCD_DATA_WRITE(X)	(LCD_E|LCD_RS|(X))
                          	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1255: FILE: include/asm-frv/mb-regs.h:115:
+#define LCD_DATA_READ		(LCD_E|LCD_RS|LCD_RW)
                      		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1255: FILE: include/asm-frv/mb-regs.h:115:
+#define LCD_DATA_READ		(LCD_E|LCD_RS|LCD_RW)
                      		             ^

ERROR:SPACING: space required before the open parenthesis '('
#1294: FILE: include/asm-frv/mb-regs.h:154:
+#define __flush_PCI_writes()	do { } while(0)

CHECK:SPACING: No space is necessary after a cast
#1300: FILE: include/asm-frv/mb-regs.h:160:
+#define __set_LEDS(X)		__builtin_write8((volatile void *) __addr_LEDS(), (X))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1300: FILE: include/asm-frv/mb-regs.h:160:
+#define __set_LEDS(X)		__builtin_write8((volatile void *) __addr_LEDS(), (X))

CHECK:SPACING: No space is necessary after a cast
#1303: FILE: include/asm-frv/mb-regs.h:163:
+#define __set_FPGATR(X)		__builtin_write32((volatile void *) __addr_FPGATR(), (X))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1303: FILE: include/asm-frv/mb-regs.h:163:
+#define __set_FPGATR(X)		__builtin_write32((volatile void *) __addr_FPGATR(), (X))

CHECK:SPACING: No space is necessary after a cast
#1304: FILE: include/asm-frv/mb-regs.h:164:
+#define __get_FPGATR()		__builtin_read32((volatile void *) __addr_FPGATR())

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1304: FILE: include/asm-frv/mb-regs.h:164:
+#define __get_FPGATR()		__builtin_read32((volatile void *) __addr_FPGATR())

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_11MHz>
#1312: FILE: include/asm-frv/mb-regs.h:172:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_11MHz	0x1

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_12MHz>
#1313: FILE: include/asm-frv/mb-regs.h:173:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_12MHz	0x2

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_02MHz>
#1314: FILE: include/asm-frv/mb-regs.h:174:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_02MHz	0x3

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1316: FILE: include/asm-frv/mb-regs.h:176:
+#define MB93093_FPGA_SWR_PUSHSWMASK	(0x1F<<26)
                                    	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1317: FILE: include/asm-frv/mb-regs.h:177:
+#define MB93093_FPGA_SWR_PUSHSW4	(1<<29)
                                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1317: FILE: include/asm-frv/mb-regs.h:177:
+#define MB93093_FPGA_SWR_PUSHSW4	(1<<29)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1319: FILE: include/asm-frv/mb-regs.h:179:
+#define __addr_FPGA_SWR		((volatile void *)(__region_CS2 + 0x28UL))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1322: FILE: include/asm-frv/mb-regs.h:182:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1330: FILE: include/asm-frv/mem-layout.h:1:
+/* mem-layout.h: memory layout

CHECK:SPACING: No space is necessary after a cast
#1345: FILE: include/asm-frv/mem-layout.h:16:
+#define __UL(X)	((unsigned long) (X))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1356: FILE: include/asm-frv/mem-layout.h:27:
+#define PAGE_SIZE			(1UL << PAGE_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1358: FILE: include/asm-frv/mem-layout.h:29:
+#define PAGE_SIZE			(1 << PAGE_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1361: FILE: include/asm-frv/mem-layout.h:32:
+#define PAGE_MASK			(~(PAGE_SIZE-1))
                  			            ^

CHECK:SPACING: No space is necessary after a cast
#1367: FILE: include/asm-frv/mem-layout.h:38:
+#define PAGE_OFFSET			((unsigned long) &__page_offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1385: FILE: include/asm-frv/mem-layout.h:56:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1412: FILE: include/asm-frv/mman.h:1:
+#ifndef __ASM_MMAN_H__

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1460: FILE: include/asm-frv/mmu_context.h:1:
+/* mmu_context.h: MMU context management routines

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1484: FILE: include/asm-frv/mmu_context.h:25:
+extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1485: FILE: include/asm-frv/mmu_context.h:26:
+extern void change_mm_context(mm_context_t *old, mm_context_t *ctx, pml4_t *_pml4);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1486: FILE: include/asm-frv/mmu_context.h:27:
+extern void destroy_context(struct mm_struct *mm);

ERROR:SPACING: space required before the open parenthesis '('
#1490: FILE: include/asm-frv/mmu_context.h:31:
+#define change_mm_context(old, ctx, _pml4)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1491: FILE: include/asm-frv/mmu_context.h:32:
+#define destroy_context(mm)			do {} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#1494: FILE: include/asm-frv/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#1494: FILE: include/asm-frv/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#1494: FILE: include/asm-frv/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#1494: FILE: include/asm-frv/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1498: FILE: include/asm-frv/mmu_context.h:39:
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#1500: FILE: include/asm-frv/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#1500: FILE: include/asm-frv/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#1500: FILE: include/asm-frv/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1500: FILE: include/asm-frv/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pml4);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1503: FILE: include/asm-frv/mmu_context.h:44:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1507: FILE: include/asm-frv/mmu_context.h:48:
+} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1514: FILE: include/asm-frv/mmu.h:1:
+/* mmu.h: memory management context for FR-V with or without MMU support

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1527: FILE: include/asm-frv/mmu.h:14:
+typedef struct {

WARNING:TYPO_SPELLING: 'PTD' may be misspelled - perhaps 'PDF'?
#1533: FILE: include/asm-frv/mmu.h:20:
+	unsigned long	itlb_ptd_mapping;	/* [DAMR4] PTD mapping for itlb cached PGE */
 	             	                 	           ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'PTD' may be misspelled - perhaps 'PDF'?
#1535: FILE: include/asm-frv/mmu.h:22:
+	unsigned long	dtlb_ptd_mapping;	/* [DAMR5] PTD mapping for dtlb cached PGE */
 	             	                 	           ^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1552: FILE: include/asm-frv/mmu.h:39:
+extern int cxn_pin_by_pid(pid_t pid);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1560: FILE: include/asm-frv/module.h:1:
+/* module.h: FRV module stuff

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1584: FILE: include/asm-frv/msgbuf.h:1:
+#ifndef _ASM_MSGBUF_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: include/asm-frv/msgbuf.h:4:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1620: FILE: include/asm-frv/namei.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1642: FILE: include/asm-frv/page.h:1:
+#ifndef _ASM_PAGE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: include/asm-frv/page.h:11:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: include/asm-frv/page.h:11:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1654: FILE: include/asm-frv/page.h:13:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: include/asm-frv/page.h:13:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: include/asm-frv/page.h:18:
+#define copy_page(to,from)			memcpy((to), (from), PAGE_SIZE)
                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1667: FILE: include/asm-frv/page.h:26:
+typedef struct { unsigned long pte;	} pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1668: FILE: include/asm-frv/page.h:27:
+typedef struct { unsigned long ste[64];	} pmd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1669: FILE: include/asm-frv/page.h:28:
+typedef struct { pmd_t         pge[1];	} pgd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1670: FILE: include/asm-frv/page.h:29:
+typedef struct { unsigned long pgprot;	} pgprot_t;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1677: FILE: include/asm-frv/page.h:36:
+#define __pte(x)	((pte_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1678: FILE: include/asm-frv/page.h:37:
+#define __pmd(x)	((pmd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1679: FILE: include/asm-frv/page.h:38:
+#define __pgd(x)	((pgd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1680: FILE: include/asm-frv/page.h:39:
+#define __pgprot(x)	((pgprot_t) { (x) } )

CHECK:SPACING: No space is necessary after a cast
#1703: FILE: include/asm-frv/page.h:62:
+#define __pa(vaddr)		virt_to_phys((void *) vaddr)

CHECK:SPACING: No space is necessary after a cast
#1704: FILE: include/asm-frv/page.h:63:
+#define __va(paddr)		phys_to_virt((unsigned long) paddr)

CHECK:SPACING: No space is necessary after a cast
#1714: FILE: include/asm-frv/page.h:73:
+#define page_to_pfn(page)	((unsigned long) ((page) - mem_map))

CHECK:SPACING: No space is necessary after a cast
#1719: FILE: include/asm-frv/page.h:78:
+#define page_to_pfn(page)	((PAGE_OFFSET >> PAGE_SHIFT) + (unsigned long) ((page) - mem_map))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pfn' - possible side-effects?
#1720: FILE: include/asm-frv/page.h:79:
+#define pfn_valid(pfn)		((pfn) >= min_low_pfn && (pfn) < max_low_pfn)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1727: FILE: include/asm-frv/page.h:86:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1731: FILE: include/asm-frv/page.h:90:
+	((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1750: FILE: include/asm-frv/param.h:1:
+#ifndef _ASM_PARAM_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1777: FILE: include/asm-frv/pci.h:1:
+/* pci.h: FR-V specific PCI declarations

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1806: FILE: include/asm-frv/pci.h:30:
+extern void pcibios_set_master(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1808: FILE: include/asm-frv/pci.h:32:
+extern void pcibios_penalize_isa_irq(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1811: FILE: include/asm-frv/pci.h:35:
+extern void *consistent_alloc(int gfp, size_t size, dma_addr_t *dma_handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1812: FILE: include/asm-frv/pci.h:36:
+extern void consistent_free(void *vaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1813: FILE: include/asm-frv/pci.h:37:
+extern void consistent_sync(void *vaddr, size_t size, int direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1814: FILE: include/asm-frv/pci.h:38:
+extern void consistent_sync_page(struct page *page, unsigned long offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1818: FILE: include/asm-frv/pci.h:42:
+extern void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1821: FILE: include/asm-frv/pci.h:45:
+extern void pci_free_consistent(struct pci_dev *hwdev, size_t size,

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#1837: FILE: include/asm-frv/pci.h:61:
+ *	These are pretty much arbitary with the CoMEM implementation.
   	                      ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1857: FILE: include/asm-frv/pci.h:81:
+                BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1857: FILE: include/asm-frv/pci.h:81:
+                BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1857: FILE: include/asm-frv/pci.h:81:
+                BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1859: FILE: include/asm-frv/pci.h:83:
+^Ifrv_cache_wback_inv((unsigned long)bus_to_virt(dma_handle), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1876: FILE: include/asm-frv/pci.h:100:
+                BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1876: FILE: include/asm-frv/pci.h:100:
+                BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1876: FILE: include/asm-frv/pci.h:100:
+                BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1880: FILE: include/asm-frv/pci.h:104:
+				    sg_dma_address(&sg[i])+sg_dma_len(&sg[i]));
 				                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1883: FILE: include/asm-frv/pci.h:107:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1889: FILE: include/asm-frv/percpu.h:1:
+#ifndef __ASM_PERCPU_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1899: FILE: include/asm-frv/pgalloc.h:1:
+/* pgalloc.h: Page allocation routines for FRV

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1923: FILE: include/asm-frv/pgalloc.h:25:
+#define pmd_populate(MM, PMD, PAGE)						\
+do {										\
+	__set_pmd((PMD), page_to_pfn(PAGE) << PAGE_SHIFT | _PAGE_TABLE);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1926: FILE: include/asm-frv/pgalloc.h:28:
+} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1932: FILE: include/asm-frv/pgalloc.h:34:
+extern void pgd_free(pgd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1934: FILE: include/asm-frv/pgalloc.h:36:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1934: FILE: include/asm-frv/pgalloc.h:36:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1934: FILE: include/asm-frv/pgalloc.h:36:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1936: FILE: include/asm-frv/pgalloc.h:38:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1936: FILE: include/asm-frv/pgalloc.h:38:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1936: FILE: include/asm-frv/pgalloc.h:38:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1948: FILE: include/asm-frv/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte)		tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1948: FILE: include/asm-frv/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte)		tlb_remove_page((tlb),(pte))
                                		                     ^

CHECK:SPACING: No space is necessary after a cast
#1955: FILE: include/asm-frv/pgalloc.h:57:
+#define pmd_alloc_one(mm, addr)		({ BUG(); ((pmd_t *) 2); })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1955: FILE: include/asm-frv/pgalloc.h:57:
+#define pmd_alloc_one(mm, addr)		({ BUG(); ((pmd_t *) 2); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: include/asm-frv/pgalloc.h:59:
+#define __pmd_free_tlb(tlb,x)		do { } while (0)
                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1958: FILE: include/asm-frv/pgalloc.h:60:
+#define pgd_populate(mm, pmd, pte)	BUG()

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1969: FILE: include/asm-frv/pgtable.h:1:
+/* pgtable.h: FR-V page table mangling

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1990: FILE: include/asm-frv/pgtable.h:22:
+#include <asm/processor.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2001: FILE: include/asm-frv/pgtable.h:33:
+typedef unsigned long pte_addr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2003: FILE: include/asm-frv/pgtable.h:35:
+typedef pte_t *pte_addr_t;

CHECK:SPACING: No space is necessary after a cast
#2018: FILE: include/asm-frv/pgtable.h:50:
+#define	pmd_offset(a, b)	((void *) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2028: FILE: include/asm-frv/pgtable.h:60:
+#define __swp_entry(typ,off)	((swp_entry_t) { ((typ) | ((off) << 7)) })
                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2036: FILE: include/asm-frv/pgtable.h:68:
+#define ZERO_PAGE(vaddr)	({ BUG(); NULL; })

CHECK:SPACING: No space is necessary after a cast
#2038: FILE: include/asm-frv/pgtable.h:70:
+#define swapper_pg_dir		((pgd_t *) NULL)

ERROR:SPACING: space required before the open parenthesis '('
#2040: FILE: include/asm-frv/pgtable.h:72:
+#define pgtable_cache_init()	do {} while(0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2091: FILE: include/asm-frv/pgtable.h:123:
+#define PGDIR_SIZE		(1UL << PGDIR_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2096: FILE: include/asm-frv/pgtable.h:128:
+#define PMD_SIZE		(1UL << PMD_SHIFT)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2120: FILE: include/asm-frv/pgtable.h:152:
+	printk("%s:%d: bad pte %08lx.\n", __FILE__, __LINE__, (e).pte)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2122: FILE: include/asm-frv/pgtable.h:154:
+	printk("%s:%d: bad pmd %08lx.\n", __FILE__, __LINE__, pmd_val(e))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2124: FILE: include/asm-frv/pgtable.h:156:
+	printk("%s:%d: bad pgd %08lx.\n", __FILE__, __LINE__, pmd_val(pgd_val(e)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteptr' - possible side-effects?
#2141: FILE: include/asm-frv/pgtable.h:173:
+#define set_pte(pteptr, pteval)				\
+do {							\
+	*(pteptr) = (pteval);				\
+	asm volatile("dcf %M0" :: "U"(*pteptr));	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2145: FILE: include/asm-frv/pgtable.h:177:
+} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2155: FILE: include/asm-frv/pgtable.h:187:
+extern void __set_pmd(pmd_t *pmdptr, unsigned long __pmd);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2157: FILE: include/asm-frv/pgtable.h:189:
+#define set_pmd(pmdptr, pmdval)			\
+do {						\
+	__set_pmd((pmdptr), (pmdval).ste[0]);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2160: FILE: include/asm-frv/pgtable.h:192:
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#2162: FILE: include/asm-frv/pgtable.h:194:
+#define pgd_page(pgd)				((unsigned long) __va(pgd_val(pgd) & PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#2168: FILE: include/asm-frv/pgtable.h:200:
+	return (pmd_t *) dir + __pmd_index(address);

CHECK:SPACING: No space is necessary after a cast
#2178: FILE: include/asm-frv/pgtable.h:210:
+#define VMALLOC_VMADDR(x)	((unsigned long) (x))

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_V_BIT>
#2185: FILE: include/asm-frv/pgtable.h:217:
+#define _PAGE_BIT_PRESENT	xAMPRx_V_BIT

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP_BIT>
#2186: FILE: include/asm-frv/pgtable.h:218:
+#define _PAGE_BIT_WP		DAMPRx_WP_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C_BIT>
#2187: FILE: include/asm-frv/pgtable.h:219:
+#define _PAGE_BIT_NOCACHE	xAMPRx_C_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S_BIT>
#2188: FILE: include/asm-frv/pgtable.h:220:
+#define _PAGE_BIT_SUPER		xAMPRx_S_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED8_BIT>
#2189: FILE: include/asm-frv/pgtable.h:221:
+#define _PAGE_BIT_ACCESSED	xAMPRx_RESERVED8_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_M_BIT>
#2190: FILE: include/asm-frv/pgtable.h:222:
+#define _PAGE_BIT_DIRTY		xAMPRx_M_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_NG_BIT>
#2191: FILE: include/asm-frv/pgtable.h:223:
+#define _PAGE_BIT_NOTGLOBAL	xAMPRx_NG_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_V>
#2193: FILE: include/asm-frv/pgtable.h:225:
+#define _PAGE_PRESENT		xAMPRx_V

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP>
#2194: FILE: include/asm-frv/pgtable.h:226:
+#define _PAGE_WP		DAMPRx_WP

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C>
#2195: FILE: include/asm-frv/pgtable.h:227:
+#define _PAGE_NOCACHE		xAMPRx_C

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S>
#2196: FILE: include/asm-frv/pgtable.h:228:
+#define _PAGE_SUPER		xAMPRx_S

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED8>
#2197: FILE: include/asm-frv/pgtable.h:229:
+#define _PAGE_ACCESSED		xAMPRx_RESERVED8	/* accessed if set */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_M>
#2198: FILE: include/asm-frv/pgtable.h:230:
+#define _PAGE_DIRTY		xAMPRx_M

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_NG>
#2199: FILE: include/asm-frv/pgtable.h:231:
+#define _PAGE_NOTGLOBAL		xAMPRx_NG

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED13>
#2201: FILE: include/asm-frv/pgtable.h:233:
+#define _PAGE_RESERVED_MASK	(xAMPRx_RESERVED8 | xAMPRx_RESERVED13)

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_16Kb>
#2209: FILE: include/asm-frv/pgtable.h:241:
+	(_PAGE_PRESENT | xAMPRx_SS_16Kb | xAMPRx_D | _PAGE_NOTGLOBAL | _PAGE_ACCESSED)

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_D>
#2209: FILE: include/asm-frv/pgtable.h:241:
+	(_PAGE_PRESENT | xAMPRx_SS_16Kb | xAMPRx_D | _PAGE_NOTGLOBAL | _PAGE_ACCESSED)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2260: FILE: include/asm-frv/pgtable.h:292:
+#define pte_clear(xp)	do { set_pte(xp, __pte(0)); } while (0)

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS>
#2264: FILE: include/asm-frv/pgtable.h:296:
+#define	pmd_bad(x)	(pmd_val(x) & xAMPRx_SS)

ERROR:SPACING: space required before the open parenthesis '('
#2265: FILE: include/asm-frv/pgtable.h:297:
+#define pmd_clear(xp)	do { __set_pmd(xp, 0); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2265: FILE: include/asm-frv/pgtable.h:297:
+#define pmd_clear(xp)	do { __set_pmd(xp, 0); } while(0)

CHECK:SPACING: No space is necessary after a cast
#2268: FILE: include/asm-frv/pgtable.h:300:
+	((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2274: FILE: include/asm-frv/pgtable.h:306:
+#define pages_to_mb(x) ((x) >> (20-PAGE_SHIFT))
                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2300: FILE: include/asm-frv/pgtable.h:332:
+	int i = test_and_clear_bit(_PAGE_BIT_DIRTY, ptep);
+	asm volatile("dcf %M0" :: "U"(*ptep));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2307: FILE: include/asm-frv/pgtable.h:339:
+	int i = test_and_clear_bit(_PAGE_BIT_ACCESSED, ptep);
+	asm volatile("dcf %M0" :: "U"(*ptep));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2314: FILE: include/asm-frv/pgtable.h:346:
+	unsigned long x = xchg(&ptep->pte, 0);
+	asm volatile("dcf %M0" :: "U"(*ptep));

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#2351: FILE: include/asm-frv/pgtable.h:383:
+#define pgd_index(address) ((address >> PGDIR_SHIFT) & (PTRS_PER_PGD - 1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#2355: FILE: include/asm-frv/pgtable.h:387:
+#define __pte_index(address) ((address >> PAGE_SHIFT) & (PTRS_PER_PTE - 1))

CHECK:SPACING: No space is necessary after a cast
#2356: FILE: include/asm-frv/pgtable.h:388:
+#define pte_offset(dir, address) ((pte_t *) pmd_page(*(dir)) + __pte_index(address))

CHECK:SPACING: No space is necessary after a cast
#2367: FILE: include/asm-frv/pgtable.h:399:
+	((pte_t *) pmd_page_kernel(*(dir)) +  pte_index(address))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2371: FILE: include/asm-frv/pgtable.h:403:
+	((pte_t *)kmap_atomic(pmd_page(*(dir)),KM_PTE0) + pte_index(address))
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2373: FILE: include/asm-frv/pgtable.h:405:
+	((pte_t *)kmap_atomic(pmd_page(*(dir)),KM_PTE1) + pte_index(address))
 	                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#2396: FILE: include/asm-frv/pgtable.h:428:
+#define __pte_to_swp_entry(pte)		((swp_entry_t) { (pte).pte })

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_L>
#2435: FILE: include/asm-frv/pgtable.h:467:
+	ampr |= xAMPRx_L | xAMPRx_SS_16Kb | xAMPRx_S | xAMPRx_C | xAMPRx_V;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2447: FILE: include/asm-frv/pgtable.h:479:
+extern char *proc_pid_status_frv_cxnr(struct mm_struct *mm, char *buffer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2450: FILE: include/asm-frv/pgtable.h:482:
+extern void __init pgtable_cache_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2456: FILE: include/asm-frv/pgtable.h:488:
+extern void __init paging_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2464: FILE: include/asm-frv/poll.h:1:
+#ifndef _ASM_POLL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2491: FILE: include/asm-frv/posix_types.h:1:
+#ifndef _ASM_POSIX_TYPES_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2500: FILE: include/asm-frv/posix_types.h:10:
+typedef unsigned long	__kernel_ino_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2501: FILE: include/asm-frv/posix_types.h:11:
+typedef unsigned short	__kernel_mode_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2502: FILE: include/asm-frv/posix_types.h:12:
+typedef unsigned short	__kernel_nlink_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2503: FILE: include/asm-frv/posix_types.h:13:
+typedef long		__kernel_off_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2504: FILE: include/asm-frv/posix_types.h:14:
+typedef int		__kernel_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2505: FILE: include/asm-frv/posix_types.h:15:
+typedef unsigned short	__kernel_ipc_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2506: FILE: include/asm-frv/posix_types.h:16:
+typedef unsigned short	__kernel_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2507: FILE: include/asm-frv/posix_types.h:17:
+typedef unsigned short	__kernel_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2508: FILE: include/asm-frv/posix_types.h:18:
+typedef unsigned int	__kernel_size_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2509: FILE: include/asm-frv/posix_types.h:19:
+typedef int		__kernel_ssize_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2510: FILE: include/asm-frv/posix_types.h:20:
+typedef int		__kernel_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2511: FILE: include/asm-frv/posix_types.h:21:
+typedef long		__kernel_time_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2512: FILE: include/asm-frv/posix_types.h:22:
+typedef long		__kernel_suseconds_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2513: FILE: include/asm-frv/posix_types.h:23:
+typedef long		__kernel_clock_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2514: FILE: include/asm-frv/posix_types.h:24:
+typedef int		__kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2515: FILE: include/asm-frv/posix_types.h:25:
+typedef int		__kernel_clockid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2516: FILE: include/asm-frv/posix_types.h:26:
+typedef int		__kernel_daddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2517: FILE: include/asm-frv/posix_types.h:27:
+typedef char *		__kernel_caddr_t;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#2517: FILE: include/asm-frv/posix_types.h:27:
+typedef char *		__kernel_caddr_t;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2518: FILE: include/asm-frv/posix_types.h:28:
+typedef unsigned short	__kernel_uid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2519: FILE: include/asm-frv/posix_types.h:29:
+typedef unsigned short	__kernel_gid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2520: FILE: include/asm-frv/posix_types.h:30:
+typedef unsigned int	__kernel_uid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2521: FILE: include/asm-frv/posix_types.h:31:
+typedef unsigned int	__kernel_gid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2523: FILE: include/asm-frv/posix_types.h:33:
+typedef unsigned short	__kernel_old_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2524: FILE: include/asm-frv/posix_types.h:34:
+typedef unsigned short	__kernel_old_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2525: FILE: include/asm-frv/posix_types.h:35:
+typedef unsigned short	__kernel_old_dev_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2528: FILE: include/asm-frv/posix_types.h:38:
+typedef long long	__kernel_loff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2531: FILE: include/asm-frv/posix_types.h:41:
+typedef struct {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#2542: FILE: include/asm-frv/posix_types.h:52:
+#define	__FD_SET(d, set)	((set)->fds_bits[__FDELT(d)] |= __FDMASK(d))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#2545: FILE: include/asm-frv/posix_types.h:55:
+#define	__FD_CLR(d, set)	((set)->fds_bits[__FDELT(d)] &= ~__FDMASK(d))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#2548: FILE: include/asm-frv/posix_types.h:58:
+#define	__FD_ISSET(d, set)	(!!((set)->fds_bits[__FDELT(d)] & __FDMASK(d)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2551: FILE: include/asm-frv/posix_types.h:61:
+#define __FD_ZERO(fdsetp) (memset (fdsetp, 0, sizeof(*(fd_set *)fdsetp)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fdsetp' - possible side-effects?
#2551: FILE: include/asm-frv/posix_types.h:61:
+#define __FD_ZERO(fdsetp) (memset (fdsetp, 0, sizeof(*(fd_set *)fdsetp)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2561: FILE: include/asm-frv/processor.h:1:
+/* processor.h: FRV processor definitions

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2583: FILE: include/asm-frv/processor.h:23:
+#define current_text_addr() ({ __label__ _l; _l: &&_l;})
                                                      ^

WARNING:INCLUDE_LINUX: Use #include <linux/cache.h> instead of <asm/cache.h>
#2592: FILE: include/asm-frv/processor.h:32:
+#include <asm/cache.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#2633: FILE: include/asm-frv/processor.h:73:
+} __attribute__((aligned(8)));

CHECK:SPACING: No space is necessary after a cast
#2643: FILE: include/asm-frv/processor.h:83:
+	(sizeof(init_stack) + (unsigned long) init_stack - sizeof(struct user_context)))

CHECK:SPACING: No space is necessary after a cast
#2647: FILE: include/asm-frv/processor.h:87:
+	(struct task_struct *) init_stack,	\

ERROR:SPACING: space required before the open parenthesis '('
#2665: FILE: include/asm-frv/processor.h:105:
+} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2667: FILE: include/asm-frv/processor.h:107:
+extern void prepare_to_copy(struct task_struct *tsk);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2674: FILE: include/asm-frv/processor.h:114:
+extern asmlinkage int kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2692: FILE: include/asm-frv/processor.h:132:
+extern unsigned long thread_saved_pc(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2700: FILE: include/asm-frv/processor.h:140:
+extern struct task_struct *alloc_task_struct(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2701: FILE: include/asm-frv/processor.h:141:
+extern void free_task_struct(struct task_struct *p);

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_PREFETCH' is wrong - use Kconfig variables or standard guards instead
#2706: FILE: include/asm-frv/processor.h:146:
+#define ARCH_HAS_PREFETCH

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2718: FILE: include/asm-frv/ptrace.h:1:
+/* ptrace.h: ptrace() relevant definitions

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2735: FILE: include/asm-frv/ptrace.h:18:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#2752: FILE: include/asm-frv/ptrace.h:35:
+#define PT_GR(j)	( 14 + (j))	/* GRj for 0<=j<=63 */

ERROR:SPACING: space prohibited after that open parenthesis '('
#2753: FILE: include/asm-frv/ptrace.h:36:
+#define PT_FR(j)	( 78 + (j))	/* FRj for 0<=j<=63 */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2768: FILE: include/asm-frv/ptrace.h:51:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#2788: FILE: include/asm-frv/ptrace.h:71:
+#define container_of(ptr, type, member) ({			\
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);	\
+        (type *)( (char *)__mptr - offsetof(type,member) );})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'member' may be better as '(member)' to avoid precedence issues
#2788: FILE: include/asm-frv/ptrace.h:71:
+#define container_of(ptr, type, member) ({			\
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);	\
+        (type *)( (char *)__mptr - offsetof(type,member) );})

ERROR:CODE_INDENT: code indent should use tabs where possible
#2789: FILE: include/asm-frv/ptrace.h:72:
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2789: FILE: include/asm-frv/ptrace.h:72:
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);^I\$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2789: FILE: include/asm-frv/ptrace.h:72:
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);	\
                                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2789: FILE: include/asm-frv/ptrace.h:72:
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2789: FILE: include/asm-frv/ptrace.h:72:
+        const typeof( ((type *)0)->member ) *__mptr = (ptr);	\

ERROR:CODE_INDENT: code indent should use tabs where possible
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})
                                                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})
                                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2790: FILE: include/asm-frv/ptrace.h:73:
+        (type *)( (char *)__mptr - offsetof(type,member) );})

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2798: FILE: include/asm-frv/ptrace.h:81:
+extern unsigned long user_stack(const struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct pt_regs *' should also have an identifier name
#2798: FILE: include/asm-frv/ptrace.h:81:
+extern unsigned long user_stack(const struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2799: FILE: include/asm-frv/ptrace.h:82:
+extern void show_regs(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#2799: FILE: include/asm-frv/ptrace.h:82:
+extern void show_regs(struct pt_regs *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 238 errors, 162 warnings, 308 checks, 2613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232873.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
