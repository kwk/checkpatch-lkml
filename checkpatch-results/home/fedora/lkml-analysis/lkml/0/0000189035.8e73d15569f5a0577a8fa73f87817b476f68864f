CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#28: 
Jörn
 ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#36: 
Signed-off-by: Jörn Engel <joern@wohnheim.fh-wedel.de>
                ^

CHECK:CAMELCASE: Avoid CamelCase: <msBlk>
#49: FILE: fs/squashfs/inode.c:114:
+	squashfs_sb_info *msBlk = s->s_fs_info;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#95: FILE: fs/squashfs/inode.c:469:
+				if (!(msBlk->fragment[i].data = kmalloc

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: fs/squashfs/inode.c:839:
+	if (!(s->s_fs_info = kmalloc(sizeof(squashfs_sb_info), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#139: FILE: fs/squashfs/inode.c:915:
+	if (!(msBlk->block_cache = kmalloc(sizeof(squashfs_cache) *

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#149: FILE: fs/squashfs/inode.c:931:
+	if (!(msBlk->read_data = kmalloc(msBlk->read_size, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#157: FILE: fs/squashfs/inode.c:938:
+		if (!(msBlk->read_page = kmalloc(sBlk->block_size,

CHECK:CAMELCASE: Avoid CamelCase: <sBlk>
#157: FILE: fs/squashfs/inode.c:938:
+		if (!(msBlk->read_page = kmalloc(sBlk->block_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: fs/squashfs/inode.c:939:
+		if (!(msBlk->read_page = kmalloc(sBlk->block_size,
 					GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#166: FILE: fs/squashfs/inode.c:947:
+	if (!(msBlk->uid = kmalloc((sBlk->no_uids +

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: fs/squashfs/inode.c:981:
+	if (!(msBlk->fragment = kmalloc(sizeof(struct squashfs_fragment_cache) *

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*msBlk->fragment)...) over kmalloc(sizeof(struct squashfs_fragment_cache)...)
#177: FILE: fs/squashfs/inode.c:981:
+	if (!(msBlk->fragment = kmalloc(sizeof(struct squashfs_fragment_cache) *

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sBlk->fragments'
#187: FILE: fs/squashfs/inode.c:997:
+	if (!(msBlk->fragment_index = kmalloc(SQUASHFS_FRAGMENT_INDEX_BYTES
 					(sBlk->fragments), GFP_KERNEL))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#187: FILE: fs/squashfs/inode.c:997:
+	if (!(msBlk->fragment_index = kmalloc(SQUASHFS_FRAGMENT_INDEX_BYTES

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#269: FILE: fs/squashfs/inode.c:1699:
+	if (!(stream.workspace = vmalloc(zlib_inflate_workspacesize()))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 0 warnings, 7 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
