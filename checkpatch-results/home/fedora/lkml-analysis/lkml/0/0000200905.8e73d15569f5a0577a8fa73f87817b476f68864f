ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#52: FILE: drivers/char/raw.c:390:
+	struct kiocb* iocb = bio->bi_private;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#53: FILE: drivers/char/raw.c:391:
+	atomic_t* bio_count = (atomic_t*) &iocb->private;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#53: FILE: drivers/char/raw.c:391:
+	atomic_t* bio_count = (atomic_t*) &iocb->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#53: FILE: drivers/char/raw.c:391:
+	atomic_t* bio_count = (atomic_t*) &iocb->private;

CHECK:BRACES: braces {} should be used on all arms of this statement
#55: FILE: drivers/char/raw.c:393:
+	if ((bio->bi_rw & 0x1) == READ)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#57: FILE: drivers/char/raw.c:395:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/char/raw.c:399:
+^I        for (i = 0; i < bio->bi_vcnt; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/char/raw.c:413:
+static ssize_t raw_file_aio_rw(struct kiocb *iocb, char __user *buf,
+				size_t count, loff_t pos, int rw)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: drivers/char/raw.c:415:
+	struct inode * inode = iocb->ki_filp->f_mapping->host;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxW)
#80: FILE: drivers/char/raw.c:417:
+	unsigned long blocksize_mask = (1<< blkbits) - 1;
 	                                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#81: FILE: drivers/char/raw.c:418:
+	struct page * quick_list[PAGE_QUICK_LIST];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: drivers/char/raw.c:420:
+	struct bio * bio;

CHECK:SPACING: No space is necessary after a cast
#85: FILE: drivers/char/raw.c:422:
+	unsigned long addr = (unsigned long) buf;

CHECK:SPACING: No space is necessary after a cast
#88: FILE: drivers/char/raw.c:425:
+	atomic_t *bio_count = (atomic_t *) &iocb->private;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/char/raw.c:432:
+	if (addr & blocksize_mask || count & blocksize_mask ||
+		count < 0 || pos & blocksize_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#112: FILE: drivers/char/raw.c:449:
+	if (unlikely(bio == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: drivers/char/raw.c:450:
+		if (atomic_read(bio_count) == 1)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#115: FILE: drivers/char/raw.c:452:
+			return -ENOMEM;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#115: FILE: drivers/char/raw.c:452:
+		else {

CHECK:SPACING: No space is necessary after a cast
#116: FILE: drivers/char/raw.c:453:
+			iocb->ki_nbytes = addr - (unsigned long) buf;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/char/raw.c:473:
+			ret = get_user_pages(current, current->mm, addr,
+						min(nr_pages, PAGE_QUICK_LIST),

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#137: FILE: drivers/char/raw.c:474:
+						rw==READ, 0, quick_list, NULL);
 						  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#141: FILE: drivers/char/raw.c:478:
+				if (atomic_read(bio_count) == 1)
[...]
+				else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#143: FILE: drivers/char/raw.c:480:
+					return ret;
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#143: FILE: drivers/char/raw.c:480:
+				else {

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/char/raw.c:481:
+					iocb->ki_nbytes = addr - (unsigned long) buf;

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/char/raw.c:493:
+			pos += addr - (unsigned long) buf;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: drivers/char/raw.c:509:
+	if (atomic_dec_and_test(bio_count)) {
+		aio_complete(iocb, iocb->ki_nbytes, 0);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/char/raw.c:522:
+static ssize_t raw_file_aio_write(struct kiocb *iocb, const char __user *buf,
+					size_t count, loff_t pos)

CHECK:SPACING: No space is necessary after a cast
#187: FILE: drivers/char/raw.c:524:
+	return raw_file_aio_rw(iocb, (char __user *) buf, count, pos, WRITE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: drivers/char/raw.c:529:
+^I.aio_read = ^Iraw_file_aio_read,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200905.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 4 warnings, 19 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200905.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
