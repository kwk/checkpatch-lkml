ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/drivers/scsi/hosts.c	Mon Sep 16 15:29:45 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/scsi/hosts.h:591:
+            SDpnt = SDpnt->sdev_next)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/scsi/hosts.h:591:
+            SDpnt = SDpnt->sdev_next)$

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#102: FILE: drivers/scsi/hosts.h:591:
+            SDpnt = SDpnt->sdev_next)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#114: FILE: drivers/scsi/hosts.h:603:
+static inline int scsihost_to_node(struct Scsi_Host *host)

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/scsi/hosts.h:605:
+        if (!host) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/scsi/hosts.h:605:
+        if (!host) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/scsi/hosts.h:606:
+                printk("%s: host == NULL \n", __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/scsi/hosts.h:606:
+                printk("%s: host == NULL \n", __FUNCTION__);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: drivers/scsi/hosts.h:606:
+                printk("%s: host == NULL \n", __FUNCTION__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#117: FILE: drivers/scsi/hosts.h:606:
+                printk("%s: host == NULL \n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#117: FILE: drivers/scsi/hosts.h:606:
+                printk("%s: host == NULL \n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/scsi/hosts.h:607:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/scsi/hosts.h:607:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/scsi/hosts.h:608:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/scsi/hosts.h:608:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/scsi/hosts.h:609:
+        if(host->pci_dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/scsi/hosts.h:609:
+        if(host->pci_dev)$

ERROR:SPACING: space required before the open parenthesis '('
#120: FILE: drivers/scsi/hosts.h:609:
+        if(host->pci_dev)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/scsi/hosts.h:610:
+                return pcidev_to_node(host->pci_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/scsi/hosts.h:610:
+                return pcidev_to_node(host->pci_dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: drivers/scsi/hosts.h:615:
+        printk("%s: Unable to determine bus type\n", __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/scsi/hosts.h:615:
+        printk("%s: Unable to determine bus type\n", __FUNCTION__);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: drivers/scsi/hosts.h:615:
+        printk("%s: Unable to determine bus type\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#126: FILE: drivers/scsi/hosts.h:615:
+        printk("%s: Unable to determine bus type\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/scsi/hosts.h:616:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/scsi/hosts.h:616:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/scsi/hosts.h:619:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/scsi/hosts.h:620:
+ * In the absence of NUMA, assign to node 0 $

WARNING:TYPO_SPELLING: 'interruptable' may be misspelled - perhaps 'interruptible'?
#164: FILE: drivers/scsi/scsi.c:383:
+                                int interruptable, struct scsi_path_id *path_p)
                                     ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: drivers/scsi/scsi.c:383:
+                                int interruptable, struct scsi_path_id *path_p)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/scsi/scsi.c:383:
+                                int interruptable, struct scsi_path_id *path_p)$

CHECK:CAMELCASE: Avoid CamelCase: <STrav_hndl>
#170: FILE: drivers/scsi/scsi.c:389:
+	scsi_traverse_hndl_t STrav_hndl;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: drivers/scsi/scsi.c:394:
+  ^Ihost = path_p->spi_shpnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: drivers/scsi/scsi.c:394:
+  ^Ihost = path_p->spi_shpnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/scsi/scsi.c:394:
+  ^Ihost = path_p->spi_shpnt;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/scsi/scsi.c:417:
+				scsi_for_each_sdev_lun(&STrav_hndl, SDpnt,
+						host->host_no,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/scsi/scsi.c:418:
+^I^I^I^I^I^Ipath_p->spi_channel, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#198: FILE: drivers/scsi/scsi.c:420:
+					if (SDpnt == device) {
  						continue;
 					}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#206: FILE: drivers/scsi/scsi.c:511:
+	scsi_path_set_scmnd_ids(SCpnt, path_p);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: drivers/scsi/scsi.c:608:
+	struct Scsi_Host * SHpnt;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#215: FILE: drivers/scsi/scsi.c:608:
+	struct Scsi_Host * SHpnt;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/scsi/scsi.c:622:
+        scsi_queue_next_request(q, NULL, SHpnt); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/scsi/scsi.c:622:
+        scsi_queue_next_request(q, NULL, SHpnt); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/scsi/scsi.c:622:
+        scsi_queue_next_request(q, NULL, SHpnt); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/scsi/scsi.c:691:
+^ISCSI_LOG_MLQUEUE(3, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/scsi/scsi.c:692:
+	SCSI_LOG_MLQUEUE(3, 
+		printk("scsi_dispatch_cmnd (host = %d, channel = %d, target"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/scsi/scsi.c:692:
+		printk("scsi_dispatch_cmnd (host = %d, channel = %d, target"

WARNING:SPLIT_STRING: quoted string split across lines
#241: FILE: drivers/scsi/scsi.c:693:
+		printk("scsi_dispatch_cmnd (host = %d, channel = %d, target"
+		       " = %d, lun = %d,\n command = %p, buffer = %p,"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#242: FILE: drivers/scsi/scsi.c:694:
+		       " = %d, lun = %d,\n command = %p, buffer = %p,"
+		       " bufflen = %d, done = %p)\n", SCpnt->host->host_no,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: drivers/scsi/scsi.c:816:
+			 printk("scsi_do_req (buffer =%p, bufflen = %d, done = "

WARNING:SPLIT_STRING: quoted string split across lines
#268: FILE: drivers/scsi/scsi.c:817:
+			 printk("scsi_do_req (buffer =%p, bufflen = %d, done = "
+				" %p, timeout = %d, retries = %d)\n command : ",

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#291: FILE: drivers/scsi/scsi.c:1195:
+				SCSI_LOG_MLCOMPLETE(3, printk("Requeuing IO %d %d 0x%x\n", SCpnt->host->host_busy,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: drivers/scsi/scsi.c:1195:
+				SCSI_LOG_MLCOMPLETE(3, printk("Requeuing IO %d %d 0x%x\n", SCpnt->host->host_busy,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/scsi/scsi.c:1196:
+				SCSI_LOG_MLCOMPLETE(3, printk("Requeuing IO %d %d 0x%x\n", SCpnt->host->host_busy,
+				SCpnt->host->host_failed, SCpnt->result));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: drivers/scsi/scsi.c:1408:
+	BUG_ON(host == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host"
#343: FILE: drivers/scsi/scsi.c:1408:
+	BUG_ON(host == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#520: FILE: drivers/scsi/scsi.c:1897:
+					if (0 == SDpnt->has_cmdblocks)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#555: FILE: drivers/scsi/scsi.c:1950:
+			if (shpnt2 && shpnt2->hostt == tpnt
+			    && shpnt2->hostt->module

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#556: FILE: drivers/scsi/scsi.c:1951:
+			    && shpnt2->hostt->module
+			    && GET_USE_COUNT(shpnt2->hostt->module))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#557: FILE: drivers/scsi/scsi.c:1952:
+				BUG();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#590: FILE: drivers/scsi/scsi.c:1991:
+				if ((SCpnt->request && SCpnt->request->rq_status != RQ_INACTIVE)
+				    && SCpnt->request->rq_status != RQ_SCSI_DISCONNECTING) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#596: FILE: drivers/scsi/scsi.c:1995:
+					scsi_for_each_host_sdev(&STrav_hndl, SDpnt1, shpnt->host_no) {

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt1>
#596: FILE: drivers/scsi/scsi.c:1995:
+					scsi_for_each_host_sdev(&STrav_hndl, SDpnt1, shpnt->host_no) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#622: FILE: drivers/scsi/scsi.c:2030:
+					printk(KERN_ERR "Attached usage count = %d\n", SDpnt->attached);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#622: FILE: drivers/scsi/scsi.c:2030:
+					printk(KERN_ERR "Attached usage count = %d\n", SDpnt->attached);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: drivers/scsi/scsi.c:2033:
+				devfs_unregister (SDpnt->de);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#717: FILE: drivers/scsi/scsi.c:2192:
+			if (0 == SDpnt->has_cmdblocks)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#812: FILE: drivers/scsi/scsi.c:2310:
+	printk(KERN_INFO "h:c:t:l (dev sect nsect cnumsec sg) (ret all flg) (to/cmd to ito) cmd snse result\n");

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#815: FILE: drivers/scsi/scsi.c:2313:
+			/*  (0) h:c:t:l (dev sect nsect cnumsec sg) (ret all flg) (to/cmd to ito) cmd snse result %d %x      */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#816: FILE: drivers/scsi/scsi.c:2314:
+			printk(KERN_INFO "(%3d) %2d:%1d:%2d:%2d (%6s %4ld %4ld %4ld %4x %1d) (%1d %1d 0x%2x) (%4d %4d %4d) 0x%2.2x 0x%2.2x 0x%8.8x\n",

CHECK:SPACING: No space is necessary after a cast
#878: FILE: drivers/scsi/scsi.c:2629:
+	if ((unsigned char) scsi_path.spi_id != (unsigned char)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#911: FILE: drivers/scsi/scsi.c:2687:
+^ISCpnt->host                    ^I= scsi_path.spi_shpnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#916: FILE: drivers/scsi/scsi.c:2689:
+^ISCpnt->target                  ^I= scsi_path.spi_id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#917: FILE: drivers/scsi/scsi.c:2690:
+^ISCpnt->lun                     ^I= scsi_path.spi_lun;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#918: FILE: drivers/scsi/scsi.c:2691:
+^ISCpnt->channel                 ^I= scsi_path.spi_channel;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#994: FILE: drivers/scsi/scsi_error.c:180:
+				printk("scsi_eh: device at ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#997: FILE: drivers/scsi/scsi_error.c:183:
+				printk(" cmds failed: %d, timedout: %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: drivers/scsi/scsi_error.c:184:
+^I^I^I^I       cmd_failed, cmd_timed_out); $

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#1020: FILE: drivers/scsi/scsi_error.c:259:
+int scsi_check_sense(Scsi_Cmnd *scmd)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1039: FILE: drivers/scsi/scsi_error.c:821:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: drivers/scsi/scsi_error.c:848:
+^I^ISCSI_LOG_TIMEOUT(3, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1067: FILE: drivers/scsi/scsi_error.c:849:
+		SCSI_LOG_TIMEOUT(3, 
+			printk("Requeuing timed out IO host %d channel %d id % d lun %d; result 0x%x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1067: FILE: drivers/scsi/scsi_error.c:849:
+			printk("Requeuing timed out IO host %d channel %d id % d lun %d; result 0x%x\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#1079: FILE: drivers/scsi/scsi_error.c:861:
+	if( scmd->host->eh_wait == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1079: FILE: drivers/scsi/scsi_error.c:861:
+	if( scmd->host->eh_wait == NULL ) {

ERROR:SPACING: space required before the open parenthesis '('
#1079: FILE: drivers/scsi/scsi_error.c:861:
+	if( scmd->host->eh_wait == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scmd->host->eh_wait"
#1079: FILE: drivers/scsi/scsi_error.c:861:
+	if( scmd->host->eh_wait == NULL ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1086: FILE: drivers/scsi/scsi_error.c:868:
+	SCSI_LOG_TIMEOUT(3, printk("Command timed out active=%d busy=%d "

WARNING:SPLIT_STRING: quoted string split across lines
#1087: FILE: drivers/scsi/scsi_error.c:869:
+	SCSI_LOG_TIMEOUT(3, printk("Command timed out active=%d busy=%d "
+				   "failed=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1128: FILE: drivers/scsi/scsi_error.c:1082:
+		scsi_for_each_host_chan_sdev(&strav_hndl, sdev,
+		     scmd->host->host_no, scmd->channel) {

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#1140: FILE: drivers/scsi/scsi_error.c:1098:
+	Scsi_Device *sdev;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: drivers/scsi/scsi_error.c:1119:
+		scsi_for_each_host_chan_sdev(&strav_hndl, sdev,
+		     scmd->host->host_no, scmd->channel) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1168: FILE: drivers/scsi/scsi_error.c:1175:
+		rtn = scsi_try_bus_reset(scmd); if (rtn != SUCCESS)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1184: FILE: drivers/scsi/scsi_error.c:1210:
+		printk(KERN_INFO "%s: device at ", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1184: FILE: drivers/scsi/scsi_error.c:1210:
+		printk(KERN_INFO "%s: device at ", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1187: FILE: drivers/scsi/scsi_error.c:1213:
+		printk(" set offline - not ready or command retry"

WARNING:SPLIT_STRING: quoted string split across lines
#1188: FILE: drivers/scsi/scsi_error.c:1214:
+		printk(" set offline - not ready or command retry"
+		       " failed after bus and host reset\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1198: FILE: drivers/scsi/scsi_error.c:1288:
+	if (rtn != UNKNOWN_ERROR) {
+		return(rtn);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1199: FILE: drivers/scsi/scsi_error.c:1289:
+		return(rtn);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431956.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 52 warnings, 21 checks, 1134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431956.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
