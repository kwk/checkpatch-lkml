WARNING:TYPO_SPELLING: 'necessay' may be misspelled - perhaps 'necessary'?
#47: 
isn't necessay, and ask the user to report the information in that case.
      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'adddress' may be misspelled - perhaps 'address'?
#49: 
information to me instead of the e-mail adddress listed in the patch).
                                        ^^^^^^^^

WARNING:TYPO_SPELLING: 'controled' may be misspelled - perhaps 'controlled'?
#78: 
	* Add support for flow controled serial console.  (Feature
	                       ^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: serial-console.txt:27:
+^I^I^I9600n8n. The maximum baudrate is 115200.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->flip.count < TTY_FLIPBUF_SIZE'
#218: FILE: char/serial.c:654:
+		if ((*status & UART_LSR_OE) &&
+		    (tty->flip.count < TTY_FLIPBUF_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: char/serial.c:827:
+		printk("IIR = %x...", serial_in(info, UART_IIR));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: char/serial.c:913:
+		printk("IIR = %x...", serial_in(info, UART_IIR));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: char/serial.c:1315:
+		printk("ttyS%d: LSR safety check engaged!\n", state->line);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#306: FILE: char/serial.c:3820:
+static void __devinit printk_pnp_dev_id(unsigned short vendor,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: char/serial.c:3821:
+static void __devinit printk_pnp_dev_id(unsigned short vendor,
 				     unsigned short device)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#315: FILE: char/serial.c:3912:
+static void __devinit start_pci_pnp_board(struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: char/serial.c:3913:
+static void __devinit start_pci_pnp_board(struct pci_dev *dev,
 				       struct pci_board *board)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#331: FILE: char/serial.c:3949:
+		for (k=0; k < NR_PCI_BOARDS; k++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#359: FILE: char/serial.c:3990:
+__devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#368: FILE: char/serial.c:4057:
+__devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#377: FILE: char/serial.c:4089:
+__devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#386: FILE: char/serial.c:4113:
+__devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#395: FILE: char/serial.c:4174:
+__devinit

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: char/serial.c:4592:
+^I^I8 },^I^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#414: FILE: char/serial.c:4642:
+static int __devinit serial_init_one(struct pci_dev *dev,

CHECK:SPACING: No space is necessary after a cast
#420: FILE: char/serial.c:4648:
+		if (board->vendor != (unsigned short) PCI_ANY_ID &&

CHECK:SPACING: No space is necessary after a cast
#423: FILE: char/serial.c:4651:
+		if (board->device != (unsigned short) PCI_ANY_ID &&

CHECK:SPACING: No space is necessary after a cast
#426: FILE: char/serial.c:4654:
+		if (board->subvendor != (unsigned short) PCI_ANY_ID &&

CHECK:SPACING: No space is necessary after a cast
#429: FILE: char/serial.c:4657:
+		if (board->subdevice != (unsigned short) PCI_ANY_ID &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#435: FILE: char/serial.c:4663:
+	if (board->vendor == 0 && serial_pci_guess_board(dev, board))
[...]
+	else if (serial_pci_guess_board(dev, &tmp) == 0) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#438: FILE: char/serial.c:4666:
+		printk(KERN_INFO "Redundant entry in serial pci_table.  "

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: char/serial.c:4667:
+		printk(KERN_INFO "Redundant entry in serial pci_table.  "
+		       "Please send the output of\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#442: FILE: char/serial.c:4670:
+		       "and the manufacturer and name of "
+		       "serial board or modem board\n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: char/serial.c:4675:
+^I^I       $

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#453: FILE: char/serial.c:4681:
+static void __devexit serial_remove_one(struct pci_dev *dev)

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: char/serial.c:4689:
+	for(i = 0; i < NR_PORTS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#470: FILE: char/serial.c:4698:
+	for (i=0; i < NR_PCI_BOARDS; i++) {
 	      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (brd->board.init_fn)
#476: FILE: char/serial.c:4704:
+			(brd->board.init_fn)(brd->dev, &brd->board, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: char/serial.c:4711:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#484: FILE: char/serial.c:4712:
+static struct pci_device_id serial_pci_tbl[] __devinitdata = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: char/serial.c:4713:
+       { PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: char/serial.c:4715:
+       { 0, }$

WARNING:INDENTED_LABEL: labels should not be indented
#493: FILE: char/serial.c:4721:
+       name:           "serial",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#494: FILE: char/serial.c:4722:
+       probe:          serial_init_one,
             ^

WARNING:INDENTED_LABEL: labels should not be indented
#494: FILE: char/serial.c:4722:
+       probe:          serial_init_one,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#495: FILE: char/serial.c:4723:
+       remove:	       serial_remove_one,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#495: FILE: char/serial.c:4723:
+       remove:	       serial_remove_one,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#496: FILE: char/serial.c:4724:
+       id_table:       serial_pci_tbl,
                ^

WARNING:INDENTED_LABEL: labels should not be indented
#496: FILE: char/serial.c:4724:
+       id_table:       serial_pci_tbl,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: char/serial.c:4735:
+static void __devinit probe_serial_pci(void) $

CHECK:SPACING: No space is necessary after a cast
#506: FILE: char/serial.c:4735:
+static void __devinit probe_serial_pci(void) 

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#506: FILE: char/serial.c:4735:
+static void __devinit probe_serial_pci(void) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: char/serial.c:4745:
+	if (pci_module_init (&serial_pci_driver) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&serial_pci_driver'
#543: FILE: char/serial.c:4745:
+	if (pci_module_init (&serial_pci_driver) != 0)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#554: FILE: char/serial.c:4763:
+static struct pnp_board pnp_devices[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#563: FILE: char/serial.c:5053:
+static char *modem_names[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#571: FILE: char/serial.c:5060:
+static int __devinit check_name(char *name)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#580: FILE: char/serial.c:5122:
+static void __devinit probe_serial_pnp(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: char/serial.c:5333:
+ * This is for use by architectures that know their serial console $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: char/serial.c:5346:
+^I^Irs_table[i].port += (unsigned long) req->port_high << $

CHECK:SPACING: No space is necessary after a cast
#610: FILE: char/serial.c:5346:
+		rs_table[i].port += (unsigned long) req->port_high << 

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#623: FILE: char/serial.c:5359:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#634: FILE: char/serial.c:5399:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rs_table[i].type == PORT_UNKNOWN'
#637: FILE: char/serial.c:5402:
+			if ((rs_table[i].type == PORT_UNKNOWN) &&
+			    (rs_table[i].count == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rs_table[i].count == 0'
#637: FILE: char/serial.c:5402:
+			if ((rs_table[i].type == PORT_UNKNOWN) &&
+			    (rs_table[i].count == 0))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#650: FILE: char/serial.c:5530:
+	for (i=0; i < NR_PCI_BOARDS; i++) {
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: char/serial.c:5546:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#669: FILE: char/serial.c:5549:
+		pci_unregister_driver (&serial_pci_driver);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#682: FILE: char/serial.c:5590:
+		while (--tmout &&
+		       ((serial_in(info, UART_MSR) & UART_MSR_CTS) == 0));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: char/serial.c:5592:
+^I}^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#710: FILE: char/serial.c:5699:
+		if (*s) bits   = *s++ - '0';

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#711: FILE: char/serial.c:5700:
+		if (*s) doflow = (*s++ == 'r');

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#747: FILE: linux/serial.h:182:
+extern int early_serial_setup(struct serial_struct *req);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#764: FILE: linux/serial_reg.h:160:
+#define UART_TFL ^I0x04^I/* Transmitter FIFO level */$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000561343.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 39 warnings, 17 checks, 612 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000561343.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
