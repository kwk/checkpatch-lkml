WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: serial.c:1408:
+ if (state->lmode_fn)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#94: FILE: serial.c:1408:
+ if (state->lmode_fn)
+  (state->lmode_fn)(state, TIOCSER485SET, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: serial.c:1409:
+  (state->lmode_fn)(state, TIOCSER485SET, NULL);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (state->lmode_fn)
#95: FILE: serial.c:1409:
+  (state->lmode_fn)(state, TIOCSER485SET, NULL);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: serial.c:2517:
+ struct serial_state * state = info->state;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: serial.c:2517:
+ struct serial_state * state = info->state;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: serial.c:2575:
+  case TIOCSER485GET:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: serial.c:2576:
+  case TIOCSER485SET:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: serial.c:2577:
+   if (state->lmode_fn)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#114: FILE: serial.c:2577:
+   if (state->lmode_fn)
+    return (state->lmode_fn)(state, cmd,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: serial.c:2578:
+    return (state->lmode_fn)(state, cmd,$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (state->lmode_fn)
#115: FILE: serial.c:2578:
+    return (state->lmode_fn)(state, cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: serial.c:2579:
+    return (state->lmode_fn)(state, cmd,
+       (unsigned int *) arg);

CHECK:SPACING: No space is necessary after a cast
#116: FILE: serial.c:2579:
+       (unsigned int *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: serial.c:2579:
+       (unsigned int *) arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: serial.c:2580:
+   else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#117: FILE: serial.c:2580:
+   else
+    return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: serial.c:2581:
+    return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: serial.c:3971:
+  rs_table[line].lmode_fn = board->lmode_fn;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#140: FILE: serial.c:4196:
{

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: serial.c:4197:
+ struct async_struct *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: serial.c:4198:
+ unsigned char port_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: serial.c:4199:
+ unsigned char portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: serial.c:4200:
+ unsigned char txctl_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: serial.c:4201:
+ unsigned char rxctl_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: serial.c:4202:
+ unsigned char differ_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: serial.c:4203:
+ unsigned char bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: serial.c:4204:
+ unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: serial.c:4206:
+ if (ioctl == TIOCSER485GET)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#150: FILE: serial.c:4206:
+ if (ioctl == TIOCSER485GET)
+  return put_user(state->lmode, value);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: serial.c:4207:
+  return put_user(state->lmode, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: serial.c:4209:
+ info = state->info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: serial.c:4210:
+ port_offset = state->port % 0x100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: serial.c:4211:
+ portmask = 1 << port_offset / 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: serial.c:4212:
+ txctl_offset = 0x6c - port_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: serial.c:4213:
+ rxctl_offset = 0x70 - port_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: serial.c:4215:
+ save_flags(flags); cli();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: serial.c:4216:
+ if (value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#160: FILE: serial.c:4216:
+ if (value)
+  state->lmode = *value;

CHECK:BRACES: braces {} should be used on all arms of this statement
#160: FILE: serial.c:4216:
+ if (value)
[...]
+ else if (state->lmode == TIOCSER485NOT_INITED) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: serial.c:4217:
+  state->lmode = *value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: serial.c:4218:
+ else if (state->lmode == TIOCSER485NOT_INITED) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#162: FILE: serial.c:4218:
+ else if (state->lmode == TIOCSER485NOT_INITED) {
+  differ_offset = 0x74 - port_offset;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: serial.c:4219:
+  differ_offset = 0x74 - port_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: serial.c:4220:
+  bits = serial_in(info, differ_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: serial.c:4221:
+  switch (bits) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#165: FILE: serial.c:4221:
+  switch (bits) {
+   case 0x03:
[...]
+   default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: serial.c:4222:
+   case 0x03:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: serial.c:4223:
+    state->lmode = TIOCSER485SLAVEMULTIPLEX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: serial.c:4224:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: serial.c:4226:
+    state->lmode = TIOCSER485FULLDUPLEX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: serial.c:4227:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: serial.c:4228:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: serial.c:4229:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: serial.c:4230:
+ bits = serial_in(info, txctl_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: serial.c:4231:
+ switch (state->lmode) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#175: FILE: serial.c:4231:
+ switch (state->lmode) {
+  default:
+  case TIOCSER485FULLDUPLEX:
[...]
+  case TIOCSER485HALFDUPLEX:
[...]
+  case TIOCSER485SLAVEMULTIPLEX:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: serial.c:4233:
+  case TIOCSER485FULLDUPLEX:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: serial.c:4234:
+   bits &= ~portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: serial.c:4235:
+   serial_out(info, txctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: serial.c:4237:
+   bits = serial_in(info, rxctl_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: serial.c:4238:
+   bits |= portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: serial.c:4239:
+   serial_out(info, rxctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: serial.c:4241:
+   serial_out(info, UART_LCR, 0xbf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: serial.c:4242:
+   bits = serial_in(info, UART_FCTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: serial.c:4243:
+   bits &= ~UART_FCTR_TX_INT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: serial.c:4244:
+   serial_out(info, UART_FCTR, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: serial.c:4245:
+   serial_out(info, UART_LCR, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: serial.c:4247:
+   restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: serial.c:4248:
+   return put_user(1, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: serial.c:4249:
+  case TIOCSER485HALFDUPLEX:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: serial.c:4250:
+   bits |= portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: serial.c:4251:
+   serial_out(info, txctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: serial.c:4253:
+   bits = serial_in(info, rxctl_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: serial.c:4254:
+   bits &= ~portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: serial.c:4255:
+   serial_out(info, rxctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: serial.c:4257:
+   serial_out(info, UART_LCR, 0xbf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: serial.c:4258:
+   bits = serial_in(info, UART_FCTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: serial.c:4259:
+   bits |= UART_FCTR_TX_INT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: serial.c:4260:
+   serial_out(info, UART_FCTR, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: serial.c:4261:
+   serial_out(info, UART_LCR, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: serial.c:4263:
+   restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: serial.c:4264:
+   return put_user(1, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: serial.c:4265:
+  case TIOCSER485SLAVEMULTIPLEX:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: serial.c:4266:
+   bits |= portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: serial.c:4267:
+   serial_out(info, txctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: serial.c:4269:
+   bits = serial_in(info, rxctl_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: serial.c:4270:
+   bits |= portmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: serial.c:4271:
+   serial_out(info, rxctl_offset, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: serial.c:4273:
+   serial_out(info, UART_LCR, 0xbf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: serial.c:4274:
+   bits = serial_in(info, UART_FCTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: serial.c:4275:
+   bits |= UART_FCTR_TX_INT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: serial.c:4276:
+   serial_out(info, UART_FCTR, bits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: serial.c:4277:
+   serial_out(info, UART_LCR, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: serial.c:4279:
+   restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: serial.c:4280:
+   return put_user(1, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: serial.c:4281:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: serial.c:4283:
+ restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: serial.c:4284:
+ return -EINVAL;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#231: FILE: serial.c:4287:
+int pci_cti485_4(struct serial_state *state, int ioctl, unsigned int
*value) {
+ int port = state->port;
+ int board_num = (port % 0x100) / 0x08;
+
+ if (board_num < 4)
+  return -ENOSYS;
+
+ return pci_cti485(state, ioctl, value);
+}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: serial.c:4288:
+ int port = state->port;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: serial.c:4289:
+ int board_num = (port % 0x100) / 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: serial.c:4291:
+ if (board_num < 4)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#236: FILE: serial.c:4291:
+ if (board_num < 4)
+  return -ENOSYS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: serial.c:4292:
+  return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#237: FILE: serial.c:4292:
+  return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: serial.c:4294:
+ return pci_cti485(state, ioctl, value);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#242: FILE: serial.c:4297:
+int pci_cti485_2(struct serial_state *state, int ioctl, unsigned int
*value) {
+ int port = state->port;
+ int board_num = (port % 0x100) / 0x08;
+
+ if (board_num < 2)
+  return -ENOSYS;
+
+ return pci_cti485(state, ioctl, value);
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: serial.c:4298:
+ int port = state->port;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: serial.c:4299:
+ int board_num = (port % 0x100) / 0x08;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: serial.c:4301:
+ if (board_num < 2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#247: FILE: serial.c:4301:
+ if (board_num < 2)
+  return -ENOSYS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: serial.c:4302:
+  return -ENOSYS;$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#248: FILE: serial.c:4302:
+  return -ENOSYS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: serial.c:4304:
+ return pci_cti485(state, ioctl, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: serial.c:4347:
+  SPCI_FL_BASE1, 8, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: serial.c:4348:
+  0, 0, NULL, 0, pci_cti485 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: serial.c:4352:
+  SPCI_FL_BASE1, 8, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: serial.c:4353:
+  0, 0, NULL, 0, pci_cti485_4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: serial.c:4357:
+  SPCI_FL_BASE1, 4, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: serial.c:4358:
+  0, 0, NULL, 0, pci_cti485 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: serial.c:4362:
+  SPCI_FL_BASE1, 4, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: serial.c:4363:
+  0, 0, NULL, 0, pci_cti485_2 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: serial.c:4367:
+  SPCI_FL_BASE1, 2, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: serial.c:4368:
+  0, 0, NULL, 0, pci_cti485 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: serial.c:4372:
+  SPCI_FL_BASE1, 8, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: serial.c:4373:
+  0, 0, NULL, 0, pci_cti485_2 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: serial.c:4377:
+  SPCI_FL_BASE1, 8, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: serial.c:4378:
+  0, 0, NULL, 0, pci_cti485 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: serial.c:4382:
+  SPCI_FL_BASE1, 4, 921600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: serial.c:4383:
+  0, 0, NULL, 0, pci_cti485 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: serialP.h:54:
+ int (*lmode_fn)(struct serial_state *state, int ioctl, unsigned int$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: serialP.h:55:
+ int lmode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: serialP.h:158:
+ int (*lmode_fn)(struct serial_state *state, int ioctl, unsigned int$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: serial.c:3565:
+ if (scratch == 0x10 || scratch == 0x12 || scratch == 0x14) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#355: FILE: serial.c:3565:
+ if (scratch == 0x10 || scratch == 0x12 || scratch == 0x14) {
   state->type = PORT_16850;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#368: FILE: serial.c:1232:
   if (state->type == PORT_16850) {
+   unsigned char fctr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: serial.c:1233:
+   unsigned char fctr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: serial.c:1235:
+   fctr = serial_inp(info, UART_FCTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: serial.c:1236:
+   fctr |= UART_FCTR_TRGD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: serial.c:1238:
+   fctr &= ~UART_FCTR_TX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: serial.c:1239:
+   serial_outp(info, UART_FCTR, fctr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: serial.c:1242:
+   fctr |= UART_FCTR_TX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: serial.c:1243:
+   serial_outp(info, UART_FCTR, fctr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: serial.c:5400:
+  printk(KERN_INFO "ttyS%d%s at 0x%04lx (irq = %d) is a %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#398: FILE: serial.c:5400:
+  printk(KERN_INFO "ttyS%d%s at 0x%04lx (irq = %d) is a %s\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: serial.c:5507:
+       printk(KERN_INFO "ttyS%d at %s 0x%04lx (irq = %d) is a %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#407: FILE: serial.c:5507:
+       printk(KERN_INFO "ttyS%d at %s 0x%04lx (irq = %d) is a %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: serial.c:5508:
+       printk(KERN_INFO "ttyS%d at %s 0x%04lx (irq = %d) is a %s\n",
        state->line + SERIAL_DEV_OFFSET,

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#422: FILE: serial.c:219:
+#if defined(LOCAL_HEADERS) || (LINUX_VERSION_CODE <= 0x02040E) /* 2.4.14 */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#427: FILE: serial.c:4800:
 static struct pci_device_id serial_pci_tbl[] __devinitdata = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: serial.c:4803:
+       { PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: serial.c:4804:
+  PCI_CLASS_COMMUNICATION_MULTISERIAL << 8, 0xffff00, },$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#862: FILE: serial_compat.h:198:
+#if defined(module_init) && ((LINUX_VERSION_CODE >= 0x020212) &&

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499809.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 142 warnings, 6 checks, 736 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000499809.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
