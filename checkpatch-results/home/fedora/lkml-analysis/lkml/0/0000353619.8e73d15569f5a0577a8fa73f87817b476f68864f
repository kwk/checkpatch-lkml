WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- sane locking with spinlocks and irqs disabled instead of the buggy locking

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#60: FILE: airo.c:936:
+static int issuecommand(struct airo_info*, Cmd *pCmd, Resp *pRsp);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pCmd>
#60: FILE: airo.c:936:
+static int issuecommand(struct airo_info*, Cmd *pCmd, Resp *pRsp);

CHECK:CAMELCASE: Avoid CamelCase: <Resp>
#60: FILE: airo.c:936:
+static int issuecommand(struct airo_info*, Cmd *pCmd, Resp *pRsp);

CHECK:CAMELCASE: Avoid CamelCase: <pRsp>
#60: FILE: airo.c:936:
+static int issuecommand(struct airo_info*, Cmd *pCmd, Resp *pRsp);

CHECK:CAMELCASE: Avoid CamelCase: <pBuf>
#69: FILE: airo.c:947:
+static int PC4500_readrid_nolock(struct airo_info*, u16 rid, void *pBuf, int len);

CHECK:CAMELCASE: Avoid CamelCase: <txFid>
#77: FILE: airo.c:953:
+static int transmit_802_3_packet(struct airo_info*, u16 txFid, char *pPacket, int len);

CHECK:CAMELCASE: Avoid CamelCase: <pPacket>
#77: FILE: airo.c:953:
+static int transmit_802_3_packet(struct airo_info*, u16 txFid, char *pPacket, int len);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#87: FILE: airo.c:990:
+	spinlock_t main_lock;

ERROR:SPACING: space required before the open parenthesis '('
#128: FILE: airo.c:1193:
+	for(s = &statr->beaconPeriod; s <= &statr->_reserved1; s++)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <beaconPeriod>
#128: FILE: airo.c:1193:
+	for(s = &statr->beaconPeriod; s <= &statr->_reserved1; s++)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#190: FILE: airo.c:1323:
+	for (i = 0; i < MAX_FIDS / 2 && (fids[i] & 0xffff0000); i++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: airo.c:1335:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#234: FILE: airo.c:1337:
+	len = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: airo.c:1338:
+	status = transmit_802_3_packet (priv, fids[i], skb->data, len);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#247: FILE: airo.c:1345:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#247: FILE: airo.c:1345:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: airo.c:1386:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#305: FILE: airo.c:1388:
+	len = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: airo.c:1389:
+	status = transmit_802_11_packet (priv, fids[i], skb->data, len);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#317: FILE: airo.c:1396:
 	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#317: FILE: airo.c:1396:
+	else {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#401: FILE: airo.c:1527:
+	if (ai->flash)
+		kfree(ai->flash);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#403: FILE: airo.c:1529:
+	if (ai->rssi)
+		kfree(ai->rssi);

ERROR:SPACING: space prohibited after that open parenthesis '('
#404: FILE: airo.c:1530:
+	takedown_proc_entry( dev, ai );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#404: FILE: airo.c:1530:
+	takedown_proc_entry( dev, ai );

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: airo.c:1533:
+^I       ^Idel_timer_sync(&ai->timer);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: airo.c:1533:
+^I       ^Idel_timer_sync(&ai->timer);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: airo.c:1781:
+	micinit (ai, &mic_rid);

ERROR:SPACING: space prohibited after that open parenthesis '('
#503: FILE: airo.c:1813:
+				airo_read_mic( apriv );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#503: FILE: airo.c:1813:
+				airo_read_mic( apriv );

ERROR:SPACING: space prohibited after that open parenthesis '('
#537: FILE: airo.c:2121:
+static int enable_MAC( struct airo_info *ai, Resp *rsp )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#537: FILE: airo.c:2121:
+static int enable_MAC( struct airo_info *ai, Resp *rsp )

WARNING:LINE_SPACING: Missing a blank line after declarations
#581: FILE: airo.c:2151:
+	u16 status;
+	spin_lock_irqsave(&ai->main_lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: airo.c:2152:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: airo.c:2154:
+	status = IN4500( ai, EVSTAT );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#585: FILE: airo.c:2154:
+	status = IN4500( ai, EVSTAT );

WARNING:LINE_SPACING: Missing a blank line after declarations
#600: FILE: airo.c:2166:
+	unsigned long flags;
+	spin_lock_irqsave(&ai->main_lock, flags);

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#611: FILE: airo.c:2191:
+	if (spin_is_locked(&ai->main_lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

ERROR:SPACING: space prohibited after that open parenthesis '('
#623: FILE: airo.c:2198:
+	if (issuecommand( ai, &cmd, &rsp) != SUCCESS )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#623: FILE: airo.c:2198:
+	if (issuecommand( ai, &cmd, &rsp) != SUCCESS )

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#648: FILE: airo.c:2320:
 }
+static int issuecommand(struct airo_info *ai, Cmd *pCmd, Resp *pRsp) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#648: FILE: airo.c:2320:
+static int issuecommand(struct airo_info *ai, Cmd *pCmd, Resp *pRsp) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#678: FILE: airo.c:2330:
+static int issuecommand_nolock(struct airo_info *ai, Cmd *pCmd, Resp *pRsp) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#718: FILE: airo.c:2364:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#755: FILE: airo.c:2496:
+ *  it must be called with main_lock held. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#762: FILE: airo.c:2501:
+	if ((status = PC4500_accessrid(ai, rid, CMD_ACCESS)) != SUCCESS)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: airo.c:2502:
+                return status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: airo.c:2502:
+                return status;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: airo.c:2504:
+                return ERROR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: airo.c:2504:
+                return ERROR;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#797: FILE: airo.c:2519:
+	return bap_read(ai, ((u16*)pBuf)+1, len, BAP1);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#797: FILE: airo.c:2519:
+	return bap_read(ai, ((u16*)pBuf)+1, len, BAP1);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: airo.c:2526:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#825: FILE: airo.c:2541:
+	*(u16*)pBuf = cpu_to_le16((u16)len);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#875: FILE: airo.c:2586:
+	 * in practice it only loops like four times. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#876: FILE: airo.c:2587:
+	while (((IN4500(ai, EVSTAT) & EV_ALLOC) == 0) && --loop)
+	       ; /* nada */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#919: FILE: airo.c:2661:
+	if (issuecommand_nolock(ai, &cmd, &rsp) != SUCCESS) return ERROR;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#943: FILE: airo.c:2718:
+	if (issuecommand_nolock(ai, &cmd, &rsp) != SUCCESS) return ERROR;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#986: FILE: airo.c:4054:
+^Iif (local->config.opmode & MODE_STA_ESS) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: airo.c:4055:
+^I^Istatus_rid.channel = local->config.channelSet; $

CHECK:CAMELCASE: Avoid CamelCase: <channelSet>
#987: FILE: airo.c:4055:
+		status_rid.channel = local->config.channelSet; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: airo.c:4056:
+^Ielse $

CHECK:CAMELCASE: Avoid CamelCase: <readStatusRid>
#989: FILE: airo.c:4057:
+		readStatusRid(local, &status_rid);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 17 warnings, 16 checks, 922 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
