WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: include/linux/nonresident.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#58: FILE: include/linux/nonresident.h:2:
+ * include/linux/nonresident.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/linux/nonresident.h:10:
+extern int recently_evicted(void *, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#66: FILE: include/linux/nonresident.h:10:
+extern int recently_evicted(void *, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#66: FILE: include/linux/nonresident.h:10:
+extern int recently_evicted(void *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#66: FILE: include/linux/nonresident.h:10:
+extern int recently_evicted(void *, unsigned long, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/nonresident.h:11:
+extern int remember_page(void *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#67: FILE: include/linux/nonresident.h:11:
+extern int remember_page(void *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#67: FILE: include/linux/nonresident.h:11:
+extern int remember_page(void *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#67: FILE: include/linux/nonresident.h:11:
+extern int remember_page(void *, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#68: FILE: include/linux/nonresident.h:12:
+void init_nonresident(unsigned long);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: mm/nonresident.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#102: FILE: mm/nonresident.c:2:
+ * mm/nonresident.c

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: mm/nonresident.c:35:
+#define make_nr_oag(x,y)	(((x) & NR_OFFSET_MASK) + ((y) << NR_GEN_SHIFT))
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: mm/nonresident.c:38:
+	void * mapping;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#143: FILE: mm/nonresident.c:43:
+#define NUM_NR ((L1_CACHE_BYTES - sizeof(spinlock_t))/sizeof(struct nr_page))
                                                      ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#146: FILE: mm/nonresident.c:46:
+struct nr_bucket
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#147: FILE: mm/nonresident.c:47:
+	spinlock_t lock;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: mm/nonresident.c:52:
+static struct nr_bucket * nr_hashtable;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: mm/nonresident.c:54:
+struct nr_bucket * nr_hash(void * mapping, unsigned long offset_and_gen)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: mm/nonresident.c:54:
+struct nr_bucket * nr_hash(void * mapping, unsigned long offset_and_gen)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: mm/nonresident.c:67:
+static int nr_same(struct nr_page * first, struct nr_page * second)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: mm/nonresident.c:67:
+static int nr_same(struct nr_page * first, struct nr_page * second)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: mm/nonresident.c:80:
+int recently_evicted(void * mapping, unsigned long offset, unsigned long gen)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: mm/nonresident.c:83:
+	struct nr_bucket * nr_bucket = nr_hash(mapping, offset_and_gen);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: mm/nonresident.c:93:
+		struct nr_page * found = &nr_bucket->pages[i];

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: mm/nonresident.c:94:
+		struct nr_page * found = &nr_bucket->pages[i];
+		if (nr_same(found, &wanted)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: mm/nonresident.c:105:
+int remember_page(void * mapping, unsigned long offset, unsigned long gen)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: mm/nonresident.c:108:
+	struct nr_bucket * nr_bucket = nr_hash(mapping, offset_and_gen);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: mm/nonresident.c:109:
+	struct nr_page * victim;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!victim->mapping"
#216: FILE: mm/nonresident.c:116:
+		if (victim->mapping == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 12 warnings, 5 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
