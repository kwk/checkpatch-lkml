WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: include/asm-i386/pda.h:1:
+#ifndef _I386_PDA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#110: FILE: include/asm-i386/pda.h:5:
+struct i386_pda
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/asm-i386/pda.h:18:
+extern void __bad_pda_field(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pda.h:22:
+#define pda_to_op(op,field,val)						\
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pda.h:22:
+#define pda_to_op(op,field,val)						\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#127: FILE: include/asm-i386/pda.h:22:
+#define pda_to_op(op,field,val)						\
+	do {								\
+		typedef typeof(_proxy_pda.field) T__;			\
+		if (0) { T__ tmp__; tmp__ = (val); }			\
+		switch (sizeof(_proxy_pda.field)) {			\
+		case 2:							\
+			asm(op "w %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		case 4:							\
+			asm(op "l %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		default: __bad_pda_field();				\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#127: FILE: include/asm-i386/pda.h:22:
+#define pda_to_op(op,field,val)						\
+	do {								\
+		typedef typeof(_proxy_pda.field) T__;			\
+		if (0) { T__ tmp__; tmp__ = (val); }			\
+		switch (sizeof(_proxy_pda.field)) {			\
+		case 2:							\
+			asm(op "w %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		case 4:							\
+			asm(op "l %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		default: __bad_pda_field();				\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#127: FILE: include/asm-i386/pda.h:22:
+#define pda_to_op(op,field,val)						\
+	do {								\
+		typedef typeof(_proxy_pda.field) T__;			\
+		if (0) { T__ tmp__; tmp__ = (val); }			\
+		switch (sizeof(_proxy_pda.field)) {			\
+		case 2:							\
+			asm(op "w %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		case 4:							\
+			asm(op "l %1,%%gs:%P2"				\
+			    : "+m" (_proxy_pda.field)			\
+			    :"ri" ((T__)val),				\
+			     "i"(pda_offset(field)));			\
+			break;						\
+		default: __bad_pda_field();				\
+		}							\
+	} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#129: FILE: include/asm-i386/pda.h:24:
+		typedef typeof(_proxy_pda.field) T__;			\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: include/asm-i386/pda.h:25:
+		if (0) { T__ tmp__; tmp__ = (val); }			\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#135: FILE: include/asm-i386/pda.h:30:
+			    :"ri" ((T__)val),				\
 			    ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#141: FILE: include/asm-i386/pda.h:36:
+			    :"ri" ((T__)val),				\
 			    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: include/asm-i386/pda.h:39:
+		default: __bad_pda_field();				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#148: FILE: include/asm-i386/pda.h:43:
+#define pda_from_op(op,field)						\
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#148: FILE: include/asm-i386/pda.h:43:
+#define pda_from_op(op,field)						\
+	({								\
+		typeof(_proxy_pda.field) ret__;				\
+		switch (sizeof(_proxy_pda.field)) {			\
+		case 2:							\
+			asm(op "w %%gs:%P1,%0"				\
+			    : "=r" (ret__)				\
+			    : "i" (pda_offset(field)),			\
+			      "m" (_proxy_pda.field));			\
+			break;						\
+		case 4:							\
+			asm(op "l %%gs:%P1,%0"				\
+			    : "=r" (ret__)				\
+			    : "i" (pda_offset(field)),			\
+			      "m" (_proxy_pda.field));			\
+			break;						\
+		default: __bad_pda_field();				\
+		}							\
+		ret__; })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#148: FILE: include/asm-i386/pda.h:43:
+#define pda_from_op(op,field)						\
+	({								\
+		typeof(_proxy_pda.field) ret__;				\
+		switch (sizeof(_proxy_pda.field)) {			\
+		case 2:							\
+			asm(op "w %%gs:%P1,%0"				\
+			    : "=r" (ret__)				\
+			    : "i" (pda_offset(field)),			\
+			      "m" (_proxy_pda.field));			\
+			break;						\
+		case 4:							\
+			asm(op "l %%gs:%P1,%0"				\
+			    : "=r" (ret__)				\
+			    : "i" (pda_offset(field)),			\
+			      "m" (_proxy_pda.field));			\
+			break;						\
+		default: __bad_pda_field();				\
+		}							\
+		ret__; })

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#164: FILE: include/asm-i386/pda.h:59:
+		default: __bad_pda_field();				\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#169: FILE: include/asm-i386/pda.h:64:
+#define pda_addr(field)							\
+	((typeof(_proxy_pda.field) *)((unsigned char *)read_pda(_pda) + \
+				      pda_offset(field)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: include/asm-i386/pda.h:68:
+#define read_pda(field) pda_from_op("mov",field)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: include/asm-i386/pda.h:69:
+#define write_pda(field,val) pda_to_op("mov",field,val)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: include/asm-i386/pda.h:69:
+#define write_pda(field,val) pda_to_op("mov",field,val)
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: include/asm-i386/pda.h:69:
+#define write_pda(field,val) pda_to_op("mov",field,val)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: include/asm-i386/pda.h:70:
+#define add_pda(field,val) pda_to_op("add",field,val)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: include/asm-i386/pda.h:70:
+#define add_pda(field,val) pda_to_op("add",field,val)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: include/asm-i386/pda.h:70:
+#define add_pda(field,val) pda_to_op("add",field,val)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: include/asm-i386/pda.h:71:
+#define sub_pda(field,val) pda_to_op("sub",field,val)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: include/asm-i386/pda.h:71:
+#define sub_pda(field,val) pda_to_op("sub",field,val)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: include/asm-i386/pda.h:71:
+#define sub_pda(field,val) pda_to_op("sub",field,val)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: include/asm-i386/pda.h:72:
+#define or_pda(field,val) pda_to_op("or",field,val)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: include/asm-i386/pda.h:72:
+#define or_pda(field,val) pda_to_op("or",field,val)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: include/asm-i386/pda.h:72:
+#define or_pda(field,val) pda_to_op("or",field,val)
                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000041930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 2 warnings, 7 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000041930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
