ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: crypto/sha512.c:126:
+	a=state[0]; b=state[1]; c=state[2]; d=state[3];
 	 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: crypto/sha512.c:126:
+	a=state[0]; b=state[1]; c=state[2]; d=state[3];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: crypto/sha512.c:126:
+	a=state[0]; b=state[1]; c=state[2]; d=state[3];
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: crypto/sha512.c:126:
+	a=state[0]; b=state[1]; c=state[2]; d=state[3];
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: crypto/sha512.c:127:
+	e=state[4]; f=state[5]; g=state[6]; h=state[7];
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: crypto/sha512.c:127:
+	e=state[4]; f=state[5]; g=state[6]; h=state[7];
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: crypto/sha512.c:127:
+	e=state[4]; f=state[5]; g=state[6]; h=state[7];
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: crypto/sha512.c:127:
+	e=state[4]; f=state[5]; g=state[6]; h=state[7];
 	                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: crypto/sha512.c:176:
+	struct sha512_ctx *sctx = ctx;
+	sctx->state[0] = HP0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#193: FILE: crypto/sha512.c:184:
+	sctx->count[0] = sctx->count[1] = sctx->count[2] = sctx->count[3] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#332: FILE: crypto/sha512.c:310:
+	if ((ret = crypto_register_alg(&sha384)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: crypto/sha512.c:312:
+	if ((ret = crypto_register_alg(&sha512)) < 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 1 warnings, 1 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189236.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
