WARNING:TYPO_SPELLING: 'initilised' may be misspelled - perhaps 'initialised'?
#47: 
 check counters are initilised and incr properly
                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'consistant' may be misspelled - perhaps 'consistent'?
#48: 
 check for consistant usage of ++ etc
           ^^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#127: FILE: fs/nfsd/nfs3xdr.c:451:
+	args->tname = new =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#269: FILE: fs/nfsd/nfs4xdr.c:2218:
+	resp->xbuf->page_len = ((char*)p) - (char*)page_address(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#269: FILE: fs/nfsd/nfs4xdr.c:2218:
+	resp->xbuf->page_len = ((char*)p) - (char*)page_address(

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#269: FILE: fs/nfsd/nfs4xdr.c:2218:
+	resp->xbuf->page_len = ((char*)p) - (char*)page_address(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#270: FILE: fs/nfsd/nfs4xdr.c:2219:
+		resp->rqstp->rq_respages[resp->rqstp->rq_resused-1]);
 		                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BRACES: Unbalanced braces around else statement
#366: FILE: fs/nfsd/vfs.c:812:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#403: FILE: include/linux/sunrpc/svc.h:174:
+	struct page *		rq_pages[RPCSVC_MAXPAGES];

ERROR:POINTER_LOCATION: "foo *		*bar" should be "foo **bar"
#404: FILE: include/linux/sunrpc/svc.h:175:
+	struct page *		*rq_respages;	/* points into rq_pages */

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#546: FILE: net/sunrpc/svc.c:439:
+	int i;
+	for (i=0; i<ARRAY_SIZE(rqstp->rq_pages); i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#546: FILE: net/sunrpc/svc.c:439:
+	for (i=0; i<ARRAY_SIZE(rqstp->rq_pages); i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#546: FILE: net/sunrpc/svc.c:439:
+	for (i=0; i<ARRAY_SIZE(rqstp->rq_pages); i++)
 	           ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: net/sunrpc/svcsock.c:416:
+	len = kernel_sendpage(sock, rqstp->rq_respages[0], 0,
+				  xdr->head[0].iov_len, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: net/sunrpc/svcsock.c:442:
+		result = kernel_sendpage(sock, rqstp->rq_respages[0],
+					     ((unsigned long)xdr->tail[0].iov_base)

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: net/sunrpc/svcsock.c:443:
+^I^I^I^I^I        & (PAGE_SIZE-1),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#596: FILE: net/sunrpc/svcsock.c:443:
+					        & (PAGE_SIZE-1),
 					                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#604: FILE: net/sunrpc/svcsock.c:713:
+		rqstp->rq_respages = rqstp->rq_pages+1;
 		                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#609: FILE: net/sunrpc/svcsock.c:717:
+			(rqstp->rq_arg.page_len + PAGE_SIZE - 1)/ PAGE_SIZE;
 			                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#651: FILE: net/sunrpc/svcsock.c:1237:
+	for (i=0; i < pages ; i++)
 	      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rqstp->rq_pages[i]"
#652: FILE: net/sunrpc/svcsock.c:1238:
+		while (rqstp->rq_pages[i] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#654: FILE: net/sunrpc/svcsock.c:1240:
+			struct page *p = alloc_page(GFP_KERNEL);
+			if (!p)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 14 warnings, 10 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000044603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
