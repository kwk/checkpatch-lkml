WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#66: FILE: arch/ia64/ia32/ia32_signal.c:871:
+               current->comm, task_pid(current), sig, (void *) frame, regs->cr_iip, frame->pretcode);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: arch/ia64/ia32/ia32_signal.c:871:
+               current->comm, task_pid(current), sig, (void *) frame, regs->cr_iip, frame->pretcode);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#66: FILE: arch/ia64/ia32/ia32_signal.c:871:
+               current->comm, task_pid(current), sig, (void *) frame, regs->cr_iip, frame->pretcode);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: arch/ia64/ia32/ia32_signal.c:871:
+               current->comm, task_pid(current), sig, (void *) frame, regs->cr_iip, frame->pretcode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: arch/ia64/ia32/ia32_signal.c:949:
+               current->comm, task_pid(current), (void *) frame, regs->cr_iip, frame->pretcode);$

CHECK:SPACING: No space is necessary after a cast
#75: FILE: arch/ia64/ia32/ia32_signal.c:949:
+               current->comm, task_pid(current), (void *) frame, regs->cr_iip, frame->pretcode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/ia64/ia32/ia32_signal.c:949:
+               current->comm, task_pid(current), (void *) frame, regs->cr_iip, frame->pretcode);$

WARNING:SPLIT_STRING: quoted string split across lines
#106: FILE: arch/ia64/ia32/sys_ia32.c:815:
 		printk(KERN_INFO "%s(%d): emulate_mmap() can't share contents of incongruent mmap "
+		       "(addr=0x%lx,off=0x%llx)\n", current->comm, task_pid(current), start, off);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#166: FILE: arch/ia64/kernel/perfmon.c:226:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: arch/ia64/kernel/perfmon.c:226:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#166: FILE: arch/ia64/kernel/perfmon.c:226:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \
 		                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#166: FILE: arch/ia64/kernel/perfmon.c:226:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#166: FILE: arch/ia64/kernel/perfmon.c:226:
+		if (unlikely(pfm_sysctl.debug >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

WARNING:LONG_LINE: line length of 188 exceeds 100 columns
#172: FILE: arch/ia64/kernel/perfmon.c:231:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: arch/ia64/kernel/perfmon.c:231:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#172: FILE: arch/ia64/kernel/perfmon.c:231:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \
 		                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#172: FILE: arch/ia64/kernel/perfmon.c:231:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#172: FILE: arch/ia64/kernel/perfmon.c:231:
+		if (unlikely(pfm_sysctl.debug > 0 && pfm_sysctl.debug_ovfl >0)) { printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__, smp_processor_id(), task_pid(current)); printk a; } \

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#190: FILE: arch/ia64/kernel/perfmon.c:951:
+		printk(KERN_ERR "perfmon.%d: invalid task[%d] current[%d]\n", __LINE__, task_pid(task), task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#190: FILE: arch/ia64/kernel/perfmon.c:951:
+		printk(KERN_ERR "perfmon.%d: invalid task[%d] current[%d]\n", __LINE__, task_pid(task), task_pid(current));

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#214: FILE: arch/ia64/kernel/perfmon.c:1403:
+		printk(KERN_ERR "perfmon: pfm_remove_smpl_mapping [%d] invalid context mm=%p\n", task_pid(task), task->mm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#214: FILE: arch/ia64/kernel/perfmon.c:1403:
+		printk(KERN_ERR "perfmon: pfm_remove_smpl_mapping [%d] invalid context mm=%p\n", task_pid(task), task->mm);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_remove_smpl_mapping', this function's name, in a string
#214: FILE: arch/ia64/kernel/perfmon.c:1403:
+		printk(KERN_ERR "perfmon: pfm_remove_smpl_mapping [%d] invalid context mm=%p\n", task_pid(task), task->mm);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#223: FILE: arch/ia64/kernel/perfmon.c:1420:
+		printk(KERN_ERR "perfmon: [%d] unable to unmap sampling buffer @%p size=%lu\n", task_pid(task), vaddr, size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#223: FILE: arch/ia64/kernel/perfmon.c:1420:
+		printk(KERN_ERR "perfmon: [%d] unable to unmap sampling buffer @%p size=%lu\n", task_pid(task), vaddr, size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: arch/ia64/kernel/perfmon.c:1462:
+	printk(KERN_ERR "perfmon: pfm_free_smpl_buffer [%d] no buffer\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_free_smpl_buffer', this function's name, in a string
#232: FILE: arch/ia64/kernel/perfmon.c:1462:
+	printk(KERN_ERR "perfmon: pfm_free_smpl_buffer [%d] no buffer\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#241: FILE: arch/ia64/kernel/perfmon.c:1515:
+		printk(KERN_ERR "perfmon: pfm_poll: bad magic [%d]\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#248: FILE: arch/ia64/kernel/perfmon.c:1521:
+		printk(KERN_ERR "perfmon: pfm_read: NULL ctx [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_read', this function's name, in a string
#248: FILE: arch/ia64/kernel/perfmon.c:1521:
+		printk(KERN_ERR "perfmon: pfm_read: NULL ctx [%d]\n", task_pid(current));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#266: FILE: arch/ia64/kernel/perfmon.c:1584:
+		printk(KERN_ERR "perfmon: pfm_read no msg for ctx=%p [%d]\n", ctx, task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#266: FILE: arch/ia64/kernel/perfmon.c:1584:
+		printk(KERN_ERR "perfmon: pfm_read no msg for ctx=%p [%d]\n", ctx, task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_read', this function's name, in a string
#266: FILE: arch/ia64/kernel/perfmon.c:1584:
+		printk(KERN_ERR "perfmon: pfm_read no msg for ctx=%p [%d]\n", ctx, task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#275: FILE: arch/ia64/kernel/perfmon.c:1615:
+		printk(KERN_ERR "perfmon: pfm_poll: bad magic [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_poll', this function's name, in a string
#275: FILE: arch/ia64/kernel/perfmon.c:1615:
+		printk(KERN_ERR "perfmon: pfm_poll: bad magic [%d]\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#282: FILE: arch/ia64/kernel/perfmon.c:1621:
+		printk(KERN_ERR "perfmon: pfm_poll: NULL ctx [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_poll', this function's name, in a string
#282: FILE: arch/ia64/kernel/perfmon.c:1621:
+		printk(KERN_ERR "perfmon: pfm_poll: NULL ctx [%d]\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#300: FILE: arch/ia64/kernel/perfmon.c:1675:
+		printk(KERN_ERR "perfmon: pfm_fasync bad magic [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_fasync', this function's name, in a string
#300: FILE: arch/ia64/kernel/perfmon.c:1675:
+		printk(KERN_ERR "perfmon: pfm_fasync bad magic [%d]\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#307: FILE: arch/ia64/kernel/perfmon.c:1681:
+		printk(KERN_ERR "perfmon: pfm_fasync NULL ctx [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_fasync', this function's name, in a string
#307: FILE: arch/ia64/kernel/perfmon.c:1681:
+		printk(KERN_ERR "perfmon: pfm_fasync NULL ctx [%d]\n", task_pid(current));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#325: FILE: arch/ia64/kernel/perfmon.c:1737:
+	DPRINT(("on CPU%d forcing system wide stop for [%d]\n", smp_processor_id(), ctx->ctx_task_pid(task)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#334: FILE: arch/ia64/kernel/perfmon.c:1789:
+		printk(KERN_ERR "perfmon: pfm_flush: NULL ctx [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_flush', this function's name, in a string
#334: FILE: arch/ia64/kernel/perfmon.c:1789:
+		printk(KERN_ERR "perfmon: pfm_flush: NULL ctx [%d]\n", task_pid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: arch/ia64/kernel/perfmon.c:1937:
+		printk(KERN_ERR "perfmon: pfm_close: NULL ctx [%d]\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_close', this function's name, in a string
#343: FILE: arch/ia64/kernel/perfmon.c:1937:
+		printk(KERN_ERR "perfmon: pfm_close: NULL ctx [%d]\n", task_pid(current));

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#370: FILE: arch/ia64/kernel/perfmon.c:2449:
+	DPRINT(("[%d] after validate(0x%x,%d,%p)=%d\n", task_pid(task), ctx_flags, cpu, fmt_arg, ret));

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#407: FILE: arch/ia64/kernel/perfmon.c:2597:
+		DPRINT(("cannot attach to non-stopped task [%d] state=%ld\n", task_pid(task), task->state));

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#443: FILE: arch/ia64/kernel/perfmon.c:3540:
+		printk(KERN_ERR "perfmon: invalid release for [%d] ptrace_use_dbregs=0\n", task_pid(task));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#443: FILE: arch/ia64/kernel/perfmon.c:3540:
+		printk(KERN_ERR "perfmon: invalid release for [%d] ptrace_use_dbregs=0\n", task_pid(task));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#452: FILE: arch/ia64/kernel/perfmon.c:3592:
+		printk(KERN_ERR "perfmon: [%d] pfm_restart no task\n", task_pid(current));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_restart', this function's name, in a string
#452: FILE: arch/ia64/kernel/perfmon.c:3592:
+		printk(KERN_ERR "perfmon: [%d] pfm_restart no task\n", task_pid(current));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#484: FILE: arch/ia64/kernel/perfmon.c:3686:
+		DPRINT(("unblocking [%d] \n", task_pid(task)));

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#538: FILE: arch/ia64/kernel/perfmon.c:4274:
+				DPRINT(("load [%d] increased sys_use_dbreg=%u\n", task_pid(task), pfm_sessions.pfs_sys_use_dbregs));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#601: FILE: arch/ia64/kernel/perfmon.c:4612:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] ctx unloaded\n", task_pid(task));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#601: FILE: arch/ia64/kernel/perfmon.c:4612:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] ctx unloaded\n", task_pid(task));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_exit_thread', this function's name, in a string
#601: FILE: arch/ia64/kernel/perfmon.c:4612:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] ctx unloaded\n", task_pid(task));

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#608: FILE: arch/ia64/kernel/perfmon.c:4618:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#608: FILE: arch/ia64/kernel/perfmon.c:4618:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_exit_thread', this function's name, in a string
#608: FILE: arch/ia64/kernel/perfmon.c:4618:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#617: FILE: arch/ia64/kernel/perfmon.c:4627:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#617: FILE: arch/ia64/kernel/perfmon.c:4627:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_exit_thread', this function's name, in a string
#617: FILE: arch/ia64/kernel/perfmon.c:4627:
+				printk(KERN_ERR "perfmon: pfm_exit_thread [%d] state=%d unload failed %d\n", task_pid(task), state, ret);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#623: FILE: arch/ia64/kernel/perfmon.c:4632:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] unexpected state=%d\n", task_pid(task), state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#623: FILE: arch/ia64/kernel/perfmon.c:4632:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] unexpected state=%d\n", task_pid(task), state);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_exit_thread', this function's name, in a string
#623: FILE: arch/ia64/kernel/perfmon.c:4632:
+			printk(KERN_ERR "perfmon: pfm_exit_thread [%d] unexpected state=%d\n", task_pid(task), state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#650: FILE: arch/ia64/kernel/perfmon.c:4856:
+		printk(KERN_ERR "perfmon: [%d] argument too big %lu\n", task_pid(current), sz);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#664: FILE: arch/ia64/kernel/perfmon.c:5005:
+		printk(KERN_ERR "pfm_context_force_terminate: [%d] unloaded failed with %d\n", task_pid(current), ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#664: FILE: arch/ia64/kernel/perfmon.c:5005:
+		printk(KERN_ERR "pfm_context_force_terminate: [%d] unloaded failed with %d\n", task_pid(current), ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_context_force_terminate', this function's name, in a string
#664: FILE: arch/ia64/kernel/perfmon.c:5005:
+		printk(KERN_ERR "pfm_context_force_terminate: [%d] unloaded failed with %d\n", task_pid(current), ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#673: FILE: arch/ia64/kernel/perfmon.c:5042:
+		printk(KERN_ERR "perfmon: [%d] has no PFM context\n", task_pid(current));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#682: FILE: arch/ia64/kernel/perfmon.c:5239:
+			task ? task_pid(task): -1,
 			                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#700: FILE: arch/ia64/kernel/perfmon.c:5486:
+	DPRINT(("ctx is zombie for [%d], converted to spurious\n", task ? task_pid(task): -1));
 	                                                                                ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#766: FILE: arch/ia64/kernel/perfmon.c:6429:
+		DPRINT(("[%d] ctx_pmd[%d]=0x%lx  pmd_val=0x%lx\n", task_pid(task), i, val, pmd_val));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#783: FILE: arch/ia64/kernel/perfmon.c:6775:
+	printk("->CPU%d owner [%d] ctx=%p\n", this_cpu, task ? task_pid(task) : -1, ctx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pfm_inherit', this function's name, in a string
#792: FILE: arch/ia64/kernel/perfmon.c:6825:
+	DPRINT(("perfmon: pfm_inherit clearing state for [%d]\n", task_pid(task)));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#877: FILE: arch/ia64/kernel/process.c:112:
+	printk("\nPid: %d, CPU %d, comm: %20s\n", task_pid(current), smp_processor_id(), current->comm);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#877: FILE: arch/ia64/kernel/process.c:112:
+	printk("\nPid: %d, CPU %d, comm: %20s\n", task_pid(current), smp_processor_id(), current->comm);

WARNING:SPLIT_STRING: quoted string split across lines
#961: FILE: arch/ia64/kernel/unaligned.c:1333:
 			len = sprintf(buf, "%s(%d): unaligned access to 0x%016lx, "
+				      "ip=0x%016lx\n\r", current->comm, task_pid(current),

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: arch/ia64/sn/kernel/xpc_main.c:511:
 		dev_warn(xpc_part, "unable to set pid %d to a realtime "
+			"priority, ret=%d\n", task_pid(current), ret);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1012: FILE: arch/mips/kernel/irixelf.c:1151:
+	psinfo.pr_pid = prstatus.pr_pid = task_pid(current);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1030: FILE: arch/mips/kernel/irixioctl.c:65:
+	printk("[%s:%d] irix_ioctl(%d, ", current->comm, task_pid(current), fd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'irix_ioctl', this function's name, in a string
#1030: FILE: arch/mips/kernel/irixioctl.c:65:
+	printk("[%s:%d] irix_ioctl(%d, ", current->comm, task_pid(current), fd);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == IRIX_P_PID'
#1070: FILE: arch/mips/kernel/irixsig.c:589:
+		if ((type == IRIX_P_PID) && task_pid(p) != pid)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#1243: FILE: arch/mips/kernel/sysirix.c:125:
+		       current->comm, task_pid(current), (unsigned long) value);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1360: FILE: arch/mips/kernel/sysirix.c:429:
+		printk("[%s:%d] getsid(%d) ", current->comm, task_pid(current),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1387: FILE: arch/mips/kernel/sysirix.c:782:
+	printk("[%s:%d] setpgrp(%d) ", current->comm, task_pid(current), flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1441: FILE: arch/mips/kernel/sysirix.c:1111:
+	printk("[%s:%d] BSDsetpgrp(%d, %d) ", current->comm, task_pid(current),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pgrp == 0'
#1450: FILE: arch/mips/kernel/sysirix.c:1118:
+	if ((pgrp == 0) && (pid == task_pid(current)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pid == task_pid(current)'
#1450: FILE: arch/mips/kernel/sysirix.c:1118:
+	if ((pgrp == 0) && (pid == task_pid(current)))

CHECK:SPACING: No space is necessary after a cast
#1680: FILE: arch/mips/kernel/sysirix.c:2026:
+		       current->comm, task_pid(current), (int) func);

CHECK:SPACING: No space is necessary after a cast
#1687: FILE: arch/mips/kernel/sysirix.c:2032:
+		       current->comm, task_pid(current), (int) op);

CHECK:SPACING: No space is necessary after a cast
#1711: FILE: arch/mips/kernel/sysirix.c:2067:
+		       current->comm, task_pid(current), (int) type);

WARNING:SPLIT_STRING: quoted string split across lines
#1776: FILE: arch/mips/kernel/sysirix.c:2150:
 	printk("irix_unimp [%s:%d] v0=%d v1=%d a0=%08lx a1=%08lx a2=%08lx "
+	       "a3=%08lx\n", current->comm, task_pid(current),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1802: FILE: arch/mips/kernel/traps.c:270:
+^I        current->comm, task_pid(current), current_thread_info(), current);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 76 warnings, 10 checks, 1524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
