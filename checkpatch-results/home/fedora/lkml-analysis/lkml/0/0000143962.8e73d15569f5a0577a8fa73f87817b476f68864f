WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
The patch to use host AIO support that I submitted early after 2.6.13 exposed

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#93: FILE: arch/um/drivers/ubd_kern.c:83:
+extern void do_io(struct io_thread_req *req);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open brace '{'
#185: FILE: arch/um/drivers/ubd_kern.c:477:
+	if(error){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: arch/um/drivers/ubd_kern.c:477:
+	if(error){

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/um/drivers/ubd_kern.c:492:
+ ^Ispin_lock(&ubd_io_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: arch/um/drivers/ubd_kern.c:492:
+ ^Ispin_lock(&ubd_io_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/um/drivers/ubd_kern.c:492:
+ ^Ispin_lock(&ubd_io_lock);$

ERROR:SPACING: space required before the open brace '{'
#215: FILE: arch/um/drivers/ubd_kern.c:507:
+	if(n != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: arch/um/drivers/ubd_kern.c:507:
+	if(n != sizeof(req)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#216: FILE: arch/um/drivers/ubd_kern.c:508:
+		printk(KERN_ERR "Pid %d - spurious interrupt in ubd_handler, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ubd_handler', this function's name, in a string
#216: FILE: arch/um/drivers/ubd_kern.c:508:
+		printk(KERN_ERR "Pid %d - spurious interrupt in ubd_handler, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#217: FILE: arch/um/drivers/ubd_kern.c:509:
+		printk(KERN_ERR "Pid %d - spurious interrupt in ubd_handler, "
+		       "err = %d\n", os_getpid(), -n);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/um/drivers/ubd_kern.c:515:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/um/drivers/ubd_kern.c:515:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/um/drivers/ubd_kern.c:515:
+        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/um/drivers/ubd_kern.c:517:
+^Ireactivate_fd(thread_fd, UBD_IRQ);^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#236: FILE: arch/um/drivers/ubd_kern.c:524:
+	return(IRQ_HANDLED);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/um/drivers/ubd_kern.c:532:
+^Iif(io_pid != -1) $

ERROR:SPACING: space required before the open parenthesis '('
#315: FILE: arch/um/drivers/ubd_kern.c:532:
+	if(io_pid != -1) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: arch/um/drivers/ubd_kern.c:572:
+^I^Idev->fd = create_cow_file(dev->file, dev->cow.file, $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#362: FILE: arch/um/drivers/ubd_kern.c:860:
+int ubd_driver_init(void){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#367: FILE: arch/um/drivers/ubd_kern.c:865:
+	if(global_openflags.s){

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: arch/um/drivers/ubd_kern.c:865:
+	if(global_openflags.s){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#368: FILE: arch/um/drivers/ubd_kern.c:866:
+		printk(KERN_INFO "ubd: Synchronous mode\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#370: FILE: arch/um/drivers/ubd_kern.c:868:
+		 * enough. So use anyway the io thread. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: arch/um/drivers/ubd_kern.c:871:
+^Iio_pid = start_io_thread(stack + PAGE_SIZE - sizeof(void *), $

ERROR:SPACING: space required before the open brace '{'
#375: FILE: arch/um/drivers/ubd_kern.c:873:
+	if(io_pid < 0){

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: arch/um/drivers/ubd_kern.c:873:
+	if(io_pid < 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: arch/um/drivers/ubd_kern.c:874:
+^I^Iprintk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#376: FILE: arch/um/drivers/ubd_kern.c:874:
+		printk(KERN_ERR 

WARNING:SPLIT_STRING: quoted string split across lines
#378: FILE: arch/um/drivers/ubd_kern.c:876:
+		       "ubd : Failed to start I/O thread (errno = %d) - "
+		       "falling back to synchronous I/O\n", -io_pid);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#380: FILE: arch/um/drivers/ubd_kern.c:878:
+		return(0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: arch/um/drivers/ubd_kern.c:880:
+^Ierr = um_request_irq(UBD_IRQ, thread_fd, IRQ_READ, ubd_intr, $

ERROR:SPACING: space required before the open parenthesis '('
#384: FILE: arch/um/drivers/ubd_kern.c:882:
+	if(err != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#385: FILE: arch/um/drivers/ubd_kern.c:883:
+		printk(KERN_ERR "um_request_irq failed - errno = %d\n", -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#386: FILE: arch/um/drivers/ubd_kern.c:884:
+	return(err);

ERROR:SPACING: space required before the open brace '{'
#416: FILE: arch/um/drivers/ubd_kern.c:934:
+	for(i = 0; i < length >> 9; i++){

ERROR:SPACING: space required before the open parenthesis '('
#416: FILE: arch/um/drivers/ubd_kern.c:934:
+	for(i = 0; i < length >> 9; i++){

ERROR:SPACING: space required before the open parenthesis '('
#417: FILE: arch/um/drivers/ubd_kern.c:935:
+		if(cow_mask != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cow_mask"
#417: FILE: arch/um/drivers/ubd_kern.c:935:
+		if(cow_mask != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#418: FILE: arch/um/drivers/ubd_kern.c:936:
+			ubd_set_bit(i, (unsigned char *) cow_mask);

CHECK:SPACING: No space is necessary after a cast
#419: FILE: arch/um/drivers/ubd_kern.c:937:
+		if(ubd_test_bit(sector + i, (unsigned char *) bitmap))

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: arch/um/drivers/ubd_kern.c:937:
+		if(ubd_test_bit(sector + i, (unsigned char *) bitmap))

CHECK:SPACING: No space is necessary after a cast
#425: FILE: arch/um/drivers/ubd_kern.c:941:
+		ubd_set_bit(sector + i, (unsigned char *) bitmap);

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: arch/um/drivers/ubd_kern.c:944:
+	if(!update_bitmap)

ERROR:SPACING: space required before the open parenthesis '('
#438: FILE: arch/um/drivers/ubd_kern.c:954:
+	if(*cow_offset == ((bitmap_len + sizeof(unsigned long) - 1) /

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: arch/um/drivers/ubd_kern.c:971:
+	if(req->length > (sizeof(req->sector_mask) * 8) << 9)

ERROR:SPACING: space required before the open parenthesis '('
#458: FILE: arch/um/drivers/ubd_kern.c:974:
+	if(req->op == UBD_READ) {

ERROR:SPACING: space required before the open brace '{'
#459: FILE: arch/um/drivers/ubd_kern.c:975:
+		for(i = 0; i < req->length >> 9; i++){

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: arch/um/drivers/ubd_kern.c:975:
+		for(i = 0; i < req->length >> 9; i++){

CHECK:SPACING: No space is necessary after a cast
#460: FILE: arch/um/drivers/ubd_kern.c:976:
+			if(ubd_test_bit(sector + i, (unsigned char *) bitmap))

ERROR:SPACING: space required before the open parenthesis '('
#460: FILE: arch/um/drivers/ubd_kern.c:976:
+			if(ubd_test_bit(sector + i, (unsigned char *) bitmap))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: arch/um/drivers/ubd_kern.c:977:
+^I^I^I^Iubd_set_bit(i, (unsigned char *) $

CHECK:SPACING: No space is necessary after a cast
#461: FILE: arch/um/drivers/ubd_kern.c:977:
+				ubd_set_bit(i, (unsigned char *) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/um/drivers/ubd_kern.c:979:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/um/drivers/ubd_kern.c:979:
+                }$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#465: FILE: arch/um/drivers/ubd_kern.c:981:
+	else cowify_bitmap(req->offset, req->length, &req->sector_mask,

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#465: FILE: arch/um/drivers/ubd_kern.c:981:
+	}
+	else cowify_bitmap(req->offset, req->length, &req->sector_mask,

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: arch/um/drivers/ubd_kern.c:994:
+	if(req->rq_status == RQ_INACTIVE) return(1);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#481: FILE: arch/um/drivers/ubd_kern.c:994:
+	if(req->rq_status == RQ_INACTIVE) return(1);

CHECK:SPACING: No space is necessary after a cast
#492: FILE: arch/um/drivers/ubd_kern.c:1004:
+	offset = ((__u64) req->sector) << 9;

ERROR:SPACING: space required before the open parenthesis '('
#516: FILE: arch/um/drivers/ubd_kern.c:1021:
+	if(dev->cow.file != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->cow.file"
#516: FILE: arch/um/drivers/ubd_kern.c:1021:
+	if(dev->cow.file != NULL)

ERROR:SPACING: space required before the open brace '{'
#555: FILE: arch/um/drivers/ubd_kern.c:1035:
+	if(thread_fd == -1){

ERROR:SPACING: space required before the open parenthesis '('
#555: FILE: arch/um/drivers/ubd_kern.c:1035:
+	if(thread_fd == -1){

ERROR:SPACING: space required before the open brace '{'
#556: FILE: arch/um/drivers/ubd_kern.c:1036:
+		while((req = elv_next_request(q)) != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#556: FILE: arch/um/drivers/ubd_kern.c:1036:
+		while((req = elv_next_request(q)) != NULL){

ERROR:SPACING: space required before the open brace '{'
#558: FILE: arch/um/drivers/ubd_kern.c:1038:
+			if(!err){

ERROR:SPACING: space required before the open parenthesis '('
#558: FILE: arch/um/drivers/ubd_kern.c:1038:
+			if(!err){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#564: FILE: arch/um/drivers/ubd_kern.c:1044:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#564: FILE: arch/um/drivers/ubd_kern.c:1044:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#565: FILE: arch/um/drivers/ubd_kern.c:1045:
+		if(do_ubd || (req = elv_next_request(q)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#565: FILE: arch/um/drivers/ubd_kern.c:1045:
+		if(do_ubd || (req = elv_next_request(q)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open brace '{'
#568: FILE: arch/um/drivers/ubd_kern.c:1048:
+		if(!err){

ERROR:SPACING: space required before the open parenthesis '('
#568: FILE: arch/um/drivers/ubd_kern.c:1048:
+		if(!err){

CHECK:SPACING: No space is necessary after a cast
#570: FILE: arch/um/drivers/ubd_kern.c:1050:
+			n = os_write_file(thread_fd, (char *) &io_req,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: arch/um/drivers/ubd_kern.c:1051:
+			n = os_write_file(thread_fd, (char *) &io_req,
+					 sizeof(io_req));

ERROR:SPACING: space required before the open parenthesis '('
#572: FILE: arch/um/drivers/ubd_kern.c:1052:
+			if(n != sizeof(io_req))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#573: FILE: arch/um/drivers/ubd_kern.c:1053:
+				printk("write to io thread failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#574: FILE: arch/um/drivers/ubd_kern.c:1054:
+				printk("write to io thread failed, "
+				       "errno = %d\n", -n);

ERROR:SPACING: space required before the open parenthesis '('
#623: FILE: arch/um/drivers/ubd_kern.c:1276:
+	if(req->cow_offset == -1)

ERROR:SPACING: space required before the open brace '{'
#634: FILE: arch/um/drivers/ubd_kern.c:1280:
+	if(n < 0){

ERROR:SPACING: space required before the open parenthesis '('
#634: FILE: arch/um/drivers/ubd_kern.c:1280:
+	if(n < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#635: FILE: arch/um/drivers/ubd_kern.c:1281:
+		printk("do_io - bitmap lseek failed : err = %d\n", -n);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#636: FILE: arch/um/drivers/ubd_kern.c:1282:
+		return(1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: arch/um/drivers/ubd_kern.c:1286:
+^I^I          sizeof(req->bitmap_words));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: arch/um/drivers/ubd_kern.c:1286:
+	n = os_write_file(req->fds[1], &req->bitmap_words,
+		          sizeof(req->bitmap_words));

ERROR:SPACING: space required before the open brace '{'
#654: FILE: arch/um/drivers/ubd_kern.c:1287:
+	if(n != sizeof(req->bitmap_words)){

ERROR:SPACING: space required before the open parenthesis '('
#654: FILE: arch/um/drivers/ubd_kern.c:1287:
+	if(n != sizeof(req->bitmap_words)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#655: FILE: arch/um/drivers/ubd_kern.c:1288:
+		printk("do_io - bitmap update failed, err = %d fd = %d\n", -n,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#657: FILE: arch/um/drivers/ubd_kern.c:1290:
+		return(1);

CHECK:SPACING: No space is necessary after a cast
#702: FILE: arch/um/drivers/ubd_kern.c:1307:
+		bit = ubd_test_bit(start, (unsigned char *) &req->sector_mask);

ERROR:SPACING: space required before the open parenthesis '('
#704: FILE: arch/um/drivers/ubd_kern.c:1309:
+		while((end < nsectors) &&

ERROR:SPACING: space required before the open brace '{'
#715: FILE: arch/um/drivers/ubd_kern.c:1320:
+		if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#715: FILE: arch/um/drivers/ubd_kern.c:1320:
+		if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#716: FILE: arch/um/drivers/ubd_kern.c:1321:
+			printk("do_io - lseek failed : err = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#716: FILE: arch/um/drivers/ubd_kern.c:1321:
+			printk("do_io - lseek failed : err = %d\n", -err);

ERROR:SPACING: space required before the open brace '{'
#720: FILE: arch/um/drivers/ubd_kern.c:1325:
+		if(req->op == UBD_READ){

ERROR:SPACING: space required before the open parenthesis '('
#720: FILE: arch/um/drivers/ubd_kern.c:1325:
+		if(req->op == UBD_READ){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#727: FILE: arch/um/drivers/ubd_kern.c:1332:
+					printk("do_io - read failed, err = %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#727: FILE: arch/um/drivers/ubd_kern.c:1332:
+					printk("do_io - read failed, err = %d "

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: arch/um/drivers/ubd_kern.c:1333:
+					printk("do_io - read failed, err = %d "
+					       "fd = %d\n", -n, req->fds[bit]);

ERROR:SPACING: space required before the open parenthesis '('
#732: FILE: arch/um/drivers/ubd_kern.c:1337:
+			} while((n < len) && (n != 0));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#733: FILE: arch/um/drivers/ubd_kern.c:1338:
+			if (n < len) memset(&buf[n], 0, len - n);

ERROR:SPACING: space required before the open brace '{'
#736: FILE: arch/um/drivers/ubd_kern.c:1341:
+			if(n != len){

ERROR:SPACING: space required before the open parenthesis '('
#736: FILE: arch/um/drivers/ubd_kern.c:1341:
+			if(n != len){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: arch/um/drivers/ubd_kern.c:1342:
+				printk("do_io - write failed err = %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#737: FILE: arch/um/drivers/ubd_kern.c:1342:
+				printk("do_io - write failed err = %d "

WARNING:SPLIT_STRING: quoted string split across lines
#738: FILE: arch/um/drivers/ubd_kern.c:1343:
+				printk("do_io - write failed err = %d "
+				       "fd = %d\n", -n, req->fds[bit]);

ERROR:SPACING: space required before the open parenthesis '('
#745: FILE: arch/um/drivers/ubd_kern.c:1350:
+	} while(start < nsectors);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#758: FILE: arch/um/drivers/ubd_kern.c:1361:
+int io_count = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: space required before the open brace '{'
#766: FILE: arch/um/drivers/ubd_kern.c:1369:
+	while(1){

ERROR:SPACING: space required before the open parenthesis '('
#766: FILE: arch/um/drivers/ubd_kern.c:1369:
+	while(1){

ERROR:SPACING: space required before the open brace '{'
#768: FILE: arch/um/drivers/ubd_kern.c:1371:
+		if(n != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#768: FILE: arch/um/drivers/ubd_kern.c:1371:
+		if(n != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#769: FILE: arch/um/drivers/ubd_kern.c:1372:
+			if(n < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: arch/um/drivers/ubd_kern.c:1373:
+				printk("io_thread - read failed, fd = %d, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#770: FILE: arch/um/drivers/ubd_kern.c:1373:
+				printk("io_thread - read failed, fd = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#771: FILE: arch/um/drivers/ubd_kern.c:1374:
+				printk("io_thread - read failed, fd = %d, "
+				       "err = %d\n", kernel_fd, -n);

CHECK:BRACES: Unbalanced braces around else statement
#772: FILE: arch/um/drivers/ubd_kern.c:1375:
+			else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#773: FILE: arch/um/drivers/ubd_kern.c:1376:
+				printk("io_thread - short read, fd = %d, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#773: FILE: arch/um/drivers/ubd_kern.c:1376:
+				printk("io_thread - short read, fd = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#774: FILE: arch/um/drivers/ubd_kern.c:1377:
+				printk("io_thread - short read, fd = %d, "
+				       "length = %d\n", kernel_fd, n);

ERROR:SPACING: space required before the open parenthesis '('
#781: FILE: arch/um/drivers/ubd_kern.c:1384:
+		if(n != sizeof(req))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#782: FILE: arch/um/drivers/ubd_kern.c:1385:
+			printk("io_thread - write failed, fd = %d, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#782: FILE: arch/um/drivers/ubd_kern.c:1385:
+			printk("io_thread - write failed, fd = %d, err = %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: arch/um/drivers/ubd_user.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#802: FILE: arch/um/drivers/ubd_user.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required before the open brace '{'
#840: FILE: arch/um/drivers/ubd_user.c:39:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: arch/um/drivers/ubd_user.c:39:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#841: FILE: arch/um/drivers/ubd_user.c:40:
+		printk("start_io_thread - os_pipe failed, err = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_io_thread', this function's name, in a string
#841: FILE: arch/um/drivers/ubd_user.c:40:
+		printk("start_io_thread - os_pipe failed, err = %d\n", -err);

CHECK:SPACING: No space is necessary after a cast
#848: FILE: arch/um/drivers/ubd_user.c:47:
+	pid = clone(io_thread, (void *) sp, CLONE_FILES | CLONE_VM | SIGCHLD,

ERROR:SPACING: space required before the open brace '{'
#850: FILE: arch/um/drivers/ubd_user.c:49:
+	if(pid < 0){

ERROR:SPACING: space required before the open parenthesis '('
#850: FILE: arch/um/drivers/ubd_user.c:49:
+	if(pid < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#851: FILE: arch/um/drivers/ubd_user.c:50:
+		printk("start_io_thread - clone failed : errno = %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_io_thread', this function's name, in a string
#851: FILE: arch/um/drivers/ubd_user.c:50:
+		printk("start_io_thread - clone failed : errno = %d\n", errno);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#907: FILE: arch/um/include/aio.h:24:
+extern int submit_aio(enum aio_type type, int fd, char *buf, int len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: arch/um/include/aio.h:26:
+                      struct aio_context *aio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: arch/um/include/aio.h:26:
+                      struct aio_context *aio);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#929: FILE: arch/um/os-Linux/aio.c:20:
+        enum aio_type type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: arch/um/os-Linux/aio.c:20:
+        enum aio_type type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: arch/um/os-Linux/aio.c:21:
+        int io_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: arch/um/os-Linux/aio.c:21:
+        int io_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: arch/um/os-Linux/aio.c:22:
+        unsigned long long offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: arch/um/os-Linux/aio.c:22:
+        unsigned long long offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: arch/um/os-Linux/aio.c:23:
+        char *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: arch/um/os-Linux/aio.c:23:
+        char *buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: arch/um/os-Linux/aio.c:24:
+        int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: arch/um/os-Linux/aio.c:24:
+        int len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: arch/um/os-Linux/aio.c:25:
+        struct aio_context *aio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: arch/um/os-Linux/aio.c:25:
+        struct aio_context *aio;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: arch/um/os-Linux/aio.c:70:
+                  int len, unsigned long long offset, struct aio_context *aio)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: arch/um/os-Linux/aio.c:70:
+                  int len, unsigned long long offset, struct aio_context *aio)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: arch/um/os-Linux/aio.c:78:
+                                .aio_fildes^I= fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: arch/um/os-Linux/aio.c:78:
+                                .aio_fildes^I= fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: arch/um/os-Linux/aio.c:79:
+                                .aio_buf^I= (unsigned long) buf,$

CHECK:SPACING: No space is necessary after a cast
#984: FILE: arch/um/os-Linux/aio.c:79:
+                                .aio_buf	= (unsigned long) buf,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: arch/um/os-Linux/aio.c:79:
+                                .aio_buf^I= (unsigned long) buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: arch/um/os-Linux/aio.c:80:
+                                .aio_nbytes^I= len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: arch/um/os-Linux/aio.c:80:
+                                .aio_nbytes^I= len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: arch/um/os-Linux/aio.c:81:
+                                .aio_offset^I= offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: arch/um/os-Linux/aio.c:81:
+                                .aio_offset^I= offset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: arch/um/os-Linux/aio.c:86:
+        switch(type){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: arch/um/os-Linux/aio.c:86:
+        switch(type){$

ERROR:SPACING: space required before the open brace '{'
#992: FILE: arch/um/os-Linux/aio.c:86:
+        switch(type){

ERROR:SPACING: space required before the open parenthesis '('
#992: FILE: arch/um/os-Linux/aio.c:86:
+        switch(type){

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: arch/um/os-Linux/aio.c:89:
+                err = io_submit(ctx, 1, &iocbp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/um/os-Linux/aio.c:89:
+                err = io_submit(ctx, 1, &iocbp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: arch/um/os-Linux/aio.c:93:
+                err = io_submit(ctx, 1, &iocbp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: arch/um/os-Linux/aio.c:93:
+                err = io_submit(ctx, 1, &iocbp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: arch/um/os-Linux/aio.c:99:
+                err = io_submit(ctx, 1, &iocbp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: arch/um/os-Linux/aio.c:99:
+                err = io_submit(ctx, 1, &iocbp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: arch/um/os-Linux/aio.c:102:
+                printk("Bogus op in do_aio - %d\n", type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: arch/um/os-Linux/aio.c:102:
+                printk("Bogus op in do_aio - %d\n", type);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1009: FILE: arch/um/os-Linux/aio.c:102:
+                printk("Bogus op in do_aio - %d\n", type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: arch/um/os-Linux/aio.c:104:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: arch/um/os-Linux/aio.c:104:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: arch/um/os-Linux/aio.c:121:
+        int err, n, reply_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: arch/um/os-Linux/aio.c:121:
+        int err, n, reply_fd;$

CHECK:SPACING: No space is necessary after a cast
#1052: FILE: arch/um/os-Linux/aio.c:135:
+				 { .data = (void *) (long) event.data,

CHECK:SPACING: No space is necessary after a cast
#1054: FILE: arch/um/os-Linux/aio.c:137:
+			reply_fd = ((struct aio_context *) reply.data)->reply_fd;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1060: FILE: arch/um/os-Linux/aio.c:140:
+				printk("aio_thread - write failed, fd = %d, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: arch/um/os-Linux/aio.c:141:
+                                       "err = %d\n", aio_req_fd_r, -err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: arch/um/os-Linux/aio.c:141:
+                                       "err = %d\n", aio_req_fd_r, -err);$

WARNING:SPLIT_STRING: quoted string split across lines
#1061: FILE: arch/um/os-Linux/aio.c:141:
+				printk("aio_thread - write failed, fd = %d, "
+                                       "err = %d\n", aio_req_fd_r, -err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: arch/um/os-Linux/aio.c:154:
+        switch(req->type){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: arch/um/os-Linux/aio.c:154:
+        switch(req->type){$

ERROR:SPACING: space required before the open brace '{'
#1076: FILE: arch/um/os-Linux/aio.c:154:
+        switch(req->type){

ERROR:SPACING: space required before the open parenthesis '('
#1076: FILE: arch/um/os-Linux/aio.c:154:
+        switch(req->type){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1079: FILE: arch/um/os-Linux/aio.c:156:
+                err = os_seek_file(req->io_fd, req->offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: arch/um/os-Linux/aio.c:156:
+                err = os_seek_file(req->io_fd, req->offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: arch/um/os-Linux/aio.c:160:
+                err = os_read_file(req->io_fd, req->buf, req->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: arch/um/os-Linux/aio.c:160:
+                err = os_read_file(req->io_fd, req->buf, req->len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: arch/um/os-Linux/aio.c:163:
+                err = os_seek_file(req->io_fd, req->offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: arch/um/os-Linux/aio.c:163:
+                err = os_seek_file(req->io_fd, req->offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1093: FILE: arch/um/os-Linux/aio.c:167:
+                err = os_write_file(req->io_fd, req->buf, req->len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: arch/um/os-Linux/aio.c:167:
+                err = os_write_file(req->io_fd, req->buf, req->len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1097: FILE: arch/um/os-Linux/aio.c:170:
+                err = os_seek_file(req->io_fd, req->offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: arch/um/os-Linux/aio.c:170:
+                err = os_seek_file(req->io_fd, req->offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: arch/um/os-Linux/aio.c:174:
+                err = os_read_file(req->io_fd, &c, sizeof(c));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: arch/um/os-Linux/aio.c:174:
+                err = os_read_file(req->io_fd, &c, sizeof(c));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: arch/um/os-Linux/aio.c:177:
+                printk("do_not_aio - bad request type : %d\n", req->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: arch/um/os-Linux/aio.c:177:
+                printk("do_not_aio - bad request type : %d\n", req->type);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1106: FILE: arch/um/os-Linux/aio.c:177:
+                printk("do_not_aio - bad request type : %d\n", req->type);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_not_aio', this function's name, in a string
#1106: FILE: arch/um/os-Linux/aio.c:177:
+                printk("do_not_aio - bad request type : %d\n", req->type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: arch/um/os-Linux/aio.c:188:
+        struct aio_thread_req req;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: arch/um/os-Linux/aio.c:188:
+        struct aio_thread_req req;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: arch/um/os-Linux/aio.c:194:
+                err = os_read_file(aio_req_fd_r, &req, sizeof(req));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: arch/um/os-Linux/aio.c:194:
+                err = os_read_file(aio_req_fd_r, &req, sizeof(req));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: arch/um/os-Linux/aio.c:195:
+                if(err != sizeof(req)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: arch/um/os-Linux/aio.c:195:
+                if(err != sizeof(req)){$

ERROR:SPACING: space required before the open brace '{'
#1124: FILE: arch/um/os-Linux/aio.c:195:
+                if(err != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#1124: FILE: arch/um/os-Linux/aio.c:195:
+                if(err != sizeof(req)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1141: FILE: arch/um/os-Linux/aio.c:206:
+                err = do_not_aio(&req);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: arch/um/os-Linux/aio.c:206:
+                err = do_not_aio(&req);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: arch/um/os-Linux/aio.c:207:
+                reply = ((struct aio_thread_reply) { .data ^I= req.aio,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1142: FILE: arch/um/os-Linux/aio.c:207:
+                reply = ((struct aio_thread_reply) { .data ^I= req.aio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: arch/um/os-Linux/aio.c:207:
+                reply = ((struct aio_thread_reply) { .data ^I= req.aio,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1143: FILE: arch/um/os-Linux/aio.c:208:
+                                                     .err^I= err });$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: arch/um/os-Linux/aio.c:208:
+                                                     .err^I= err });$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1144: FILE: arch/um/os-Linux/aio.c:209:
+                err = os_write_file(req.aio->reply_fd, &reply, sizeof(reply));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: arch/um/os-Linux/aio.c:209:
+                err = os_write_file(req.aio->reply_fd, &reply, sizeof(reply));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1205: FILE: arch/um/os-Linux/aio.c:273:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: arch/um/os-Linux/aio.c:273:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: arch/um/os-Linux/aio.c:279:
+        struct aio_thread_reply reply;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: arch/um/os-Linux/aio.c:279:
+        struct aio_thread_reply reply;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1213: FILE: arch/um/os-Linux/aio.c:280:
+        int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: arch/um/os-Linux/aio.c:280:
+        int err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1216: FILE: arch/um/os-Linux/aio.c:282:
+        err = do_aio(ctx, type, io_fd, buf, len, offset, aio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: arch/um/os-Linux/aio.c:282:
+        err = do_aio(ctx, type, io_fd, buf, len, offset, aio);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: arch/um/os-Linux/aio.c:283:
+        if(err){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: arch/um/os-Linux/aio.c:283:
+        if(err){$

ERROR:SPACING: space required before the open brace '{'
#1217: FILE: arch/um/os-Linux/aio.c:283:
+        if(err){

ERROR:SPACING: space required before the open parenthesis '('
#1217: FILE: arch/um/os-Linux/aio.c:283:
+        if(err){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: arch/um/os-Linux/aio.c:284:
+                reply = ((struct aio_thread_reply) { .data = aio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: arch/um/os-Linux/aio.c:284:
+                reply = ((struct aio_thread_reply) { .data = aio,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1219: FILE: arch/um/os-Linux/aio.c:285:
+                                                     .err  = err });$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: arch/um/os-Linux/aio.c:285:
+                                                     .err  = err });$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1220: FILE: arch/um/os-Linux/aio.c:286:
+                err = os_write_file(aio->reply_fd, &reply, sizeof(reply));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: arch/um/os-Linux/aio.c:286:
+                err = os_write_file(aio->reply_fd, &reply, sizeof(reply));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1221: FILE: arch/um/os-Linux/aio.c:287:
+                if(err != sizeof(reply))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: arch/um/os-Linux/aio.c:287:
+                if(err != sizeof(reply))$

ERROR:SPACING: space required before the open parenthesis '('
#1221: FILE: arch/um/os-Linux/aio.c:287:
+                if(err != sizeof(reply))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1222: FILE: arch/um/os-Linux/aio.c:288:
+                        printk("submit_aio_26 - write failed, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: arch/um/os-Linux/aio.c:288:
+                        printk("submit_aio_26 - write failed, "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1222: FILE: arch/um/os-Linux/aio.c:288:
+                        printk("submit_aio_26 - write failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'submit_aio_26', this function's name, in a string
#1222: FILE: arch/um/os-Linux/aio.c:288:
+                        printk("submit_aio_26 - write failed, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1223: FILE: arch/um/os-Linux/aio.c:289:
+                               "fd = %d, err = %d\n", aio->reply_fd, -err);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: arch/um/os-Linux/aio.c:289:
+                               "fd = %d, err = %d\n", aio->reply_fd, -err);$

WARNING:SPLIT_STRING: quoted string split across lines
#1223: FILE: arch/um/os-Linux/aio.c:289:
+                        printk("submit_aio_26 - write failed, "
+                               "fd = %d, err = %d\n", aio->reply_fd, -err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1224: FILE: arch/um/os-Linux/aio.c:290:
+                else err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: arch/um/os-Linux/aio.c:290:
+                else err = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1224: FILE: arch/um/os-Linux/aio.c:290:
+                else err = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1225: FILE: arch/um/os-Linux/aio.c:291:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: arch/um/os-Linux/aio.c:291:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1227: FILE: arch/um/os-Linux/aio.c:293:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/um/os-Linux/aio.c:293:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: arch/um/os-Linux/aio.c:375:
+        struct aio_thread_req req = { .type ^I^I= type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1254: FILE: arch/um/os-Linux/aio.c:375:
+        struct aio_thread_req req = { .type ^I^I= type,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: arch/um/os-Linux/aio.c:375:
+        struct aio_thread_req req = { .type ^I^I= type,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1255: FILE: arch/um/os-Linux/aio.c:376:
+                                      .io_fd^I^I= io_fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: arch/um/os-Linux/aio.c:376:
+                                      .io_fd^I^I= io_fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1256: FILE: arch/um/os-Linux/aio.c:377:
+                                      .offset^I^I= offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: arch/um/os-Linux/aio.c:377:
+                                      .offset^I^I= offset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1257: FILE: arch/um/os-Linux/aio.c:378:
+                                      .buf^I^I= buf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: arch/um/os-Linux/aio.c:378:
+                                      .buf^I^I= buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1258: FILE: arch/um/os-Linux/aio.c:379:
+                                      .len^I^I= len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1258: FILE: arch/um/os-Linux/aio.c:379:
+                                      .len^I^I= len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1259: FILE: arch/um/os-Linux/aio.c:380:
+                                      .aio^I^I= aio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1259: FILE: arch/um/os-Linux/aio.c:380:
+                                      .aio^I^I= aio,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1260: FILE: arch/um/os-Linux/aio.c:381:
+        };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1260: FILE: arch/um/os-Linux/aio.c:381:
+        };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1261: FILE: arch/um/os-Linux/aio.c:382:
+        int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1261: FILE: arch/um/os-Linux/aio.c:382:
+        int err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1263: FILE: arch/um/os-Linux/aio.c:384:
+        err = os_write_file(aio_req_fd_w, &req, sizeof(req));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: arch/um/os-Linux/aio.c:384:
+        err = os_write_file(aio_req_fd_w, &req, sizeof(req));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1264: FILE: arch/um/os-Linux/aio.c:385:
+        if(err == sizeof(req))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: arch/um/os-Linux/aio.c:385:
+        if(err == sizeof(req))$

ERROR:SPACING: space required before the open parenthesis '('
#1264: FILE: arch/um/os-Linux/aio.c:385:
+        if(err == sizeof(req))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1265: FILE: arch/um/os-Linux/aio.c:386:
+                err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: arch/um/os-Linux/aio.c:386:
+                err = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: arch/um/os-Linux/aio.c:388:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1267: FILE: arch/um/os-Linux/aio.c:388:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1271: FILE: arch/um/os-Linux/aio.c:392:
+               unsigned long long offset, int reply_fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1271: FILE: arch/um/os-Linux/aio.c:392:
+               unsigned long long offset, int reply_fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1272: FILE: arch/um/os-Linux/aio.c:393:
+               struct aio_context *aio)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: arch/um/os-Linux/aio.c:393:
+               struct aio_context *aio)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: arch/um/os-Linux/aio.c:395:
+        aio->reply_fd = reply_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: arch/um/os-Linux/aio.c:395:
+        aio->reply_fd = reply_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: arch/um/os-Linux/aio.c:396:
+        if(aio_24)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1276: FILE: arch/um/os-Linux/aio.c:396:
+        if(aio_24)$

ERROR:SPACING: space required before the open parenthesis '('
#1276: FILE: arch/um/os-Linux/aio.c:396:
+        if(aio_24)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1276: FILE: arch/um/os-Linux/aio.c:396:
+        if(aio_24)
[...]
+        else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: arch/um/os-Linux/aio.c:397:
+                return submit_aio_24(type, io_fd, buf, len, offset, aio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: arch/um/os-Linux/aio.c:397:
+                return submit_aio_24(type, io_fd, buf, len, offset, aio);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: arch/um/os-Linux/aio.c:398:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: arch/um/os-Linux/aio.c:398:
+        else {$

CHECK:BRACES: Unbalanced braces around else statement
#1278: FILE: arch/um/os-Linux/aio.c:398:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: arch/um/os-Linux/aio.c:399:
+                return submit_aio_26(type, io_fd, buf, len, offset, aio);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: arch/um/os-Linux/aio.c:399:
+                return submit_aio_26(type, io_fd, buf, len, offset, aio);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: arch/um/os-Linux/aio.c:400:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: arch/um/os-Linux/aio.c:400:
+        }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 164 errors, 119 warnings, 20 checks, 1197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
