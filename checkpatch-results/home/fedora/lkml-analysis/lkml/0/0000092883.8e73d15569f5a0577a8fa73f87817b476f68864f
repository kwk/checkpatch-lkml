WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#52: FILE: drivers/media/dvb/b2c2/flexcop-fe-tuner.c:527:
 	} else
[...]
+	if ((fc->fe = vp310_mt312_attach(&skystar23_samsung_tbdu18132_config, &fc->i2c_adap)) != NULL) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#55: FILE: drivers/media/dvb/b2c2/flexcop-fe-tuner.c:529:
+	if ((fc->fe = vp310_mt312_attach(&skystar23_samsung_tbdu18132_config, &fc->i2c_adap)) != NULL) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#55: FILE: drivers/media/dvb/b2c2/flexcop-fe-tuner.c:529:
+	if ((fc->fe = vp310_mt312_attach(&skystar23_samsung_tbdu18132_config, &fc->i2c_adap)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#159: FILE: drivers/media/dvb/frontends/mt312.c:653:
+struct dvb_frontend* vp310_mt312_attach(const struct mt312_config* config,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#159: FILE: drivers/media/dvb/frontends/mt312.c:653:
+struct dvb_frontend* vp310_mt312_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#160: FILE: drivers/media/dvb/frontends/mt312.c:654:
+					struct i2c_adapter* i2c)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#162: FILE: drivers/media/dvb/frontends/mt312.c:656:
+	struct mt312_state* state = NULL;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct mt312_state)...)
#165: FILE: drivers/media/dvb/frontends/mt312.c:659:
+	state = kmalloc(sizeof(struct mt312_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#166: FILE: drivers/media/dvb/frontends/mt312.c:660:
+	if (state == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#172: FILE: drivers/media/dvb/frontends/mt312.c:666:
+	memcpy(&state->ops, &vp310_mt312_ops, sizeof(struct dvb_frontend_ops));

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#188: FILE: drivers/media/dvb/frontends/mt312.c:682:
+		printk (KERN_WARNING "Only Zarlink VP310/MT312 are supported chips.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: drivers/media/dvb/frontends/mt312.c:682:
+		printk (KERN_WARNING "Only Zarlink VP310/MT312 are supported chips.\n");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#211: FILE: drivers/media/dvb/frontends/mt312.c:703:
+EXPORT_SYMBOL(vp310_mt312_attach);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#223: FILE: drivers/media/dvb/frontends/mt312.h:41:
+struct dvb_frontend* vp310_mt312_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#223: FILE: drivers/media/dvb/frontends/mt312.h:41:
+struct dvb_frontend* vp310_mt312_attach(const struct mt312_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#224: FILE: drivers/media/dvb/frontends/mt312.h:42:
+					struct i2c_adapter* i2c);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 2 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092883.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
