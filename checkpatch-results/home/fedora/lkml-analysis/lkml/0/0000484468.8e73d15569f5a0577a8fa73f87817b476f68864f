WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> PIPE_WAITING_WRITERS, but that doesn't work with nonblocking IO and is not

WARNING:TYPO_SPELLING: 'fullfilled' may be misspelled - perhaps 'fulfilled'?
#57: 
fullfilled. Then return to userspace.
^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: fs/pipe.c:163:
+               size_t j = min((size_t)PIPE_SIZE(*inode), pio->len);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/pipe.c:163:
+               size_t j = min((size_t)PIPE_SIZE(*inode), pio->len);$

WARNING:MINMAX: min() should probably be min_t(size_t, PIPE_SIZE(*inode), pio->len)
#263: FILE: fs/pipe.c:163:
+               size_t j = min((size_t)PIPE_SIZE(*inode), pio->len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/pipe.c:206:
+                       if (chars > PIPE_SIZE(*inode)-offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/pipe.c:206:
+                       if (chars > PIPE_SIZE(*inode)-offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#273: FILE: fs/pipe.c:206:
+                       if (chars > PIPE_SIZE(*inode)-offset)
+                               chars = PIPE_SIZE(*inode)-offset;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#273: FILE: fs/pipe.c:206:
+                       if (chars > PIPE_SIZE(*inode)-offset)
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: fs/pipe.c:207:
+                               chars = PIPE_SIZE(*inode)-offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/pipe.c:207:
+                               chars = PIPE_SIZE(*inode)-offset;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#274: FILE: fs/pipe.c:207:
+                               chars = PIPE_SIZE(*inode)-offset;
                                                         ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#276: FILE: fs/pipe.c:208:
chars))) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: fs/pipe.c:331:
+               while(start = PIPE_LEN(*inode),chars = PIPE_SIZE(*inode) -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/pipe.c:331:
+               while(start = PIPE_LEN(*inode),chars = PIPE_SIZE(*inode) -$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#285: FILE: fs/pipe.c:331:
+               while(start = PIPE_LEN(*inode),chars = PIPE_SIZE(*inode) -
[...]
                        start += PIPE_START(*inode);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: fs/pipe.c:331:
+               while(start = PIPE_LEN(*inode),chars = PIPE_SIZE(*inode) -
                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#285: FILE: fs/pipe.c:331:
+               while(start = PIPE_LEN(*inode),chars = PIPE_SIZE(*inode) -

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: fs/pipe.c:333:
+                       start %= PIPE_SIZE(*inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/pipe.c:333:
+                       start %= PIPE_SIZE(*inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: fs/pipe.c:334:
+                       if (chars > PIPE_SIZE(*inode) - start)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/pipe.c:334:
+                       if (chars > PIPE_SIZE(*inode) - start)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#292: FILE: fs/pipe.c:334:
+                       if (chars > PIPE_SIZE(*inode) - start)
+                               chars = PIPE_SIZE(*inode) - start;

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: fs/pipe.c:335:
+                               chars = PIPE_SIZE(*inode) - start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/pipe.c:335:
+                               chars = PIPE_SIZE(*inode) - start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: fs/pipe.c:475:
+               free_pages((unsigned long) info->base, info->order);$

CHECK:SPACING: No space is necessary after a cast
#302: FILE: fs/pipe.c:475:
+               free_pages((unsigned long) info->base, info->order);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/pipe.c:475:
+               free_pages((unsigned long) info->base, info->order);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: fs/pipe.c:609:
+        int pipe_order = pipe_stat.pipe_size_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: fs/pipe.c:609:
+        int pipe_order = pipe_stat.pipe_size_order;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: fs/pipe.c:611:
+        if (pipe_order > MAX_PIPE_ORDER)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/pipe.c:611:
+        if (pipe_order > MAX_PIPE_ORDER)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: fs/pipe.c:612:
+                pipe_order = MAX_PIPE_ORDER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/pipe.c:612:
+                pipe_order = MAX_PIPE_ORDER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: fs/pipe.c:614:
+       page = __get_free_pages(GFP_USER, pipe_order);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/pipe.c:628:
+       PIPE_ORDER(*inode) = pipe_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: fs/pipe.c:632:
+       free_pages(page, pipe_order);$

CHECK:SPACING: No space is necessary after a cast
#338: FILE: fs/pipe.c:747:
+       free_pages((unsigned long) PIPE_BASE(*inode), PIPE_ORDER(*inode));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/pipe.c:747:
+       free_pages((unsigned long) PIPE_BASE(*inode), PIPE_ORDER(*inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: include/linux/pipe_fs_i.h:17:
+       unsigned int order;$

WARNING:SPACING: missing space after struct definition
#363: FILE: include/linux/pipe_fs_i.h:20:
+struct pipe_stat_t{

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: include/linux/pipe_fs_i.h:21:
+        int pipe_size_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/linux/pipe_fs_i.h:21:
+        int pipe_size_order;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: include/linux/pipe_fs_i.h:22:
+        int pipe_seg_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/linux/pipe_fs_i.h:22:
+        int pipe_seg_order;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#386: FILE: include/linux/pipe_fs_i.h:44:
+#define PIPE_FREE(inode)       (PIPE_SIZE(inode) - PIPE_LEN(inode))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#387: FILE: include/linux/pipe_fs_i.h:45:
+#define PIPE_END(inode)        ((PIPE_START(inode) + PIPE_LEN(inode)) &

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#387: FILE: include/linux/pipe_fs_i.h:45:
+#define PIPE_END(inode)        ((PIPE_START(inode) + PIPE_LEN(inode)) &

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: include/linux/sysctl.h:546:
+        FS_PIPE_SIZE=16,        /* int: number of pages allocated for PIPE$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: kernel/sysctl.c:310:
+        {FS_PIPE_SIZE, "pipe-sz", &pipe_stat, 2*sizeof(int),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: kernel/sysctl.c:310:
+        {FS_PIPE_SIZE, "pipe-sz", &pipe_stat, 2*sizeof(int),$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#415: FILE: kernel/sysctl.c:310:
+        {FS_PIPE_SIZE, "pipe-sz", &pipe_stat, 2*sizeof(int),
                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: kernel/sysctl.c:311:
+         0644, NULL, &proc_dointvec},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: kernel/sysctl.c:311:
+         0644, NULL, &proc_dointvec},$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 27 warnings, 7 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000484468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
