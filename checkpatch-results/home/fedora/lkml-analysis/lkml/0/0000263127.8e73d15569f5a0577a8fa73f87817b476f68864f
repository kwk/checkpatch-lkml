WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: arch/s390/Kconfig:285:
+config VIRT_CPU_ACCOUNTING
+	bool "Base user process accounting on virtual cpu timer"
+	depends on VIRT_TIMER
+	help
+	  Select this option to use CPU timer deltas to do user
+	  process accounting.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#626: FILE: arch/s390/kernel/setup.c:654:
+extern asmlinkage void __do_softirq(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'asynchromous' may be misspelled - perhaps 'asynchronous'?
#641: FILE: arch/s390/kernel/setup.c:669:
+		/* Call __do_softirq on asynchromous interrupt stack. */
 		                        ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#650: FILE: arch/s390/kernel/setup.c:678:
+EXPORT_SYMBOL(do_softirq);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: arch/s390/kernel/vtime.c:73:
+^I^I        "=m" (S390_lowcore.last_update_clock) );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited before that close parenthesis ')'
#796: FILE: arch/s390/kernel/vtime.c:73:
+		        "=m" (S390_lowcore.last_update_clock) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#820: FILE: arch/s390/kernel/vtime.c:97:
+		      "  SPT %1"     /* Set new value immediatly afterwards */
 		                                      ^^^^^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#821: FILE: arch/s390/kernel/vtime.c:98:
+		      : "=m" (timer) : "m" (expires) );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#895: FILE: include/asm-s390/cputime.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#896: FILE: include/asm-s390/cputime.h:2:
+ *  include/asm-s390/cputime.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#910: FILE: include/asm-s390/cputime.h:14:
+typedef unsigned long long cputime_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#911: FILE: include/asm-s390/cputime.h:15:
+typedef unsigned long long cputime64_t;

CHECK:SPACING: No space is necessary after a cast
#969: FILE: include/asm-s390/cputime.h:73:
+	return (cputime_t) m * 1000;

CHECK:SPACING: No space is necessary after a cast
#984: FILE: include/asm-s390/cputime.h:88:
+	return (cputime_t) s * 1000000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: include/asm-s390/cputime.h:97:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#993: FILE: include/asm-s390/cputime.h:97:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: include/asm-s390/cputime.h:97:
+        return value->tv_nsec / 1000 + (u64) value->tv_sec * 1000000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: include/asm-s390/cputime.h:124:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#1020: FILE: include/asm-s390/cputime.h:124:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: include/asm-s390/cputime.h:124:
+        return value->tv_usec + (u64) value->tv_sec * 1000000;$

CHECK:SPACING: No space is necessary after a cast
#1051: FILE: include/asm-s390/cputime.h:155:
+	return (cputime_t) x * (1000000 / USER_HZ);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: include/asm-s390/cputime.h:164:
+       return __div(cputime, 1000000 / USER_HZ);$

ERROR:DEFINE_ARCH_HAS: #define of '__ARCH_HAS_DO_SOFTIRQ' is wrong - use Kconfig variables or standard guards instead
#1088: FILE: include/asm-s390/hardirq.h:101:
+#define __ARCH_HAS_DO_SOFTIRQ

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1170: FILE: include/asm-s390/lowcore.h:193:
+	__u8         pad8[0xc00-0x288];        /* 0x288 */
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: include/asm-s390/lowcore.h:282:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: include/asm-s390/lowcore.h:282:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1189: FILE: include/asm-s390/lowcore.h:282:
+        __u8         pad8[0xc00-0x294];        /* 0x294 */
                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1201: FILE: include/asm-s390/system.h:26:
+extern void update_process_vtimes(struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1202: FILE: include/asm-s390/system.h:27:
+extern void account_process_vtimes(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#1202: FILE: include/asm-s390/system.h:27:
+extern void account_process_vtimes(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 14 warnings, 9 checks, 1091 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
