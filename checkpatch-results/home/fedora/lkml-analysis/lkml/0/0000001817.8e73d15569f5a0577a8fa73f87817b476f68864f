WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#28: 
devices exported exported by a virtual machine containing a physical

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: drivers/block/xen/blkfront.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: drivers/block/xen/blkfront.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/block/xen/blkfront.c:5:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/block/xen/blkfront.c:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/block/xen/blkfront.c:18:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/block/xen/blkfront.c:25:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/block/xen/blkfront.c:28:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/block/xen/blkfront.c:56:
+    (BLKIF_MAX_SEGMENTS_PER_REQUEST * BLK_RING_SIZE)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: drivers/block/xen/blkfront.c:73:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#210: FILE: drivers/block/xen/blkfront.c:106:
+		info->shadow[i].req.id = i+1;
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: drivers/block/xen/blkfront.c:107:
+	info->shadow[BLK_RING_SIZE-1].req.id = 0x0fffffff;
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/block/xen/blkfront.c:110:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#214: FILE: drivers/block/xen/blkfront.c:110:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);
 	                                                        ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#214: FILE: drivers/block/xen/blkfront.c:110:
+	info->handle = simple_strtoul(strrchr(dev->nodename,'/')+1, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/block/xen/blkfront.c:123:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_resume', this function's name, in a string
#239: FILE: drivers/block/xen/blkfront.c:135:
+	DPRINTK("blkfront_resume: %s\n", dev->nodename);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/block/xen/blkfront.c:146:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: drivers/block/xen/blkfront.c:168:
+			    "ring-ref","%u", info->ring_ref);
 			              ^

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateInitialised>
#292: FILE: drivers/block/xen/blkfront.c:188:
+	xenbus_switch_state(dev, XenbusStateInitialised);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: drivers/block/xen/blkfront.c:202:
+
+

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#310: FILE: drivers/block/xen/blkfront.c:206:
+	struct blkif_sring *sring;
 	                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#315: FILE: drivers/block/xen/blkfront.c:211:
+	sring = (struct blkif_sring *)__get_free_page(GFP_KERNEL);
 	^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#316: FILE: drivers/block/xen/blkfront.c:212:
+	if (!sring) {
 	     ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#320: FILE: drivers/block/xen/blkfront.c:216:
+	SHARED_RING_INIT(sring);
 	                 ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#321: FILE: drivers/block/xen/blkfront.c:217:
+	FRONT_RING_INIT(&info->ring, sring, PAGE_SIZE);
 	                             ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#323: FILE: drivers/block/xen/blkfront.c:219:
+	err = xenbus_grant_ring(dev, virt_to_mfn(info->ring.sring));
 	                                                    ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#325: FILE: drivers/block/xen/blkfront.c:221:
+		free_page((unsigned long)sring);
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#326: FILE: drivers/block/xen/blkfront.c:222:
+		info->ring.sring = NULL;
 		           ^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#335: FILE: drivers/block/xen/blkfront.c:231:
+	err = bind_evtchn_to_irqhandler(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#350: FILE: drivers/block/xen/blkfront.c:246:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'backend_changed', this function's name, in a string
#360: FILE: drivers/block/xen/blkfront.c:256:
+	DPRINTK("blkfront:backend_changed.\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bd"
#376: FILE: drivers/block/xen/blkfront.c:272:
+		if (bd == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#391: FILE: drivers/block/xen/blkfront.c:287:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#394: FILE: drivers/block/xen/blkfront.c:290:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->connected == BLKIF_STATE_CONNECTED'
#406: FILE: drivers/block/xen/blkfront.c:302:
+	if ((info->connected == BLKIF_STATE_CONNECTED) ||
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->connected == BLKIF_STATE_SUSPENDED'
#406: FILE: drivers/block/xen/blkfront.c:302:
+	if ((info->connected == BLKIF_STATE_CONNECTED) ||
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#407: FILE: drivers/block/xen/blkfront.c:303:
+	    (info->connected == BLKIF_STATE_SUSPENDED) )

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'connect', this function's name, in a string
#410: FILE: drivers/block/xen/blkfront.c:306:
+	DPRINTK("blkfront.c:connect:%s.\n", info->xbdev->otherend);

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#437: FILE: drivers/block/xen/blkfront.c:333:
+	(void)xenbus_switch_state(info->xbdev, XenbusStateConnected);

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#452: FILE: drivers/block/xen/blkfront.c:348:
+ * acknowledgement.
    ^^^^^^^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_closing', this function's name, in a string
#459: FILE: drivers/block/xen/blkfront.c:355:
+	DPRINTK("blkfront_closing: %s removed\n", dev->nodename);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->rq"
#461: FILE: drivers/block/xen/blkfront.c:357:
+	if (info->rq == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#480: FILE: drivers/block/xen/blkfront.c:376:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'blkfront_remove', this function's name, in a string
#485: FILE: drivers/block/xen/blkfront.c:381:
+	DPRINTK("blkfront_remove: %s removed\n", dev->nodename);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: drivers/block/xen/blkfront.c:390:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#495: FILE: drivers/block/xen/blkfront.c:391:
+static inline int GET_ID_FROM_FREELIST(

WARNING:LINE_SPACING: Missing a blank line after declarations
#499: FILE: drivers/block/xen/blkfront.c:395:
+	unsigned long free = info->shadow_free;
+	BUG_ON(free > BLK_RING_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#499: FILE: drivers/block/xen/blkfront.c:395:
+	BUG_ON(free > BLK_RING_SIZE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#505: FILE: drivers/block/xen/blkfront.c:401:
+static inline void ADD_ID_TO_FREELIST(

WARNING:LINE_SPACING: Missing a blank line after declarations
#546: FILE: drivers/block/xen/blkfront.c:442:
+	struct blkfront_info *info = (struct blkfront_info *)arg;
+	schedule_work(&info->work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#552: FILE: drivers/block/xen/blkfront.c:448:
+	struct blkfront_info *info = inode->i_bdev->bd_disk->private_data;
+	info->users++;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#556: FILE: drivers/block/xen/blkfront.c:452:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#560: FILE: drivers/block/xen/blkfront.c:456:
+	struct blkfront_info *info = inode->i_bdev->bd_disk->private_data;
+	info->users--;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#563: FILE: drivers/block/xen/blkfront.c:459:
+		/* Check whether we have been instructed to close.  We will
+		   have ignored this request initially, as the device was

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#564: FILE: drivers/block/xen/blkfront.c:460:
+		   still mounted. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: drivers/block/xen/blkfront.c:461:
+		struct xenbus_device * dev = info->xbdev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateClosing>
#568: FILE: drivers/block/xen/blkfront.c:464:
+		if (state == XenbusStateClosing)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#574: FILE: drivers/block/xen/blkfront.c:470:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#576: FILE: drivers/block/xen/blkfront.c:472:
+		unsigned command, unsigned long argument)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#593: FILE: drivers/block/xen/blkfront.c:489:
+		/*printk(KERN_ALERT "ioctl %08x not supported by Xen blkdev\n",
+		  command);*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#593: FILE: drivers/block/xen/blkfront.c:489:
+		  command);*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#600: FILE: drivers/block/xen/blkfront.c:496:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#604: FILE: drivers/block/xen/blkfront.c:500:
+	/* We don't have real geometry info, but let's at least return
+	   values consistent with the size of the device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#604: FILE: drivers/block/xen/blkfront.c:500:
+	   values consistent with the size of the device */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#643: FILE: drivers/block/xen/blkfront.c:539:
+	if (gnttab_alloc_grant_references(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#645: FILE: drivers/block/xen/blkfront.c:541:
+		gnttab_request_free_callback(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: drivers/block/xen/blkfront.c:564:
+	rq_for_each_bio (bio, req) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#669: FILE: drivers/block/xen/blkfront.c:565:
+		bio_for_each_segment (bvec, bio, idx) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#670: FILE: drivers/block/xen/blkfront.c:566:
+			BUG_ON(ring_req->nr_segments

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#677: FILE: drivers/block/xen/blkfront.c:573:
+			BUG_ON(ref == -ENOSPC);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#679: FILE: drivers/block/xen/blkfront.c:575:
+			gnttab_grant_foreign_access_ref(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#683: FILE: drivers/block/xen/blkfront.c:579:
+				rq_data_dir(req) );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_blkif_request', this function's name, in a string
#718: FILE: drivers/block/xen/blkfront.c:614:
+	DPRINTK("Entered do_blkif_request\n");

WARNING:SPLIT_STRING: quoted string split across lines
#733: FILE: drivers/block/xen/blkfront.c:629:
+		DPRINTK("do_blk_req %p: cmd %p, sec %lx, "
+			"(%u/%li) buffer:%p [%s]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: drivers/block/xen/blkfront.c:635:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#743: FILE: drivers/block/xen/blkfront.c:639:
+		wait:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#756: FILE: drivers/block/xen/blkfront.c:652:
+
+

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#764: FILE: drivers/block/xen/blkfront.c:660:
+	int uptodate;
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#789: FILE: drivers/block/xen/blkfront.c:685:
+		uptodate = (bret->status == BLKIF_RSP_OKAY);
 		^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#793: FILE: drivers/block/xen/blkfront.c:689:
+				printk("blkfront: %s: write barrier op failed\n",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#795: FILE: drivers/block/xen/blkfront.c:691:
+				uptodate = -EOPNOTSUPP;
 				^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: drivers/block/xen/blkfront.c:693:
+^I^I^I        xlvbd_barrier(info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#799: FILE: drivers/block/xen/blkfront.c:695:
+			/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPLIT_STRING: quoted string split across lines
#804: FILE: drivers/block/xen/blkfront.c:700:
+				DPRINTK("Bad return from blkdev data "
+					"request: %x\n", bret->status);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#806: FILE: drivers/block/xen/blkfront.c:702:
+			ret = end_that_request_first(req, uptodate,
 			                                  ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/block/xen/blkfront.c:703:
+			ret = end_that_request_first(req, uptodate,
+				req->hard_nr_sectors);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#808: FILE: drivers/block/xen/blkfront.c:704:
+			BUG_ON(ret);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#809: FILE: drivers/block/xen/blkfront.c:705:
+			end_that_request_last(req, uptodate);
 			                           ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#812: FILE: drivers/block/xen/blkfront.c:708:
+			BUG();

CHECK:BRACES: braces {} should be used on all arms of this statement
#818: FILE: drivers/block/xen/blkfront.c:714:
+	if (i != info->ring.req_prod_pvt) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: drivers/block/xen/blkfront.c:716:
+		int more_to_do;
+		RING_FINAL_CHECK_FOR_RESPONSES(&info->ring, more_to_do);

CHECK:BRACES: Unbalanced braces around else statement
#823: FILE: drivers/block/xen/blkfront.c:719:
+	} else

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#852: FILE: drivers/block/xen/blkfront.c:748:
+					  (unsigned long)info->ring.sring);
 					                            ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#854: FILE: drivers/block/xen/blkfront.c:750:
+		info->ring.sring = NULL;
 		           ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#858: FILE: drivers/block/xen/blkfront.c:754:
+	info->evtchn = info->irq = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#860: FILE: drivers/block/xen/blkfront.c:756:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#865: FILE: drivers/block/xen/blkfront.c:761:
+	int i;
+	for (i = 0; i < s->req.nr_segments; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#883: FILE: drivers/block/xen/blkfront.c:779:
+		info->shadow[i].req.id = i+1;
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#885: FILE: drivers/block/xen/blkfront.c:781:
+	info->shadow[BLK_RING_SIZE-1].req.id = 0x0fffffff;
 	                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#894: FILE: drivers/block/xen/blkfront.c:790:
+		req = RING_GET_REQUEST(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#904: FILE: drivers/block/xen/blkfront.c:800:
+			gnttab_grant_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#908: FILE: drivers/block/xen/blkfront.c:804:
+				rq_data_dir(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#934: FILE: drivers/block/xen/blkfront.c:830:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#937: FILE: drivers/block/xen/blkfront.c:833:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#943: FILE: drivers/block/xen/blkfront.c:839:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#954: FILE: drivers/block/xen/blkfront.c:850:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#967: FILE: drivers/block/xen/blkfront.c:863:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#979: FILE: drivers/block/xen/block.h:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/block/xen/block.h:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: drivers/block/xen/block.h:5:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: drivers/block/xen/block.h:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: drivers/block/xen/block.h:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1000: FILE: drivers/block/xen/block.h:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: drivers/block/xen/block.h:25:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1033: FILE: drivers/block/xen/block.h:55:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1034: FILE: drivers/block/xen/block.h:56:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1035: FILE: drivers/block/xen/block.h:57:
+#include <asm/uaccess.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1037: FILE: drivers/block/xen/block.h:59:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1039: FILE: drivers/block/xen/block.h:61:
+	printk(KERN_INFO "xen_blk: " fmt, ##args)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1044: FILE: drivers/block/xen/block.h:66:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1046: FILE: drivers/block/xen/block.h:68:
+	printk(KERN_WARNING "xen_blk: " fmt, ##args)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1053: FILE: drivers/block/xen/block.h:75:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1054: FILE: drivers/block/xen/block.h:76:
+#define DPRINTK_IOCTL(_f, _a...) printk(KERN_ALERT _f, ## _a)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1060: FILE: drivers/block/xen/block.h:82:
+struct xlbd_type_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1068: FILE: drivers/block/xen/block.h:90:
+struct xlbd_major_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1089: FILE: drivers/block/xen/block.h:111:
+struct blkfront_info
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1092: FILE: drivers/block/xen/block.h:114:
+ ^Istruct gendisk *gd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1092: FILE: drivers/block/xen/block.h:114:
+ ^Istruct gendisk *gd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: drivers/block/xen/block.h:114:
+ ^Istruct gendisk *gd;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1116: FILE: drivers/block/xen/block.h:138:
+extern int blkif_open(struct inode *inode, struct file *filep);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1117: FILE: drivers/block/xen/block.h:139:
+extern int blkif_release(struct inode *inode, struct file *filep);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1118: FILE: drivers/block/xen/block.h:140:
+extern int blkif_ioctl(struct inode *inode, struct file *filep,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1119: FILE: drivers/block/xen/block.h:141:
+		       unsigned command, unsigned long argument);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1120: FILE: drivers/block/xen/block.h:142:
+extern int blkif_getgeo(struct block_device *, struct hd_geometry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#1120: FILE: drivers/block/xen/block.h:142:
+extern int blkif_getgeo(struct block_device *, struct hd_geometry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hd_geometry *' should also have an identifier name
#1120: FILE: drivers/block/xen/block.h:142:
+extern int blkif_getgeo(struct block_device *, struct hd_geometry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1121: FILE: drivers/block/xen/block.h:143:
+extern int blkif_check(dev_t dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1122: FILE: drivers/block/xen/block.h:144:
+extern int blkif_revalidate(dev_t dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1123: FILE: drivers/block/xen/block.h:145:
+extern void do_blkif_request (request_queue_t *rq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1123: FILE: drivers/block/xen/block.h:145:
+extern void do_blkif_request (request_queue_t *rq);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1128: FILE: drivers/block/xen/block.h:150:
+/* Note that xlvbd_add doesn't call add_disk for you: you're expected
+   to call add_disk on info->gd once the disk is properly connected

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1129: FILE: drivers/block/xen/block.h:151:
+   up. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1140: FILE: drivers/block/xen/vbd.c:1:
+/******************************************************************************

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: drivers/block/xen/vbd.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: drivers/block/xen/vbd.c:5:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1148: FILE: drivers/block/xen/vbd.c:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: drivers/block/xen/vbd.c:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/block/xen/vbd.c:22:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1164: FILE: drivers/block/xen/vbd.c:25:
+ * $

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1178: FILE: drivers/block/xen/vbd.c:39:
+#define BLKIF_MAJOR(dev) ((dev)>>8)
                                ^

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1197: FILE: drivers/block/xen/vbd.c:58:
+static struct block_device_operations xlvbd_block_fops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1198: FILE: drivers/block/xen/vbd.c:59:
+static struct block_device_operations xlvbd_block_fops =
+{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1211: FILE: drivers/block/xen/vbd.c:72:
+	printk("Registering block device major %i\n", xvd_major_info.major);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#1227: FILE: drivers/block/xen/vbd.c:88:
+	if (rq == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1262: FILE: drivers/block/xen/vbd.c:123:
+	BUG_ON(info->gd != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->gd"
#1262: FILE: drivers/block/xen/vbd.c:123:
+	BUG_ON(info->gd != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1263: FILE: drivers/block/xen/vbd.c:124:
+	BUG_ON(info->mi != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->mi"
#1263: FILE: drivers/block/xen/vbd.c:124:
+	BUG_ON(info->mi != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1264: FILE: drivers/block/xen/vbd.c:125:
+	BUG_ON(info->rq != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->rq"
#1264: FILE: drivers/block/xen/vbd.c:125:
+	BUG_ON(info->rq != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gd"
#1273: FILE: drivers/block/xen/vbd.c:134:
+	if (gd == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->xbdev->dev
#1290: FILE: drivers/block/xen/vbd.c:151:
+	gd->driverfs_dev = &(info->xbdev->dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bd"
#1330: FILE: drivers/block/xen/vbd.c:191:
+	if (bd == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->mi"
#1343: FILE: drivers/block/xen/vbd.c:204:
+	if (info->mi == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1346: FILE: drivers/block/xen/vbd.c:207:
+	BUG_ON(info->gd == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->gd"
#1346: FILE: drivers/block/xen/vbd.c:207:
+	BUG_ON(info->gd == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1353: FILE: drivers/block/xen/vbd.c:214:
+	BUG_ON(info->rq == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->rq"
#1353: FILE: drivers/block/xen/vbd.c:214:
+	BUG_ON(info->rq == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1364: FILE: drivers/block/xen/vbd.c:225:
+	err = blk_queue_ordered(info->rq,
+		info->feature_barrier ? QUEUE_ORDERED_DRAIN : QUEUE_ORDERED_NONE, NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1367: FILE: drivers/block/xen/vbd.c:228:
+	printk("blkfront: %s: barriers %s\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 78 warnings, 64 checks, 1296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
