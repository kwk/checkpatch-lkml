WARNING:TYPO_SPELLING: 'thst' may be misspelled - perhaps 'that'?
#55: 
     inode semaphore around the code thst sets ni->itype.index.bmp_ino to
                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#59: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'thst' may be misspelled - perhaps 'that'?
#84: FILE: fs/ntfs/ChangeLog:118:
+	  inode semaphore around the code thst sets ni->itype.index.bmp_ino to
 	                                  ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: fs/ntfs/inode.c:2103:
+		ntfs_inode *ni = NTFS_I(vi);
+		if (NInoIndexAllocPresent(ni)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <NInoIndexAllocPresent>
#117: FILE: fs/ntfs/inode.c:2103:
+		if (NInoIndexAllocPresent(ni)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: fs/ntfs/inode.c:2105:
+			struct inode *bvi = NULL;
+			down(&vi->i_sem);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#127: FILE: fs/ntfs/inode.c:2113:
+				iput(bvi);
 				^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ni->type == AT_INDEX_ALLOCATION'
#154: FILE: fs/ntfs/inode.c:2190:
+	if (NInoAttr(ni) && (ni->type == AT_INDEX_ALLOCATION) &&
+			NInoIndexAllocPresent(ni) && ni->itype.index.bmp_ino) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#154: FILE: fs/ntfs/inode.c:2190:
+	if (NInoAttr(ni) && (ni->type == AT_INDEX_ALLOCATION) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: fs/ntfs/inode.c:2191:
+	if (NInoAttr(ni) && (ni->type == AT_INDEX_ALLOCATION) &&
+			NInoIndexAllocPresent(ni) && ni->itype.index.bmp_ino) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#156: FILE: fs/ntfs/inode.c:2192:
+		iput(ni->itype.index.bmp_ino);
 		^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240415.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 4 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240415.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
