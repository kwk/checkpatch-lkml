WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Content-Disposition: attachment; filename=sched-O1-sparc64-rml-2.4.19-pre10-ac2-1.patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: arch/sparc64/kernel/irq.c:165:
+		tid =3D (starfire_translate(imap, smp_processor_id()) << 26);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#72: FILE: arch/sparc64/kernel/irq.c:165:
+		tid =3D (starfire_translate(imap, smp_processor_id()) << 26);
 		    ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#75: FILE: arch/sparc64/kernel/irq.c:167:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#101: FILE: arch/sparc64/kernel/process.c:78:
+#define idle_me_harder()	(cpu_data[smp_processor_id()].idle_volume +=3D 1)
                         	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#102: FILE: arch/sparc64/kernel/process.c:79:
+#define unidle_me()		(cpu_data[smp_processor_id()].idle_volume =3D 0)
                    		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: arch/sparc64/kernel/smp.c:264:
+	if (linux_num_cpus =3D=3D 1) {
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#150: FILE: arch/sparc64/kernel/smp.c:264:
+	if (linux_num_cpus =3D=3D 1) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#150: FILE: arch/sparc64/kernel/smp.c:264:
+	if (linux_num_cpus =3D=3D 1) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#183: FILE: arch/sparc64/kernel/smp.c:343:
+	/* We want to run this with all the other cpus spinning
+	* in the kernel.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: arch/sparc64/kernel/smp.c:1182:
 }
+cycles_t cacheflush_time;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#205: FILE: arch/sparc64/kernel/smp.c:1185:
+extern unsigned long cheetah_tune_scheduling(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#206: FILE: arch/sparc64/kernel/smp.c:1186:
+extern unsigned long timer_ticks_per_usec_quotient;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: arch/sparc64/kernel/smp.c:1204:
+	printk("SMP: Calibrating ecache flush... ");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#225: FILE: arch/sparc64/kernel/smp.c:1205:
+	if (tlb_type =3D=3D cheetah) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#225: FILE: arch/sparc64/kernel/smp.c:1205:
+	if (tlb_type =3D=3D cheetah) {
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: arch/sparc64/kernel/smp.c:1205:
+	if (tlb_type =3D=3D cheetah) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#226: FILE: arch/sparc64/kernel/smp.c:1206:
+		cacheflush_time =3D cheetah_tune_scheduling();
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#230: FILE: arch/sparc64/kernel/smp.c:1210:
+	ecache_size =3D prom_getintdefault(linux_cpus[0].prom_node,
 	            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: arch/sparc64/kernel/smp.c:1213:
+		ecache_size =3D (4 * 1024 * 1024);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: arch/sparc64/kernel/smp.c:1213:
+		ecache_size =3D (4 * 1024 * 1024);
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#234: FILE: arch/sparc64/kernel/smp.c:1214:
+	orig_flush_base =3D flush_base =3D
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#234: FILE: arch/sparc64/kernel/smp.c:1214:
+	orig_flush_base =3D flush_base =3D
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#235: FILE: arch/sparc64/kernel/smp.c:1215:
+		__get_free_pages(GFP_KERNEL, order =3D get_order(ecache_size));
 		                                   ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#237: FILE: arch/sparc64/kernel/smp.c:1217:
+	if (flush_base !=3D 0UL) {
 	               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: arch/sparc64/kernel/smp.c:1223:
+		for (p =3D (unsigned long *)flush_base;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#243: FILE: arch/sparc64/kernel/smp.c:1223:
+		for (p =3D (unsigned long *)flush_base;
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#244: FILE: arch/sparc64/kernel/smp.c:1224:
+		     ((unsigned long)p) < (flush_base + (ecache_size<<1));
 		                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: arch/sparc64/kernel/smp.c:1225:
+		     p +=3D (64 / sizeof(unsigned long)))

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#245: FILE: arch/sparc64/kernel/smp.c:1225:
+		     p +=3D (64 / sizeof(unsigned long)))
 		       ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#246: FILE: arch/sparc64/kernel/smp.c:1226:
+			*((volatile unsigned long *)p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: arch/sparc64/kernel/smp.c:1250:
+		raw =3D (tick2 - tick1);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#270: FILE: arch/sparc64/kernel/smp.c:1250:
+		raw =3D (tick2 - tick1);
 		    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: arch/sparc64/kernel/smp.c:1255:
+		cacheflush_time =3D (raw - (raw >> 2));

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: arch/sparc64/kernel/smp.c:1255:
+		cacheflush_time =3D (raw - (raw >> 2));
 		                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: arch/sparc64/kernel/smp.c:1259:
+		cacheflush_time =3D ((ecache_size << 2) +

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#279: FILE: arch/sparc64/kernel/smp.c:1259:
+		cacheflush_time =3D ((ecache_size << 2) +
 		                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: arch/sparc64/kernel/smp.c:1264:
+	cache_decay_ticks =3D ((long)cacheflush_time * timer_ticks_per_usec_quoti=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#284: FILE: arch/sparc64/kernel/smp.c:1264:
+	cache_decay_ticks =3D ((long)cacheflush_time * timer_ticks_per_usec_quoti=
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#284: FILE: arch/sparc64/kernel/smp.c:1264:
+	cache_decay_ticks =3D ((long)cacheflush_time * timer_ticks_per_usec_quoti=
 	                                                                         ^

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#286: FILE: arch/sparc64/kernel/smp.c:1265:
+	cache_decay_ticks >>=3D 32UL;
 	                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: arch/sparc64/kernel/smp.c:1266:
+	cache_decay_ticks =3D (cache_decay_ticks * HZ) / 1000;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#287: FILE: arch/sparc64/kernel/smp.c:1266:
+	cache_decay_ticks =3D (cache_decay_ticks * HZ) / 1000;
 	                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: arch/sparc64/kernel/smp.c:1268:
+	printk("Using heuristic of %ld cycles, %ld ticks.\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#317: FILE: arch/sparc64/kernel/traps.c:1:
+/* $Id: traps.c,v 1.84 2002/01/30 01:39:56 davem Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#317: FILE: arch/sparc64/kernel/traps.c:1:
+/* $Id: traps.c,v 1.84 2002/01/30 01:39:56 davem Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#325: FILE: arch/sparc64/kernel/traps.c:529:
 }
+#ifdef CONFIG_SMP

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: arch/sparc64/kernel/traps.c:538:
+	raw =3D (tick2 - tick1);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#334: FILE: arch/sparc64/kernel/traps.c:538:
+	raw =3D (tick2 - tick1);
 	    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#347: FILE: arch/sparc64/kernel/traps.c:1677:
 }
+/* Only invoked on boot processor. */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#361: FILE: arch/sparc64/kernel/traps.c:1686:
+	current->cpu =3D hard_smp_processor_id();
 	             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#384: FILE: include/asm-sparc64/bitops.h:1:
+/* $Id: bitops.h,v 1.39 2002/01/30 01:40:00 davem Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#384: FILE: include/asm-sparc64/bitops.h:1:
+/* $Id: bitops.h,v 1.39 2002/01/30 01:40:00 davem Exp $

WARNING:INLINE: plain inline is preferred over __inline__
#401: FILE: include/asm-sparc64/bitops.h:67:
+static __inline__ int test_bit(int nr, __const__ void *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#409: FILE: include/asm-sparc64/bitops.h:72:
+static __inline__ unsigned long ffz(unsigned long word)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#453: FILE: include/asm-sparc64/bitops.h:82:
+}
+/**

WARNING:INLINE: plain inline is preferred over __inline__
#459: FILE: include/asm-sparc64/bitops.h:88:
+static __inline__ unsigned long __ffs(unsigned long word)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#461: FILE: include/asm-sparc64/bitops.h:90:
+	unsigned long result =3D 0;
 	                     ^

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#465: FILE: include/asm-sparc64/bitops.h:94:
+		word >>=3D 1;
 		     ^

WARNING:INLINE: plain inline is preferred over __inline__
#496: FILE: include/asm-sparc64/bitops.h:121:
+static __inline__ int ffs(int x)

WARNING:INLINE: plain inline is preferred over __inline__
#510: FILE: include/asm-sparc64/bitops.h:139:
+static __inline__ unsigned int hweight32(unsigned int w)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#519: FILE: include/asm-sparc64/bitops.h:148:
 }
+static __inline__ unsigned int hweight16(unsigned int w)

WARNING:INLINE: plain inline is preferred over __inline__
#519: FILE: include/asm-sparc64/bitops.h:148:
+static __inline__ unsigned int hweight16(unsigned int w)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#528: FILE: include/asm-sparc64/bitops.h:156:
 }
+static __inline__ unsigned int hweight8(unsigned int w)

WARNING:INLINE: plain inline is preferred over __inline__
#528: FILE: include/asm-sparc64/bitops.h:156:
+static __inline__ unsigned int hweight8(unsigned int w)

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#542: FILE: include/asm-sparc64/bitops.h:179:
+static __inline__ unsigned long find_next_bit(void *addr, unsigned long si=
                                                                           ^

WARNING:INLINE: plain inline is preferred over __inline__
#542: FILE: include/asm-sparc64/bitops.h:179:
+static __inline__ unsigned long find_next_bit(void *addr, unsigned long si=

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#544: FILE: include/asm-sparc64/bitops.h:180:
+static __inline__ unsigned long find_next_bit(void *addr, unsigned long si=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#545: FILE: include/asm-sparc64/bitops.h:181:
+	unsigned long *p =3D ((unsigned long *) addr) + (offset >> 6);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: include/asm-sparc64/bitops.h:181:
+	unsigned long *p =3D ((unsigned long *) addr) + (offset >> 6);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#545: FILE: include/asm-sparc64/bitops.h:181:
+	unsigned long *p =3D ((unsigned long *) addr) + (offset >> 6);
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#546: FILE: include/asm-sparc64/bitops.h:182:
+	unsigned long result =3D offset & ~63UL;
 	                     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#549: FILE: include/asm-sparc64/bitops.h:185:
+	if (offset >=3D size)
 	           ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#551: FILE: include/asm-sparc64/bitops.h:187:
+	size -=3D result;
 	     ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#552: FILE: include/asm-sparc64/bitops.h:188:
+	offset &=3D 63UL;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#554: FILE: include/asm-sparc64/bitops.h:190:
+		tmp =3D *(p++);
 		    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#554: FILE: include/asm-sparc64/bitops.h:190:
+		tmp =3D *(p++);
 		        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: include/asm-sparc64/bitops.h:191:
+		tmp &=3D (~0UL << offset);

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#555: FILE: include/asm-sparc64/bitops.h:191:
+		tmp &=3D (~0UL << offset);
 		    ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#560: FILE: include/asm-sparc64/bitops.h:196:
+		size -=3D 64;
 		     ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#561: FILE: include/asm-sparc64/bitops.h:197:
+		result +=3D 64;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#564: FILE: include/asm-sparc64/bitops.h:200:
+		if ((tmp =3D *(p++)))
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#564: FILE: include/asm-sparc64/bitops.h:200:
+		if ((tmp =3D *(p++)))
 		             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#564: FILE: include/asm-sparc64/bitops.h:200:
+		if ((tmp =3D *(p++)))

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#566: FILE: include/asm-sparc64/bitops.h:202:
+		result +=3D 64;
 		       ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#567: FILE: include/asm-sparc64/bitops.h:203:
+		size -=3D 64;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#571: FILE: include/asm-sparc64/bitops.h:207:
+	tmp =3D *p;
 	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#571: FILE: include/asm-sparc64/bitops.h:207:
+	tmp =3D *p;
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#574: FILE: include/asm-sparc64/bitops.h:210:
+	tmp &=3D (~0UL >> (64 - size));

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#574: FILE: include/asm-sparc64/bitops.h:210:
+	tmp &=3D (~0UL >> (64 - size));
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#575: FILE: include/asm-sparc64/bitops.h:211:
+	if (tmp =3D=3D 0UL)        /* Are any bits set? */
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#575: FILE: include/asm-sparc64/bitops.h:211:
+	if (tmp =3D=3D 0UL)        /* Are any bits set? */
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#575: FILE: include/asm-sparc64/bitops.h:211:
+	if (tmp =3D=3D 0UL)        /* Are any bits set? */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#599: FILE: include/asm-sparc64/bitops.h:232:
+static __inline__ unsigned long find_next_zero_bit(void *addr, unsigned lo=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#599: FILE: include/asm-sparc64/bitops.h:232:
+static __inline__ unsigned long find_next_zero_bit(void *addr, unsigned lo=
                                                                           ^

WARNING:INLINE: plain inline is preferred over __inline__
#599: FILE: include/asm-sparc64/bitops.h:232:
+static __inline__ unsigned long find_next_zero_bit(void *addr, unsigned lo=

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#609: FILE: include/asm-sparc64/bitops.h:282:
+static __inline__ int test_le_bit(int nr, __const__ void * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#609: FILE: include/asm-sparc64/bitops.h:282:
+static __inline__ int test_le_bit(int nr, __const__ void * addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#619: FILE: include/asm-sparc64/bitops.h:296:
+static __inline__ unsigned long find_next_zero_le_bit(void *addr, unsigned=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#619: FILE: include/asm-sparc64/bitops.h:296:
+static __inline__ unsigned long find_next_zero_le_bit(void *addr, unsigned=
                                                                           ^

WARNING:INLINE: plain inline is preferred over __inline__
#619: FILE: include/asm-sparc64/bitops.h:296:
+static __inline__ unsigned long find_next_zero_le_bit(void *addr, unsigned=

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#634: FILE: include/asm-sparc64/smp.h:105:
 }
+#define smp_processor_id() (current->cpu)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#671: FILE: kernel/sched.c:398:
+		if (oldmm =3D=3D mm) {
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#671: FILE: kernel/sched.c:398:
+		if (oldmm =3D=3D mm) {
 		             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#671: FILE: kernel/sched.c:398:
+		if (oldmm =3D=3D mm) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450180.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 37 warnings, 12 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450180.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
