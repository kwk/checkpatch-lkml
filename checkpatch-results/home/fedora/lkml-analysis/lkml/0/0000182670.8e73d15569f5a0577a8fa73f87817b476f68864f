WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: arch/um/sys-i386/delay.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)
                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#49: FILE: arch/um/sys-i386/delay.c:25:
+        for(i=0;i<n;i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: arch/um/sys-i386/delay.c:26:
+                barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: arch/um/sys-i386/delay.c:26:
+                barrier();$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#53: FILE: arch/um/sys-i386/delay.c:29:
+EXPORT_SYMBOL(__udelay);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)
              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)
                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#61: FILE: arch/um/sys-i386/delay.c:36:
+        for(i=0;i<n;i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: arch/um/sys-i386/delay.c:37:
+                barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/um/sys-i386/delay.c:37:
+                barrier();$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#65: FILE: arch/um/sys-i386/delay.c:40:
+EXPORT_SYMBOL(__const_udelay);

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#79: FILE: arch/um/sys-x86_64/delay.c:10:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: arch/um/sys-x86_64/delay.c:17:
+        for(i = 0; i < loops; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/um/sys-x86_64/delay.c:17:
+        for(i = 0; i < loops; i++)$

ERROR:SPACING: space required before the open parenthesis '('
#87: FILE: arch/um/sys-x86_64/delay.c:17:
+        for(i = 0; i < loops; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: arch/um/sys-x86_64/delay.c:18:
+                barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/um/sys-x86_64/delay.c:18:
+                barrier();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)
              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)
                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: arch/um/sys-x86_64/delay.c:26:
+        for(i=0;i<n;i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/um/sys-x86_64/delay.c:27:
+                barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/um/sys-x86_64/delay.c:27:
+                barrier();$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#102: FILE: arch/um/sys-x86_64/delay.c:30:
+EXPORT_SYMBOL(__udelay);

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)
              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)
                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: arch/um/sys-x86_64/delay.c:37:
+        for(i=0;i<n;i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/um/sys-x86_64/delay.c:38:
+                barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/um/sys-x86_64/delay.c:38:
+                barrier();$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#125: FILE: arch/um/sys-x86_64/delay.c:41:
+EXPORT_SYMBOL(__const_udelay);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182670.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 15 warnings, 1 checks, 85 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000182670.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
