WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
 asm-ia64/waitlock_types.h      |   66 ++++++++++++++++++++++++++++++++++++++

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: include/asm-i386/waitlock_types.h:1:
+#ifndef __ASM_I386_WAITLOCK_TYPES_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#104: FILE: include/asm-i386/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)	, (long)&(name).__magic
                                	^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#104: FILE: include/asm-i386/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)	, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: include/asm-i386/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)		\
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#109: FILE: include/asm-i386/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)		\
+{	ATOMIC_INIT(count), 0,				\
+	__WAIT_QUEUE_HEAD_INITIALIZER((name).wait)	\
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/asm-i386/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#130: FILE: include/asm-i386/waitlock_types.h:42:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#141: FILE: include/asm-i386/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#141: FILE: include/asm-i386/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: include/asm-i386/semaphore.h:54:
+^I * Logically, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: include/linux/waitlock_types.h:1:
+#ifndef __LINUX_WAITLOCK_TYPES_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#303: FILE: include/linux/waitlock_types.h:7:
+typedef struct __wait_queue wait_queue_t;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#304: FILE: include/linux/waitlock_types.h:8:
+typedef int (*wait_queue_func_t)(wait_queue_t *wait, unsigned mode, int sync, void *key);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: include/linux/waitlock_types.h:13:
+	struct task_struct * task;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#314: FILE: include/linux/waitlock_types.h:18:
+typedef struct __wait_queue_head wait_queue_head_t;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#317: FILE: include/linux/waitlock_types.h:21:
+	spinlock_t lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#321: FILE: include/linux/waitlock_types.h:25:
+extern int default_wake_function(wait_queue_t *wait, unsigned mode, int sync, void *key);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: include/linux/waitlock_types.h:25:
+extern int default_wake_function(wait_queue_t *wait, unsigned mode, int sync, void *key);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#328: FILE: include/linux/waitlock_types.h:32:
+#define __WAIT_QUEUE_HEAD_INITIALIZER(name) {				\
+	.lock		= SPIN_LOCK_UNLOCKED,				\
+	.task_list	= { &(name).task_list, &(name).task_list } }

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#344: FILE: include/linux/waitlock_types.h:48:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#355: FILE: include/linux/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#355: FILE: include/linux/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#383: FILE: include/asm-sparc/waitlock_types.h:1:
+#ifndef __ASM_SPARC_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#398: FILE: include/asm-sparc/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#404: FILE: include/asm-sparc/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#404: FILE: include/asm-sparc/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC24_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: include/asm-sparc/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#417: FILE: include/asm-ia64/waitlock_types.h:1:
+#ifndef __ASM_IA64_WAITLOCK_TYPES_H

CHECK:SPACING: No space is necessary after a cast
#432: FILE: include/asm-ia64/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)		, (long) &(name).__magic

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#432: FILE: include/asm-ia64/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)		, (long) &(name).__magic
                                		^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#432: FILE: include/asm-ia64/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)		, (long) &(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: include/asm-ia64/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)					\
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#437: FILE: include/asm-ia64/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)					\
+{										\
+	ATOMIC_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)	\
+	__SEM_DEBUG_INIT(name)							\
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: include/asm-ia64/waitlock_types.h:27:
+#define __MUTEX_INITIALIZER(name)	__SEMAPHORE_INITIALIZER(name,1)
                                  	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#452: FILE: include/asm-ia64/waitlock_types.h:36:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#470: FILE: include/asm-ia64/waitlock_types.h:54:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#470: FILE: include/asm-ia64/waitlock_types.h:54:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#488: FILE: include/asm-m68k/waitlock_types.h:1:
+#ifndef __ASM_M68K_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#503: FILE: include/asm-m68k/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: include/asm-m68k/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#509: FILE: include/asm-m68k/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), ATOMIC_INIT(0), __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: include/asm-m68k/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#522: FILE: include/asm-h8300/waitlock_types.h:1:
+#ifndef __ASM_H8300_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#537: FILE: include/asm-h8300/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#543: FILE: include/asm-h8300/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#543: FILE: include/asm-h8300/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: include/asm-h8300/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#550: FILE: include/asm-h8300/waitlock_types.h:29:
+#define __DECLARE_SEMAPHORE_GENERIC(name,count) \
                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#550: FILE: include/asm-h8300/waitlock_types.h:29:
+#define __DECLARE_SEMAPHORE_GENERIC(name,count) \
+	struct semaphore name = __SEMAPHORE_INITIALIZER(name,count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#551: FILE: include/asm-h8300/waitlock_types.h:30:
+	struct semaphore name = __SEMAPHORE_INITIALIZER(name,count)
 	                                                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#559: FILE: include/asm-arm26/waitlock_types.h:1:
+#ifndef __ASM_ARM26_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#574: FILE: include/asm-arm26/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: include/asm-arm26/waitlock_types.h:22:
+#define __SEMAPHORE_INIT(name,count)			\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#580: FILE: include/asm-arm26/waitlock_types.h:22:
+#define __SEMAPHORE_INIT(name,count)			\
+	{ ATOMIC_INIT(count), 0,			\
+	  __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)	\
+	  __SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: include/asm-arm26/waitlock_types.h:28:
+	__SEMAPHORE_INIT(name,1)
 	                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#594: FILE: include/asm-v850/waitlock_types.h:1:
+#ifndef __ASM_V850_WAITLOCK_TYPES_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: include/asm-v850/waitlock_types.h:12:
+#define __SEMAPHORE_INITIALIZER(name,count)				      \
                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#606: FILE: include/asm-v850/waitlock_types.h:13:
+	{ ATOMIC_INIT (count), 0,					      \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: include/asm-v850/waitlock_types.h:14:
+	  __WAIT_QUEUE_HEAD_INITIALIZER ((name).wait) }

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#609: FILE: include/asm-v850/waitlock_types.h:16:
+#define __MUTEX_INITIALIZER(name)					      \
+	__SEMAPHORE_INITIALIZER (name,1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: include/asm-v850/waitlock_types.h:17:
+	__SEMAPHORE_INITIALIZER (name,1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: include/asm-v850/waitlock_types.h:17:
+	__SEMAPHORE_INITIALIZER (name,1)
 	                             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#618: FILE: include/asm-sh/waitlock_types.h:1:
+#ifndef __ASM_SH_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#633: FILE: include/asm-sh/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (int)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#639: FILE: include/asm-sh/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#639: FILE: include/asm-sh/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: include/asm-sh/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#659: FILE: include/asm-sh/waitlock_types.h:42:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#670: FILE: include/asm-sh/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#670: FILE: include/asm-sh/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#688: FILE: include/asm-m68knommu/waitlock_types.h:1:
+#ifndef __ASM_M68KNOMMU_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#703: FILE: include/asm-m68knommu/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#709: FILE: include/asm-m68knommu/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#709: FILE: include/asm-m68knommu/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), ATOMIC_INIT(0), __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#714: FILE: include/asm-m68knommu/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#722: FILE: include/asm-x86_64/waitlock_types.h:1:
+#ifndef __ASM_X86_64_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#737: FILE: include/asm-x86_64/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (int)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: include/asm-x86_64/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#743: FILE: include/asm-x86_64/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#748: FILE: include/asm-x86_64/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#763: FILE: include/asm-x86_64/waitlock_types.h:42:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#774: FILE: include/asm-x86_64/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#774: FILE: include/asm-x86_64/waitlock_types.h:53:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#791: FILE: include/asm-parisc/waitlock_types.h:1:
+#ifndef __ASM_PARISC_WAITLOCK_TYPES_H

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#803: FILE: include/asm-parisc/waitlock_types.h:13:
+	spinlock_t	sentry;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#812: FILE: include/asm-parisc/waitlock_types.h:22:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: include/asm-parisc/waitlock_types.h:28:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#818: FILE: include/asm-parisc/waitlock_types.h:28:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ SPIN_LOCK_UNLOCKED, count, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#823: FILE: include/asm-parisc/waitlock_types.h:33:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#831: FILE: include/asm-s390/waitlock_types.h:1:
+#ifndef __ASM_S390_WAITLOCK_TYPES_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#846: FILE: include/asm-s390/waitlock_types.h:16:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#850: FILE: include/asm-s390/waitlock_types.h:20:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#859: FILE: include/asm-s390/waitlock_types.h:29:
+	spinlock_t		wait_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#891: FILE: include/asm-ppc64/waitlock_types.h:1:
+#ifndef __ASM_PPC64_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#910: FILE: include/asm-ppc64/waitlock_types.h:20:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#916: FILE: include/asm-ppc64/waitlock_types.h:26:
+#define __SEMAPHORE_INITIALIZER(name, count) \
+	{ ATOMIC_INIT(count), \
+	  __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	  __SEM_DEBUG_INIT(name) }

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#938: FILE: include/asm-ppc64/waitlock_types.h:48:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#949: FILE: include/asm-ppc64/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#949: FILE: include/asm-ppc64/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#967: FILE: include/asm-mips/waitlock_types.h:1:
+#ifndef __ASM_MIPS_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#986: FILE: include/asm-mips/waitlock_types.h:20:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#992: FILE: include/asm-mips/waitlock_types.h:26:
+#define __SEMAPHORE_INITIALIZER(name, count) \
+	{ ATOMIC_INIT(count), \
+	  __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	  __SEM_DEBUG_INIT(name) }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1006: FILE: include/asm-ppc/waitlock_types.h:1:
+#ifndef __ASM_PPC_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1025: FILE: include/asm-ppc/waitlock_types.h:20:
+# define __SEM_DEBUG_INIT(name) \
+		, (long)&(name).__magic

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1031: FILE: include/asm-ppc/waitlock_types.h:26:
+#define __SEMAPHORE_INITIALIZER(name, count) \
+	{ ATOMIC_INIT(count), \
+	  __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	  __SEM_DEBUG_INIT(name) }

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1053: FILE: include/asm-ppc/waitlock_types.h:48:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1064: FILE: include/asm-ppc/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1064: FILE: include/asm-ppc/waitlock_types.h:59:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1082: FILE: include/asm-alpha/waitlock_types.h:1:
+#ifndef __ASM_ALPHA_WAITLOCK_TYPES_H

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1096: FILE: include/asm-alpha/waitlock_types.h:15:
+# define __SEM_DEBUG_INIT(name)		, (long)&(name).__magic
                                		^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1096: FILE: include/asm-alpha/waitlock_types.h:15:
+# define __SEM_DEBUG_INIT(name)		, (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1101: FILE: include/asm-alpha/waitlock_types.h:20:
+#define __SEMAPHORE_INITIALIZER(name,count)		\
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1101: FILE: include/asm-alpha/waitlock_types.h:20:
+#define __SEMAPHORE_INITIALIZER(name,count)		\
+	{ ATOMIC_INIT(count),				\
+	  __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)	\
+	  __SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1107: FILE: include/asm-alpha/waitlock_types.h:26:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1122: FILE: include/asm-alpha/waitlock_types.h:41:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1130: FILE: include/asm-alpha/waitlock_types.h:49:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1130: FILE: include/asm-alpha/waitlock_types.h:49:
+#define __RWSEM_DEBUG_INIT      , 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1147: FILE: include/asm-um/waitlock_types.h:1:
+#ifndef __ASM_UM_WAITLOCK_TYPES_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1158: FILE: include/asm-sparc64/waitlock_types.h:1:
+#ifndef __ASM_SPARC64_WAITLOCK_TYPES_H

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1185: FILE: include/asm-sparc64/waitlock_types.h:28:
+	spinlock_t		wait_lock;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1200: FILE: include/asm-arm/waitlock_types.h:1:
+#ifndef __ASM_ARM_WAITLOCK_TYPES_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1220: FILE: include/asm-arm/waitlock_types.h:21:
+#define __SEMAPHORE_INIT(name,cnt) {				\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1220: FILE: include/asm-arm/waitlock_types.h:21:
+#define __SEMAPHORE_INIT(name,cnt) {				\
+	.count	= ATOMIC_INIT(cnt),				\
+	.wait	= __WAIT_QUEUE_HEAD_INITIALIZER((name).wait),	\
+	__SEM_DEBUG_INIT(name)					\
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1226: FILE: include/asm-arm/waitlock_types.h:27:
+#define __MUTEX_INITIALIZER(name) __SEMAPHORE_INIT(name,1)
                                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1234: FILE: include/asm-sh64/waitlock_types.h:1:
+#ifndef __ASM_SH64_WAITLOCK_TYPES_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1249: FILE: include/asm-sh64/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name) \
+		, (int)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1255: FILE: include/asm-sh64/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1255: FILE: include/asm-sh64/waitlock_types.h:22:
+#define __SEMAPHORE_INITIALIZER(name,count) \
+{ ATOMIC_INIT(count), 0, __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__SEM_DEBUG_INIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1260: FILE: include/asm-sh64/waitlock_types.h:27:
+	__SEMAPHORE_INITIALIZER(name,1)
 	                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1268: FILE: include/asm-cris/waitlock_types.h:1:
+#ifndef __ASM_CRIS_WAITLOCK_TYPES_H

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1283: FILE: include/asm-cris/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)         , (long)&(name).__magic
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1283: FILE: include/asm-cris/waitlock_types.h:16:
+# define __SEM_DEBUG_INIT(name)         , (long)&(name).__magic

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1288: FILE: include/asm-cris/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)             \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1288: FILE: include/asm-cris/waitlock_types.h:21:
+#define __SEMAPHORE_INITIALIZER(name,count)             \
+        { ATOMIC_INIT(count), ATOMIC_INIT(0),           \
+          __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)    \
+          __SEM_DEBUG_INIT(name) }

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: include/asm-cris/waitlock_types.h:22:
+        { ATOMIC_INIT(count), ATOMIC_INIT(0),           \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: include/asm-cris/waitlock_types.h:22:
+        { ATOMIC_INIT(count), ATOMIC_INIT(0),           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1290: FILE: include/asm-cris/waitlock_types.h:23:
+          __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: include/asm-cris/waitlock_types.h:23:
+          __WAIT_QUEUE_HEAD_INITIALIZER((name).wait)    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: include/asm-cris/waitlock_types.h:24:
+          __SEM_DEBUG_INIT(name) }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: include/asm-cris/waitlock_types.h:24:
+          __SEM_DEBUG_INIT(name) }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: include/asm-cris/waitlock_types.h:27:
+        __SEMAPHORE_INITIALIZER(name,1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: include/asm-cris/waitlock_types.h:27:
+        __SEMAPHORE_INITIALIZER(name,1)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1294: FILE: include/asm-cris/waitlock_types.h:27:
+        __SEMAPHORE_INITIALIZER(name,1)
                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 77 errors, 34 warnings, 33 checks, 1957 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
