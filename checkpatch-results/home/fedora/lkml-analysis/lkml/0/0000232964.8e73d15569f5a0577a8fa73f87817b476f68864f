WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#46: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#88: FILE: drivers/base/interface.c:59:
+	while (isspace(*args)) args++;			\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#90: FILE: drivers/base/interface.c:61:
+	while (*args && !isspace(*args)) args++;	\

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: drivers/base/interface.c:68:
+static ssize_t drvctl_store(struct device * dev, const char * buf, size_t count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: drivers/base/interface.c:68:
+static ssize_t drvctl_store(struct device * dev, const char * buf, size_t count)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#99: FILE: drivers/base/interface.c:70:
+	int retval = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#105: FILE: drivers/base/interface.c:76:
+		return -ENOSYS;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#108: FILE: drivers/base/interface.c:79:
+	if (!(args = str = kmalloc(count + 1, GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: drivers/base/interface.c:89:
+		if (!(drv = driver_find(drv_name, dev->bus))) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#130: FILE: drivers/base/interface.c:101:
+	while (*args == ' ') args++;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'detach_show' to 'detach_state_show' 'detach_store' to 'detach_state_store'
#142: FILE: drivers/base/interface.c:113:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#143: FILE: drivers/base/interface.c:114:
+}
+#undef GET_WORD

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_WO: Use DEVICE_ATTR_WO
#146: FILE: drivers/base/interface.c:117:
+static DEVICE_ATTR(drvctl, 0200, NULL, drvctl_store);

The DEVICE_AATR_WO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0200, NULL, name_store);

Note that the macro automatically appends _store to the
named attribute variable of the device for the store method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: include/linux/device.h:62:
+	int		(*drvctl)(struct device * dev, const char * action,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: include/linux/device.h:62:
+	int		(*drvctl)(struct device * dev, const char * action,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: include/linux/device.h:63:
+				  struct device_driver * drv, char * args);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: include/linux/device.h:63:
+				  struct device_driver * drv, char * args);

WARNING:SPACING: Unnecessary space before function pointer arguments
#255: FILE: include/linux/device.h:64:
+	int		(*hotplug) (struct device *dev, char **envp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 6 warnings, 1 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232964.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
