ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: console.c:1151:
+/* User defined answerback: string F246 in loadkeys $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#77: FILE: console.c:1152:
+/* User defined answerback: string F246 in loadkeys 
+   Truncated at 20 chars for correct vt102 behavior */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#77: FILE: console.c:1152:
+   Truncated at 20 chars for correct vt102 behavior */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: console.c:1153:
+static inline void answerback(struct tty_struct * tty)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: console.c:1155:
+       char buf[21];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: console.c:1157:
+       if (func_table[255]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#82: FILE: console.c:1157:
+       if (func_table[255]) {
+               if (strlen(func_table[255]) > 20) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: console.c:1158:
+               if (strlen(func_table[255]) > 20) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: console.c:1158:
+               if (strlen(func_table[255]) > 20) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#83: FILE: console.c:1158:
+               if (strlen(func_table[255]) > 20) {
+                       strncpy(buf, func_table[255], 20);

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: console.c:1159:
+                       strncpy(buf, func_table[255], 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: console.c:1159:
+                       strncpy(buf, func_table[255], 20);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: console.c:1160:
+                       buf[20] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: console.c:1160:
+                       buf[20] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: console.c:1161:
+                       respond_string(buf, tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: console.c:1161:
+                       respond_string(buf, tty);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: console.c:1162:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: console.c:1162:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: console.c:1163:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: console.c:1163:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#88: FILE: console.c:1163:
+               else
+                       respond_string(func_table[255], tty);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#88: FILE: console.c:1163:
+               }
+               else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: console.c:1164:
+                       respond_string(func_table[255], tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: console.c:1164:
+                       respond_string(func_table[255], tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: console.c:1165:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: console.c:1450:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: console.c:1450:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: console.c:1451:
+       case 5:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: console.c:1452:
+               answerback(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: console.c:1452:
+               answerback(tty);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506910.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 18 warnings, 0 checks, 40 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506910.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
