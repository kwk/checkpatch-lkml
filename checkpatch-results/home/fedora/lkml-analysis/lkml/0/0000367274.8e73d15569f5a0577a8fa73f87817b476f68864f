WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> > If you increase it again, the maps are resized. Is that a problem? Seems

WARNING:TYPO_SPELLING: 'accomodating' may be misspelled - perhaps 'accommodating'?
#41: 
accomodating guy (pfft), so here's the change just for you :)
^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bqt"
#60: FILE: drivers/block/ll_rw_blk.c:416:
+	if (unlikely(bqt == NULL || tag >= bqt->real_max_depth))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#87: FILE: drivers/block/ll_rw_blk.c:458:
+		printk(KERN_ERR "%s: adjusted depth to %d\n", __FUNCTION__, depth);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#87: FILE: drivers/block/ll_rw_blk.c:458:
+		printk(KERN_ERR "%s: adjusted depth to %d\n", __FUNCTION__, depth);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: drivers/block/ll_rw_blk.c:487:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: drivers/block/ll_rw_blk.c:497:
+	tags = kmalloc(sizeof(struct blk_queue_tag),GFP_ATOMIC);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tags)...) over kmalloc(sizeof(struct blk_queue_tag)...)
#134: FILE: drivers/block/ll_rw_blk.c:497:
+	tags = kmalloc(sizeof(struct blk_queue_tag),GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/blkdev.h:456:
+extern int blk_queue_resize_tags(request_queue_t *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#235: FILE: include/linux/blkdev.h:456:
+extern int blk_queue_resize_tags(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#235: FILE: include/linux/blkdev.h:456:
+extern int blk_queue_resize_tags(request_queue_t *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367274.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 4 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367274.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
