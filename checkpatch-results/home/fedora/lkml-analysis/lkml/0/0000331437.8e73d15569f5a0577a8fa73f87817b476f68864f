WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
There was much flamimg on the subject of OOM killer so I should note one key 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: Documentation/Configure.help:435:
+Kill parents that keep producing bad children  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: include/linux/mm.h:339:
+extern int get_nr_swap_pages (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/mm.h:339:
+extern int get_nr_swap_pages (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: include/linux/notifier.h:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#326: FILE: include/linux/oom_notifier.h:1:
+#ifndef _LINUX_OOM_NOTIFIER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: include/linux/oom_notifier.h:4:
+
+

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#333: FILE: include/linux/oom_notifier.h:8:
+#define dbg(format, arg...)					\
+do {							\
+		printk (KERN_DEBUG "Out of memory: " format "\n",	## arg);                        \
+} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#334: FILE: include/linux/oom_notifier.h:9:
+do {							\
+		printk (KERN_DEBUG "Out of memory: " format "\n",	## arg);                        \

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#335: FILE: include/linux/oom_notifier.h:10:
+		printk (KERN_DEBUG "Out of memory: " format "\n",	## arg);                        \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#335: FILE: include/linux/oom_notifier.h:10:
+		printk (KERN_DEBUG "Out of memory: " format "\n",	## arg);                        \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: include/linux/oom_notifier.h:10:
+		printk (KERN_DEBUG "Out of memory: " format "\n",	## arg);                        \

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: include/linux/oom_notifier.h:11:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#341: FILE: include/linux/oom_notifier.h:16:
+#define warn(format, arg...)					  \
+do {							  \
+		printk (KERN_WARNING "Out of memory: " format "\n", ## arg);                          \
+} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#342: FILE: include/linux/oom_notifier.h:17:
+do {							  \
+		printk (KERN_WARNING "Out of memory: " format "\n", ## arg);                          \

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#343: FILE: include/linux/oom_notifier.h:18:
+		printk (KERN_WARNING "Out of memory: " format "\n", ## arg);                          \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#343: FILE: include/linux/oom_notifier.h:18:
+		printk (KERN_WARNING "Out of memory: " format "\n", ## arg);                          \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: include/linux/oom_notifier.h:18:
+		printk (KERN_WARNING "Out of memory: " format "\n", ## arg);                          \

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: include/linux/oom_notifier.h:19:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#349: FILE: include/linux/oom_notifier.h:24:
+#define info(format, arg...)					  \
+do {							  \
+		printk (KERN_INFO "Out of Memory: " format "\n", ## arg);                          \
+} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#350: FILE: include/linux/oom_notifier.h:25:
+do {							  \
+		printk (KERN_INFO "Out of Memory: " format "\n", ## arg);                          \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#351: FILE: include/linux/oom_notifier.h:26:
+		printk (KERN_INFO "Out of Memory: " format "\n", ## arg);                          \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: include/linux/oom_notifier.h:26:
+		printk (KERN_INFO "Out of Memory: " format "\n", ## arg);                          \

ERROR:SPACING: space required before the open parenthesis '('
#352: FILE: include/linux/oom_notifier.h:27:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#357: FILE: include/linux/oom_notifier.h:32:
+#define error(format, arg...)					        \
+do {							        \
+		printk (KERN_ERR "Out of Memory: " format "\n",	## arg);                                \
+} while(0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#358: FILE: include/linux/oom_notifier.h:33:
+do {							        \
+		printk (KERN_ERR "Out of Memory: " format "\n",	## arg);                                \

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#359: FILE: include/linux/oom_notifier.h:34:
+		printk (KERN_ERR "Out of Memory: " format "\n",	## arg);                                \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#359: FILE: include/linux/oom_notifier.h:34:
+		printk (KERN_ERR "Out of Memory: " format "\n",	## arg);                                \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: include/linux/oom_notifier.h:34:
+		printk (KERN_ERR "Out of Memory: " format "\n",	## arg);                                \

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: include/linux/oom_notifier.h:35:
+} while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: include/linux/oom_notifier.h:37:
+int register_oom_notifier(struct notifier_block * nb);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: include/linux/oom_notifier.h:38:
+int unregister_oom_notifier(struct notifier_block * nb);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#373: FILE: include/linux/sysctl.h:149:
+	VM_OOM=14,   /* Out of memory */
 	      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: include/linux/sysctl.h:766:
+struct ctl_table_header * register_sysctl_table(ctl_table * table,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: include/linux/sysctl.h:766:
+struct ctl_table_header * register_sysctl_table(ctl_table * table,

ERROR:SPACING: space prohibited after that open parenthesis '('
#515: FILE: mm/oom_kill.c:219:
+	if ( get_nr_swap_pages() > 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: mm/oom_kill.c:269:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: mm/oom_kill.c:269:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#560: FILE: mm/oom_kill_parent.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#561: FILE: mm/oom_kill_parent.c:2:
+ *  linux/mm/oom_kill_parent.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: mm/oom_kill_parent.c:3:
+ * $

WARNING:TYPO_SPELLING: 'Claus' may be misspelled - perhaps 'Clause'?
#564: FILE: mm/oom_kill_parent.c:5:
+ *	Thanks go out to Claus Fischer for some serious inspiration and
   	                 ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#582: FILE: mm/oom_kill_parent.c:23:
+ *
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#599: FILE: mm/oom_kill_parent.c:40:
+#define OOM_DEFAULT_EXPIRE	(5*60)
                           	  ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#625: FILE: mm/oom_kill_parent.c:66:
+struct parent_record
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#640: FILE: mm/oom_kill_parent.c:81:
+void oom_kill_task(struct task_struct *p);

ERROR:SPACING: space prohibited after that open parenthesis '('
#649: FILE: mm/oom_kill_parent.c:90:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#649: FILE: mm/oom_kill_parent.c:90:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#651: FILE: mm/oom_kill_parent.c:92:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#651: FILE: mm/oom_kill_parent.c:92:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#653: FILE: mm/oom_kill_parent.c:94:
+			if ( task != p->task ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#653: FILE: mm/oom_kill_parent.c:94:
+			if ( task != p->task ) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#654: FILE: mm/oom_kill_parent.c:95:
+				dbg("Parent %d (%p) removed from list - does not exist",p->pid, p->task);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: mm/oom_kill_parent.c:95:
+				dbg("Parent %d (%p) removed from list - does not exist",p->pid, p->task);
 				                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#657: FILE: mm/oom_kill_parent.c:98:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {
 			                                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#657: FILE: mm/oom_kill_parent.c:98:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#657: FILE: mm/oom_kill_parent.c:98:
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#657: FILE: mm/oom_kill_parent.c:98:
+			}
+			else if ( abs(jiffies - p->last_kill) >= (oom_parent_expire*HZ) ) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: mm/oom_kill_parent.c:99:
+				dbg("Parent %d (%p) removed from list - expired",p->pid, p->task);
 				                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#661: FILE: mm/oom_kill_parent.c:102:
+			else if ( p->value >= oom_parent_max ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#661: FILE: mm/oom_kill_parent.c:102:
+			else if ( p->value >= oom_parent_max ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#661: FILE: mm/oom_kill_parent.c:102:
+			}
+			else if ( p->value >= oom_parent_max ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: mm/oom_kill_parent.c:103:
+				error("Will kill parent process %d (%s)",p->pid,p->task->comm);
 				                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: mm/oom_kill_parent.c:103:
+				error("Will kill parent process %d (%s)",p->pid,p->task->comm);
 				                                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#675: FILE: mm/oom_kill_parent.c:116:
+	if ( !task )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#675: FILE: mm/oom_kill_parent.c:116:
+	if ( !task )

ERROR:SPACING: space prohibited after that open parenthesis '('
#678: FILE: mm/oom_kill_parent.c:119:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#678: FILE: mm/oom_kill_parent.c:119:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#680: FILE: mm/oom_kill_parent.c:121:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#680: FILE: mm/oom_kill_parent.c:121:
+		if ( p->pid ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#681: FILE: mm/oom_kill_parent.c:122:
+			if ( (task->pid == p->pid) && (task == p->task) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#681: FILE: mm/oom_kill_parent.c:122:
+			if ( (task->pid == p->pid) && (task == p->task) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task->pid == p->pid'
#681: FILE: mm/oom_kill_parent.c:122:
+			if ( (task->pid == p->pid) && (task == p->task) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task == p->task'
#681: FILE: mm/oom_kill_parent.c:122:
+			if ( (task->pid == p->pid) && (task == p->task) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#694: FILE: mm/oom_kill_parent.c:135:
+	if ( !task )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#694: FILE: mm/oom_kill_parent.c:135:
+	if ( !task )

ERROR:SPACING: space prohibited after that open parenthesis '('
#697: FILE: mm/oom_kill_parent.c:138:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#697: FILE: mm/oom_kill_parent.c:138:
+	for ( i = 0; i < OOM_HISTORY_SIZE; i++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#699: FILE: mm/oom_kill_parent.c:140:
+		if ( !p->pid )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#699: FILE: mm/oom_kill_parent.c:140:
+		if ( !p->pid )

ERROR:SPACING: space prohibited after that open parenthesis '('
#703: FILE: mm/oom_kill_parent.c:144:
+	if ( p->pid )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#703: FILE: mm/oom_kill_parent.c:144:
+	if ( p->pid )

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#706: FILE: mm/oom_kill_parent.c:147:
+	p->pid= task->pid;
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#723: FILE: mm/oom_kill_parent.c:164:
+	unsigned int out = x;
+	while (x & ~(unsigned int)1) x >>=2, out >>=1;

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#723: FILE: mm/oom_kill_parent.c:164:
+	while (x & ~(unsigned int)1) x >>=2, out >>=1;
 	                               ^

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#723: FILE: mm/oom_kill_parent.c:164:
+	while (x & ~(unsigned int)1) x >>=2, out >>=1;
 	                                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#723: FILE: mm/oom_kill_parent.c:164:
+	while (x & ~(unsigned int)1) x >>=2, out >>=1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)1' could be '1U'
#723: FILE: mm/oom_kill_parent.c:164:
+	while (x & ~(unsigned int)1) x >>=2, out >>=1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#724: FILE: mm/oom_kill_parent.c:165:
+	if (x) out -= out >> 2;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#725: FILE: mm/oom_kill_parent.c:166:
+	return (out ? out : 1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: mm/oom_kill_parent.c:226:
+	if (cap_t(p->cap_effective) & CAP_TO_MASK(CAP_SYS_ADMIN) ||
+				p->uid == 0 || p->euid == 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#796: FILE: mm/oom_kill_parent.c:237:
+	dbg("Task %d (%s) got %d points",p->pid, p->comm, points);
 	                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#806: FILE: mm/oom_kill_parent.c:247:
+static struct task_struct * select_bad_process(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#815: FILE: mm/oom_kill_parent.c:256:
+			int points = badness(p);
+			if (points > maxpoints) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#842: FILE: mm/oom_kill_parent.c:283:
+	if (cap_t(p->cap_effective) & CAP_TO_MASK(CAP_SYS_RAWIO)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#866: FILE: mm/oom_kill_parent.c:307:
+	if (p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'processs' may be misspelled - perhaps 'process'?
#869: FILE: mm/oom_kill_parent.c:310:
+	/* Add or update statistics for a parent processs */
 	                                         ^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#870: FILE: mm/oom_kill_parent.c:311:
+	if ( p->p_opptr->pid > 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#870: FILE: mm/oom_kill_parent.c:311:
+	if ( p->p_opptr->pid > 1 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#872: FILE: mm/oom_kill_parent.c:313:
+		if ( !parent ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#872: FILE: mm/oom_kill_parent.c:313:
+		if ( !parent ) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#873: FILE: mm/oom_kill_parent.c:314:
+			dbg("Adding parent (%d) to black list because of %d",p->parent->pid, p->pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#873: FILE: mm/oom_kill_parent.c:314:
+			dbg("Adding parent (%d) to black list because of %d",p->parent->pid, p->pid);
 			                                                    ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#876: FILE: mm/oom_kill_parent.c:317:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#876: FILE: mm/oom_kill_parent.c:317:
+		else {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#877: FILE: mm/oom_kill_parent.c:318:
+			dbg("Parent (%d) black list value increased to %ld",parent->pid, parent->value);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#877: FILE: mm/oom_kill_parent.c:318:
+			dbg("Parent (%d) black list value increased to %ld",parent->pid, parent->value);
 			                                                   ^

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#895: FILE: mm/oom_kill_parent.c:336:
+	yield();

WARNING:RETURN_VOID: void function return statements are not generally useful
#897: FILE: mm/oom_kill_parent.c:338:
+	return;
+}

ERROR:SPACING: space prohibited after that open parenthesis '('
#915: FILE: mm/oom_kill_parent.c:356:
+	if ( get_nr_swap_pages() > 0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#927: FILE: mm/oom_kill_parent.c:368:
+	if (since > 5*HZ)
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#951: FILE: mm/oom_kill_parent.c:392:
+	if (since < HZ*5)
 	              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#965: FILE: mm/oom_kill_parent.c:406:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#965: FILE: mm/oom_kill_parent.c:406:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#1003: FILE: mm/oom_kill_parent.c:444:
+MODULE_PARM_DESC(oom_parent_max, "Maximum number of bad childs parent can produce" );
                                                         ^^^^^^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1003: FILE: mm/oom_kill_parent.c:444:
+MODULE_PARM_DESC(oom_parent_max, "Maximum number of bad childs parent can produce" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1005: FILE: mm/oom_kill_parent.c:446:
+MODULE_PARM_DESC(oom_parent_expire, "Time period in seconds after which parents past sins are forgotten" );

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1013: FILE: mm/oom_notifier.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1014: FILE: mm/oom_notifier.c:2:
+ * linux/mm/oom_notifier.c

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1024: FILE: mm/oom_notifier.c:12:
+static struct notifier_block * oom_notify_list = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1024: FILE: mm/oom_notifier.c:12:
+static struct notifier_block * oom_notify_list = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1026: FILE: mm/oom_notifier.c:14:
+int register_oom_notifier(struct notifier_block * nb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1038: FILE: mm/oom_notifier.c:26:
+int unregister_oom_notifier(struct notifier_block * nb)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1061: FILE: mm/oom_panic.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1062: FILE: mm/oom_panic.c:2:
+ * linux/mm/oom_panic.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1080: FILE: mm/oom_panic.c:20:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1080: FILE: mm/oom_panic.c:20:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1120: FILE: mm/page_alloc.c:480:
+int get_nr_swap_pages (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1122: FILE: mm/page_alloc.c:482:
+^Ireturn nr_swap_pages;^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 74 errors, 43 warnings, 12 checks, 939 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
