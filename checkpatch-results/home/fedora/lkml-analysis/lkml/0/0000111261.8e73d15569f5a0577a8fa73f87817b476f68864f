WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
freeing. For scalability reasons, file accounting was constructor/destructor

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#42: 
At the same time, I see only a 2000+ objects in filp cache.
                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#76: FILE: fs/dcache.c:1737:
+			SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL, NULL);
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#97: FILE: fs/file_table.c:24:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: fs/file_table.c:25:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/file_table.c:25:
+  $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#108: FILE: fs/file_table.c:32:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(files_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'files_lock' should also have an identifier name
#108: FILE: fs/file_table.c:32:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(files_lock);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: fs/file_table.c:33:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/file_table.c:33:
+  $

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: fs/file_table.c:39:
+	struct file *f =  container_of(head, struct file, f_u.fu_rcuhead);
+	kmem_cache_free(filp_cachep, f);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: fs/file_table.c:47:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/file_table.c:47:
+  $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#158: FILE: fs/file_table.c:64:
+EXPORT_SYMBOL(get_nr_files);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#165: FILE: fs/file_table.c:71:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/file_table.c:72:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: fs/file_table.c:72:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/file_table.c:72:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#171: FILE: fs/file_table.c:75:
+	return proc_dointvec(table, write, filp, buffer, lenp, ppos);
 	                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#176: FILE: fs/file_table.c:78:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: fs/file_table.c:79:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: fs/file_table.c:79:
+int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/file_table.c:79:
+                     void __user *buffer, size_t *lenp, loff_t *ppos)$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#180: FILE: fs/file_table.c:81:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: fs/file_table.c:98:
+	if (get_nr_files() >= files_stat.max_files &&
 				!capable(CAP_SYS_ADMIN))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: include/linux/fs.h:38:
+extern int get_nr_files(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: include/linux/fs.h:39:
+extern int get_max_files(void);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#245: FILE: kernel/sysctl.c:55:
+extern int proc_nr_files(ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: kernel/sysctl.c:56:
+                     void __user *buffer, size_t *lenp, loff_t *ppos);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: kernel/sysctl.c:56:
+extern int proc_nr_files(ctl_table *table, int write, struct file *filp,
+                     void __user *buffer, size_t *lenp, loff_t *ppos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: kernel/sysctl.c:56:
+                     void __user *buffer, size_t *lenp, loff_t *ppos);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#268: FILE: net/unix/af_unix.c:550:
+	if (atomic_read(&unix_nr_socks) >= 2*get_max_files())
 	                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 18 warnings, 8 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111261.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
