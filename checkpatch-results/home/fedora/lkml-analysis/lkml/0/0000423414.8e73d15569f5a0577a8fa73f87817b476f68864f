WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#60: FILE: fs/aio.c:66:
+int async_poll(struct kiocb *iocb, int events);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: fs/aio.c:419:
+           okay = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/aio.c:419:
+           okay = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/aio.c:999:
+     unsigned events = iocb->aio_buf;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#82: FILE: fs/aio.c:999:
+     unsigned events = iocb->aio_buf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/aio.c:1004:
+     if (unlikely(events != iocb->aio_buf))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#87: FILE: fs/aio.c:1004:
+     if (unlikely(events != iocb->aio_buf))
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: fs/aio.c:1005:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: fs/aio.c:1005:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/aio.c:1007:
+     return async_poll(req, events);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/aio.c:1096:
+     case IOCB_CMD_POLL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/aio.c:1097:
+           ret = generic_aio_poll(file, req, iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/aio.c:1097:
+           ret = generic_aio_poll(file, req, iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: fs/aio.c:1098:
+           break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/aio.c:1098:
+           break;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#125: FILE: fs/select.c:34:
+     struct file * filp;
                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/select.c:34:
+     struct file * filp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: fs/select.c:34:
+     struct file * filp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/select.c:35:
+     poll_table *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/select.c:39:
+     unsigned long size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/select.c:46:
+     ((unsigned long)((table)->entry+1) > \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: fs/select.c:46:
+     ((unsigned long)((table)->entry+1) > \
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/select.c:47:
+      (table)->size + (unsigned long)(table))$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#142: FILE: fs/select.c:50:
+typedef struct async_poll_table_struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/select.c:51:
+     poll_table        pt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/select.c:52:
+     int               events;           /* event mask for async poll */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/select.c:53:
+     int               wake;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/select.c:54:
+     long              sync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/select.c:55:
+     struct poll_table_page  pt_page;    /* one poll table page hdr */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/select.c:56:
+     struct poll_table_entry entries[1]; /* space for a single entry */$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#161: FILE: fs/select.c:73:
+void __poll_freewait(poll_table* pt, wait_queue_t *wait)

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: fs/select.c:81:
+           if (entry == p->entries) /* may happen with async poll */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/select.c:81:
+           if (entry == p->entries) /* may happen with async poll */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#169: FILE: fs/select.c:81:
+           if (entry == p->entries) /* may happen with async poll */
+                 break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: fs/select.c:82:
+                 break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/select.c:82:
+                 break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: fs/select.c:85:
+                 if (wait != &entry->wait)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: fs/select.c:85:
+                 if (wait != &entry->wait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#174: FILE: fs/select.c:85:
+                 if (wait != &entry->wait)
+                       remove_wait_queue(entry->wait_address,&entry->wait);

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: fs/select.c:86:
+                       remove_wait_queue(entry->wait_address,&entry->wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/select.c:86:
+                       remove_wait_queue(entry->wait_address,&entry->wait);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#175: FILE: fs/select.c:86:
+                       remove_wait_queue(entry->wait_address,&entry->wait);
                                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#175: FILE: fs/select.c:86:
+                       remove_wait_queue(entry->wait_address,&entry->wait);
                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: fs/select.c:87:
+                 else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: fs/select.c:87:
+                 else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#176: FILE: fs/select.c:87:
+                 else
+                       __remove_wait_queue(entry->wait_address,&entry->wait);

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: fs/select.c:88:
+                       __remove_wait_queue(entry->wait_address,&entry->wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: fs/select.c:88:
+                       __remove_wait_queue(entry->wait_address,&entry->wait);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#177: FILE: fs/select.c:88:
+                       __remove_wait_queue(entry->wait_address,&entry->wait);
                                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#177: FILE: fs/select.c:88:
+                       __remove_wait_queue(entry->wait_address,&entry->wait);
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/select.c:93:
+           if (old->size == PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/select.c:93:
+           if (old->size == PAGE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#183: FILE: fs/select.c:93:
+           if (old->size == PAGE_SIZE)
+                 free_page((unsigned long) old);

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/select.c:94:
+                 free_page((unsigned long) old);$

CHECK:SPACING: No space is necessary after a cast
#184: FILE: fs/select.c:94:
+                 free_page((unsigned long) old);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/select.c:94:
+                 free_page((unsigned long) old);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/select.c:95:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/select.c:96:
+     if (pt->iocb)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#186: FILE: fs/select.c:96:
+     if (pt->iocb)
+           kmem_cache_free(async_poll_table_cache, pt);

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: fs/select.c:97:
+           kmem_cache_free(async_poll_table_cache, pt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/select.c:97:
+           kmem_cache_free(async_poll_table_cache, pt);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#190: FILE: fs/select.c:100:
+void poll_freewait(poll_table* pt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: fs/select.c:102:
+     __poll_freewait(pt, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/select.c:107:
+     async_poll_table *pasync = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/select.c:108:
+     poll_table *p = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/select.c:109:
+     struct kiocb      *iocb = p->iocb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: fs/select.c:110:
+     unsigned int      mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: fs/select.c:112:
+     pasync->wake = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/select.c:113:
+     wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#203: FILE: fs/select.c:113:
+     wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/select.c:114:
+     do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#204: FILE: fs/select.c:114:
+     do {
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: fs/select.c:115:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: fs/select.c:115:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: fs/select.c:116:
+           mask &= pasync->events | POLLERR | POLLHUP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: fs/select.c:116:
+           mask &= pasync->events | POLLERR | POLLHUP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: fs/select.c:117:
+           if (mask) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: fs/select.c:117:
+           if (mask) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#207: FILE: fs/select.c:117:
+           if (mask) {
+                 poll_table *p2 = xchg(&iocb->ki_data, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: fs/select.c:118:
+                 poll_table *p2 = xchg(&iocb->ki_data, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: fs/select.c:118:
+                 poll_table *p2 = xchg(&iocb->ki_data, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: fs/select.c:119:
+                 if (p2) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#209: FILE: fs/select.c:119:
+                 poll_table *p2 = xchg(&iocb->ki_data, NULL);
+                 if (p2) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/select.c:119:
+                 if (p2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#209: FILE: fs/select.c:119:
+                 if (p2) {
+                       poll_freewait(p2);

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: fs/select.c:120:
+                       poll_freewait(p2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/select.c:120:
+                       poll_freewait(p2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/select.c:121:
+                       aio_complete(iocb, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/select.c:121:
+                       aio_complete(iocb, mask, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: fs/select.c:122:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/select.c:122:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: fs/select.c:123:
+                 return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/select.c:123:
+                 return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: fs/select.c:124:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/select.c:124:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/select.c:125:
+           pasync->sync = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/select.c:125:
+           pasync->sync = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: fs/select.c:126:
+           wmb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/select.c:126:
+           wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#216: FILE: fs/select.c:126:
+           wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/select.c:127:
+     } while (pasync->wake);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: fs/select.c:130:
+static int async_poll_waiter(wait_queue_t *wait, unsigned mode, int sync)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/select.c:132:
+     struct poll_table_entry *entry = (struct poll_table_entry *)wait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/select.c:133:
+     async_poll_table *pasync = (async_poll_table *)(entry->p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: fs/select.c:134:
+     struct kiocb      *iocb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: fs/select.c:135:
+     unsigned int      mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: fs/select.c:137:
+     iocb = pasync->pt.iocb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/select.c:138:
+     mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/select.c:139:
+     mask &= pasync->events | POLLERR | POLLHUP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: fs/select.c:140:
+     if (mask) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#230: FILE: fs/select.c:140:
+     if (mask) {
+           poll_table *p2 = xchg(&iocb->ki_data, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: fs/select.c:141:
+           poll_table *p2 = xchg(&iocb->ki_data, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/select.c:141:
+           poll_table *p2 = xchg(&iocb->ki_data, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/select.c:142:
+           if (p2) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: fs/select.c:142:
+           poll_table *p2 = xchg(&iocb->ki_data, NULL);
+           if (p2) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/select.c:142:
+           if (p2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#232: FILE: fs/select.c:142:
+           if (p2) {
+                 __poll_freewait(p2, wait);

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: fs/select.c:143:
+                 __poll_freewait(p2, wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/select.c:143:
+                 __poll_freewait(p2, wait);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: fs/select.c:144:
+                 aio_complete(iocb, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: fs/select.c:144:
+                 aio_complete(iocb, mask, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: fs/select.c:145:
+                 return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/select.c:145:
+                 return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: fs/select.c:146:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/select.c:146:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: fs/select.c:148:
+     return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: fs/select.c:153:
+     poll_table *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: fs/select.c:155:
+     p = xchg(&iocb->ki_data, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: fs/select.c:156:
+     aio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: fs/select.c:157:
+     if (p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#247: FILE: fs/select.c:157:
+     if (p) {
+           poll_freewait(p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: fs/select.c:158:
+           poll_freewait(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/select.c:158:
+           poll_freewait(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: fs/select.c:159:
+           /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: fs/select.c:160:
+            * Since poll_freewait() locks the wait queue, we know that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: fs/select.c:161:
+            * async_poll_waiter() is either not going to be run or has$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: fs/select.c:162:
+            * finished all its work.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: fs/select.c:163:
+            */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: fs/select.c:164:
+           aio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: fs/select.c:164:
+           aio_put_req(iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: fs/select.c:165:
+           return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/select.c:165:
+           return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/select.c:166:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/select.c:167:
+     return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/select.c:172:
+     unsigned int mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/select.c:173:
+     async_poll_table *pasync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/select.c:174:
+     poll_table *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: fs/select.c:177:
+     if (iocb->ki_filp->f_op && iocb->ki_filp->f_op->poll) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#267: FILE: fs/select.c:177:
+     if (iocb->ki_filp->f_op && iocb->ki_filp->f_op->poll) {
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: fs/select.c:178:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/select.c:178:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: fs/select.c:179:
+           mask &= events | POLLERR | POLLHUP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/select.c:179:
+           mask &= events | POLLERR | POLLHUP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: fs/select.c:180:
+           if (mask & events)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/select.c:180:
+           if (mask & events)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#270: FILE: fs/select.c:180:
+           if (mask & events)
+                 return events;

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/select.c:181:
+                 return events;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/select.c:181:
+                 return events;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/select.c:182:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/select.c:184:
+     pasync = kmem_cache_alloc(async_poll_table_cache, SLAB_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/select.c:185:
+     if (!pasync)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#275: FILE: fs/select.c:185:
+     if (!pasync)
+           return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: fs/select.c:186:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/select.c:186:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/select.c:188:
+     p = (poll_table *)pasync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: fs/select.c:189:
+     poll_initwait(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: fs/select.c:190:
+     p->iocb = iocb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/select.c:191:
+     pasync->wake = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/select.c:192:
+     pasync->sync = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/select.c:193:
+     pasync->events = events;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/select.c:194:
+     pasync->pt_page.entry = pasync->pt_page.entries;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/select.c:195:
+     pasync->pt_page.size = sizeof(pasync->pt_page) + sizeof(pasync->entries);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/select.c:196:
+     pasync->pt_page.next = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/select.c:197:
+     p->table = &pasync->pt_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/select.c:199:
+     iocb->ki_data = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: fs/select.c:200:
+     iocb->ki_users++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/select.c:201:
+     wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#291: FILE: fs/select.c:201:
+     wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/select.c:203:
+     mask = DEFAULT_POLLMASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/select.c:204:
+     if (iocb->ki_filp->f_op && iocb->ki_filp->f_op->poll)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#294: FILE: fs/select.c:204:
+     if (iocb->ki_filp->f_op && iocb->ki_filp->f_op->poll)
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: fs/select.c:205:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/select.c:205:
+           mask = iocb->ki_filp->f_op->poll(iocb->ki_filp, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/select.c:206:
+     mask &= events | POLLERR | POLLHUP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/select.c:207:
+     if (mask && xchg(&iocb->ki_data, NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#297: FILE: fs/select.c:207:
+     if (mask && xchg(&iocb->ki_data, NULL)) {
+           poll_freewait(p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: fs/select.c:208:
+           poll_freewait(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/select.c:208:
+           poll_freewait(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: fs/select.c:209:
+           aio_complete(iocb, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: fs/select.c:209:
+           aio_complete(iocb, mask, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/select.c:210:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/select.c:212:
+     iocb->ki_cancel = async_poll_cancel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: fs/select.c:213:
+     aio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: fs/select.c:214:
+     return -EIOCBQUEUED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: fs/select.c:230:
+           new_table->size = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/select.c:230:
+           new_table->size = PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/select.c:244:
+           entry->p = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/select.c:244:
+           entry->p = p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: fs/select.c:245:
+           if (p->iocb) /* async poll */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/select.c:245:
+           if (p->iocb) /* async poll */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#322: FILE: fs/select.c:245:
+           if (p->iocb) /* async poll */
+                 init_waitqueue_func_entry(&entry->wait, async_poll_waiter);

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: fs/select.c:246:
+                 init_waitqueue_func_entry(&entry->wait, async_poll_waiter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/select.c:246:
+                 init_waitqueue_func_entry(&entry->wait, async_poll_waiter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: fs/select.c:247:
+           else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/select.c:247:
+           else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#324: FILE: fs/select.c:247:
+           else
+                 init_waitqueue_entry(&entry->wait, current);

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: fs/select.c:248:
+                 init_waitqueue_entry(&entry->wait, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/select.c:248:
+                 init_waitqueue_entry(&entry->wait, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: fs/select.c:647:
+     async_poll_table_cache = kmem_cache_create("async poll table",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: fs/select.c:648:
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: fs/select.c:648:
+     async_poll_table_cache = kmem_cache_create("async poll table",
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/select.c:648:
+                        sizeof(async_poll_table), 0, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/select.c:649:
+     if (!async_poll_table_cache)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#338: FILE: fs/select.c:649:
+     if (!async_poll_table_cache)
+           panic("unable to alloc poll_table_cache");

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: fs/select.c:650:
+           panic("unable to alloc poll_table_cache");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: fs/select.c:650:
+           panic("unable to alloc poll_table_cache");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: fs/select.c:651:
+     return 0;$

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#351: FILE: include/linux/aio.h:62:
+     void              *ki_data;   /* for use by the the file */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: include/linux/aio.h:62:
+     void              *ki_data;   /* for use by the the file */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: include/linux/aio_abi.h:43:
+     IOCB_CMD_POLL = 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: include/linux/poll.h:17:
+     int               error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: include/linux/poll.h:18:
+     struct poll_table_page  *table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: include/linux/poll.h:19:
+     struct kiocb            *iocb;            /* iocb for async poll */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: include/linux/poll.h:34:
+     pt->iocb = NULL;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 159 warnings, 3 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
