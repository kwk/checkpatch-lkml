ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: Documentation/networking/s2io.txt:10:
+- 6.  Available Downloads $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: Documentation/networking/s2io.txt:15:
+Xframe II PCI-X 2.0 adapters. It supports several features $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: Documentation/networking/s2io.txt:22:
+b. Build and load driver $

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#167: FILE: Documentation/networking/s2io.txt:40:
+a. Jumbo frames. Xframe I/II supports MTU upto 9600 bytes,
                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#179: FILE: Documentation/networking/s2io.txt:52:
+(IA64, Xeon) resulting in noticeable performance improvement(upto 7%
                                                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: Documentation/networking/s2io.txt:55:
+e. NAPI. Compile-time option(CONFIG_S2IO_NAPI) for better Rx interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: Documentation/networking/s2io.txt:61:
+g. Multi-FIFO/Ring. Supports up to 8 transmit queues and receive rings, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: Documentation/networking/s2io.txt:80:
+d. rx_ring_sz $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: Documentation/networking/s2io.txt:83:
+Default: 30 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: Documentation/networking/s2io.txt:88:
+Default: 1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: Documentation/networking/s2io.txt:93:
+b. Set TCP windows size to optimal value. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: Documentation/networking/s2io.txt:94:
+For instance, for MTU=1500 a value of 210K has been observed to result in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: Documentation/networking/s2io.txt:103:
+a. By default, the driver respects BIOS settings for PCI bus parameters. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: Documentation/networking/s2io.txt:104:
+However, you may want to experiment with PCI bus parameters $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: Documentation/networking/s2io.txt:105:
+max-split-transactions(MOST) and MMRBC (use setpci command). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: Documentation/networking/s2io.txt:106:
+A MOST value of 2 has been found optimal for Opterons and 3 for Itanium.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: Documentation/networking/s2io.txt:107:
+It could be different for your hardware.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: Documentation/networking/s2io.txt:110:
+For example you can set $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: Documentation/networking/s2io.txt:112:
+#setpci -d 17d5:* 62=1d $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: Documentation/networking/s2io.txt:114:
+#setpci -d 17d5:* 62=3d $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: Documentation/networking/s2io.txt:118:
+b. Ensure Transmit Checksum offload is enabled. Use ethtool to set/verify this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: Documentation/networking/s2io.txt:124:
+a. By default, the driver respects BIOS settings for PCI bus parameters. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: Documentation/networking/s2io.txt:130:
+c. Ensure Receive Checksum offload is enabled. Use "ethtool -K ethX" command to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: Documentation/networking/s2io.txt:132:
+d. Enable NAPI feature(in kernel configuration Device Drivers ---> Network $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: Documentation/networking/s2io.txt:133:
+device support --->  Ethernet (10000 Mbit) ---> S2IO 10Gbe Xframe NIC) to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: Documentation/networking/s2io.txt:136:
+** For AMD opteron platforms with 8131 chipset, MMRBC=1 and MOST=1 are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: Documentation/networking/s2io.txt:142:
+Neterion "s2io" driver in Red Hat and Suse 2.6-based distributions is kept up $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: Documentation/networking/s2io.txt:143:
+to date, also the latest "s2io" code (including support for 2.4 kernels) is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: Documentation/networking/s2io.txt:149:
+7. Support $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: Documentation/networking/s2io.txt:150:
+For further support please contact either your 10GbE Xframe NIC vendor (IBM, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: Documentation/networking/s2io.txt:151:
+HP, SGI etc.) or click on the "Support" link on the Neterion site:  $

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#291: FILE: MAINTAINERS:915:
+P:	Pantelis Antoniou
+M:	pantelis.antoniou@gmail.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#293: FILE: MAINTAINERS:917:
+P:	Vitaly Bordug
+M:	vbordug@ru.mvista.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#349: FILE: drivers/net/fec_8xx/Kconfig:16:
+config FEC_8XX_LXT971_PHY
+	bool "Support LXT971/LXT972 PHY"
+	depends on FEC_8XX
+	default n
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/net/fs_enet/fs_enet-main.c:134:
+			dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
 				L1_CACHE_ALIGN(PKT_MAXBUF_SIZE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/net/fs_enet/fs_enet-main.c:148:
+			dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
 				L1_CACHE_ALIGN(PKT_MAXBUF_SIZE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/net/fs_enet/fs_enet-main.c:272:
+			dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
 				L1_CACHE_ALIGN(PKT_MAXBUF_SIZE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/net/fs_enet/fs_enet-main.c:282:
+			dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
 				L1_CACHE_ALIGN(PKT_MAXBUF_SIZE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/net/fs_enet/fs_enet-main.c:403:
+		dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
+				skb->len, DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/net/fs_enet/fs_enet-main.c:563:
+		dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
+				skb->len, DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/net/fs_enet/fs_enet-main.c:578:
+		dma_unmap_single(fep->dev, CBDR_BUFADDR(bdp),
 			L1_CACHE_ALIGN(PKT_MAXBUF_SIZE),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/net/ibm_emac/ibm_emac.h:29:
+    !defined(CONFIG_440EP) && !defined(CONFIG_NP405H) && !defined(CONFIG_440SPE) && \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/net/ibm_emac/ibm_emac.h:30:
+    !defined(CONFIG_440GR)$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#520: FILE: drivers/net/ibm_emac/ibm_emac.h:251:
+/*
+ * For the 440SPe, AMCC inexplicably changed the polarity of

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#528: FILE: drivers/net/ibm_emac/ibm_emac.h:259:
+#define EMAC_STACR_START ^I^IEMAC_STACR_OC$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#528: FILE: drivers/net/ibm_emac/ibm_emac.h:259:
+};
+#define EMAC_STACR_START 		EMAC_STACR_OC

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#535: FILE: drivers/net/ibm_emac/ibm_emac.h:266:
+#define EMAC_STACR_START ^I^I0$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#535: FILE: drivers/net/ibm_emac/ibm_emac.h:266:
+};
+#define EMAC_STACR_START 		0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/net/ibm_emac/ibm_emac_core.c:91:
+    (defined(CONFIG_405EP) || defined(CONFIG_440EP) || defined(CONFIG_440GR))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/net/ibm_emac/ibm_emac_mal.h:35:
+    defined(CONFIG_440EP) || defined(CONFIG_440GR) || defined(CONFIG_NP405H)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/net/ibm_emac/ibm_emac_mal.h:38:
+      defined(CONFIG_440SPE)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: drivers/net/ibm_emac/ibm_emac_phy.c:276:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: drivers/net/ibm_emac/ibm_emac_phy.c:278:
+^Iphy_write(phy, MII_CIS8201_ACSR, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/net/pcnet32.c:677:
+    if (pcnet32_alloc_ring(dev, dev->name)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#719: FILE: drivers/net/pcnet32.c:686:
+	printk(KERN_INFO PFX "%s: Ring Param Settings: RX: %d, TX: %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/net/pcnet32.c:991:
+    for (i=0; i<30; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#729: FILE: drivers/net/pcnet32.c:991:
+    for (i=0; i<30; i++) {
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#729: FILE: drivers/net/pcnet32.c:991:
+    for (i=0; i<30; i++) {
                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#729: FILE: drivers/net/pcnet32.c:991:
+    for (i=0; i<30; i++) {
+	*buff++ = a->read_bcr(ioaddr, i);
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: drivers/net/pcnet32.c:993:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/net/pcnet32.c:994:
+    *buff++ = 0;^I/* skip bcr30 so as not to hang 79C976 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/net/pcnet32.c:995:
+    for (i=31; i<36; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#733: FILE: drivers/net/pcnet32.c:995:
+    for (i=31; i<36; i++) {
           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#733: FILE: drivers/net/pcnet32.c:995:
+    for (i=31; i<36; i++) {
                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#733: FILE: drivers/net/pcnet32.c:995:
+    for (i=31; i<36; i++) {
 	*buff++ = a->read_bcr(ioaddr, i);
     }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/net/pcnet32.c:1355:
+    if (pcnet32_alloc_ring(dev, pci_name(lp->pci_dev))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: drivers/net/pcnet32.c:1468:
+    lp->tx_ring = pci_alloc_consistent(lp->pci_dev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/net/pcnet32.c:1469:
+    lp->tx_ring = pci_alloc_consistent(lp->pci_dev,
+	    sizeof(struct pcnet32_tx_head) * lp->tx_ring_size,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/net/pcnet32.c:1471:
+    if (lp->tx_ring == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp->tx_ring"
#762: FILE: drivers/net/pcnet32.c:1471:
+    if (lp->tx_ring == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#763: FILE: drivers/net/pcnet32.c:1472:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#765: FILE: drivers/net/pcnet32.c:1473:
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: drivers/net/pcnet32.c:1474:
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",
+		    name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: drivers/net/pcnet32.c:1478:
+    lp->rx_ring = pci_alloc_consistent(lp->pci_dev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/net/pcnet32.c:1479:
+    lp->rx_ring = pci_alloc_consistent(lp->pci_dev,
+	    sizeof(struct pcnet32_rx_head) * lp->rx_ring_size,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: drivers/net/pcnet32.c:1481:
+    if (lp->rx_ring == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp->rx_ring"
#775: FILE: drivers/net/pcnet32.c:1481:
+    if (lp->rx_ring == NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#776: FILE: drivers/net/pcnet32.c:1482:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#778: FILE: drivers/net/pcnet32.c:1483:
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/net/pcnet32.c:1484:
+	    printk("\n" KERN_ERR PFX "%s: Consistent memory allocation failed.\n",
+		    name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/net/pcnet32.c:1488:
+    lp->tx_dma_addr = kmalloc(sizeof(dma_addr_t) * lp->tx_ring_size,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/net/pcnet32.c:1489:
+    lp->tx_dma_addr = kmalloc(sizeof(dma_addr_t) * lp->tx_ring_size,
+	    GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/net/pcnet32.c:1490:
+    if (!lp->tx_dma_addr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#787: FILE: drivers/net/pcnet32.c:1491:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#789: FILE: drivers/net/pcnet32.c:1492:
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: drivers/net/pcnet32.c:1497:
+    lp->rx_dma_addr = kmalloc(sizeof(dma_addr_t) * lp->rx_ring_size,$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#795: FILE: drivers/net/pcnet32.c:1497:
+    lp->rx_dma_addr = kmalloc(sizeof(dma_addr_t) * lp->rx_ring_size,
+	    GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: drivers/net/pcnet32.c:1498:
+    lp->rx_dma_addr = kmalloc(sizeof(dma_addr_t) * lp->rx_ring_size,
+	    GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/net/pcnet32.c:1499:
+    if (!lp->rx_dma_addr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#798: FILE: drivers/net/pcnet32.c:1500:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#800: FILE: drivers/net/pcnet32.c:1501:
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/net/pcnet32.c:1506:
+    lp->tx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->tx_ring_size,$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#806: FILE: drivers/net/pcnet32.c:1506:
+    lp->tx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->tx_ring_size,
+	    GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/net/pcnet32.c:1507:
+    lp->tx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->tx_ring_size,
+	    GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/net/pcnet32.c:1508:
+    if (!lp->tx_skbuff) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#809: FILE: drivers/net/pcnet32.c:1509:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#811: FILE: drivers/net/pcnet32.c:1510:
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/net/pcnet32.c:1515:
+    lp->rx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->rx_ring_size,$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#817: FILE: drivers/net/pcnet32.c:1515:
+    lp->rx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->rx_ring_size,
+	    GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/net/pcnet32.c:1516:
+    lp->rx_skbuff = kmalloc(sizeof(struct sk_buff *) * lp->rx_ring_size,
+	    GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: drivers/net/pcnet32.c:1517:
+    if (!lp->rx_skbuff) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#820: FILE: drivers/net/pcnet32.c:1518:
 	if (pcnet32_debug & NETIF_MSG_DRV)
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#822: FILE: drivers/net/pcnet32.c:1519:
+	    printk("\n" KERN_ERR PFX "%s: Memory allocation failed.\n", name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#839: FILE: drivers/net/pcnet32.c:1626:
+	if (lp->options & PCNET32_PORT_ASEL) {
+	    lp->options = PCNET32_PORT_FD | PCNET32_PORT_100;

WARNING:TABSTOP: Statements should start on a tabstop
#841: FILE: drivers/net/pcnet32.c:1628:
+	    if (netif_msg_link(lp))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#842: FILE: drivers/net/pcnet32.c:1629:
+		printk(KERN_DEBUG "%s: Setting 100Mb-Full Duplex.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/net/pcnet32.c:1630:
+		printk(KERN_DEBUG "%s: Setting 100Mb-Full Duplex.\n",
+			dev->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: drivers/net/pcnet32.c:1632:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: drivers/net/pcnet32.c:1633:
+    {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: drivers/net/s2io.c:76:
+int rxd_size[4] = {32,48,48,64};
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: drivers/net/s2io.c:76:
+int rxd_size[4] = {32,48,48,64};
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: drivers/net/s2io.c:76:
+int rxd_size[4] = {32,48,48,64};
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: drivers/net/s2io.c:77:
+int rxd_count[4] = {127,85,85,63};
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: drivers/net/s2io.c:77:
+int rxd_count[4] = {127,85,85,63};
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#889: FILE: drivers/net/s2io.c:77:
+int rxd_count[4] = {127,85,85,63};
                              ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#899: FILE: drivers/net/s2io.c:112:
+		if (rxb_size <= rxd_count[sp->rxd_mode]) {
 			level = PANIC;
 		}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#948: FILE: drivers/net/s2io.c:477:
+			(rxd_count[nic->rxd_mode] + 1 );

CHECK:CAMELCASE: Avoid CamelCase: <RxD1_t>
#954: FILE: drivers/net/s2io.c:482:
+		size = (size * (sizeof(RxD1_t)));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RxD3_t>
#956: FILE: drivers/net/s2io.c:484:
+		size = (size * (sizeof(RxD3_t)));

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#995: FILE: drivers/net/s2io.c:523:
+			rx_blocks->rxds = kmalloc(sizeof(rxd_info_t)*
 			                                            ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#995: FILE: drivers/net/s2io.c:523:
+			rx_blocks->rxds = kmalloc(sizeof(rxd_info_t)*
+						  rxd_count[nic->rxd_mode],
+						  GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#998: FILE: drivers/net/s2io.c:526:
+			for (l=0; l<rxd_count[nic->rxd_mode];l++) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#998: FILE: drivers/net/s2io.c:526:
+			for (l=0; l<rxd_count[nic->rxd_mode];l++) {
 			           ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#998: FILE: drivers/net/s2io.c:526:
+			for (l=0; l<rxd_count[nic->rxd_mode];l++) {
 			                                    ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1037: FILE: drivers/net/s2io.c:562:
+		/*
+		 * Allocation of Storages for buffer addresses in 2BUFF mode

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#1042: FILE: drivers/net/s2io.c:567:
+			   (rxd_count[nic->rxd_mode]+ 1);
 			                            ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1043: FILE: drivers/net/s2io.c:568:
+			mac_control->rings[i].ba =
 			                      ^^

CHECK:CAMELCASE: Avoid CamelCase: <buffAdd_t>
#1044: FILE: drivers/net/s2io.c:569:
+				kmalloc((sizeof(buffAdd_t *) * blk_cnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: drivers/net/s2io.c:570:
+				kmalloc((sizeof(buffAdd_t *) * blk_cnt),
 				     GFP_KERNEL);

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1054: FILE: drivers/net/s2io.c:571:
+			if (!mac_control->rings[i].ba)
 			                           ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1073: FILE: drivers/net/s2io.c:575:
+				mac_control->rings[i].ba[j] =
 				                      ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1073: FILE: drivers/net/s2io.c:575:
+				int k = 0;
+				mac_control->rings[i].ba[j] =

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1077: FILE: drivers/net/s2io.c:579:
+				if (!mac_control->rings[i].ba[j])
 				                           ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1085: FILE: drivers/net/s2io.c:582:
+					ba = &mac_control->rings[i].ba[j][k];
 					^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1085: FILE: drivers/net/s2io.c:582:
+					ba = &mac_control->rings[i].ba[j][k];
 					                            ^^

CHECK:SPACING: No space is necessary after a cast
#1087: FILE: drivers/net/s2io.c:584:
+					ba->ba_0_org = (void *) kmalloc

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1087: FILE: drivers/net/s2io.c:584:
+					ba->ba_0_org = (void *) kmalloc

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: drivers/net/s2io.c:590:
+					tmp &= ~((unsigned long) ALIGN_SIZE);

CHECK:SPACING: No space is necessary after a cast
#1094: FILE: drivers/net/s2io.c:591:
+					ba->ba_0 = (void *) tmp;

CHECK:SPACING: No space is necessary after a cast
#1096: FILE: drivers/net/s2io.c:593:
+					ba->ba_1_org = (void *) kmalloc

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1096: FILE: drivers/net/s2io.c:593:
+					ba->ba_1_org = (void *) kmalloc

CHECK:SPACING: No space is necessary after a cast
#1100: FILE: drivers/net/s2io.c:597:
+					tmp = (unsigned long) ba->ba_1_org;

CHECK:SPACING: No space is necessary after a cast
#1102: FILE: drivers/net/s2io.c:599:
+					tmp &= ~((unsigned long) ALIGN_SIZE);

CHECK:SPACING: No space is necessary after a cast
#1103: FILE: drivers/net/s2io.c:600:
+					ba->ba_1 = (void *) tmp;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1154: FILE: drivers/net/s2io.c:714:
+				if (!mac_control->rings[i].ba[j])
 				                           ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1154: FILE: drivers/net/s2io.c:714:
+				int k = 0;
+				if (!mac_control->rings[i].ba[j])

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1157: FILE: drivers/net/s2io.c:717:
+					buffAdd_t *ba =
 					           ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1158: FILE: drivers/net/s2io.c:718:
+						&mac_control->rings[i].ba[j][k];
 						                       ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1163: FILE: drivers/net/s2io.c:723:
+				kfree(mac_control->rings[i].ba[j]);
 				                            ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1166: FILE: drivers/net/s2io.c:725:
+			kfree(mac_control->rings[i].ba);
 			                            ^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1216: FILE: drivers/net/s2io.c:2116:
+	((RxD3_t*)rxdp)->Buffer1_ptr = pci_map_single

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Buffer1_ptr>
#1216: FILE: drivers/net/s2io.c:2116:
+	((RxD3_t*)rxdp)->Buffer1_ptr = pci_map_single

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frag_list"
#1222: FILE: drivers/net/s2io.c:2122:
+	if (skb_shinfo(skb)->frag_list == NULL) {

WARNING:SPACING: space prohibited before semicolon
#1224: FILE: drivers/net/s2io.c:2124:
+		return -ENOMEM ;

CHECK:SPACING: No space is necessary after a cast
#1228: FILE: drivers/net/s2io.c:2128:
+	tmp = (u64) frag_list->data;

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: drivers/net/s2io.c:2131:
+	frag_list->data = (void *) tmp;

CHECK:SPACING: No space is necessary after a cast
#1232: FILE: drivers/net/s2io.c:2132:
+	frag_list->tail = (void *) tmp;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1235: FILE: drivers/net/s2io.c:2135:
+	((RxD3_t*)rxdp)->Buffer2_ptr = pci_map_single(nic->pdev,

CHECK:CAMELCASE: Avoid CamelCase: <Buffer2_ptr>
#1235: FILE: drivers/net/s2io.c:2135:
+	((RxD3_t*)rxdp)->Buffer2_ptr = pci_map_single(nic->pdev,

CHECK:CAMELCASE: Avoid CamelCase: <Control_2>
#1238: FILE: drivers/net/s2io.c:2138:
+	rxdp->Control_2 |= SET_BUFFER1_SIZE_3(l3l4hdr_size + 4);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_blocks[block_no].rxds[off].virt_addr'
#1292: FILE: drivers/net/s2io.c:2196:
+		rxdp = mac_control->rings[ring_no].
+				rx_blocks[block_no].rxds[off].virt_addr;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_no == block_no1'
#1294: FILE: drivers/net/s2io.c:2198:
+		if ((block_no == block_no1) && (off == off1) &&
+					(rxdp->Host_Control)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'off == off1'
#1294: FILE: drivers/net/s2io.c:2198:
+		if ((block_no == block_no1) && (off == off1) &&
+					(rxdp->Host_Control)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rxdp->Host_Control'
#1294: FILE: drivers/net/s2io.c:2198:
+		if ((block_no == block_no1) && (off == off1) &&
+					(rxdp->Host_Control)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/net/s2io.c:2199:
+		if ((block_no == block_no1) && (off == off1) &&
+					(rxdp->Host_Control)) {

CHECK:CAMELCASE: Avoid CamelCase: <Host_Control>
#1295: FILE: drivers/net/s2io.c:2199:
+					(rxdp->Host_Control)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'off == rxd_count[nic->rxd_mode]'
#1303: FILE: drivers/net/s2io.c:2205:
+		if (off && (off == rxd_count[nic->rxd_mode])) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_curr_put_info.block_index'
#1307: FILE: drivers/net/s2io.c:2209:
+			if (mac_control->rings[ring_no].rx_curr_put_info.
+			    block_index == mac_control->rings[ring_no].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].block_count'
#1308: FILE: drivers/net/s2io.c:2210:
+			    block_index == mac_control->rings[ring_no].
+					block_count)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_curr_put_info.block_index'
#1310: FILE: drivers/net/s2io.c:2212:
+				mac_control->rings[ring_no].rx_curr_put_info.
+					block_index = 0;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_curr_put_info.block_index'
#1312: FILE: drivers/net/s2io.c:2214:
+			block_no = mac_control->rings[ring_no].
+					rx_curr_put_info.block_index;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_blocks[block_no].block_virt_addr'
#1326: FILE: drivers/net/s2io.c:2220:
+			rxdp = mac_control->rings[ring_no].
+				rx_blocks[block_no].block_virt_addr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nic->rxd_mode >= RXD_MODE_3A'
#1368: FILE: drivers/net/s2io.c:2230:
+		if ((rxdp->Control_1 & RXD_OWN_XENA) &&
+			((nic->rxd_mode >= RXD_MODE_3A) &&
+				(rxdp->Control_2 & BIT(0)))) {

CHECK:CAMELCASE: Avoid CamelCase: <Control_1>
#1368: FILE: drivers/net/s2io.c:2230:
+		if ((rxdp->Control_1 & RXD_OWN_XENA) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1369: FILE: drivers/net/s2io.c:2231:
+		if ((rxdp->Control_1 & RXD_OWN_XENA) &&
+			((nic->rxd_mode >= RXD_MODE_3A) &&

ERROR:SPACING: space required before the open parenthesis '('
#1417: FILE: drivers/net/s2io.c:2249:
+		if(!skb) {

WARNING:SPACING: space prohibited before semicolon
#1425: FILE: drivers/net/s2io.c:2256:
+			return -ENOMEM ;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1431: FILE: drivers/net/s2io.c:2262:
+			((RxD1_t*)rxdp)->Buffer0_ptr = pci_map_single

CHECK:CAMELCASE: Avoid CamelCase: <Buffer0_ptr>
#1431: FILE: drivers/net/s2io.c:2262:
+			((RxD1_t*)rxdp)->Buffer0_ptr = pci_map_single

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1438: FILE: drivers/net/s2io.c:2269:
+			/*
+			 * 2 or 3 buffer mode -

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1449: FILE: drivers/net/s2io.c:2280:
+			ba = &mac_control->rings[ring_no].ba[block_no][off];
 			^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1449: FILE: drivers/net/s2io.c:2280:
+			ba = &mac_control->rings[ring_no].ba[block_no][off];
 			                                  ^^

CHECK:SPACING: No space is necessary after a cast
#1451: FILE: drivers/net/s2io.c:2282:
+			tmp = (u64)(unsigned long) skb->data;

CHECK:SPACING: No space is necessary after a cast
#1454: FILE: drivers/net/s2io.c:2285:
+			skb->data = (void *) (unsigned long)tmp;

CHECK:SPACING: No space is necessary after a cast
#1455: FILE: drivers/net/s2io.c:2286:
+			skb->tail = (void *) (unsigned long)tmp;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1457: FILE: drivers/net/s2io.c:2288:
+			((RxD3_t*)rxdp)->Buffer0_ptr =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: drivers/net/s2io.c:2296:
+^I^I^I^I * Buffer2 will have L3/L4 header plus $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1465: FILE: drivers/net/s2io.c:2296:
+				/*
+				 * Buffer2 will have L3/L4 header plus 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1468: FILE: drivers/net/s2io.c:2299:
+				((RxD3_t*)rxdp)->Buffer2_ptr = pci_map_single

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1473: FILE: drivers/net/s2io.c:2304:
+				((RxD3_t*)rxdp)->Buffer1_ptr =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1475: FILE: drivers/net/s2io.c:2306:
+				pci_map_single(nic->pdev, ba->ba_1, BUF1_LEN,
+					PCI_DMA_FROMDEVICE);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1484: FILE: drivers/net/s2io.c:2315:
+						wmb();

WARNING:SPACING: space prohibited before semicolon
#1488: FILE: drivers/net/s2io.c:2319:
+					return -ENOMEM ;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1553: FILE: drivers/net/s2io.c:2364:
+	buffAdd_t *ba;
 	           ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: drivers/net/s2io.c:2369:
+                                rx_blocks[blk].rxds[j].virt_addr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: drivers/net/s2io.c:2369:
+                                rx_blocks[blk].rxds[j].virt_addr;$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].rx_blocks[blk].rxds[j].virt_addr'
#1558: FILE: drivers/net/s2io.c:2369:
+		rxdp = mac_control->rings[ring_no].
+                                rx_blocks[blk].rxds[j].virt_addr;

CHECK:SPACING: No space is necessary after a cast
#1560: FILE: drivers/net/s2io.c:2371:
+			((unsigned long) rxdp->Host_Control);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1561: FILE: drivers/net/s2io.c:2372:
+		if (!skb) {
+			continue;
+		}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1566: FILE: drivers/net/s2io.c:2377:
+				 ((RxD1_t*)rxdp)->Buffer0_ptr,

ERROR:SPACING: space required before the open parenthesis '('
#1573: FILE: drivers/net/s2io.c:2384:
+		} else if(sp->rxd_mode == RXD_MODE_3B) {

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1574: FILE: drivers/net/s2io.c:2385:
+			ba = &mac_control->rings[ring_no].
 			^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1575: FILE: drivers/net/s2io.c:2386:
+				ba[blk][j];
 				^^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mac_control->rings[ring_no].ba[blk][j]'
#1575: FILE: drivers/net/s2io.c:2386:
+			ba = &mac_control->rings[ring_no].
+				ba[blk][j];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1577: FILE: drivers/net/s2io.c:2388:
+				 ((RxD3_t*)rxdp)->Buffer0_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1581: FILE: drivers/net/s2io.c:2392:
+				 ((RxD3_t*)rxdp)->Buffer1_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1585: FILE: drivers/net/s2io.c:2396:
+				 ((RxD3_t*)rxdp)->Buffer2_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1591: FILE: drivers/net/s2io.c:2402:
+				((RxD3_t*)rxdp)->Buffer0_ptr, BUF0_LEN,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1594: FILE: drivers/net/s2io.c:2405:
+^I^I^I^I((RxD3_t*)rxdp)->Buffer1_ptr, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1594: FILE: drivers/net/s2io.c:2405:
+				((RxD3_t*)rxdp)->Buffer1_ptr, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1598: FILE: drivers/net/s2io.c:2409:
+				((RxD3_t*)rxdp)->Buffer2_ptr, dev->mtu,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1648: FILE: drivers/net/s2io.c:2439:
+			free_rxd_blk(sp,i,blk);
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1648: FILE: drivers/net/s2io.c:2439:
+			free_rxd_blk(sp,i,blk);
 			                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'get_block == put_block'
#1723: FILE: drivers/net/s2io.c:2576:
+		if ((get_block == put_block) &&
+		    (get_info.offset + 1) == put_info.offset) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1725: FILE: drivers/net/s2io.c:2578:
+			DBG_PRINT(ERR_DBG, "%s: Ring Full\n",dev->name);
 			                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1740: FILE: drivers/net/s2io.c:2591:
+				 ((RxD1_t*)rxdp)->Buffer0_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1751: FILE: drivers/net/s2io.c:2599:
+				 ((RxD3_t*)rxdp)->Buffer0_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1756: FILE: drivers/net/s2io.c:2602:
+				 ((RxD3_t*)rxdp)->Buffer1_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1762: FILE: drivers/net/s2io.c:2605:
+				 ((RxD3_t*)rxdp)->Buffer2_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1768: FILE: drivers/net/s2io.c:2610:
+					 ((RxD3_t*)rxdp)->Buffer0_ptr, BUF0_LEN,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1771: FILE: drivers/net/s2io.c:2613:
+					 ((RxD3_t*)rxdp)->Buffer1_ptr,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1775: FILE: drivers/net/s2io.c:2617:
+					 ((RxD3_t*)rxdp)->Buffer2_ptr,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ring_data->rx_blocks[get_block].rxds[get_info.offset].virt_addr'
#1788: FILE: drivers/net/s2io.c:2624:
+		rxdp = ring_data->rx_blocks[get_block].
+				rxds[get_info.offset].virt_addr;

CHECK:SPACING: No space is necessary after a cast
#1814: FILE: drivers/net/s2io.c:3084:
+	XENA_dev_config_t *bar0 = (XENA_dev_config_t *) nic->bar0;

CHECK:SPACING: No space is necessary after a cast
#1823: FILE: drivers/net/s2io.c:3105:
+	XENA_dev_config_t *bar0 = (XENA_dev_config_t *) nic->bar0;

CHECK:SPACING: No space is necessary after a cast
#1832: FILE: drivers/net/s2io.c:3123:
+	XENA_dev_config_t *bar0 = (XENA_dev_config_t *) nic->bar0;

CHECK:SPACING: No space is necessary after a cast
#1841: FILE: drivers/net/s2io.c:3146:
+	XENA_dev_config_t *bar0 = (XENA_dev_config_t *) nic->bar0;

CHECK:SPACING: No space is necessary after a cast
#1850: FILE: drivers/net/s2io.c:3196:
+	XENA_dev_config_t *bar0 = (XENA_dev_config_t *) nic->bar0;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1901: FILE: drivers/net/s2io.c:5607:
+		buffAdd_t *ba = &ring_data->ba[get_block][get_off];
 		           ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1901: FILE: drivers/net/s2io.c:5607:
+		buffAdd_t *ba = &ring_data->ba[get_block][get_off];
 		                            ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1902: FILE: drivers/net/s2io.c:5608:
+		buffAdd_t *ba = &ring_data->ba[get_block][get_off];
+		sp->stats.rx_bytes += buf0_len + buf2_len;

CHECK:BRACES: Unbalanced braces around else statement
#1915: FILE: drivers/net/s2io.c:5621:
+		} else

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1933: FILE: drivers/net/s2io.c:5771:
+module_param(l3l4hdr_size, int , 0);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1986: FILE: drivers/net/s2io.c:6201:
+			  "enabled\n",dev->name);
 			             ^

WARNING:SPLIT_STRING: quoted string split across lines
#1986: FILE: drivers/net/s2io.c:6201:
+		DBG_PRINT(ERR_DBG, "%s: 2-Buffer mode support has been "
+			  "enabled\n",dev->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1989: FILE: drivers/net/s2io.c:6204:
+			  "enabled\n",dev->name);
 			             ^

WARNING:SPLIT_STRING: quoted string split across lines
#1989: FILE: drivers/net/s2io.c:6204:
+		DBG_PRINT(ERR_DBG, "%s: 3-Buffer mode support has been "
+			  "enabled\n",dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2035: FILE: drivers/net/s2io.h:446:
 
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2038: FILE: drivers/net/s2io.h:449:
+typedef struct _RxD1_t {

CHECK:CAMELCASE: Avoid CamelCase: <_RxD1_t>
#2038: FILE: drivers/net/s2io.h:449:
+typedef struct _RxD1_t {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2041: FILE: drivers/net/s2io.h:452:
+#define MASK_BUFFER0_SIZE_1       vBIT(0x3FFF,2,14)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2041: FILE: drivers/net/s2io.h:452:
+#define MASK_BUFFER0_SIZE_1       vBIT(0x3FFF,2,14)
                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <vBIT>
#2041: FILE: drivers/net/s2io.h:452:
+#define MASK_BUFFER0_SIZE_1       vBIT(0x3FFF,2,14)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2042: FILE: drivers/net/s2io.h:453:
+#define SET_BUFFER0_SIZE_1(val)   vBIT(val,2,14)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2042: FILE: drivers/net/s2io.h:453:
+#define SET_BUFFER0_SIZE_1(val)   vBIT(val,2,14)
                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <_Control_2>
#2043: FILE: drivers/net/s2io.h:454:
+#define RXD_GET_BUFFER0_SIZE_1(_Control_2) \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2043: FILE: drivers/net/s2io.h:454:
+#define RXD_GET_BUFFER0_SIZE_1(_Control_2) \
+	(u16)((_Control_2 & MASK_BUFFER0_SIZE_1) >> 48)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_Control_2' may be better as '(_Control_2)' to avoid precedence issues
#2043: FILE: drivers/net/s2io.h:454:
+#define RXD_GET_BUFFER0_SIZE_1(_Control_2) \
+	(u16)((_Control_2 & MASK_BUFFER0_SIZE_1) >> 48)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2049: FILE: drivers/net/s2io.h:460:
+typedef struct _RxD3_t {

CHECK:CAMELCASE: Avoid CamelCase: <_RxD3_t>
#2049: FILE: drivers/net/s2io.h:460:
+typedef struct _RxD3_t {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2052: FILE: drivers/net/s2io.h:463:
+#define MASK_BUFFER0_SIZE_3       vBIT(0xFF,2,14)
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2052: FILE: drivers/net/s2io.h:463:
+#define MASK_BUFFER0_SIZE_3       vBIT(0xFF,2,14)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2053: FILE: drivers/net/s2io.h:464:
+#define MASK_BUFFER1_SIZE_3       vBIT(0xFFFF,16,16)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2053: FILE: drivers/net/s2io.h:464:
+#define MASK_BUFFER1_SIZE_3       vBIT(0xFFFF,16,16)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2054: FILE: drivers/net/s2io.h:465:
+#define MASK_BUFFER2_SIZE_3       vBIT(0xFFFF,32,16)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2054: FILE: drivers/net/s2io.h:465:
+#define MASK_BUFFER2_SIZE_3       vBIT(0xFFFF,32,16)
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2055: FILE: drivers/net/s2io.h:466:
+#define SET_BUFFER0_SIZE_3(val)   vBIT(val,8,8)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2055: FILE: drivers/net/s2io.h:466:
+#define SET_BUFFER0_SIZE_3(val)   vBIT(val,8,8)
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2056: FILE: drivers/net/s2io.h:467:
+#define SET_BUFFER1_SIZE_3(val)   vBIT(val,16,16)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2056: FILE: drivers/net/s2io.h:467:
+#define SET_BUFFER1_SIZE_3(val)   vBIT(val,16,16)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2057: FILE: drivers/net/s2io.h:468:
+#define SET_BUFFER2_SIZE_3(val)   vBIT(val,32,16)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2057: FILE: drivers/net/s2io.h:468:
+#define SET_BUFFER2_SIZE_3(val)   vBIT(val,32,16)
                                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2058: FILE: drivers/net/s2io.h:469:
+#define RXD_GET_BUFFER0_SIZE_3(Control_2) \
+	(u8)((Control_2 & MASK_BUFFER0_SIZE_3) >> 48)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Control_2' may be better as '(Control_2)' to avoid precedence issues
#2058: FILE: drivers/net/s2io.h:469:
+#define RXD_GET_BUFFER0_SIZE_3(Control_2) \
+	(u8)((Control_2 & MASK_BUFFER0_SIZE_3) >> 48)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2060: FILE: drivers/net/s2io.h:471:
+#define RXD_GET_BUFFER1_SIZE_3(Control_2) \
+	(u16)((Control_2 & MASK_BUFFER1_SIZE_3) >> 32)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Control_2' may be better as '(Control_2)' to avoid precedence issues
#2060: FILE: drivers/net/s2io.h:471:
+#define RXD_GET_BUFFER1_SIZE_3(Control_2) \
+	(u16)((Control_2 & MASK_BUFFER1_SIZE_3) >> 32)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2062: FILE: drivers/net/s2io.h:473:
+#define RXD_GET_BUFFER2_SIZE_3(Control_2) \
+	(u16)((Control_2 & MASK_BUFFER2_SIZE_3) >> 16)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'Control_2' may be better as '(Control_2)' to avoid precedence issues
#2062: FILE: drivers/net/s2io.h:473:
+#define RXD_GET_BUFFER2_SIZE_3(Control_2) \
+	(u16)((Control_2 & MASK_BUFFER2_SIZE_3) >> 16)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2124: FILE: drivers/net/s2io.h:541:
 
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2125: FILE: drivers/net/s2io.h:542:
+typedef struct rxd_info {

ERROR:SPACING: space required after that close brace '}'
#2128: FILE: drivers/net/s2io.h:545:
+}rxd_info_t;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137748.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 97 errors, 102 warnings, 72 checks, 1971 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137748.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
