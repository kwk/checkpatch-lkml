WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
> > The hash table is likely to big anyways; eating cache and not helping that

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#70: FILE: ipv4/proc.c:71:
+	extern int tcp_v4_hash_statistics(char *) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#70: FILE: ipv4/proc.c:71:
+	extern int tcp_v4_hash_statistics(char *) ;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#70: FILE: ipv4/proc.c:71:
+	extern int tcp_v4_hash_statistics(char *) ;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#70: FILE: ipv4/proc.c:71:
+	extern int tcp_v4_hash_statistics(char *) ;

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: ipv4/proc.c:86:
+^Ilen += tcp_v4_hash_statistics(buffer+len); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#78: FILE: ipv4/proc.c:86:
+	len += tcp_v4_hash_statistics(buffer+len); 
 	                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: ipv4/proc.c:87:
+^I^I^I   $

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: ipv4/tcp.c:2445:
+static unsigned tcp_ehash_order; $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: ipv4/tcp.c:2445:
+static unsigned tcp_ehash_order; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: ipv4/tcp.c:2448:
+^Itcp_ehash_order = simple_strtol(str,NULL,0); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: ipv4/tcp.c:2448:
+	tcp_ehash_order = simple_strtol(str,NULL,0); 
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: ipv4/tcp.c:2448:
+	tcp_ehash_order = simple_strtol(str,NULL,0); 
 	                                        ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#92: FILE: ipv4/tcp.c:2448:
+	tcp_ehash_order = simple_strtol(str,NULL,0); 

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: ipv4/tcp.c:2450:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: ipv4/tcp.c:2452:
+__setup("tcpehashorder=", tcp_hash_setup); $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#96: FILE: ipv4/tcp.c:2452:
+__setup("tcpehashorder=", tcp_hash_setup); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: ipv4/tcp.c:2498:
+^Iif (tcp_ehash_order) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: ipv4/tcp.c:2500:
+^Ielse {^I$

CHECK:BRACES: Unbalanced braces around else statement
#109: FILE: ipv4/tcp.c:2500:
+	else {	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#110: FILE: ipv4/tcp.c:2501:
+		for(order = 0; (1UL << order) < goal; order++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: ipv4/tcp.c:2503:
+^I} ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: ipv4/tcp.c:2503:
+^I} ^I^I$

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited before semicolon
#125: FILE: ipv4/tcp_ipv4.c:2168:
+	int max_hlen = 0, hrun = 0, hcnt = 0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: ipv4/tcp_ipv4.c:2171:
+^Ibuffer += sprintf(buffer, "hash_buckets %d\n", tcp_ehash_size*2); $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#128: FILE: ipv4/tcp_ipv4.c:2171:
+	buffer += sprintf(buffer, "hash_buckets %d\n", tcp_ehash_size*2); 
 	                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: ipv4/tcp_ipv4.c:2178:
+^I^Iint len = 0; $

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: ipv4/tcp_ipv4.c:2181:
+		for(sk = head->chain; sk; sk = sk->next) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: ipv4/tcp_ipv4.c:2184:
+^I^I^I++len; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: ipv4/tcp_ipv4.c:2187:
+^I^Iif (len > 0) { $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#145: FILE: ipv4/tcp_ipv4.c:2188:
+			if (len > max_hlen) max_hlen = len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: ipv4/tcp_ipv4.c:2189:
+^I^I^I++hcnt; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: ipv4/tcp_ipv4.c:2190:
+^I^I^Ihrun += len; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: ipv4/tcp_ipv4.c:2191:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: ipv4/tcp_ipv4.c:2193:
+^I^Ilen = 0; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: ipv4/tcp_ipv4.c:2195:
+		for (tw = (struct tcp_tw_bucket *)tcp_ehash[i+tcp_ehash_size].chain;
 		                                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tw"
#153: FILE: ipv4/tcp_ipv4.c:2196:
+		     tw != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: ipv4/tcp_ipv4.c:2200:
+^I^I^I++len; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: ipv4/tcp_ipv4.c:2204:
+^I^Iif (len > 0) { $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#162: FILE: ipv4/tcp_ipv4.c:2205:
+			if (len > max_hlen) max_hlen = len;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: ipv4/tcp_ipv4.c:2206:
+^I^I^I++hcnt; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: ipv4/tcp_ipv4.c:2207:
+^I^I^Ihrun += len; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: ipv4/tcp_ipv4.c:2208:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: ipv4/tcp_ipv4.c:2213:
+^Ibuffer += sprintf(buffer, "used hash buckets: %d\n", hcnt); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: ipv4/tcp_ipv4.c:2214:
+^Iif (hcnt > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: ipv4/tcp_ipv4.c:2215:
+^I^Ibuffer += sprintf(buffer, "average length: %d\n", hrun / hcnt); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: ipv4/tcp_ipv4.c:2217:
+^Ireturn buffer - bufs; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: ipv4/tcp_ipv4.c:2220:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 11 warnings, 8 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
