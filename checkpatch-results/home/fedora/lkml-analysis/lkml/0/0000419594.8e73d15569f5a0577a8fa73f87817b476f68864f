WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
prototype for integrating network devices into the LDM.  We implmented a net

WARNING:TYPO_SPELLING: 'implmented' may be misspelled - perhaps 'implemented'?
#24: 
prototype for integrating network devices into the LDM.  We implmented a net
                                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/net/net_init.c:257:
+static struct eth_intf_data $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: drivers/net/net_init.c:269:
+	if(!cls_data || cls_data->netdev->type != ARPHRD_ETHER)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/net/net_init.c:271:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/net/net_init.c:272:
+	printk("LDM ethernet interface found device %s\n", cls_data->netdev->name);

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: drivers/net/net_init.c:274:
+	if((ethifd = kmalloc(sizeof(struct eth_intf_data), GFP_ATOMIC)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: drivers/net/net_init.c:274:
+	if((ethifd = kmalloc(sizeof(struct eth_intf_data), GFP_ATOMIC)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ethifd)...) over kmalloc(sizeof(struct eth_intf_data)...)
#127: FILE: drivers/net/net_init.c:274:
+	if((ethifd = kmalloc(sizeof(struct eth_intf_data), GFP_ATOMIC)) == NULL) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: drivers/net/net_init.c:275:
+		printk("No memory for ethernet device interface\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/net/net_init.c:296:
+        .name           = "ethernet",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/net/net_init.c:296:
+        .name           = "ethernet",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/net/net_init.c:297:
+        .devclass       = &net_devclass,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/net/net_init.c:297:
+        .devclass       = &net_devclass,$

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: drivers/net/net_init.c:642:
+	if(!cls_data || cls_data->netdev->type != ARPHRD_IEEE802_TR)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/net/net_init.c:644:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: drivers/net/net_init.c:645:
+	printk("LDM token ring interface found device %s\n", cls_data->netdev->name);

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: drivers/net/net_init.c:647:
+	if((trifd = kmalloc(sizeof(struct tr_intf_data), GFP_ATOMIC)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: drivers/net/net_init.c:647:
+	if((trifd = kmalloc(sizeof(struct tr_intf_data), GFP_ATOMIC)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*trifd)...) over kmalloc(sizeof(struct tr_intf_data)...)
#180: FILE: drivers/net/net_init.c:647:
+	if((trifd = kmalloc(sizeof(struct tr_intf_data), GFP_ATOMIC)) == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#181: FILE: drivers/net/net_init.c:648:
+		printk("No memory for token ring device interface\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/net/net_init.c:669:
+        .name           = "tokenring",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/net/net_init.c:669:
+        .name           = "tokenring",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/net/net_init.c:670:
+        .devclass       = &net_devclass,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/net/net_init.c:670:
+        .devclass       = &net_devclass,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: drivers/net/net_init.c:675:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/net/setup.c:168:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: drivers/net/setup.c:169:
+	if(pci_bus_type.match(dev, dev->driver)) {

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: drivers/net/setup.c:172:
+	} else if(platform_bus_type.match(dev, dev->driver)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/net/setup.c:173:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/net/setup.c:174:
+^I^I * Figure out a way back to struct net_device $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#244: FILE: drivers/net/setup.c:174:
+		/* 
+		 * Figure out a way back to struct net_device 

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: drivers/net/setup.c:179:
+	if(!netdev)

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: drivers/net/setup.c:182:
+	if((cls_data = kmalloc(sizeof(struct netdev_class_data), GFP_ATOMIC)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: drivers/net/setup.c:182:
+	if((cls_data = kmalloc(sizeof(struct netdev_class_data), GFP_ATOMIC)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cls_data)...) over kmalloc(sizeof(struct netdev_class_data)...)
#252: FILE: drivers/net/setup.c:182:
+	if((cls_data = kmalloc(sizeof(struct netdev_class_data), GFP_ATOMIC)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#253: FILE: drivers/net/setup.c:183:
+		printk(KERN_WARNING "No memory for net device class data.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/net/setup.c:186:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#257: FILE: drivers/net/setup.c:187:
+	printk(KERN_INFO "net: adding device %s to net class\n", dev->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/net/setup.c:191:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: drivers/net/setup.c:201:
+	if(dev->class_data)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#272: FILE: drivers/net/setup.c:202:
+	if(dev->class_data)
+		kfree(dev->class_data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/net/setup.c:203:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#274: FILE: drivers/net/setup.c:204:
+	printk(KERN_INFO "net: removing device %s from net class\n", dev->name);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#287: FILE: drivers/net/setup.c:217:
+extern struct device_interface eth_netdev_intf;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#309: FILE: drivers/net/setup.c:240:
+EXPORT_SYMBOL(net_devclass);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drivers/net/tokenring/lanstreamer.c:80:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/net/tokenring/lanstreamer.c:80:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/net/tokenring/lanstreamer.c:143:
+                        "              v0.5.3 10/24/02 - LDM";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/net/tokenring/lanstreamer.c:143:
+                        "              v0.5.3 10/24/02 - LDM";$

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: drivers/net/tokenring/lanstreamer.c:178:
+	if(off)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_ringspeed' to 'ringspeed_show'
#361: FILE: drivers/net/tokenring/lanstreamer.c:186:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: drivers/net/tokenring/lanstreamer.c:187:
+static DEVICE_ATTR(ringspeed,S_IRUGO,show_ringspeed,NULL);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: drivers/net/tokenring/lanstreamer.c:187:
+static DEVICE_ATTR(ringspeed,S_IRUGO,show_ringspeed,NULL);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: drivers/net/tokenring/lanstreamer.c:187:
+static DEVICE_ATTR(ringspeed,S_IRUGO,show_ringspeed,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#362: FILE: drivers/net/tokenring/lanstreamer.c:187:
+static DEVICE_ATTR(ringspeed,S_IRUGO,show_ringspeed,NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: drivers/net/tokenring/lanstreamer.c:191:
+	if(device_create_file(dev, &dev_attr_ringspeed))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#367: FILE: drivers/net/tokenring/lanstreamer.c:192:
+		printk(KERN_INFO "%s: driverfs file creation failed.\n", dev->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: drivers/net/tokenring/lanstreamer.c:1266:
+^I$

WARNING:INDENTED_LABEL: labels should not be indented
#410: FILE: drivers/net/tokenring/lanstreamer.c:2037:
+	name:		"lanstreamer",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#411: FILE: drivers/net/tokenring/lanstreamer.c:2038:
+	id_table:	streamer_pci_tbl,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#411: FILE: drivers/net/tokenring/lanstreamer.c:2038:
+	id_table:	streamer_pci_tbl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#412: FILE: drivers/net/tokenring/lanstreamer.c:2039:
+	probe:		streamer_init_one,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#412: FILE: drivers/net/tokenring/lanstreamer.c:2039:
+	probe:		streamer_init_one,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#413: FILE: drivers/net/tokenring/lanstreamer.c:2040:
+	remove:		__devexit_p(streamer_remove_one),
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#413: FILE: drivers/net/tokenring/lanstreamer.c:2040:
+	remove:		__devexit_p(streamer_remove_one),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#414: FILE: drivers/net/tokenring/lanstreamer.c:2041:
+	driver:         {
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#414: FILE: drivers/net/tokenring/lanstreamer.c:2041:
+	driver:         {

WARNING:INDENTED_LABEL: labels should not be indented
#415: FILE: drivers/net/tokenring/lanstreamer.c:2042:
+		devclass:	&net_devclass,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/net/tokenring/lanstreamer.c:2043:
+       },$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: include/linux/netdevice.h:453:
+struct netdev_class_data $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#441: FILE: include/linux/netdevice.h:454:
+struct netdev_class_data 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 29 warnings, 4 checks, 353 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419594.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
