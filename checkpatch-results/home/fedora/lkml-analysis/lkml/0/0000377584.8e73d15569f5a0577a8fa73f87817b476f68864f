WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> In the default installation, the source files for the vmnet module are in:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: driver.c:1:
+/* *************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: driver.c:225:
+   LOG(0, (KERN_WARNING "vmnet: VNetRegister called\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: driver.c:250:
+   int retval, minor, devices;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: driver.c:252:
+   char name[8];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: driver.c:269:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: driver.c:269:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: driver.c:271:
+   retval = devfs_register_chrdev(VNET_MAJOR_NUMBER, "vmnet", &vnetFileOps);$

CHECK:CAMELCASE: Avoid CamelCase: <vnetFileOps>
#140: FILE: driver.c:271:
+   retval = devfs_register_chrdev(VNET_MAJOR_NUMBER, "vmnet", &vnetFileOps);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: driver.c:272:
+   if (retval < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 11)
#141: FILE: driver.c:272:
+   if (retval < 0) {
+	   LOG(0, (KERN_NOTICE "vmnet: could not register major device %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: driver.c:274:
+	   LOG(0, (KERN_NOTICE "vmnet: could not register major device %d\n",
+	      VNET_MAJOR_NUMBER));

WARNING:TABSTOP: Statements should start on a tabstop
#144: FILE: driver.c:275:
+	   return -ENOENT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: driver.c:276:
+   }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: driver.c:277:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: driver.c:277:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: driver.c:278:
+   devfs_handle = devfs_mk_dir(NULL, "vmware", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: driver.c:279:
+   if (! devfs_handle)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 11)
#148: FILE: driver.c:279:
+   if (! devfs_handle)
+	   printk(KERN_ERR "vmnet: could not create 'misc' device subdir\n");

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#148: FILE: driver.c:279:
+   if (! devfs_handle)
        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#149: FILE: driver.c:280:
+	   printk(KERN_ERR "vmnet: could not create 'misc' device subdir\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: driver.c:282:
+   devices = 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: driver.c:283:
+   for (minor=0; minor<devices; minor++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 11)
#152: FILE: driver.c:283:
+   for (minor=0; minor<devices; minor++) {
+	   snprintf (name, sizeof (name), "vmnet%d", minor);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: driver.c:283:
+   for (minor=0; minor<devices; minor++) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#152: FILE: driver.c:283:
+   for (minor=0; minor<devices; minor++) {
                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: driver.c:284:
+	   snprintf (name, sizeof (name), "vmnet%d", minor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: driver.c:284:
+	   snprintf (name, sizeof (name), "vmnet%d", minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: driver.c:286:
+	   devfs_register(devfs_handle, name,
+		   DEVFS_FL_DEFAULT, VNET_MAJOR_NUMBER, minor,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#156: FILE: driver.c:287:
+		   S_IFCHR | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: driver.c:289:
+   }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#161: FILE: driver.c:292:
    if (retval) {
+      LOG(0, (KERN_NOTICE "vmnet: could not register major device %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: driver.c:293:
+      LOG(0, (KERN_NOTICE "vmnet: could not register major device %d\n",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: driver.c:298:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: driver.c:298:
+   $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#171: FILE: driver.c:300:
    if (retval) {
+      LOG(0, (KERN_NOTICE "vmnet: could not register proc fs\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: driver.c:301:
+      LOG(0, (KERN_NOTICE "vmnet: could not register proc fs\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: driver.c:349:
+   devfs_unregister(devfs_handle);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: driver.c:350:
+   retval = devfs_unregister_chrdev(VNET_MAJOR_NUMBER, "vmnet");$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#195: FILE: driver.c:351:
%d\n",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: driver.c:352:
+      LOG(0, (KERN_WARNING "vmnet: could not unregister major device %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: driver.c:356:
+   retval = unregister_chrdev(VNET_MAJOR_NUMBER, "vmnet");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: driver.c:357:
+   if (retval != 0 ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#201: FILE: driver.c:357:
+   if (retval != 0 ) {
+      LOG(0, (KERN_WARNING "vmnet: could not unregister major device %d\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: driver.c:357:
+   if (retval != 0 ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: driver.c:358:
+      LOG(0, (KERN_WARNING "vmnet: could not unregister major device %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: driver.c:360:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: driver.c:421:
+   LOG(1, (KERN_DEBUG "vmnet: open called by PID %d (%s)\n",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: driver.c:464:
+   LOG(1, (KERN_DEBUG "vmnet: port on hub %d successfully opened\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: driver.c:464:
+   LOG(1, (KERN_DEBUG "vmnet: port on hub %d successfully opened\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: driver.c:465:
+   LOG(1, (KERN_DEBUG "vmnet: port on hub %d successfully opened\n", 
    

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#232: FILE: driver.c:499:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on close\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: driver.c:500:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on close\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#241: FILE: driver.c:557:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on read\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: driver.c:558:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on read\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#250: FILE: driver.c:601:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on write\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: driver.c:602:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on write\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#259: FILE: driver.c:637:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on poll\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: driver.c:638:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on poll\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#268: FILE: driver.c:659:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on select\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: driver.c:660:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on select\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#277: FILE: driver.c:740:
    if (!port) {
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on ioctl\n"));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: driver.c:741:
+      LOG(1, (KERN_DEBUG "vmnet: bad file pointer on ioctl\n"));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 12)
#285: FILE: driver.c:801:
          if (retval2) {
[...]
+            LOG(1, (KERN_NOTICE "vmnet: cycle on connect failure\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: driver.c:803:
+            LOG(1, (KERN_NOTICE "vmnet: cycle on connect failure\n"));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: driver.c:803:
+            LOG(1, (KERN_NOTICE "vmnet: cycle on connect failure\n"));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: driver.c:1158:
+            LOG(0, (KERN_INFO "vmnet: assigning IP-based address %d.\n", i));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: driver.c:1158:
+            LOG(0, (KERN_INFO "vmnet: assigning IP-based address %d.\n", i));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: driver.c:1164:
+         LOG(0, (KERN_NOTICE "vmnet: out of IP-based MAC addresses.\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: driver.c:1164:
+         LOG(0, (KERN_NOTICE "vmnet: out of IP-based MAC addresses.\n"));$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377584.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 54 warnings, 4 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377584.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
