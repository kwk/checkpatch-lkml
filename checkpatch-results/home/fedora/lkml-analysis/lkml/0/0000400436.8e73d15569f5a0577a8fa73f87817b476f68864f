WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -u --recursive --new-file linux-2.5.56-06-auth_upcall2/fs/Kconfig linux-2.5.56-07-krb5/fs/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: include/linux/sunrpc/gss_krb5.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: include/linux/sunrpc/gss_krb5.h:68:
+};
+enum seal_alg {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: include/linux/sunrpc/gss_krb5.h:113:
+/* per Kerberos v5 protocol spec crypto types from the wire. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: include/linux/sunrpc/gss_krb5.h:114:
+ * these get mapped to linux kernel crypto routines.  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: include/linux/sunrpc/gss_krb5.h:135:
+krb5_make_token(struct krb5_ctx *context_handle, int qop_req,
+	struct xdr_netobj * input_message_buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: include/linux/sunrpc/gss_krb5.h:135:
+	struct xdr_netobj * input_message_buffer,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: include/linux/sunrpc/gss_krb5.h:136:
+	struct xdr_netobj * output_message_buffer, int toktype);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/linux/sunrpc/gss_krb5.h:140:
+krb5_read_token(struct krb5_ctx *context_handle,
+	  struct xdr_netobj *input_token_buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: include/linux/sunrpc/gss_krb5.h:145:
+krb5_encrypt(struct crypto_tfm * key,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#215: FILE: include/linux/sunrpc/gss_krb5.h:149:
+krb5_decrypt(struct crypto_tfm * key,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: include/linux/sunrpc/gss_krb5.h:150:
+^I     void *iv, void *in, void *out, int length); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: include/linux/sunrpc/gss_krb5.h:153:
+krb5_make_seq_num(struct crypto_tfm * key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: include/linux/sunrpc/gss_krb5.h:154:
+krb5_make_seq_num(struct crypto_tfm * key,
+		int direction,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: include/linux/sunrpc/gss_krb5.h:158:
+krb5_get_seq_num(struct crypto_tfm * key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: include/linux/sunrpc/gss_krb5.h:159:
+krb5_get_seq_num(struct crypto_tfm * key,
+	       unsigned char *cksum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: include/linux/sunrpc/gss_krb5.h:160:
+	       unsigned char *buf, int *direction, s32 * seqnum);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#231: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#242: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:12:
+/*
+ * Copyright (C) 1998 by the FundsXpress, INC.

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#264: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:34:
+ * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
                  ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#279: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:49:
+krb5_encrypt(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:51:
+	void * iv,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:52:
+	void * in,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:53:
+	void * out,

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:57:
+        struct scatterlist sg[1];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:57:
+        struct scatterlist sg[1];$

WARNING:TYPO_SPELLING: 'nin' may be misspelled - perhaps 'inn'?
#290: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:60:
+	dprintk("RPC: gss_k5encrypt: TOP in %p out %p\nin data:\n", out, in);
 	                                              ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:68:
+^I^I         crypto_tfm_alg_ivsize(tfm));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:68:
+		dprintk("RPC: gss_k5encrypt: tfm iv size to large %d\n",
+		         crypto_tfm_alg_ivsize(tfm));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:84:
+	dprintk("gss_k5encrypt returns %d\n",ret);
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#315: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:85:
+	return(ret);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#319: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:89:
+krb5_decrypt(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:90:
+     struct crypto_tfm *tfm,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:91:
+     void * iv,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:91:
+     void * iv,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:92:
+     void * in,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:92:
+     void * in,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:93:
+     void * out,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:93:
+     void * out,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:94:
+     int length)$

WARNING:TYPO_SPELLING: 'nin' may be misspelled - perhaps 'inn'?
#330: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:100:
+	dprintk("RPC: gss_k5decrypt: TOP in %p out %p\nin data:\n", in, out);
 	                                              ^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:101:
+	print_hexl((u32 *)in,length,0);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:101:
+	print_hexl((u32 *)in,length,0);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:112:
+		memcpy(local_iv,iv, crypto_tfm_alg_ivsize(tfm));
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:123:
+	dprintk("gss_k5decrypt returns %d\n",ret);
 	                                    ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#354: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:124:
+	return(ret);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#366: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:136:
+	switch (cksumtype) {
+		case CKSUMTYPE_RSA_MD5:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_make_checksum', this function's name, in a string
#371: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:141:
+			dprintk("RPC: krb5_make_checksum:"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#372: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:142:
+			dprintk("RPC: krb5_make_checksum:"
+				" unsupported checksum %d", cksumtype);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#375: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:145:
+	if (!(tfm = crypto_alloc_tfm(cksumname, 0)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#379: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:149:
+	if ((cksum->data = kmalloc(cksum->len, GFP_KERNEL)) == NULL) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#397: FILE: net/sunrpc/auth_gss/gss_krb5_crypto.c:167:
+	return (ret);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#403: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:51:
+   {9, "\052\206\110\206\367\022\001\002\002"};$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#453: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:51:
+struct xdr_netobj gss_mech_krb5_oid =
+   {9, "\052\206\110\206\367\022\001\002\002"};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:57:
+	char *p, *q;
+	p = *ptr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#472: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:70:
+	char *p, *q;
+	p = *ptr;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#478: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:76:
+	if (!(res->data = kmalloc(res->len, GFP_KERNEL)))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#497: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:95:
+	switch (alg) {
+		case ENCTYPE_DES_CBC_RAW:
[...]
+		default:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_key', this function's name, in a string
#503: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:101:
+			dprintk("RPC: get_key: unsupported algorithm %d", alg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#506: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:104:
+	if (!(*res = crypto_alloc_tfm(alg_name, alg_mode)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#530: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:128:
+	if (!(ctx = kmalloc(sizeof(*ctx), GFP_KERNEL)))

WARNING:TYPO_SPELLING: 'Succesfully' may be misspelled - perhaps 'Successfully'?
#558: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:156:
+	dprintk("Succesfully imported new context.\n");
 	         ^^^^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#573: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:171:
+void
+gss_delete_sec_context_kerberos(void *internal_ctx) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#582: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:180:
+	if (kctx->mech_used.data)
+		kfree(kctx->mech_used.data);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#586: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:184:
+u32
+gss_verify_mic_kerberos(struct gss_ctx		*ctx,
+			struct xdr_netobj	*signbuf,
+			struct xdr_netobj	*checksum,
+			u32		*qstate) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#597: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:195:
+	if (!maj_stat && qop_state)
+	    *qstate = qop_state;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gss_verify_mic_kerberos', this function's name, in a string
#600: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:198:
+	dprintk("RPC: gss_verify_mic_kerberos returning %d\n", maj_stat);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#604: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:202:
+u32
+gss_get_mic_kerberos(struct gss_ctx	*ctx,
+		     u32		qop,
+		     struct xdr_netobj	*message_buffer,
+		     struct xdr_netobj	*message_token) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#612: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:210:
+	if (!message_buffer->data) return GSS_S_FAILURE;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gss_get_mic_kerberos', this function's name, in a string
#614: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:212:
+	dprintk("RPC: gss_get_mic_kerberos:"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:213:
+		" message_buffer->len %d\n",message_buffer->len);
 		                           ^

WARNING:SPLIT_STRING: quoted string split across lines
#615: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:213:
+	dprintk("RPC: gss_get_mic_kerberos:"
+		" message_buffer->len %d\n",message_buffer->len);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:218:
+	dprintk("RPC: gss_get_mic_kerberos returning %d\n",err);
 	                                                  ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gss_get_mic_kerberos', this function's name, in a string
#620: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:218:
+	dprintk("RPC: gss_get_mic_kerberos returning %d\n",err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#639: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:237:
+		printk("Failed to register kerberos gss mechanism!\n");

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#641: FILE: net/sunrpc/auth_gss/gss_krb5_mech.c:239:
+	gss_register_triple(RPC_AUTH_GSS_KRB5 , gm, 0, RPC_GSS_SVC_NONE);
 	                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#658: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#671: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:14:
+/*
+ * Copyright 1993 by OpenVision Technologies, Inc.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#693: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:36:
+/*
+ * Copyright (C) 1998 by the FundsXpress, INC.

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#715: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:58:
+ * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
                  ^^^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#734: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:77:
+	 * use only 8: */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#735: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:78:
+	BUG_ON(blocksize != 8);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#740: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:83:
+ * as specified by the rfc: */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#741: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:84:
+static u32
+compute_checksum(s32 checksum_type, char *header, char *body, int body_len,
+		 struct xdr_netobj *md5cksum) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#748: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:91:
+	if (!(data_ptr = kmalloc(8 + body_len, GFP_KERNEL)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:107:
+krb5_make_token(struct krb5_ctx *ctx, int qop_req,
+		   struct xdr_netobj * text, struct xdr_netobj * token,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#764: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:107:
+		   struct xdr_netobj * text, struct xdr_netobj * token,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#764: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:107:
+		   struct xdr_netobj * text, struct xdr_netobj * token,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#780: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:123:
+	switch (ctx->signalg) {
+		case SGN_ALG_DES_MAC_MD5:
[...]
+		default:

WARNING:SPLIT_STRING: quoted string split across lines
#786: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:129:
+			dprintk("RPC: gss_krb5_seal: ctx->signalg %d not"
+				" supported\n", ctx->signalg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#804: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:147:
+	if ((token->data = kmalloc(token->len, GFP_KERNEL)) == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:175:
+		if (krb5_encrypt(ctx->enc, NULL, msg_start, msg_start,
+					tmsglen))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:180:
+		if (compute_checksum(checksum_type, krb5_hdr, text->data,
+					text->len, &md5cksum))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:187:
+		if (krb5_encrypt(ctx->seq, NULL, md5cksum.data,
+				  md5cksum.data, md5cksum.len))

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#849: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:192:
+		dprintk("make_seal_token: cksum data: \n");

CHECK:SPACING: No space is necessary after a cast
#850: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:193:
+		print_hexl((u32 *) (krb5_hdr + 16), CKSUM_SIZE, 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#853: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:196:
+		BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#866: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:209:
+	if (md5cksum.data) kfree(md5cksum.data);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#867: FILE: net/sunrpc/auth_gss/gss_krb5_seal.c:210:
+	if (token->data) kfree(token->data);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#876: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#888: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:13:
+/*
+ * Copyright 1993 by OpenVision Technologies, Inc.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#889: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:14:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:24:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:45:
+krb5_make_seq_num(struct crypto_tfm *key,
+		int direction,

CHECK:SPACING: No space is necessary after a cast
#926: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:51:
+	plain[0] = (unsigned char) (seqnum & 0xff);

CHECK:SPACING: No space is necessary after a cast
#927: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:52:
+	plain[1] = (unsigned char) ((seqnum >> 8) & 0xff);

CHECK:SPACING: No space is necessary after a cast
#928: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:53:
+	plain[2] = (unsigned char) ((seqnum >> 16) & 0xff);

CHECK:SPACING: No space is necessary after a cast
#929: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:54:
+	plain[3] = (unsigned char) ((seqnum >> 24) & 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:66:
+krb5_get_seq_num(struct crypto_tfm *key,
+	       unsigned char *cksum,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#943: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:68:
+	       int *direction, s32 * seqnum)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_get_seq_num', this function's name, in a string
#948: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:73:
+	dprintk("krb5_get_seq_num: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#948: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:73:
+	dprintk("krb5_get_seq_num: \n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#950: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:75:
+	if ((code = krb5_decrypt(key, cksum, buf, plain, 8)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plain[4] != plain[5]'
#953: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:78:
+	if ((plain[4] != plain[5]) || (plain[4] != plain[6])
+				   || (plain[4] != plain[7]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plain[4] != plain[6]'
#953: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:78:
+	if ((plain[4] != plain[5]) || (plain[4] != plain[6])
+				   || (plain[4] != plain[7]))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'plain[4] != plain[7]'
#953: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:78:
+	if ((plain[4] != plain[5]) || (plain[4] != plain[6])
+				   || (plain[4] != plain[7]))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#954: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:79:
+	if ((plain[4] != plain[5]) || (plain[4] != plain[6])
+				   || (plain[4] != plain[7]))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#962: FILE: net/sunrpc/auth_gss/gss_krb5_seqnum.c:87:
+	return (0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#968: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#980: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:13:
+/*
+ * Copyright 1993 by OpenVision Technologies, Inc.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1002: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:35:
+/*
+ * Copyright (C) 1998 by the FundsXpress, INC.

WARNING:TYPO_SPELLING: 'MERCHANTIBILITY' may be misspelled - perhaps 'MERCHANTABILITY'?
#1024: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:57:
+ * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
                  ^^^^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1037: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:70:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1067: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:100:
+	dprintk("RPC: krb5_read_token\n");

CHECK:SPACING: No space is necessary after a cast
#1069: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:102:
+	if (g_verify_token_header((struct xdr_netobj *) &ctx->mech_used,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:103:
+	if (g_verify_token_header((struct xdr_netobj *) &ctx->mech_used,
+					&bodysize, &ptr, toktype,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr[4] != 0xff'
#1086: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:119:
+	if ((ptr[4] != 0xff) || (ptr[5] != 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ptr[5] != 0xff'
#1086: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:119:
+	if ((ptr[4] != 0xff) || (ptr[5] != 0xff))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'toktype != KG_TOK_WRAP_MSG'
#1089: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:122:
+	if (((toktype != KG_TOK_WRAP_MSG) && (sealalg != 0xffff)) ||
+	    ((toktype == KG_TOK_WRAP_MSG) && (sealalg == 0xffff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sealalg != 0xffff'
#1089: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:122:
+	if (((toktype != KG_TOK_WRAP_MSG) && (sealalg != 0xffff)) ||
+	    ((toktype == KG_TOK_WRAP_MSG) && (sealalg == 0xffff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'toktype == KG_TOK_WRAP_MSG'
#1089: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:122:
+	if (((toktype != KG_TOK_WRAP_MSG) && (sealalg != 0xffff)) ||
+	    ((toktype == KG_TOK_WRAP_MSG) && (sealalg == 0xffff)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sealalg == 0xffff'
#1089: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:122:
+	if (((toktype != KG_TOK_WRAP_MSG) && (sealalg != 0xffff)) ||
+	    ((toktype == KG_TOK_WRAP_MSG) && (sealalg == 0xffff)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1094: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:127:
+	/* in the current spec, there is only one valid seal algorithm per
+	   key type, so a simple comparison is ok */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1094: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:127:
+	   key type, so a simple comparison is ok */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'toktype == KG_TOK_WRAP_MSG'
#1096: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:129:
+	if ((toktype == KG_TOK_WRAP_MSG) && !(sealalg == ctx->sealalg))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1100: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:133:
+	/* there are several mappings of seal algorithms to sign algorithms,
+	   but few enough that we can try them all. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1100: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:133:
+	   but few enough that we can try them all. */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1125: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:158:
+		dprintk("RPC: krb5_read_token KG_TOK_WRAP_MSG\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!plain"
#1129: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:162:
+		if (plain ==  NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1133: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:166:
+		code = krb5_decrypt(ctx->enc, NULL,
+				   ptr + 14 + cksum_len, plain,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!token.data"
#1145: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:178:
+			if (token.data == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1151: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:184:
+		dprintk("RPC: krb5_read_token KG_TOK_MIC_MSG\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1162: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:195:
+	dprintk("RPC krb5_read_token: token.len %d plainlen %d\n", token.len,

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1167: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:200:
+	/* initialize the the cksum */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1179: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:212:
+		dprintk("RPC krb5_read_token SGN_ALG_DES_MAC_MD5\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1181: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:214:
+^I^I * 8 = bytes of token body to be checksummed according to spec $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1196: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:229:
+		code = krb5_make_checksum(checksum_type,
+					    &plaind, &md5cksum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:237:
+		code = krb5_encrypt(ctx->seq, NULL, md5cksum.data,
+					  md5cksum.data, 16);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krb5_read_token', this function's name, in a string
#1215: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:248:
+		    ("RPC: krb5_read_token: memcmp digest cksum.len %d:\n",

CHECK:SPACING: No space is necessary after a cast
#1218: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:251:
+		print_hexl((u32 *) md5cksum.data, 16, 0);

CHECK:SPACING: No space is necessary after a cast
#1220: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:253:
+		print_hexl((u32 *) cksum.data, cksum.len, 0);

CHECK:SPACING: No space is necessary after a cast
#1224: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:257:
+			(u8 *) p = ptr + 14;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1257: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:290:
+	if ((code = krb5_get_seq_num(ctx->seq, ptr + 14, ptr + 6, &direction,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:291:
+	if ((code = krb5_get_seq_num(ctx->seq, ptr + 14, ptr + 6, &direction,
+				   &seqnum)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1267: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:300:
+	if (md5cksum.data) kfree(md5cksum.data);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1269: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:302:
+		if (plain) kfree(plain);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1270: FILE: net/sunrpc/auth_gss/gss_krb5_unseal.c:303:
+		if (ret && token.data) kfree(token.data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 57 warnings, 42 checks, 1221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
