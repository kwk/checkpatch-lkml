WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
diff -Nru a/drivers/i2c/algos/i2c-algo-bit.c b/drivers/i2c/algos/i2c-algo-bit.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#61: 
--- a/drivers/i2c/algos/i2c-algo-bit.c	2004-08-23 11:05:32 -07:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#70: FILE: drivers/i2c/algos/i2c-algo-bit.c:569:
+module_param(i2c_debug, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#108: FILE: drivers/i2c/algos/i2c-algo-ite.c:802:
+module_param(i2c_debug, int, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#138: FILE: drivers/i2c/algos/i2c-algo-pcf.c:467:
+module_param(i2c_debug, int, S_IRUGO | S_IWUSR);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#150: FILE: drivers/i2c/busses/i2c-ali15x3.c:129:
+static u16 force_addr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#292: FILE: drivers/i2c/busses/i2c-sis5595.c:127:
+static u16 force_addr = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/i2c/busses/i2c-sis630.c:404:
+        else if (force) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/i2c/busses/i2c-sis630.c:404:
+        else if (force) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#339: FILE: drivers/i2c/busses/i2c-sis630.c:404:
 	}
+        else if (force) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#463: FILE: drivers/i2c/chips/rtc8564.c:59:
+static int debug;;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#464: FILE: drivers/i2c/chips/rtc8564.c:60:
+module_param(debug, int, S_IRUGO | S_IWUSR);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#477: FILE: drivers/i2c/chips/via686a.c:46:
+static unsigned short force_addr = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: include/linux/i2c.h:569:
+  static unsigned int var##_num; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: include/linux/i2c.h:571:
+  module_param_array(var, short, var##_num, 0); \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257564.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 0 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257564.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
