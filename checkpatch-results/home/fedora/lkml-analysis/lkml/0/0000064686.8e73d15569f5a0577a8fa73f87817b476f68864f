WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
It may be best to eventually move the PCI-specific code into a separate source file.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#37: 
Signed-off-by:  Doug Thompson <norsk5@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: drivers/edac/edac_mc.h:421:
+extern struct mem_ctl_info * edac_mc_del_mc(struct device *dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: drivers/edac/edac_mc.h:421:
+extern struct mem_ctl_info * edac_mc_del_mc(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#117: FILE: drivers/edac/amd76x_edac.c:23:
+#define AMD76X_REVISION	" Ver: 2.0.0 "  __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: drivers/edac/amd76x_edac.c:25:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/edac/amd76x_edac.c:112:
+	pci_read_config_dword(pdev, AMD76X_ECC_MODE_STATUS,
 				&info->ecc_mode_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/edac/amd76x_edac.c:116:
+		pci_write_bits32(pdev, AMD76X_ECC_MODE_STATUS,
 				(u32) BIT(8), (u32) BIT(8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/edac/amd76x_edac.c:120:
+		pci_write_bits32(pdev, AMD76X_ECC_MODE_STATUS,
 				(u32) BIT(9), (u32) BIT(9));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/edac/amd76x_edac.c:240:
+		pci_read_config_dword(pdev,
 				AMD76X_MEM_BASE_ADDR + (index * 4), &mba);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: drivers/edac/amd76x_edac.c:299:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#198: FILE: drivers/edac/e752x_edac.c:28:
+#define E752X_REVISION	" Ver: 2.0.0 " __DATE__

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/edac/e752x_edac.c:923:
+				pci_read_config_byte(pdev,
 						E752X_DRB + index + 1,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#270: FILE: drivers/edac/e752x_edac.c:1019:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#283: FILE: drivers/edac/e7xxx_edac.c:33:
+#define	E7XXX_REVISION " Ver: 2.0.0 " __DATE__

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#328: FILE: drivers/edac/e7xxx_edac.c:503:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#351: FILE: drivers/edac/edac_mc.c:64:
+static int check_pci_parity = 0;	/* default YES check PCI parity */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#404: FILE: drivers/edac/edac_mc.c:633:
 
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#466: FILE: drivers/edac/edac_mc.c:695:
+	debugf2("PCI STATUS= 0x%04x %s\n", status, dev->dev.bus_id );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/edac/edac_mc.c:701:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Signaled System Error on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/edac/edac_mc.c:706:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Master Data Parity Error on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/edac/edac_mc.c:714:
+			edac_printk(KERN_CRIT, EDAC_PCI,
+				"Detected Parity Error on %s\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#495: FILE: drivers/edac/edac_mc.c:724:
+	debugf2("PCI HEADER TYPE= 0x%02x %s\n", header_type, dev->dev.bus_id );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/edac/edac_mc.c:731:
+		debugf2("PCI SEC_STATUS= 0x%04x %s\n",
+				status, dev->dev.bus_id );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#502: FILE: drivers/edac/edac_mc.c:731:
+				status, dev->dev.bus_id );

WARNING:SPLIT_STRING: quoted string split across lines
#508: FILE: drivers/edac/edac_mc.c:737:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Signaled System Error on %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#513: FILE: drivers/edac/edac_mc.c:742:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Master Data Parity Error on "

WARNING:SPLIT_STRING: quoted string split across lines
#514: FILE: drivers/edac/edac_mc.c:743:
+					"Master Data Parity Error on "
+					"%s\n", pci_name(dev));

WARNING:SPLIT_STRING: quoted string split across lines
#521: FILE: drivers/edac/edac_mc.c:750:
+				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					"Detected Parity Error on %s\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: drivers/edac/edac_mc.c:767:
+ * Returns:  ^I0 not found$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/edac/edac_mc.c:771:
+static int check_dev_on_list(struct edac_pci_device_list *list,
+		int free_index, struct pci_dev *dev)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#546: FILE: drivers/edac/edac_mc.c:775:
+	unsigned short vendor=dev->vendor;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#547: FILE: drivers/edac/edac_mc.c:776:
+	unsigned short device=dev->device;
 	                     ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#550: FILE: drivers/edac/edac_mc.c:779:
+	for (i = 0; i < free_index; i++, list++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#551: FILE: drivers/edac/edac_mc.c:780:
+		if ((list->vendor == vendor ) && (list->device == device )) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'list->vendor == vendor '
#551: FILE: drivers/edac/edac_mc.c:780:
+		if ((list->vendor == vendor ) && (list->device == device )) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'list->device == device '
#551: FILE: drivers/edac/edac_mc.c:780:
+		if ((list->vendor == vendor ) && (list->device == device )) {

ERROR:SPACING: space required before the open parenthesis '('
#573: FILE: drivers/edac/edac_mc.c:802:
+	while((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#577: FILE: drivers/edac/edac_mc.c:806:
+		if (pci_whitelist_count > 0 ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/edac/edac_mc.c:808:
+			if (check_dev_on_list(pci_whitelist,
+					pci_whitelist_count, dev))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: drivers/edac/edac_mc.c:816:
+			if (!check_dev_on_list(pci_blacklist,
+					pci_blacklist_count, dev))

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#598: FILE: drivers/edac/edac_mc.c:827:
+	debugf3("%s()\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: drivers/edac/edac_mc.c:1742:
+	edac_mc_printk(mci, KERN_INFO, "Giving out device to %s %s: DEV %s\n",
+		mci->mod_name, mci->ctl_name, dev_name(mci->dev));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#727: FILE: drivers/edac/edac_mc.c:1763:
+struct mem_ctl_info * edac_mc_del_mc(struct device *dev)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#735: FILE: drivers/edac/edac_mc.c:1770:
+	if ((mci = find_mci_by_dev(dev)) == NULL) {

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1017: FILE: drivers/edac/i82860_edac.c:20:
+#define  I82860_REVISION " Ver: 2.0.0 " __DATE__

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/edac/i82860_edac.c:95:
+		pci_read_config_word(pdev, I82860_DERRCTL_STS,
 				&info->derrsyn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: drivers/edac/i82860_edac.c:189:
+		pci_read_config_word(pdev, I82860_GBA + index * 2,
 				&value);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1098: FILE: drivers/edac/i82860_edac.c:249:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1111: FILE: drivers/edac/i82875p_edac.c:24:
+#define I82875P_REVISION	" Ver: 2.0.0 " __DATE__

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: drivers/edac/i82875p_edac.c:220:
+		pci_read_config_byte(pdev, I82875P_DERRSYN,
 				&info->derrsyn);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1180: FILE: drivers/edac/i82875p_edac.c:446:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1193: FILE: drivers/edac/r82600_edac.c:26:
+#define R82600_REVISION	" Ver: 2.0.0 " __DATE__

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1212: FILE: drivers/edac/r82600_edac.c:147:
+		pci_write_bits32(pdev, R82600_EAP,
 				((u32) BIT(0) & (u32) BIT(1)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: drivers/edac/r82600_edac.c:153:
+		pci_write_bits32(pdev, R82600_EAP,
 				((u32) BIT(0) & (u32) BIT(1)),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1263: FILE: drivers/edac/r82600_edac.c:346:
+	if ((mci = edac_mc_del_mc(&pdev->dev)) == NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064686.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 8 warnings, 23 checks, 1121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064686.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
