CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/char/vt_ioctl.c:1230:
+static int compat_fontx_ioctl(struct tty_struct *tty, struct file *file,
+				unsigned int cmd, unsigned long arg)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#94: FILE: drivers/char/vt_ioctl.c:1238:
+	if (perm < 0) return perm;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/char/vt_ioctl.c:1270:
+		    put_user((compat_caddr_t)(unsigned long)op.data,
+				&user_cfd->chardata))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/char/vt_ioctl.c:1286:
+static int compat_kdfontop_ioctl(struct tty_struct *tty, struct file *file,
+				unsigned int cmd, unsigned long arg)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: drivers/char/vt_ioctl.c:1293:
+	if (perm < 0) return perm;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/char/vt_ioctl.c:1317:
+static int compat_unimap_ioctl(struct tty_struct *tty, struct file *file,
+				unsigned int cmd, unsigned long arg)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#179: FILE: drivers/char/vt_ioctl.c:1323:
+	if (perm < 0) return perm;

WARNING:SIZEOF_PARENTHESIS: sizeof tmp should be sizeof(tmp)
#180: FILE: drivers/char/vt_ioctl.c:1324:
+	if (copy_from_user(&tmp, user_ud, sizeof tmp))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#184: FILE: drivers/char/vt_ioctl.c:1328:
+		if (!perm) return -EPERM;

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#187: FILE: drivers/char/vt_ioctl.c:1331:
+		return con_get_unimap(vc_cons[fg_console].d, tmp.entry_ct, &(user_ud->entry_ct), compat_ptr(tmp.entries));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around user_ud->entry_ct
#187: FILE: drivers/char/vt_ioctl.c:1331:
+		return con_get_unimap(vc_cons[fg_console].d, tmp.entry_ct, &(user_ud->entry_ct), compat_ptr(tmp.entries));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: drivers/char/vt_ioctl.c:1336:
+int vt_compat_ioctl(struct tty_struct *tty, struct file * file,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: drivers/char/vt_ioctl.c:1340:
+	int ret = -ENOIOCTLCMD;
+	lock_kernel();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/char/vt_ioctl.c:1378:
+		ret = vt_ioctl(tty, file, cmd,
+			(unsigned long)(compat_ptr(arg)));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#539: FILE: include/linux/tty.h:407:
+extern int vt_compat_ioctl(struct tty_struct *tty, struct file * file,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: include/linux/tty.h:407:
+extern int vt_compat_ioctl(struct tty_struct *tty, struct file * file,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#552: FILE: include/linux/tty_driver.h:135:
+	int  (*compat_ioctl)(struct tty_struct *tty, struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: include/linux/tty_driver.h:136:
+	int  (*compat_ioctl)(struct tty_struct *tty, struct file * file,
+			unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#561: FILE: include/linux/tty_driver.h:199:
+	int  (*compat_ioctl)(struct tty_struct *tty, struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: include/linux/tty_driver.h:200:
+	int  (*compat_ioctl)(struct tty_struct *tty, struct file * file,
+		    unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#582: FILE: drivers/char/tty_io.c:156:
+long tty_compat_ioctl(struct file * file, unsigned int cmd, unsigned long arg);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#582: FILE: drivers/char/tty_io.c:156:
+long tty_compat_ioctl(struct file * file, unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#591: FILE: drivers/char/tty_io.c:685:
+static long hung_up_tty_ioctl(struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/char/tty_io.c:686:
+static long hung_up_tty_ioctl(struct file * file,
 			     unsigned int cmd, unsigned long arg)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#691: FILE: drivers/char/tty_io.c:2491:
+	if (ld->compat_ioctl) {
+		ret = ld->compat_ioctl(tty, file, cmd, arg);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#700: FILE: drivers/char/tty_io.c:2500:
+	 * to be compatible */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#751: FILE: include/linux/tty_ldisc.h:129:
+	int	(*compat_ioctl)(struct tty_struct * tty, struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#751: FILE: include/linux/tty_ldisc.h:129:
+	int	(*compat_ioctl)(struct tty_struct * tty, struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: include/linux/tty_ldisc.h:130:
+	int	(*compat_ioctl)(struct tty_struct * tty, struct file * file,
+			 unsigned int cmd, unsigned long arg);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 6 warnings, 11 checks, 679 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
