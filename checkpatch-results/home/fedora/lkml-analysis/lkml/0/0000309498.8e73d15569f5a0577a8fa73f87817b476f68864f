WARNING:TYPO_SPELLING: 'Noone' may be misspelled - perhaps 'No one'?
#42: 
> > > > Not only serial console... Noone wrote serial port support.
                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'interupts' may be misspelled - perhaps 'interrupts'?
#63: 
- The patch does not touch interupts and relies on the resuming kernel
                           ^^^^^^^^^

WARNING:TYPO_SPELLING: 'likelyhood' may be misspelled - perhaps 'likelihood'?
#78: 
  disruption and the likelyhood of break device that can't be test.
                     ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
--- linux-2.4.23-Vanilla/drivers/char/serial.c	2003-12-02 05:37:49.000000000 +0800

WARNING:TYPO_SPELLING: 'Verion' may be misspelled - perhaps 'Version'?
#97: FILE: drivers/char/serial.c:66:
+ * 01/04: Verion: 5.1
           ^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#160: FILE: drivers/char/serial.c:610:
+		if ((info->line == kdb_serial_line) && kdb_on) {
+		    if (ch == *kdb_serial_ptr) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->line == kdb_serial_line'
#160: FILE: drivers/char/serial.c:610:
+		if ((info->line == kdb_serial_line) && kdb_on) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TABSTOP: Statements should start on a tabstop
#161: FILE: drivers/char/serial.c:611:
+		    if (ch == *kdb_serial_ptr) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#161: FILE: drivers/char/serial.c:611:
+		    if (ch == *kdb_serial_ptr) {
[...]
+		    } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#162: FILE: drivers/char/serial.c:612:
+			if (!(*++kdb_serial_ptr)) {
+			    kdb(KDB_REASON_KEYBOARD, 0, regs);

WARNING:TABSTOP: Statements should start on a tabstop
#165: FILE: drivers/char/serial.c:615:
+			    break;

WARNING:TABSTOP: Statements should start on a tabstop
#167: FILE: drivers/char/serial.c:617:
+		    } else

CHECK:BRACES: Unbalanced braces around else statement
#167: FILE: drivers/char/serial.c:617:
+		    } else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/char/serial.c:697:
+	if ((software_suspend_state & SOFTWARE_SUSPEND_RUNNING) ||
+		waitqueue_active(&swsusp_wait_for_shift.wait)) {

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#192: FILE: drivers/char/serial.c:697:
+		waitqueue_active(&swsusp_wait_for_shift.wait)) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#195: FILE: drivers/char/serial.c:700:
+		extern unsigned long swsusp_action;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: drivers/char/serial.c:701:
+		extern unsigned long swsusp_action;
+		extern void request_abort_suspend(void);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#196: FILE: drivers/char/serial.c:701:
+		extern void request_abort_suspend(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/char/serial.c:702:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#198: FILE: drivers/char/serial.c:703:
+		switch (ch) {
+			case 27:
[...]
+			case 49:
[...]
+			case 48:
[...]
+			case 80:
+			case 112:
[...]
+			case 82:
+			case 114:
[...]
+			case 76:
+			case 108:
[...]
+			case 50:
+			case 51:
+			case 52:
+			case 53:
+			case 54:
+			case 55:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#213: FILE: drivers/char/serial.c:718:
+				/* During suspend, toggle pausing with Pause or Break if kdb active */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/char/serial.c:720:
+^I^I^I^Iprepare_status(1, 0, "Pausing %s.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/char/serial.c:721:
+				prepare_status(1, 0, "Pausing %s.\n", 
+					TEST_ACTION_STATE(SUSPEND_PAUSE) ? "enabled" : "disabled");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/char/serial.c:729:
+^I^I^I^Iprepare_status(1, 0, "Rebooting %s.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/char/serial.c:730:
+				prepare_status(1, 0, "Rebooting %s.\n", 
+					TEST_ACTION_STATE(SUSPEND_REBOOT) ? "enabled" : "disabled");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: drivers/char/serial.c:736:
+^I^I^I^Iprepare_status(1, 0, "Logging all output %s.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/char/serial.c:737:
+				prepare_status(1, 0, "Logging all output %s.\n", 
+					TEST_ACTION_STATE(SUSPEND_LOGALL) ? "enabled" : "disabled");

ERROR:SPACING: space prohibited after that open parenthesis '('
#261: FILE: drivers/char/serial.c:775:
+#if defined(CONFIG_SERIAL_CONSOLE) && ( defined(CONFIG_MAGIC_SYSRQ) || defined(CONFIG_PM))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/char/serial.c:1321:
+int start_uart(struct async_struct * info)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/char/serial.c:1326:
+  if (uart_config[state->type].flags & UART_STARTECH) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 16)
#312: FILE: drivers/char/serial.c:1326:
+  if (uart_config[state->type].flags & UART_STARTECH) {
[...]
 		serial_outp(info, UART_LCR, 0xBF);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: drivers/char/serial.c:1426:
+int init_uart(struct async_struct * info)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#369: FILE: drivers/char/serial.c:1428:
+	int	retval=0;
 	   	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#370: FILE: drivers/char/serial.c:1429:
+	struct serial_state *state= info->state;
 	                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: drivers/char/serial.c:1494:
+static int startup(struct async_struct * info)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#406: FILE: drivers/char/serial.c:1497:
+	int	retval=0;
 	   	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#407: FILE: drivers/char/serial.c:1498:
+	void (*handler)(int, void *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#407: FILE: drivers/char/serial.c:1498:
+	void (*handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#407: FILE: drivers/char/serial.c:1498:
+	void (*handler)(int, void *, struct pt_regs *);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#408: FILE: drivers/char/serial.c:1499:
+	struct serial_state *state= info->state;
 	                          ^

CHECK:SPACING: No space is necessary after a cast
#431: FILE: drivers/char/serial.c:1522:
+		info->xmit.buf = (unsigned char *) page;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#434: FILE: drivers/char/serial.c:1525:
+	printk("starting up ttys%d (irq %d)...", info->line, state->irq);

CHECK:BRACES: Unbalanced braces around else statement
#444: FILE: drivers/char/serial.c:1535:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/char/serial.c:1548:
+	if (state->irq && (!IRQ_ports[state->irq] ||
+			  !IRQ_ports[state->irq]->next_port)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/char/serial.c:1552:
+#ifdef CONFIG_SERIAL_MULTIPORT^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/char/serial.c:1562:
+^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#471: FILE: drivers/char/serial.c:1562:
+		} else 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: drivers/char/serial.c:1589:
+^I * Now, initialize the UART $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#512: FILE: drivers/char/serial.c:1607:
+static void sleep_uart(struct async_struct * info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: drivers/char/serial.c:1610:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#581: FILE: drivers/char/serial.c:3402:
+	int retval = 0;
+	printk("serio: Suspending %lx\n", info->port);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#581: FILE: drivers/char/serial.c:3402:
+	printk("serio: Suspending %lx\n", info->port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#591: FILE: drivers/char/serial.c:3412:
+		serial_outp(info, UART_MCR,(info->MCR & ~(UART_MCR_DTR|UART_MCR_RTS)));
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#591: FILE: drivers/char/serial.c:3412:
+		serial_outp(info, UART_MCR,(info->MCR & ~(UART_MCR_DTR|UART_MCR_RTS)));
 		                                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#600: FILE: drivers/char/serial.c:3421:
+}
+static int rs_suspend(struct tty_struct *tty)

WARNING:LINE_SPACING: Missing a blank line after declarations
#604: FILE: drivers/char/serial.c:3425:
+	unsigned long flags;
+	save_flags(flags); cli();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#622: FILE: drivers/char/serial.c:3443:
+	printk("serio: Resuming %lx\n", info->port);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/char/serial.c:3445:
+  if ((retval = start_uart(info)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 16)
#624: FILE: drivers/char/serial.c:3445:
+  if ((retval = start_uart(info)))
+		goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#624: FILE: drivers/char/serial.c:3445:
+  if ((retval = start_uart(info)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#637: FILE: drivers/char/serial.c:3458:
+	unsigned long flags;
+	save_flags(flags); cli();

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#653: FILE: drivers/char/serial.c:3474:
+	unsigned long flags; /* Interrupts will be reenabled once per iteration */
 	                                           ^^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#655: FILE: drivers/char/serial.c:3476:
+	for (i =0; i < NR_PORTS; i++, state++) {
 	       ^

ERROR:SPACING: exactly one space required after that #ifdef
#725: FILE: drivers/char/serial.c:6266:
+#ifdef  SERIAL_IO_MEM32

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 29 warnings, 13 checks, 632 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000309498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
