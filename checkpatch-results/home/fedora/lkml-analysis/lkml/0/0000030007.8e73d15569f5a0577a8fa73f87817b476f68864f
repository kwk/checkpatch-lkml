WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
	- add hook to call pfm_handle_switch_timeout() on timer tick for timeout based

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/x86_64/kernel/apic.c:946:
+ ^Ipfm_handle_switch_timeout();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: arch/x86_64/kernel/apic.c:946:
+ ^Ipfm_handle_switch_timeout();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/x86_64/kernel/apic.c:946:
+ ^Ipfm_handle_switch_timeout();$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/x86_64/kernel/nmi.c:359:
+printk("NMI installed K7 mode\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: arch/x86_64/kernel/nmi.c:542:
+		unsigned long val;
+		rdmsrl(nmi_perfctr_msr, val);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#236: FILE: arch/x86_64/kernel/nmi.c:543:
+		if (val & (1ULL<<47)) {
 		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#280: FILE: arch/x86_64/kernel/process.c:535:
+	if (test_tsk_thread_flag(next_p, TIF_PERFMON_CTXSW)
+	    || test_tsk_thread_flag(prev_p, TIF_PERFMON_CTXSW))

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: arch/x86_64/kernel/process.c:625:
+  ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: arch/x86_64/kernel/process.c:625:
+  ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/x86_64/kernel/process.c:625:
+  ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/x86_64/kernel/process.c:626:
+ ^I * Now maybe reload the debug registers and handle I/O bitmaps$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: arch/x86_64/kernel/process.c:626:
+ ^I * Now maybe reload the debug registers and handle I/O bitmaps$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: arch/x86_64/kernel/process.c:627:
+  ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: arch/x86_64/kernel/process.c:627:
+  ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/x86_64/kernel/process.c:628:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: arch/x86_64/kernel/process.c:628:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/x86_64/kernel/process.c:628:
+ ^Iif (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/x86_64/kernel/process.c:629:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: arch/x86_64/kernel/process.c:629:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: arch/x86_64/kernel/process.c:629:
+ 	if (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW)
+ 	    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/x86_64/kernel/process.c:629:
+ ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/x86_64/kernel/process.c:630:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: arch/x86_64/kernel/process.c:630:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/x86_64/kernel/process.c:630:
+ ^I^I__switch_to_xtra(prev_p, next_p, tss);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/x86_64/kernel/signal.c:485:
+^I^I^Ithread_info_flags, regs->rip, regs->rsp, __builtin_return_address(0),signal_pending(current)); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#339: FILE: arch/x86_64/kernel/signal.c:485:
+			thread_info_flags, regs->rip, regs->rsp, __builtin_return_address(0),signal_pending(current)); 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: arch/x86_64/kernel/signal.c:485:
+			thread_info_flags, regs->rip, regs->rsp, __builtin_return_address(0),signal_pending(current)); 
 			                                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#415: FILE: include/asm-x86_64/thread_info.h:140:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#415: FILE: include/asm-x86_64/thread_info.h:140:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#416: FILE: include/asm-x86_64/thread_info.h:141:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#416: FILE: include/asm-x86_64/thread_info.h:141:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#425: FILE: include/asm-x86_64/thread_info.h:150:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#425: FILE: include/asm-x86_64/thread_info.h:150:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: include/asm-x86_64/unistd.h:623:
+ __SYSCALL(__NR_pfm_create_context, sys_pfm_create_context)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: include/asm-x86_64/unistd.h:624:
+#define __NR_pfm_write_pmcs	(__NR_pfm_create_context+1)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#441: FILE: include/asm-x86_64/unistd.h:626:
+#define __NR_pfm_write_pmds	(__NR_pfm_create_context+2)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#443: FILE: include/asm-x86_64/unistd.h:628:
+#define __NR_pfm_read_pmds	(__NR_pfm_create_context+3)
                           	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: include/asm-x86_64/unistd.h:630:
+#define __NR_pfm_load_context	(__NR_pfm_create_context+4)
                              	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#447: FILE: include/asm-x86_64/unistd.h:632:
+#define __NR_pfm_start		(__NR_pfm_create_context+5)
                       		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#449: FILE: include/asm-x86_64/unistd.h:634:
+#define __NR_pfm_stop		(__NR_pfm_create_context+6)
                      		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#451: FILE: include/asm-x86_64/unistd.h:636:
+#define __NR_pfm_restart	(__NR_pfm_create_context+7)
                         	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#453: FILE: include/asm-x86_64/unistd.h:638:
+#define __NR_pfm_create_evtsets	(__NR_pfm_create_context+8)
                                	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: include/asm-x86_64/unistd.h:640:
+#define __NR_pfm_getinfo_evtsets (__NR_pfm_create_context+9)
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#457: FILE: include/asm-x86_64/unistd.h:642:
+#define __NR_pfm_delete_evtsets (__NR_pfm_create_context+10)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#459: FILE: include/asm-x86_64/unistd.h:644:
+#define __NR_pfm_unload_context	(__NR_pfm_create_context+11)
                                	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: include/asm-x86_64/unistd.h:646:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: include/asm-x86_64/unistd.h:646:
+  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030007.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 18 warnings, 20 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030007.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
