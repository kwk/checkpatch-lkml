CHECK:SPACING: No space is necessary after a cast
#66: FILE: drivers/scsi/stex.c:544:
+	struct st_hba *hba = (struct st_hba *) sdev->host->hostdata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/scsi/stex.c:554:
+		if (blk_queue_init_tags(sdev->request_queue,
+				hba->host->can_queue, NULL) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: drivers/scsi/stex.c:560:
+		blk_queue_init_tags(sdev->request_queue,
+			hba->host->can_queue, hba->shared_queue->queue_tags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#86: FILE: drivers/scsi/stex.c:564:
+	if (hba->ref) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/scsi/stex.c:568:
+		scsi_adjust_queue_depth(sdev,
+			scsi_get_tag_type(sdev), hba->host->can_queue);

CHECK:BRACES: Unbalanced braces around else statement
#91: FILE: drivers/scsi/stex.c:569:
+	} else

CHECK:SPACING: No space is necessary after a cast
#101: FILE: drivers/scsi/stex.c:579:
+	struct st_hba *hba = (struct st_hba *) sdev->host->hostdata;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/scsi/stex.c:705:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ccb->cmd"
#156: FILE: drivers/scsi/stex.c:833:
+		if (unlikely(ccb->cmd != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/scsi/stex.c:834:
+		if (unlikely(ccb->cmd != NULL &&
+				!ccb->cmd->device->tagged_supported)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#159: FILE: drivers/scsi/stex.c:836:
+				printk(KERN_WARNING DRV_NAME "(%s): null tag\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/scsi/stex.c:837:
+				printk(KERN_WARNING DRV_NAME "(%s): null tag\n",
+					pci_name(hba->pdev));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ccb->cmd"
#180: FILE: drivers/scsi/stex.c:865:
+		if (likely(ccb->cmd != NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/scsi/stex.c:867:
+			if (unlikely(ccb->cmd->cmnd[0] == PASSTHRU_CMD &&
+				ccb->cmd->cmnd[1] == PASSTHRU_GET_ADAPTER))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/scsi/stex.c:1009:
+			if (hba->ccb[tag].cmd == cmd &&
+					(hba->tag & (1 << tag))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hba->ccb[tag]
#230: FILE: drivers/scsi/stex.c:1010:
+				hba->wait_ccb = &(hba->ccb[tag]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 14 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
