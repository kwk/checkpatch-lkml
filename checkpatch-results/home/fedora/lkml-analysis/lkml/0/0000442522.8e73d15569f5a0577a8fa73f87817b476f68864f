WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ur linux-2.5.30-pure/Documentation/block/biodoc.txt linux-2.5.30-bio/Documentation/block/biodoc.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: Documentation/block/biodoc.txt:402:
+ end_that_request_last works OK in this case, and is not a problem, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: Documentation/block/biodoc.txt:512:
+       unsigned short^Ibi_voffset;^I/* current vec offset */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: Documentation/block/biodoc.txt:559:
+The following fields have been introduced in the bio structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: Documentation/block/biodoc.txt:561:
+of an existing io_vec without having to make a copy of the iovec $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: Documentation/block/biodoc.txt:564:
+described later) for striping i/o across multiple devices. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: Documentation/block/biodoc.txt:566:
+bi_voffset: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: Documentation/block/biodoc.txt:568:
+Offset relative to the start of the first page, which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: Documentation/block/biodoc.txt:569:
+indicates where the bio really starts. In general before $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: Documentation/block/biodoc.txt:570:
+i/o starts this would be the same as bv_offset for the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: Documentation/block/biodoc.txt:571:
+first vec (at bi_idx), but in the case of clone bio s where $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: Documentation/block/biodoc.txt:572:
+the bio may be split in the middle of a segment this could be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: Documentation/block/biodoc.txt:579:
+bi_endvoffset: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: Documentation/block/biodoc.txt:584:
+clone bio s where a split piece ends in the middle of a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: Documentation/block/biodoc.txt:585:
+segment, it could be different. This field is really used $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: Documentation/block/biodoc.txt:586:
+mainly for segment boundary and merge checks (it is more $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: Documentation/block/biodoc.txt:587:
+convenient than having to walk through the entire bio $

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#119: FILE: Documentation/block/biodoc.txt:595:
+The remaining size to be transfered in the current bio
                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: Documentation/block/biodoc.txt:601:
+An alternative to bi_voffset being an absolute $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: Documentation/block/biodoc.txt:607:
+though it also would make the mergeability check macros $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: Documentation/block/biodoc.txt:608:
+a little longer, and possibly add a little extra computation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: Documentation/block/biodoc.txt:659:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: Documentation/block/biodoc.txt:661:
+^I * unfinished i/o, while the other counts/pointers refer to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: Documentation/block/biodoc.txt:672:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: Documentation/block/biodoc.txt:701:
+hard_xxx values and the number of bytes transferred) and typically $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: Documentation/block/biodoc.txt:703:
+unless the driver has advanced these (submission) counters ahead $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: Documentation/block/biodoc.txt:704:
+of the sectors being completed. The block layer also advances the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/block/biodoc.txt:705:
+buffer, bio, bio->bi_idx fields appropriately as well as i/o completes. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: Documentation/block/biodoc.txt:718:
+The basic protocol followed all through is that the bio fields $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: Documentation/block/biodoc.txt:723:
+code tries to handle that transparently by advancing the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: Documentation/block/biodoc.txt:726:
+those themselves), but for things like IDE mult-count write, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: Documentation/block/biodoc.txt:727:
+the submission counters/pointers may be ahead of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: Documentation/block/biodoc.txt:728:
+completion pointers.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: Documentation/block/biodoc.txt:741:
+^Ithis keeps track of how many more vecs remain $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: Documentation/block/biodoc.txt:744:
+specifies the segment under submission. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: Documentation/block/biodoc.txt:759:
+relative offset in the current segment w.r.t what $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: Documentation/block/biodoc.txt:762:
+A new helper, process_that_request_first() has been $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: Documentation/block/biodoc.txt:763:
+introduced for updating submission state of the request $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: Documentation/block/biodoc.txt:764:
+without completing the corresponding bios. It can be used $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: Documentation/block/biodoc.txt:767:
+where multiple such chunk transfers are required to cover $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: Documentation/block/biodoc.txt:845:
+bvec, the current segment might start somewhere inside the current $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: Documentation/block/biodoc.txt:847:
+finding out the relative offsets into the start and end of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: Documentation/block/biodoc.txt:855:
+It is recommended that drivers utilize the block layer routines $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: Documentation/block/biodoc.txt:857:
+instead of iterating over the segments directly, and use $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: Documentation/block/biodoc.txt:858:
+end_that_request_first() for completion as before. Things like $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: Documentation/block/biodoc.txt:859:
+rq_map_buffer() rely on the submission pointers in the request $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: Documentation/block/biodoc.txt:863:
+for the current segment buffer, in drivers which use PIO for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: Documentation/block/biodoc.txt:1040:
+preallocation of bios is done for kiobufs. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/block/biodoc.txt:1047:
+There now is generic support for multi-page writeouts (and reads) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: Documentation/block/biodoc.txt:1048:
+from the page cache by directly building up a sequence of large bios $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: Documentation/block/request.txt:56:
+^I^I^I^I^ITracks the location of unfinished $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 2 warnings, 0 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
