WARNING:TYPO_SPELLING: 'approch' may be misspelled - perhaps 'approach'?
#22: 
> somebody reinserts itself for a long time :(. Maybe Russel's approch is
                                                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.4.9-official/include/linux/rcupdate.h working-2.4.9-rcu/include/linux/rcupdate.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/rcupdate.h:1:
+#ifndef _LINUX_RCUPDATE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#62: FILE: include/linux/rcupdate.h:5:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#66: FILE: include/linux/rcupdate.h:9:
+struct rcu_head
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#73: FILE: include/linux/rcupdate.h:16:
+/* Queues future request may sleep (if caller can sleep: on UP is
+   called immediately). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#73: FILE: include/linux/rcupdate.h:16:
+   called immediately). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#89: FILE: include/linux/rcupdate.h:32:
+/* Remember the good old days when we didn't have to worry about more
+   than one processor? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#89: FILE: include/linux/rcupdate.h:32:
+   than one processor? */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: kernel/rcupdate.c:1:
+/* Read-Copy-Update For Linux.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: kernel/rcupdate.c:2:
+/* Read-Copy-Update For Linux.
+   (C)2001 Rusty Russell.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#150: FILE: kernel/rcupdate.c:20:
+/* Two batches per CPU : one (pending) is an internal queue of waiting
+   requests, being prepended to as new requests come in.  The other

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: kernel/rcupdate.c:21:
+   (rcu_waiting) is waiting completion of schedule()s on all CPUs. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#153: FILE: kernel/rcupdate.c:23:
+struct rcu_batch
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(SMP_CACHE_BYTES) over __attribute__((__aligned__(SMP_CACHE_BYTES)))
#158: FILE: kernel/rcupdate.c:28:
+} __attribute__((__aligned__(SMP_CACHE_BYTES)));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: kernel/rcupdate.c:34:
+	unsigned cpu = smp_processor_id();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: kernel/rcupdate.c:35:
+	unsigned state;

CHECK:BRACES: braces {} should be used on all arms of this statement
#170: FILE: kernel/rcupdate.c:40:
+	if (in_interrupt()) {
[...]
+	} else state = 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#171: FILE: kernel/rcupdate.c:41:
+		if (in_irq()) state = 2;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#172: FILE: kernel/rcupdate.c:42:
+		else state = 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: kernel/rcupdate.c:43:
+	} else state = 0;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#224: FILE: kernel/rcupdate.c:94:
+EXPORT_SYMBOL(call_rcu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#225: FILE: kernel/rcupdate.c:95:
+EXPORT_SYMBOL(synchronize_kernel);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#229: FILE: kernel/rcupdate.c:99:
+/* Uniprocessor doesn't need an rcu_batch_done, since that gets
+   dead-code-eliminated in schedule() */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: kernel/rcupdate.c:99:
+   dead-code-eliminated in schedule() */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#249: FILE: kernel/sched.c:106:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0,0}}};

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: kernel/sched.c:106:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0,0}}};
                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: kernel/sched.c:106:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0,0}}};
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: kernel/sched.c:106:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0,0}}};
                                                                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#249: FILE: kernel/sched.c:106:
+} aligned_data [NR_CPUS] __cacheline_aligned = { {{&init_task,0,0,0}}};

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: kernel/sched.c:712:
+                           far in the future */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#281: FILE: kernel/sched.c:712:
+			/* Avoid reentry: temporarily set finish_count
+                           far in the future */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: kernel/sched.c:712:
+                           far in the future */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#308: FILE: arch/alpha/kernel/process.c:90:
+			while (current->need_resched < 0
+				&& !is_rcu_pending());

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#309: FILE: arch/alpha/kernel/process.c:91:
+			while (current->need_resched < 0
+				&& !is_rcu_pending());

WARNING:BRACES: braces {} are not necessary for single statement blocks
#429: FILE: arch/parisc/kernel/process.c:78:
+		while (!current->need_resched && !is_rcu_pending()) {
 		}

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/s390/kernel/process.c:67:
+                if (current->need_resched || is_rcu_pending()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/s390/kernel/process.c:67:
+                if (current->need_resched || is_rcu_pending()) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: arch/s390x/kernel/process.c:67:
+                if (current->need_resched || is_rcu_pending()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/s390x/kernel/process.c:67:
+                if (current->need_resched || is_rcu_pending()) {$

ERROR:SPACING: space required before the open parenthesis '('
#529: FILE: arch/sparc/kernel/process.c:118:
+		if(current->need_resched || is_rcu_pending()) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 25 warnings, 2 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
