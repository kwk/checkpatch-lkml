WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/pcmcia/Kconfig:140:
+config M32R_PCC
+	bool "M32R PCMCIA I/F"
+	depends on M32R && CHIP_M32700 && PCMCIA
+	help
+	  Say Y here to use the M32R PCMCIA controller.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#85: FILE: drivers/pcmcia/Kconfig:146:
+config M32R_CFC
+	bool "M32R CF I/F Controller"
+	depends on M32R && (PLAT_USRV || PLAT_M32700UT || PLAT_MAPPI2 || PLAT_OPSPUT)
+	help
+	  Say Y here to use the M32R CompactFlash controller.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/pcmcia/m32r_cfc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#116: FILE: drivers/pcmcia/m32r_cfc.c:2:
+ *  drivers/pcmcia/m32r_cfc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#142: FILE: drivers/pcmcia/m32r_cfc.c:28:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#143: FILE: drivers/pcmcia/m32r_cfc.c:29:
+#include <asm/bitops.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#163: FILE: drivers/pcmcia/m32r_cfc.c:49:
+		printk(KERN_DEBUG "m32r_cfc: " fmt , ## arg);	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#163: FILE: drivers/pcmcia/m32r_cfc.c:49:
+		printk(KERN_DEBUG "m32r_cfc: " fmt , ## arg);	\
 		                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#170: FILE: drivers/pcmcia/m32r_cfc.c:56:
+static int poll_interval = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#172: FILE: drivers/pcmcia/m32r_cfc.c:58:
+typedef enum pcc_space { as_none = 0, as_comm, as_attr, as_io } pcc_as_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#174: FILE: drivers/pcmcia/m32r_cfc.c:60:
+typedef struct pcc_socket {

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/pcmcia/m32r_cfc.c:64:
+ ^Iioaddr_t^I^Iioaddr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: drivers/pcmcia/m32r_cfc.c:64:
+ ^Iioaddr_t^I^Iioaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/pcmcia/m32r_cfc.c:64:
+ ^Iioaddr_t^I^Iioaddr;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#193: FILE: drivers/pcmcia/m32r_cfc.c:79:
+static int pcc_sockets = 0;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#201: FILE: drivers/pcmcia/m32r_cfc.c:87:
+static void pcc_set(u_short, unsigned int , unsigned int );
                                           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: drivers/pcmcia/m32r_cfc.c:87:
+static void pcc_set(u_short, unsigned int , unsigned int );

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#206: FILE: drivers/pcmcia/m32r_cfc.c:92:
+static inline u_long pcc_port2addr(unsigned long port, int size) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: drivers/pcmcia/m32r_cfc.c:96:
+	if (size == 1) {	/* byte access */
[...]
+	} else if (size == 2)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#211: FILE: drivers/pcmcia/m32r_cfc.c:97:
+		odd = (port&1) << 11;
 		           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#220: FILE: drivers/pcmcia/m32r_cfc.c:106:
+static inline u_long pcc_port2addr(unsigned long port, int size) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/pcmcia/m32r_cfc.c:123:
+void pcc_ioread_byte(int sock, unsigned long port, void *buf, size_t size,
+	size_t nmemb, int flag)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_ioread_byte', this function's name, in a string
#243: FILE: drivers/pcmcia/m32r_cfc.c:129:
+	debug(3, "m32r_cfc: pcc_ioread_byte: sock=%d, port=%#lx, buf=%p, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: drivers/pcmcia/m32r_cfc.c:130:
+	debug(3, "m32r_cfc: pcc_ioread_byte: sock=%d, port=%#lx, buf=%p, "
+		 "size=%u, nmemb=%d, flag=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#249: FILE: drivers/pcmcia/m32r_cfc.c:135:
+		printk("m32r_cfc:ioread_byte null port :%#lx\n",port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: drivers/pcmcia/m32r_cfc.c:135:
+		printk("m32r_cfc:ioread_byte null port :%#lx\n",port);
 		                                               ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_ioread_byte', this function's name, in a string
#252: FILE: drivers/pcmcia/m32r_cfc.c:138:
+	debug(3, "m32r_cfc: pcc_ioread_byte: addr=%#lx\n", addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/pcmcia/m32r_cfc.c:148:
+void pcc_ioread_word(int sock, unsigned long port, void *buf, size_t size,
+	size_t nmemb, int flag)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_ioread_word', this function's name, in a string
#268: FILE: drivers/pcmcia/m32r_cfc.c:154:
+	debug(3, "m32r_cfc: pcc_ioread_word: sock=%d, port=%#lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: drivers/pcmcia/m32r_cfc.c:155:
+	debug(3, "m32r_cfc: pcc_ioread_word: sock=%d, port=%#lx, "
+		 "buf=%p, size=%u, nmemb=%d, flag=%d\n",

WARNING:TYPO_SPELLING: 'illigal' may be misspelled - perhaps 'illegal'?
#273: FILE: drivers/pcmcia/m32r_cfc.c:159:
+		printk("m32r_cfc: ioread_word :illigal size %u : %#lx\n", size,
 		                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: drivers/pcmcia/m32r_cfc.c:159:
+		printk("m32r_cfc: ioread_word :illigal size %u : %#lx\n", size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/pcmcia/m32r_cfc.c:160:
+		printk("m32r_cfc: ioread_word :illigal size %u : %#lx\n", size,
+			port);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: drivers/pcmcia/m32r_cfc.c:162:
+		printk("m32r_cfc: ioread_word :insw \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#276: FILE: drivers/pcmcia/m32r_cfc.c:162:
+		printk("m32r_cfc: ioread_word :insw \n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: drivers/pcmcia/m32r_cfc.c:166:
+		printk("m32r_cfc:ioread_word null port :%#lx\n",port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: drivers/pcmcia/m32r_cfc.c:166:
+		printk("m32r_cfc:ioread_word null port :%#lx\n",port);
 		                                               ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_ioread_word', this function's name, in a string
#283: FILE: drivers/pcmcia/m32r_cfc.c:169:
+	debug(3, "m32r_cfc: pcc_ioread_word: addr=%#lx\n", addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/pcmcia/m32r_cfc.c:179:
+void pcc_iowrite_byte(int sock, unsigned long port, void *buf, size_t size,
+	size_t nmemb, int flag)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_iowrite_byte', this function's name, in a string
#299: FILE: drivers/pcmcia/m32r_cfc.c:185:
+	debug(3, "m32r_cfc: pcc_iowrite_byte: sock=%d, port=%#lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#300: FILE: drivers/pcmcia/m32r_cfc.c:186:
+	debug(3, "m32r_cfc: pcc_iowrite_byte: sock=%d, port=%#lx, "
+		 "buf=%p, size=%u, nmemb=%d, flag=%d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: drivers/pcmcia/m32r_cfc.c:192:
+		printk("m32r_cfc:iowrite_byte null port:%#lx\n",port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: drivers/pcmcia/m32r_cfc.c:192:
+		printk("m32r_cfc:iowrite_byte null port:%#lx\n",port);
 		                                               ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_iowrite_byte', this function's name, in a string
#309: FILE: drivers/pcmcia/m32r_cfc.c:195:
+	debug(3, "m32r_cfc: pcc_iowrite_byte: addr=%#lx\n", addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/pcmcia/m32r_cfc.c:204:
+void pcc_iowrite_word(int sock, unsigned long port, void *buf, size_t size,
+	size_t nmemb, int flag)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_iowrite_word', this function's name, in a string
#324: FILE: drivers/pcmcia/m32r_cfc.c:210:
+	debug(3, "m32r_cfc: pcc_iowrite_word: sock=%d, port=%#lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#325: FILE: drivers/pcmcia/m32r_cfc.c:211:
+	debug(3, "m32r_cfc: pcc_iowrite_word: sock=%d, port=%#lx, "
+		 "buf=%p, size=%u, nmemb=%d, flag=%d\n",

ERROR:SPACING: space required before the open parenthesis '('
#328: FILE: drivers/pcmcia/m32r_cfc.c:214:
+	if(size != 2)

WARNING:TYPO_SPELLING: 'illigal' may be misspelled - perhaps 'illegal'?
#329: FILE: drivers/pcmcia/m32r_cfc.c:215:
+		printk("m32r_cfc: iowrite_word :illigal size %u : %#lx\n",
 		                                ^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#329: FILE: drivers/pcmcia/m32r_cfc.c:215:
+		printk("m32r_cfc: iowrite_word :illigal size %u : %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/pcmcia/m32r_cfc.c:216:
+		printk("m32r_cfc: iowrite_word :illigal size %u : %#lx\n",
+			size, port);

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: drivers/pcmcia/m32r_cfc.c:217:
+	if(size == 9)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#332: FILE: drivers/pcmcia/m32r_cfc.c:218:
+		printk("m32r_cfc: iowrite_word :outsw \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#332: FILE: drivers/pcmcia/m32r_cfc.c:218:
+		printk("m32r_cfc: iowrite_word :outsw \n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#336: FILE: drivers/pcmcia/m32r_cfc.c:222:
+		printk("m32r_cfc:iowrite_word null addr :%#lx\n",port);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: drivers/pcmcia/m32r_cfc.c:222:
+		printk("m32r_cfc:iowrite_word null addr :%#lx\n",port);
 		                                                ^

WARNING:IF_1: Consider removing the #if 1 and its #endif
#339: FILE: drivers/pcmcia/m32r_cfc.c:225:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#341: FILE: drivers/pcmcia/m32r_cfc.c:227:
+		printk("m32r_cfc:iowrite_word port addr (%#lx):%#lx\n", port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/pcmcia/m32r_cfc.c:228:
+		printk("m32r_cfc:iowrite_word port addr (%#lx):%#lx\n", port,
+			addr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_iowrite_word', this function's name, in a string
#346: FILE: drivers/pcmcia/m32r_cfc.c:232:
+	debug(3, "m32r_cfc: pcc_iowrite_word: addr=%#lx\n", addr);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#358: FILE: drivers/pcmcia/m32r_cfc.c:244:
+typedef struct pcc_t {

WARNING:LINE_SPACING: Missing a blank line after declarations
#381: FILE: drivers/pcmcia/m32r_cfc.c:267:
+	unsigned int val = inw(reg);
+	debug(3, "m32r_cfc: pcc_get: reg(0x%08x)=0x%04x\n", reg, val);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get', this function's name, in a string
#381: FILE: drivers/pcmcia/m32r_cfc.c:267:
+	debug(3, "m32r_cfc: pcc_get: reg(0x%08x)=0x%04x\n", reg, val);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#385: FILE: drivers/pcmcia/m32r_cfc.c:271:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set', this function's name, in a string
#389: FILE: drivers/pcmcia/m32r_cfc.c:275:
+	debug(3, "m32r_cfc: pcc_set: reg(0x%08x)=0x%04x\n", reg, data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#393: FILE: drivers/pcmcia/m32r_cfc.c:279:
+/*======================================================================
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#399: FILE: drivers/pcmcia/m32r_cfc.c:285:
+======================================================================*/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'is_alive', this function's name, in a string
#405: FILE: drivers/pcmcia/m32r_cfc.c:291:
+	debug(3, "m32r_cfc: is_alive:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#407: FILE: drivers/pcmcia/m32r_cfc.c:293:
+	printk("CF: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: drivers/pcmcia/m32r_cfc.c:296:
+		printk("No ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: drivers/pcmcia/m32r_cfc.c:297:
+	printk("Card is detected at socket %d : stat = 0x%08x\n", sock, stat);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'is_alive', this function's name, in a string
#412: FILE: drivers/pcmcia/m32r_cfc.c:298:
+	debug(3, "m32r_cfc: is_alive: sock stat is 0x%04x\n", stat);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_pcc_socket', this function's name, in a string
#421: FILE: drivers/pcmcia/m32r_cfc.c:307:
+	debug(3, "m32r_cfc: add_pcc_socket: base=%#lx, irq=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#422: FILE: drivers/pcmcia/m32r_cfc.c:308:
+	debug(3, "m32r_cfc: add_pcc_socket: base=%#lx, irq=%d, "
+		 "mapaddr=%#lx, ioaddr=%08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#455: FILE: drivers/pcmcia/m32r_cfc.c:341:
+	printk(KERN_INFO "  %s ", pcc[pcc_sockets].name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#456: FILE: drivers/pcmcia/m32r_cfc.c:342:
+	printk("pcc at 0x%08lx\n", t->base);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: drivers/pcmcia/m32r_cfc.c:359:
+	request_irq(irq+1, pcc_interrupt, 0, "m32r_cfc", pcc_interrupt);
 	               ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#484: FILE: drivers/pcmcia/m32r_cfc.c:370:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: drivers/pcmcia/m32r_cfc.c:372:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_interrupt', this function's name, in a string
#495: FILE: drivers/pcmcia/m32r_cfc.c:381:
+	debug(3, "m32r_cfc: pcc_interrupt: irq=%d, dev=%p, regs=%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/pcmcia/m32r_cfc.c:382:
+	debug(3, "m32r_cfc: pcc_interrupt: irq=%d, dev=%p, regs=%p\n",
+		irq, dev, regs);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_interrupt', this function's name, in a string
#502: FILE: drivers/pcmcia/m32r_cfc.c:388:
+		debug(3, "m32r_cfc: pcc_interrupt: socket %d irq 0x%02x ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/pcmcia/m32r_cfc.c:389:
+		debug(3, "m32r_cfc: pcc_interrupt: socket %d irq 0x%02x ",
+			i, irq);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_interrupt', this function's name, in a string
#508: FILE: drivers/pcmcia/m32r_cfc.c:394:
+	debug(3, "m32r_cfc: pcc_interrupt: done\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_interrupt_wrapper', this function's name, in a string
#515: FILE: drivers/pcmcia/m32r_cfc.c:401:
+	debug(3, "m32r_cfc: pcc_interrupt_wrapper:\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_pcc_get_status', this function's name, in a string
#528: FILE: drivers/pcmcia/m32r_cfc.c:414:
+	debug(3, "m32r_cfc: _pcc_get_status:\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: drivers/pcmcia/m32r_cfc.c:417:
+ ^Idebug(3, "m32r_cfc: _pcc_get_status: status=0x%08x\n", status);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#531: FILE: drivers/pcmcia/m32r_cfc.c:417:
+ ^Idebug(3, "m32r_cfc: _pcc_get_status: status=0x%08x\n", status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/pcmcia/m32r_cfc.c:417:
+ ^Idebug(3, "m32r_cfc: _pcc_get_status: status=0x%08x\n", status);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_pcc_get_status', this function's name, in a string
#531: FILE: drivers/pcmcia/m32r_cfc.c:417:
+ 	debug(3, "m32r_cfc: _pcc_get_status: status=0x%08x\n", status);

ERROR:SPACING: space prohibited after that open parenthesis '('
#534: FILE: drivers/pcmcia/m32r_cfc.c:420:
+	if ( status ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#534: FILE: drivers/pcmcia/m32r_cfc.c:420:
+	if ( status ) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_pcc_get_status', this function's name, in a string
#538: FILE: drivers/pcmcia/m32r_cfc.c:424:
+			debug(3, "m32r_cfc: _pcc_get_status: "

WARNING:SPLIT_STRING: quoted string split across lines
#539: FILE: drivers/pcmcia/m32r_cfc.c:425:
+			debug(3, "m32r_cfc: _pcc_get_status: "
+				 "power on (CPCR=0x%08x)\n", status);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#542: FILE: drivers/pcmcia/m32r_cfc.c:428:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space required after that ',' (ctx:VxV)
#546: FILE: drivers/pcmcia/m32r_cfc.c:432:
+		pcc_set(sock, (unsigned int)PLD_CFBUFCR,0);/* enable buffer */
 		                                       ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#547: FILE: drivers/pcmcia/m32r_cfc.c:433:
+		udelay(100);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#549: FILE: drivers/pcmcia/m32r_cfc.c:435:
+^I^I*value |= SS_READY; ^I^I/* always ready */$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#556: FILE: drivers/pcmcia/m32r_cfc.c:442:
+		udelay(100);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_pcc_get_status', this function's name, in a string
#557: FILE: drivers/pcmcia/m32r_cfc.c:443:
+		debug(3, "m32r_cfc: _pcc_get_status: "

WARNING:SPLIT_STRING: quoted string split across lines
#558: FILE: drivers/pcmcia/m32r_cfc.c:444:
+		debug(3, "m32r_cfc: _pcc_get_status: "
+			 "power off (CPCR=0x%08x)\n", status);

ERROR:SPACING: space prohibited after that open parenthesis '('
#561: FILE: drivers/pcmcia/m32r_cfc.c:447:
+	if ( status ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#561: FILE: drivers/pcmcia/m32r_cfc.c:447:
+	if ( status ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: drivers/pcmcia/m32r_cfc.c:451:
+			pcc_set(sock, (unsigned int)PLD_CFBUFCR,0); /* force buffer off for ZA-36 */
 			                                       ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#566: FILE: drivers/pcmcia/m32r_cfc.c:452:
+			udelay(50);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#570: FILE: drivers/pcmcia/m32r_cfc.c:456:
+			pcc_set(sock, (unsigned int)PLD_CFBUFCR,0);
 			                                       ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#571: FILE: drivers/pcmcia/m32r_cfc.c:457:
+			udelay(50);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#573: FILE: drivers/pcmcia/m32r_cfc.c:459:
+			udelay(25); /* for IDE reset */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_pcc_get_status', this function's name, in a string
#584: FILE: drivers/pcmcia/m32r_cfc.c:470:
+	debug(3, "m32r_cfc: _pcc_get_status: GetStatus(%d) = %#4.4x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: drivers/pcmcia/m32r_cfc.c:471:
+	debug(3, "m32r_cfc: _pcc_get_status: GetStatus(%d) = %#4.4x\n",
+		 sock, *value);

CHECK:CAMELCASE: Avoid CamelCase: <Vcc>
#600: FILE: drivers/pcmcia/m32r_cfc.c:486:
+	state->Vcc = 33;	/* 3.3V fixed */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Vpp>
#601: FILE: drivers/pcmcia/m32r_cfc.c:487:
+	state->Vpp = 33;

WARNING:SPLIT_STRING: quoted string split across lines
#604: FILE: drivers/pcmcia/m32r_cfc.c:490:
+	debug(3, "m32r_cfc: GetSocket(%d) = flags %#3.3x, Vcc %d, Vpp %d, "
+		  "io_irq %d, csc_mask %#2.2x\n", sock, state->flags,

WARNING:SPLIT_STRING: quoted string split across lines
#617: FILE: drivers/pcmcia/m32r_cfc.c:503:
+	debug(3, "m32r_cfc: SetSocket(%d, flags %#3.3x, Vcc %d, Vpp %d, "
+		  "io_irq %d, csc_mask %#2.2x)\n", sock, state->flags,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state->Vcc != 50'
#622: FILE: drivers/pcmcia/m32r_cfc.c:508:
+		if ((state->Vcc != 50) && (state->Vcc != 33))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state->Vcc != 33'
#622: FILE: drivers/pcmcia/m32r_cfc.c:508:
+		if ((state->Vcc != 50) && (state->Vcc != 33))

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#631: FILE: drivers/pcmcia/m32r_cfc.c:517:
+		if (state->Vcc == 50) {
[...]
+		} else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#641: FILE: drivers/pcmcia/m32r_cfc.c:527:
+		pcc_set(sock,(unsigned int)PLD_CFRSTCR,0x101);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#641: FILE: drivers/pcmcia/m32r_cfc.c:527:
+		pcc_set(sock,(unsigned int)PLD_CFRSTCR,0x101);
 		                                      ^

ERROR:SPACING: space required before the open brace '{'
#642: FILE: drivers/pcmcia/m32r_cfc.c:528:
+	}else{

ERROR:SPACING: space required after that close brace '}'
#642: FILE: drivers/pcmcia/m32r_cfc.c:528:
+	}else{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: drivers/pcmcia/m32r_cfc.c:529:
+		pcc_set(sock,(unsigned int)PLD_CFRSTCR,0x100);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#643: FILE: drivers/pcmcia/m32r_cfc.c:529:
+		pcc_set(sock,(unsigned int)PLD_CFRSTCR,0x100);
 		                                      ^

ERROR:SPACING: space required before the open brace '{'
#645: FILE: drivers/pcmcia/m32r_cfc.c:531:
+	if (state->flags & SS_OUTPUT_ENA){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: drivers/pcmcia/m32r_cfc.c:534:
+		pcc_set(sock,(unsigned int)PLD_CFBUFCR,0);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: drivers/pcmcia/m32r_cfc.c:534:
+		pcc_set(sock,(unsigned int)PLD_CFBUFCR,0);
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: drivers/pcmcia/m32r_cfc.c:536:
+		pcc_set(sock,(unsigned int)PLD_CFBUFCR,1);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: drivers/pcmcia/m32r_cfc.c:536:
+		pcc_set(sock,(unsigned int)PLD_CFBUFCR,1);
 		                                      ^

ERROR:SPACING: space required before the open brace '{'
#654: FILE: drivers/pcmcia/m32r_cfc.c:540:
+	if(state->flags & SS_IOCARD){

ERROR:SPACING: space required before the open parenthesis '('
#654: FILE: drivers/pcmcia/m32r_cfc.c:540:
+	if(state->flags & SS_IOCARD){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#654: FILE: drivers/pcmcia/m32r_cfc.c:540:
+	if(state->flags & SS_IOCARD){
+		debug(3, ":IOCARD");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#657: FILE: drivers/pcmcia/m32r_cfc.c:543:
+	if (state->flags & SS_PWR_AUTO) {
+		debug(3, ":PWR_AUTO");
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: drivers/pcmcia/m32r_cfc.c:571:
+	debug(3, "m32r_cfc: SetIOMap(%d, %d, %#2.2x, %d ns, "
+		  "%#4.4x-%#4.4x)\n", sock, io->map, io->flags,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#696: FILE: drivers/pcmcia/m32r_cfc.c:582:
+{
+

WARNING:SPLIT_STRING: quoted string split across lines
#702: FILE: drivers/pcmcia/m32r_cfc.c:588:
+	debug(3, "m32r_cfc: SetMemMap(%d, %d, %#2.2x, %d ns, "
+		 "%#5.5lx, %#5.5x)\n", sock, map, mem->flags,

ERROR:SPACING: space required before the open brace '{'
#708: FILE: drivers/pcmcia/m32r_cfc.c:594:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map > MAX_WIN'
#708: FILE: drivers/pcmcia/m32r_cfc.c:594:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mem->card_start > 0x3ffffff'
#708: FILE: drivers/pcmcia/m32r_cfc.c:594:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#708: FILE: drivers/pcmcia/m32r_cfc.c:594:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#723: FILE: drivers/pcmcia/m32r_cfc.c:609:
+	if (mem->flags & MAP_ATTRIB) {
[...]
+	} else {
[...]

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#739: FILE: drivers/pcmcia/m32r_cfc.c:625:
+#if 0 /* driver model ordering issue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#741: FILE: drivers/pcmcia/m32r_cfc.c:627:
+/*======================================================================
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#745: FILE: drivers/pcmcia/m32r_cfc.c:631:
+======================================================================*/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#763: FILE: drivers/pcmcia/m32r_cfc.c:649:
+static CLASS_DEVICE_ATTR(info, S_IRUGO, show_info, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#764: FILE: drivers/pcmcia/m32r_cfc.c:650:
+static CLASS_DEVICE_ATTR(exca, S_IRUGO, show_exca, NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#770: FILE: drivers/pcmcia/m32r_cfc.c:656:
+ * some time... */

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#771: FILE: drivers/pcmcia/m32r_cfc.c:657:
+#define LOCKED(x) do {					\
+	int retval;					\
+	unsigned long flags;				\
+	spin_lock_irqsave(&pcc_lock, flags);		\
+	retval = x;					\
+	spin_unlock_irqrestore(&pcc_lock, flags);	\
+	return retval;					\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#780: FILE: drivers/pcmcia/m32r_cfc.c:666:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get_status', this function's name, in a string
#786: FILE: drivers/pcmcia/m32r_cfc.c:672:
+		debug(3, "m32r_cfc: pcc_get_status: sock(%d) -EINVAL\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get_status', this function's name, in a string
#790: FILE: drivers/pcmcia/m32r_cfc.c:676:
+	debug(3, "m32r_cfc: pcc_get_status: sock(%d)\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get_socket', this function's name, in a string
#799: FILE: drivers/pcmcia/m32r_cfc.c:685:
+		debug(3, "m32r_cfc: pcc_get_socket: sock(%d) -EINVAL\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get_socket', this function's name, in a string
#802: FILE: drivers/pcmcia/m32r_cfc.c:688:
+	debug(3, "m32r_cfc: pcc_get_socket: sock(%d)\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_socket', this function's name, in a string
#811: FILE: drivers/pcmcia/m32r_cfc.c:697:
+		debug(3, "m32r_cfc: pcc_set_socket: sock(%d) -EINVAL\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_socket', this function's name, in a string
#814: FILE: drivers/pcmcia/m32r_cfc.c:700:
+	debug(3, "m32r_cfc: pcc_set_socket: sock(%d)\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_io_map', this function's name, in a string
#823: FILE: drivers/pcmcia/m32r_cfc.c:709:
+		debug(3, "m32r_cfc: pcc_set_io_map: sock(%d) -EINVAL\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_io_map', this function's name, in a string
#826: FILE: drivers/pcmcia/m32r_cfc.c:712:
+	debug(3, "m32r_cfc: pcc_set_io_map: sock(%d)\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_mem_map', this function's name, in a string
#835: FILE: drivers/pcmcia/m32r_cfc.c:721:
+		debug(3, "m32r_cfc: pcc_set_mem_map: sock(%d) -EINVAL\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_set_mem_map', this function's name, in a string
#838: FILE: drivers/pcmcia/m32r_cfc.c:724:
+	debug(3, "m32r_cfc: pcc_set_mem_map: sock(%d)\n", sock);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_init', this function's name, in a string
#844: FILE: drivers/pcmcia/m32r_cfc.c:730:
+	debug(3, "m32r_cfc: pcc_init()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_suspend', this function's name, in a string
#850: FILE: drivers/pcmcia/m32r_cfc.c:736:
+	debug(3, "m32r_cfc: pcc_suspend()\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#869: FILE: drivers/pcmcia/m32r_cfc.c:755:
+	int ret = 0;
+	if (level == SUSPEND_SAVE_STATE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#877: FILE: drivers/pcmcia/m32r_cfc.c:763:
+	int ret = 0;
+	if (level == RESUME_RESTORE_STATE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#882: FILE: drivers/pcmcia/m32r_cfc.c:768:
+
+

ERROR:SPACING: space required before the open brace '{'
#906: FILE: drivers/pcmcia/m32r_cfc.c:792:
+	if (ret){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#937: FILE: drivers/pcmcia/m32r_cfc.c:823:
+		printk("socket is not found.\n");

ERROR:SPACING: spaces required around that '>=' (ctx:VxW)
#952: FILE: drivers/pcmcia/m32r_cfc.c:838:
+			for (; i>= 0; i--)
 			        ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#956: FILE: drivers/pcmcia/m32r_cfc.c:842:
+#if 0	/* driver model ordering issue */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#998: FILE: drivers/pcmcia/m32r_cfc.h:1:
+/*

WARNING:TYPO_SPELLING: 'Controler' may be misspelled - perhaps 'Controller'?
#1009: FILE: drivers/pcmcia/m32r_cfc.h:12:
+ * M32R PC Card Controler
                 ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1027: FILE: drivers/pcmcia/m32r_cfc.h:30:
+#define PCCR_PCEN       (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1027: FILE: drivers/pcmcia/m32r_cfc.h:30:
+#define PCCR_PCEN       (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1032: FILE: drivers/pcmcia/m32r_cfc.h:35:
+#define PCIRC_BWERR     (1UL<<(31-7))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1032: FILE: drivers/pcmcia/m32r_cfc.h:35:
+#define PCIRC_BWERR     (1UL<<(31-7))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1033: FILE: drivers/pcmcia/m32r_cfc.h:36:
+#define PCIRC_CDIN1     (1UL<<(31-14))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1033: FILE: drivers/pcmcia/m32r_cfc.h:36:
+#define PCIRC_CDIN1     (1UL<<(31-14))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1034: FILE: drivers/pcmcia/m32r_cfc.h:37:
+#define PCIRC_CDIN2     (1UL<<(31-15))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1034: FILE: drivers/pcmcia/m32r_cfc.h:37:
+#define PCIRC_CDIN2     (1UL<<(31-15))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1035: FILE: drivers/pcmcia/m32r_cfc.h:38:
+#define PCIRC_BEIEN     (1UL<<(31-23))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1035: FILE: drivers/pcmcia/m32r_cfc.h:38:
+#define PCIRC_BEIEN     (1UL<<(31-23))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1036: FILE: drivers/pcmcia/m32r_cfc.h:39:
+#define PCIRC_CIIEN     (1UL<<(31-30))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1036: FILE: drivers/pcmcia/m32r_cfc.h:39:
+#define PCIRC_CIIEN     (1UL<<(31-30))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1037: FILE: drivers/pcmcia/m32r_cfc.h:40:
+#define PCIRC_COIEN     (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1037: FILE: drivers/pcmcia/m32r_cfc.h:40:
+#define PCIRC_COIEN     (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1042: FILE: drivers/pcmcia/m32r_cfc.h:45:
+#define PCCSIGCR_SEN    (1UL<<(31-3))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1042: FILE: drivers/pcmcia/m32r_cfc.h:45:
+#define PCCSIGCR_SEN    (1UL<<(31-3))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1043: FILE: drivers/pcmcia/m32r_cfc.h:46:
+#define PCCSIGCR_VEN    (1UL<<(31-7))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1043: FILE: drivers/pcmcia/m32r_cfc.h:46:
+#define PCCSIGCR_VEN    (1UL<<(31-7))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1044: FILE: drivers/pcmcia/m32r_cfc.h:47:
+#define PCCSIGCR_CRST   (1UL<<(31-15))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1044: FILE: drivers/pcmcia/m32r_cfc.h:47:
+#define PCCSIGCR_CRST   (1UL<<(31-15))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1045: FILE: drivers/pcmcia/m32r_cfc.h:48:
+#define PCCSIGCR_COCR   (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1045: FILE: drivers/pcmcia/m32r_cfc.h:48:
+#define PCCSIGCR_COCR   (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1050: FILE: drivers/pcmcia/m32r_cfc.h:53:
+#define PCMOD_AS_ATTRIB	(1UL<<(31-19))
                        	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1050: FILE: drivers/pcmcia/m32r_cfc.h:53:
+#define PCMOD_AS_ATTRIB	(1UL<<(31-19))
                        	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1051: FILE: drivers/pcmcia/m32r_cfc.h:54:
+#define PCMOD_AS_IO	(1UL<<(31-18))
                    	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1051: FILE: drivers/pcmcia/m32r_cfc.h:54:
+#define PCMOD_AS_IO	(1UL<<(31-18))
                    	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1053: FILE: drivers/pcmcia/m32r_cfc.h:56:
+#define PCMOD_CBSZ	(1UL<<(31-23)) /* set for 8bit */
                   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1053: FILE: drivers/pcmcia/m32r_cfc.h:56:
+#define PCMOD_CBSZ	(1UL<<(31-23)) /* set for 8bit */
                   	         ^

WARNING:TYPO_SPELLING: 'excahnge' may be misspelled - perhaps 'exchange'?
#1055: FILE: drivers/pcmcia/m32r_cfc.h:58:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	                          ^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1055: FILE: drivers/pcmcia/m32r_cfc.h:58:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1055: FILE: drivers/pcmcia/m32r_cfc.h:58:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1067: FILE: drivers/pcmcia/m32r_cfc.h:70:
+#define M32R_PCC_MAPMASK     ^I(~(M32R_PCC_MAPMAX-1))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1067: FILE: drivers/pcmcia/m32r_cfc.h:70:
+#define M32R_PCC_MAPMASK     	(~(M32R_PCC_MAPMAX-1))
                              	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1085: FILE: drivers/pcmcia/m32r_pcc.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1086: FILE: drivers/pcmcia/m32r_pcc.c:2:
+ *  drivers/pcmcia/m32r_pcc.c

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1112: FILE: drivers/pcmcia/m32r_pcc.c:28:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1113: FILE: drivers/pcmcia/m32r_pcc.c:29:
+#include <asm/bitops.h>

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1130: FILE: drivers/pcmcia/m32r_pcc.c:46:
+	static volatile u_short dummy_readbuf;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1140: FILE: drivers/pcmcia/m32r_pcc.c:56:
+		printk(KERN_DEBUG "m32r_pcc: " fmt , ## arg);	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1140: FILE: drivers/pcmcia/m32r_pcc.c:56:
+		printk(KERN_DEBUG "m32r_pcc: " fmt , ## arg);	\
 		                                   ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1147: FILE: drivers/pcmcia/m32r_pcc.c:63:
+static int poll_interval = 0;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1149: FILE: drivers/pcmcia/m32r_pcc.c:65:
+typedef enum pcc_space { as_none = 0, as_comm, as_attr, as_io } pcc_as_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1151: FILE: drivers/pcmcia/m32r_pcc.c:67:
+typedef struct pcc_socket {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: drivers/pcmcia/m32r_pcc.c:71:
+ ^Iioaddr_t^I^Iioaddr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1155: FILE: drivers/pcmcia/m32r_pcc.c:71:
+ ^Iioaddr_t^I^Iioaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: drivers/pcmcia/m32r_pcc.c:71:
+ ^Iioaddr_t^I^Iioaddr;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1173: FILE: drivers/pcmcia/m32r_pcc.c:89:
+static int pcc_sockets = 0;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1181: FILE: drivers/pcmcia/m32r_pcc.c:97:
+static void pcc_set(u_short, unsigned int , unsigned int );
                                           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1181: FILE: drivers/pcmcia/m32r_pcc.c:97:
+static void pcc_set(u_short, unsigned int , unsigned int );

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1219: FILE: drivers/pcmcia/m32r_pcc.c:135:
+	if (t->current_space != as_io || t->last_iodbex != need_ex) {
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1240: FILE: drivers/pcmcia/m32r_pcc.c:156:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1257: FILE: drivers/pcmcia/m32r_pcc.c:173:
+		if (map_changed) {
+			dummy_readbuf = readb(addr);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1263: FILE: drivers/pcmcia/m32r_pcc.c:179:
+			while (nmemb--) {
+				writeb(*bp++, addr);
+			}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#1268: FILE: drivers/pcmcia/m32r_pcc.c:184:
+			while (nmemb--) {
+	    		*bp++ = readb(addr);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1268: FILE: drivers/pcmcia/m32r_pcc.c:184:
+			while (nmemb--) {
+	    		*bp++ = readb(addr);
+			}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1269: FILE: drivers/pcmcia/m32r_pcc.c:185:
+^I    ^I^I*bp++ = readb(addr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1269: FILE: drivers/pcmcia/m32r_pcc.c:185:
+^I    ^I^I*bp++ = readb(addr);$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1277: FILE: drivers/pcmcia/m32r_pcc.c:193:
+		if (map_changed) {
+			dummy_readbuf = readw(addr);
+		}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1288: FILE: drivers/pcmcia/m32r_pcc.c:204:
+					unsigned short tmp;
+					tmp = cp[1] << 8 | cp[0];

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1291: FILE: drivers/pcmcia/m32r_pcc.c:207:
+				} else
[...]
+				writew(*bp++, addr);

CHECK:BRACES: Unbalanced braces around else statement
#1291: FILE: drivers/pcmcia/m32r_pcc.c:207:
+				} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: drivers/pcmcia/m32r_pcc.c:210:
+^I    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1294: FILE: drivers/pcmcia/m32r_pcc.c:210:
+^I    ^I}$

WARNING:TABSTOP: Statements should start on a tabstop
#1295: FILE: drivers/pcmcia/m32r_pcc.c:211:
+	    } else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: drivers/pcmcia/m32r_pcc.c:212:
+^I    ^I/* read Word */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1296: FILE: drivers/pcmcia/m32r_pcc.c:212:
+^I    ^I/* read Word */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1297: FILE: drivers/pcmcia/m32r_pcc.c:213:
+^I    ^Iwhile (nmemb--) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1297: FILE: drivers/pcmcia/m32r_pcc.c:213:
+^I    ^Iwhile (nmemb--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1297: FILE: drivers/pcmcia/m32r_pcc.c:213:
+	    	while (nmemb--) {
[...]
+				if (_dbex) {

ERROR:SPACING: exactly one space required after that #ifdef
#1298: FILE: drivers/pcmcia/m32r_pcc.c:214:
+#ifdef  PCC_DEBUG_DBEX

WARNING:LINE_SPACING: Missing a blank line after declarations
#1302: FILE: drivers/pcmcia/m32r_pcc.c:218:
+					unsigned short tmp;
+					tmp = readw(addr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1306: FILE: drivers/pcmcia/m32r_pcc.c:222:
+				} else
[...]
+				*bp++ = readw(addr);

CHECK:BRACES: Unbalanced braces around else statement
#1306: FILE: drivers/pcmcia/m32r_pcc.c:222:
+				} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1309: FILE: drivers/pcmcia/m32r_pcc.c:225:
+^I    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1309: FILE: drivers/pcmcia/m32r_pcc.c:225:
+^I    ^I}$

WARNING:TABSTOP: Statements should start on a tabstop
#1310: FILE: drivers/pcmcia/m32r_pcc.c:226:
+	    }

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1313: FILE: drivers/pcmcia/m32r_pcc.c:229:
+#if 1

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1315: FILE: drivers/pcmcia/m32r_pcc.c:231:
+	if ((addr = pcc_get(sock, PCIRC)) & PCIRC_BWERR) {
+	  printk("m32r_pcc: BWERR detected : port 0x%04lx : iosize %dbit\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1315: FILE: drivers/pcmcia/m32r_pcc.c:231:
+	if ((addr = pcc_get(sock, PCIRC)) & PCIRC_BWERR) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1316: FILE: drivers/pcmcia/m32r_pcc.c:232:
+	  printk("m32r_pcc: BWERR detected : port 0x%04lx : iosize %dbit\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1317: FILE: drivers/pcmcia/m32r_pcc.c:233:
+	  printk("m32r_pcc: BWERR detected : port 0x%04lx : iosize %dbit\n",
+			 port, size * 8);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1329: FILE: drivers/pcmcia/m32r_pcc.c:245:
+	spin_unlock_irqrestore(&pcc_lock,flags);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#1332: FILE: drivers/pcmcia/m32r_pcc.c:248:
+	return;
+}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1334: FILE: drivers/pcmcia/m32r_pcc.c:250:
+void pcc_ioread(int sock, unsigned long port, void *buf, size_t size, size_t nmemb, int flag) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1338: FILE: drivers/pcmcia/m32r_pcc.c:254:
+void pcc_iowrite(int sock, unsigned long port, void *buf, size_t size, size_t nmemb, int flag) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: drivers/pcmcia/m32r_pcc.c:255:
+    pcc_iorw(sock, port, buf, size, nmemb, 1, flag);$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1346: FILE: drivers/pcmcia/m32r_pcc.c:262:
+typedef struct pcc_t {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1366: FILE: drivers/pcmcia/m32r_pcc.c:282:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: drivers/pcmcia/m32r_pcc.c:285:
+  ^Ioutl(data, socket[sock].base + reg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1369: FILE: drivers/pcmcia/m32r_pcc.c:285:
+  ^Ioutl(data, socket[sock].base + reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: drivers/pcmcia/m32r_pcc.c:285:
+  ^Ioutl(data, socket[sock].base + reg);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1373: FILE: drivers/pcmcia/m32r_pcc.c:289:
+/*======================================================================
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1379: FILE: drivers/pcmcia/m32r_pcc.c:295:
+======================================================================*/

ERROR:SPACING: space required before the open brace '{'
#1388: FILE: drivers/pcmcia/m32r_pcc.c:304:
+	if(!f){

ERROR:SPACING: space required before the open parenthesis '('
#1388: FILE: drivers/pcmcia/m32r_pcc.c:304:
+	if(!f){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1389: FILE: drivers/pcmcia/m32r_pcc.c:305:
+		printk("m32r_pcc: No Card is detected at socket %d : stat = 0x%08x\n",stat,sock);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1389: FILE: drivers/pcmcia/m32r_pcc.c:305:
+		printk("m32r_pcc: No Card is detected at socket %d : stat = 0x%08x\n",stat,sock);
 		                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1389: FILE: drivers/pcmcia/m32r_pcc.c:305:
+		printk("m32r_pcc: No Card is detected at socket %d : stat = 0x%08x\n",stat,sock);
 		                                                                          ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1392: FILE: drivers/pcmcia/m32r_pcc.c:308:
+	if(f!=3)
 	    ^

ERROR:SPACING: space required before the open parenthesis '('
#1392: FILE: drivers/pcmcia/m32r_pcc.c:308:
+	if(f!=3)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1393: FILE: drivers/pcmcia/m32r_pcc.c:309:
+		printk("m32r_pcc: Insertion fail (%.8x) at socket %d\n",stat,sock);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1393: FILE: drivers/pcmcia/m32r_pcc.c:309:
+		printk("m32r_pcc: Insertion fail (%.8x) at socket %d\n",stat,sock);
 		                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1393: FILE: drivers/pcmcia/m32r_pcc.c:309:
+		printk("m32r_pcc: Insertion fail (%.8x) at socket %d\n",stat,sock);
 		                                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1395: FILE: drivers/pcmcia/m32r_pcc.c:311:
+		printk("m32r_pcc: Card is Inserted at socket %d(%.8x)\n",sock,stat);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1395: FILE: drivers/pcmcia/m32r_pcc.c:311:
+		printk("m32r_pcc: Card is Inserted at socket %d(%.8x)\n",sock,stat);
 		                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1395: FILE: drivers/pcmcia/m32r_pcc.c:311:
+		printk("m32r_pcc: Card is Inserted at socket %d(%.8x)\n",sock,stat);
 		                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1401: FILE: drivers/pcmcia/m32r_pcc.c:317:
+  ^Ipcc_socket_t *t = &socket[pcc_sockets];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1401: FILE: drivers/pcmcia/m32r_pcc.c:317:
+  ^Ipcc_socket_t *t = &socket[pcc_sockets];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: drivers/pcmcia/m32r_pcc.c:317:
+  ^Ipcc_socket_t *t = &socket[pcc_sockets];$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1416: FILE: drivers/pcmcia/m32r_pcc.c:332:
+	if (t->base > 0) {
+		request_region(t->base, 0x20, "m32r-pcc");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1420: FILE: drivers/pcmcia/m32r_pcc.c:336:
+	printk(KERN_INFO "  %s ", pcc[pcc_sockets].name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1421: FILE: drivers/pcmcia/m32r_pcc.c:337:
+	printk("pcc at 0x%08lx\n", t->base);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1435: FILE: drivers/pcmcia/m32r_pcc.c:351:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1437: FILE: drivers/pcmcia/m32r_pcc.c:353:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_interrupt', this function's name, in a string
#1446: FILE: drivers/pcmcia/m32r_pcc.c:362:
+	debug(4, "m32r: pcc_interrupt(%d)\n", irq);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'socket[i].cs_irq != irq'
#1451: FILE: drivers/pcmcia/m32r_pcc.c:367:
+			if ((socket[i].cs_irq != irq) &&
+				(socket[i].socket.pci_irq != irq))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'socket[i].socket.pci_irq != irq'
#1451: FILE: drivers/pcmcia/m32r_pcc.c:367:
+			if ((socket[i].cs_irq != irq) &&
+				(socket[i].socket.pci_irq != irq))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1452: FILE: drivers/pcmcia/m32r_pcc.c:368:
+			if ((socket[i].cs_irq != irq) &&
+				(socket[i].socket.pci_irq != irq))

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#1456: FILE: drivers/pcmcia/m32r_pcc.c:372:
+			irc >>=16;
 			    ^

WARNING:TYPO_SPELLING: 'interrput' may be misspelled - perhaps 'interrupt'?
#1457: FILE: drivers/pcmcia/m32r_pcc.c:373:
+			debug(2, "m32r-pcc:interrput: socket %d pcirc 0x%02x ", i, irc);
 			                   ^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1462: FILE: drivers/pcmcia/m32r_pcc.c:378:
+			events |= (pcc_get(i,PCCR) & PCCR_PCEN) ? SS_READY : 0;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1471: FILE: drivers/pcmcia/m32r_pcc.c:387:
+		if (!active) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1474: FILE: drivers/pcmcia/m32r_pcc.c:390:
+		printk(KERN_NOTICE "m32r-pcc: infinite loop in interrupt handler\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1495: FILE: drivers/pcmcia/m32r_pcc.c:411:
+	status = pcc_get(sock,PCIRC);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1499: FILE: drivers/pcmcia/m32r_pcc.c:415:
+	status = pcc_get(sock,PCCR);
 	                     ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1501: FILE: drivers/pcmcia/m32r_pcc.c:417:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1507: FILE: drivers/pcmcia/m32r_pcc.c:423:
+	status = pcc_get(sock,PCCSIGCR);
 	                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#1519: FILE: drivers/pcmcia/m32r_pcc.c:435:
+	debug(3, "m32r-pcc: GetSocket(%d) = flags %#3.3x, Vcc %d, Vpp %d, "
+		  "io_irq %d, csc_mask %#2.2x\n", sock, state->flags,

WARNING:SPLIT_STRING: quoted string split across lines
#1531: FILE: drivers/pcmcia/m32r_pcc.c:447:
+	debug(3, "m32r-pcc: SetSocket(%d, flags %#3.3x, Vcc %d, Vpp %d, "
+		  "io_irq %d, csc_mask %#2.2x)", sock, state->flags,

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1538: FILE: drivers/pcmcia/m32r_pcc.c:454:
+		if (state->Vcc == 50) {
[...]
+		} else {
[...]

ERROR:SPACING: space required before the open brace '{'
#1549: FILE: drivers/pcmcia/m32r_pcc.c:465:
+	if (state->flags & SS_OUTPUT_ENA){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1556: FILE: drivers/pcmcia/m32r_pcc.c:472:
+	pcc_set(sock,PCCSIGCR,reg);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1556: FILE: drivers/pcmcia/m32r_pcc.c:472:
+	pcc_set(sock,PCCSIGCR,reg);
 	                     ^

ERROR:SPACING: space required before the open brace '{'
#1559: FILE: drivers/pcmcia/m32r_pcc.c:475:
+	if(state->flags & SS_IOCARD){

ERROR:SPACING: space required before the open parenthesis '('
#1559: FILE: drivers/pcmcia/m32r_pcc.c:475:
+	if(state->flags & SS_IOCARD){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1559: FILE: drivers/pcmcia/m32r_pcc.c:475:
+	if(state->flags & SS_IOCARD){
+		debug(3, ":IOCARD");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1562: FILE: drivers/pcmcia/m32r_pcc.c:478:
+	if (state->flags & SS_PWR_AUTO) {
+		debug(3, ":PWR_AUTO");
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#1590: FILE: drivers/pcmcia/m32r_pcc.c:506:
+	debug(3, "m32r-pcc: SetIOMap(%d, %d, %#2.2x, %d ns, "
+		  "%#4.4x-%#4.4x)\n", sock, io->map, io->flags,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1601: FILE: drivers/pcmcia/m32r_pcc.c:517:
+{
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1607: FILE: drivers/pcmcia/m32r_pcc.c:523:
+#if 0

WARNING:SPLIT_STRING: quoted string split across lines
#1613: FILE: drivers/pcmcia/m32r_pcc.c:529:
+	debug(3, "m32r-pcc: SetMemMap(%d, %d, %#2.2x, %d ns, "
+		 "%#5.5lx,  %#5.5x)\n", sock, map, mem->flags,

ERROR:SPACING: space required before the open brace '{'
#1619: FILE: drivers/pcmcia/m32r_pcc.c:535:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'map > MAX_WIN'
#1619: FILE: drivers/pcmcia/m32r_pcc.c:535:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mem->card_start > 0x3ffffff'
#1619: FILE: drivers/pcmcia/m32r_pcc.c:535:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1619: FILE: drivers/pcmcia/m32r_pcc.c:535:
+	if ((map > MAX_WIN) || (mem->card_start > 0x3ffffff)){
+		return -EINVAL;
+	}

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1662: FILE: drivers/pcmcia/m32r_pcc.c:578:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1675: FILE: drivers/pcmcia/m32r_pcc.c:591:
+#if 0 /* driver model ordering issue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1677: FILE: drivers/pcmcia/m32r_pcc.c:593:
+/*======================================================================
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1681: FILE: drivers/pcmcia/m32r_pcc.c:597:
+======================================================================*/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1699: FILE: drivers/pcmcia/m32r_pcc.c:615:
+static CLASS_DEVICE_ATTR(info, S_IRUGO, show_info, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1700: FILE: drivers/pcmcia/m32r_pcc.c:616:
+static CLASS_DEVICE_ATTR(exca, S_IRUGO, show_exca, NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1706: FILE: drivers/pcmcia/m32r_pcc.c:622:
+ * some time... */

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1707: FILE: drivers/pcmcia/m32r_pcc.c:623:
+#define LOCKED(x) do {					\
+	int retval;					\
+	unsigned long flags;				\
+	spin_lock_irqsave(&pcc_lock, flags);		\
+	retval = x;					\
+	spin_unlock_irqrestore(&pcc_lock, flags);	\
+	return retval;					\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1716: FILE: drivers/pcmcia/m32r_pcc.c:632:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1791: FILE: drivers/pcmcia/m32r_pcc.c:707:
+	int ret = 0;
+	if (level == SUSPEND_SAVE_STATE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1799: FILE: drivers/pcmcia/m32r_pcc.c:715:
+	int ret = 0;
+	if (level == RESUME_RESTORE_STATE)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1804: FILE: drivers/pcmcia/m32r_pcc.c:720:
+
+

ERROR:SPACING: space required before the open brace '{'
#1828: FILE: drivers/pcmcia/m32r_pcc.c:744:
+	if (ret){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1833: FILE: drivers/pcmcia/m32r_pcc.c:749:
+	printk(KERN_INFO "m32r PCC probe:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1844: FILE: drivers/pcmcia/m32r_pcc.c:760:
+		printk("socket is not found.\n");

ERROR:SPACING: spaces required around that '>=' (ctx:VxW)
#1859: FILE: drivers/pcmcia/m32r_pcc.c:775:
+			for (; i>= 0; i--)
 			        ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1863: FILE: drivers/pcmcia/m32r_pcc.c:779:
+#if 0	/* driver model ordering issue */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1905: FILE: drivers/pcmcia/m32r_pcc.h:1:
+/*

WARNING:TYPO_SPELLING: 'Controler' may be misspelled - perhaps 'Controller'?
#1912: FILE: drivers/pcmcia/m32r_pcc.h:8:
+ * M32R PC Card Controler
                 ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1930: FILE: drivers/pcmcia/m32r_pcc.h:26:
+#define PCCR_PCEN       (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1930: FILE: drivers/pcmcia/m32r_pcc.h:26:
+#define PCCR_PCEN       (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1935: FILE: drivers/pcmcia/m32r_pcc.h:31:
+#define PCIRC_BWERR     (1UL<<(31-7))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1935: FILE: drivers/pcmcia/m32r_pcc.h:31:
+#define PCIRC_BWERR     (1UL<<(31-7))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1936: FILE: drivers/pcmcia/m32r_pcc.h:32:
+#define PCIRC_CDIN1     (1UL<<(31-14))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1936: FILE: drivers/pcmcia/m32r_pcc.h:32:
+#define PCIRC_CDIN1     (1UL<<(31-14))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1937: FILE: drivers/pcmcia/m32r_pcc.h:33:
+#define PCIRC_CDIN2     (1UL<<(31-15))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1937: FILE: drivers/pcmcia/m32r_pcc.h:33:
+#define PCIRC_CDIN2     (1UL<<(31-15))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1938: FILE: drivers/pcmcia/m32r_pcc.h:34:
+#define PCIRC_BEIEN     (1UL<<(31-23))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1938: FILE: drivers/pcmcia/m32r_pcc.h:34:
+#define PCIRC_BEIEN     (1UL<<(31-23))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1939: FILE: drivers/pcmcia/m32r_pcc.h:35:
+#define PCIRC_CIIEN     (1UL<<(31-30))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1939: FILE: drivers/pcmcia/m32r_pcc.h:35:
+#define PCIRC_CIIEN     (1UL<<(31-30))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1940: FILE: drivers/pcmcia/m32r_pcc.h:36:
+#define PCIRC_COIEN     (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1940: FILE: drivers/pcmcia/m32r_pcc.h:36:
+#define PCIRC_COIEN     (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1945: FILE: drivers/pcmcia/m32r_pcc.h:41:
+#define PCCSIGCR_SEN    (1UL<<(31-3))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1945: FILE: drivers/pcmcia/m32r_pcc.h:41:
+#define PCCSIGCR_SEN    (1UL<<(31-3))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1946: FILE: drivers/pcmcia/m32r_pcc.h:42:
+#define PCCSIGCR_VEN    (1UL<<(31-7))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1946: FILE: drivers/pcmcia/m32r_pcc.h:42:
+#define PCCSIGCR_VEN    (1UL<<(31-7))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1947: FILE: drivers/pcmcia/m32r_pcc.h:43:
+#define PCCSIGCR_CRST   (1UL<<(31-15))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1947: FILE: drivers/pcmcia/m32r_pcc.h:43:
+#define PCCSIGCR_CRST   (1UL<<(31-15))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1948: FILE: drivers/pcmcia/m32r_pcc.h:44:
+#define PCCSIGCR_COCR   (1UL<<(31-31))
                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1948: FILE: drivers/pcmcia/m32r_pcc.h:44:
+#define PCCSIGCR_COCR   (1UL<<(31-31))
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1953: FILE: drivers/pcmcia/m32r_pcc.h:49:
+#define PCMOD_AS_ATTRIB	(1UL<<(31-19))
                        	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1953: FILE: drivers/pcmcia/m32r_pcc.h:49:
+#define PCMOD_AS_ATTRIB	(1UL<<(31-19))
                        	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1954: FILE: drivers/pcmcia/m32r_pcc.h:50:
+#define PCMOD_AS_IO	(1UL<<(31-18))
                    	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1954: FILE: drivers/pcmcia/m32r_pcc.h:50:
+#define PCMOD_AS_IO	(1UL<<(31-18))
                    	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1956: FILE: drivers/pcmcia/m32r_pcc.h:52:
+#define PCMOD_CBSZ	(1UL<<(31-23)) /* set for 8bit */
                   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1956: FILE: drivers/pcmcia/m32r_pcc.h:52:
+#define PCMOD_CBSZ	(1UL<<(31-23)) /* set for 8bit */
                   	         ^

WARNING:TYPO_SPELLING: 'excahnge' may be misspelled - perhaps 'exchange'?
#1958: FILE: drivers/pcmcia/m32r_pcc.h:54:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	                          ^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1958: FILE: drivers/pcmcia/m32r_pcc.h:54:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1958: FILE: drivers/pcmcia/m32r_pcc.h:54:
+#define PCMOD_DBEX	(1UL<<(31-31)) /* set for excahnge */
                   	         ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1969: FILE: drivers/pcmcia/m32r_pcc.h:65:
+#define M32R_PCC_MAPMASK     ^I(~(M32R_PCC_MAPMAX-1))$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1969: FILE: drivers/pcmcia/m32r_pcc.h:65:
+#define M32R_PCC_MAPMASK     	(~(M32R_PCC_MAPMAX-1))
                              	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 80 errors, 180 warnings, 106 checks, 1880 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244138.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
