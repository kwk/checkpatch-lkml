WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
> > > Ideally one should move the "nr_requested/nr_freed" counters from your

WARNING:TYPO_SPELLING: 'Thats' may be misspelled - perhaps 'That's'?
#70: 
> to know how the reclaiming process is behaving over time. Thats why I wondered
                                                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'coudn't' may be misspelled - perhaps 'couldn't'?
#98: 
But I coudn't do this cleanly because kmem_cache_t isn't defined
      ^^^^^^^

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#111: 
verified that it atleast isn't breaking slabtop.
                 ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: mm/vmscan.c:218:
+				atomic_add(nr_before - shrink_ret,
+					&shrinker->nr_freed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: mm/slab.c:3492:
+		seq_printf(m, " : shrinker stat %7lu %7lu",
+			atomic_read(&cachep->shrinker->nr_req),

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: include/linux/slab.h:151:
+extern void kmem_set_shrinker(kmem_cache_t *cachep, struct shrinker *shrinker);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 3 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146468.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
