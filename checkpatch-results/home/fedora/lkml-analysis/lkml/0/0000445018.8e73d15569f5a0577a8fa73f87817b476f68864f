ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: fs/proc/array.c:284:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: fs/proc/array.c:284:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: fs/proc/array.c:621:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/proc/array.c:621:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: fs/proc/base.c:137:
+	struct mm_struct * mm = get_task_mm(task);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: fs/proc/base.c:218:
+	struct mm_struct *mm = get_task_mm(task);
+	if (!mm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/proc/base.c:221:
+ ^Ilen = mm->arg_end - mm->arg_start;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: fs/proc/base.c:221:
+ ^Ilen = mm->arg_end - mm->arg_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/proc/base.c:221:
+ ^Ilen = mm->arg_end - mm->arg_start;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: fs/proc/base.c:222:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/proc/base.c:222:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: fs/proc/base.c:225:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/proc/base.c:225:
+ $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#176: FILE: fs/proc/base.c:230:
+	if (res > 0 && buffer[res-1] != '\0') {
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#178: FILE: fs/proc/base.c:232:
+		if (len < res) {
+		    res = len;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: fs/proc/base.c:238:
+			res += access_process_vm(task, mm->env_start, buffer+res, len, 0);
 			                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: fs/proc/base.c:424:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/proc/base.c:424:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: fs/proc/base.c:430:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/proc/base.c:430:
+ $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#233: FILE: fs/proc/base.c:431:
+	if (file->private_data != (void*)((long)current->self_exec_id))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: fs/proc/base.c:435:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: fs/proc/base.c:435:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: fs/proc/base.c:451:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/proc/base.c:451:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: include/linux/sched.h:816:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: include/linux/sched.h:816:
 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: include/linux/sched.h:816:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: include/linux/sched.h:823:
+static inline struct mm_struct * get_task_mm(struct task_struct * task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: include/linux/sched.h:823:
+static inline struct mm_struct * get_task_mm(struct task_struct * task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: include/linux/sched.h:825:
+	struct mm_struct * mm;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: include/linux/sched.h:826:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: include/linux/sched.h:826:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: include/linux/sched.h:835:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: include/linux/sched.h:835:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: include/linux/sched.h:836:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: include/linux/sched.h:836:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: include/linux/sched.h:836:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 16 warnings, 4 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
