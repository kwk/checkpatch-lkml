ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: drivers/video/fbsplash.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: drivers/video/fbsplash.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#38: FILE: drivers/video/fbsplash.c:2:
+ *  linux/drivers/video/fbsplash.c -- Framebuffer splash core interface

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: drivers/video/fbsplash.c:6:
+ *  Code based upon "Bootsplash" (C) 2001-2003 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: drivers/video/fbsplash.c:14:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: drivers/video/fbsplash.c:18:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#74: FILE: drivers/video/fbsplash.c:38:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: drivers/video/fbsplash.c:45:
+#define SPLASH_VERSION ^I^I"0.9.2"$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#83: FILE: drivers/video/fbsplash.c:47:
+extern signed char con2fb_map[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#87: FILE: drivers/video/fbsplash.c:51:
+int fbsplash_call_helper(char* cmd, unsigned short vc)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#89: FILE: drivers/video/fbsplash.c:53:
+	char *envp[] = {

CHECK:SPACING: No space is necessary after a cast
#97: FILE: drivers/video/fbsplash.c:61:
+	unsigned char fb = (int) con2fb_map[vc];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#99: FILE: drivers/video/fbsplash.c:63:
+	char *argv[] = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/video/fbsplash.c:73:
+	snprintf(tfb,5,"%d",fb);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/video/fbsplash.c:73:
+	snprintf(tfb,5,"%d",fb);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/video/fbsplash.c:73:
+	snprintf(tfb,5,"%d",fb);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/video/fbsplash.c:74:
+	snprintf(tcons,5,"%d",vc);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/video/fbsplash.c:74:
+	snprintf(tcons,5,"%d",vc);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/video/fbsplash.c:74:
+	snprintf(tcons,5,"%d",vc);
 	                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#118: FILE: drivers/video/fbsplash.c:82:
+	struct fb_info* info;

CHECK:SPACING: No space is necessary after a cast
#123: FILE: drivers/video/fbsplash.c:87:
+	info = registered_fb[(int) con2fb_map[vc->vc_num]];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#125: FILE: drivers/video/fbsplash.c:89:
+	if (info == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/video/fbsplash.c:92:
+^Ivc->vc_splash.state = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/video/fbsplash.c:93:
+^Ivc_resize(vc->vc_num, info->var.xres / vc->vc_font.width, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/video/fbsplash.c:98:
+^I^Iupdate_region(fg_console, vc->vc_origin + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/video/fbsplash.c:99:
+^I^I^I      vc->vc_size_row * vc->vc_top, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/video/fbsplash.c:103:
+^Iprintk(KERN_INFO "fbsplash: switched splash state to 'off' on console %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#139: FILE: drivers/video/fbsplash.c:103:
+	printk(KERN_INFO "fbsplash: switched splash state to 'off' on console %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/video/fbsplash.c:104:
+	printk(KERN_INFO "fbsplash: switched splash state to 'off' on console %d\n", 
+			 vc->vc_num);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#148: FILE: drivers/video/fbsplash.c:112:
+	struct fb_info* info;

CHECK:SPACING: No space is necessary after a cast
#150: FILE: drivers/video/fbsplash.c:114:
+	info = registered_fb[(int) con2fb_map[vc->vc_num]];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/video/fbsplash.c:115:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/video/fbsplash.c:116:
+^Iif (vc->vc_splash.twidth == 0 || vc->vc_splash.theight == 0 || $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#153: FILE: drivers/video/fbsplash.c:117:
+	    info == NULL || vc->vc_splash.state || (!info->splash.data &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/video/fbsplash.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/video/fbsplash.c:122:
+^Ivc_resize(vc->vc_num, vc->vc_splash.twidth / vc->vc_font.width, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/video/fbsplash.c:127:
+^I^Iupdate_region(fg_console, vc->vc_origin + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/video/fbsplash.c:128:
+^I^I^I      vc->vc_size_row * vc->vc_top, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/video/fbsplash.c:133:
+^Iprintk(KERN_INFO "fbsplash: switched splash state to 'on' on console %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#169: FILE: drivers/video/fbsplash.c:133:
+	printk(KERN_INFO "fbsplash: switched splash state to 'on' on console %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/video/fbsplash.c:134:
+	printk(KERN_INFO "fbsplash: switched splash state to 'on' on console %d\n", 
+			 vc->vc_num);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#175: FILE: drivers/video/fbsplash.c:139:
+static inline int fbsplash_ioctl_dosetstate(struct vc_data *vc, unsigned int __user* state, unsigned char origin)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#175: FILE: drivers/video/fbsplash.c:139:
+static inline int fbsplash_ioctl_dosetstate(struct vc_data *vc, unsigned int __user* state, unsigned char origin)

CHECK:SPACING: No space is necessary after a cast
#196: FILE: drivers/video/fbsplash.c:160:
+	return put_user(vc->vc_splash.state, (unsigned int __user*) state);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#196: FILE: drivers/video/fbsplash.c:160:
+	return put_user(vc->vc_splash.state, (unsigned int __user*) state);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#199: FILE: drivers/video/fbsplash.c:163:
+static int fbsplash_ioctl_dosetcfg(struct vc_data *vc, struct vc_splash __user *arg, unsigned char origin)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/video/fbsplash.c:169:
+^I$

CHECK:SPACING: No space is necessary after a cast
#206: FILE: drivers/video/fbsplash.c:170:
+	info = registered_fb[(int) con2fb_map[vc->vc_num]];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/video/fbsplash.c:174:
+^Iif (info == NULL || !cfg.twidth || !cfg.theight || $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#210: FILE: drivers/video/fbsplash.c:174:
+	if (info == NULL || !cfg.twidth || !cfg.theight || 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/video/fbsplash.c:192:
+^I * new config and background picture will be successfully loaded, and the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: drivers/video/fbsplash.c:193:
+	 * splash will stay on, or in case of a failure it'll be turned off in fbcon. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#237: FILE: drivers/video/fbsplash.c:201:
+	if (vc->vc_splash.theme)
+		kfree(vc->vc_splash.theme);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/video/fbsplash.c:208:
+^Iprintk(KERN_INFO "fbsplash: console %d using theme '%s'\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#244: FILE: drivers/video/fbsplash.c:208:
+	printk(KERN_INFO "fbsplash: console %d using theme '%s'\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/video/fbsplash.c:209:
+	printk(KERN_INFO "fbsplash: console %d using theme '%s'\n", 
+			 vc->vc_num, vc->vc_splash.theme);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/video/fbsplash.c:210:
+^Ireturn 0;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/video/fbsplash.c:220:
+^I$

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: drivers/video/fbsplash.c:227:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#273: FILE: drivers/video/fbsplash.c:237:
+static int fbsplash_ioctl_dosetpic(struct vc_data *vc, struct fb_image __user *arg, unsigned char origin)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: drivers/video/fbsplash.c:243:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/video/fbsplash.c:244:
+^Iif (vc->vc_num != fg_console) $

CHECK:SPACING: No space is necessary after a cast
#283: FILE: drivers/video/fbsplash.c:247:
+	info = registered_fb[(int) con2fb_map[vc->vc_num]];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/video/fbsplash.c:248:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#285: FILE: drivers/video/fbsplash.c:249:
+	if (info == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/video/fbsplash.c:251:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/video/fbsplash.c:254:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#292: FILE: drivers/video/fbsplash.c:256:
+		printk(KERN_ERR "fbsplash: picture dimensions mismatch\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: drivers/video/fbsplash.c:261:
+		printk(KERN_ERR "fbsplash: picture depth mismatch\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/video/fbsplash.c:264:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/video/fbsplash.c:266:
+^I^Iif (!img.cmap.len || !img.cmap.red || !img.cmap.green || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/video/fbsplash.c:269:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#310: FILE: drivers/video/fbsplash.c:274:
+		if (copy_from_user(tmp, (void __user*)img.cmap.red, img.cmap.len * 2) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/video/fbsplash.c:276:
+^I^I^I    ^I   (void __user*)img.cmap.green, (img.cmap.len << 1)) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#312: FILE: drivers/video/fbsplash.c:276:
+^I^I^I    ^I   (void __user*)img.cmap.green, (img.cmap.len << 1)) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/video/fbsplash.c:276:
+		    copy_from_user(tmp + (img.cmap.len << 1),
+			    	   (void __user*)img.cmap.green, (img.cmap.len << 1)) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: drivers/video/fbsplash.c:276:
+			    	   (void __user*)img.cmap.green, (img.cmap.len << 1)) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/video/fbsplash.c:278:
+^I^I^I    ^I   (void __user*)img.cmap.blue, (img.cmap.len << 1))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: drivers/video/fbsplash.c:278:
+^I^I^I    ^I   (void __user*)img.cmap.blue, (img.cmap.len << 1))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/video/fbsplash.c:278:
+		    copy_from_user(tmp + (img.cmap.len << 2),
+			    	   (void __user*)img.cmap.blue, (img.cmap.len << 1))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#314: FILE: drivers/video/fbsplash.c:278:
+			    	   (void __user*)img.cmap.blue, (img.cmap.len << 1))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: drivers/video/fbsplash.c:282:
+^I^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#320: FILE: drivers/video/fbsplash.c:284:
+		img.cmap.red = (u16*)tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/video/fbsplash.c:290:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#333: FILE: drivers/video/fbsplash.c:297:
+	if (copy_from_user(tmp, (void __user*)img.data, len))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/video/fbsplash.c:299:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#339: FILE: drivers/video/fbsplash.c:303:
+	 * is already held. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/video/fbsplash.c:306:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#344: FILE: drivers/video/fbsplash.c:308:
+		vfree((u8*)info->splash.data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/video/fbsplash.c:311:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#355: FILE: drivers/video/fbsplash.c:319:
+out:	if (img.cmap.red)
+		vfree(img.cmap.red);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#362: FILE: drivers/video/fbsplash.c:326:
+static int splash_ioctl(struct inode * inode, struct file *filp, u_int cmd, 
                                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: drivers/video/fbsplash.c:326:
+static int splash_ioctl(struct inode * inode, struct file *filp, u_int cmd, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: drivers/video/fbsplash.c:326:
+static int splash_ioctl(struct inode * inode, struct file *filp, u_int cmd, 

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/video/fbsplash.c:329:
+	struct fb_splash_iowrapper __user *wrapper = (void __user*) arg;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#365: FILE: drivers/video/fbsplash.c:329:
+	struct fb_splash_iowrapper __user *wrapper = (void __user*) arg;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/video/fbsplash.c:334:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/video/fbsplash.c:335:
+^Iif (verify_area(VERIFY_READ, wrapper, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/video/fbsplash.c:338:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: drivers/video/fbsplash.c:342:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/video/fbsplash.c:347:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#386: FILE: drivers/video/fbsplash.c:350:
+		return fbsplash_ioctl_dosetpic(vc, (struct fb_image __user*)data, origin);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#388: FILE: drivers/video/fbsplash.c:352:
+		return fbsplash_ioctl_dosetcfg(vc, (struct vc_splash*)data, origin);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#390: FILE: drivers/video/fbsplash.c:354:
+		return fbsplash_ioctl_dogetcfg(vc, (struct vc_splash*)data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: drivers/video/fbsplash.c:361:
+^I}^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#400: FILE: drivers/video/fbsplash.c:364:
+static struct file_operations splash_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/video/fbsplash.c:380:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/video/fbsplash.c:390:
+^I^Ivc_cons[i].d->vc_splash.state = vc_cons[i].d->vc_splash.twidth = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#426: FILE: drivers/video/fbsplash.c:390:
+		vc_cons[i].d->vc_splash.state = vc_cons[i].d->vc_splash.twidth = 

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#433: FILE: drivers/video/fbsplash.c:397:
+		printk(KERN_ERR "fbsplash: failed to register device\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/video/fbsplash.c:402:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#442: FILE: drivers/video/fbsplash.c:406:
+EXPORT_SYMBOL(fbsplash_path);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201314.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 25 warnings, 18 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201314.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
