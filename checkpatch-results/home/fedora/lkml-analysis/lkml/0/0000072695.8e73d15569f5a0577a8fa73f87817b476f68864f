WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/infiniband/hw/amso1100/c2.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#93: FILE: drivers/infiniband/hw/amso1100/c2.c:49:
+#include <asm/io.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/infiniband/hw/amso1100/c2.c:63:
+    | NETIF_MSG_IFUP | NETIF_MSG_IFDOWN;$

WARNING:SPLIT_STRING: quoted string split across lines
#134: FILE: drivers/infiniband/hw/amso1100/c2.c:90:
+	dprintk("%s: MAC %02X:%02X:%02X:%02X:%02X:%02X, "
+		"IRQ %u\n", netdev->name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "netdev"
#144: FILE: drivers/infiniband/hw/amso1100/c2.c:100:
+	assert(netdev != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: drivers/infiniband/hw/amso1100/c2.c:115:
+			    dma_addr_t base, void __iomem * mmio_txp_ring)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#166: FILE: drivers/infiniband/hw/amso1100/c2.c:122:
+	tx_ring->start = kmalloc(sizeof(*elem) * tx_ring->count, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#179: FILE: drivers/infiniband/hw/amso1100/c2.c:135:
+			     (void __iomem *) txp_desc + C2_TXP_ADDR);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#180: FILE: drivers/infiniband/hw/amso1100/c2.c:136:
+		__raw_writew(0, (void __iomem *) txp_desc + C2_TXP_LEN);

CHECK:SPACING: No space is necessary after a cast
#182: FILE: drivers/infiniband/hw/amso1100/c2.c:138:
+			     (void __iomem *) txp_desc + C2_TXP_FLAGS);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#198: FILE: drivers/infiniband/hw/amso1100/c2.c:154:
+	tx_ring->to_use = tx_ring->to_clean = tx_ring->start;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/infiniband/hw/amso1100/c2.c:164:
+			    dma_addr_t base, void __iomem * mmio_rxp_ring)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#215: FILE: drivers/infiniband/hw/amso1100/c2.c:171:
+	rx_ring->start = kmalloc(sizeof(*elem) * rx_ring->count, GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/infiniband/hw/amso1100/c2.c:184:
+		__raw_writew(cpu_to_be16(RXP_HRXD_OK),
+		       (void __iomem *) rxp_desc + C2_RXP_STATUS);

CHECK:SPACING: No space is necessary after a cast
#228: FILE: drivers/infiniband/hw/amso1100/c2.c:184:
+		       (void __iomem *) rxp_desc + C2_RXP_STATUS);

CHECK:SPACING: No space is necessary after a cast
#229: FILE: drivers/infiniband/hw/amso1100/c2.c:185:
+		__raw_writew(0, (void __iomem *) rxp_desc + C2_RXP_COUNT);

CHECK:SPACING: No space is necessary after a cast
#230: FILE: drivers/infiniband/hw/amso1100/c2.c:186:
+		__raw_writew(0, (void __iomem *) rxp_desc + C2_RXP_LEN);

CHECK:SPACING: No space is necessary after a cast
#232: FILE: drivers/infiniband/hw/amso1100/c2.c:188:
+			     (void __iomem *) rxp_desc + C2_RXP_ADDR);

CHECK:SPACING: No space is necessary after a cast
#234: FILE: drivers/infiniband/hw/amso1100/c2.c:190:
+			     (void __iomem *) rxp_desc + C2_RXP_FLAGS);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#250: FILE: drivers/infiniband/hw/amso1100/c2.c:206:
+	rx_ring->to_use = rx_ring->to_clean = rx_ring->start;

CHECK:SPACING: No space is necessary after a cast
#283: FILE: drivers/infiniband/hw/amso1100/c2.c:239:
+	rxp_hdr = (struct c2_rxp_hdr *) skb->data;

CHECK:SPACING: No space is necessary after a cast
#287: FILE: drivers/infiniband/hw/amso1100/c2.c:243:
+	__raw_writew(cpu_to_be16((u16) maplen - sizeof(*rxp_hdr)),

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#398: FILE: drivers/infiniband/hw/amso1100/c2.c:354:
+				break;
+			} else {

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#447: FILE: drivers/infiniband/hw/amso1100/c2.c:403:
+			dprintk("%s: tx done slot %3Zu status 0x%x len "

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: drivers/infiniband/hw/amso1100/c2.c:404:
+			dprintk("%s: tx done slot %3Zu status 0x%x len "
+				"%5u bytes\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#460: FILE: drivers/infiniband/hw/amso1100/c2.c:416:
+	if (netif_queue_stopped(netdev)
+	    && c2_port->tx_avail > MAX_SKB_FRAGS + 1)

CHECK:SPACING: No space is necessary after a cast
#469: FILE: drivers/infiniband/hw/amso1100/c2.c:425:
+	struct c2_rxp_hdr *rxp_hdr = (struct c2_rxp_hdr *) elem->skb->data;

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#475: FILE: drivers/infiniband/hw/amso1100/c2.c:431:
+		dprintk("    index : %Zu\n",

CHECK:SPACING: No space is necessary after a cast
#479: FILE: drivers/infiniband/hw/amso1100/c2.c:435:
+			(void *) __pa((unsigned long) rxp_hdr));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#487: FILE: drivers/infiniband/hw/amso1100/c2.c:443:
+	elem->skb->tail = elem->skb->data = elem->skb->head;

CHECK:SPACING: No space is necessary after a cast
#495: FILE: drivers/infiniband/hw/amso1100/c2.c:451:
+	__raw_writew(cpu_to_be16((u16) elem->maplen - sizeof(*rxp_hdr)),

CHECK:SPACING: No space is necessary after a cast
#528: FILE: drivers/infiniband/hw/amso1100/c2.c:484:
+		rxp_hdr = (struct c2_rxp_hdr *) skb->data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/infiniband/hw/amso1100/c2.c:497:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: drivers/infiniband/hw/amso1100/c2.c:498:
+^I^I * Allocate and map a new skb for replenishing the host $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/infiniband/hw/amso1100/c2.c:499:
+^I^I * RX desc $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/infiniband/hw/amso1100/c2.c:511:
+^I^I * Skip past the leading 8 bytes comprising of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: drivers/infiniband/hw/amso1100/c2.c:512:
+^I^I * "struct c2_rxp_hdr", prepended by the adapter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: drivers/infiniband/hw/amso1100/c2.c:513:
+^I^I * to the usual Ethernet header ("struct ethhdr"), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/infiniband/hw/amso1100/c2.c:515:
+^I^I * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: drivers/infiniband/hw/amso1100/c2.c:516:
+^I^I * Fix up the various fields in the sk_buff before $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: drivers/infiniband/hw/amso1100/c2.c:517:
+^I^I * passing it up to netif_rx(). The transfer size $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/infiniband/hw/amso1100/c2.c:518:
+^I^I * (in bytes) specified by the adapter len field of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: drivers/infiniband/hw/amso1100/c2.c:519:
+^I^I * the "struct rxp_hdr_t" does NOT include the $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: drivers/infiniband/hw/amso1100/c2.c:535:
+^I^I^I^I+ 6  ^I/* arp src hw addr */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: drivers/infiniband/hw/amso1100/c2.c:536:
+^I^I^I^I+ 4 ^I/* arp src proto addr */$

WARNING:SPLIT_STRING: quoted string split across lines
#584: FILE: drivers/infiniband/hw/amso1100/c2.c:540:
+				dprintk("Dropping arp req for"
+					" %03d.%03d.%03d.%03d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: drivers/infiniband/hw/amso1100/c2.c:541:
+^I^I^I^I^Itpa[0], tpa[1], tpa[2], tpa[3]); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/infiniband/hw/amso1100/c2.c:545:
+^I^I} $

CHECK:SPACING: No space is necessary after a cast
#613: FILE: drivers/infiniband/hw/amso1100/c2.c:569:
+	struct c2_dev *c2dev = (struct c2_dev *) dev_id;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c2dev"
#615: FILE: drivers/infiniband/hw/amso1100/c2.c:571:
+	assert(c2dev != NULL);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#620: FILE: drivers/infiniband/hw/amso1100/c2.c:576:
+	if (netisr0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: drivers/infiniband/hw/amso1100/c2.c:579:
+^I^I * provides the status of RX for both TX & RX $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#642: FILE: drivers/infiniband/hw/amso1100/c2.c:598:
+	if (handled) {
[...]
+	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c2dev"
#659: FILE: drivers/infiniband/hw/amso1100/c2.c:615:
+	assert(c2dev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c2_port->mem"
#674: FILE: drivers/infiniband/hw/amso1100/c2.c:630:
+	if (c2_port->mem == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#676: FILE: drivers/infiniband/hw/amso1100/c2.c:632:
+		dprintk("Unable to allocate memory for "
+			"host descriptor rings\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#683: FILE: drivers/infiniband/hw/amso1100/c2.c:639:
+	if ((ret =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#697: FILE: drivers/infiniband/hw/amso1100/c2.c:653:
+	if ((ret = c2_tx_ring_alloc(&c2_port->tx_ring, c2_port->mem + rx_size,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#706: FILE: drivers/infiniband/hw/amso1100/c2.c:662:
+	c2_port->tx_ring.to_use = c2_port->tx_ring.to_clean =

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#711: FILE: drivers/infiniband/hw/amso1100/c2.c:667:
+	BUG_ON(c2_port->tx_ring.to_use != c2_port->tx_ring.to_clean);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#719: FILE: drivers/infiniband/hw/amso1100/c2.c:675:
+		rxp_hdr = (struct c2_rxp_hdr *) elem->skb->data;

WARNING:INDENTED_LABEL: labels should not be indented
#736: FILE: drivers/infiniband/hw/amso1100/c2.c:692:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#740: FILE: drivers/infiniband/hw/amso1100/c2.c:696:
+      bail0:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'c2_reset', this function's name, in a string
#805: FILE: drivers/infiniband/hw/amso1100/c2.c:761:
+		dprintk("c2_reset: failed to quiesce the hardware!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#857: FILE: drivers/infiniband/hw/amso1100/c2.c:813:
+			skb_frag_t *frag = &skb_shinfo(skb)->frags[i];
+			maplen = frag->size;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#940: FILE: drivers/infiniband/hw/amso1100/c2.c:896:
+				     void __iomem * mmio_addr)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#988: FILE: drivers/infiniband/hw/amso1100/c2.c:944:
+static int __devinit c2_probe(struct pci_dev *pcidev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#995: FILE: drivers/infiniband/hw/amso1100/c2.c:951:
+	unsigned kva_map_size;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pcidev"
#1000: FILE: drivers/infiniband/hw/amso1100/c2.c:956:
+	assert(pcidev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ent"
#1001: FILE: drivers/infiniband/hw/amso1100/c2.c:957:
+	assert(ent != NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1003: FILE: drivers/infiniband/hw/amso1100/c2.c:959:
+	printk(KERN_INFO PFX "AMSO1100 Gigabit Ethernet driver v%s loaded\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/infiniband/hw/amso1100/c2.c:960:
+	printk(KERN_INFO PFX "AMSO1100 Gigabit Ethernet driver v%s loaded\n",
+		DRV_VERSION);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1009: FILE: drivers/infiniband/hw/amso1100/c2.c:965:
+		printk(KERN_ERR PFX "%s: Unable to enable PCI device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/infiniband/hw/amso1100/c2.c:966:
+		printk(KERN_ERR PFX "%s: Unable to enable PCI device\n",
+			pci_name(pcidev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1033: FILE: drivers/infiniband/hw/amso1100/c2.c:989:
+		printk(KERN_ERR PFX "PCI regions not an MMIO resource\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg0_len < C2_REG0_SIZE'
#1039: FILE: drivers/infiniband/hw/amso1100/c2.c:995:
+	if ((reg0_len < C2_REG0_SIZE) ||
+	    (reg2_len < C2_REG2_SIZE) || (reg4_len < C2_REG4_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg2_len < C2_REG2_SIZE'
#1039: FILE: drivers/infiniband/hw/amso1100/c2.c:995:
+	if ((reg0_len < C2_REG0_SIZE) ||
+	    (reg2_len < C2_REG2_SIZE) || (reg4_len < C2_REG4_SIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg4_len < C2_REG4_SIZE'
#1039: FILE: drivers/infiniband/hw/amso1100/c2.c:995:
+	if ((reg0_len < C2_REG0_SIZE) ||
+	    (reg2_len < C2_REG2_SIZE) || (reg4_len < C2_REG4_SIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1041: FILE: drivers/infiniband/hw/amso1100/c2.c:997:
+		printk(KERN_ERR PFX "Invalid PCI region sizes\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1049: FILE: drivers/infiniband/hw/amso1100/c2.c:1005:
+		printk(KERN_ERR PFX "%s: Unable to request regions\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/infiniband/hw/amso1100/c2.c:1006:
+		printk(KERN_ERR PFX "%s: Unable to request regions\n",
+			pci_name(pcidev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1057: FILE: drivers/infiniband/hw/amso1100/c2.c:1013:
+			printk(KERN_ERR PFX "64b DMA configuration failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1063: FILE: drivers/infiniband/hw/amso1100/c2.c:1019:
+			printk(KERN_ERR PFX "32b DMA configuration failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1075: FILE: drivers/infiniband/hw/amso1100/c2.c:1031:
+		printk(KERN_ERR PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1084: FILE: drivers/infiniband/hw/amso1100/c2.c:1040:
+			printk(KERN_ERR PFX "Downlevel Firmware boot loader "

WARNING:SPLIT_STRING: quoted string split across lines
#1085: FILE: drivers/infiniband/hw/amso1100/c2.c:1041:
+			printk(KERN_ERR PFX "Downlevel Firmware boot loader "
+				"[%d/%Zd: got 0x%x, exp 0x%x]. Use the cc_flash "

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#1085: FILE: drivers/infiniband/hw/amso1100/c2.c:1041:
+				"[%d/%Zd: got 0x%x, exp 0x%x]. Use the cc_flash "

WARNING:SPLIT_STRING: quoted string split across lines
#1086: FILE: drivers/infiniband/hw/amso1100/c2.c:1042:
+				"[%d/%Zd: got 0x%x, exp 0x%x]. Use the cc_flash "
+			       "utility to update your boot loader\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1090: FILE: drivers/infiniband/hw/amso1100/c2.c:1046:
+			printk(KERN_ERR PFX "Adapter not claimed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1099: FILE: drivers/infiniband/hw/amso1100/c2.c:1055:
+		printk(KERN_ERR PFX "Version mismatch "

WARNING:SPLIT_STRING: quoted string split across lines
#1100: FILE: drivers/infiniband/hw/amso1100/c2.c:1056:
+		printk(KERN_ERR PFX "Version mismatch "
+			"[fw=%u, c2=%u], Adapter not claimed\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1110: FILE: drivers/infiniband/hw/amso1100/c2.c:1066:
+		printk(KERN_ERR PFX "Downlevel FIrmware level. You should be using "

WARNING:SPLIT_STRING: quoted string split across lines
#1111: FILE: drivers/infiniband/hw/amso1100/c2.c:1067:
+		printk(KERN_ERR PFX "Downlevel FIrmware level. You should be using "
+		       "the OpenIB device support kit. "

WARNING:SPLIT_STRING: quoted string split across lines
#1112: FILE: drivers/infiniband/hw/amso1100/c2.c:1068:
+		       "the OpenIB device support kit. "
+		       "[fw=0x%x, c2=0x%x], Adapter not claimed\n",

CHECK:SPACING: No space is necessary after a cast
#1121: FILE: drivers/infiniband/hw/amso1100/c2.c:1077:
+	c2dev = (struct c2_dev *) ib_alloc_device(sizeof *c2dev);

WARNING:SIZEOF_PARENTHESIS: sizeof *c2dev should be sizeof(*c2dev)
#1121: FILE: drivers/infiniband/hw/amso1100/c2.c:1077:
+	c2dev = (struct c2_dev *) ib_alloc_device(sizeof *c2dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1123: FILE: drivers/infiniband/hw/amso1100/c2.c:1079:
+		printk(KERN_ERR PFX "%s: Unable to alloc hardware struct\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1124: FILE: drivers/infiniband/hw/amso1100/c2.c:1080:
+		printk(KERN_ERR PFX "%s: Unable to alloc hardware struct\n",
+			pci_name(pcidev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1143: FILE: drivers/infiniband/hw/amso1100/c2.c:1099:
+		printk(KERN_ERR PFX "%s: requested IRQ %u is busy\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1144: FILE: drivers/infiniband/hw/amso1100/c2.c:1100:
+		printk(KERN_ERR PFX "%s: requested IRQ %u is busy\n",
+			pci_name(pcidev), pcidev->irq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1153: FILE: drivers/infiniband/hw/amso1100/c2.c:1109:
+	if ((netdev = c2_devinit(c2dev, mmio_regs)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1167: FILE: drivers/infiniband/hw/amso1100/c2.c:1123:
+		printk(KERN_ERR PFX "Unable to register netdev, ret = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1168: FILE: drivers/infiniband/hw/amso1100/c2.c:1124:
+		printk(KERN_ERR PFX "Unable to register netdev, ret = %d\n",
+			ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1179: FILE: drivers/infiniband/hw/amso1100/c2.c:1135:
+		printk(KERN_ERR PFX "Unable to remap MMIO HRXDQ region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1188: FILE: drivers/infiniband/hw/amso1100/c2.c:1144:
+		printk(KERN_ERR PFX "Unable to remap MMIO HTXDQ region\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1199: FILE: drivers/infiniband/hw/amso1100/c2.c:1155:
+		printk(KERN_ERR PFX "Unable to remap BAR0\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: drivers/infiniband/hw/amso1100/c2.c:1162:
+^Ic2dev->kva = ioremap_nocache(reg4_start + C2_PCI_REGS_OFFSET, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1209: FILE: drivers/infiniband/hw/amso1100/c2.c:1165:
+		printk(KERN_ERR PFX "Unable to remap BAR4\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1219: FILE: drivers/infiniband/hw/amso1100/c2.c:1175:
+		printk(KERN_ERR PFX "c2_rnic_init failed: %d\n", ret);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1261: FILE: drivers/infiniband/hw/amso1100/c2.c:1217:
+static void __devexit c2_remove(struct pci_dev *pcidev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "netdev"
#1266: FILE: drivers/infiniband/hw/amso1100/c2.c:1222:
+	assert(netdev != NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1329: FILE: drivers/infiniband/hw/amso1100/c2.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1381: FILE: drivers/infiniband/hw/amso1100/c2.h:53:
+#define assert(expr)                                                  \
+    if(!(expr)) {                                                     \
+        printk(KERN_ERR PFX "Assertion failed! %s, %s, %s, line %d\n",\
+               #expr, __FILE__, __FUNCTION__, __LINE__);              \
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: drivers/infiniband/hw/amso1100/c2.h:54:
+    if(!(expr)) {                                                     \$

ERROR:SPACING: space required before the open parenthesis '('
#1382: FILE: drivers/infiniband/hw/amso1100/c2.h:54:
+    if(!(expr)) {                                                     \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1383: FILE: drivers/infiniband/hw/amso1100/c2.h:55:
+        printk(KERN_ERR PFX "Assertion failed! %s, %s, %s, line %d\n",\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: drivers/infiniband/hw/amso1100/c2.h:55:
+        printk(KERN_ERR PFX "Assertion failed! %s, %s, %s, line %d\n",\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1383: FILE: drivers/infiniband/hw/amso1100/c2.h:55:
+        printk(KERN_ERR PFX "Assertion failed! %s, %s, %s, line %d\n",\

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: drivers/infiniband/hw/amso1100/c2.h:56:
+               #expr, __FILE__, __FUNCTION__, __LINE__);              \$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1384: FILE: drivers/infiniband/hw/amso1100/c2.h:56:
+               #expr, __FILE__, __FUNCTION__, __LINE__);              \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: drivers/infiniband/hw/amso1100/c2.h:57:
+    }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1386: FILE: drivers/infiniband/hw/amso1100/c2.h:58:
+#define dprintk(fmt, args...) do {printk(KERN_INFO PFX fmt, ##args);} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1386: FILE: drivers/infiniband/hw/amso1100/c2.h:58:
+#define dprintk(fmt, args...) do {printk(KERN_INFO PFX fmt, ##args);} while (0)
                                                                    ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1386: FILE: drivers/infiniband/hw/amso1100/c2.h:58:
+#define dprintk(fmt, args...) do {printk(KERN_INFO PFX fmt, ##args);} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1408: FILE: drivers/infiniband/hw/amso1100/c2.h:80:
+#define C2_RXP_HRXDQ_OFFSET (((C2_REG4_SIZE)/2))
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1410: FILE: drivers/infiniband/hw/amso1100/c2.h:82:
+#define C2_TXP_HTXDQ_OFFSET (((C2_REG4_SIZE)/2) + C2_RXP_HRXDQ_SIZE)
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1412: FILE: drivers/infiniband/hw/amso1100/c2.h:84:
+#define C2_TX_TIMEOUT	    (6*HZ)
                      	      ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1541: FILE: drivers/infiniband/hw/amso1100/c2.h:213:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1549: FILE: drivers/infiniband/hw/amso1100/c2.h:221:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1556: FILE: drivers/infiniband/hw/amso1100/c2.h:228:
+} __attribute__ ((packed));

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1573: FILE: drivers/infiniband/hw/amso1100/c2.h:245:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1604: FILE: drivers/infiniband/hw/amso1100/c2.h:276:
+	spinlock_t lock;

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#1606: FILE: drivers/infiniband/hw/amso1100/c2.h:278:
+	struct c2_qp** map;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1630: FILE: drivers/infiniband/hw/amso1100/c2.h:302:
+	spinlock_t lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1666: FILE: drivers/infiniband/hw/amso1100/c2.h:338:
+	 * target queue */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1699: FILE: drivers/infiniband/hw/amso1100/c2.h:371:
+	spinlock_t tx_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1722: FILE: drivers/infiniband/hw/amso1100/c2.h:394:
+#define CQ_ARMED ^I0x01$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hint_count' may be better as '(hint_count)' to avoid precedence issues
#1733: FILE: drivers/infiniband/hw/amso1100/c2.h:405:
+#define C2_HINT_MAKE(q_index, hint_count) (((q_index) << 16) | hint_count)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1737: FILE: drivers/infiniband/hw/amso1100/c2.h:409:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1740: FILE: drivers/infiniband/hw/amso1100/c2.h:412:
+ * struct. $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1745: FILE: drivers/infiniband/hw/amso1100/c2.h:417:
+static inline u64 readq(const void __iomem * addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1748: FILE: drivers/infiniband/hw/amso1100/c2.h:420:
+	u64 ret = readl(addr + 4);
+	ret <<= 32;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1756: FILE: drivers/infiniband/hw/amso1100/c2.h:428:
+static inline void __raw_writeq(u64 val, void __iomem * addr)

CHECK:SPACING: No space is necessary after a cast
#1758: FILE: drivers/infiniband/hw/amso1100/c2.h:430:
+	__raw_writel((u32) (val), addr);

CHECK:SPACING: No space is necessary after a cast
#1759: FILE: drivers/infiniband/hw/amso1100/c2.h:431:
+	__raw_writel((u32) (val >> 32), (addr + 4));

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c2dev' may be better as '(c2dev)' to avoid precedence issues
#1763: FILE: drivers/infiniband/hw/amso1100/c2.h:435:
+#define C2_SET_CUR_RX(c2dev, cur_rx) \
+	__raw_writel(cpu_to_be32(cur_rx), c2dev->mmio_txp_ring + 4092)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c2dev' may be better as '(c2dev)' to avoid precedence issues
#1766: FILE: drivers/infiniband/hw/amso1100/c2.h:438:
+#define C2_GET_CUR_RX(c2dev) \
+	be32_to_cpu(readl(c2dev->mmio_txp_ring + 4092))

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1794: FILE: drivers/infiniband/hw/amso1100/c2.h:466:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1819: FILE: drivers/infiniband/hw/amso1100/c2.h:491:
+extern int c2_register_device(struct c2_dev *c2dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1820: FILE: drivers/infiniband/hw/amso1100/c2.h:492:
+extern void c2_unregister_device(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1821: FILE: drivers/infiniband/hw/amso1100/c2.h:493:
+extern int c2_rnic_init(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1822: FILE: drivers/infiniband/hw/amso1100/c2.h:494:
+extern void c2_rnic_term(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1823: FILE: drivers/infiniband/hw/amso1100/c2.h:495:
+extern void c2_rnic_interrupt(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1824: FILE: drivers/infiniband/hw/amso1100/c2.h:496:
+extern int c2_rnic_query(struct c2_dev *c2dev, struct ib_device_attr *props);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1825: FILE: drivers/infiniband/hw/amso1100/c2.h:497:
+extern int c2_del_addr(struct c2_dev *c2dev, u32 inaddr, u32 inmask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1826: FILE: drivers/infiniband/hw/amso1100/c2.h:498:
+extern int c2_add_addr(struct c2_dev *c2dev, u32 inaddr, u32 inmask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1829: FILE: drivers/infiniband/hw/amso1100/c2.h:501:
+extern int c2_alloc_qp(struct c2_dev *c2dev, struct c2_pd *pd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1831: FILE: drivers/infiniband/hw/amso1100/c2.h:503:
+extern void c2_free_qp(struct c2_dev *c2dev, struct c2_qp *qp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1832: FILE: drivers/infiniband/hw/amso1100/c2.h:504:
+extern struct ib_qp *c2_get_qp(struct ib_device *device, int qpn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1833: FILE: drivers/infiniband/hw/amso1100/c2.h:505:
+extern int c2_qp_modify(struct c2_dev *c2dev, struct c2_qp *qp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1835: FILE: drivers/infiniband/hw/amso1100/c2.h:507:
+extern int c2_qp_set_read_limits(struct c2_dev *c2dev, struct c2_qp *qp, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1835: FILE: drivers/infiniband/hw/amso1100/c2.h:507:
+extern int c2_qp_set_read_limits(struct c2_dev *c2dev, struct c2_qp *qp, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1837: FILE: drivers/infiniband/hw/amso1100/c2.h:509:
+extern int c2_post_send(struct ib_qp *ibqp, struct ib_send_wr *ib_wr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1839: FILE: drivers/infiniband/hw/amso1100/c2.h:511:
+extern int c2_post_receive(struct ib_qp *ibqp, struct ib_recv_wr *ib_wr,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1841: FILE: drivers/infiniband/hw/amso1100/c2.h:513:
+extern int __devinit c2_init_qp_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1841: FILE: drivers/infiniband/hw/amso1100/c2.h:513:
+extern int __devinit c2_init_qp_table(struct c2_dev *c2dev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1842: FILE: drivers/infiniband/hw/amso1100/c2.h:514:
+extern void __devexit c2_cleanup_qp_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1842: FILE: drivers/infiniband/hw/amso1100/c2.h:514:
+extern void __devexit c2_cleanup_qp_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1843: FILE: drivers/infiniband/hw/amso1100/c2.h:515:
+extern void c2_set_qp_state(struct c2_qp *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct c2_qp *' should also have an identifier name
#1843: FILE: drivers/infiniband/hw/amso1100/c2.h:515:
+extern void c2_set_qp_state(struct c2_qp *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1843: FILE: drivers/infiniband/hw/amso1100/c2.h:515:
+extern void c2_set_qp_state(struct c2_qp *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1846: FILE: drivers/infiniband/hw/amso1100/c2.h:518:
+extern int c2_pd_alloc(struct c2_dev *c2dev, int privileged, struct c2_pd *pd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1847: FILE: drivers/infiniband/hw/amso1100/c2.h:519:
+extern void c2_pd_free(struct c2_dev *c2dev, struct c2_pd *pd);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1848: FILE: drivers/infiniband/hw/amso1100/c2.h:520:
+extern int __devinit c2_init_pd_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1848: FILE: drivers/infiniband/hw/amso1100/c2.h:520:
+extern int __devinit c2_init_pd_table(struct c2_dev *c2dev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1849: FILE: drivers/infiniband/hw/amso1100/c2.h:521:
+extern void __devexit c2_cleanup_pd_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1849: FILE: drivers/infiniband/hw/amso1100/c2.h:521:
+extern void __devexit c2_cleanup_pd_table(struct c2_dev *c2dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1852: FILE: drivers/infiniband/hw/amso1100/c2.h:524:
+extern int c2_init_cq(struct c2_dev *c2dev, int entries,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1854: FILE: drivers/infiniband/hw/amso1100/c2.h:526:
+extern void c2_free_cq(struct c2_dev *c2dev, struct c2_cq *cq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1855: FILE: drivers/infiniband/hw/amso1100/c2.h:527:
+extern void c2_cq_event(struct c2_dev *c2dev, u32 mq_index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1856: FILE: drivers/infiniband/hw/amso1100/c2.h:528:
+extern void c2_cq_clean(struct c2_dev *c2dev, struct c2_qp *qp, u32 mq_index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1857: FILE: drivers/infiniband/hw/amso1100/c2.h:529:
+extern int c2_poll_cq(struct ib_cq *ibcq, int num_entries, struct ib_wc *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1858: FILE: drivers/infiniband/hw/amso1100/c2.h:530:
+extern int c2_arm_cq(struct ib_cq *ibcq, enum ib_cq_notify notify);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1861: FILE: drivers/infiniband/hw/amso1100/c2.h:533:
+extern int c2_llp_connect(struct iw_cm_id *cm_id, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1861: FILE: drivers/infiniband/hw/amso1100/c2.h:533:
+extern int c2_llp_connect(struct iw_cm_id *cm_id, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1863: FILE: drivers/infiniband/hw/amso1100/c2.h:535:
+extern int c2_llp_accept(struct iw_cm_id *cm_id, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1863: FILE: drivers/infiniband/hw/amso1100/c2.h:535:
+extern int c2_llp_accept(struct iw_cm_id *cm_id, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1865: FILE: drivers/infiniband/hw/amso1100/c2.h:537:
+extern int c2_llp_reject(struct iw_cm_id *cm_id, const void *pdata,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1867: FILE: drivers/infiniband/hw/amso1100/c2.h:539:
+extern int c2_llp_service_create(struct iw_cm_id *cm_id, int backlog);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1868: FILE: drivers/infiniband/hw/amso1100/c2.h:540:
+extern int c2_llp_service_destroy(struct iw_cm_id *cm_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1871: FILE: drivers/infiniband/hw/amso1100/c2.h:543:
+extern int c2_nsmr_register_phys_kern(struct c2_dev *c2dev, u64 *addr_list,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1872: FILE: drivers/infiniband/hw/amso1100/c2.h:544:
+ ^I^I^I^I      int page_size, int pbl_depth, u32 length, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1872: FILE: drivers/infiniband/hw/amso1100/c2.h:544:
+ ^I^I^I^I      int page_size, int pbl_depth, u32 length, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1872: FILE: drivers/infiniband/hw/amso1100/c2.h:544:
+ ^I^I^I^I      int page_size, int pbl_depth, u32 length, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1872: FILE: drivers/infiniband/hw/amso1100/c2.h:544:
+extern int c2_nsmr_register_phys_kern(struct c2_dev *c2dev, u64 *addr_list,
+ 				      int page_size, int pbl_depth, u32 length, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1872: FILE: drivers/infiniband/hw/amso1100/c2.h:544:
+ ^I^I^I^I      int page_size, int pbl_depth, u32 length, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1873: FILE: drivers/infiniband/hw/amso1100/c2.h:545:
+ ^I^I^I^I      u32 off, u64 *va, enum c2_acf acf, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1873: FILE: drivers/infiniband/hw/amso1100/c2.h:545:
+ ^I^I^I^I      u32 off, u64 *va, enum c2_acf acf, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1873: FILE: drivers/infiniband/hw/amso1100/c2.h:545:
+ ^I^I^I^I      u32 off, u64 *va, enum c2_acf acf, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1873: FILE: drivers/infiniband/hw/amso1100/c2.h:545:
+ ^I^I^I^I      u32 off, u64 *va, enum c2_acf acf, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1875: FILE: drivers/infiniband/hw/amso1100/c2.h:547:
+extern int c2_stag_dealloc(struct c2_dev *c2dev, u32 stag_index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1878: FILE: drivers/infiniband/hw/amso1100/c2.h:550:
+extern void c2_ae_event(struct c2_dev *c2dev, u32 mq_index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1881: FILE: drivers/infiniband/hw/amso1100/c2.h:553:
+extern u32 c2_alloc(struct c2_alloc *alloc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1882: FILE: drivers/infiniband/hw/amso1100/c2.h:554:
+extern void c2_free(struct c2_alloc *alloc, u32 obj);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1883: FILE: drivers/infiniband/hw/amso1100/c2.h:555:
+extern int c2_alloc_init(struct c2_alloc *alloc, u32 num, u32 reserved);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1884: FILE: drivers/infiniband/hw/amso1100/c2.h:556:
+extern void c2_alloc_cleanup(struct c2_alloc *alloc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1885: FILE: drivers/infiniband/hw/amso1100/c2.h:557:
+extern int c2_init_mqsp_pool(gfp_t gfp_mask, struct sp_chunk **root);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1886: FILE: drivers/infiniband/hw/amso1100/c2.h:558:
+extern void c2_free_mqsp_pool(struct sp_chunk *root);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1887: FILE: drivers/infiniband/hw/amso1100/c2.h:559:
+extern u16 *c2_alloc_mqsp(struct sp_chunk *head);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1888: FILE: drivers/infiniband/hw/amso1100/c2.h:560:
+extern void c2_free_mqsp(u16 * mqsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1888: FILE: drivers/infiniband/hw/amso1100/c2.h:560:
+extern void c2_free_mqsp(u16 * mqsp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1889: FILE: drivers/infiniband/hw/amso1100/c2.h:561:
+extern void c2_array_cleanup(struct c2_array *array, int nent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1890: FILE: drivers/infiniband/hw/amso1100/c2.h:562:
+extern int c2_array_init(struct c2_array *array, int nent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1891: FILE: drivers/infiniband/hw/amso1100/c2.h:563:
+extern void c2_array_clear(struct c2_array *array, int index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1892: FILE: drivers/infiniband/hw/amso1100/c2.h:564:
+extern int c2_array_set(struct c2_array *array, int index, void *value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1893: FILE: drivers/infiniband/hw/amso1100/c2.h:565:
+extern void *c2_array_get(struct c2_array *array, int index);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1902: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1963: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:62:
+		printk(KERN_ERR PFX

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1965: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:64:
+		       __FUNCTION__, c2_status);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1971: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:70:
+static const char* to_event_str(int event)

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1973: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:72:
+	static const char* event_str[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1973: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:72:
+	static const char* event_str[] = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:120:
+^Iif (event < CCAE_REMOTE_SHUTDOWN || $

WARNING:TYPO_SPELLING: 'retreive' may be misspelled - perhaps 'retrieve'?
#2064: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:163:
+	 * retreive the message
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#2076: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:175:
+	    (void *) (unsigned long) wr->ae.ae_generic.user_context;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2078: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:177:
+	status = cm_event.status = c2_convert_cm_status(c2_wr_get_result(wr));

WARNING:SPLIT_STRING: quoted string split across lines
#2081: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:180:
+	dprintk("event received c2_dev=%p, event_id=%d, "
+		"resource_indicator=%d, user_context=%p, status = %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2082: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:181:
+^I^Ic2dev, event_id, resource_indicator, resource_user_context, $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2087: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:186:
+	case C2_RES_IND_QP:{
+

WARNING:SPLIT_STRING: quoted string split across lines
#2098: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:197:
+		dprintk("%s: event = %s, user_context=%llx, "
+			"resource_type=%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#2099: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:198:
+			"resource_type=%x, "
+			"resource=%x, qp_state=%s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2100: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:199:
+			__FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2106: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:205:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2118: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:217:
+^I^I^I^Icm_event.private_data_len = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2136: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:235:
+^I^I^I^I^I/* Ignore the request, maybe the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2137: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:236:
+					 * remote peer will retry */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2138: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:237:
+					dprintk ("Ignored connect request -- "

WARNING:SPLIT_STRING: quoted string split across lines
#2139: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:238:
+					dprintk ("Ignored connect request -- "
+						 "no memory for pdata"

WARNING:SPLIT_STRING: quoted string split across lines
#2140: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:239:
+						 "no memory for pdata"
+						 "private_data_len=%d\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#2140: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:239:
+						 "no memory for pdata"
+						 "private_data_len=%d\n",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'qp->ibqp.qp_context'
#2162: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:261:
+						       qp->ibqp.
+						       qp_context);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2168: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:267:
+			BUG_ON(cm_id == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cm_id"
#2168: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:267:
+			BUG_ON(cm_id == NULL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2169: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:268:
+			BUG_ON(cm_id->event_handler==(void*)0x6b6b6b6b);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2169: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:268:
+			BUG_ON(cm_id->event_handler==(void*)0x6b6b6b6b);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2169: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:268:
+			BUG_ON(cm_id->event_handler==(void*)0x6b6b6b6b);
 			                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2183: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:282:
+			BUG_ON(1);

WARNING:SPLIT_STRING: quoted string split across lines
#2185: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:284:
+			dprintk("%s:%d Unexpected event_id=%d on QP=%p, "
+				"CM_ID=%p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2186: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:285:
+				__FUNCTION__, __LINE__,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2194: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:293:
+	case C2_RES_IND_EP:{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2195: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:294:
+^I^Istruct c2wr_ae_connection_request *req = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2197: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:296:
+^I^Istruct iw_cm_id *cm_id = $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2203: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:302:
+				__FUNCTION__, event_id);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2207: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:306:
+		cm_event.provider_data = (void*)(unsigned long)req->cr_handle;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2212: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:311:
+^I^Icm_event.private_data_len = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2220: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:319:
+^I^I^I^I/* Ignore the request, maybe the remote peer $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2221: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:320:
+				 * will retry */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2222: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:321:
+				dprintk ("Ignored connect request -- "

WARNING:SPLIT_STRING: quoted string split across lines
#2223: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:322:
+				dprintk ("Ignored connect request -- "
+					 "no memory for pdata"

WARNING:SPLIT_STRING: quoted string split across lines
#2224: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:323:
+					 "no memory for pdata"
+					 "private_data_len=%d\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#2224: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:323:
+					 "no memory for pdata"
+					 "private_data_len=%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2229: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:328:
+^I^I^I       req->private_data, $

CHECK:SPACING: No space is necessary after a cast
#2241: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:340:
+		    (struct c2_cq *) resource_user_context;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2254: FILE: drivers/infiniband/hw/amso1100/c2_ae.c:353:
+		printk("Bad resource indicator = %d\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2268: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:1:
+/*

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2316: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:49:
+		if (mq_index & 0x80000000) {
+			break;
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2324: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:57:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2327: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:60:
+ * Top level MQ handler $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c2dev->qptr_array[mq_index]"
#2331: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:64:
+	if (c2dev->qptr_array[mq_index] == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_mq', this function's name, in a string
#2332: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:65:
+		dprintk(KERN_INFO "handle_mq: stray activity for mq_index=%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2344: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:77:
+^I^I * Wake up any waiters waiting on req VQ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2345: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:78:
+^I^I * message availability.  $

WARNING:TYPO_SPELLING: 'disconenct' may be misspelled - perhaps 'disconnect'?
#2367: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:100:
+		 * FLUSH for a peer disconenct prior to the ESTABLISHED
 		                    ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2370: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:103:
+^I^I * and CM events are delivered on interrupt context. $

WARNING:RETURN_VOID: void function return statements are not generally useful
#2377: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:110:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#2392: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:125:
+	reply_vq = (struct c2_mq *) c2dev->qptr_array[mq_index];

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2399: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:132:
+	if (adapter_msg == NULL) {
+		return;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!adapter_msg"
#2399: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:132:
+	if (adapter_msg == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2406: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:139:
+^I * If we can't get a host buffer, then we'll still $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_vq', this function's name, in a string
#2411: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:144:
+		dprintk("handle_vq: no repbufs!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2413: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:146:
+^I^I/*      $

CHECK:SPACING: No space is necessary after a cast
#2433: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:166:
+	req = (struct c2_vq_req *) (unsigned long) host_msg->context;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#2434: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:167:
+	if (req == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_vq', this function's name, in a string
#2440: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:173:
+		dprintk("handle_vq: UNEXPECTEDLY got NULL req\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2445: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:178:
+	if (!err) switch (req->event) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2447: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:180:
+		BUG_ON(!req->qp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2451: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:184:
+		BUG_ON(!req->cm_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2452: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:185:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2453: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:186:
+^I^I * Move the QP to RTS if this is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2454: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:187:
+^I^I * the established event $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2462: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:195:
+		BUG_ON(req->cm_id->event_handler == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->cm_id->event_handler"
#2462: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:195:
+		BUG_ON(req->cm_id->event_handler == NULL);

CHECK:SPACING: No space is necessary after a cast
#2469: FILE: drivers/infiniband/hw/amso1100/c2_intr.c:202:
+	req->reply_msg = (u64) (unsigned long) (reply_msg);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2485: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2519: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:35:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2545: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:61:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2546: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:62:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2559: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:75:
+#define C2_MAX_QP_WR     ((128*1024)/C2_MAX_WQE_SZ)
                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2559: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:75:
+#define C2_MAX_QP_WR     ((128*1024)/C2_MAX_WQE_SZ)
                                     ^

CHECK:SPACING: No space is necessary after a cast
#2585: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:101:
+	err = vq_send_wr(c2dev, (union c2wr *) & wr);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2585: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:101:
+	err = vq_send_wr(c2dev, (union c2wr *) & wr);
 	                                       ^

CHECK:SPACING: No space is necessary after a cast
#2602: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:118:
+	vq_send_wr(c2dev, (union c2wr *) & wr);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#2602: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:118:
+	vq_send_wr(c2dev, (union c2wr *) & wr);
 	                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2606: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:122:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#2624: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:140:
+	wr.hdr.context = (unsigned long) vq_req;

CHECK:SPACING: No space is necessary after a cast
#2629: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:145:
+	err = vq_send_wr(c2dev, (union c2wr *) &wr);

CHECK:SPACING: No space is necessary after a cast
#2640: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:156:
+	    (struct c2wr_rnic_query_rep *) (unsigned long) (vq_req->reply_msg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2648: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:164:
+^Iprops->fw_ver = $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2654: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:170:
+	props->page_size_cap       = ~(C2_MIN_PAGESIZE-1);
 	                                              ^

CHECK:SPACING: No space is necessary after a cast
#2721: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:237:
+	wr->hdr.context = (unsigned long) vq_req;

CHECK:SPACING: No space is necessary after a cast
#2733: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:249:
+	err = vq_send_wr(c2dev, (union c2wr *) wr);

CHECK:SPACING: No space is necessary after a cast
#2744: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:260:
+	    (struct c2wr_rnic_setconfig_rep *) (unsigned long) (vq_req->reply_msg);

WARNING:INDENTED_LABEL: labels should not be indented
#2753: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:269:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#2755: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:271:
+      bail0:

CHECK:SPACING: No space is necessary after a cast
#2783: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:299:
+	wr->hdr.context = (unsigned long) vq_req;

CHECK:SPACING: No space is necessary after a cast
#2795: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:311:
+	err = vq_send_wr(c2dev, (union c2wr *) wr);

CHECK:SPACING: No space is necessary after a cast
#2806: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:322:
+	    (struct c2wr_rnic_setconfig_rep *) (unsigned long) (vq_req->reply_msg);

WARNING:INDENTED_LABEL: labels should not be indented
#2815: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:331:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#2817: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:333:
+      bail0:

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2834: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:350:
+	if (vq_req == NULL) {
+		return -ENOMEM;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vq_req"
#2834: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:350:
+	if (vq_req == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2840: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:356:
+	wr.rnic_open.req.hdr.context = (unsigned long) (vq_req);

CHECK:SPACING: No space is necessary after a cast
#2843: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:359:
+	wr.rnic_open.req.user_context = (unsigned long) c2dev;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2854: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:370:
+	if (err) {
+		goto bail0;
+	}

CHECK:SPACING: No space is necessary after a cast
#2858: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:374:
+	reply = (struct c2wr_rnic_open_rep *) (unsigned long) (vq_req->reply_msg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2864: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:380:
+	if ((err = c2_errno(reply)) != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2864: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:380:
+	if ((err = c2_errno(reply)) != 0) {
+		goto bail1;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#2870: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:386:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#2872: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:388:
+      bail0:

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2888: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:404:
+	if (vq_req == NULL) {
+		return -ENOMEM;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vq_req"
#2888: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:404:
+	if (vq_req == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2894: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:410:
+	wr.rnic_close.req.hdr.context = (unsigned long) vq_req;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2906: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:422:
+	if (err) {
+		goto bail0;
+	}

CHECK:SPACING: No space is necessary after a cast
#2910: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:426:
+	reply = (struct c2wr_rnic_close_rep *) (unsigned long) (vq_req->reply_msg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2916: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:432:
+	if ((err = c2_errno(reply)) != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2916: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:432:
+	if ((err = c2_errno(reply)) != 0) {
+		goto bail1;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#2922: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:438:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#2924: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:440:
+      bail0:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2941: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:457:
+		printk(KERN_ERR "NETEVENT_ROUTE_UPDATE:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2942: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:458:
+		printk(KERN_ERR "fib_flags           : %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2944: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:460:
+		printk(KERN_ERR "fib_protocol        : %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2946: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:462:
+		printk(KERN_ERR "fib_prefsrc         : %08x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2948: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:464:
+		printk(KERN_ERR "fib_priority        : %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2953: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:469:
+		printk(KERN_ERR "NETEVENT_NEIGH_UPDATE:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2954: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:470:
+		printk(KERN_ERR "nud_state : %d\n", neigh->nud_state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2955: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:471:
+		printk(KERN_ERR "refcnt    : %d\n", neigh->refcnt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2956: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:472:
+		printk(KERN_ERR "used      : %d\n", neigh->used);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2957: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:473:
+		printk(KERN_ERR "confirmed : %d\n", neigh->confirmed);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2958: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:474:
+		printk(KERN_ERR "      ha: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2961: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:477:
+			printk("%02x:%02x:%02x:%02x:", ha[0], ha[1], ha[2],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2964: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:480:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2966: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:482:
+		printk(KERN_ERR "%8s: ", neigh->dev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2969: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:485:
+			printk("%02x:%02x:%02x:%02x:", ha[0], ha[1], ha[2],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2972: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:488:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2976: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:492:
+		printk(KERN_ERR "NETEVENT_REDIRECT:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2977: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:493:
+		printk(KERN_ERR "old: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2980: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:496:
+			printk("%02x:%02x:%02x:%02x:", ha[0], ha[1], ha[2],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2983: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:499:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2985: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:501:
+		printk(KERN_ERR "new: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2988: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:504:
+			printk("%02x:%02x:%02x:%02x:", ha[0], ha[1], ha[2],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2991: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:507:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2995: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:511:
+		printk(KERN_ERR "NETEVENT_WTFO:\n");

WARNING:TYPO_SPELLING: 'initalizing' may be misspelled - perhaps 'initializing'?
#3007: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:523:
+ * involves initalizing the various limits and resouce pools that
             ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#3007: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:523:
+ * involves initalizing the various limits and resouce pools that
                                                ^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3028: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:544:
+	if (!c2dev->qptr_array) {
+		return -ENOMEM;
+	}

CHECK:SPACING: No space is necessary after a cast
#3034: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:550:
+	c2dev->qptr_array[0] = (void *) &c2dev->req_vq;

CHECK:SPACING: No space is necessary after a cast
#3035: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:551:
+	c2dev->qptr_array[1] = (void *) &c2dev->rep_vq;

CHECK:SPACING: No space is necessary after a cast
#3036: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:552:
+	c2dev->qptr_array[2] = (void *) &c2dev->aeq;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3047: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:563:
+	if (err) {
+		goto bail0;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3083: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:599:
+	c2_mq_rep_init(&c2dev->rep_vq,
+		   1,

WARNING:INDENTED_LABEL: labels should not be indented
#3146: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:662:
+      bail6:

WARNING:INDENTED_LABEL: labels should not be indented
#3148: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:664:
+      bail5:

WARNING:INDENTED_LABEL: labels should not be indented
#3150: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:666:
+      bail4:

WARNING:INDENTED_LABEL: labels should not be indented
#3152: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:668:
+      bail3:

WARNING:INDENTED_LABEL: labels should not be indented
#3154: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:670:
+      bail2:

WARNING:INDENTED_LABEL: labels should not be indented
#3156: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:672:
+      bail1:

WARNING:INDENTED_LABEL: labels should not be indented
#3158: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:674:
+      bail0:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3165: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:681:
+ * Called by c2_remove to cleanup the RNIC resources. $

WARNING:RETURN_VOID: void function return statements are not generally useful
#3204: FILE: drivers/infiniband/hw/amso1100/c2_rnic.c:720:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 167 warnings, 144 checks, 3136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
