ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: mm/mincore.c:27:
+static unsigned char mincore_page_inode(struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: mm/mincore.c:28:
+static unsigned char mincore_page_inode(struct vm_area_struct * vma,
 	unsigned long pgoff)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: mm/mincore.c:46:
+static unsigned char mincore_page_anon(struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#67: FILE: mm/mincore.c:50:
+	struct page * page;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#75: FILE: mm/mincore.c:58:
+	BUG_ON(address < vma->vm_start || address >= vma->vm_end);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#95: FILE: mm/mincore.c:78:
+	if (!pte_present(pte)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#97: FILE: mm/mincore.c:80:
+		swp_entry_t entry = pte_to_swp_entry(pte);
+		page = lookup_swap_cache(entry);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#102: FILE: mm/mincore.c:85:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: mm/mincore.c:96:
+static unsigned char mincore_page(struct vm_area_struct * vma,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000273716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 2 warnings, 3 checks, 94 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000273716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
