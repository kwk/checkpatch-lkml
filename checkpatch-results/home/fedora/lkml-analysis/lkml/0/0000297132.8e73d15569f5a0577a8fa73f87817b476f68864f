WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
>>>>LOAD           0x001000 0x00400000 0x00400000 0x00000 0x10000000 R   0x1000

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#51: FILE: fs/binfmt_elf.c:86:
+static int set_brk(unsigned long start, unsigned long end, unsigned int vm_inhibit)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: fs/binfmt_elf.c:118:
+calc_bss_inhibit(struct elf_phdr const *phdr, unsigned elf_prot)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: fs/binfmt_elf.c:120:
+	unsigned vm_inhib = (VM_READ|VM_WRITE|VM_EXEC) ^ calc_vm_prot_bits(elf_prot);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#68: FILE: fs/binfmt_elf.c:120:
+	unsigned vm_inhib = (VM_READ|VM_WRITE|VM_EXEC) ^ calc_vm_prot_bits(elf_prot);
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#68: FILE: fs/binfmt_elf.c:120:
+	unsigned vm_inhib = (VM_READ|VM_WRITE|VM_EXEC) ^ calc_vm_prot_bits(elf_prot);
 	                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#70: FILE: fs/binfmt_elf.c:122:
+  /* Can readonly .data/.text have associated read+write .bss ?
+	if (phdr->p_filesz && !(phdr->p_flags & PF_W)) {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TABSTOP: Statements should start on a tabstop
#93: FILE: fs/binfmt_elf.c:354:
+	    unsigned long map_addr;

WARNING:TABSTOP: Statements should start on a tabstop
#132: FILE: fs/binfmt_elf.c:373:
+	    if (eppnt->p_filesz < eppnt->p_memsz) {  /* has local .bss */

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: fs/binfmt_elf.c:375:
+		unsigned long elf_bss = load_addr + vaddr + eppnt->p_filesz;
+		padzero(elf_bss);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#138: FILE: fs/binfmt_elf.c:379:
+		if (elf_bss < vaddr) {
+		    error = do_brk(elf_bss, vaddr - elf_bss,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: fs/binfmt_elf.c:381:
+		    error = do_brk(elf_bss, vaddr - elf_bss,
+				calc_bss_inhibit(eppnt, elf_prot) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#140: FILE: fs/binfmt_elf.c:381:
+				calc_bss_inhibit(eppnt, elf_prot) );

WARNING:TABSTOP: Statements should start on a tabstop
#141: FILE: fs/binfmt_elf.c:382:
+		    if (BAD_ADDR(error))

WARNING:TABSTOP: Statements should start on a tabstop
#144: FILE: fs/binfmt_elf.c:385:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#145: FILE: fs/binfmt_elf.c:386:
+	  }

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: fs/binfmt_elf.c:682:
+  ^Ifor(i = 0, elf_ppnt = elf_phdata; i < elf_ex.e_phnum; i++, elf_ppnt++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: fs/binfmt_elf.c:682:
+  ^Ifor(i = 0, elf_ppnt = elf_phdata; i < elf_ex.e_phnum; i++, elf_ppnt++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/binfmt_elf.c:682:
+  ^Ifor(i = 0, elf_ppnt = elf_phdata; i < elf_ex.e_phnum; i++, elf_ppnt++) {$

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: fs/binfmt_elf.c:682:
+  	for(i = 0, elf_ppnt = elf_phdata; i < elf_ex.e_phnum; i++, elf_ppnt++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: fs/binfmt_elf.c:683:
+  ^I^Iint elf_prot = 0, elf_flags;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: fs/binfmt_elf.c:683:
+  ^I^Iint elf_prot = 0, elf_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: fs/binfmt_elf.c:683:
+  ^I^Iint elf_prot = 0, elf_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: fs/binfmt_elf.c:687:
+  ^I^Iif (elf_ppnt->p_type != PT_LOAD)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: fs/binfmt_elf.c:687:
+  ^I^Iif (elf_ppnt->p_type != PT_LOAD)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/binfmt_elf.c:687:
+  ^I^Iif (elf_ppnt->p_type != PT_LOAD)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/binfmt_elf.c:688:
+  ^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: fs/binfmt_elf.c:688:
+  ^I^I^Icontinue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/binfmt_elf.c:688:
+  ^I^I^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: fs/binfmt_elf.c:690:
+  ^I^Iif (elf_ppnt->p_flags & PF_R) elf_prot |= PROT_READ;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: fs/binfmt_elf.c:690:
+  ^I^Iif (elf_ppnt->p_flags & PF_R) elf_prot |= PROT_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: fs/binfmt_elf.c:690:
+  ^I^Iif (elf_ppnt->p_flags & PF_R) elf_prot |= PROT_READ;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: fs/binfmt_elf.c:690:
+  		if (elf_ppnt->p_flags & PF_R) elf_prot |= PROT_READ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: fs/binfmt_elf.c:691:
+  ^I^Iif (elf_ppnt->p_flags & PF_W) elf_prot |= PROT_WRITE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: fs/binfmt_elf.c:691:
+  ^I^Iif (elf_ppnt->p_flags & PF_W) elf_prot |= PROT_WRITE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/binfmt_elf.c:691:
+  ^I^Iif (elf_ppnt->p_flags & PF_W) elf_prot |= PROT_WRITE;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: fs/binfmt_elf.c:691:
+  		if (elf_ppnt->p_flags & PF_W) elf_prot |= PROT_WRITE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: fs/binfmt_elf.c:692:
+  ^I^Iif (elf_ppnt->p_flags & PF_X) elf_prot |= PROT_EXEC;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: fs/binfmt_elf.c:692:
+  ^I^Iif (elf_ppnt->p_flags & PF_X) elf_prot |= PROT_EXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/binfmt_elf.c:692:
+  ^I^Iif (elf_ppnt->p_flags & PF_X) elf_prot |= PROT_EXEC;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#236: FILE: fs/binfmt_elf.c:692:
+  		if (elf_ppnt->p_flags & PF_X) elf_prot |= PROT_EXEC;

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: fs/binfmt_elf.c:694:
+  ^I^Ielf_flags = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECUTABLE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: fs/binfmt_elf.c:694:
+  ^I^Ielf_flags = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECUTABLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: fs/binfmt_elf.c:694:
+  ^I^Ielf_flags = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECUTABLE;$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: fs/binfmt_elf.c:694:
+  		elf_flags = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECUTABLE;
   		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: fs/binfmt_elf.c:694:
+  		elf_flags = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECUTABLE;
   		                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: fs/binfmt_elf.c:696:
+  ^I^Iif (elf_ex.e_type == ET_EXEC || load_addr_set)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: fs/binfmt_elf.c:696:
+  ^I^Iif (elf_ex.e_type == ET_EXEC || load_addr_set)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: fs/binfmt_elf.c:696:
+  ^I^Iif (elf_ex.e_type == ET_EXEC || load_addr_set)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: fs/binfmt_elf.c:697:
+  ^I^I^Ielf_flags |= MAP_FIXED;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: fs/binfmt_elf.c:697:
+  ^I^I^Ielf_flags |= MAP_FIXED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: fs/binfmt_elf.c:697:
+  ^I^I^Ielf_flags |= MAP_FIXED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: fs/binfmt_elf.c:698:
+  ^I^Ielse if (elf_ex.e_type == ET_DYN)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: fs/binfmt_elf.c:698:
+  ^I^Ielse if (elf_ex.e_type == ET_DYN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: fs/binfmt_elf.c:698:
+  ^I^Ielse if (elf_ex.e_type == ET_DYN)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: fs/binfmt_elf.c:742:
+				retval = set_brk(elf_bss, k - elf_bss,
+					calc_bss_inhibit(elf_ppnt, elf_prot) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#288: FILE: fs/binfmt_elf.c:742:
+					calc_bss_inhibit(elf_ppnt, elf_prot) );

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#336: FILE: include/linux/mm.h:557:
+extern unsigned long do_brk(unsigned long, unsigned long, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#336: FILE: include/linux/mm.h:557:
+extern unsigned long do_brk(unsigned long, unsigned long, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#336: FILE: include/linux/mm.h:557:
+extern unsigned long do_brk(unsigned long, unsigned long, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#336: FILE: include/linux/mm.h:557:
+extern unsigned long do_brk(unsigned long, unsigned long, unsigned int);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#347: FILE: fs/binfmt_aout.c:47:
+static void set_brk(unsigned long start, unsigned long end, unsigned vm_inhibit)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#347: FILE: fs/binfmt_aout.c:47:
+static void set_brk(unsigned long start, unsigned long end, unsigned vm_inhibit)
  {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#385: FILE: fs/binfmt_aout.c:380:
+			do_brk(N_TXTADDR(ex), ex.a_text+ex.a_data, 0);
 			                               ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#423: FILE: mm/mmap.c:130:
+	if (do_brk(oldbrk, newbrk-oldbrk, 0) != oldbrk)
 	                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#432: FILE: mm/mmap.c:1357:
+unsigned long do_brk(unsigned long addr, unsigned long len, unsigned vm_inhibit)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#432: FILE: mm/mmap.c:1357:
+unsigned long do_brk(unsigned long addr, unsigned long len, unsigned vm_inhibit)
  {

CHECK:SPACING: spaces preferred around that '&' (ctx:WxO)
#441: FILE: mm/mmap.c:1403:
+	flags = (VM_DATA_DEFAULT_FLAGS &~ vm_inhibit) | VM_ACCOUNT | mm->def_flags;
 	                               ^

ERROR:SPACING: space prohibited after that '~' (ctx:OxW)
#441: FILE: mm/mmap.c:1403:
+	flags = (VM_DATA_DEFAULT_FLAGS &~ vm_inhibit) | VM_ACCOUNT | mm->def_flags;
 	                                ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: mm/nommu.c:539:
+unsigned long do_brk(unsigned long addr, unsigned long len, unsigned vm_inhibit)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#452: FILE: mm/nommu.c:539:
+unsigned long do_brk(unsigned long addr, unsigned long len, unsigned vm_inhibit)
  {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297132.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 44 warnings, 10 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297132.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
