WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
fitness:	child's delta for total_delay - total_rt_delay - (total_intr_delay - total_rt_intr_delay)

WARNING:TYPO_SPELLING: 'minumum' may be misspelled - perhaps 'minimum'?
#92: FILE: include/linux/sched.h:145:
+ * timeslice is 1000 msecs and minumum configurable timeslice is 1 jiffy.
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/sched.h:782:
+extern void genetic_cpu_sched_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: include/linux/sched.h:1164:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#137: FILE: include/linux/sched.h:1174:
+};
+struct zaphod_intr_genes {

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#243: FILE: kernel/sched.c:1202:
+int log_at_exit = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#255: FILE: kernel/sched.c:4771:
+extern unsigned long ia_threshold;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#256: FILE: kernel/sched.c:4772:
+extern unsigned long cpu_hog_threshold;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#257: FILE: kernel/sched.c:4773:
+extern unsigned int initial_ia_bonus;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#258: FILE: kernel/sched.c:4774:
+extern unsigned int max_tpt_bonus;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#259: FILE: kernel/sched.c:4775:
+extern enum zaphod_mode_enum zaphod_mode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: kernel/sched.c:4777:
+void zaphod_rt_set_child_genes(void * in_genes)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: kernel/sched.c:4779:
+	struct zaphod_rt_genes * genes = (struct zaphod_rt_genes *)in_genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: kernel/sched.c:4780:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: kernel/sched.c:4784:
+void zaphod_intr_set_child_genes(void * in_genes)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: kernel/sched.c:4786:
+	struct zaphod_intr_genes * genes = (struct zaphod_intr_genes *)in_genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: kernel/sched.c:4787:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: kernel/sched.c:4792:
+void zaphod_fork_set_child_genes(void * in_genes)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#278: FILE: kernel/sched.c:4794:
+	struct zaphod_fork_genes * genes = (struct zaphod_fork_genes *)in_genes;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: kernel/sched.c:4799:
+void zaphod_general_set_child_genes(void * in_genes)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: kernel/sched.c:4801:
+	struct zaphod_general_genes * genes = (struct zaphod_general_genes *)in_genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: kernel/sched.c:4802:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: kernel/sched.c:4809:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#294: FILE: kernel/sched.c:4810:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: kernel/sched.c:4813:
+void zaphod_general_take_snapshot(phenotype_t * pt)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: kernel/sched.c:4815:
+	struct runq_cpustats * csrq;

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#300: FILE: kernel/sched.c:4816:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)pt->child_ranking[0]->stats_snapshot;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: kernel/sched.c:4816:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)pt->child_ranking[0]->stats_snapshot;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: kernel/sched.c:4818:
+	runqueue_t * rq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: kernel/sched.c:4823:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#318: FILE: kernel/sched.c:4834:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: kernel/sched.c:4847:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#333: FILE: kernel/sched.c:4849:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: kernel/sched.c:4851:
+void zaphod_rt_calc_fitness(genetic_child_t * child)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#337: FILE: kernel/sched.c:4853:
+{
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: kernel/sched.c:4854:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)child->stats_snapshot;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: kernel/sched.c:4858:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#350: FILE: kernel/sched.c:4866:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#352: FILE: kernel/sched.c:4868:
+void zaphod_intr_calc_fitness(genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#354: FILE: kernel/sched.c:4870:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)child->stats_snapshot;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: kernel/sched.c:4874:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#366: FILE: kernel/sched.c:4882:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: kernel/sched.c:4884:
+void zaphod_fork_calc_fitness(genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#370: FILE: kernel/sched.c:4886:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)child->stats_snapshot;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: kernel/sched.c:4890:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#382: FILE: kernel/sched.c:4898:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#384: FILE: kernel/sched.c:4900:
+void zaphod_total_delay_calc_fitness(genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#386: FILE: kernel/sched.c:4902:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)child->stats_snapshot;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: kernel/sched.c:4909:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#411: FILE: kernel/sched.c:4927:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: kernel/sched.c:4929:
+void zaphod_context_switches_calc_fitness(genetic_child_t * child)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#415: FILE: kernel/sched.c:4931:
+	struct zaphod_stats_snapshot * ss = (struct zaphod_stats_snapshot *)child->stats_snapshot;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#460: FILE: kernel/sched_zaphod.c:449:
+extern unsigned long base_prom_interval;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: kernel/sched_zaphod.c:456:
+static void zaphod_shift_mutation_rate(phenotype_t * in_pt);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#469: FILE: kernel/sched_zaphod.c:458:
+void zaphod_rt_set_child_genes(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#469: FILE: kernel/sched_zaphod.c:458:
+void zaphod_rt_set_child_genes(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#470: FILE: kernel/sched_zaphod.c:459:
+void zaphod_intr_set_child_genes(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#470: FILE: kernel/sched_zaphod.c:459:
+void zaphod_intr_set_child_genes(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#471: FILE: kernel/sched_zaphod.c:460:
+void zaphod_fork_set_child_genes(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#471: FILE: kernel/sched_zaphod.c:460:
+void zaphod_fork_set_child_genes(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#472: FILE: kernel/sched_zaphod.c:461:
+void zaphod_general_set_child_genes(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#472: FILE: kernel/sched_zaphod.c:461:
+void zaphod_general_set_child_genes(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#474: FILE: kernel/sched_zaphod.c:463:
+void zaphod_rt_calc_fitness(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#474: FILE: kernel/sched_zaphod.c:463:
+void zaphod_rt_calc_fitness(genetic_child_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#475: FILE: kernel/sched_zaphod.c:464:
+void zaphod_intr_calc_fitness(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#475: FILE: kernel/sched_zaphod.c:464:
+void zaphod_intr_calc_fitness(genetic_child_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#476: FILE: kernel/sched_zaphod.c:465:
+void zaphod_fork_calc_fitness(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#476: FILE: kernel/sched_zaphod.c:465:
+void zaphod_fork_calc_fitness(genetic_child_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#477: FILE: kernel/sched_zaphod.c:466:
+void zaphod_total_delay_calc_fitness(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#477: FILE: kernel/sched_zaphod.c:466:
+void zaphod_total_delay_calc_fitness(genetic_child_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#478: FILE: kernel/sched_zaphod.c:467:
+void zaphod_context_switches_calc_fitness(genetic_child_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#478: FILE: kernel/sched_zaphod.c:467:
+void zaphod_context_switches_calc_fitness(genetic_child_t *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: kernel/sched_zaphod.c:468:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: kernel/sched_zaphod.c:468:
+ $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#480: FILE: kernel/sched_zaphod.c:469:
+void zaphod_general_calc_post_fitness(phenotype_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phenotype_t *' should also have an identifier name
#480: FILE: kernel/sched_zaphod.c:469:
+void zaphod_general_calc_post_fitness(phenotype_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#482: FILE: kernel/sched_zaphod.c:471:
+void zaphod_general_take_snapshot(phenotype_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phenotype_t *' should also have an identifier name
#482: FILE: kernel/sched_zaphod.c:471:
+void zaphod_general_take_snapshot(phenotype_t *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: kernel/sched_zaphod.c:475:
+ ^I.create_child = zaphod_rt_create_child,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: kernel/sched_zaphod.c:475:
+ ^I.create_child = zaphod_rt_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: kernel/sched_zaphod.c:475:
+ ^I.create_child = zaphod_rt_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: kernel/sched_zaphod.c:476:
+ ^I.set_child_genes = zaphod_rt_set_child_genes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#487: FILE: kernel/sched_zaphod.c:476:
+ ^I.set_child_genes = zaphod_rt_set_child_genes,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: kernel/sched_zaphod.c:476:
+ ^I.set_child_genes = zaphod_rt_set_child_genes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: kernel/sched_zaphod.c:477:
+ ^I.calc_fitness = zaphod_rt_calc_fitness,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#488: FILE: kernel/sched_zaphod.c:477:
+ ^I.calc_fitness = zaphod_rt_calc_fitness,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: kernel/sched_zaphod.c:477:
+ ^I.calc_fitness = zaphod_rt_calc_fitness,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: kernel/sched_zaphod.c:479:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: kernel/sched_zaphod.c:479:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/sched_zaphod.c:479:
+ ^I.mutate_child = genetic_generic_mutate_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: kernel/sched_zaphod.c:484:
+ ^I.create_child = zaphod_intr_create_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: kernel/sched_zaphod.c:484:
+ ^I.create_child = zaphod_intr_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/sched_zaphod.c:484:
+ ^I.create_child = zaphod_intr_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: kernel/sched_zaphod.c:485:
+ ^I.set_child_genes = zaphod_intr_set_child_genes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: kernel/sched_zaphod.c:485:
+ ^I.set_child_genes = zaphod_intr_set_child_genes,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/sched_zaphod.c:485:
+ ^I.set_child_genes = zaphod_intr_set_child_genes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/sched_zaphod.c:486:
+ ^I.calc_fitness = zaphod_intr_calc_fitness,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: kernel/sched_zaphod.c:486:
+ ^I.calc_fitness = zaphod_intr_calc_fitness,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/sched_zaphod.c:486:
+ ^I.calc_fitness = zaphod_intr_calc_fitness,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: kernel/sched_zaphod.c:488:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: kernel/sched_zaphod.c:488:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: kernel/sched_zaphod.c:488:
+ ^I.mutate_child = genetic_generic_mutate_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/sched_zaphod.c:493:
+ ^I.create_child = zaphod_fork_create_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#504: FILE: kernel/sched_zaphod.c:493:
+ ^I.create_child = zaphod_fork_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: kernel/sched_zaphod.c:493:
+ ^I.create_child = zaphod_fork_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: kernel/sched_zaphod.c:494:
+ ^I.set_child_genes = zaphod_fork_set_child_genes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: kernel/sched_zaphod.c:494:
+ ^I.set_child_genes = zaphod_fork_set_child_genes,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: kernel/sched_zaphod.c:494:
+ ^I.set_child_genes = zaphod_fork_set_child_genes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: kernel/sched_zaphod.c:495:
+ ^I.calc_fitness = zaphod_fork_calc_fitness,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: kernel/sched_zaphod.c:495:
+ ^I.calc_fitness = zaphod_fork_calc_fitness,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: kernel/sched_zaphod.c:495:
+ ^I.calc_fitness = zaphod_fork_calc_fitness,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: kernel/sched_zaphod.c:497:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: kernel/sched_zaphod.c:497:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: kernel/sched_zaphod.c:497:
+ ^I.mutate_child = genetic_generic_mutate_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: kernel/sched_zaphod.c:502:
+ ^I.create_child = zaphod_total_delay_create_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: kernel/sched_zaphod.c:502:
+ ^I.create_child = zaphod_total_delay_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: kernel/sched_zaphod.c:502:
+ ^I.create_child = zaphod_total_delay_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: kernel/sched_zaphod.c:503:
+ ^I.calc_fitness = zaphod_total_delay_calc_fitness,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#514: FILE: kernel/sched_zaphod.c:503:
+ ^I.calc_fitness = zaphod_total_delay_calc_fitness,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: kernel/sched_zaphod.c:503:
+ ^I.calc_fitness = zaphod_total_delay_calc_fitness,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: kernel/sched_zaphod.c:508:
+ ^I.create_child = zaphod_context_switches_create_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#519: FILE: kernel/sched_zaphod.c:508:
+ ^I.create_child = zaphod_context_switches_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: kernel/sched_zaphod.c:508:
+ ^I.create_child = zaphod_context_switches_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: kernel/sched_zaphod.c:509:
+ ^I.calc_fitness = zaphod_context_switches_calc_fitness,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#520: FILE: kernel/sched_zaphod.c:509:
+ ^I.calc_fitness = zaphod_context_switches_calc_fitness,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: kernel/sched_zaphod.c:509:
+ ^I.calc_fitness = zaphod_context_switches_calc_fitness,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: kernel/sched_zaphod.c:514:
+ ^I.create_child = zaphod_general_create_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#525: FILE: kernel/sched_zaphod.c:514:
+ ^I.create_child = zaphod_general_create_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/sched_zaphod.c:514:
+ ^I.create_child = zaphod_general_create_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: kernel/sched_zaphod.c:515:
+ ^I.set_child_genes = zaphod_general_set_child_genes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: kernel/sched_zaphod.c:515:
+ ^I.set_child_genes = zaphod_general_set_child_genes,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: kernel/sched_zaphod.c:515:
+ ^I.set_child_genes = zaphod_general_set_child_genes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: kernel/sched_zaphod.c:517:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#528: FILE: kernel/sched_zaphod.c:517:
+ ^I.mutate_child = genetic_generic_mutate_child,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: kernel/sched_zaphod.c:517:
+ ^I.mutate_child = genetic_generic_mutate_child,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: kernel/sched_zaphod.c:526:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, (100 * HZ / 1000), 0 },^I^I/* sched_rr_time_slice */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: kernel/sched_zaphod.c:526:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, (100 * HZ / 1000), 0 },^I^I/* sched_rr_time_slice */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: kernel/sched_zaphod.c:526:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, (100 * HZ / 1000), 0 },^I^I/* sched_rr_time_slice */$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#542: FILE: kernel/sched_zaphod.c:531:
+#if 1

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#544: FILE: kernel/sched_zaphod.c:533:
+ 	{ 0, 1000, DEFAULT_IA_THRESHOLD, genetic_generic_iterative_mutate_gene },  			/* ia_threshold */

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: kernel/sched_zaphod.c:533:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, genetic_generic_iterative_mutate_gene },  ^I^I^I/* ia_threshold */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: kernel/sched_zaphod.c:533:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, genetic_generic_iterative_mutate_gene },  ^I^I^I/* ia_threshold */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/sched_zaphod.c:533:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, genetic_generic_iterative_mutate_gene },  ^I^I^I/* ia_threshold */$

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#545: FILE: kernel/sched_zaphod.c:534:
+	{ 0, 1000, DEFAULT_CPU_HOG_THRESHOLD, genetic_generic_iterative_mutate_gene }, 			/* cpu_hog_threshold */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#545: FILE: kernel/sched_zaphod.c:534:
+^I{ 0, 1000, DEFAULT_CPU_HOG_THRESHOLD, genetic_generic_iterative_mutate_gene }, ^I^I^I/* cpu_hog_threshold */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: kernel/sched_zaphod.c:538:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, 0 },  ^I^I^I^I/* ia_threshold */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#549: FILE: kernel/sched_zaphod.c:538:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, 0 },  ^I^I^I^I/* ia_threshold */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/sched_zaphod.c:538:
+ ^I{ 0, 1000, DEFAULT_IA_THRESHOLD, 0 },  ^I^I^I^I/* ia_threshold */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: kernel/sched_zaphod.c:539:
+^I{ 0, 1000, DEFAULT_CPU_HOG_THRESHOLD, 0 }, ^I^I^I/* cpu_hog_threshold */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: kernel/sched_zaphod.c:546:
+ ^I{ 0, MAX_MAX_IA_BONUS, 1, 0 },^I^I^I^I^I/* initial_ia_bonus */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#557: FILE: kernel/sched_zaphod.c:546:
+ ^I{ 0, MAX_MAX_IA_BONUS, 1, 0 },^I^I^I^I^I/* initial_ia_bonus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/sched_zaphod.c:546:
+ ^I{ 0, MAX_MAX_IA_BONUS, 1, 0 },^I^I^I^I^I/* initial_ia_bonus */$

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#566: FILE: kernel/sched_zaphod.c:555:
+#define ZAPHOD_GENERAL_UID (ZAPHOD_CONTEXT_SWITCHES_UID | ZAPHOD_TOTAL_DELAY_UID | ZAPHOD_INTR_UID | ZAPHOD_RT_UID)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#568: FILE: kernel/sched_zaphod.c:557:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#570: FILE: kernel/sched_zaphod.c:559:
+ 	{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, genetic_generic_iterative_mutate_gene },	/* time_slice */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: kernel/sched_zaphod.c:559:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, genetic_generic_iterative_mutate_gene },^I/* time_slice */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#570: FILE: kernel/sched_zaphod.c:559:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, genetic_generic_iterative_mutate_gene },^I/* time_slice */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: kernel/sched_zaphod.c:559:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, genetic_generic_iterative_mutate_gene },^I/* time_slice */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: kernel/sched_zaphod.c:560:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#571: FILE: kernel/sched_zaphod.c:560:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: kernel/sched_zaphod.c:560:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: kernel/sched_zaphod.c:561:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: kernel/sched_zaphod.c:561:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: kernel/sched_zaphod.c:561:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#573: FILE: kernel/sched_zaphod.c:562:
+	{ 1, 100, 1, genetic_generic_iterative_mutate_gene }, 		/* bgnd_time_slice_multiplier */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#573: FILE: kernel/sched_zaphod.c:562:
+^I{ 1, 100, 1, genetic_generic_iterative_mutate_gene }, ^I^I/* bgnd_time_slice_multiplier */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: kernel/sched_zaphod.c:567:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, 0 },^I^I/* time_slice */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: kernel/sched_zaphod.c:567:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, 0 },^I^I/* time_slice */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/sched_zaphod.c:567:
+ ^I{ MIN_TIMESLICE, MAX_TIMESLICE, DEF_TIMESLICE, 0 },^I^I/* time_slice */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: kernel/sched_zaphod.c:568:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: kernel/sched_zaphod.c:568:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/sched_zaphod.c:568:
+ ^I{ 0, MAX_MAX_IA_BONUS, DEFAULT_MAX_IA_BONUS, 0 },^I^I/* max_ia_bonus */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: kernel/sched_zaphod.c:569:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: kernel/sched_zaphod.c:569:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: kernel/sched_zaphod.c:569:
+ ^I{ 0, MAX_MAX_TPT_BONUS, DEFAULT_MAX_TPT_BONUS, 0 },^I^I/* max_tpt_bonus */$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#581: FILE: kernel/sched_zaphod.c:570:
+	{ 1, 100, 1, genetic_generic_iterative_mutate_gene },		/* bgnd_time_slice_multiplier */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#586: FILE: kernel/sched_zaphod.c:575:
+struct zaphod_stats_snapshot * zaphod_stats_snapshot;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: kernel/sched_zaphod.c:579:
+	genetic_t * genetic = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: kernel/sched_zaphod.c:580:
+^I$

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#592: FILE: kernel/sched_zaphod.c:581:
+	zaphod_stats_snapshot = (struct zaphod_stats_snapshot *)kmalloc(sizeof(struct zaphod_stats_snapshot), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#592: FILE: kernel/sched_zaphod.c:581:
+	zaphod_stats_snapshot = (struct zaphod_stats_snapshot *)kmalloc(sizeof(struct zaphod_stats_snapshot), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*zaphod_stats_snapshot)...) over kmalloc(sizeof(struct zaphod_stats_snapshot)...)
#592: FILE: kernel/sched_zaphod.c:581:
+	zaphod_stats_snapshot = (struct zaphod_stats_snapshot *)kmalloc(sizeof(struct zaphod_stats_snapshot), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#594: FILE: kernel/sched_zaphod.c:583:
+	if (!zaphod_stats_snapshot)
+		panic("zaphod sched: failed to malloc enough space");

ERROR:SPACING: space required before the open parenthesis '('
#596: FILE: kernel/sched_zaphod.c:585:
+	if(genetic_init(&genetic, ZAPHOD_SCHED_NUM_CHILDREN, ZAPHOD_SCHED_CHILD_LIFESPAN,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#600: FILE: kernel/sched_zaphod.c:589:
+	if(genetic_register_phenotype(genetic, &zaphod_rt_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: kernel/sched_zaphod.c:591:
+^I^Ipanic("zaphod sched: failed to register real-time tasks phenotype");^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: kernel/sched_zaphod.c:593:
+	if(genetic_register_phenotype(genetic, &zaphod_intr_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: kernel/sched_zaphod.c:596:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#608: FILE: kernel/sched_zaphod.c:597:
+	if(genetic_register_phenotype(genetic, &zaphod_fork_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#609: FILE: kernel/sched_zaphod.c:598:
+				      "initial-interactiveness", ZAPHOD_FORK_NUM_GENES, ZAPHOD_FORK_UID))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: kernel/sched_zaphod.c:600:
+^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#612: FILE: kernel/sched_zaphod.c:601:
+	if(genetic_register_phenotype(genetic, &zaphod_total_delay_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:SPACING: space required before the open parenthesis '('
#612: FILE: kernel/sched_zaphod.c:601:
+	if(genetic_register_phenotype(genetic, &zaphod_total_delay_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#613: FILE: kernel/sched_zaphod.c:602:
+				      "total-delay", ZAPHOD_TOTAL_DELAY_NUM_GENES, ZAPHOD_TOTAL_DELAY_UID))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: kernel/sched_zaphod.c:604:
+^I$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#616: FILE: kernel/sched_zaphod.c:605:
+	if(genetic_register_phenotype(genetic, &zaphod_context_switches_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:SPACING: space required before the open parenthesis '('
#616: FILE: kernel/sched_zaphod.c:605:
+	if(genetic_register_phenotype(genetic, &zaphod_context_switches_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#617: FILE: kernel/sched_zaphod.c:606:
+				      "context-switches", ZAPHOD_CONTEXT_SWITCHES_NUM_GENES, ZAPHOD_CONTEXT_SWITCHES_UID))

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#620: FILE: kernel/sched_zaphod.c:609:
+	if(genetic_register_phenotype(genetic, &zaphod_general_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:SPACING: space required before the open parenthesis '('
#620: FILE: kernel/sched_zaphod.c:609:
+	if(genetic_register_phenotype(genetic, &zaphod_general_genetic_ops, ZAPHOD_SCHED_NUM_CHILDREN,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: kernel/sched_zaphod.c:612:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: kernel/sched_zaphod.c:618:
+void zaphod_rt_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#631: FILE: kernel/sched_zaphod.c:620:
+	BUG_ON(!child);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: kernel/sched_zaphod.c:621:
+^I$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#633: FILE: kernel/sched_zaphod.c:622:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_rt_genes), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child->genes)...) over kmalloc(sizeof(struct zaphod_rt_genes)...)
#633: FILE: kernel/sched_zaphod.c:622:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_rt_genes), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: kernel/sched_zaphod.c:623:
+^Iif (!child->genes) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'zaphod_rt_create_child', this function's name, in a string
#635: FILE: kernel/sched_zaphod.c:624:
+		panic("zaphod_rt_create_child: error kmalloc'n space");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#635: FILE: kernel/sched_zaphod.c:624:
+	if (!child->genes) 
+		panic("zaphod_rt_create_child: error kmalloc'n space");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: kernel/sched_zaphod.c:629:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#644: FILE: kernel/sched_zaphod.c:633:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: kernel/sched_zaphod.c:635:
+void zaphod_intr_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#648: FILE: kernel/sched_zaphod.c:637:
+	BUG_ON(!child);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#650: FILE: kernel/sched_zaphod.c:639:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_intr_genes), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child->genes)...) over kmalloc(sizeof(struct zaphod_intr_genes)...)
#650: FILE: kernel/sched_zaphod.c:639:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_intr_genes), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: kernel/sched_zaphod.c:640:
+^Iif (!child->genes) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'zaphod_intr_create_child', this function's name, in a string
#652: FILE: kernel/sched_zaphod.c:641:
+		panic("zaphod_intr_create_child: error kmalloc'n space");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#652: FILE: kernel/sched_zaphod.c:641:
+	if (!child->genes) 
+		panic("zaphod_intr_create_child: error kmalloc'n space");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#662: FILE: kernel/sched_zaphod.c:651:
+void zaphod_fork_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#664: FILE: kernel/sched_zaphod.c:653:
+	BUG_ON(!child);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#666: FILE: kernel/sched_zaphod.c:655:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_fork_genes), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child->genes)...) over kmalloc(sizeof(struct zaphod_fork_genes)...)
#666: FILE: kernel/sched_zaphod.c:655:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_fork_genes), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: kernel/sched_zaphod.c:656:
+^Iif (!child->genes) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'zaphod_fork_create_child', this function's name, in a string
#668: FILE: kernel/sched_zaphod.c:657:
+		panic("zaphod_fork_create_child: error kmalloc'n space");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#668: FILE: kernel/sched_zaphod.c:657:
+	if (!child->genes) 
+		panic("zaphod_fork_create_child: error kmalloc'n space");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: kernel/sched_zaphod.c:662:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#678: FILE: kernel/sched_zaphod.c:667:
+void zaphod_total_delay_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#680: FILE: kernel/sched_zaphod.c:669:
+	BUG_ON(!child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#688: FILE: kernel/sched_zaphod.c:677:
+void zaphod_context_switches_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#690: FILE: kernel/sched_zaphod.c:679:
+	BUG_ON(!child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#698: FILE: kernel/sched_zaphod.c:687:
+void zaphod_general_create_child(genetic_child_t * child)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#700: FILE: kernel/sched_zaphod.c:689:
+	BUG_ON(!child);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#702: FILE: kernel/sched_zaphod.c:691:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_general_genes), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*child->genes)...) over kmalloc(sizeof(struct zaphod_general_genes)...)
#702: FILE: kernel/sched_zaphod.c:691:
+	child->genes = (void *)kmalloc(sizeof(struct zaphod_general_genes), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: kernel/sched_zaphod.c:692:
+^Iif (!child->genes) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'zaphod_general_create_child', this function's name, in a string
#704: FILE: kernel/sched_zaphod.c:693:
+		panic("zaphod_general_create_child: error kmalloc'n space");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#704: FILE: kernel/sched_zaphod.c:693:
+	if (!child->genes) 
+		panic("zaphod_general_create_child: error kmalloc'n space");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#714: FILE: kernel/sched_zaphod.c:703:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#715: FILE: kernel/sched_zaphod.c:704:
+static void zaphod_shift_mutation_rate(phenotype_t * in_pt)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#717: FILE: kernel/sched_zaphod.c:706:
+	struct list_head * p;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#718: FILE: kernel/sched_zaphod.c:707:
+	phenotype_t * pt;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#726: FILE: kernel/sched_zaphod.c:715:
+		/* Look at everyone else that contributes to this
+		   phenotype */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#726: FILE: kernel/sched_zaphod.c:715:
+		   phenotype */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#728: FILE: kernel/sched_zaphod.c:717:
+		if (pt->uid & ZAPHOD_GENERAL_UID && pt->uid != ZAPHOD_GENERAL_UID) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#740: FILE: kernel/sched_zaphod.c:729:
+				BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: kernel/sched_zaphod.c:733:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#746: FILE: kernel/sched_zaphod.c:735:
+	/* If we are a general phenotype that is made up of other
+	   phenotypes then we take the average */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#746: FILE: kernel/sched_zaphod.c:735:
+	   phenotypes then we take the average */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: kernel/sched_zaphod.c:738:
+^Ielse $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#750: FILE: kernel/sched_zaphod.c:739:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#753: FILE: kernel/sched_zaphod.c:742:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#757: FILE: kernel/sched_zaphod.c:746:
+void zaphod_general_calc_post_fitness(phenotype_t * in_pt)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#759: FILE: kernel/sched_zaphod.c:748:
+	struct list_head * p;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#760: FILE: kernel/sched_zaphod.c:749:
+	phenotype_t * pt;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#761: FILE: kernel/sched_zaphod.c:750:
+	genetic_t * genetic = in_pt->genetic;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#772: FILE: kernel/sched_zaphod.c:761:
+		/* Look at everyone else that contributes to this
+		   phenotype */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#772: FILE: kernel/sched_zaphod.c:761:
+		   phenotype */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#774: FILE: kernel/sched_zaphod.c:763:
+		if (pt->uid & ZAPHOD_GENERAL_UID && pt->uid != ZAPHOD_GENERAL_UID) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#787: FILE: kernel/sched_zaphod.c:776:
+				BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: kernel/sched_zaphod.c:779:
+^I^I^Ifor (i = 0; i < pt->num_children; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: kernel/sched_zaphod.c:786:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#798: FILE: kernel/sched_zaphod.c:787:
+	
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#812: FILE: kernel/sched_zaphod.c:803:
+	BUG_ON(zaphod_mode >= 2);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#823: FILE: lib/Kconfig:39:
+config GENETIC_ZAPHOD_CPU_SCHED
+	bool "Genetic Library - Zaphod CPU scheduler"
+	depends on GENETIC_LIB && EXPERIMENTAL
+	help
+	  This option will enable the genetic library on the zaphod
+	  CPU scheduler.
+
 #
 # compression support is select'ed if needed
 #

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 102 errors, 139 warnings, 23 checks, 725 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
