ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#64: FILE: kernel/power/snapshot.c:48:
+#define CACHE(x) \
+	if (sizeof(struct highmem_page) <= x) \
+		return x;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#64: FILE: kernel/power/snapshot.c:48:
+#define CACHE(x) \
+	if (sizeof(struct highmem_page) <= x) \
+		return x;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#64: FILE: kernel/power/snapshot.c:48:
+#define CACHE(x) \
+	if (sizeof(struct highmem_page) <= x) \
+		return x;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#64: FILE: kernel/power/snapshot.c:48:
+#define CACHE(x) \
+	if (sizeof(struct highmem_page) <= x) \
+		return x;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#64: FILE: kernel/power/snapshot.c:48:
+#define CACHE(x) \
+	if (sizeof(struct highmem_page) <= x) \
+		return x;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: kernel/power/snapshot.c:452:
+	for_each_zone (zone)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 3 warnings, 2 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129037.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
