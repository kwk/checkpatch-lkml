WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
 4) The return from try_to_free_pages() was put in "i" for no evident reason.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#79: FILE: include/linux/mmzone.h:334:
+typedef enum {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: include/linux/mmzone.h:335:
+  dont_try_harder,^I/* Don't go much below low watermark (GFP_HIGH) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: include/linux/mmzone.h:336:
+  try_harder,^I^I/* Go far below low watermark (RT TASK) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: include/linux/mmzone.h:337:
+  try_really_hard^I/* Ignore all watermarks */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: mm/page_alloc.c:764:
+get_page_from_freelist(gfp_t gfp_mask, unsigned int order,
+			struct zone **zones, can_try_harder_t can_try_harder)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'can_try_harder < try_really_hard'
#138: FILE: mm/page_alloc.c:779:
+		if ((can_try_harder < try_really_hard) &&
 			(!zone_watermark_ok(z, order, z->pages_low,
 				       classzone_idx, can_try_harder, 
 				       gfp_mask & __GFP_HIGH)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: mm/page_alloc.c:780:
+		if ((can_try_harder < try_really_hard) &&
 			(!zone_watermark_ok(z, order, z->pages_low,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#200: FILE: mm/page_alloc.c:924:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, order, zones,
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: mm/page_alloc.c:925:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, order, zones,
+					dont_try_harder);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: mm/page_alloc.c:953:
+			page = get_page_from_freelist(gfp_mask, order, zones,
+						try_really_hard);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: mm/vmscan.c:1273:
+	if (zone_watermark_ok(zone, order, zone->pages_low, 0, 0,
+					dont_try_harder))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 7 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
