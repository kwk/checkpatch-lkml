CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#54: FILE: mm/shmem.c:40:
+#define ENTRIES_PER_PAGEPAGE (ENTRIES_PER_PAGE*ENTRIES_PER_PAGE)
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#58: FILE: mm/shmem.c:43:
+#define SHMEM_MAX_INDEX  (SHMEM_NR_DIRECT + (ENTRIES_PER_PAGEPAGE/2) * (ENTRIES_PER_PAGE+1))
                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#58: FILE: mm/shmem.c:43:
+#define SHMEM_MAX_INDEX  (SHMEM_NR_DIRECT + (ENTRIES_PER_PAGEPAGE/2) * (ENTRIES_PER_PAGE+1))
                                                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: mm/shmem.c:58:
+	return alloc_pages(gfp_mask, PAGE_CACHE_SHIFT-PAGE_SHIFT);
 	                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#78: FILE: mm/shmem.c:63:
+	__free_pages(page, PAGE_CACHE_SHIFT-PAGE_SHIFT);
 	                                   ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#100: FILE: mm/shmem.c:85:
+	return PageHighMem(page)?
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#101: FILE: mm/shmem.c:86:
+		(swp_entry_t *)kmap_atomic(page, KM_USER1):
 		                                          ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#130: FILE: mm/shmem.c:194:
+static swp_entry_t *shmem_swp_entry(struct shmem_inode_info *info, unsigned long index, struct page **page)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#161: FILE: mm/shmem.c:219:
+		dir += ENTRIES_PER_PAGE/2 + index/ENTRIES_PER_PAGE;
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#161: FILE: mm/shmem.c:219:
+		dir += ENTRIES_PER_PAGE/2 + index/ENTRIES_PER_PAGE;
 		                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: mm/shmem.c:237:
+		if (!page || !(subdir = *page)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#294: FILE: mm/shmem.c:335:
+	inode->i_ctime = inode->i_mtime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: mm/shmem.c:348:
+		info->swapped -= shmem_free_swp(ptr+idx, ptr+size);
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: mm/shmem.c:348:
+		info->swapped -= shmem_free_swp(ptr+idx, ptr+size);
 		                                            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: mm/shmem.c:353:
+	BUG_ON(limit <= SHMEM_NR_DIRECT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#319: FILE: mm/shmem.c:355:
+	idx = (idx > SHMEM_NR_DIRECT)? (idx - SHMEM_NR_DIRECT): 0;
 	                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#319: FILE: mm/shmem.c:355:
+	idx = (idx > SHMEM_NR_DIRECT)? (idx - SHMEM_NR_DIRECT): 0;
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#325: FILE: mm/shmem.c:361:
+	stage = ENTRIES_PER_PAGEPAGE/2;
 	                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#326: FILE: mm/shmem.c:362:
+	if (idx < ENTRIES_PER_PAGEPAGE/2)
 	                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#326: FILE: mm/shmem.c:362:
+	if (idx < ENTRIES_PER_PAGEPAGE/2)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#327: FILE: mm/shmem.c:363:
+		dir += idx/ENTRIES_PER_PAGE;
 		          ^

CHECK:BRACES: Unbalanced braces around else statement
#328: FILE: mm/shmem.c:364:
+	else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#329: FILE: mm/shmem.c:365:
+		dir += ENTRIES_PER_PAGE/2;
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: mm/shmem.c:366:
+		dir += (idx - ENTRIES_PER_PAGEPAGE/2)/ENTRIES_PER_PAGEPAGE;
 		                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: mm/shmem.c:366:
+		dir += (idx - ENTRIES_PER_PAGEPAGE/2)/ENTRIES_PER_PAGEPAGE;
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: mm/shmem.c:371:
+			size = ((idx - ENTRIES_PER_PAGEPAGE/2) %
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#352: FILE: mm/shmem.c:387:
+			shmem_dir_unmap(dir-1);
 			                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#354: FILE: mm/shmem.c:389:
+			    ENTRIES_PER_PAGE/2 + idx/ENTRIES_PER_PAGEPAGE;
 			                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#354: FILE: mm/shmem.c:389:
+			    ENTRIES_PER_PAGE/2 + idx/ENTRIES_PER_PAGEPAGE;
 			                            ^

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#367: FILE: mm/shmem.c:402:
+				info->alloced++;
 				      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#378: FILE: mm/shmem.c:413:
+			info->swapped -= shmem_free_swp(ptr+offset, ptr+size);
 			                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#378: FILE: mm/shmem.c:413:
+			info->swapped -= shmem_free_swp(ptr+offset, ptr+size);
 			                                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#381: FILE: mm/shmem.c:416:
+		if (offset)
[...]
+		else if (subdir) {
[...]

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#394: FILE: mm/shmem.c:425:
+	shmem_dir_unmap(dir-1);
 	                   ^

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#456: FILE: mm/shmem.c:433:
+		info->alloced++;
 		      ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: mm/shmem.c:436:
+	BUG_ON(info->swapped > info->next_index);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#520: FILE: mm/shmem.c:535:
+	offset = shmem_find_swp(entry, ptr, ptr+size);
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#542: FILE: mm/shmem.c:545:
+	stage = SHMEM_NR_DIRECT + ENTRIES_PER_PAGEPAGE/2;
 	                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#546: FILE: mm/shmem.c:549:
+			shmem_dir_unmap(dir-1);
 			                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#548: FILE: mm/shmem.c:551:
+			    ENTRIES_PER_PAGE/2 + idx/ENTRIES_PER_PAGEPAGE;
 			                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#548: FILE: mm/shmem.c:551:
+			    ENTRIES_PER_PAGE/2 + idx/ENTRIES_PER_PAGEPAGE;
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#566: FILE: mm/shmem.c:569:
+			offset = shmem_find_swp(entry, ptr, ptr+size);
 			                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#576: FILE: mm/shmem.c:578:
+	shmem_dir_unmap(dir-1);
 	                   ^

CHECK:BRACES: Unbalanced braces around else statement
#618: FILE: mm/shmem.c:746:
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#667: FILE: mm/shmem.c:816:
+		else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 35 checks, 625 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
