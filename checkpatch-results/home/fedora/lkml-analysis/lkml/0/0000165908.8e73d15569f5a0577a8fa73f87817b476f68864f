WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
--- b023d524fb0a3b71aa0b957ce7c5540611497370/arch/ppc/kernel/ppc_htab.c  (mode:100644 sha1:ca810025993f3a9ab882fb46722cd46543b6e85e)

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/ppc/kernel/ppc_htab.c:123:
+ ^I^I      "Address\t\t: %08lx\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: arch/ppc/kernel/ppc_htab.c:123:
+ ^I^I      "Address\t\t: %08lx\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/ppc/kernel/ppc_htab.c:123:
+ ^I^I      "Address\t\t: %08lx\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: arch/ppc/kernel/ppc_htab.c:125:
+                      (unsigned long)(Hash_size>>10),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/ppc/kernel/ppc_htab.c:125:
+                      (unsigned long)(Hash_size>>10),$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#82: FILE: arch/ppc/kernel/ppc_htab.c:125:
+                      (unsigned long)(Hash_size>>10),
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Hash_size>
#82: FILE: arch/ppc/kernel/ppc_htab.c:125:
+                      (unsigned long)(Hash_size>>10),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#83: FILE: arch/ppc/kernel/ppc_htab.c:126:
+		      (Hash_size/(sizeof(PTE)*8)),
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#83: FILE: arch/ppc/kernel/ppc_htab.c:126:
+		      (Hash_size/(sizeof(PTE)*8)),
 		                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Hash>
#84: FILE: arch/ppc/kernel/ppc_htab.c:127:
+		      (unsigned long)Hash,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#85: FILE: arch/ppc/kernel/ppc_htab.c:128:
+		      Hash_size/sizeof(PTE));
 		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: arch/ppc/kernel/ppc_htab.c:150:
+		      ((kptes+uptes)*100) / (Hash_size/sizeof(PTE)));
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#118: FILE: arch/ppc/kernel/ppc_htab.c:150:
+		      ((kptes+uptes)*100) / (Hash_size/sizeof(PTE)));
 		                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#118: FILE: arch/ppc/kernel/ppc_htab.c:150:
+		      ((kptes+uptes)*100) / (Hash_size/sizeof(PTE)));
 		                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: arch/ppc/kernel/ppc_htab.c:295:
+static ssize_t ppc_htab_write(struct file * file, const char __user * ubuffer,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: arch/ppc/kernel/ppc_htab.c:295:
+static ssize_t ppc_htab_write(struct file * file, const char __user * ubuffer,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#170: FILE: arch/ppc/kernel/ppc_htab.c:307:
+static struct file_operations ppc_htab_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: arch/ppc/kernel/ppc_htab.c:319:
+	entry = create_proc_entry("ppc_htab", S_IRUGO|S_IWUSR, NULL);
 	                                             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#182: FILE: arch/ppc/kernel/ppc_htab.c:319:
+	entry = create_proc_entry("ppc_htab", S_IRUGO|S_IWUSR, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#188: FILE: arch/ppc/kernel/ppc_htab.c:325:
+__initcall(ppc_htab_proc_init);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: arch/ppc/kernel/ppc_htab.c:329:
+static int proc_dol2crvec(ctl_table *table, int write, struct file *filp,
                                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/ppc/kernel/ppc_htab.c:330:
+static int proc_dol2crvec(ctl_table *table, int write, struct file *filp,
 		  void __user *buffer_arg, size_t *lenp, loff_t *ppos)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 11 checks, 167 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
