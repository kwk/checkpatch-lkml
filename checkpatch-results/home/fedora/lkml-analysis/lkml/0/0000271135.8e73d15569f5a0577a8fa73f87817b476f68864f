WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#33: 
unecessary fields, overengineered cache layout and uninformative
^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uneeded' may be misspelled - perhaps 'unneeded'?
#37: 
	- Removes uneeded #includes
	          ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
--- working-2.6.orig/include/asm-ppc64/paca.h	2004-06-29 15:27:05.576147440 +1000

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#65: FILE: include/asm-ppc64/paca.h:5:
+ * include/asm-ppc64/paca.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue>
#93: FILE: include/asm-ppc64/paca.h:29:
+struct ItLpQueue;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: include/asm-ppc64/paca.h:32:
+ * Defines the layout of the paca.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ItLpPaca>
#213: FILE: include/asm-ppc64/paca.h:52:
+	struct ItLpPaca *lppaca_ptr;	/* Pointer to LpPaca for PLIC */

CHECK:CAMELCASE: Avoid CamelCase: <ItLpRegSave>
#214: FILE: include/asm-ppc64/paca.h:53:
+	struct ItLpRegSave *reg_save_ptr; /* Pointer to LpRegSave for PLIC */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(0x80) over __attribute__((aligned(0x80)))
#238: FILE: include/asm-ppc64/paca.h:77:
+	u64 exgen[8] __attribute__((aligned(0x80))); /* used for most interrupts/exceptions */

WARNING:TYPO_SPELLING: 'structues' may be misspelled - perhaps 'structures'?
#263: FILE: include/asm-ppc64/paca.h:96:
+	 * iSeries structues which the hypervisor knows about - Not
 	           ^^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(0x80) over __attribute__((aligned(0x80)))
#267: FILE: include/asm-ppc64/paca.h:100:
+	struct ItLpPaca lppaca __attribute__((aligned(0x80)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: include/asm-ppc64/paca.h:105:
+^I * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: include/asm-ppc64/paca.h:114:
+					 * bucket size */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#355: FILE: include/asm-ppc64/spinlock.h:119:
+	lwz		%1,%4(13)\n\
 	   		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#355: FILE: include/asm-ppc64/spinlock.h:119:
+	lwz		%1,%4(13)\n\
 	   		  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#355: FILE: include/asm-ppc64/spinlock.h:119:
+	lwz		%1,%4(13)\n\
 	   		   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#361: FILE: include/asm-ppc64/spinlock.h:124:
+	: "r"(&lock->lock), "r"(flags),

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: space prohibited after that open parenthesis '('
#375: FILE: include/asm-ppc64/iSeries/HvCall.h:186:
+	HvCall1( HvCallBaseSendIPI, targetPaca->paca_index );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#375: FILE: include/asm-ppc64/iSeries/HvCall.h:186:
+	HvCall1( HvCallBaseSendIPI, targetPaca->paca_index );

CHECK:CAMELCASE: Avoid CamelCase: <HvCall1>
#375: FILE: include/asm-ppc64/iSeries/HvCall.h:186:
+	HvCall1( HvCallBaseSendIPI, targetPaca->paca_index );

CHECK:CAMELCASE: Avoid CamelCase: <HvCallBaseSendIPI>
#375: FILE: include/asm-ppc64/iSeries/HvCall.h:186:
+	HvCall1( HvCallBaseSendIPI, targetPaca->paca_index );

CHECK:CAMELCASE: Avoid CamelCase: <targetPaca>
#375: FILE: include/asm-ppc64/iSeries/HvCall.h:186:
+	HvCall1( HvCallBaseSendIPI, targetPaca->paca_index );

CHECK:CAMELCASE: Avoid CamelCase: <xSharedProc>
#429: FILE: include/asm-ppc64/time.h:81:
+	if (lpaca->lppaca.xSharedProc) {

CHECK:CAMELCASE: Avoid CamelCase: <xVirtualDecr>
#430: FILE: include/asm-ppc64/time.h:82:
+		lpaca->lppaca.xVirtualDecr = val;

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: arch/ppc64/kernel/asm-offsets.c:82:
+        DEFINE(PACAPACAINDEX, offsetof(struct paca_struct, paca_index));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: arch/ppc64/kernel/asm-offsets.c:82:
+        DEFINE(PACAPACAINDEX, offsetof(struct paca_struct, paca_index));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: arch/ppc64/kernel/asm-offsets.c:83:
+        DEFINE(PACAPROCSTART, offsetof(struct paca_struct, cpu_start));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: arch/ppc64/kernel/asm-offsets.c:83:
+        DEFINE(PACAPROCSTART, offsetof(struct paca_struct, cpu_start));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/ppc64/kernel/asm-offsets.c:84:
+        DEFINE(PACAKSAVE, offsetof(struct paca_struct, kstack));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: arch/ppc64/kernel/asm-offsets.c:84:
+        DEFINE(PACAKSAVE, offsetof(struct paca_struct, kstack));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: arch/ppc64/kernel/asm-offsets.c:86:
+        DEFINE(PACASAVEDMSR, offsetof(struct paca_struct, saved_msr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: arch/ppc64/kernel/asm-offsets.c:86:
+        DEFINE(PACASAVEDMSR, offsetof(struct paca_struct, saved_msr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: arch/ppc64/kernel/asm-offsets.c:87:
+        DEFINE(PACASTABREAL, offsetof(struct paca_struct, stab_real));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/ppc64/kernel/asm-offsets.c:87:
+        DEFINE(PACASTABREAL, offsetof(struct paca_struct, stab_real));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/ppc64/kernel/asm-offsets.c:88:
+        DEFINE(PACASTABVIRT, offsetof(struct paca_struct, stab_addr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/ppc64/kernel/asm-offsets.c:88:
+        DEFINE(PACASTABVIRT, offsetof(struct paca_struct, stab_addr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/ppc64/kernel/asm-offsets.c:90:
+        DEFINE(PACAR1, offsetof(struct paca_struct, saved_r1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/ppc64/kernel/asm-offsets.c:90:
+        DEFINE(PACAR1, offsetof(struct paca_struct, saved_r1));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: arch/ppc64/kernel/asm-offsets.c:103:
+        DEFINE(PACAEMERGSP, offsetof(struct paca_struct, emergency_sp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: arch/ppc64/kernel/asm-offsets.c:103:
+        DEFINE(PACAEMERGSP, offsetof(struct paca_struct, emergency_sp));$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#501: FILE: arch/ppc64/kernel/pacaData.c:27:
+ * field correctly */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#502: FILE: arch/ppc64/kernel/pacaData.c:28:
+extern unsigned long __toc_start;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: arch/ppc64/kernel/pacaData.c:54:
+^I.stab_real = (asrr), ^I^I/* Real pointer to segment table */ \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#539: FILE: arch/ppc64/kernel/pacaData.c:56:
+	.emergency_sp = &emergency_stack[((number)+1) * PAGE_SIZE],	    \
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <xIntDword>
#671: FILE: arch/ppc64/kernel/idle.c:79:
+	get_paca()->lppaca.xIntDword.xFields.xDecrInt = 1;

CHECK:CAMELCASE: Avoid CamelCase: <xFields>
#671: FILE: arch/ppc64/kernel/idle.c:79:
+	get_paca()->lppaca.xIntDword.xFields.xDecrInt = 1;

CHECK:CAMELCASE: Avoid CamelCase: <xDecrInt>
#671: FILE: arch/ppc64/kernel/idle.c:79:
+	get_paca()->lppaca.xIntDword.xFields.xDecrInt = 1;

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue_isLpIntPending>
#682: FILE: arch/ppc64/kernel/idle.c:102:
+			if (ItLpQueue_isLpIntPending(lpaca->lpqueue_ptr))

CHECK:CAMELCASE: Avoid CamelCase: <xIdle>
#700: FILE: arch/ppc64/kernel/idle.c:178:
+		lpaca->lppaca.xIdle = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: arch/ppc64/kernel/smp.c:126:
+                if (paca[i].lppaca.xDynProcStatus < 2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: arch/ppc64/kernel/smp.c:126:
+                if (paca[i].lppaca.xDynProcStatus < 2) {$

CHECK:CAMELCASE: Avoid CamelCase: <xDynProcStatus>
#789: FILE: arch/ppc64/kernel/smp.c:126:
+                if (paca[i].lppaca.xDynProcStatus < 2) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#831: FILE: arch/ppc64/kernel/smp.c:167:
 static void __devinit smp_iSeries_setup_cpu(int nr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around paca[cpu].lppaca
#883: FILE: arch/ppc64/kernel/smp.c:488:
+	register_vpa(flags, cpu, __pa((unsigned long)&(paca[cpu].lppaca)));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <numIntsProcessed>
#1084: FILE: arch/ppc64/kernel/ItLpQueue.c:164:
+	get_paca()->lpevent_count += numIntsProcessed;

CHECK:CAMELCASE: Avoid CamelCase: <xIpiCnt>
#1122: FILE: arch/ppc64/kernel/irq.c:616:
+	if (lpaca->lppaca.xIntDword.xFields.xIpiCnt) {

CHECK:CAMELCASE: Avoid CamelCase: <ItLpQueue_process>
#1131: FILE: arch/ppc64/kernel/irq.c:623:
+		lpevent_count += ItLpQueue_process(lpq, regs);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1159: FILE: arch/ppc64/kernel/time.c:101:
+extern unsigned long lpevent_count;

CHECK:CAMELCASE: Avoid CamelCase: <procIx>
#1206: FILE: arch/ppc64/kernel/iSeries_setup.c:574:
+	unsigned int procIx = get_paca()->lppaca.xDynHvPhysicalProcIndex;

CHECK:CAMELCASE: Avoid CamelCase: <xDynHvPhysicalProcIndex>
#1206: FILE: arch/ppc64/kernel/iSeries_setup.c:574:
+	unsigned int procIx = get_paca()->lppaca.xDynHvPhysicalProcIndex;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1215: FILE: arch/ppc64/kernel/iSeries_setup.c:668:
+	unsigned procIx = get_paca()->lppaca.xDynHvPhysicalProcIndex;

CHECK:CAMELCASE: Avoid CamelCase: <ptrLpPaca>
#1254: FILE: arch/ppc64/xmon/xmon.c:1615:
+		ptrLpPaca = ptrPaca->lppaca_ptr;

CHECK:CAMELCASE: Avoid CamelCase: <ptrPaca>
#1254: FILE: arch/ppc64/xmon/xmon.c:1615:
+		ptrLpPaca = ptrPaca->lppaca_ptr;

CHECK:CAMELCASE: Avoid CamelCase: <ptrLpRegSave>
#1263: FILE: arch/ppc64/xmon/xmon.c:1623:
+		ptrLpRegSave = ptrPaca->reg_save_ptr;

CHECK:CAMELCASE: Avoid CamelCase: <xYieldCount>
#1293: FILE: arch/ppc64/lib/locks.c:52:
+	yield_count = holder_paca->lppaca.xYieldCount;

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1302: FILE: arch/ppc64/lib/locks.c:79:
+"	lwz		%1,%3(13)		# __spin_trylock\n\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1311: FILE: arch/ppc64/lib/locks.c:87:
+	: "r" (&lock->lock), "i" (offsetof(struct paca_struct, lock_token))

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1329: FILE: arch/ppc64/lib/locks.c:250:
+"	lwz		%1,%3(13)	# write_trylock\n\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1338: FILE: arch/ppc64/lib/locks.c:258:
+	: "r" (&rw->lock), "i" (offsetof(struct paca_struct, lock_token))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 25 warnings, 30 checks, 1106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271135.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
