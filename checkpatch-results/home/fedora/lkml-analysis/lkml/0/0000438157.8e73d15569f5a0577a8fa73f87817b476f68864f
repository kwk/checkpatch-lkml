ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#52: 
--- a/fs/ntfs/aops.c	Tue Aug 20 23:57:16 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPLIT_STRING: quoted string split across lines
#101: FILE: fs/ntfs/aops.c:481:
+	ntfs_debug("Entering for inode %li, attribute type 0x%x, page index "
+			"0x%lx.\n", vi->i_ino, ni->type, page->index);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#103: FILE: fs/ntfs/aops.c:483:
+	BUG_ON(!NInoNonResident(ni));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <NInoNonResident>
#103: FILE: fs/ntfs/aops.c:483:
+	BUG_ON(!NInoNonResident(ni));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: fs/ntfs/aops.c:484:
+	BUG_ON(NInoMstProtected(ni));

CHECK:CAMELCASE: Avoid CamelCase: <NInoMstProtected>
#104: FILE: fs/ntfs/aops.c:484:
+	BUG_ON(NInoMstProtected(ni));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#110: FILE: fs/ntfs/aops.c:490:
+		BUG_ON(!PageUptodate(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: fs/ntfs/aops.c:492:
+		create_empty_buffers(page, blocksize,
+				(1 << BH_Uptodate) | (1 << BH_Dirty));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#114: FILE: fs/ntfs/aops.c:494:
+	bh = head = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: fs/ntfs/aops.c:497:
+		ntfs_warning(vol->sb, "Error allocating page buffers. "
+				"Redirtying page so we try again later.");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block >= iblock'
#183: FILE: fs/ntfs/aops.c:563:
+		if (unlikely((block >= iblock) && (iblock < dblock))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iblock < dblock'
#183: FILE: fs/ntfs/aops.c:563:
+		if (unlikely((block >= iblock) && (iblock < dblock))) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: fs/ntfs/aops.c:577:
+^I^I^I^I// ^I^I^I!PageError(page))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: fs/ntfs/aops.c:581:
+^I^I^I^I// ^I__set_page_dirty_buffers();$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#208: FILE: fs/ntfs/aops.c:588:
+			 * all non-uptodate buffers and set them uptodate.
 			                                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#210: FILE: fs/ntfs/aops.c:590:
+			 * page is uptodate.
 			           ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#215: FILE: fs/ntfs/aops.c:595:
+				// Set them uptodate and dirty.
 				            ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: fs/ntfs/aops.c:604:
+			ntfs_error(vol->sb, "Writing beyond initialized size "
+					"is not supported yet. Sorry.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#245: FILE: fs/ntfs/aops.c:625:
+		if (likely(rl != NULL)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rl"
#245: FILE: fs/ntfs/aops.c:625:
+		if (likely(rl != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: fs/ntfs/aops.c:630:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#266: FILE: fs/ntfs/aops.c:646:
+			ntfs_error(vol->sb, "Writing into sparse regions is "
+					"not supported yet. Sorry.");

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#285: FILE: fs/ntfs/aops.c:665:
+		ntfs_error(vol->sb, "vcn_to_lcn(vcn = 0x%Lx) failed "

WARNING:SPLIT_STRING: quoted string split across lines
#286: FILE: fs/ntfs/aops.c:666:
+		ntfs_error(vol->sb, "vcn_to_lcn(vcn = 0x%Lx) failed "
+				"with error code 0x%Lx%s.",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#286: FILE: fs/ntfs/aops.c:666:
+				"with error code 0x%Lx%s.",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#304: FILE: fs/ntfs/aops.c:684:
+		int uptodate = 1;
 		    ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: fs/ntfs/aops.c:685:
+		int uptodate = 1;
+		do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#307: FILE: fs/ntfs/aops.c:687:
+				uptodate = 0;
 				^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#312: FILE: fs/ntfs/aops.c:692:
+		if (uptodate)
 		    ^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#321: FILE: fs/ntfs/aops.c:701:
+			if (test_clear_buffer_dirty(bh)) {
[...]
+			} else
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#322: FILE: fs/ntfs/aops.c:702:
+				BUG_ON(!buffer_uptodate(bh));

CHECK:BRACES: Unbalanced braces around else statement
#324: FILE: fs/ntfs/aops.c:704:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#338: FILE: fs/ntfs/aops.c:718:
+		if (unlikely(err == -EOPNOTSUPP))
[...]
+		else if (err == -ENOMEM) {
[...]
+		} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#342: FILE: fs/ntfs/aops.c:722:
+			ntfs_warning(vol->sb, "Error allocating memory. "
+					"Redirtying page so we try again "

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: fs/ntfs/aops.c:723:
+					"Redirtying page so we try again "
+					"later.");

CHECK:BRACES: Unbalanced braces around else statement
#353: FILE: fs/ntfs/aops.c:733:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#357: FILE: fs/ntfs/aops.c:737:
+	BUG_ON(PageWriteback(page));

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: fs/ntfs/aops.c:750:
+		struct buffer_head *next = bh->b_this_page;
+		if (buffer_async_write(bh)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: fs/ntfs/aops.c:799:
+	BUG_ON(!PageLocked(page));

CHECK:CAMELCASE: Avoid CamelCase: <NInoEncrypted>
#441: FILE: fs/ntfs/aops.c:821:
+			if (NInoEncrypted(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#444: FILE: fs/ntfs/aops.c:824:
+				ntfs_debug("Denying write access to encrypted "
+						"file.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoCompressed>
#448: FILE: fs/ntfs/aops.c:828:
+			if (NInoCompressed(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#453: FILE: fs/ntfs/aops.c:833:
+				ntfs_error(vol->sb, "Writing to compressed "
+						"files is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#454: FILE: fs/ntfs/aops.c:834:
+						"files is not supported yet. "
+						"Sorry.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparse>
#458: FILE: fs/ntfs/aops.c:838:
+			if (NInoSparse(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: fs/ntfs/aops.c:841:
+				ntfs_error(vol->sb, "Writing to sparse files "
+						"is not supported yet. Sorry.");

WARNING:LINE_SPACING: Missing a blank line after declarations
#470: FILE: fs/ntfs/aops.c:850:
+			unsigned int ofs = vi->i_size & ~PAGE_CACHE_MASK;
+			kaddr = kmap_atomic(page, KM_USER0);

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: fs/ntfs/aops.c:860:
+			ntfs_error(vol->sb, "Writing to MST protected "
+					"attributes is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#481: FILE: fs/ntfs/aops.c:861:
+					"attributes is not supported yet. "
+					"Sorry.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#493: FILE: fs/ntfs/aops.c:873:
+	BUG_ON(page_has_buffers(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: fs/ntfs/aops.c:874:
+	BUG_ON(!PageUptodate(page));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#501: FILE: fs/ntfs/aops.c:881:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#506: FILE: fs/ntfs/aops.c:886:
+	if (!NInoAttr(ni))

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#513: FILE: fs/ntfs/aops.c:893:
+	if (unlikely(IS_ERR(m))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: fs/ntfs/aops.c:905:
+	if (unlikely(!lookup_attr(ni->type, ni->name, ni->name_len,
+			IGNORE_CASE, 0, NULL, 0, ctx))) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#537: FILE: fs/ntfs/aops.c:917:
+		ntfs_error(vol->sb, "BUG()! i_size (0x%Lx) doesn't match "

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: fs/ntfs/aops.c:918:
+		ntfs_error(vol->sb, "BUG()! i_size (0x%Lx) doesn't match "
+				"attr_len (0x%x). Aborting write.", vi->i_size,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#544: FILE: fs/ntfs/aops.c:924:
+		ntfs_error(vol->sb, "BUG()! attr_pos (0x%Lx) > attr_len (0x%x)"

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: fs/ntfs/aops.c:925:
+		ntfs_error(vol->sb, "BUG()! attr_pos (0x%Lx) > attr_len (0x%x)"
+				". Aborting write.", attr_pos, attr_len);

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#555: FILE: fs/ntfs/aops.c:935:
+	 * Here, we don't need to zero the out of bounds area everytime because
 	                                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'invokation' may be misspelled - perhaps 'invocation'?
#559: FILE: fs/ntfs/aops.c:939:
+	 * zeroing happens on each ntfs_writepage() invokation.
 	                                            ^^^^^^^^^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#573: FILE: fs/ntfs/aops.c:953:
+	memcpy((u8*)ctx->attr + le16_to_cpu(ctx->attr->_ARA(value_offset)) +

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#575: FILE: fs/ntfs/aops.c:955:
+#if 0

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: fs/ntfs/aops.c:968:
+	ntfs_error(vol->sb, "Writing to resident files is not supported yet. "
+			"Wrote to memory only...");

WARNING:SPLIT_STRING: quoted string split across lines
#596: FILE: fs/ntfs/aops.c:976:
+		ntfs_warning(vol->sb, "Error allocating memory. Redirtying "
+				"page so we try again later.");

WARNING:SPLIT_STRING: quoted string split across lines
#608: FILE: fs/ntfs/aops.c:988:
+		ntfs_error(vol->sb, "Resident attribute write failed with "
+				"error %i. Setting page error flag.", -err);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 46 warnings, 18 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438157.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
