ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#76: FILE: mm/slab.c:136:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: No space is necessary after a cast
#115: FILE: mm/slab.c:435:
+	return (unsigned long*) (objp+obj_dbghead(cachep)-ARCH_SLAB_MINALIGN);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#115: FILE: mm/slab.c:435:
+	return (unsigned long*) (objp+obj_dbghead(cachep)-ARCH_SLAB_MINALIGN);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: mm/slab.c:435:
+	return (unsigned long*) (objp+obj_dbghead(cachep)-ARCH_SLAB_MINALIGN);
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#115: FILE: mm/slab.c:435:
+	return (unsigned long*) (objp+obj_dbghead(cachep)-ARCH_SLAB_MINALIGN);
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#124: FILE: mm/slab.c:441:
+		return (unsigned long*) (objp+cachep->objsize-2*ARCH_SLAB_MINALIGN);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#124: FILE: mm/slab.c:441:
+		return (unsigned long*) (objp+cachep->objsize-2*ARCH_SLAB_MINALIGN);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: mm/slab.c:441:
+		return (unsigned long*) (objp+cachep->objsize-2*ARCH_SLAB_MINALIGN);
 		                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#124: FILE: mm/slab.c:441:
+		return (unsigned long*) (objp+cachep->objsize-2*ARCH_SLAB_MINALIGN);
 		                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: mm/slab.c:441:
+		return (unsigned long*) (objp+cachep->objsize-2*ARCH_SLAB_MINALIGN);
 		                                               ^

CHECK:SPACING: No space is necessary after a cast
#125: FILE: mm/slab.c:442:
+	return (unsigned long*) (objp+cachep->objsize-ARCH_SLAB_MINALIGN);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#125: FILE: mm/slab.c:442:
+	return (unsigned long*) (objp+cachep->objsize-ARCH_SLAB_MINALIGN);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: mm/slab.c:442:
+	return (unsigned long*) (objp+cachep->objsize-ARCH_SLAB_MINALIGN);
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: mm/slab.c:442:
+	return (unsigned long*) (objp+cachep->objsize-ARCH_SLAB_MINALIGN);
 	                                             ^

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#132: FILE: mm/slab.c:447:
+	return (void**)(objp+cachep->objsize-ARCH_SLAB_MINALIGN);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: mm/slab.c:447:
+	return (void**)(objp+cachep->objsize-ARCH_SLAB_MINALIGN);
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#132: FILE: mm/slab.c:447:
+	return (void**)(objp+cachep->objsize-ARCH_SLAB_MINALIGN);
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))
 	                                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#141: FILE: mm/slab.c:1213:
+	if ((size < 4096 || fls(size-1) =3D=3D fls(size-1+3*ARCH_SLAB_MINALIGN)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: mm/slab.c:1246:
+			align =3D ARCH_SLAB_MINALIGN;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: mm/slab.c:1269:
+		align =3D ARCH_SLAB_MINALIGN;
 		      ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#171: FILE: mm/slab.c:1271:
+		cachep->dbghead +=3D ARCH_SLAB_MINALIGN;
 		                ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#172: FILE: mm/slab.c:1272:
+		size +=3D 2*ARCH_SLAB_MINALIGN;
 		     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#172: FILE: mm/slab.c:1272:
+		size +=3D 2*ARCH_SLAB_MINALIGN;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#181: FILE: mm/slab.c:1279:
+		align =3D ARCH_SLAB_MINALIGN;
 		      ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#182: FILE: mm/slab.c:1280:
+		size +=3D ARCH_SLAB_MINALIGN;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#192: FILE: mm/slab.c:2301:
+	unsigned long align_mask =3D ARCH_SLAB_MINALIGN-1;
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#192: FILE: mm/slab.c:2301:
+	unsigned long align_mask =3D ARCH_SLAB_MINALIGN-1;
 	                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223746.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 0 warnings, 18 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223746.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
