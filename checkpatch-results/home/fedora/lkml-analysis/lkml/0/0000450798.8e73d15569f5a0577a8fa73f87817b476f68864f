WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.15/arch/i386/kernel/apic.c working-2.5.15-nonlinear-i386/arch/i386/kernel/apic.c

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#46: FILE: arch/i386/kernel/apic.c:819:
+	slice = clocks / (NR_CPUS+1);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#46: FILE: arch/i386/kernel/apic.c:819:
+	slice = clocks / (NR_CPUS+1);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: arch/i386/kernel/apm.c:1588:
+	if ((num_online_cpus() == 1) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/i386/kernel/apm.c:1906:
+           deactivated when/if a CPU comes up --RR */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#95: FILE: arch/i386/kernel/apm.c:1906:
+	/* FIXME: When boot code changes, this will need to be
+           deactivated when/if a CPU comes up --RR */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#95: FILE: arch/i386/kernel/apm.c:1906:
+           deactivated when/if a CPU comes up --RR */

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: arch/i386/kernel/apm.c:1962:
+           deactivated when/if a CPU comes up --RR */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: arch/i386/kernel/apm.c:1962:
+	/* FIXME: When boot code changes, this will need to be
+           deactivated when/if a CPU comes up --RR */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#106: FILE: arch/i386/kernel/apm.c:1962:
+           deactivated when/if a CPU comes up --RR */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: arch/i386/kernel/bluesmoke.c:249:
+	for (i=0; i<NR_CPUS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#119: FILE: arch/i386/kernel/bluesmoke.c:249:
+	for (i=0; i<NR_CPUS; i++) {
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#119: FILE: arch/i386/kernel/bluesmoke.c:249:
+	for (i=0; i<NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#144: FILE: arch/i386/kernel/io_apic.c:233:
+			if (cpu >= NR_CPUS)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#150: FILE: arch/i386/kernel/io_apic.c:238:
+				cpu = NR_CPUS-1;
 				             ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#150: FILE: arch/i386/kernel/io_apic.c:238:
+				cpu = NR_CPUS-1;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: arch/i386/kernel/io_apic.c:240:
+	} while (!cpu_online(cpu) || !IRQ_ALLOWED(cpu,allowed_mask) ||
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#166: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#166: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: arch/i386/kernel/irq.c:143:
+			p += seq_printf(p, "CPU%d       ",j);
 			                                 ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#179: FILE: arch/i386/kernel/irq.c:154:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#192: FILE: arch/i386/kernel/irq.c:167:
+	for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#200: FILE: arch/i386/kernel/irq.c:173:
+	for (j = 0; j < NR_CPUS; j++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#211: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#211: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#211: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#211: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#215: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#215: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#215: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: arch/i386/kernel/irq.c:212:
+	for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#220: FILE: arch/i386/kernel/irq.c:212:
+	for(i = 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#232: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#232: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#232: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#242: FILE: arch/i386/kernel/microcode.c:346:
+		mc_applied = kmalloc(NR_CPUS*sizeof(struct microcode),
 		                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#242: FILE: arch/i386/kernel/microcode.c:346:
+		mc_applied = kmalloc(NR_CPUS*sizeof(struct microcode),

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#252: FILE: arch/i386/kernel/microcode.c:371:
+		mc_fsize = NR_CPUS * sizeof(struct microcode);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#261: FILE: arch/i386/kernel/microcode.c:389:
+				int bytes = NR_CPUS * sizeof(struct microcode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#303: FILE: arch/i386/kernel/nmi.c:84:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#314: FILE: arch/i386/kernel/nmi.c:334:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#338: FILE: arch/i386/kernel/smp.c:257:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#349: FILE: arch/i386/kernel/smp.c:273:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#360: FILE: arch/i386/kernel/smp.c:547:
+	int cpus = num_online_cpus()-1;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#390: FILE: arch/i386/kernel/smpboot.c:287:
+		while (atomic_read(&tsc_count_start) != num_online_cpus()-1)
 		                                                         ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#391: FILE: arch/i386/kernel/smpboot.c:288:
+			mb();

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#400: FILE: arch/i386/kernel/smpboot.c:306:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()-1)
 		                                                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#401: FILE: arch/i386/kernel/smpboot.c:307:
+			mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#411: FILE: arch/i386/kernel/smpboot.c:314:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#422: FILE: arch/i386/kernel/smpboot.c:323:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#443: FILE: arch/i386/kernel/smpboot.c:366:
+			mb();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#451: FILE: arch/i386/kernel/smpboot.c:373:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()) mb();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:MEMORY_BARRIER: memory barrier without comment
#451: FILE: arch/i386/kernel/smpboot.c:373:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()) mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#492: FILE: arch/i386/kernel/smpboot.c:1214:
+		for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#497: FILE: arch/i386/kernel/smpboot.c:1216:
+			if (!cpu_online(cpu)) continue;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#499: FILE: arch/i386/kernel/smpboot.c:1218:
+			for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#512: FILE: include/asm-i386/hardirq.h:54:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#547: FILE: include/asm-i386/smp.h:95:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#582: FILE: arch/ppc/kernel/irq.c:373:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#582: FILE: arch/ppc/kernel/irq.c:373:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#582: FILE: arch/ppc/kernel/irq.c:373:
+	for (j=0; j<NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#595: FILE: arch/ppc/kernel/irq.c:384:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#608: FILE: arch/ppc/kernel/irq.c:404:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#623: FILE: arch/ppc/kernel/open_pic.c:522:
+	for (i = 0; i < NR_CPUS; ++i, cpumask >>= 1)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#649: FILE: arch/ppc/kernel/setup.c:149:
+		for (i = 0; i < NR_CPUS; ++i)

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: arch/ppc/kernel/smp.c:213:
+           bitmask. --RR */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#687: FILE: arch/ppc/kernel/smp.c:213:
+	/* FIXME: get cpu lock with hotplug cpus, or change this to
+           bitmask. --RR */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#687: FILE: arch/ppc/kernel/smp.c:213:
+           bitmask. --RR */

ERROR:SPACING: space required before the open brace '{'
#735: FILE: arch/ppc/kernel/smp.c:416:
+			for (i = j = 1; i < NR_CPUS; i++, j++){

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#735: FILE: arch/ppc/kernel/smp.c:416:
+			for (i = j = 1; i < NR_CPUS; i++, j++){

WARNING:MEMORY_BARRIER: memory barrier without comment
#755: FILE: arch/ppc/kernel/smp.c:507:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#774: FILE: arch/ppc/kernel/smp.c:516:
+	if (!smp_tb_synchronized && num_online_cpus() == 2) {
 		smp_software_tb_sync(cpu);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#810: FILE: arch/ppc/platforms/iSeries_smp.c:53:
+	if ( num_online_cpus() < 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#810: FILE: arch/ppc/platforms/iSeries_smp.c:53:
+	if ( num_online_cpus() < 2 )

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#819: FILE: arch/ppc/platforms/iSeries_smp.c:65:
+	for (i = 0; i < NR_CPUS; ++i) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#847: FILE: arch/ppc/platforms/pmac_smp.c:308:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#870: FILE: include/asm-ppc/hardirq.h:59:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#895: FILE: include/asm-ppc/smp.h:50:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#952: FILE: arch/ia64/kernel/iosapic.c:760:
+					for (cpu_index++; !cpu_online(cpu_index % NR_CPUS); cpu_index++);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#952: FILE: arch/ia64/kernel/iosapic.c:760:
+					for (cpu_index++; !cpu_online(cpu_index % NR_CPUS); cpu_index++);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#952: FILE: arch/ia64/kernel/iosapic.c:760:
+					for (cpu_index++; !cpu_online(cpu_index % NR_CPUS); cpu_index++);

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: arch/ia64/kernel/iosapic.c:761:
+                                        cpu_index %= NR_CPUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: arch/ia64/kernel/iosapic.c:761:
+                                        cpu_index %= NR_CPUS;$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#953: FILE: arch/ia64/kernel/iosapic.c:761:
+                                        cpu_index %= NR_CPUS;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#966: FILE: arch/ia64/kernel/irq.c:159:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#966: FILE: arch/ia64/kernel/irq.c:159:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#966: FILE: arch/ia64/kernel/irq.c:159:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: arch/ia64/kernel/irq.c:161:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#979: FILE: arch/ia64/kernel/irq.c:173:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#992: FILE: arch/ia64/kernel/irq.c:185:
+	for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1001: FILE: arch/ia64/kernel/irq.c:191:
+	for (j = 0; j < NR_CPUS; j++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1012: FILE: arch/ia64/kernel/irq.c:222:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1012: FILE: arch/ia64/kernel/irq.c:222:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1012: FILE: arch/ia64/kernel/irq.c:222:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1012: FILE: arch/ia64/kernel/irq.c:222:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1012: FILE: arch/ia64/kernel/irq.c:222:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1016: FILE: arch/ia64/kernel/irq.c:225:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1016: FILE: arch/ia64/kernel/irq.c:225:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1016: FILE: arch/ia64/kernel/irq.c:225:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1016: FILE: arch/ia64/kernel/irq.c:225:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1016: FILE: arch/ia64/kernel/irq.c:225:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1025: FILE: arch/ia64/kernel/irq.c:237:
+	for(i=0;i< NR_CPUS;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#1037: FILE: arch/ia64/kernel/mca.c:607:
+	for(cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1037: FILE: arch/ia64/kernel/mca.c:607:
+	for(cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1067: FILE: arch/ia64/kernel/smp.c:171:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1078: FILE: arch/ia64/kernel/smp.c:182:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1090: FILE: arch/ia64/kernel/smp.c:209:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1100: FILE: arch/ia64/kernel/smp.c:294:
+	int cpus = num_online_cpus()-1;
 	                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1157: FILE: arch/ia64/sn/io/sgi_io_init.c:258:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1169: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:990:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1170: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:991:
+		if (!cpu_online(cpu)) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1176: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:996:
+	if (cpu == NR_CPUS) cpu = CPU_NONE;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1176: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:996:
+	if (cpu == NR_CPUS) cpu = CPU_NONE;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1185: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:1005:
+	for (; cpu<NR_CPUS && cpu_enabled(cpu) && cpuid_to_cnodeid(cpu) == cnode; cpu++) {
 	          ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1185: FILE: arch/ia64/sn/io/sn1/ml_SN_intr.c:1005:
+	for (; cpu<NR_CPUS && cpu_enabled(cpu) && cpuid_to_cnodeid(cpu) == cnode; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1200: FILE: arch/ia64/sn/kernel/llsc4.c:1008:
+	while (control_cpu != NR_CPUS) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1202: FILE: arch/ia64/sn/kernel/llsc4.c:1010:
+			for (cpu=0; cpu<NR_CPUS; cpu++) {
 			        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1202: FILE: arch/ia64/sn/kernel/llsc4.c:1010:
+			for (cpu=0; cpu<NR_CPUS; cpu++) {
 			               ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1202: FILE: arch/ia64/sn/kernel/llsc4.c:1010:
+			for (cpu=0; cpu<NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1203: FILE: arch/ia64/sn/kernel/llsc4.c:1011:
+				if (!cpu_online(cpu)) continue;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1204: FILE: arch/ia64/sn/kernel/llsc4.c:1012:
+				printk("Sending interrupt from %d to %d\n", mycpu, cpu);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1219: FILE: arch/ia64/sn/kernel/llsc4.c:1025:
+	if (mycpu == NR_CPUS-1) {
 	                    ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1219: FILE: arch/ia64/sn/kernel/llsc4.c:1025:
+	if (mycpu == NR_CPUS-1) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1231: FILE: arch/ia64/sn/kernel/setup.c:429:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1232: FILE: arch/ia64/sn/kernel/setup.c:430:
+		if (!cpu_online(cpu)) continue;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1238: FILE: arch/ia64/sn/kernel/setup.c:435:
+^Iif (cpu == NR_CPUS) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1238: FILE: arch/ia64/sn/kernel/setup.c:435:
+	if (cpu == NR_CPUS) 

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1280: FILE: include/asm-ia64/hardirq.h:61:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1300: FILE: include/asm-ia64/smp.h:48:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1322: FILE: include/asm-ia64/smp.h:71:
+	for (i = 0; i < NR_CPUS; ++i)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1331: FILE: include/asm-ia64/smp.h:123:
+extern int __cpu_disable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1332: FILE: include/asm-ia64/smp.h:124:
+extern void __cpu_die(unsigned int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1333: FILE: include/asm-ia64/smp.h:125:
+extern int __cpu_up(unsigned int cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 79 warnings, 14 checks, 1079 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
