WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: drivers/scsi/ppa.c:34:
+    unsigned long recon_tmo;    /* How many usecs to wait for reconnection (6th bit) */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#48: FILE: drivers/scsi/ppa.c:47:
+	recon_tmo:      PPA_RECON_TMO,	\
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#48: FILE: drivers/scsi/ppa.c:47:
+	recon_tmo:      PPA_RECON_TMO,	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/scsi/ppa.c:253:
+    if ((length > 10) && (strncmp(buffer, "recon_tmo=", 10) == 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'length > 10'
#56: FILE: drivers/scsi/ppa.c:253:
+    if ((length > 10) && (strncmp(buffer, "recon_tmo=", 10) == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#57: FILE: drivers/scsi/ppa.c:254:
+	x = simple_strtoul(buffer + 10, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/scsi/ppa.c:256:
+        printk("ppa: recon_tmo set to %ld\n", x);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/scsi/ppa.c:256:
+        printk("ppa: recon_tmo set to %ld\n", x);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#59: FILE: drivers/scsi/ppa.c:256:
+        printk("ppa: recon_tmo set to %ld\n", x);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/scsi/ppa.c:258:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/scsi/ppa.c:280:
+    len += sprintf(buffer + len, "recon_tmo : %lu\n", ppa_hosts[i].recon_tmo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/scsi/ppa.c:668:
+    unsigned short ppb = PPA_BASE(host_no);$

WARNING:TYPO_SPELLING: 'comunicate' may be misspelled - perhaps 'communicate'?
#105: FILE: drivers/scsi/ppa.c:681:
+     * We only get here if the drive is ready to comunicate,
                                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/scsi/ppa.c:684:
+    r = (r_str(ppb) & 0xf0);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#117: FILE: drivers/scsi/ppa.c:694:
+	if ((cmd->SCp.this_residual <= 0)) {
 	    ppa_fail(host_no, DID_ERROR);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->SCp.this_residual <= 0'
#117: FILE: drivers/scsi/ppa.c:694:
+	if ((cmd->SCp.this_residual <= 0)) {

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#117: FILE: drivers/scsi/ppa.c:694:
+	if ((cmd->SCp.this_residual <= 0)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/scsi/ppa.c:700:
+^I * for about 100usecs. It is too expensive to wait a $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/scsi/ppa.c:702:
+^I * 500usecs to give the drive a chance first. We do not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/scsi/ppa.c:703:
+^I * change things for "normal" hardware since generally $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/scsi/ppa.c:705:
+^I * This makes the CPU load higher on some hardware $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/scsi/ppa.c:706:
+^I * but otherwise we can not get more then 50K/secs $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#134: FILE: drivers/scsi/ppa.c:709:
+	if ((r & 0xc0) != 0xc0) {
[...]
+	   unsigned long k = ppa_hosts[host_no].recon_tmo; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/scsi/ppa.c:710:
+^I   /* Wait for reconnection should be no more than $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/scsi/ppa.c:713:
+^I   unsigned long k = ppa_hosts[host_no].recon_tmo; $

WARNING:TABSTOP: Statements should start on a tabstop
#138: FILE: drivers/scsi/ppa.c:713:
+	   unsigned long k = ppa_hosts[host_no].recon_tmo; 

WARNING:TABSTOP: Statements should start on a tabstop
#139: FILE: drivers/scsi/ppa.c:714:
+	   for (; k && ((r = (r_str(ppb) & 0xf0)) & 0xc0) != 0xc0; k--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: drivers/scsi/ppa.c:714:
+	   unsigned long k = ppa_hosts[host_no].recon_tmo; 
+	   for (; k && ((r = (r_str(ppb) & 0xf0)) & 0xc0) != 0xc0; k--)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 13)
#139: FILE: drivers/scsi/ppa.c:714:
+	   for (; k && ((r = (r_str(ppb) & 0xf0)) & 0xc0) != 0xc0; k--)
+	     udelay(1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/scsi/ppa.c:717:
+^I   if(!k) $

WARNING:TABSTOP: Statements should start on a tabstop
#142: FILE: drivers/scsi/ppa.c:717:
+	   if(!k) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 13)
#142: FILE: drivers/scsi/ppa.c:717:
+	   if(!k) 
+	     return 0;

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: drivers/scsi/ppa.c:717:
+	   if(!k) 

WARNING:TABSTOP: Statements should start on a tabstop
#143: FILE: drivers/scsi/ppa.c:718:
+	     return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/scsi/ppa.c:719:
+^I}^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/scsi/ppa.c:721:
+^I/* determine if we should use burst I/O */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/scsi/ppa.c:722:
+^Ifast = (bulk && (cmd->SCp.this_residual >= PPA_BURST_SIZE)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/scsi/ppa.h:71:
+ *     Oleg Makarenko <omakarenko@cyberplat.ru>         $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 20 warnings, 3 checks, 151 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
