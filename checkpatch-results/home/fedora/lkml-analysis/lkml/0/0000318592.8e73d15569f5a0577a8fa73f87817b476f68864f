WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#88: 
>> + * deassert PCI-E presense. If PCI-E not present,
                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#96: 
>> +  /* TODO: check PCI-Ex presense */
                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'addres' may be misspelled - perhaps 'address'?
#137: 
Agree. Fixed, except 1-st "+", since virtual addres may be not aligned 
                                             ^^^^^^

WARNING:TYPO_SPELLING: 'desireable' may be misspelled - perhaps 'desirable'?
#142: 
> post (delay/combine) such writes.  I do not think this is a desireable 
                                                              ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#196: 
 * command line argument "pci=exp" to force PCI Express, similar to "conf1" and "conf2"

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#267: FILE: arch/i386/kernel/pci-pc.c:451:
+static void *rrbar_virt = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#271: FILE: arch/i386/kernel/pci-pc.c:455:
+extern int pci_cfg_space_size;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: arch/i386/kernel/pci-pc.c:459:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#278: FILE: arch/i386/kernel/pci-pc.c:462:
+ * deassert PCI-E presense. If PCI-E not present,
                   ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: arch/i386/kernel/pci-pc.c:465:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/i386/kernel/pci-pc.c:467:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: arch/i386/kernel/pci-pc.c:488:
+static int pci_exp_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: arch/i386/kernel/pci-pc.c:491:
+^Iif ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: arch/i386/kernel/pci-pc.c:491:
+	void *addr = rrbar_virt + ((bus << 20) | (dev << 15) | (fn << 12) | reg);
+	if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: arch/i386/kernel/pci-pc.c:511:
+static int pci_exp_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/i386/kernel/pci-pc.c:514:
+^Iif ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: arch/i386/kernel/pci-pc.c:514:
+	void *addr = rrbar_virt + ((bus << 20) | (dev << 15) | (fn << 12) | reg);
+	if ((bus > 255 || dev > 31 || fn > 7 || reg > 4095)) 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#337: FILE: arch/i386/kernel/pci-pc.c:521:
+		if (reg & 1) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#341: FILE: arch/i386/kernel/pci-pc.c:525:
+		if (reg & 3) return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/i386/kernel/pci-pc.c:536:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: arch/i386/kernel/pci-pc.c:538:
+^Iresult = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: arch/i386/kernel/pci-pc.c:538:
+	u32 data;
+	result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: arch/i386/kernel/pci-pc.c:539:
+	result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 
+			PCI_FUNC(dev->devfn), where, 1, &data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: arch/i386/kernel/pci-pc.c:546:
+^Iint result; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: arch/i386/kernel/pci-pc.c:548:
+^Iresult = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: arch/i386/kernel/pci-pc.c:548:
+	u32 data;
+	result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: arch/i386/kernel/pci-pc.c:549:
+	result = pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), 
+			PCI_FUNC(dev->devfn), where, 2, &data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: arch/i386/kernel/pci-pc.c:556:
+^Ireturn pci_exp_read(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: arch/i386/kernel/pci-pc.c:562:
+^Ireturn pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: arch/i386/kernel/pci-pc.c:568:
+^Ireturn pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: arch/i386/kernel/pci-pc.c:574:
+^Ireturn pci_exp_write(0, dev->bus->number, PCI_SLOT(dev->devfn), $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#417: FILE: arch/i386/kernel/pci-pc.c:632:
+			printk(KERN_INFO "PCI: Using configuration type PCI Express\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#420: FILE: arch/i386/kernel/pci-pc.c:635:
+			return &pci_express_conf;
+		} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: arch/i386/kernel/pci-pc.c:1573:
+^Iif ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2 | PCI_PROBE_EXP)) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#433: FILE: arch/i386/kernel/pci-pc.c:1573:
+	if ((pci_probe & (PCI_PROBE_CONF1 | PCI_PROBE_CONF2 | PCI_PROBE_EXP)) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#454: FILE: arch/i386/kernel/pci-pc.c:1666:
 	}
+	else if (!strcmp(str, "exp")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#472: FILE: drivers/pci/proc.c:22:
+int pci_cfg_space_size=256;
                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318592.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 15 warnings, 2 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318592.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
