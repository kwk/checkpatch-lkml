WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
For the hotplug CPU stuff, I have a patch which changes these iterators anyway,

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#62: 
D: and noone uses them that way (except for arch/i386/mach-voyager, which
       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#283: FILE: include/linux/cpumask.h:50:
+#define for_each_cpu_mask(cpu, mask)			\
+	for (cpu = first_cpu_const(mask);		\
+		cpu < NR_CPUS;				\
+		cpu = next_cpu_const(cpu, mask))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#283: FILE: include/linux/cpumask.h:50:
+#define for_each_cpu_mask(cpu, mask)			\
+	for (cpu = first_cpu_const(mask);		\
+		cpu < NR_CPUS;				\
+		cpu = next_cpu_const(cpu, mask))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#285: FILE: include/linux/cpumask.h:52:
+		cpu < NR_CPUS;				\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#308: FILE: include/linux/cpumask.h:61:
+#define cpu_possible(cpu)		({ BUG_ON((cpu) != 0); 1; })

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#314: FILE: include/linux/cpumask.h:63:
+#define for_each_cpu(cpu) for (cpu = 0; cpu < 1; cpu++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#315: FILE: include/linux/cpumask.h:64:
+#define for_each_online_cpu(cpu) for (cpu = 0; cpu < 1; cpu++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#477: FILE: mm/page_alloc.c:877:
+		if (cpu < NR_CPUS && cpu_possible(cpu))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 4 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
