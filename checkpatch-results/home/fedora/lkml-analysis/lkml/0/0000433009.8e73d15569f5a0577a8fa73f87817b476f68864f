WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .6936-linux-2.5.32/arch/i386/kernel/cpu/proc.c .6936-linux-2.5.32.updated/arch/i386/kernel/cpu/proc.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#46: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )
     return -ENXIO;		/* No such CPU */

ERROR:SPACING: space prohibited after that open parenthesis '('
#46: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#46: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#82: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )
     return -ENXIO;		/* No such CPU */

ERROR:SPACING: space prohibited after that open parenthesis '('
#82: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#82: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#178: FILE: arch/ia64/kernel/perfmon.c:110:
+#define cpu_is_online(i) (cpu_online_map[0] & (1UL << i))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#190: FILE: arch/ia64/kernel/setup.c:447:
+	while (*pos < NR_CPUS && !(cpu_online(*pos)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#214: FILE: arch/ia64/kernel/smpboot.c:81:
+volatile unsigned long cpu_online_map[1];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#250: FILE: arch/ia64/kernel/smpboot.c:488:
+		cpu_online_map[0] = phys_cpu_present_map = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#585: FILE: include/asm-i386/smp.h:94:
+#define cpu_online(cpu) (cpu_online_map[0] & (1<<(cpu)))
                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#602: FILE: include/asm-i386/smp.h:105:
+	return NR_CPUS;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#614: FILE: include/asm-ia64/smp.h:41:
+extern volatile unsigned long cpu_online_map[0];

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#646: FILE: include/asm-ia64/smp.h:67:
+	return NR_CPUS;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#671: FILE: include/asm-ppc/smp.h:55:
+#define cpu_online(cpu) (cpu_online_map[0] & (1<<(cpu)))
                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#689: FILE: include/asm-ppc/smp.h:67:
+	return NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#732: FILE: include/asm-ppc64/smp.h:63:
+	return NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#764: FILE: include/asm-sparc64/smp.h:85:
+	return NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#803: FILE: include/linux/sched.h:276:
+	DECLARE_BITMAP(cpus_allowed, NR_CPUS);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#812: FILE: include/linux/sched.h:427:
+extern void set_cpus_allowed(task_t *p, const unsigned long new_mask[]);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#817: FILE: include/linux/sched.h:432:
+#define CPU_MASK_ALL { [0 ... BITS_TO_LONG(NR_CPUS)-1 ] = ~0UL }
                                                    ^

ERROR:SPACING: space prohibited before that close square bracket ']'
#817: FILE: include/linux/sched.h:432:
+#define CPU_MASK_ALL { [0 ... BITS_TO_LONG(NR_CPUS)-1 ] = ~0UL }

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#821: FILE: include/linux/sched.h:436:
+	DECLARE_BITMAP(mask, NR_CPUS) = CPU_MASK_NONE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#822: FILE: include/linux/sched.h:437:
+	DECLARE_BITMAP(mask, NR_CPUS) = CPU_MASK_NONE;
+	BUG_ON(!cpu_online(cpu));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#822: FILE: include/linux/sched.h:437:
+	BUG_ON(!cpu_online(cpu));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open brace '{'
#846: FILE: include/linux/smp.h:96:
+#define cpu_online_map				((unsigned long[1]){ 1 })

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#888: FILE: kernel/sched.c:1545:
+	DECLARE_BITMAP(new_mask, NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#898: FILE: kernel/sched.c:1555:
+	if (any_online_cpu(new_mask) == NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#909: FILE: kernel/sched.c:1597:
+	DECLARE_BITMAP(mask, NR_CPUS);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 20 warnings, 6 checks, 770 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
