WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	           ChangeSet	1.670   -> 1.673  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	drivers/block/cciss.h	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	  drivers/md/raid1.c	1.46    -> 1.47   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	include/linux/raid/md_k.h	1.45    -> 1.46   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	include/linux/raid/md.h	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	  drivers/md/raid5.c	1.50    -> 1.51   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	     drivers/md/md.c	1.112   -> 1.113  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	 drivers/md/linear.c	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/md/multipath.c	1.40    -> 1.41   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	  drivers/md/raid0.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/block/loop.c	1.63    -> 1.64   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	drivers/block/cciss.c	1.58    -> 1.59   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	include/linux/raid/raid0.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	include/linux/loop.h	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.671

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# Compaq Smart array sector_t cleanup: prepare for possible 64-bit sector_t

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.672

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# Clean up loop device to allow huge backing files.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# 02/10/03	peterc@numbat.chubb.wattle.id.au	1.673

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# MD transition to 64-bit sector_t.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#  -- Hold sizes and offsets as sector_t not int;

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#  -- use 64-bit arithmetic if necessary to map block-in-raid to zone  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#     and block-in-zone

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#77: 
--- a/drivers/block/cciss.c	Thu Oct  3 15:06:13 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/block/cciss.c:178:
+                size = sprintf(buffer+len, "cciss/c%dd%d: blksz=%d nr_blocks=%llu\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/block/cciss.c:178:
+                size = sprintf(buffer+len, "cciss/c%dd%d: blksz=%d nr_blocks=%llu\n",$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: drivers/block/cciss.c:178:
+                size = sprintf(buffer+len, "cciss/c%dd%d: blksz=%d nr_blocks=%llu\n",
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/block/cciss.c:179:
+                                ctlr, i, drv->block_size, (unsigned long long)drv->nr_blocks);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/block/cciss.c:179:
+                size = sprintf(buffer+len, "cciss/c%dd%d: blksz=%d nr_blocks=%llu\n",
+                                ctlr, i, drv->block_size, (unsigned long long)drv->nr_blocks);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/block/cciss.c:179:
+                                ctlr, i, drv->block_size, (unsigned long long)drv->nr_blocks);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/block/cciss.c:408:
+                        driver_geo.cylinders = (int)hba[ctlr]->drv[dsk].nr_blocks / (0xff*0x3f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/block/cciss.c:408:
+                        driver_geo.cylinders = (int)hba[ctlr]->drv[dsk].nr_blocks / (0xff*0x3f);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#95: FILE: drivers/block/cciss.c:408:
+                        driver_geo.cylinders = (int)hba[ctlr]->drv[dsk].nr_blocks / (0xff*0x3f);
                                                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/block/cciss.c:1182:
+^Iprintk(KERN_INFO "      blocks= %u block_size= %d\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#104: FILE: drivers/block/cciss.c:1182:
+	printk(KERN_INFO "      blocks= %u block_size= %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/block/cciss.c:1183:
+	printk(KERN_INFO "      blocks= %u block_size= %d\n", 
 					total_size, block_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/block/loop.c:171:
+^Ireturn 0;^I^I^I^I^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: drivers/md/linear.c:77:
+		unsigned round = sector_div(sz, conf->smallest->size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/md/linear.c:78:
+		unsigned round = sector_div(sz, conf->smallest->size);
+		nb_zone = conf->nr_zones = sz + (round ? 1 : 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#170: FILE: drivers/md/linear.c:78:
+		nb_zone = conf->nr_zones = sz + (round ? 1 : 0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/md/linear.c:80:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#212: FILE: drivers/md/md.c:261:
+		size &= ~((sector_t)mddev->chunk_size/1024 - 1);
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#228: FILE: drivers/md/md.c:274:
+	mask = ~((sector_t)mddev->chunk_size/1024 - 1);
 	                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#246: FILE: drivers/md/md.c:617:
+	printk(KERN_INFO "md: rdev %s, SZ:%08llu F:%d S:%d DN:%d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/md/md.c:618:
+	printk(KERN_INFO "md: rdev %s, SZ:%08llu F:%d S:%d DN:%d ",
 		bdev_partition_name(rdev->bdev),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#269: FILE: drivers/md/md.c:719:
+		printk(KERN_INFO "%s's sb offset has changed from %llu to %llu, skipping\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/md/md.c:720:
+^I^I       bdev_partition_name(rdev->bdev), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: drivers/md/md.c:721:
+^I^I    (unsigned long long)rdev->sb_offset, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#282: FILE: drivers/md/md.c:732:
+		printk(KERN_INFO "%s's size has changed from %llu to %llu since import, skipping\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/md/md.c:734:
+^I^I       (unsigned long long)rdev->size, $

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#290: FILE: drivers/md/md.c:739:
+	printk(KERN_INFO "(write) %s's sb offset: %llu\n", bdev_partition_name(rdev->bdev), (unsigned long long)sb_offset);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#290: FILE: drivers/md/md.c:739:
+	printk(KERN_INFO "(write) %s's sb offset: %llu\n", bdev_partition_name(rdev->bdev), (unsigned long long)sb_offset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#319: FILE: drivers/md/md.c:1410:
+	printk("%s: setting max_sectors to %d, segment boundary to %d\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#322: FILE: drivers/md/md.c:1413:
+	       (chunk_size>>1)-1);
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#322: FILE: drivers/md/md.c:1413:
+	       (chunk_size>>1)-1);
 	                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#324: FILE: drivers/md/md.c:1415:
+	blk_queue_segment_boundary(&mddev->queue, (chunk_size>>1) - 1);
 	                                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#343: FILE: drivers/md/md.c:2040:
+		printk(KERN_WARNING "md%d: disk size %llu blocks < array size %llu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/md/md.c:2041:
+^I^I^I^Imdidx(mddev), (unsigned long long)size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/md/md.c:2041:
+		printk(KERN_WARNING "md%d: disk size %llu blocks < array size %llu\n",
+				mdidx(mddev), (unsigned long long)size, 

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#369: FILE: drivers/md/md.c:2682:
+				sz += sprintf(page + sz, "\n      %llu blocks", (unsigned long long)size);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#378: FILE: drivers/md/md.c:3484:
+extern u64 __umoddi3(u64, u64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#378: FILE: drivers/md/md.c:3484:
+extern u64 __umoddi3(u64, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#378: FILE: drivers/md/md.c:3484:
+extern u64 __umoddi3(u64, u64);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#387: FILE: drivers/md/md.c:3497:
+EXPORT_SYMBOL(__umoddi3);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: drivers/md/multipath.c:133:
+^I^Iprintk(KERN_ERR "multipath: %s: rescheduling sector %llu\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/md/multipath.c:133:
+		printk(KERN_ERR "multipath: %s: rescheduling sector %llu\n", 

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#421: FILE: drivers/md/multipath.c:359:
+				bdev_partition_name(bio->bi_bdev), (unsigned long long)bio->bi_sector);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#426: FILE: drivers/md/multipath.c:363:
+				bdev_partition_name(bio->bi_bdev), (unsigned long long)bio->bi_sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#449: FILE: drivers/md/raid0.c:49:
+			printk("raid0:   comparing %s(%llu) with %s(%llu)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/md/raid0.c:138:
+^I^I^I^I^Iprintk("  (%llu) is smallest!.\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#460: FILE: drivers/md/raid0.c:138:
+					printk("  (%llu) is smallest!.\n", 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: drivers/md/raid0.c:156:
+		printk("raid0: current zone offset: %llu\n", (unsigned long long)current_offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#479: FILE: drivers/md/raid0.c:167:
+	unsigned  cur=0, i=0, nb_zone;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#479: FILE: drivers/md/raid0.c:167:
+	unsigned  cur=0, i=0, nb_zone;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#479: FILE: drivers/md/raid0.c:167:
+	unsigned  cur=0, i=0, nb_zone;
 	                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#490: FILE: drivers/md/raid0.c:182:
+	printk("raid0 : md_size is %llu blocks.\n", (unsigned long long)md_size[mdidx(mddev)]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#496: FILE: drivers/md/raid0.c:186:
+	printk("raid0 : nb_zone is %d.\n", nb_zone);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#500: FILE: drivers/md/raid0.c:189:
+	printk("raid0 : Allocating %d bytes for hash.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/md/raid0.c:190:
+	printk("raid0 : Allocating %d bytes for hash.\n",
 				nb_zone*sizeof(struct raid0_hash));

WARNING:LONG_LINE: line length of 174 exceeds 100 columns
#521: FILE: drivers/md/raid0.c:318:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %llu %d\n", chunk_size, (unsigned long long)bio->bi_sector, bio->bi_size >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: drivers/md/raid0.c:318:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %llu %d\n", chunk_size, (unsigned long long)bio->bi_sector, bio->bi_size >> 10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#521: FILE: drivers/md/raid0.c:318:
+	printk ("raid0_make_request bug: can't convert block across chunks or bigger than %dk %llu %d\n", chunk_size, (unsigned long long)bio->bi_sector, bio->bi_size >> 10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#525: FILE: drivers/md/raid0.c:321:
+	printk("raid0_make_request bug: hash==NULL for block %llu\n", (unsigned long long)block);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#529: FILE: drivers/md/raid0.c:324:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %llu\n", (unsigned long long)block);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#529: FILE: drivers/md/raid0.c:324:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %llu\n", (unsigned long long)block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: drivers/md/raid0.c:324:
+	printk ("raid0_make_request bug: hash->zone0==NULL for block %llu\n", (unsigned long long)block);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#533: FILE: drivers/md/raid0.c:327:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %llu\n", (unsigned long long)block);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#533: FILE: drivers/md/raid0.c:327:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %llu\n", (unsigned long long)block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: drivers/md/raid0.c:327:
+	printk ("raid0_make_request bug: hash->zone1==NULL for block %llu\n", (unsigned long long)block);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#546: FILE: drivers/md/raid1.c:301:
+			printk(KERN_ERR "raid1: %s: rescheduling sector %llu\n",

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#547: FILE: drivers/md/raid1.c:302:
+			       bdev_partition_name(conf->mirrors[mirror].rdev->bdev), (unsigned long long)r1_bio->sector);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#569: FILE: drivers/md/raid1.c:830:
+		printk(IO_ERROR, bdev_partition_name(bio->bi_bdev), (unsigned long long)r1_bio->sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#569: FILE: drivers/md/raid1.c:830:
+		printk(IO_ERROR, bdev_partition_name(bio->bi_bdev), (unsigned long long)r1_bio->sector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/md/raid1.c:881:
+^I^Iprintk(KERN_ALERT "raid1: sync aborting as there is nowhere to write sector %llu\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#578: FILE: drivers/md/raid1.c:881:
+		printk(KERN_ALERT "raid1: sync aborting as there is nowhere to write sector %llu\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/md/raid1.c:882:
+		printk(KERN_ALERT "raid1: sync aborting as there is nowhere to write sector %llu\n", 
+			(unsigned long long)r1_bio->sector);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#588: FILE: drivers/md/raid1.c:935:
+				printk(IO_ERROR, bdev_partition_name(bio->bi_bdev), (unsigned long long)r1_bio->sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#588: FILE: drivers/md/raid1.c:935:
+				printk(IO_ERROR, bdev_partition_name(bio->bi_bdev), (unsigned long long)r1_bio->sector);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#594: FILE: drivers/md/raid1.c:940:
+				bdev_partition_name(rdev->bdev), (unsigned long long)r1_bio->sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#634: FILE: drivers/md/raid5.c:196:
+			printk("sector=%llx i=%d %p %p %p %d\n",

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#644: FILE: drivers/md/raid5.c:339:
+	PRINTK("end_read_request %llu/%d, count: %d, uptodate %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);
 	                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#644: FILE: drivers/md/raid5.c:339:
+	PRINTK("end_read_request %llu/%d, count: %d, uptodate %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);
 	                                                                                                                          ^^^^^^^^

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#644: FILE: drivers/md/raid5.c:339:
+	PRINTK("end_read_request %llu/%d, count: %d, uptodate %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#653: FILE: drivers/md/raid5.c:410:
+	PRINTK("end_write_request %llu/%d, count %d, uptodate: %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);
 	                                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#653: FILE: drivers/md/raid5.c:410:
+	PRINTK("end_write_request %llu/%d, count %d, uptodate: %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);
 	                                                                                                                           ^^^^^^^^

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#653: FILE: drivers/md/raid5.c:410:
+	PRINTK("end_write_request %llu/%d, count %d, uptodate: %d.\n", (unsigned long long)sh->sector, i, atomic_read(&sh->count), uptodate);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#680: FILE: drivers/md/raid5.c:663:
+			printk("compute_block() %d, stripe %llu, %d not present\n", dd_idx, (unsigned long long)sh->sector, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#680: FILE: drivers/md/raid5.c:663:
+			printk("compute_block() %d, stripe %llu, %d not present\n", dd_idx, (unsigned long long)sh->sector, i);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#698: FILE: drivers/md/raid5.c:765:
+	PRINTK("adding bh b#%llu to stripe s#%llu\n", (unsigned long long)bi->bi_sector, (unsigned long long)sh->sector);

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#707: FILE: drivers/md/raid5.c:786:
+	PRINTK("added bi b#%llu to stripe s#%llu, disk %d.\n", (unsigned long long)bi->bi_sector, (unsigned long long)sh->sector, dd_idx);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#716: FILE: drivers/md/raid5.c:834:
+	PRINTK("handling stripe %llu, cnt=%d, pd_idx=%d\n", (unsigned long long)sh->sector, atomic_read(&sh->count), sh->pd_idx);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#725: FILE: drivers/md/raid5.c:1038:
+		PRINTK("for sector %llu, rmw=%d rcw=%d\n", (unsigned long long)sh->sector, rmw, rcw);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#734: FILE: drivers/md/raid5.c:1181:
+				PRINTK("for %llu schedule op %ld on disc %d\n", (unsigned long long)sh->sector, bi->bi_rw, i);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#743: FILE: drivers/md/raid5.c:1192:
+				PRINTK("skip op %ld on disc %d for sector %llu\n", bi->bi_rw, i, (unsigned long long)sh->sector);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#754: FILE: drivers/md/raid5.c:1513:
+	printk("sh %llu, pd_idx %d, state %ld.\n", (unsigned long long)sh->sector, sh->pd_idx, sh->state);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#754: FILE: drivers/md/raid5.c:1513:
+	printk("sh %llu, pd_idx %d, state %ld.\n", (unsigned long long)sh->sector, sh->pd_idx, sh->state);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#755: FILE: drivers/md/raid5.c:1514:
+	printk("sh %llu,  count %d.\n", (unsigned long long)sh->sector, atomic_read(&sh->count));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#756: FILE: drivers/md/raid5.c:1515:
+	printk("sh %llu, ", (unsigned long long)sh->sector);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 100 warnings, 14 checks, 660 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
