WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
--- linux-2.6.11-rc2-mm1-modules.orig/security/seclvl.c	2005-02-03 15:36:43.925683472 -0600

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#58: FILE: security/seclvl.c:493:
+static int seclvl_bd_claim(struct file * filp)
                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: security/seclvl.c:493:
+static int seclvl_bd_claim(struct file * filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#98: FILE: security/seclvl.c:515:
+static int seclvl_file_permission(struct file * filp, int mask)
                                                 ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: security/seclvl.c:515:
+static int seclvl_file_permission(struct file * filp, int mask)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#102: FILE: security/seclvl.c:518:
+	if (current->pid != 1 && S_ISBLK(filp->f_dentry->d_inode->i_mode)
+	    && (mask & MAY_WRITE)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: security/seclvl.c:526:
+			if (seclvl_bd_claim(filp)) {
 			                    ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: security/seclvl.c:541:
+static int seclvl_inode_setattr(struct dentry * dentry, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: security/seclvl.c:541:
+static int seclvl_inode_setattr(struct dentry * dentry, struct iattr * iattr)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: security/seclvl.c:594:
+static void seclvl_file_free_security(struct file * filp)
                                                     ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: security/seclvl.c:594:
+static void seclvl_file_free_security(struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: security/seclvl.c:596:
+	struct dentry * dentry = filp->f_dentry;

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: security/seclvl.c:597:
+	struct dentry * dentry = filp->f_dentry;
+	if (dentry && (filp->f_mode & FMODE_WRITE)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: security/seclvl.c:598:
+		struct inode * inode = dentry->d_inode;

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: security/seclvl.c:599:
+		struct inode * inode = dentry->d_inode;
+		if (inode && S_ISBLK(inode->i_mode)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#145: FILE: security/seclvl.c:600:
+		if (inode && S_ISBLK(inode->i_mode)
+		    && filp->f_security == current) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: security/seclvl.c:602:
+			struct block_device *bdev = inode->i_bdev;
+			if (bdev) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208434.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 8 warnings, 2 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208434.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
