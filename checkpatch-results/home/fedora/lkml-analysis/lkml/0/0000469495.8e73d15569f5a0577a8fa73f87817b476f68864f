WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/char/tipar.c:1:
+/* Hey EMACS -*- linux-c -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: drivers/char/tipar.c:15:
an

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#102: FILE: drivers/char/tipar.c:56:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#104: FILE: drivers/char/tipar.c:58:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#105: FILE: drivers/char/tipar.c:59:
+#include <asm/bitops.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: drivers/char/tipar.c:70:
+/* ----- global variables ---------------------------------------------
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#121: FILE: drivers/char/tipar.c:73:
+       struct pardevice *dev;                  /* Parport device entry
+};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/char/tipar.c:79:
+static int timeout = TIMAXTIME;     /* timeout in tenth of seconds    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#128: FILE: drivers/char/tipar.c:79:
+static int delay   = IO_DELAY;      /* inter-bit delay in microseconds
+static int timeout = TIMAXTIME;     /* timeout in tenth of seconds    

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#130: FILE: drivers/char/tipar.c:80:
+static int timeout = TIMAXTIME;     /* timeout in tenth of seconds    
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#133: FILE: drivers/char/tipar.c:83:
+static unsigned long opened = 0;    /* opened devices */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#137: FILE: drivers/char/tipar.c:86:
+/* --- macros for parport access --------------------------------------
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#146: FILE: drivers/char/tipar.c:93:
+/* --- setting states on the D-bus with the right timing: -------------
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#164: FILE: drivers/char/tipar.c:110:
+/* ----- global defines -----------------------------------------------
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: drivers/char/tipar.c:117:
+/* ----- D-bus bit-banging functions ----------------------------------
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: drivers/char/tipar.c:119:
+                    1                 0                      0$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: drivers/char/tipar.c:119:
+/* D-bus protocol (45kbit/s max):
+                    1                 0                      0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: drivers/char/tipar.c:120:
+       _______        ______|______    __________|________   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: drivers/char/tipar.c:122:
+       _        ____________|________      ______|__________      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/char/tipar.c:129:
+       int bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/char/tipar.c:130:
+       unsigned long max;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/char/tipar.c:131:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/char/tipar.c:131:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/char/tipar.c:132:
+       for (bit=0; bit<8; bit++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#189: FILE: drivers/char/tipar.c:132:
+       for (bit=0; bit<8; bit++) {
+               if (data & 1) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#189: FILE: drivers/char/tipar.c:132:
+       for (bit=0; bit<8; bit++) {
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#189: FILE: drivers/char/tipar.c:132:
+       for (bit=0; bit<8; bit++) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/char/tipar.c:133:
+               if (data & 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/char/tipar.c:133:
+               if (data & 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#190: FILE: drivers/char/tipar.c:133:
+               if (data & 1) {
+                       outbyte(2, minor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/char/tipar.c:134:
+                       outbyte(2, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/char/tipar.c:134:
+                       outbyte(2, minor);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: drivers/char/tipar.c:135:
+                       START(max); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/char/tipar.c:135:
+                       START(max); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/char/tipar.c:135:
+                       START(max); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/char/tipar.c:136:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/char/tipar.c:136:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#193: FILE: drivers/char/tipar.c:136:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/char/tipar.c:137:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/tipar.c:137:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/char/tipar.c:138:
+                       } while (inbyte(minor) & 0x10);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/tipar.c:138:
+                       } while (inbyte(minor) & 0x10);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/char/tipar.c:139:
+                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/char/tipar.c:139:
+                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/tipar.c:139:
+                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/char/tipar.c:140:
+                       outbyte(3, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/tipar.c:140:
+                       outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/char/tipar.c:141:
+                       START(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/tipar.c:141:
+                       START(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/char/tipar.c:142:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/tipar.c:142:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#199: FILE: drivers/char/tipar.c:142:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/char/tipar.c:143:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/char/tipar.c:143:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/char/tipar.c:144:
+                       } while (!(inbyte(minor) & 0x10));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/char/tipar.c:144:
+                       } while (!(inbyte(minor) & 0x10));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/char/tipar.c:145:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/tipar.c:145:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#202: FILE: drivers/char/tipar.c:145:
+               } else {
+                       outbyte(1, minor);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/char/tipar.c:146:
+                       outbyte(1, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/char/tipar.c:146:
+                       outbyte(1, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/char/tipar.c:147:
+                       START(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/char/tipar.c:147:
+                       START(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/char/tipar.c:148:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/char/tipar.c:148:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#205: FILE: drivers/char/tipar.c:148:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/char/tipar.c:149:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/char/tipar.c:149:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/char/tipar.c:150:
+                       } while (inbyte(minor) & 0x20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/char/tipar.c:150:
+                       } while (inbyte(minor) & 0x20);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/char/tipar.c:152:
+                       outbyte(3, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/char/tipar.c:152:
+                       outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/char/tipar.c:153:
+                       START(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/char/tipar.c:153:
+                       START(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/char/tipar.c:154:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/char/tipar.c:154:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#211: FILE: drivers/char/tipar.c:154:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/char/tipar.c:155:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/char/tipar.c:155:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/char/tipar.c:156:
+                       } while (!(inbyte(minor) & 0x20));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/char/tipar.c:156:
+                       } while (!(inbyte(minor) & 0x20));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/char/tipar.c:157:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/tipar.c:157:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/char/tipar.c:159:
+               data >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/char/tipar.c:159:
+               data >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/char/tipar.c:160:
+               udelay(delay);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/char/tipar.c:160:
+               udelay(delay);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/char/tipar.c:161:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/char/tipar.c:161:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/char/tipar.c:161:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/char/tipar.c:162:
+               if(current->need_resched)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/char/tipar.c:162:
+               if(current->need_resched)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#219: FILE: drivers/char/tipar.c:162:
+               if(current->need_resched)
+                       schedule();

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: drivers/char/tipar.c:162:
+               if(current->need_resched)

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/char/tipar.c:163:
+                       schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/char/tipar.c:163:
+                       schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/char/tipar.c:164:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/char/tipar.c:165:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/char/tipar.c:165:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/tipar.c:166:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/char/tipar.c:172:
+       int bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/char/tipar.c:173:
+       unsigned char v, data=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#230: FILE: drivers/char/tipar.c:173:
+       unsigned char v, data=0;
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/char/tipar.c:174:
+       unsigned long max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/tipar.c:176:
+       for (bit=0; bit<8; bit++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#233: FILE: drivers/char/tipar.c:176:
+       for (bit=0; bit<8; bit++) {
+               START(max); 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#233: FILE: drivers/char/tipar.c:176:
+       for (bit=0; bit<8; bit++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#233: FILE: drivers/char/tipar.c:176:
+       for (bit=0; bit<8; bit++) {
                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/char/tipar.c:177:
+               START(max); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/char/tipar.c:177:
+               START(max); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/tipar.c:177:
+               START(max); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/char/tipar.c:178:
+               do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/tipar.c:178:
+               do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#235: FILE: drivers/char/tipar.c:178:
+               do {
+                       WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/char/tipar.c:179:
+                       WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/tipar.c:179:
+                       WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/char/tipar.c:180:
+               } while ((v=inbyte(minor) & 0x30) == 0x30);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/tipar.c:180:
+               } while ((v=inbyte(minor) & 0x30) == 0x30);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#237: FILE: drivers/char/tipar.c:180:
+               } while ((v=inbyte(minor) & 0x30) == 0x30);
                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/char/tipar.c:181:
+      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/tipar.c:181:
+      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/char/tipar.c:182:
+               if (v == 0x10) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/char/tipar.c:182:
+               if (v == 0x10) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/char/tipar.c:182:
+               if (v == 0x10) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#239: FILE: drivers/char/tipar.c:182:
+               if (v == 0x10) { 
+                       data=(data>>1) | 0x80;

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/char/tipar.c:183:
+                       data=(data>>1) | 0x80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/tipar.c:183:
+                       data=(data>>1) | 0x80;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#240: FILE: drivers/char/tipar.c:183:
+                       data=(data>>1) | 0x80;
                            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#240: FILE: drivers/char/tipar.c:183:
+                       data=(data>>1) | 0x80;
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/char/tipar.c:184:
+                       outbyte(1, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/char/tipar.c:184:
+                       outbyte(1, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/char/tipar.c:185:
+                       START(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/char/tipar.c:185:
+                       START(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/char/tipar.c:186:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/tipar.c:186:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#243: FILE: drivers/char/tipar.c:186:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/char/tipar.c:187:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/char/tipar.c:187:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/char/tipar.c:188:
+                       } while (!(inbyte(minor) & 0x20));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/char/tipar.c:188:
+                       } while (!(inbyte(minor) & 0x20));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/char/tipar.c:189:
+                       outbyte(3, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/char/tipar.c:189:
+                       outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/char/tipar.c:190:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/char/tipar.c:190:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#247: FILE: drivers/char/tipar.c:190:
+               } else {
+                       data=data>>1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/char/tipar.c:191:
+                       data=data>>1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/char/tipar.c:191:
+                       data=data>>1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: drivers/char/tipar.c:191:
+                       data=data>>1;
                            ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#248: FILE: drivers/char/tipar.c:191:
+                       data=data>>1;
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/char/tipar.c:192:
+                       outbyte(2, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/char/tipar.c:192:
+                       outbyte(2, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/char/tipar.c:193:
+                       START(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/char/tipar.c:193:
+                       START(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/char/tipar.c:194:
+                       do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/char/tipar.c:194:
+                       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#251: FILE: drivers/char/tipar.c:194:
+                       do {
+                               WAIT(max);

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/char/tipar.c:195:
+                               WAIT(max);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/tipar.c:195:
+                               WAIT(max);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/char/tipar.c:196:
+                       } while (!(inbyte(minor) & 0x10));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/char/tipar.c:196:
+                       } while (!(inbyte(minor) & 0x10));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/char/tipar.c:197:
+                       outbyte(3, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/char/tipar.c:197:
+                       outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/char/tipar.c:198:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/char/tipar.c:198:
+               }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/char/tipar.c:200:
+               udelay(delay);          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/char/tipar.c:200:
+               udelay(delay);          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/char/tipar.c:200:
+               udelay(delay);          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/char/tipar.c:201:
+               if(current->need_resched)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/char/tipar.c:201:
+               if(current->need_resched)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#258: FILE: drivers/char/tipar.c:201:
+               if(current->need_resched)
+                        schedule();

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: drivers/char/tipar.c:201:
+               if(current->need_resched)

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/char/tipar.c:202:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/char/tipar.c:202:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/char/tipar.c:203:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/char/tipar.c:204:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/char/tipar.c:204:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/char/tipar.c:205:
+       return (int)data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/char/tipar.c:211:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/char/tipar.c:212:
+       int seq[]={ 0x00, 0x20, 0x10, 0x30 };$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#269: FILE: drivers/char/tipar.c:212:
+       int seq[]={ 0x00, 0x20, 0x10, 0x30 };
                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/char/tipar.c:213:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/char/tipar.c:213:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/char/tipar.c:214:
+       for(i=3; i>=0; i--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#271: FILE: drivers/char/tipar.c:214:
+       for(i=3; i>=0; i--) {
+               outbyte(3, minor);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#271: FILE: drivers/char/tipar.c:214:
+       for(i=3; i>=0; i--) {
             ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#271: FILE: drivers/char/tipar.c:214:
+       for(i=3; i>=0; i--) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: drivers/char/tipar.c:214:
+       for(i=3; i>=0; i--) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/char/tipar.c:215:
+               outbyte(3, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/char/tipar.c:215:
+               outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: drivers/char/tipar.c:216:
+               outbyte(i, minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/char/tipar.c:216:
+               outbyte(i, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/char/tipar.c:217:
+               udelay(delay);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/char/tipar.c:217:
+               udelay(delay);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/char/tipar.c:218:
+               /*printk(KERN_DEBUG "Probing -> %i: 0x%02x 0x%02x\n", i,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/char/tipar.c:219:
+               if ( (inbyte(minor) & 0x30) != seq[i]) {$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#277: FILE: drivers/char/tipar.c:219:
+               /*printk(KERN_DEBUG "Probing -> %i: 0x%02x 0x%02x\n", i,
+               if ( (inbyte(minor) & 0x30) != seq[i]) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/char/tipar.c:220:
+                       outbyte(3, minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/char/tipar.c:221:
+                       return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/char/tipar.c:222:
+               }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/char/tipar.c:223:
+       } $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#288: FILE: drivers/char/tipar.c:229:
+/* ----- kernel module functions---------------------------------------
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/char/tipar.c:235:
+               return -ENXIO;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/char/tipar.c:235:
+               return -ENXIO;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: drivers/char/tipar.c:238:
+               return -EBUSY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/char/tipar.c:243:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/char/tipar.c:252:
+               return -ENXIO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/char/tipar.c:255:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/char/tipar.c:260:
+                          const char *buf, size_t count, loff_t *ppos)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/char/tipar.c:264:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/char/tipar.c:266:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/char/tipar.c:268:
+               unsigned char b;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/char/tipar.c:269:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/char/tipar.c:269:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/char/tipar.c:270:
+               if (get_user(b, buf + n)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/char/tipar.c:271:
+                       n = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/char/tipar.c:272:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/char/tipar.c:273:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/char/tipar.c:275:
+               if (put_ti_parallel(minor, b) == -1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/char/tipar.c:276:
+                       init_ti_parallel(minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/char/tipar.c:277:
+                       n = -ETIMEDOUT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/char/tipar.c:278:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/char/tipar.c:279:
+               }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/char/tipar.c:286:
+static ssize_t tipar_read(struct file *file, char *buf, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/char/tipar.c:287:
+                         size_t count, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/char/tipar.c:294:
+               return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/char/tipar.c:297:
+               return -ESPIPE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: drivers/char/tipar.c:300:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/char/tipar.c:302:
+               b = get_ti_parallel(minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: drivers/char/tipar.c:303:
+               if (b == -1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: drivers/char/tipar.c:304:
+                       init_ti_parallel(minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/char/tipar.c:305:
+                       retval = -ETIMEDOUT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/char/tipar.c:306:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/char/tipar.c:307:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/char/tipar.c:308:
+               else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/char/tipar.c:309:
+                       break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/char/tipar.c:310:
+      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: drivers/char/tipar.c:311:
+               /* Non-blocking mode: try again ! */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/char/tipar.c:312:
+               if (file->f_flags & O_NONBLOCK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/char/tipar.c:312:
+               if (file->f_flags & O_NONBLOCK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#373: FILE: drivers/char/tipar.c:312:
+               if (file->f_flags & O_NONBLOCK) {
+                       retval = -EAGAIN;

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/char/tipar.c:313:
+                       retval = -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/char/tipar.c:313:
+                       retval = -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/char/tipar.c:314:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/char/tipar.c:314:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/char/tipar.c:315:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/char/tipar.c:315:
+               }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/char/tipar.c:316:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/char/tipar.c:316:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/char/tipar.c:316:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/char/tipar.c:317:
+               /* Signal pending, try again ! */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/char/tipar.c:318:
+               if (signal_pending(current)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/char/tipar.c:318:
+               if (signal_pending(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#379: FILE: drivers/char/tipar.c:318:
+               if (signal_pending(current)) {
+                       retval = -ERESTARTSYS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/char/tipar.c:319:
+                       retval = -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/char/tipar.c:319:
+                       retval = -ERESTARTSYS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/char/tipar.c:320:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/char/tipar.c:320:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/char/tipar.c:321:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/char/tipar.c:321:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: drivers/char/tipar.c:323:
+               if(current->need_resched)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/char/tipar.c:323:
+               if(current->need_resched)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#384: FILE: drivers/char/tipar.c:323:
+               if(current->need_resched)
+                        schedule();

ERROR:SPACING: space required before the open parenthesis '('
#384: FILE: drivers/char/tipar.c:323:
+               if(current->need_resched)

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/char/tipar.c:324:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/char/tipar.c:324:
+                        schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/char/tipar.c:325:
+       } while (1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/char/tipar.c:327:
+       retval = put_user(b, (unsigned char *)buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/char/tipar.c:328:
+       if (!retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#389: FILE: drivers/char/tipar.c:328:
+       if (!retval)
+               retval = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/char/tipar.c:329:
+               retval = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/char/tipar.c:329:
+               retval = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/char/tipar.c:330:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#391: FILE: drivers/char/tipar.c:330:
+       else
+               retval = -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/char/tipar.c:331:
+               retval = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/char/tipar.c:331:
+               retval = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/char/tipar.c:334:
+       parport_release(table[minor].dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/char/tipar.c:335:
+       return retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/char/tipar.c:339:
+                      unsigned int cmd, unsigned long arg)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/char/tipar.c:339:
+static int tipar_ioctl(struct inode *inode, struct file *file,
+                      unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/char/tipar.c:339:
+                      unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/char/tipar.c:341:
+       int retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/char/tipar.c:343:
+       switch (cmd) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/char/tipar.c:344:
+       case TIPAR_DELAY:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/char/tipar.c:345:
+               get_user(delay, &arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/char/tipar.c:345:
+               get_user(delay, &arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/char/tipar.c:346:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/char/tipar.c:346:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/char/tipar.c:347:
+       case TIPAR_TIMEOUT:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/char/tipar.c:348:
+               get_user(timeout, &arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/char/tipar.c:348:
+               get_user(timeout, &arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/char/tipar.c:349:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/char/tipar.c:349:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/char/tipar.c:351:
+               retval = -ENOTTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/char/tipar.c:351:
+               retval = -ENOTTY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/char/tipar.c:352:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/char/tipar.c:352:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/char/tipar.c:353:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/char/tipar.c:355:
+       return retval;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#421: FILE: drivers/char/tipar.c:359:
+/* ----- kernel module registering ------------------------------------
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#437: FILE: drivers/char/tipar.c:374:
+ *      You can use 'tipar=timeout,delay' to set these now. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#438: FILE: drivers/char/tipar.c:375:
+static int __init tipar_setup (char *str)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/char/tipar.c:377:
+       int ints[2];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/char/tipar.c:378:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/char/tipar.c:378:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/char/tipar.c:379:
+        str = get_options (str, ARRAY_SIZE(ints), ints);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/char/tipar.c:379:
+        str = get_options (str, ARRAY_SIZE(ints), ints);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: drivers/char/tipar.c:379:
+        str = get_options (str, ARRAY_SIZE(ints), ints);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: drivers/char/tipar.c:380:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/char/tipar.c:380:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: drivers/char/tipar.c:381:
+        if (ints[0] > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/char/tipar.c:381:
+        if (ints[0] > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/char/tipar.c:382:
+                timeout = ints[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/char/tipar.c:382:
+                timeout = ints[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: drivers/char/tipar.c:383:
+                if (ints[0] > 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/char/tipar.c:383:
+                if (ints[0] > 1) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#446: FILE: drivers/char/tipar.c:383:
+                if (ints[0] > 1) {
+                        delay = ints[2];
+               }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: drivers/char/tipar.c:384:
+                        delay = ints[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/char/tipar.c:384:
+                        delay = ints[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/char/tipar.c:385:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/char/tipar.c:385:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: drivers/char/tipar.c:386:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: drivers/char/tipar.c:386:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: drivers/char/tipar.c:387:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/char/tipar.c:387:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: drivers/char/tipar.c:388:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/char/tipar.c:388:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/char/tipar.c:400:
+       char name[8];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/char/tipar.c:401:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/char/tipar.c:401:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/char/tipar.c:403:
+       table[nr].dev = parport_register_device(port, "tipar",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: drivers/char/tipar.c:404:
+                                               NULL, NULL, NULL, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: drivers/char/tipar.c:404:
+                                               NULL, NULL, NULL, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: drivers/char/tipar.c:405:
+                                               (void *) &table[nr]);$

CHECK:SPACING: No space is necessary after a cast
#469: FILE: drivers/char/tipar.c:405:
+                                               (void *) &table[nr]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/char/tipar.c:405:
+                                               (void *) &table[nr]);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: drivers/char/tipar.c:406:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/char/tipar.c:406:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/char/tipar.c:407:
+       if (table[nr].dev == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#471: FILE: drivers/char/tipar.c:407:
+       if (table[nr].dev == NULL)
+               return 1;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table[nr].dev"
#471: FILE: drivers/char/tipar.c:407:
+       if (table[nr].dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: drivers/char/tipar.c:408:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/char/tipar.c:408:
+               return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/char/tipar.c:409:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/char/tipar.c:409:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/char/tipar.c:411:
+       sprintf(name, "%d", nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/char/tipar.c:412:
+       devfs_register(devfs_handle, name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/char/tipar.c:413:
+                       DEVFS_FL_DEFAULT, TIPAR_MAJOR, nr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/char/tipar.c:413:
+       devfs_register(devfs_handle, name,
+                       DEVFS_FL_DEFAULT, TIPAR_MAJOR, nr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/char/tipar.c:413:
+                       DEVFS_FL_DEFAULT, TIPAR_MAJOR, nr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: drivers/char/tipar.c:414:
+                       S_IFCHR | S_IRUGO | S_IWUGO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/char/tipar.c:414:
+                       S_IFCHR | S_IRUGO | S_IWUGO,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#478: FILE: drivers/char/tipar.c:414:
+                       S_IFCHR | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: drivers/char/tipar.c:415:
+                       &tipar_fops, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/char/tipar.c:415:
+                       &tipar_fops, NULL);$

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#481: FILE: drivers/char/tipar.c:417:
+       /* Display informations */
                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/char/tipar.c:418:
+       printk(KERN_INFO "tipar%d: using %s (%s).\n", nr, port->name,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/char/tipar.c:418:
+       printk(KERN_INFO "tipar%d: using %s (%s).\n", nr, port->name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/char/tipar.c:419:
+              (port->irq == PARPORT_IRQ_NONE) ? "polling" :$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/char/tipar.c:419:
+              (port->irq == PARPORT_IRQ_NONE) ? "polling" :$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/char/tipar.c:419:
+       printk(KERN_INFO "tipar%d: using %s (%s).\n", nr, port->name,
"interrupt-driven");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/char/tipar.c:421:
+       if (probe_ti_parallel(nr) != -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#486: FILE: drivers/char/tipar.c:421:
+       if (probe_ti_parallel(nr) != -1)
+               printk("tipar%d: link cable found !\n", nr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: drivers/char/tipar.c:422:
+               printk("tipar%d: link cable found !\n", nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/char/tipar.c:422:
+               printk("tipar%d: link cable found !\n", nr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#487: FILE: drivers/char/tipar.c:422:
+               printk("tipar%d: link cable found !\n", nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/char/tipar.c:423:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#488: FILE: drivers/char/tipar.c:423:
+       else
+               printk("tipar%d: link cable not found.\n", nr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/char/tipar.c:424:
+               printk("tipar%d: link cable not found.\n", nr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/char/tipar.c:424:
+               printk("tipar%d: link cable not found.\n", nr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#489: FILE: drivers/char/tipar.c:424:
+               printk("tipar%d: link cable not found.\n", nr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/char/tipar.c:426:
+       return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: drivers/char/tipar.c:429:
+static void tipar_attach (struct parport *port)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/char/tipar.c:431:
+       if (tp_count == PP_NO) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#496: FILE: drivers/char/tipar.c:431:
+       if (tp_count == PP_NO) {
+               printk("tipar: ignoring parallel port (max. %d)\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/char/tipar.c:432:
+               printk("tipar: ignoring parallel port (max. %d)\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/char/tipar.c:432:
+               printk("tipar: ignoring parallel port (max. %d)\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/char/tipar.c:432:
+               printk("tipar: ignoring parallel port (max. %d)\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#497: FILE: drivers/char/tipar.c:432:
+               printk("tipar: ignoring parallel port (max. %d)\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: drivers/char/tipar.c:433:
+                      PP_NO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/char/tipar.c:433:
+                      PP_NO);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: drivers/char/tipar.c:434:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/char/tipar.c:434:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/char/tipar.c:435:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/char/tipar.c:437:
+       if (!tipar_register(tp_count, port))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#502: FILE: drivers/char/tipar.c:437:
+       if (!tipar_register(tp_count, port))
+               tp_count++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/char/tipar.c:438:
+               tp_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/char/tipar.c:438:
+               tp_count++;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#506: FILE: drivers/char/tipar.c:441:
+static void tipar_detach (struct parport *port)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/char/tipar.c:447:
+       "tipar",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/char/tipar.c:448:
+       tipar_attach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/char/tipar.c:449:
+       tipar_detach,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/char/tipar.c:450:
+       NULL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/char/tipar.c:455:
+       printk("tipar: parallel link cable driver, version %s\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: drivers/char/tipar.c:455:
+       printk("tipar: parallel link cable driver, version %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/char/tipar.c:456:
+       $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/char/tipar.c:456:
+       printk("tipar: parallel link cable driver, version %s\n",
+       

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/char/tipar.c:456:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/char/tipar.c:457:
+       if (devfs_register_chrdev (TIPAR_MAJOR, "tipar", &tipar_fops)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#523: FILE: drivers/char/tipar.c:457:
+       if (devfs_register_chrdev (TIPAR_MAJOR, "tipar", &tipar_fops)) {
+               printk("tipar: unable to get major %d\n", TIPAR_MAJOR);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: drivers/char/tipar.c:457:
+       if (devfs_register_chrdev (TIPAR_MAJOR, "tipar", &tipar_fops)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: drivers/char/tipar.c:458:
+               printk("tipar: unable to get major %d\n", TIPAR_MAJOR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/char/tipar.c:458:
+               printk("tipar: unable to get major %d\n", TIPAR_MAJOR);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: drivers/char/tipar.c:458:
+               printk("tipar: unable to get major %d\n", TIPAR_MAJOR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: drivers/char/tipar.c:459:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/char/tipar.c:459:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/char/tipar.c:460:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/char/tipar.c:463:
+       devfs_handle = devfs_mk_dir (NULL, "ticables/par", NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: drivers/char/tipar.c:463:
+       devfs_handle = devfs_mk_dir (NULL, "ticables/par", NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: drivers/char/tipar.c:465:
+       if (parport_register_driver (&tipar_driver)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#531: FILE: drivers/char/tipar.c:465:
+       if (parport_register_driver (&tipar_driver)) {
+               printk ("tipar: unable to register with parport\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#531: FILE: drivers/char/tipar.c:465:
+       if (parport_register_driver (&tipar_driver)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&tipar_driver'
#531: FILE: drivers/char/tipar.c:465:
+       if (parport_register_driver (&tipar_driver)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: drivers/char/tipar.c:466:
+               printk ("tipar: unable to register with parport\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/char/tipar.c:466:
+               printk ("tipar: unable to register with parport\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: drivers/char/tipar.c:466:
+               printk ("tipar: unable to register with parport\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: drivers/char/tipar.c:466:
+               printk ("tipar: unable to register with parport\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/char/tipar.c:467:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/char/tipar.c:467:
+               return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/char/tipar.c:468:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/char/tipar.c:470:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/char/tipar.c:475:
+       unsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/char/tipar.c:478:
+       parport_unregister_driver (&tipar_driver);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: drivers/char/tipar.c:478:
+       parport_unregister_driver (&tipar_driver);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/char/tipar.c:480:
+       devfs_unregister (devfs_handle);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#546: FILE: drivers/char/tipar.c:480:
+       devfs_unregister (devfs_handle);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: drivers/char/tipar.c:481:
+       devfs_unregister_chrdev(TIPAR_MAJOR, "tipar");  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/char/tipar.c:481:
+       devfs_unregister_chrdev(TIPAR_MAJOR, "tipar");  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/char/tipar.c:483:
+       for (i = 0; i < PP_NO; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#549: FILE: drivers/char/tipar.c:483:
+       for (i = 0; i < PP_NO; i++) {
+               if (table[i].dev == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/char/tipar.c:484:
+               if (table[i].dev == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/char/tipar.c:484:
+               if (table[i].dev == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#550: FILE: drivers/char/tipar.c:484:
+               if (table[i].dev == NULL)
+                       continue;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!table[i].dev"
#550: FILE: drivers/char/tipar.c:484:
+               if (table[i].dev == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: drivers/char/tipar.c:485:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/char/tipar.c:485:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: drivers/char/tipar.c:486:
+               parport_unregister_device(table[i].dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: drivers/char/tipar.c:486:
+               parport_unregister_device(table[i].dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/char/tipar.c:487:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/char/tipar.c:489:
+       printk("tipar: module unloaded !\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: drivers/char/tipar.c:489:
+       printk("tipar: module unloaded !\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#558: FILE: drivers/char/tipar.c:492:
+__setup("tipar=", tipar_setup);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#564: FILE: drivers/char/tipar.c:497:
+MODULE_DESCRIPTION("Device driver for TI/PC parallel link cables");
                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Device>
#564: FILE: drivers/char/tipar.c:497:
+MODULE_DESCRIPTION("Device driver for TI/PC parallel link cables");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: drivers/char/tipar.c:503:
+MODULE_PARM_DESC(timeout, "Timeout (default=1.5 seconds)");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#570: FILE: drivers/char/tipar.c:503:
+MODULE_PARM_DESC(timeout, "Timeout (default=1.5 seconds)");
                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#570: FILE: drivers/char/tipar.c:503:
+MODULE_PARM_DESC(timeout, "Timeout (default=1.5 seconds)");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#572: FILE: drivers/char/tipar.c:505:
+MODULE_PARM_DESC(delay, "Inter-bit delay (default=10 microseconds)");
                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#572: FILE: drivers/char/tipar.c:505:
+MODULE_PARM_DESC(delay, "Inter-bit delay (default=10 microseconds)");
                                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <Inter>
#572: FILE: drivers/char/tipar.c:505:
+MODULE_PARM_DESC(delay, "Inter-bit delay (default=10 microseconds)");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#576: FILE: include/linux/ticable.h:1:
+/* Hey EMACS -*- linux-c -*-

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: include/linux/ticable.h:10:
+#ifndef TICABLE_H $

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#624: FILE: MAINTAINERS:1508:
+P:     Romain Lievin

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#625: FILE: MAINTAINERS:1509:
+M:     roms@lpg.ticalc.org

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#625: FILE: MAINTAINERS:1509:
+P:     Romain Lievin
+M:     roms@lpg.ticalc.org

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#626: FILE: MAINTAINERS:1510:
+P:     Julien Blache

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#627: FILE: MAINTAINERS:1511:
+M:     jb@technologeek.org

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#627: FILE: MAINTAINERS:1511:
+P:     Julien Blache
+M:     jb@technologeek.org

WARNING:MAINTAINERS_STYLE: MAINTAINERS entries use one tab after TYPE:
#628: FILE: MAINTAINERS:1512:
+S:     Maintained

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469495.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 192 errors, 250 warnings, 16 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469495.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
