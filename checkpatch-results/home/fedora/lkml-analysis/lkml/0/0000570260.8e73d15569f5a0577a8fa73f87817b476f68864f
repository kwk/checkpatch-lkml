WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#39: FILE: include/asm-i386/semaphore.h:50:
+#define STRUCT_SEMAPHORE			\
+	atomic_t count;				\
+	unsigned long owner, owner_depth;	\
+	int waking;				\
 	struct wait_queue * wait;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#48: FILE: include/asm-i386/semaphore.h:59:
+};
+struct semaphore_norecurse {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#58: FILE: include/asm-i386/semaphore.h:71:
+	((struct task_struct *)(((PAGE_SIZE<<1)-1) & (sem)->owner))
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#58: FILE: include/asm-i386/semaphore.h:71:
+	((struct task_struct *)(((PAGE_SIZE<<1)-1) & (sem)->owner))
 	                                       ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#81: FILE: include/asm-i386/semaphore.h:232:
+		:"c" (sem)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#82: FILE: include/asm-i386/semaphore.h:233:
+		:"memory");
 		^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#85: FILE: include/asm-i386/semaphore.h:236:
+extern inline void down_norecurse(struct semaphore_norecurse * sem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#87: FILE: include/asm-i386/semaphore.h:238:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#100: FILE: include/asm-i386/semaphore.h:251:
+		:"c" (sem)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#101: FILE: include/asm-i386/semaphore.h:252:
+		:"memory");
 		^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/asm-i386/semaphore.h:255:
+extern inline int down_interruptible_norecurse(struct semaphore_norecurse * sem)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#108: FILE: include/asm-i386/semaphore.h:259:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#121: FILE: include/asm-i386/semaphore.h:272:
+		:"=a" (result)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#122: FILE: include/asm-i386/semaphore.h:273:
+		:"c" (sem)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#123: FILE: include/asm-i386/semaphore.h:274:
+		:"memory");
 		^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: include/asm-i386/semaphore.h:278:
+extern inline void up_norecurse(struct semaphore_norecurse * sem)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#129: FILE: include/asm-i386/semaphore.h:280:
+	__asm__ __volatile__(

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 1 warnings, 6 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
