WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#88: FILE: drivers/video/aty/radeon_base.c:678:
+	if (!memcmp(sign, "ATOM", 4) || !memcmp(sign, "MOTA", 4)) {
 		  rinfo->is_atom_bios = 1;

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#142: FILE: drivers/video/aty/radeon_monitor.c:19:
+	{{13000, 0x400f4}, {15000, 0x400f7}, {0xffffffff, 0x400f7}, {0, 0}},	/*CHIP_FAMILY_RV280*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#277: FILE: drivers/video/aty/radeon_monitor.c:50:
 int __devinit radeon_get_lvds_info_atom(struct radeonfb_info *rinfo)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#280: FILE: drivers/video/aty/radeon_monitor.c:184:
 void __devinit radeon_get_tmds_info(struct radeonfb_info *rinfo)

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#346: FILE: drivers/video/aty/radeon_monitor.c:356:
+ * Try to find monitor informations & EDID data out of the Open Firmware
                        ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#351: FILE: drivers/video/aty/radeon_monitor.c:361:
+static int __devinit radeon_parse_montype_prop(struct radeonfb_info *rinfo,

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#356: FILE: drivers/video/aty/radeon_monitor.c:366:
+	static char *propnames[] = { "DFP,EDID", "LCD,EDID", "EDID",

ERROR:SPACING: space required before the open brace '{'
#375: FILE: drivers/video/aty/radeon_monitor.c:385:
+		} else{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#382: FILE: drivers/video/aty/radeon_monitor.c:392:
+			printk(KERN_WARNING "radeonfb: Unknown OF display-type: %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "propnames[i]"
#387: FILE: drivers/video/aty/radeon_monitor.c:397:
+	for (i = 0; propnames[i] != NULL; ++i) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pedid"
#389: FILE: drivers/video/aty/radeon_monitor.c:399:
+		if (pedid != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pedid"
#396: FILE: drivers/video/aty/radeon_monitor.c:406:
+	if (pedid == NULL && dp->parent && (hdno != -1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdno == 0'
#398: FILE: drivers/video/aty/radeon_monitor.c:408:
+	if (pedid == NULL && dp->parent && (hdno == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pedid"
#398: FILE: drivers/video/aty/radeon_monitor.c:408:
+	if (pedid == NULL && dp->parent && (hdno == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pedid"
#400: FILE: drivers/video/aty/radeon_monitor.c:410:
+	if (pedid == NULL)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#418: FILE: drivers/video/aty/radeon_monitor.c:428:
+static int __devinit radeon_probe_OF_head(struct radeonfb_info *rinfo, int head_no)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'radeon_probe_OF_head', this function's name, in a string
#424: FILE: drivers/video/aty/radeon_monitor.c:434:
+	RTRACE("radeon_probe_OF_head\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp"
#429: FILE: drivers/video/aty/radeon_monitor.c:439:
+	if (dp == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/video/aty/radeon_monitor.c:452:
+^I^I^Iif (!pname) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#447: FILE: drivers/video/aty/radeon_monitor.c:457:
+			       pname, pname[len-1], head_no);
 			                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#448: FILE: drivers/video/aty/radeon_monitor.c:458:
+			if (pname[len-1] == 'A' && head_no == 0) {
 			             ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#448: FILE: drivers/video/aty/radeon_monitor.c:458:
+			if (pname[len-1] == 'A' && head_no == 0) {
[...]
+			} else if (pname[len-1] == 'B' && head_no == 1) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#450: FILE: drivers/video/aty/radeon_monitor.c:460:
+			} else if (pname[len-1] == 'B' && head_no == 1) {
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: drivers/video/aty/radeon_monitor.c:465:
+		} while(!second);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#474: FILE: drivers/video/aty/radeon_monitor.c:515:
+				radeon_fill_conn(&rinfo->connectors[idx++], conn.mon_type, conn.ddc_type,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#480: FILE: drivers/video/aty/radeon_monitor.c:599:
 int __devinit radeon_get_conn_info_openfirmware(struct radeonfb_info *rinfo)

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: drivers/video/aty/radeon_monitor.c:605:
+	for(i = 0 ; i < 2 ; i++) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 32)
#558: FILE: drivers/video/aty/radeon_monitor.c:852:
 		    if (connector_found == 1) {
+				memcpy(&rinfo->connectors[1], &rinfo->connectors[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/video/aty/radeon_monitor.c:854:
+				memcpy(&rinfo->connectors[1], &rinfo->connectors[0],
 				   sizeof(struct radeon_connector));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#583: FILE: drivers/video/aty/radeon_monitor.c:1115:
+					if (radeon_probe_i2c_connector(rinfo, &SECONDARY_HEAD(rinfo)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 15 warnings, 11 checks, 612 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
