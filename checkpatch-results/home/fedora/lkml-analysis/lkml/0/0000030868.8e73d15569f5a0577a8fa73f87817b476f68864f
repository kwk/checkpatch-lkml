WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#174: FILE: include/linux/buffer_head_struct.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#186: FILE: include/linux/buffer_head_struct.h:13:
+#include <asm/atomic.h>

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#217: FILE: include/linux/buffer_head_struct.h:44:
+typedef void (bh_end_io_t)(struct buffer_head *bh, int uptodate);
                                                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/linux/buffer_head_struct.h:66:
+ ^Ivoid *b_private;^I^I/* reserved for b_end_io */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: include/linux/buffer_head_struct.h:66:
+ ^Ivoid *b_private;^I^I/* reserved for b_end_io */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/linux/buffer_head_struct.h:66:
+ ^Ivoid *b_private;^I^I/* reserved for b_end_io */$

WARNING:TYPO_SPELLING: 'Uptodate' may be misspelled - perhaps 'Up-to-date'?
#280: FILE: include/linux/buffer_head_struct.h:107:
+BUFFER_FNS(Uptodate, uptodate)
            ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#280: FILE: include/linux/buffer_head_struct.h:107:
+BUFFER_FNS(Uptodate, uptodate)
                      ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Uptodate>
#280: FILE: include/linux/buffer_head_struct.h:107:
+BUFFER_FNS(Uptodate, uptodate)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Dirty>
#281: FILE: include/linux/buffer_head_struct.h:108:
+BUFFER_FNS(Dirty, dirty)

CHECK:CAMELCASE: Avoid CamelCase: <Lock>
#283: FILE: include/linux/buffer_head_struct.h:110:
+BUFFER_FNS(Lock, locked)

CHECK:CAMELCASE: Avoid CamelCase: <Req>
#285: FILE: include/linux/buffer_head_struct.h:112:
+BUFFER_FNS(Req, req)

CHECK:CAMELCASE: Avoid CamelCase: <Mapped>
#287: FILE: include/linux/buffer_head_struct.h:114:
+BUFFER_FNS(Mapped, mapped)

CHECK:CAMELCASE: Avoid CamelCase: <New>
#288: FILE: include/linux/buffer_head_struct.h:115:
+BUFFER_FNS(New, new)

CHECK:CAMELCASE: Avoid CamelCase: <Async_Read>
#289: FILE: include/linux/buffer_head_struct.h:116:
+BUFFER_FNS(Async_Read, async_read)

CHECK:CAMELCASE: Avoid CamelCase: <Async_Write>
#290: FILE: include/linux/buffer_head_struct.h:117:
+BUFFER_FNS(Async_Write, async_write)

CHECK:CAMELCASE: Avoid CamelCase: <Delay>
#291: FILE: include/linux/buffer_head_struct.h:118:
+BUFFER_FNS(Delay, delay)

CHECK:CAMELCASE: Avoid CamelCase: <Boundary>
#292: FILE: include/linux/buffer_head_struct.h:119:
+BUFFER_FNS(Boundary, boundary)

CHECK:CAMELCASE: Avoid CamelCase: <Write_EIO>
#293: FILE: include/linux/buffer_head_struct.h:120:
+BUFFER_FNS(Write_EIO, write_io_error)

CHECK:CAMELCASE: Avoid CamelCase: <Ordered>
#294: FILE: include/linux/buffer_head_struct.h:121:
+BUFFER_FNS(Ordered, ordered)

CHECK:CAMELCASE: Avoid CamelCase: <Eopnotsupp>
#295: FILE: include/linux/buffer_head_struct.h:122:
+BUFFER_FNS(Eopnotsupp, eopnotsupp)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bh' may be better as '(bh)' to avoid precedence issues
#298: FILE: include/linux/buffer_head_struct.h:125:
+#define touch_buffer(bh)	mark_page_accessed(bh->b_page)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#301: FILE: include/linux/buffer_head_struct.h:128:
+#define page_buffers(page)					\
+	({							\
+		BUG_ON(!PagePrivate(page));			\
+		((struct buffer_head *)page_private(page));	\
+	})

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: include/linux/buffer_head_struct.h:130:
+		BUG_ON(!PagePrivate(page));			\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 15 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
