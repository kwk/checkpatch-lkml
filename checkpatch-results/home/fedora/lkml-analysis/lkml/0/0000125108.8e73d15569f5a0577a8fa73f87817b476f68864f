WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: include/linux/container.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#51: FILE: include/linux/container.h:9:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: include/linux/container.h:12:
+#define MAX_CONTAINER_NAME_LEN ^I^I32$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#57: FILE: include/linux/container.h:15:
+	spinlock_t	    lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/container.h:31:
+extern struct container_struct *container_find(const char *container_name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: include/linux/container.h:32:
+extern int    container_new     (const char *container_name);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/container.h:32:
+extern int    container_new     (const char *container_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: include/linux/container.h:33:
+extern void   container_attach  (struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: include/linux/container.h:33:
+extern void   container_attach  (struct task_struct *task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#76: FILE: include/linux/container.h:34:
+extern void   container_detach  (struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/container.h:34:
+extern void   container_detach  (struct task_struct *task);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: kernel/container.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#151: FILE: kernel/container.c:18:
+#include <asm/uaccess.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: kernel/container.c:24:
+#define DPRINTK( fmt, args... ) // printk( "%s: " fmt, __FUNCTION__, ##args )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: kernel/container.c:24:
+#define DPRINTK( fmt, args... ) // printk( "%s: " fmt, __FUNCTION__, ##args )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: kernel/container.c:74:
+	spin_lock_irqsave(&container_lock,flags);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: kernel/container.c:82:
+	spin_unlock_irqrestore(&container_lock,flags);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: kernel/container.c:99:
+	newc = kmalloc(sizeof(struct container_struct),GFP_KERNEL);
 	                                              ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*newc)...) over kmalloc(sizeof(struct container_struct)...)
#232: FILE: kernel/container.c:99:
+	newc = kmalloc(sizeof(struct container_struct),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!newc"
#233: FILE: kernel/container.c:100:
+	if (newc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: kernel/container.c:102:
+	memset(newc,0,sizeof(struct container_struct));
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: kernel/container.c:102:
+	memset(newc,0,sizeof(struct container_struct));
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: kernel/container.c:103:
+	strncpy(newc->name, container_name, MAX_CONTAINER_NAME_LEN-1);
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: kernel/container.c:106:
+	atomic_set(&newc->tcount,0);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: kernel/container.c:108:
+	spin_lock_irqsave(&container_lock,flags);
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#242: FILE: kernel/container.c:109:
+	for ( i=1; i<MAX_NR_CONTAINERS; i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#242: FILE: kernel/container.c:109:
+	for ( i=1; i<MAX_NR_CONTAINERS; i++) {
 	            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#242: FILE: kernel/container.c:109:
+	for ( i=1; i<MAX_NR_CONTAINERS; i++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cptr"
#245: FILE: kernel/container.c:112:
+		if (cptr == NULL)

ERROR:SPACING: space prohibited after that open parenthesis '('
#252: FILE: kernel/container.c:119:
+	if ( i == MAX_NR_CONTAINERS ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#252: FILE: kernel/container.c:119:
+	if ( i == MAX_NR_CONTAINERS ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#270: FILE: kernel/container.c:137:
+	spin_unlock_irqrestore(&container_lock,flags);
 	                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 7 warnings, 10 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
