WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
ra.prev_page should be properly setup on entrance, and ra_access() should be

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#52: FILE: include/linux/mm.h:1024:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: include/linux/mm.h:1024:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#79: FILE: mm/filemap.c:844:
+			if (unlikely(page == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#82: FILE: mm/filemap.c:847:
+						filp, prev_page, NULL,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: mm/filemap.c:847:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, NULL,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#89: FILE: mm/filemap.c:854:
+						filp, prev_page, page,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: mm/filemap.c:854:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, page,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: mm/filemap.c:1320:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: mm/filemap.c:1329:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: mm/filemap.c:1334:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, page,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#187: FILE: mm/readahead.c:1863:
+ * @mapping, @ra, @filp: the same as page_cache_readahead()
                    ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: mm/readahead.c:1867:
+ * ^I^I[@begin_index, @end_index) is the read the caller is performing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: mm/readahead.c:1868:
+ *^I ^I@index indicates the page to be read now$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#209: FILE: mm/readahead.c:1885:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: mm/readahead.c:1885:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: mm/readahead.c:1897:
+		if(!TestClearPageReadahead(page))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: mm/readahead.c:1901:
+			ra_account(ra, RA_EVENT_IO_CONGESTION,
+							end_index - index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: mm/readahead.c:1908:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_HIT,
+				ra->readahead_index - ra->lookahead_index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#249: FILE: mm/readahead.c:1925:
+		return newfile_readahead(mapping, filp, ra, end_index, ra_min);
 		                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: mm/readahead.c:1931:
+	if (!disable_stateful_method &&
+			index == ra->lookahead_index && ra_cache_hit_ok(ra))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#256: FILE: mm/readahead.c:1932:
+		return state_based_readahead(mapping, filp, ra, page,
 		                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#263: FILE: mm/readahead.c:1939:
+		return thrashing_recovery_readahead(mapping, filp, ra,
 		                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: mm/readahead.c:1946:
+	if (!page && begin_index == index &&
+				try_read_backward(ra, index, size, ra_max))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#271: FILE: mm/readahead.c:1947:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: mm/readahead.c:1953:
+	ret = try_context_based_readahead(mapping, ra, prev_page, page,
+							index, ra_min, ra_max);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#279: FILE: mm/readahead.c:1955:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: mm/readahead.c:1962:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_NOACTION,
+						ra->readahead_index - index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#294: FILE: mm/readahead.c:1970:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#303: FILE: mm/readahead.c:1979:
+	size = __do_page_cache_readahead(mapping, filp, index, size, 0);
 	                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: mm/readahead.c:1983:
+	dprintk("readrandom(ino=%lu, pages=%lu, index=%lu-%lu-%lu) = %lu\n",
+			mapping->host->i_ino, mapping->nrpages,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 15 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
