ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/drivers/i2c/chips/Kconfig	Mon Mar 15 14:33:54 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: drivers/i2c/chips/Kconfig:42:
+^I  DS1621 and DS1625 sensor chips. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/i2c/chips/ds1621.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#79: FILE: drivers/i2c/chips/ds1621.c:2:
+/*
+    ds1621.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/i2c/chips/ds1621.c:3:
+             monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/i2c/chips/ds1621.c:6:
+    Ported to Linux 2.6 by Aurelien Jarno <aurelien@aurel32.net> with $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/chips/ds1621.c:20:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/i2c/chips/ds1621.c:21:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#142: FILE: drivers/i2c/chips/ds1621.c:65:
+/* Conversions. Rounding and limit checking is only done on the TO_REG
+   variants. Note that you should be a bit careful with which arguments

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: drivers/i2c/chips/ds1621.c:67:
+   Fixing this is just not worth it. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/i2c/chips/ds1621.c:69:
+                              (DS1621_ALARM_TEMP_HIGH | DS1621_ALARM_TEMP_LOW))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/i2c/chips/ds1621.c:69:
+                              (DS1621_ALARM_TEMP_HIGH | DS1621_ALARM_TEMP_LOW))$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#175: FILE: drivers/i2c/chips/ds1621.c:98:
+static int ds1621_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#183: FILE: drivers/i2c/chips/ds1621.c:106:
+/* All registers are word-sized, except for the configuration register.
+   DS1621 uses a high-byte first convention, which is exactly opposite to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: drivers/i2c/chips/ds1621.c:107:
+   the usual practice. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#194: FILE: drivers/i2c/chips/ds1621.c:117:
+/* All registers are word-sized, except for the configuration register.
+   DS1621 uses a high-byte first convention, which is exactly opposite to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/i2c/chips/ds1621.c:118:
+   the usual practice. */

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#208: FILE: drivers/i2c/chips/ds1621.c:131:
+	/* switch to continous conversion mode */
 	             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#209: FILE: drivers/i2c/chips/ds1621.c:132:
+	reg &= ~ DS1621_REG_CONFIG_1SHOT;
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/i2c/chips/ds1621.c:139:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/i2c/chips/ds1621.c:141:
+^I$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#223: FILE: drivers/i2c/chips/ds1621.c:146:
+#define show(value)							\
+static ssize_t show_##value(struct device *dev, char *buf)		\
+{									\
+	struct ds1621_data *data = ds1621_update_client(dev);		\
+	return sprintf(buf, "%d\n", LM75_TEMP_FROM_REG(data->value));	\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#234: FILE: drivers/i2c/chips/ds1621.c:157:
+#define set_temp(suffix, value, reg)					\
+static ssize_t set_temp_##suffix(struct device *dev, const char *buf,	\
+				 size_t count)				\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct ds1621_data *data = ds1621_update_client(dev);		\
+	data->value = LM75_TEMP_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	ds1621_write_value(client, reg, data->value);			\
+	return count;							\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#234: FILE: drivers/i2c/chips/ds1621.c:157:
+#define set_temp(suffix, value, reg)					\
+static ssize_t set_temp_##suffix(struct device *dev, const char *buf,	\
+				 size_t count)				\
+{									\
+	struct i2c_client *client = to_i2c_client(dev);			\
+	struct ds1621_data *data = ds1621_update_client(dev);		\
+	data->value = LM75_TEMP_TO_REG(simple_strtoul(buf, NULL, 10));	\
+	ds1621_write_value(client, reg, data->value);			\
+	return count;							\
+}

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#240: FILE: drivers/i2c/chips/ds1621.c:163:
+	data->value = LM75_TEMP_TO_REG(simple_strtoul(buf, NULL, 10));	\

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/i2c/chips/ds1621.c:174:
+	struct ds1621_data *data = ds1621_update_client(dev);
+	return sprintf(buf, "%d\n", ALARMS_FROM_REG(data->conf));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms' to 'alarms_show'
#252: FILE: drivers/i2c/chips/ds1621.c:175:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#254: FILE: drivers/i2c/chips/ds1621.c:177:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#255: FILE: drivers/i2c/chips/ds1621.c:178:
+static DEVICE_ATTR(temp1_input, S_IRUGO , show_temp, NULL);
                                         ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp' to 'temp1_input_show'
#255: FILE: drivers/i2c/chips/ds1621.c:178:
+static DEVICE_ATTR(temp1_input, S_IRUGO , show_temp, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#255: FILE: drivers/i2c/chips/ds1621.c:178:
+static DEVICE_ATTR(temp1_input, S_IRUGO , show_temp, NULL);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#256: FILE: drivers/i2c/chips/ds1621.c:179:
+static DEVICE_ATTR(temp1_min, S_IWUSR | S_IRUGO , show_temp_min, set_temp_min);
                                                 ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_min' to 'temp1_min_show' 'set_temp_min' to 'temp1_min_store'
#256: FILE: drivers/i2c/chips/ds1621.c:179:
+static DEVICE_ATTR(temp1_min, S_IWUSR | S_IRUGO , show_temp_min, set_temp_min);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#256: FILE: drivers/i2c/chips/ds1621.c:179:
+static DEVICE_ATTR(temp1_min, S_IWUSR | S_IRUGO , show_temp_min, set_temp_min);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_max' to 'temp1_max_show' 'set_temp_max' to 'temp1_max_store'
#257: FILE: drivers/i2c/chips/ds1621.c:180:
+static DEVICE_ATTR(temp1_max, S_IWUSR | S_IRUGO, show_temp_max, set_temp_max);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#257: FILE: drivers/i2c/chips/ds1621.c:180:
+static DEVICE_ATTR(temp1_max, S_IWUSR | S_IRUGO, show_temp_max, set_temp_max);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/i2c/chips/ds1621.c:182:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/i2c/chips/ds1621.c:190:
+                  int kind)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/i2c/chips/ds1621.c:190:
+                  int kind)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/i2c/chips/ds1621.c:197:
+^Iif (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: drivers/i2c/chips/ds1621.c:198:
+^I^I^I^I     | I2C_FUNC_SMBUS_WORD_DATA $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#280: FILE: drivers/i2c/chips/ds1621.c:203:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: drivers/i2c/chips/ds1621.c:204:
+	   But it allows us to access ds1621_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#282: FILE: drivers/i2c/chips/ds1621.c:205:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#282: FILE: drivers/i2c/chips/ds1621.c:205:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/i2c/chips/ds1621.c:213:
+^I$

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/i2c/chips/ds1621.c:214:
+	data = (struct ds1621_data *) (new_client + 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#298: FILE: drivers/i2c/chips/ds1621.c:221:
+
+

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#320: FILE: drivers/i2c/chips/ds1621.c:243:
+	strlcpy(new_client->name, "ds1621", I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#327: FILE: drivers/i2c/chips/ds1621.c:250:
+	if ((err = i2c_attach_client(new_client)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/i2c/chips/ds1621.c:261:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#342: FILE: drivers/i2c/chips/ds1621.c:265:
+/* OK, this is not exactly good programming practice, usually. But it is
+   very code-efficient in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#342: FILE: drivers/i2c/chips/ds1621.c:265:
+   very code-efficient in this case. */

WARNING:INDENTED_LABEL: labels should not be indented
#343: FILE: drivers/i2c/chips/ds1621.c:266:
+      exit_free:

WARNING:INDENTED_LABEL: labels should not be indented
#345: FILE: drivers/i2c/chips/ds1621.c:268:
+      exit:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#353: FILE: drivers/i2c/chips/ds1621.c:276:
+	if ((err = i2c_detach_client(client))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/i2c/chips/ds1621.c:278:
+^I^I        "ds1621.o: Client deregistration failed, client not detached.\n");$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: drivers/i2c/chips/ds1621.c:287:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#373: FILE: drivers/i2c/chips/ds1621.c:296:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#374: FILE: drivers/i2c/chips/ds1621.c:297:
+	    (jiffies < data->last_updated) || !data->valid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#375: FILE: drivers/i2c/chips/ds1621.c:298:
+	    (jiffies < data->last_updated) || !data->valid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/i2c/chips/ds1621.c:304:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: drivers/i2c/chips/ds1621.c:306:
+^I^I                                    DS1621_REG_TEMP_MIN);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/i2c/chips/ds1621.c:306:
+		data->temp_min = ds1621_read_value(client,
+		                                    DS1621_REG_TEMP_MIN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/i2c/chips/ds1621.c:308:
+		data->temp_max = ds1621_read_value(client,
+						    DS1621_REG_TEMP_MAX);

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#387: FILE: drivers/i2c/chips/ds1621.c:310:
+		/* reset alarms if neccessary */
 		                   ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#416: FILE: drivers/i2c/chips/ds1621.c:339:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 30 warnings, 13 checks, 369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000295916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
