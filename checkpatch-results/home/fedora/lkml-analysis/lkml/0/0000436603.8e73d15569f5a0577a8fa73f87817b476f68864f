WARNING:TYPO_SPELLING: 'receieved' may be misspelled - perhaps 'received'?
#49: 
that updated by the RA's receieved on that interface).
                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
                                                                                                                                             

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: net/ipv6/addrconf.c:237:
+     BUG_TRAP(list_empty(&idev->prefix_list) == 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: net/ipv6/addrconf.c:266:
+           ndev->prefix_lock = SPIN_LOCK_UNLOCKED;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: net/ipv6/addrconf.c:266:
+           ndev->prefix_lock = SPIN_LOCK_UNLOCKED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: net/ipv6/addrconf.c:267:
+           INIT_LIST_HEAD(&ndev->prefix_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: net/ipv6/addrconf.c:267:
+           INIT_LIST_HEAD(&ndev->prefix_list);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: net/ipv6/addrconf.c:312:
+void ipv6_addr_prefix(struct in6_addr *prefix,
+     struct in6_addr *addr, int prefix_len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: net/ipv6/addrconf.c:312:
+     struct in6_addr *addr, int prefix_len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: net/ipv6/addrconf.c:314:
+     unsigned long mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: net/ipv6/addrconf.c:315:
+     int ncopy, nbits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: net/ipv6/addrconf.c:317:
+     memset(prefix, 0, sizeof(*prefix));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: net/ipv6/addrconf.c:319:
+     if (prefix_len <= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#158: FILE: net/ipv6/addrconf.c:319:
+     if (prefix_len <= 0)
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: net/ipv6/addrconf.c:320:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: net/ipv6/addrconf.c:320:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: net/ipv6/addrconf.c:321:
+     if (prefix_len > 128)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#160: FILE: net/ipv6/addrconf.c:321:
+     if (prefix_len > 128)
+           prefix_len = 128;

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: net/ipv6/addrconf.c:322:
+           prefix_len = 128;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: net/ipv6/addrconf.c:322:
+           prefix_len = 128;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: net/ipv6/addrconf.c:324:
+     ncopy = prefix_len / 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: net/ipv6/addrconf.c:325:
+     switch (ncopy) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: net/ipv6/addrconf.c:326:
+     case 4:     prefix->s6_addr32[3] = addr->s6_addr32[3];$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: net/ipv6/addrconf.c:326:
+     case 4:     prefix->s6_addr32[3] = addr->s6_addr32[3];

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: net/ipv6/addrconf.c:327:
+     case 3:     prefix->s6_addr32[2] = addr->s6_addr32[2];$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#166: FILE: net/ipv6/addrconf.c:327:
+     case 3:     prefix->s6_addr32[2] = addr->s6_addr32[2];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: net/ipv6/addrconf.c:328:
+     case 2:     prefix->s6_addr32[1] = addr->s6_addr32[1];$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: net/ipv6/addrconf.c:328:
+     case 2:     prefix->s6_addr32[1] = addr->s6_addr32[1];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: net/ipv6/addrconf.c:329:
+     case 1:     prefix->s6_addr32[0] = addr->s6_addr32[0];$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#168: FILE: net/ipv6/addrconf.c:329:
+     case 1:     prefix->s6_addr32[0] = addr->s6_addr32[0];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: net/ipv6/addrconf.c:330:
+     case 0:     break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#169: FILE: net/ipv6/addrconf.c:330:
+     case 0:     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: net/ipv6/addrconf.c:331:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: net/ipv6/addrconf.c:332:
+     nbits = prefix_len % 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: net/ipv6/addrconf.c:333:
+     if (nbits == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#172: FILE: net/ipv6/addrconf.c:333:
+     if (nbits == 0)
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: net/ipv6/addrconf.c:334:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: net/ipv6/addrconf.c:334:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: net/ipv6/addrconf.c:336:
+     mask = ~((1 << (32 - nbits)) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: net/ipv6/addrconf.c:337:
+     mask = htonl(mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: net/ipv6/addrconf.c:339:
+     prefix->s6_addr32[ncopy] = addr->s6_addr32[ncopy] & mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: net/ipv6/addrconf.c:491:
+     int count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: net/ipv6/addrconf.c:492:
+     struct net_device *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: net/ipv6/addrconf.c:493:
+     struct inet6_dev *idev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: net/ipv6/addrconf.c:494:
+     struct list_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: net/ipv6/addrconf.c:495:
+     struct prefix_element *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: net/ipv6/addrconf.c:497:
+     if (plist == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#196: FILE: net/ipv6/addrconf.c:497:
+     if (plist == NULL) {
+           BUG_TRAP(plist != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!plist"
#196: FILE: net/ipv6/addrconf.c:497:
+     if (plist == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: net/ipv6/addrconf.c:498:
+           BUG_TRAP(plist != NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: net/ipv6/addrconf.c:498:
+           BUG_TRAP(plist != NULL);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "plist"
#197: FILE: net/ipv6/addrconf.c:498:
+           BUG_TRAP(plist != NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: net/ipv6/addrconf.c:499:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: net/ipv6/addrconf.c:499:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: net/ipv6/addrconf.c:500:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: net/ipv6/addrconf.c:501:
+     if ((dev = dev_get_by_index(ifindex)) == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#200: FILE: net/ipv6/addrconf.c:501:
+     if ((dev = dev_get_by_index(ifindex)) == NULL) {
+           printk(KERN_WARNING "Bad I/F (%d) in ipv6_get_prefix_entries\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: net/ipv6/addrconf.c:501:
+     if ((dev = dev_get_by_index(ifindex)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: net/ipv6/addrconf.c:502:
+           printk(KERN_WARNING "Bad I/F (%d) in ipv6_get_prefix_entries\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: net/ipv6/addrconf.c:502:
+           printk(KERN_WARNING "Bad I/F (%d) in ipv6_get_prefix_entries\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#201: FILE: net/ipv6/addrconf.c:502:
+           printk(KERN_WARNING "Bad I/F (%d) in ipv6_get_prefix_entries\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_get_prefix_entries', this function's name, in a string
#201: FILE: net/ipv6/addrconf.c:502:
+           printk(KERN_WARNING "Bad I/F (%d) in ipv6_get_prefix_entries\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: net/ipv6/addrconf.c:503:
+                  ifindex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: net/ipv6/addrconf.c:503:
+                  ifindex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: net/ipv6/addrconf.c:504:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: net/ipv6/addrconf.c:504:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: net/ipv6/addrconf.c:505:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: net/ipv6/addrconf.c:507:
+     if ((idev = __in6_dev_get(dev)) == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#206: FILE: net/ipv6/addrconf.c:507:
+     if ((idev = __in6_dev_get(dev)) == NULL) {
+           dev_put(dev);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#206: FILE: net/ipv6/addrconf.c:507:
+     if ((idev = __in6_dev_get(dev)) == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: net/ipv6/addrconf.c:508:
+           dev_put(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: net/ipv6/addrconf.c:508:
+           dev_put(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: net/ipv6/addrconf.c:509:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: net/ipv6/addrconf.c:509:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: net/ipv6/addrconf.c:510:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: net/ipv6/addrconf.c:512:
+     read_lock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: net/ipv6/addrconf.c:513:
+     if (!(count = idev->prefix_count)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#212: FILE: net/ipv6/addrconf.c:513:
+     if (!(count = idev->prefix_count)) {
[...]
+           goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#212: FILE: net/ipv6/addrconf.c:513:
+     if (!(count = idev->prefix_count)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: net/ipv6/addrconf.c:514:
+           /* No elements on list */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: net/ipv6/addrconf.c:515:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: net/ipv6/addrconf.c:515:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: net/ipv6/addrconf.c:516:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: net/ipv6/addrconf.c:517:
+     if ((*plist = kmalloc(count * sizeof(struct prefix_info),$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#216: FILE: net/ipv6/addrconf.c:517:
+     if ((*plist = kmalloc(count * sizeof(struct prefix_info),
[...]
+           count = -ENOMEM;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#216: FILE: net/ipv6/addrconf.c:517:
+     if ((*plist = kmalloc(count * sizeof(struct prefix_info),

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: net/ipv6/addrconf.c:518:
+                       GFP_ATOMIC)) == NULL) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: net/ipv6/addrconf.c:518:
+     if ((*plist = kmalloc(count * sizeof(struct prefix_info),
+                       GFP_ATOMIC)) == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: net/ipv6/addrconf.c:518:
+                       GFP_ATOMIC)) == NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: net/ipv6/addrconf.c:519:
+           count = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: net/ipv6/addrconf.c:519:
+           count = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: net/ipv6/addrconf.c:520:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: net/ipv6/addrconf.c:520:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: net/ipv6/addrconf.c:521:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: net/ipv6/addrconf.c:522:
+     count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: net/ipv6/addrconf.c:523:
+     spin_lock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: net/ipv6/addrconf.c:524:
+     list_for_each(head, &idev->prefix_list) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: net/ipv6/addrconf.c:525:
+           p = list_entry(head, struct prefix_element, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: net/ipv6/addrconf.c:525:
+           p = list_entry(head, struct prefix_element, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: net/ipv6/addrconf.c:526:
+           if (plen == 0 || p->pinfo.prefix_len == plen) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: net/ipv6/addrconf.c:526:
+           if (plen == 0 || p->pinfo.prefix_len == plen) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#225: FILE: net/ipv6/addrconf.c:526:
+           if (plen == 0 || p->pinfo.prefix_len == plen) {
+                 memcpy(*plist + count, &p->pinfo,

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: net/ipv6/addrconf.c:527:
+                 memcpy(*plist + count, &p->pinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: net/ipv6/addrconf.c:527:
+                 memcpy(*plist + count, &p->pinfo,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: net/ipv6/addrconf.c:528:
+                        sizeof(struct prefix_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: net/ipv6/addrconf.c:528:
+                        sizeof(struct prefix_info));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: net/ipv6/addrconf.c:529:
+                 count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: net/ipv6/addrconf.c:529:
+                 count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: net/ipv6/addrconf.c:530:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: net/ipv6/addrconf.c:530:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: net/ipv6/addrconf.c:531:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: net/ipv6/addrconf.c:532:
+     spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: net/ipv6/addrconf.c:534:
+     read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: net/ipv6/addrconf.c:535:
+     dev_put(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: net/ipv6/addrconf.c:536:
+     return count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: net/ipv6/addrconf.c:896:
+           __u32 lifetime)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: net/ipv6/addrconf.c:896:
+static int ipv6_add_prefix(struct inet6_dev *idev, struct prefix_info *pinfo,
+           __u32 lifetime)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: net/ipv6/addrconf.c:896:
+           __u32 lifetime)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: net/ipv6/addrconf.c:898:
+     struct in6_addr         prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: net/ipv6/addrconf.c:899:
+     struct list_head  *pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: net/ipv6/addrconf.c:900:
+     struct prefix_element   *pfx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: net/ipv6/addrconf.c:902:
+     char abuf[64];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: net/ipv6/addrconf.c:905:
+     ipv6_addr_prefix(&prefix, &pinfo->prefix, (int)pinfo->prefix_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: net/ipv6/addrconf.c:908:
+     in6_ntop(&prefix, abuf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: net/ipv6/addrconf.c:912:
+     read_lock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: net/ipv6/addrconf.c:913:
+     spin_lock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: net/ipv6/addrconf.c:914:
+     list_for_each(pos, &idev->prefix_list) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: net/ipv6/addrconf.c:915:
+           pfx = list_entry(pos, struct prefix_element, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: net/ipv6/addrconf.c:915:
+           pfx = list_entry(pos, struct prefix_element, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: net/ipv6/addrconf.c:916:
+           if (pfx->pinfo.prefix_len == pinfo->prefix_len$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: net/ipv6/addrconf.c:916:
+           if (pfx->pinfo.prefix_len == pinfo->prefix_len$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#266: FILE: net/ipv6/addrconf.c:916:
+           if (pfx->pinfo.prefix_len == pinfo->prefix_len
[...]
+                 if (lifetime == 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: net/ipv6/addrconf.c:917:
+               && ipv6_addr_cmp(&pfx->pinfo.prefix, &prefix) == 0) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#267: FILE: net/ipv6/addrconf.c:917:
+           if (pfx->pinfo.prefix_len == pinfo->prefix_len
+               && ipv6_addr_cmp(&pfx->pinfo.prefix, &prefix) == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: net/ipv6/addrconf.c:917:
+               && ipv6_addr_cmp(&pfx->pinfo.prefix, &prefix) == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: net/ipv6/addrconf.c:918:
+                 /* Found the prefix */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: net/ipv6/addrconf.c:919:
+                 if (lifetime == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: net/ipv6/addrconf.c:919:
+                 if (lifetime == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#269: FILE: net/ipv6/addrconf.c:919:
+                 if (lifetime == 0) {
[...]
+                       printk(KERN_INFO "%s: deleting prefix %s/%d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: net/ipv6/addrconf.c:920:
+                       /* If lifetime = 0, delete the prefix */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: net/ipv6/addrconf.c:922:
+                       printk(KERN_INFO "%s: deleting prefix %s/%d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: net/ipv6/addrconf.c:922:
+                       printk(KERN_INFO "%s: deleting prefix %s/%d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#272: FILE: net/ipv6/addrconf.c:922:
+                       printk(KERN_INFO "%s: deleting prefix %s/%d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: net/ipv6/addrconf.c:923:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: net/ipv6/addrconf.c:923:
+                       printk(KERN_INFO "%s: deleting prefix %s/%d\n",
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: net/ipv6/addrconf.c:923:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#273: FILE: net/ipv6/addrconf.c:923:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: net/ipv6/addrconf.c:925:
+                       list_del(&pfx->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: net/ipv6/addrconf.c:925:
+                       list_del(&pfx->list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: net/ipv6/addrconf.c:926:
+                       kfree(pfx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: net/ipv6/addrconf.c:926:
+                       kfree(pfx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: net/ipv6/addrconf.c:927:
+                       goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: net/ipv6/addrconf.c:927:
+                       goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: net/ipv6/addrconf.c:928:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: net/ipv6/addrconf.c:928:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: net/ipv6/addrconf.c:929:
+                 pfx->pinfo.valid = lifetime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: net/ipv6/addrconf.c:929:
+                 pfx->pinfo.valid = lifetime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: net/ipv6/addrconf.c:930:
+                 pfx->timestamp = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: net/ipv6/addrconf.c:930:
+                 pfx->timestamp = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: net/ipv6/addrconf.c:931:
+                 spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: net/ipv6/addrconf.c:931:
+                 spin_unlock_bh(&idev->prefix_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: net/ipv6/addrconf.c:932:
+                 read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: net/ipv6/addrconf.c:932:
+                 read_unlock_bh(&idev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: net/ipv6/addrconf.c:934:
+                 printk(KERN_INFO "%s: changing prefix %s/%d, lifetime = %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: net/ipv6/addrconf.c:934:
+                 printk(KERN_INFO "%s: changing prefix %s/%d, lifetime = %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: net/ipv6/addrconf.c:934:
+                 printk(KERN_INFO "%s: changing prefix %s/%d, lifetime = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: net/ipv6/addrconf.c:935:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: net/ipv6/addrconf.c:935:
+                 printk(KERN_INFO "%s: changing prefix %s/%d, lifetime = %d\n",
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: net/ipv6/addrconf.c:935:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#285: FILE: net/ipv6/addrconf.c:935:
+                       __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: net/ipv6/addrconf.c:937:
+                 return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: net/ipv6/addrconf.c:937:
+                 return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: net/ipv6/addrconf.c:938:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: net/ipv6/addrconf.c:938:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: net/ipv6/addrconf.c:939:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: net/ipv6/addrconf.c:940:
+     if (lifetime == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#290: FILE: net/ipv6/addrconf.c:940:
+     if (lifetime == 0) {
[...]
+           goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: net/ipv6/addrconf.c:941:
+           /* Prefix was not on the list and lifetime = 0, do nothing */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: net/ipv6/addrconf.c:942:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: net/ipv6/addrconf.c:942:
+           goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: net/ipv6/addrconf.c:943:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: net/ipv6/addrconf.c:946:
+     if ((pfx = kmalloc(sizeof(struct prefix_element), GFP_ATOMIC)) == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#296: FILE: net/ipv6/addrconf.c:946:
+     if ((pfx = kmalloc(sizeof(struct prefix_element), GFP_ATOMIC)) == NULL) {
+           ADBG(("ipv6_add_prefix: malloc failed\n"));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#296: FILE: net/ipv6/addrconf.c:946:
+     if ((pfx = kmalloc(sizeof(struct prefix_element), GFP_ATOMIC)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pfx)...) over kmalloc(sizeof(struct prefix_element)...)
#296: FILE: net/ipv6/addrconf.c:946:
+     if ((pfx = kmalloc(sizeof(struct prefix_element), GFP_ATOMIC)) == NULL) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: net/ipv6/addrconf.c:947:
+           ADBG(("ipv6_add_prefix: malloc failed\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: net/ipv6/addrconf.c:947:
+           ADBG(("ipv6_add_prefix: malloc failed\n"));$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_add_prefix', this function's name, in a string
#297: FILE: net/ipv6/addrconf.c:947:
+           ADBG(("ipv6_add_prefix: malloc failed\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: net/ipv6/addrconf.c:948:
+           spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: net/ipv6/addrconf.c:948:
+           spin_unlock_bh(&idev->prefix_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: net/ipv6/addrconf.c:949:
+           read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: net/ipv6/addrconf.c:949:
+           read_unlock_bh(&idev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: net/ipv6/addrconf.c:950:
+           return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: net/ipv6/addrconf.c:950:
+           return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: net/ipv6/addrconf.c:951:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: net/ipv6/addrconf.c:952:
+     INIT_LIST_HEAD(&pfx->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: net/ipv6/addrconf.c:953:
+     memcpy(&pfx->pinfo, pinfo, sizeof(struct prefix_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: net/ipv6/addrconf.c:954:
+     pfx->pinfo.valid = lifetime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: net/ipv6/addrconf.c:955:
+     pfx->timestamp = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: net/ipv6/addrconf.c:956:
+     idev->prefix_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: net/ipv6/addrconf.c:957:
+     ipv6_addr_copy(&pfx->pinfo.prefix, &prefix);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: net/ipv6/addrconf.c:959:
+     list_add(&pfx->list, idev->prefix_list.prev);   /* add to end of list */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: net/ipv6/addrconf.c:961:
+     printk(KERN_INFO "%s: adding prefix %s/%d, lifetime = %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: net/ipv6/addrconf.c:961:
+     printk(KERN_INFO "%s: adding prefix %s/%d, lifetime = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: net/ipv6/addrconf.c:962:
+           __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: net/ipv6/addrconf.c:962:
+     printk(KERN_INFO "%s: adding prefix %s/%d, lifetime = %d\n",
+           __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: net/ipv6/addrconf.c:962:
+           __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#312: FILE: net/ipv6/addrconf.c:962:
+           __FUNCTION__, abuf, pfx->pinfo.prefix_len, lifetime);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: net/ipv6/addrconf.c:965:
+     spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: net/ipv6/addrconf.c:966:
+     read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: net/ipv6/addrconf.c:968:
+     return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: net/ipv6/addrconf.c:1048:
+     if (pinfo->onlink) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#328: FILE: net/ipv6/addrconf.c:1048:
+     if (pinfo->onlink) {
[...]
+           ipv6_add_prefix(in6_dev, pinfo, valid_lft);

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: net/ipv6/addrconf.c:1049:
+           /* Add this prefix to the list of prefixes on this interface */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: net/ipv6/addrconf.c:1050:
+           ipv6_add_prefix(in6_dev, pinfo, valid_lft);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: net/ipv6/addrconf.c:1050:
+           ipv6_add_prefix(in6_dev, pinfo, valid_lft);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: net/ipv6/addrconf.c:1051:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: net/ipv6/addrconf.c:1498:
+     struct list_head  *pos, *n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: net/ipv6/addrconf.c:1499:
+     struct prefix_element   *pfx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: net/ipv6/addrconf.c:1563:
+     spin_lock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: net/ipv6/addrconf.c:1564:
+     list_for_each_safe(pos, n, &idev->prefix_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#351: FILE: net/ipv6/addrconf.c:1564:
+     list_for_each_safe(pos, n, &idev->prefix_list) {
+           pfx = list_entry(pos, struct prefix_element, list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: net/ipv6/addrconf.c:1565:
+           pfx = list_entry(pos, struct prefix_element, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: net/ipv6/addrconf.c:1565:
+           pfx = list_entry(pos, struct prefix_element, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: net/ipv6/addrconf.c:1567:
+           {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: net/ipv6/addrconf.c:1567:
+           {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: net/ipv6/addrconf.c:1568:
+                 char abuf[64];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: net/ipv6/addrconf.c:1568:
+                 char abuf[64];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: net/ipv6/addrconf.c:1569:
+                 struct prefix_element *pl = (struct prefix_element *)pfx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: net/ipv6/addrconf.c:1569:
+                 struct prefix_element *pl = (struct prefix_element *)pfx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: net/ipv6/addrconf.c:1570:
+                 in6_ntop(&pl->pinfo.prefix, abuf);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: net/ipv6/addrconf.c:1570:
+                 struct prefix_element *pl = (struct prefix_element *)pfx;
+                 in6_ntop(&pl->pinfo.prefix, abuf);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: net/ipv6/addrconf.c:1570:
+                 in6_ntop(&pl->pinfo.prefix, abuf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: net/ipv6/addrconf.c:1571:
+                 printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: net/ipv6/addrconf.c:1571:
+                 printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#358: FILE: net/ipv6/addrconf.c:1571:
+                 printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: net/ipv6/addrconf.c:1572:
+                       __FUNCTION__, abuf, pl->pinfo.prefix_len, pl->pinfo.valid);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: net/ipv6/addrconf.c:1572:
+                 printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",
+                       __FUNCTION__, abuf, pl->pinfo.prefix_len, pl->pinfo.valid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: net/ipv6/addrconf.c:1572:
+                       __FUNCTION__, abuf, pl->pinfo.prefix_len, pl->pinfo.valid);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#359: FILE: net/ipv6/addrconf.c:1572:
+                       __FUNCTION__, abuf, pl->pinfo.prefix_len, pl->pinfo.valid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: net/ipv6/addrconf.c:1573:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: net/ipv6/addrconf.c:1573:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: net/ipv6/addrconf.c:1575:
+           kfree(pfx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: net/ipv6/addrconf.c:1575:
+           kfree(pfx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: net/ipv6/addrconf.c:1576:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: net/ipv6/addrconf.c:1577:
+     INIT_LIST_HEAD(&idev->prefix_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: net/ipv6/addrconf.c:1578:
+     spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: net/ipv6/addrconf.c:1811:
+     struct list_head *pos, *n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: net/ipv6/addrconf.c:1812:
+     struct prefix_element *pfx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: net/ipv6/addrconf.c:1813:
+     struct net_device *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: net/ipv6/addrconf.c:1814:
+     struct inet6_dev *idev;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#386: FILE: net/ipv6/addrconf.c:1857:
+     /*
+      * We need to expire prefixes even if no addresses are deleted in the

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: net/ipv6/addrconf.c:1861:
+     read_lock(&dev_base_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: net/ipv6/addrconf.c:1862:
+     for (dev = dev_base; dev; dev = dev->next) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#391: FILE: net/ipv6/addrconf.c:1862:
+     for (dev = dev_base; dev; dev = dev->next) {
+           unsigned long age;

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: net/ipv6/addrconf.c:1863:
+           unsigned long age;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: net/ipv6/addrconf.c:1863:
+           unsigned long age;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: net/ipv6/addrconf.c:1864:
+           if (!(idev = __in6_dev_get(dev))) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#393: FILE: net/ipv6/addrconf.c:1864:
+           unsigned long age;
+           if (!(idev = __in6_dev_get(dev))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: net/ipv6/addrconf.c:1864:
+           if (!(idev = __in6_dev_get(dev))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#393: FILE: net/ipv6/addrconf.c:1864:
+           if (!(idev = __in6_dev_get(dev))) {
+                 continue;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#393: FILE: net/ipv6/addrconf.c:1864:
+           if (!(idev = __in6_dev_get(dev))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#393: FILE: net/ipv6/addrconf.c:1864:
+           if (!(idev = __in6_dev_get(dev))) {
+                 continue;
+           }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: net/ipv6/addrconf.c:1865:
+                 continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: net/ipv6/addrconf.c:1865:
+                 continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: net/ipv6/addrconf.c:1866:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: net/ipv6/addrconf.c:1866:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: net/ipv6/addrconf.c:1867:
+           read_lock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: net/ipv6/addrconf.c:1867:
+           read_lock_bh(&idev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: net/ipv6/addrconf.c:1868:
+           spin_lock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: net/ipv6/addrconf.c:1868:
+           spin_lock_bh(&idev->prefix_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: net/ipv6/addrconf.c:1869:
+           if (list_empty(&idev->prefix_list)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: net/ipv6/addrconf.c:1869:
+           if (list_empty(&idev->prefix_list)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#398: FILE: net/ipv6/addrconf.c:1869:
+           if (list_empty(&idev->prefix_list)) {
+                 spin_unlock_bh(&idev->prefix_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: net/ipv6/addrconf.c:1870:
+                 spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: net/ipv6/addrconf.c:1870:
+                 spin_unlock_bh(&idev->prefix_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: net/ipv6/addrconf.c:1871:
+                 read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: net/ipv6/addrconf.c:1871:
+                 read_unlock_bh(&idev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: net/ipv6/addrconf.c:1872:
+                 continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: net/ipv6/addrconf.c:1872:
+                 continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: net/ipv6/addrconf.c:1873:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: net/ipv6/addrconf.c:1873:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: net/ipv6/addrconf.c:1874:
+           list_for_each_safe(pos, n, &idev->prefix_list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: net/ipv6/addrconf.c:1874:
+           list_for_each_safe(pos, n, &idev->prefix_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#403: FILE: net/ipv6/addrconf.c:1874:
+           list_for_each_safe(pos, n, &idev->prefix_list) {
+                 pfx = list_entry(pos, struct prefix_element, list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: net/ipv6/addrconf.c:1875:
+                 pfx = list_entry(pos, struct prefix_element, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: net/ipv6/addrconf.c:1875:
+                 pfx = list_entry(pos, struct prefix_element, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: net/ipv6/addrconf.c:1876:
+                 if (pfx->pinfo.valid != PINFO_VALID_LIFETIME_INFINITE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: net/ipv6/addrconf.c:1876:
+                 if (pfx->pinfo.valid != PINFO_VALID_LIFETIME_INFINITE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#405: FILE: net/ipv6/addrconf.c:1876:
+                 if (pfx->pinfo.valid != PINFO_VALID_LIFETIME_INFINITE) {
[...]
+                       char abuf[64];

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: net/ipv6/addrconf.c:1878:
+                       char abuf[64];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: net/ipv6/addrconf.c:1878:
+                       char abuf[64];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: net/ipv6/addrconf.c:1880:
+                       in6_ntop(&pfx->pinfo.prefix, abuf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: net/ipv6/addrconf.c:1880:
+                       in6_ntop(&pfx->pinfo.prefix, abuf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: net/ipv6/addrconf.c:1882:
+                       age = (now - pfx->timestamp) / HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: net/ipv6/addrconf.c:1882:
+                       age = (now - pfx->timestamp) / HZ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: net/ipv6/addrconf.c:1883:
+                       if (age > pfx->pinfo.valid) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: net/ipv6/addrconf.c:1883:
+                       if (age > pfx->pinfo.valid) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 29)
#412: FILE: net/ipv6/addrconf.c:1883:
+                       if (age > pfx->pinfo.valid) {
[...]
+                             printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: net/ipv6/addrconf.c:1885:
+                             printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: net/ipv6/addrconf.c:1885:
+                             printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#414: FILE: net/ipv6/addrconf.c:1885:
+                             printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: net/ipv6/addrconf.c:1886:
+                             __FUNCTION__, abuf, pfx->pinfo.prefix_len, pfx->pinfo.valid);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: net/ipv6/addrconf.c:1886:
+                             printk(KERN_INFO "%s: deleting prefix %s/%d, lifetime = %d\n",
+                             __FUNCTION__, abuf, pfx->pinfo.prefix_len, pfx->pinfo.valid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: net/ipv6/addrconf.c:1886:
+                             __FUNCTION__, abuf, pfx->pinfo.prefix_len, pfx->pinfo.valid);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#415: FILE: net/ipv6/addrconf.c:1886:
+                             __FUNCTION__, abuf, pfx->pinfo.prefix_len, pfx->pinfo.valid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: net/ipv6/addrconf.c:1888:
+                             list_del(&pfx->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: net/ipv6/addrconf.c:1888:
+                             list_del(&pfx->list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: net/ipv6/addrconf.c:1889:
+                             kfree(pfx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: net/ipv6/addrconf.c:1889:
+                             kfree(pfx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: net/ipv6/addrconf.c:1890:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: net/ipv6/addrconf.c:1890:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: net/ipv6/addrconf.c:1891:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: net/ipv6/addrconf.c:1891:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: net/ipv6/addrconf.c:1892:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: net/ipv6/addrconf.c:1892:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: net/ipv6/addrconf.c:1893:
+           spin_unlock_bh(&idev->prefix_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: net/ipv6/addrconf.c:1893:
+           spin_unlock_bh(&idev->prefix_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: net/ipv6/addrconf.c:1894:
+           read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: net/ipv6/addrconf.c:1894:
+           read_unlock_bh(&idev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: net/ipv6/addrconf.c:1895:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: net/ipv6/addrconf.c:1896:
+     read_unlock(&dev_base_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: include/net/addrconf.h:46:
+     struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: include/net/addrconf.h:47:
+     struct prefix_info pinfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: include/net/addrconf.h:48:
+     unsigned long timestamp;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#458: FILE: include/net/addrconf.h:99:
+extern int             ipv6_get_prefix_entries(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: include/net/addrconf.h:99:
+extern int             ipv6_get_prefix_entries(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: include/net/addrconf.h:100:
+                                       struct prefix_info **plist,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: include/net/addrconf.h:100:
+                                       struct prefix_info **plist,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: include/net/addrconf.h:101:
+                                       int ifindex, int plen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: include/net/addrconf.h:101:
+                                       int ifindex, int plen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: include/net/if_inet6.h:99:
+     struct list_head  prefix_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: include/net/if_inet6.h:100:
+     int               prefix_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: include/net/if_inet6.h:101:
+     spinlock_t        prefix_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#473: FILE: include/net/if_inet6.h:101:
+     spinlock_t        prefix_lock;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#485: FILE: include/linux/inet.h:54:
+extern __inline__ char *in6_ntop(const struct in6_addr *in6, char *buf){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#485: FILE: include/linux/inet.h:54:
+extern __inline__ char *in6_ntop(const struct in6_addr *in6, char *buf){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#485: FILE: include/linux/inet.h:54:
+extern __inline__ char *in6_ntop(const struct in6_addr *in6, char *buf){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: include/linux/inet.h:55:
+     if (!buf)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#486: FILE: include/linux/inet.h:55:
+     if (!buf)
+           return NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: include/linux/inet.h:56:
+           return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: include/linux/inet.h:56:
+           return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: include/linux/inet.h:57:
+     sprintf(buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: include/linux/inet.h:58:
+           "%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: include/linux/inet.h:58:
+     sprintf(buf,
+           "%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: include/linux/inet.h:58:
+           "%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: include/linux/inet.h:59:
+           ntohs(in6->s6_addr16[0]), ntohs(in6->s6_addr16[1]),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: include/linux/inet.h:59:
+           ntohs(in6->s6_addr16[0]), ntohs(in6->s6_addr16[1]),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: include/linux/inet.h:60:
+           ntohs(in6->s6_addr16[2]), ntohs(in6->s6_addr16[3]),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: include/linux/inet.h:60:
+           ntohs(in6->s6_addr16[2]), ntohs(in6->s6_addr16[3]),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: include/linux/inet.h:61:
+           ntohs(in6->s6_addr16[4]), ntohs(in6->s6_addr16[5]),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: include/linux/inet.h:61:
+           ntohs(in6->s6_addr16[4]), ntohs(in6->s6_addr16[5]),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: include/linux/inet.h:62:
+           ntohs(in6->s6_addr16[6]), ntohs(in6->s6_addr16[7]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: include/linux/inet.h:62:
+           ntohs(in6->s6_addr16[6]), ntohs(in6->s6_addr16[7]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: include/linux/inet.h:63:
+     return buf;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 110 errors, 229 warnings, 16 checks, 381 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436603.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
