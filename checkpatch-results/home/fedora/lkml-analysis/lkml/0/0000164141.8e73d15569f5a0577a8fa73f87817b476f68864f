CHECK:SPACING: No space is necessary after a cast
#58: FILE: arch/i386/kernel/efi.c:107:
+	load_gdt((struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0]));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#58: FILE: arch/i386/kernel/efi.c:107:
+	load_gdt((struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0]));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/i386/math-emu/get_address.c:176:
+      savesegment(fs, addr->selector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/i386/math-emu/get_address.c:179:
+      savesegment(gs, addr->selector);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/i386/power/cpu.c:45:
+ ^Istore_gdt(&ctxt->gdt_limit);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: arch/i386/power/cpu.c:45:
+ ^Istore_gdt(&ctxt->gdt_limit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/power/cpu.c:45:
+ ^Istore_gdt(&ctxt->gdt_limit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/i386/power/cpu.c:46:
+ ^Istore_idt(&ctxt->idt_limit);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: arch/i386/power/cpu.c:46:
+ ^Istore_idt(&ctxt->idt_limit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/power/cpu.c:46:
+ ^Istore_idt(&ctxt->idt_limit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/i386/power/cpu.c:47:
+ ^Istore_tr(ctxt->tr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: arch/i386/power/cpu.c:47:
+ ^Istore_tr(ctxt->tr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/power/cpu.c:47:
+ ^Istore_tr(ctxt->tr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/i386/power/cpu.c:52:
+ ^Isavesegment(es, ctxt->es);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: arch/i386/power/cpu.c:52:
+ ^Isavesegment(es, ctxt->es);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/i386/power/cpu.c:52:
+ ^Isavesegment(es, ctxt->es);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/i386/power/cpu.c:53:
+ ^Isavesegment(fs, ctxt->fs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: arch/i386/power/cpu.c:53:
+ ^Isavesegment(fs, ctxt->fs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/i386/power/cpu.c:53:
+ ^Isavesegment(fs, ctxt->fs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/i386/power/cpu.c:54:
+ ^Isavesegment(gs, ctxt->gs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: arch/i386/power/cpu.c:54:
+ ^Isavesegment(gs, ctxt->gs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/i386/power/cpu.c:54:
+ ^Isavesegment(gs, ctxt->gs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/i386/power/cpu.c:55:
+ ^Isavesegment(ss, ctxt->ss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: arch/i386/power/cpu.c:55:
+ ^Isavesegment(ss, ctxt->ss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/power/cpu.c:55:
+ ^Isavesegment(ss, ctxt->ss);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/i386/power/cpu.c:121:
+ ^Iload_gdt(&ctxt->gdt_limit);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: arch/i386/power/cpu.c:121:
+ ^Iload_gdt(&ctxt->gdt_limit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/i386/power/cpu.c:121:
+ ^Iload_gdt(&ctxt->gdt_limit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/i386/power/cpu.c:122:
+ ^Iload_idt(&ctxt->idt_limit);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: arch/i386/power/cpu.c:122:
+ ^Iload_idt(&ctxt->idt_limit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/i386/power/cpu.c:122:
+ ^Iload_idt(&ctxt->idt_limit);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/i386/power/cpu.c:127:
+ ^Iloadsegment(es, ctxt->es);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: arch/i386/power/cpu.c:127:
+ ^Iloadsegment(es, ctxt->es);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/i386/power/cpu.c:127:
+ ^Iloadsegment(es, ctxt->es);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/i386/power/cpu.c:128:
+ ^Iloadsegment(fs, ctxt->fs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: arch/i386/power/cpu.c:128:
+ ^Iloadsegment(fs, ctxt->fs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/i386/power/cpu.c:128:
+ ^Iloadsegment(fs, ctxt->fs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/i386/power/cpu.c:129:
+ ^Iloadsegment(gs, ctxt->gs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: arch/i386/power/cpu.c:129:
+ ^Iloadsegment(gs, ctxt->gs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/i386/power/cpu.c:129:
+ ^Iloadsegment(gs, ctxt->gs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/i386/power/cpu.c:130:
+ ^Iloadsegment(ss, ctxt->ss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: arch/i386/power/cpu.c:130:
+ ^Iloadsegment(ss, ctxt->ss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/i386/power/cpu.c:130:
+ ^Iloadsegment(ss, ctxt->ss);$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#270: FILE: include/asm-i386/system.h:96:
+		: :"rm" (value))
 		  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#277: FILE: include/asm-i386/system.h:102:
+	asm volatile("mov %%" #seg ",%0":"=rm" (value))
 	                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#289: FILE: include/asm-i386/desc.h:33:
+#define load_gdt(dtr) __asm__ __volatile("lgdt %0"::"m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#289: FILE: include/asm-i386/desc.h:33:
+#define load_gdt(dtr) __asm__ __volatile("lgdt %0"::"m" (*dtr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: include/asm-i386/desc.h:34:
+#define load_idt(dtr) __asm__ __volatile("lidt %0"::"m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#290: FILE: include/asm-i386/desc.h:34:
+#define load_idt(dtr) __asm__ __volatile("lidt %0"::"m" (*dtr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#291: FILE: include/asm-i386/desc.h:35:
+#define load_tr(tr) __asm__ __volatile("ltr %0"::"mr" (tr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#292: FILE: include/asm-i386/desc.h:36:
+#define load_ldt(ldt) __asm__ __volatile("lldt %0"::"mr" (ldt))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#294: FILE: include/asm-i386/desc.h:38:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#294: FILE: include/asm-i386/desc.h:38:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#294: FILE: include/asm-i386/desc.h:38:
+#define store_gdt(dtr) __asm__ ("sgdt %0":"=m" (*dtr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#295: FILE: include/asm-i386/desc.h:39:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#295: FILE: include/asm-i386/desc.h:39:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dtr' may be better as '(dtr)' to avoid precedence issues
#295: FILE: include/asm-i386/desc.h:39:
+#define store_idt(dtr) __asm__ ("sidt %0":"=m" (*dtr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#296: FILE: include/asm-i386/desc.h:40:
+#define store_tr(tr) __asm__ ("str %0":"=mr" (tr))
                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#296: FILE: include/asm-i386/desc.h:40:
+#define store_tr(tr) __asm__ ("str %0":"=mr" (tr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#297: FILE: include/asm-i386/desc.h:41:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=mr" (ldt))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#297: FILE: include/asm-i386/desc.h:41:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=mr" (ldt))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 28 warnings, 11 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
