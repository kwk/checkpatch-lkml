WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: include/asm-arm/offsets.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: include/asm-arm/offsets.c:4:
+ *     $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/thread_info.h> instead of <asm/thread_info.h>
#235: FILE: include/asm-arm/offsets.c:16:
+#include <asm/thread_info.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: include/asm-arm/offsets.c:33:
+   (__GNUC__ == 2 && __GNUC_MINOR__ < 95) || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: include/asm-arm/offsets.c:34:
+   (__GNUC__ == 2 && __GNUC_MINOR__ == 95 && __GNUC_PATCHLEVEL__ != 0 && \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: include/asm-arm/offsets.c:36:
+   (__GNUC__ == 3 && __GNUC_MINOR__ < 3)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#262: FILE: include/asm-arm/offsets.c:43:
+#define DEFINE(sym, val) \
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: include/asm-arm/offsets.c:44:
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: include/asm-arm/offsets.c:44:
+        asm volatile("\n->" #sym " %0 " #val : : "i" (val))$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#265: FILE: include/asm-arm/offsets.c:46:
+#define BLANK() asm volatile("\n->" : : )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: include/asm-arm/offsets.c:50:
+  DEFINE(TSK_ACTIVE_MM,^I^Ioffsetof(struct task_struct, active_mm));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: include/asm-arm/offsets.c:51:
+  BLANK();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: include/asm-arm/offsets.c:52:
+  DEFINE(TI_FLAGS,^I^Ioffsetof(struct thread_info, flags));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: include/asm-arm/offsets.c:53:
+  DEFINE(TI_PREEMPT,^I^Ioffsetof(struct thread_info, preempt_count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: include/asm-arm/offsets.c:54:
+  DEFINE(TI_ADDR_LIMIT,^I^Ioffsetof(struct thread_info, addr_limit));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: include/asm-arm/offsets.c:55:
+  DEFINE(TI_TASK,^I^Ioffsetof(struct thread_info, task));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: include/asm-arm/offsets.c:56:
+  DEFINE(TI_EXEC_DOMAIN,^Ioffsetof(struct thread_info, exec_domain));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: include/asm-arm/offsets.c:57:
+  DEFINE(TI_CPU,^I^Ioffsetof(struct thread_info, cpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: include/asm-arm/offsets.c:58:
+  DEFINE(TI_CPU_DOMAIN,^I^Ioffsetof(struct thread_info, cpu_domain));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: include/asm-arm/offsets.c:59:
+  DEFINE(TI_CPU_SAVE,^I^Ioffsetof(struct thread_info, cpu_context));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: include/asm-arm/offsets.c:60:
+  DEFINE(TI_USED_CP,^I^Ioffsetof(struct thread_info, used_cp));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: include/asm-arm/offsets.c:61:
+  DEFINE(TI_FPSTATE,^I^Ioffsetof(struct thread_info, fpstate));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: include/asm-arm/offsets.c:62:
+  DEFINE(TI_VFPSTATE,^I^Ioffsetof(struct thread_info, vfpstate));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: include/asm-arm/offsets.c:63:
+  DEFINE(TI_IWMMXT_STATE,^I(offsetof(struct thread_info, fpstate)+4)&~7);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: include/asm-arm/offsets.c:63:
+  DEFINE(TI_IWMMXT_STATE,	(offsetof(struct thread_info, fpstate)+4)&~7);
                          	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#282: FILE: include/asm-arm/offsets.c:63:
+  DEFINE(TI_IWMMXT_STATE,	(offsetof(struct thread_info, fpstate)+4)&~7);
                          	                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: include/asm-arm/offsets.c:64:
+  BLANK();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: include/asm-arm/offsets.c:66:
+  DEFINE(MM_CONTEXT_ID,^I^Ioffsetof(struct mm_struct, context.id));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: include/asm-arm/offsets.c:67:
+  BLANK();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: include/asm-arm/offsets.c:69:
+  DEFINE(VMA_VM_MM,^I^Ioffsetof(struct vm_area_struct, vm_mm));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: include/asm-arm/offsets.c:70:
+  DEFINE(VMA_VM_FLAGS,^I^Ioffsetof(struct vm_area_struct, vm_flags));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: include/asm-arm/offsets.c:71:
+  BLANK();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: include/asm-arm/offsets.c:72:
+  DEFINE(VM_EXEC,^I       ^IVM_EXEC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: include/asm-arm/offsets.c:72:
+  DEFINE(VM_EXEC,^I       ^IVM_EXEC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: include/asm-arm/offsets.c:73:
+  BLANK();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: include/asm-arm/offsets.c:74:
+  DEFINE(PAGE_SZ,^I       ^IPAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: include/asm-arm/offsets.c:74:
+  DEFINE(PAGE_SZ,^I       ^IPAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: include/asm-arm/offsets.c:75:
+  BLANK();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: include/asm-arm/offsets.c:76:
+  DEFINE(SYS_ERROR0,^I^I0x9f0000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: include/asm-arm/offsets.c:77:
+  BLANK();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: include/asm-arm/offsets.c:78:
+  DEFINE(SIZEOF_MACHINE_DESC,^Isizeof(struct machine_desc));$

WARNING:CONST_STRUCT: struct machine_desc should normally be const
#297: FILE: include/asm-arm/offsets.c:78:
+  DEFINE(SIZEOF_MACHINE_DESC,	sizeof(struct machine_desc));

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: include/asm-arm/offsets.c:79:
+  return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: include/asm-arm/offsets.c:79:
+  return 0; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236312.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 37 warnings, 2 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236312.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
