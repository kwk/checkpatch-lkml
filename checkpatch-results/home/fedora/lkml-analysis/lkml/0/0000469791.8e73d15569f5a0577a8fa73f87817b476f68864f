WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#120: 
diff -urN -X /home/vamsi/dontdiff /usr/src/2417-pure/arch/i386/kernel/i387.c 2417-tcore/arch/i386/kernel/i387.c

ERROR:SPACING: space prohibited after that open parenthesis '('
#128: FILE: arch/i386/kernel/i387.c:524:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#128: FILE: arch/i386/kernel/i387.c:524:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/i386/kernel/i387.c:526:
+        int fpvalid;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/i387.c:526:
+        int fpvalid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/i386/kernel/i387.c:528:
+        fpvalid = tsk->used_math;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/kernel/i387.c:528:
+        fpvalid = tsk->used_math;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/i386/kernel/i387.c:529:
+        if ( fpvalid ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/kernel/i387.c:529:
+        if ( fpvalid ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: arch/i386/kernel/i387.c:529:
+        if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: arch/i386/kernel/i387.c:529:
+        if ( fpvalid ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/i386/kernel/i387.c:530:
+                if (tsk == current) unlazy_fpu( tsk );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/i386/kernel/i387.c:530:
+                if (tsk == current) unlazy_fpu( tsk );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#134: FILE: arch/i386/kernel/i387.c:530:
+                if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#134: FILE: arch/i386/kernel/i387.c:530:
+                if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#134: FILE: arch/i386/kernel/i387.c:530:
+                if (tsk == current) unlazy_fpu( tsk );

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/i386/kernel/i387.c:531:
+                if ( cpu_has_fxsr ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/i387.c:531:
+                if ( cpu_has_fxsr ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#135: FILE: arch/i386/kernel/i387.c:531:
+                if ( cpu_has_fxsr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: arch/i386/kernel/i387.c:531:
+                if ( cpu_has_fxsr ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#135: FILE: arch/i386/kernel/i387.c:531:
+                if ( cpu_has_fxsr ) {
[...]
+                } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/i386/kernel/i387.c:532:
+                        copy_fpu_fxsave( tsk, fpu );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/i387.c:532:
+                        copy_fpu_fxsave( tsk, fpu );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#136: FILE: arch/i386/kernel/i387.c:532:
+                        copy_fpu_fxsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#136: FILE: arch/i386/kernel/i387.c:532:
+                        copy_fpu_fxsave( tsk, fpu );

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/i386/kernel/i387.c:533:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/i387.c:533:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/i386/kernel/i387.c:534:
+                        copy_fpu_fsave( tsk, fpu );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/i386/kernel/i387.c:534:
+                        copy_fpu_fsave( tsk, fpu );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: arch/i386/kernel/i387.c:534:
+                        copy_fpu_fsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#138: FILE: arch/i386/kernel/i387.c:534:
+                        copy_fpu_fsave( tsk, fpu );

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/i386/kernel/i387.c:535:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/i387.c:535:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/i386/kernel/i387.c:536:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/i386/kernel/i387.c:536:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/i386/kernel/i387.c:538:
+        return fpvalid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/i386/kernel/i387.c:538:
+        return fpvalid;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: arch/i386/kernel/i387.c:541:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#145: FILE: arch/i386/kernel/i387.c:541:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/i386/kernel/i387.c:543:
+        int fpvalid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/i386/kernel/i387.c:543:
+        int fpvalid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/i386/kernel/i387.c:545:
+        fpvalid = tsk->used_math && cpu_has_fxsr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/i386/kernel/i387.c:545:
+        fpvalid = tsk->used_math && cpu_has_fxsr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/i386/kernel/i387.c:546:
+        if ( fpvalid ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/i387.c:546:
+        if ( fpvalid ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: arch/i386/kernel/i387.c:546:
+        if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: arch/i386/kernel/i387.c:546:
+        if ( fpvalid ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/i386/kernel/i387.c:547:
+                if (tsk == current) unlazy_fpu( tsk );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/i387.c:547:
+                if (tsk == current) unlazy_fpu( tsk );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#151: FILE: arch/i386/kernel/i387.c:547:
+                if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#151: FILE: arch/i386/kernel/i387.c:547:
+                if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#151: FILE: arch/i386/kernel/i387.c:547:
+                if (tsk == current) unlazy_fpu( tsk );

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/i386/kernel/i387.c:548:
+                memcpy( fpu, &tsk->thread.i387.fxsave,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/i387.c:548:
+                memcpy( fpu, &tsk->thread.i387.fxsave,$

ERROR:SPACING: space prohibited after that open parenthesis '('
#152: FILE: arch/i386/kernel/i387.c:548:
+                memcpy( fpu, &tsk->thread.i387.fxsave,

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/i386/kernel/i387.c:549:
+                        sizeof(struct user_fxsr_struct) );$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/i386/kernel/i387.c:549:
+                memcpy( fpu, &tsk->thread.i387.fxsave,
+                        sizeof(struct user_fxsr_struct) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/i386/kernel/i387.c:549:
+                        sizeof(struct user_fxsr_struct) );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#153: FILE: arch/i386/kernel/i387.c:549:
+                        sizeof(struct user_fxsr_struct) );

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/i386/kernel/i387.c:550:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/i386/kernel/i387.c:550:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/i386/kernel/i387.c:552:
+        return fpvalid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/kernel/i387.c:552:
+        return fpvalid;$

WARNING:RETURN_VOID: void function return statements are not generally useful
#164: FILE: arch/i386/kernel/i387.c:560:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/i386/kernel/process.c:645:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#220: FILE: fs/binfmt_elf.c:1019:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: fs/binfmt_elf.c:1019:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#236: FILE: fs/binfmt_elf.c:1035:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#249: FILE: fs/binfmt_elf.c:1048:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: fs/binfmt_elf.c:1050:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: fs/binfmt_elf.c:1051:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, 
+		unsigned int sz, void *data)

WARNING:RETURN_VOID: void function return statements are not generally useful
#259: FILE: fs/binfmt_elf.c:1058:
+	return;
+}

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#263: FILE: fs/binfmt_elf.c:1062:
+ * which need to be filled up seperately.
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: fs/binfmt_elf.c:1064:
+static inline void fill_prstatus(struct elf_prstatus *prstatus, struct task_struct *p, long signr) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#267: FILE: fs/binfmt_elf.c:1066:
+	prstatus->pr_info.si_signo = prstatus->pr_cursig = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:RETURN_VOID: void function return statements are not generally useful
#283: FILE: fs/binfmt_elf.c:1082:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: fs/binfmt_elf.c:1087:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#304: FILE: fs/binfmt_elf.c:1103:
+	return;
+}

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#314: FILE: fs/binfmt_elf.c:1113:
+int core_dumps_threads = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#318: FILE: fs/binfmt_elf.c:1117:
+struct elf_thread_status
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#335: FILE: fs/binfmt_elf.c:1134:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: fs/binfmt_elf.c:1138:
+ * Suspend execution of other threads belonging to the same multithreaded process $

WARNING:TYPO_SPELLING: 'durring' may be misspelled - perhaps 'during'?
#342: FILE: fs/binfmt_elf.c:1141:
+ * Sets the current->cpu_mask to the current cpu to avoid cpu migration durring the dump.
                                                                         ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: fs/binfmt_elf.c:1142:
+ * This cpu will also be the only cpu the other threads will be allowed to run after $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: fs/binfmt_elf.c:1162:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: fs/binfmt_elf.c:1164:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: fs/binfmt_elf.c:1168:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: fs/binfmt_elf.c:1176:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: fs/binfmt_elf.c:1178:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: fs/binfmt_elf.c:1182:
+^I/* $

WARNING:TYPO_SPELLING: 'sychronize' may be misspelled - perhaps 'synchronize'?
#384: FILE: fs/binfmt_elf.c:1183:
+	 * now we sychronize on all the CPU's to make sure
 	          ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: fs/binfmt_elf.c:1184:
+^I * none of the other thread processes are not running in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/binfmt_elf.c:1187:
+^I * We have a race from the time the runqueue_lock is released and the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: fs/binfmt_elf.c:1188:
+^I * time __switch_to gets called that can result in bogus FPU/XFPU register $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: fs/binfmt_elf.c:1192:
+	smp_call_function(ELF_CORE_SYNC, NULL, 1,1);
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: fs/binfmt_elf.c:1204:
+	if(current_cpu_mask != current->cpus_runnable)

WARNING:LONG_LINE_STRING: line length of 130 exceeds 100 columns
#406: FILE: fs/binfmt_elf.c:1205:
+		printk(KERN_WARNING "tcore: multithread core dump CPU affinity assumption violated"); /* BUG would be too harsh */

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#406: FILE: fs/binfmt_elf.c:1205:
+		printk(KERN_WARNING "tcore: multithread core dump CPU affinity assumption violated"); /* BUG would be too harsh */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: fs/binfmt_elf.c:1210:
+^I^I^Itask_lock(p);^I^I^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#418: FILE: fs/binfmt_elf.c:1217:
+	return;
+}

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#425: FILE: fs/binfmt_elf.c:1224:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: fs/binfmt_elf.c:1224:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: fs/binfmt_elf.c:1224:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#427: FILE: fs/binfmt_elf.c:1226:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#433: FILE: fs/binfmt_elf.c:1232:
+		printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#433: FILE: fs/binfmt_elf.c:1232:
+	if (!t) {
+		printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: fs/binfmt_elf.c:1240:
+^Ielf_core_copy_task_regs(p, &t->prstatus.pr_reg);^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->prstatus
#442: FILE: fs/binfmt_elf.c:1241:
+	fill_note(&t->notes[0], "CORE", NT_PRSTATUS, sizeof(t->prstatus), &(t->prstatus));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#446: FILE: fs/binfmt_elf.c:1245:
+	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->fpu
#447: FILE: fs/binfmt_elf.c:1246:
+		fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->xfpu
#453: FILE: fs/binfmt_elf.c:1252:
+		fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: fs/binfmt_elf.c:1283:
+ ^Istruct task_struct *p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#476: FILE: fs/binfmt_elf.c:1283:
+ ^Istruct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: fs/binfmt_elf.c:1283:
+ ^Istruct task_struct *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: fs/binfmt_elf.c:1284:
+ ^ILIST_HEAD(thread_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: fs/binfmt_elf.c:1284:
+ ^ILIST_HEAD(thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: fs/binfmt_elf.c:1284:
+ ^ILIST_HEAD(thread_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: fs/binfmt_elf.c:1285:
+ ^Istruct list_head *t;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#478: FILE: fs/binfmt_elf.c:1285:
+ ^Istruct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: fs/binfmt_elf.c:1285:
+ ^Istruct list_head *t;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: fs/binfmt_elf.c:1291:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/binfmt_elf.c:1296:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: fs/binfmt_elf.c:1296:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/binfmt_elf.c:1296:
+ ^Iif (atomic_read(&current->mm->mm_users) != 1) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#489: FILE: fs/binfmt_elf.c:1296:
+ 	if (atomic_read(&current->mm->mm_users) != 1) {
+		dump_threads = core_dumps_threads;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#494: FILE: fs/binfmt_elf.c:1301:
+	if (dump_threads) {
+		cpu_mask = suspend_other_threads();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: fs/binfmt_elf.c:1304:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#515: FILE: fs/binfmt_elf.c:1329:
+					int sz = elf_dump_thread_status(signr, p, &thread_list);
+					if (!sz) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#515: FILE: fs/binfmt_elf.c:1329:
+					if (!sz) {
[...]
+					else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#519: FILE: fs/binfmt_elf.c:1333:
+					}
+					else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#550: FILE: fs/binfmt_elf.c:1345:
+	fill_elf_header(&elf, segs+1); /* including notes section*/
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: fs/binfmt_elf.c:1378:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#638: FILE: fs/binfmt_elf.c:1382:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#638: FILE: fs/binfmt_elf.c:1382:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#643: FILE: fs/binfmt_elf.c:1387:
+	if (elf_core_copy_task_xfpregs(current, &xfpu)) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: fs/binfmt_elf.c:1400:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: fs/binfmt_elf.c:1434:
+ ^I/* write out the notes section */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: fs/binfmt_elf.c:1434:
+ ^I/* write out the notes section */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: fs/binfmt_elf.c:1434:
+ ^I/* write out the notes section */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: fs/binfmt_elf.c:1440:
+ ^Iif (dump_threads)  {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: fs/binfmt_elf.c:1440:
+ ^Iif (dump_threads)  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: fs/binfmt_elf.c:1440:
+ ^Iif (dump_threads)  {$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#685: FILE: fs/binfmt_elf.c:1442:
+			struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#686: FILE: fs/binfmt_elf.c:1443:
+			struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);
+			for (i = 0; i < tmp->num_notes; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: fs/binfmt_elf.c:1447:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: fs/binfmt_elf.c:1447:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: fs/binfmt_elf.c:1447:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: fs/binfmt_elf.c:1448:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: fs/binfmt_elf.c:1448:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#705: FILE: fs/binfmt_elf.c:1495:
+		while(!list_empty(&thread_list)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#707: FILE: fs/binfmt_elf.c:1497:
+			struct list_head *tmp = thread_list.next;
+			list_del(tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: include/asm-i386/elf.h:103:
+extern int dump_task_regs (struct task_struct *, struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#725: FILE: include/asm-i386/elf.h:103:
+extern int dump_task_regs (struct task_struct *, struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#725: FILE: include/asm-i386/elf.h:103:
+extern int dump_task_regs (struct task_struct *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#725: FILE: include/asm-i386/elf.h:103:
+extern int dump_task_regs (struct task_struct *, struct pt_regs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_fpu (struct task_struct *, struct user_i387_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#726: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_fpu (struct task_struct *, struct user_i387_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#726: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_fpu (struct task_struct *, struct user_i387_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_i387_struct *' should also have an identifier name
#726: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_fpu (struct task_struct *, struct user_i387_struct *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#727: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#727: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#727: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_fxsr_struct *' should also have an identifier name
#727: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#733: FILE: include/asm-i386/elf.h:111:
+extern void dump_smp_unlazy_fpu(void);

CHECK:BRACES: braces {} should be used on all arms of this statement
#764: FILE: include/linux/elfcore.h:95:
+	if (sizeof(elf_gregset_t) != sizeof(struct pt_regs)) {
[...]
+	} else
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#765: FILE: include/linux/elfcore.h:96:
+		printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: include/linux/elfcore.h:97:
+		printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",
+			(long)sizeof(elf_gregset_t), (long)sizeof(struct pt_regs));

CHECK:BRACES: Unbalanced braces around else statement
#767: FILE: include/linux/elfcore.h:98:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#818: FILE: include/linux/sched.h:163:
+extern void reschedule_other_cpus(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#821: FILE: include/linux/sched.h:166:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#832: FILE: include/linux/sysctl.h:90:
+	KERN_CORE_DUMPS_THREADS=17, /* int: include status of others threads in dump */
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: kernel/sched.c:124:
+#define can_schedule(p,cpu) ((p)->cpus_allowed)
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#862: FILE: kernel/sched.c:717:
+	for(i=0; i< smp_num_cpus; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#862: FILE: kernel/sched.c:717:
+	for(i=0; i< smp_num_cpus; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#862: FILE: kernel/sched.c:717:
+	for(i=0; i< smp_num_cpus; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: kernel/sched.c:725:
+#endif^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#872: FILE: kernel/sched.c:727:
+	return;
+}

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#884: FILE: kernel/sysctl.c:52:
+extern int core_dumps_threads;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 86 errors, 72 warnings, 20 checks, 727 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000469791.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
