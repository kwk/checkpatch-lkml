WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#89: FILE: arch/i386/kernel/acpi/boot.c:648:
+		printk(KERN_INFO PREFIX "PM-Timer IO Port: %#x\n", acpi_pmtmr_ioport);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#133: FILE: arch/i386/kernel/tsc.c:42:
+		rdtscl(*timer_val);;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: arch/i386/kernel/tsc.c:66:
+	u64 cycles = (usecs * tsc_khz)/1000;
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: arch/i386/kernel/tsc.c:67:
+	u64 cycles = (usecs * tsc_khz)/1000;
+	tsc_c3_offset += cycles;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#219: FILE: arch/i386/kernel/tsc.c:138:
+	for(i=0; i<3; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#219: FILE: arch/i386/kernel/tsc.c:138:
+	for(i=0; i<3; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: arch/i386/kernel/tsc.c:138:
+	for(i=0; i<3; i++) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#267: FILE: arch/i386/kernel/tsc.c:155:
+	if(delta64 > (1ULL<<32))
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#267: FILE: arch/i386/kernel/tsc.c:155:
+	if(delta64 > (1ULL<<32))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#273: FILE: arch/i386/kernel/tsc.c:161:
+	delta64 += CALIBRATE_TIME_MSEC/2; /* round for do_div */
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: arch/i386/kernel/tsc.c:162:
+	do_div(delta64,CALIBRATE_TIME_MSEC);
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: arch/i386/kernel/tsc.c:177:
+			cpufreq_scale(cpu_data[0].loops_per_jiffy,
+					cpu_khz_old, cpu_khz);

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: arch/i386/kernel/tsc.c:190:
+	if(!cpu_has_tsc || tsc_disable)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#329: FILE: arch/i386/kernel/tsc.c:199:
+	printk("Detected %lu.%03lu MHz processor.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/i386/kernel/tsc.c:200:
+	printk("Detected %lu.%03lu MHz processor.\n",
+				cpu_khz / 1000, cpu_khz % 1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#332: FILE: arch/i386/kernel/tsc.c:202:
+	set_cyc2ns_scale(cpu_khz/1000);
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#351: FILE: arch/i386/kernel/tsc.c:230:
+		printk(KERN_DEBUG "Checking if CPU frequency changed.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: arch/i386/kernel/tsc.c:247:
+static int time_cpufreq_notifier(struct notifier_block *nb,
+		unsigned long val, void *data)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#433: FILE: drivers/acpi/processor_idle.c:315:
+		tsc_c3_compensate((((t2-t1)&0xFFFFFF)*286)>>10);
 		                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#433: FILE: drivers/acpi/processor_idle.c:315:
+		tsc_c3_compensate((((t2-t1)&0xFFFFFF)*286)>>10);
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#433: FILE: drivers/acpi/processor_idle.c:315:
+		tsc_c3_compensate((((t2-t1)&0xFFFFFF)*286)>>10);
 		                                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#433: FILE: drivers/acpi/processor_idle.c:315:
+		tsc_c3_compensate((((t2-t1)&0xFFFFFF)*286)>>10);
 		                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#448: FILE: include/asm-i386/mach-default/mach_timer.h:20:
+	((CLOCK_TICK_RATE * CALIBRATE_TIME_MSEC + 1000/2)/1000)
 	                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#448: FILE: include/asm-i386/mach-default/mach_timer.h:20:
+	((CLOCK_TICK_RATE * CALIBRATE_TIME_MSEC + 1000/2)/1000)
 	                                                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#526: FILE: include/asm-i386/tsc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#527: FILE: include/asm-i386/tsc.h:2:
+ * linux/include/asm-i386/tsc.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#535: FILE: include/asm-i386/tsc.h:10:
+#include <asm/processor.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#551: FILE: include/asm-i386/tsc.h:26:
+typedef unsigned long long cycles_t;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: include/asm-i386/tsc.h:28:
+static inline cycles_t get_cycles (void)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#555: FILE: include/asm-i386/tsc.h:30:
+	unsigned long long ret=0;
 	                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#570: FILE: include/asm-i386/tsc.h:45:
+extern void tsc_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#573: FILE: include/asm-i386/tsc.h:48:
+extern int check_tsc_unstable(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#574: FILE: include/asm-i386/tsc.h:49:
+extern void mark_tsc_unstable(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 16 checks, 469 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
