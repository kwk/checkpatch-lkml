ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/arch/i386/kernel/edd.c	Fri Apr  4 11:52:35 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#48: FILE: arch/i386/kernel/edd.c:601:
+static decl_subsys(edd,&ktype_edd,NULL);
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#48: FILE: arch/i386/kernel/edd.c:601:
+static decl_subsys(edd,&ktype_edd,NULL);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#48: FILE: arch/i386/kernel/edd.c:601:
+static decl_subsys(edd,&ktype_edd,NULL);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: drivers/acpi/bus.c:679:
+decl_subsys(acpi,NULL,NULL);
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: drivers/acpi/bus.c:679:
+decl_subsys(acpi,NULL,NULL);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#89: FILE: drivers/base/bus.c:135:
+decl_subsys(bus,&ktype_bus,NULL);
                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#89: FILE: drivers/base/bus.c:135:
+decl_subsys(bus,&ktype_bus,NULL);
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: drivers/base/bus.c:135:
+decl_subsys(bus,&ktype_bus,NULL);
                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: drivers/base/class.c:53:
+ * they do not add new kobjects to the system */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxO)
#103: FILE: drivers/base/class.c:54:
+static decl_subsys(class,&ktype_devclass,NULL);
                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#103: FILE: drivers/base/class.c:54:
+static decl_subsys(class,&ktype_devclass,NULL);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: drivers/base/class.c:54:
+static decl_subsys(class,&ktype_devclass,NULL);
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#121: FILE: drivers/base/core.c:31:
+#define to_dev(obj) container_of(obj,struct device,kobj)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#121: FILE: drivers/base/core.c:31:
+#define to_dev(obj) container_of(obj,struct device,kobj)
                                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: drivers/base/core.c:88:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: drivers/base/core.c:95:
+		struct device *dev = to_dev(kobj);
+		if (dev->bus)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/base/core.c:109:
+static int dev_hotplug(struct kset *kset, struct kobject *kobj, char **envp,
+			int num_envp, char *buffer, int buffer_size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: drivers/base/core.c:116:
+		retval = dev->bus->hotplug (dev, envp, num_envp, buffer, buffer_size);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#158: FILE: drivers/base/core.c:117:
+			if (retval) {
+			pr_debug ("%s - hotplug() returned %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/base/core.c:118:
+			pr_debug ("%s - hotplug() returned %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#160: FILE: drivers/base/core.c:119:
+				  __FUNCTION__, retval);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/base/firmware.c:9:
+static decl_subsys(firmware,NULL,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/base/firmware.c:9:
+static decl_subsys(firmware,NULL,NULL);
                                 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#277: FILE: drivers/block/genhd.c:528:
+extern struct kobj_type ktype_part;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: include/linux/kobject.h:69:
+	int (*hotplug)(struct kset *kset, struct kobject *kobj, char **envp,
+			int num_envp, char *buffer, int buffer_size);

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#356: FILE: include/linux/kobject.h:77:
+	struct kset_hotplug_ops	* hotplug_ops;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: include/linux/kobject.h:101:
+static inline struct kobj_type * get_ktype(struct kobject * k)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: include/linux/kobject.h:101:
+static inline struct kobj_type * get_ktype(struct kobject * k)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: include/linux/kobject.h:105:
+^Ielse $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: include/linux/kobject.h:117:
+#define decl_subsys(_name,_type,_hotplug_ops) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: include/linux/kobject.h:117:
+#define decl_subsys(_name,_type,_hotplug_ops) \
                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#384: FILE: include/linux/kobject.h:122:
+		.hotplug_ops =_hotplug_ops, \
 		             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#414: FILE: lib/kobject.c:66:
+	struct kobject * parent = kobj;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: lib/kobject.c:68:
+^I/* walk up the ancestors until we hit the one pointing to the $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: lib/kobject.c:73:
+		length += strlen (parent->name) + 1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#429: FILE: lib/kobject.c:81:
+	struct kobject * parent;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: lib/kobject.c:85:
+		int cur = strlen (parent->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: lib/kobject.c:88:
+		strncpy (path + length, parent->name, cur);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: lib/kobject.c:92:
+	pr_debug("%s: path = '%s'\n",__FUNCTION__,path);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: lib/kobject.c:92:
+	pr_debug("%s: path = '%s'\n",__FUNCTION__,path);
 	                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#440: FILE: lib/kobject.c:92:
+	pr_debug("%s: path = '%s'\n",__FUNCTION__,path);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#448: FILE: lib/kobject.c:100:
+	char *argv [3];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: lib/kobject.c:111:
+	/* If the kset has a filter operation, call it. If it returns
+	   failure, no hotplug event is required. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: lib/kobject.c:111:
+	   failure, no hotplug event is required. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: lib/kobject.c:117:
+	pr_debug ("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#465: FILE: lib/kobject.c:117:
+	pr_debug ("%s\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: lib/kobject.c:122:
+	envp = (char **)kmalloc(NUM_ENVP * sizeof (char *), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#470: FILE: lib/kobject.c:122:
+	envp = (char **)kmalloc(NUM_ENVP * sizeof (char *), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#470: FILE: lib/kobject.c:122:
+	envp = (char **)kmalloc(NUM_ENVP * sizeof (char *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#473: FILE: lib/kobject.c:125:
+	memset (envp, 0x00, NUM_ENVP * sizeof (char *));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#473: FILE: lib/kobject.c:125:
+	memset (envp, 0x00, NUM_ENVP * sizeof (char *));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#483: FILE: lib/kobject.c:135:
+	if (name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#486: FILE: lib/kobject.c:138:
+	argv [0] = hotplug_path;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#487: FILE: lib/kobject.c:139:
+	argv [1] = name;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#488: FILE: lib/kobject.c:140:
+	argv [2] = 0;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#491: FILE: lib/kobject.c:143:
+	envp [i++] = "HOME=/";

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#492: FILE: lib/kobject.c:144:
+	envp [i++] = "PATH=/sbin:/bin:/usr/sbin:/usr/bin";

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#496: FILE: lib/kobject.c:148:
+	envp [i++] = scratch;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#499: FILE: lib/kobject.c:151:
+	kobj_path_length = get_kobj_path_length (kset, kobj);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: lib/kobject.c:152:
+	kobj_path = kmalloc (kobj_path_length, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: lib/kobject.c:154:
+		kfree (buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#503: FILE: lib/kobject.c:155:
+		kfree (envp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#506: FILE: lib/kobject.c:158:
+	memset (kobj_path, 0x00, kobj_path_length);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: lib/kobject.c:159:
+	fill_kobj_path (kset, kobj, kobj_path, kobj_path_length);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#509: FILE: lib/kobject.c:161:
+	envp [i++] = scratch;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: lib/kobject.c:162:
+	scratch += sprintf (scratch, "DEVPATH=%s", kobj_path) + 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: lib/kobject.c:166:
+		retval = kset->hotplug_ops->hotplug (kset, kobj,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: lib/kobject.c:170:
+			pr_debug ("%s - hotplug() returned %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#519: FILE: lib/kobject.c:171:
+				  __FUNCTION__, retval);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#524: FILE: lib/kobject.c:176:
+	pr_debug ("%s: %s %s %s %s %s %s\n", __FUNCTION__, argv[0], argv[1],

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#524: FILE: lib/kobject.c:176:
+	pr_debug ("%s: %s %s %s %s %s %s\n", __FUNCTION__, argv[0], argv[1],

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#526: FILE: lib/kobject.c:178:
+	retval = call_usermodehelper (argv[0], argv, envp, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#528: FILE: lib/kobject.c:180:
+		pr_debug ("%s - call_usermodehelper returned %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#529: FILE: lib/kobject.c:181:
+			  __FUNCTION__, retval);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: lib/kobject.c:184:
+	kfree (kobj_path);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#533: FILE: lib/kobject.c:185:
+	kfree (buffer);

WARNING:RETURN_VOID: void function return statements are not generally useful
#535: FILE: lib/kobject.c:187:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#551: FILE: lib/kobject.c:240:
+	struct kobject * top_kobj;

CHECK:BRACES: Unbalanced braces around else statement
#559: FILE: lib/kobject.c:264:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#561: FILE: lib/kobject.c:266:
+		/* If this kobj does not belong to a kset,
+		   try to find a parent that does. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#561: FILE: lib/kobject.c:266:
+		   try to find a parent that does. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: lib/kobject.c:273:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#579: FILE: lib/kobject.c:305:
+	struct kobject * top_kobj;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#582: FILE: lib/kobject.c:308:
+	/* If this kobj does not belong to a kset,
+	   try to find a parent that does. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#582: FILE: lib/kobject.c:308:
+	   try to find a parent that does. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: net/core/dev.c:2814:
+static decl_subsys(net,NULL,NULL);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: net/core/dev.c:2814:
+static decl_subsys(net,NULL,NULL);
                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380416.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 42 warnings, 5 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380416.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
