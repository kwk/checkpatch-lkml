WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/i2c/chips/sis5595.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#82: FILE: drivers/i2c/chips/sis5595.c:2:
+/*
+    sis5595.c - Part of lm_sensors, Linux kernel modules

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#86: FILE: drivers/i2c/chips/sis5595.c:6:
+			Kyösti Mälkki <kmalkki@cc.hut.fi>, and
 			  ^

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/i2c/chips/sis5595.c:22:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/i2c/chips/sis5595.c:23:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#107: FILE: drivers/i2c/chips/sis5595.c:27:
+/*
+   SiS southbridge has a LM78-like chip integrated on the same IC.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/i2c/chips/sis5595.c:29:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/i2c/chips/sis5595.c:39:
+   NOT SUPPORTED^IPCI ID^I^IBLACKLIST PCI ID^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#140: FILE: drivers/i2c/chips/sis5595.c:60:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: drivers/i2c/chips/sis5595.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: drivers/i2c/chips/sis5595.c:64:
+/* If force_addr is set to anything different from 0, we forcibly enable
+   the device at the given address. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: drivers/i2c/chips/sis5595.c:64:
+   the device at the given address. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#151: FILE: drivers/i2c/chips/sis5595.c:71:
+/* Addresses to scan.
+   Note that we can't determine the ISA address until we have initialized

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: drivers/i2c/chips/sis5595.c:72:
+   our module */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: drivers/i2c/chips/sis5595.c:85:
+			PCI_DEVICE_ID_SI_5511, /* 5513 chip has the 0008 device but
+						  that ID shows up in other chips so we

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: drivers/i2c/chips/sis5595.c:86:
+						  use the 5511 ID for recognition */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: drivers/i2c/chips/sis5595.c:116:
+/* On the first version of the chip, the temp registers are separate.
+   On the second version,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/i2c/chips/sis5595.c:119:
+   OVER and HYST are really MAX and MIN. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/i2c/chips/sis5595.c:122:
+#define SIS5595_REG_TEMP ^I(( data->revision) >= REV2MIN) ? \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: drivers/i2c/chips/sis5595.c:122:
+#define SIS5595_REG_TEMP 	(( data->revision) >= REV2MIN) ? \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#202: FILE: drivers/i2c/chips/sis5595.c:122:
+#define SIS5595_REG_TEMP 	(( data->revision) >= REV2MIN) ? \
+					SIS5595_REG_IN(4) : 0x27

ERROR:SPACING: space prohibited after that open parenthesis '('
#204: FILE: drivers/i2c/chips/sis5595.c:124:
+#define SIS5595_REG_TEMP_OVER	(( data->revision) >= REV2MIN) ? \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#204: FILE: drivers/i2c/chips/sis5595.c:124:
+#define SIS5595_REG_TEMP_OVER	(( data->revision) >= REV2MIN) ? \
+					SIS5595_REG_IN_MAX(4) : 0x39

ERROR:SPACING: space prohibited after that open parenthesis '('
#206: FILE: drivers/i2c/chips/sis5595.c:126:
+#define SIS5595_REG_TEMP_HYST	(( data->revision) >= REV2MIN) ? \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#206: FILE: drivers/i2c/chips/sis5595.c:126:
+#define SIS5595_REG_TEMP_HYST	(( data->revision) >= REV2MIN) ? \
+					SIS5595_REG_IN_MIN(4) : 0x3a

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#215: FILE: drivers/i2c/chips/sis5595.c:135:
+/* Conversions. Limit checking is only done on the TO_REG
+   variants. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#215: FILE: drivers/i2c/chips/sis5595.c:135:
+   variants. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#218: FILE: drivers/i2c/chips/sis5595.c:138:
+/* IN: mV, (0V to 4.08V)
+   REG: 16mV/bit */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#218: FILE: drivers/i2c/chips/sis5595.c:138:
+   REG: 16mV/bit */

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: drivers/i2c/chips/sis5595.c:142:
+	unsigned long nval = SENSORS_LIMIT(val, 0, 4080);
+	return (nval + 8) / 16;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: drivers/i2c/chips/sis5595.c:144:
+}
+#define IN_FROM_REG(val) ((val) *  16)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#235: FILE: drivers/i2c/chips/sis5595.c:155:
+	return val==0 ? -1 : val==255 ? 0 : 1350000/(val*div);
 	          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#235: FILE: drivers/i2c/chips/sis5595.c:155:
+	return val==0 ? -1 : val==255 ? 0 : 1350000/(val*div);
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: drivers/i2c/chips/sis5595.c:155:
+	return val==0 ? -1 : val==255 ? 0 : 1350000/(val*div);
 	                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#235: FILE: drivers/i2c/chips/sis5595.c:155:
+	return val==0 ? -1 : val==255 ? 0 : 1350000/(val*div);
 	                                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: drivers/i2c/chips/sis5595.c:159:
+/* TEMP: mC (-54.12C to +157.53C)
+   REG: 0.83C/bit + 52.12, two's complement  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: drivers/i2c/chips/sis5595.c:159:
+   REG: 0.83C/bit + 52.12, two's complement  */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#244: FILE: drivers/i2c/chips/sis5595.c:164:
+}
+static inline s8 TEMP_TO_REG(int val)

WARNING:SPACING: space prohibited before semicolon
#246: FILE: drivers/i2c/chips/sis5595.c:166:
+	int nval = SENSORS_LIMIT(val, -54120, 157530) ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	int nval = SENSORS_LIMIT(val, -54120, 157530) ;
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#247: FILE: drivers/i2c/chips/sis5595.c:167:
+	return nval<0 ? (nval-5212-415)/830 : (nval-5212+415)/830;
 	                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: drivers/i2c/chips/sis5595.c:171:
+/* FAN DIV: 1, 2, 4, or 8 (defaults to 2)
+   REG: 0, 1, 2, or 3 (respectively) (defaults to 1) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: drivers/i2c/chips/sis5595.c:171:
+   REG: 0, 1, 2, or 3 (respectively) (defaults to 1) */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#254: FILE: drivers/i2c/chips/sis5595.c:174:
+	return val==8 ? 3 : val==4 ? 2 : val==1 ? 0 : 1;
 	          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#254: FILE: drivers/i2c/chips/sis5595.c:174:
+	return val==8 ? 3 : val==4 ? 2 : val==1 ? 0 : 1;
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#254: FILE: drivers/i2c/chips/sis5595.c:174:
+	return val==8 ? 3 : val==4 ? 2 : val==1 ? 0 : 1;
 	                                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#256: FILE: drivers/i2c/chips/sis5595.c:176:
+}
+#define DIV_FROM_REG(val) (1 << (val))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#259: FILE: drivers/i2c/chips/sis5595.c:179:
+/* For the SIS5595, we need to keep some data in memory. That
+   data is pointed to by sis5595_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#261: FILE: drivers/i2c/chips/sis5595.c:181:
+   allocated. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: drivers/i2c/chips/sis5595.c:229:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", IN_FROM_REG(data->in[nr]));

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: drivers/i2c/chips/sis5595.c:235:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", IN_FROM_REG(data->in_min[nr]));

WARNING:LINE_SPACING: Missing a blank line after declarations
#321: FILE: drivers/i2c/chips/sis5595.c:241:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", IN_FROM_REG(data->in_max[nr]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/i2c/chips/sis5595.c:245:
+static ssize_t set_in_min(struct device *dev, const char *buf,
+	       size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#329: FILE: drivers/i2c/chips/sis5595.c:249:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: drivers/i2c/chips/sis5595.c:250:
+	unsigned long val = simple_strtoul(buf, NULL, 10);
+	data->in_min[nr] = IN_TO_REG(val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/i2c/chips/sis5595.c:256:
+static ssize_t set_in_max(struct device *dev, const char *buf,
+	       size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#340: FILE: drivers/i2c/chips/sis5595.c:260:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#341: FILE: drivers/i2c/chips/sis5595.c:261:
+	unsigned long val = simple_strtoul(buf, NULL, 10);
+	data->in_max[nr] = IN_TO_REG(val);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#346: FILE: drivers/i2c/chips/sis5595.c:266:
+#define show_in_offset(offset)					\
+static ssize_t							\
+	show_in##offset (struct device *dev, char *buf)		\
+{								\
+	return show_in(dev, buf, offset);			\
+}								\
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, 		\
+		show_in##offset, NULL);				\
+static ssize_t							\
+	show_in##offset##_min (struct device *dev, char *buf)	\
+{								\
+	return show_in_min(dev, buf, offset);			\
+}								\
+static ssize_t							\
+	show_in##offset##_max (struct device *dev, char *buf)	\
+{								\
+	return show_in_max(dev, buf, offset);			\
+}								\
+static ssize_t set_in##offset##_min (struct device *dev,	\
+		const char *buf, size_t count)			\
+{								\
+	return set_in_min(dev, buf, count, offset);		\
+}								\
+static ssize_t set_in##offset##_max (struct device *dev,	\
+		const char *buf, size_t count)			\
+{								\
+	return set_in_max(dev, buf, count, offset);		\
+}								\
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,		\
+		show_in##offset##_min, set_in##offset##_min);	\
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,		\
+		show_in##offset##_max, set_in##offset##_max);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#346: FILE: drivers/i2c/chips/sis5595.c:266:
+#define show_in_offset(offset)					\
+static ssize_t							\
+	show_in##offset (struct device *dev, char *buf)		\
+{								\
+	return show_in(dev, buf, offset);			\
+}								\
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, 		\
+		show_in##offset, NULL);				\
+static ssize_t							\
+	show_in##offset##_min (struct device *dev, char *buf)	\
+{								\
+	return show_in_min(dev, buf, offset);			\
+}								\
+static ssize_t							\
+	show_in##offset##_max (struct device *dev, char *buf)	\
+{								\
+	return show_in_max(dev, buf, offset);			\
+}								\
+static ssize_t set_in##offset##_min (struct device *dev,	\
+		const char *buf, size_t count)			\
+{								\
+	return set_in_min(dev, buf, count, offset);		\
+}								\
+static ssize_t set_in##offset##_max (struct device *dev,	\
+		const char *buf, size_t count)			\
+{								\
+	return set_in_max(dev, buf, count, offset);		\
+}								\
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,		\
+		show_in##offset##_min, set_in##offset##_min);	\
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,		\
+		show_in##offset##_max, set_in##offset##_max);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: drivers/i2c/chips/sis5595.c:268:
+	show_in##offset (struct device *dev, char *buf)		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: drivers/i2c/chips/sis5595.c:272:
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#352: FILE: drivers/i2c/chips/sis5595.c:272:
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, 		\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: drivers/i2c/chips/sis5595.c:275:
+	show_in##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: drivers/i2c/chips/sis5595.c:280:
+	show_in##offset##_max (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: drivers/i2c/chips/sis5595.c:284:
+static ssize_t set_in##offset##_min (struct device *dev,	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: drivers/i2c/chips/sis5595.c:289:
+static ssize_t set_in##offset##_max (struct device *dev,	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#374: FILE: drivers/i2c/chips/sis5595.c:294:
+static DEVICE_ATTR(in##offset##_min, S_IRUGO | S_IWUSR,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#376: FILE: drivers/i2c/chips/sis5595.c:296:
+static DEVICE_ATTR(in##offset##_max, S_IRUGO | S_IWUSR,		\

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: drivers/i2c/chips/sis5595.c:309:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp));

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: drivers/i2c/chips/sis5595.c:315:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_over));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#402: FILE: drivers/i2c/chips/sis5595.c:322:
+	long val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: drivers/i2c/chips/sis5595.c:323:
+	long val = simple_strtol(buf, NULL, 10);
+	data->temp_over = TEMP_TO_REG(val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#411: FILE: drivers/i2c/chips/sis5595.c:331:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_hyst));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#418: FILE: drivers/i2c/chips/sis5595.c:338:
+	long val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#419: FILE: drivers/i2c/chips/sis5595.c:339:
+	long val = simple_strtol(buf, NULL, 10);
+	data->temp_hyst = TEMP_TO_REG(val);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp' to 'temp1_input_show'
#422: FILE: drivers/i2c/chips/sis5595.c:342:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#424: FILE: drivers/i2c/chips/sis5595.c:344:
+static DEVICE_ATTR(temp1_input, S_IRUGO, show_temp, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_over' to 'temp1_max_show' 'set_temp_over' to 'temp1_max_store'
#425: FILE: drivers/i2c/chips/sis5595.c:345:
+static DEVICE_ATTR(temp1_max, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#425: FILE: drivers/i2c/chips/sis5595.c:345:
+static DEVICE_ATTR(temp1_max, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_hyst' to 'temp1_max_hyst_show' 'set_temp_hyst' to 'temp1_max_hyst_store'
#427: FILE: drivers/i2c/chips/sis5595.c:347:
+static DEVICE_ATTR(temp1_max_hyst, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#427: FILE: drivers/i2c/chips/sis5595.c:347:
+static DEVICE_ATTR(temp1_max_hyst, S_IRUGO | S_IWUSR,

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: drivers/i2c/chips/sis5595.c:354:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", FAN_FROM_REG(data->fan[nr],

ERROR:SPACING: space prohibited before that close parenthesis ')'
#435: FILE: drivers/i2c/chips/sis5595.c:355:
+		DIV_FROM_REG(data->fan_div[nr])) );

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/i2c/chips/sis5595.c:361:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan_min[nr],

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: drivers/i2c/chips/sis5595.c:361:
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan_min[nr],
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#442: FILE: drivers/i2c/chips/sis5595.c:362:
+		DIV_FROM_REG(data->fan_div[nr])) );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/i2c/chips/sis5595.c:366:
+static ssize_t set_fan_min(struct device *dev, const char *buf,
+		size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#450: FILE: drivers/i2c/chips/sis5595.c:370:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#451: FILE: drivers/i2c/chips/sis5595.c:371:
+	unsigned long val = simple_strtoul(buf, NULL, 10);
+	data->fan_min[nr] = FAN_TO_REG(val, DIV_FROM_REG(data->fan_div[nr]));

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: drivers/i2c/chips/sis5595.c:379:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", DIV_FROM_REG(data->fan_div[nr]) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#459: FILE: drivers/i2c/chips/sis5595.c:379:
+	return sprintf(buf, "%d\n", DIV_FROM_REG(data->fan_div[nr]) );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#463: FILE: drivers/i2c/chips/sis5595.c:383:
+/* Note: we save and restore the fan minimum here, because its value is
+   determined in part by the fan divisor.  This follows the principle of

WARNING:TYPO_SPELLING: 'suprise' may be misspelled - perhaps 'surprise'?
#464: FILE: drivers/i2c/chips/sis5595.c:384:
+   least suprise; the user doesn't expect the fan minimum to change just
          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#465: FILE: drivers/i2c/chips/sis5595.c:385:
+   because the divisor changed. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/i2c/chips/sis5595.c:387:
+static ssize_t set_fan_div(struct device *dev, const char *buf,
+	size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#473: FILE: drivers/i2c/chips/sis5595.c:393:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: drivers/i2c/chips/sis5595.c:395:
+	int reg = sis5595_read_value(client, SIS5595_REG_FANDIV);
+	switch (val) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#476: FILE: drivers/i2c/chips/sis5595.c:396:
+	case 1: data->fan_div[nr] = 0; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#477: FILE: drivers/i2c/chips/sis5595.c:397:
+	case 2: data->fan_div[nr] = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#478: FILE: drivers/i2c/chips/sis5595.c:398:
+	case 4: data->fan_div[nr] = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#479: FILE: drivers/i2c/chips/sis5595.c:399:
+	case 8: data->fan_div[nr] = 3; break;

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: drivers/i2c/chips/sis5595.c:402:
+		dev_err(&client->dev, "fan_div value %ld not "
+			"supported. Choose one of 1, 2, 4 or 8!\n", val);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/i2c/chips/sis5595.c:405:
+^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#501: FILE: drivers/i2c/chips/sis5595.c:421:
+#define show_fan_offset(offset)						\
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\
+{									\
+	return show_fan(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\
+{									\
+	return show_fan_min(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\
+{									\
+	return show_fan_div(dev, buf, offset - 1);			\
+}									\
+static ssize_t set_fan_##offset##_min (struct device *dev,		\
+		const char *buf, size_t count)				\
+{									\
+	return set_fan_min(dev, buf, count, offset - 1);		\
+}									\
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);\
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,		\
+		show_fan_##offset##_min, set_fan_##offset##_min);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#501: FILE: drivers/i2c/chips/sis5595.c:421:
+#define show_fan_offset(offset)						\
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\
+{									\
+	return show_fan(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\
+{									\
+	return show_fan_min(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\
+{									\
+	return show_fan_div(dev, buf, offset - 1);			\
+}									\
+static ssize_t set_fan_##offset##_min (struct device *dev,		\
+		const char *buf, size_t count)				\
+{									\
+	return set_fan_min(dev, buf, count, offset - 1);		\
+}									\
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);\
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,		\
+		show_fan_##offset##_min, set_fan_##offset##_min);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#501: FILE: drivers/i2c/chips/sis5595.c:421:
+#define show_fan_offset(offset)						\
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\
+{									\
+	return show_fan(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\
+{									\
+	return show_fan_min(dev, buf, offset - 1);			\
+}									\
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\
+{									\
+	return show_fan_div(dev, buf, offset - 1);			\
+}									\
+static ssize_t set_fan_##offset##_min (struct device *dev,		\
+		const char *buf, size_t count)				\
+{									\
+	return set_fan_min(dev, buf, count, offset - 1);		\
+}									\
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);\
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,		\
+		show_fan_##offset##_min, set_fan_##offset##_min);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#502: FILE: drivers/i2c/chips/sis5595.c:422:
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#506: FILE: drivers/i2c/chips/sis5595.c:426:
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: drivers/i2c/chips/sis5595.c:430:
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: drivers/i2c/chips/sis5595.c:434:
+static ssize_t set_fan_##offset##_min (struct device *dev,		\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#519: FILE: drivers/i2c/chips/sis5595.c:439:
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, show_fan_##offset, NULL);\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#520: FILE: drivers/i2c/chips/sis5595.c:440:
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR,		\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/i2c/chips/sis5595.c:447:
+static ssize_t set_fan_1_div(struct device *dev, const char *buf,
+		size_t count)

WARNING:SPACING: space prohibited before semicolon
#529: FILE: drivers/i2c/chips/sis5595.c:449:
+	return set_fan_div(dev, buf, count, 0) ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/i2c/chips/sis5595.c:453:
+static ssize_t set_fan_2_div(struct device *dev, const char *buf,
+		size_t count)

WARNING:SPACING: space prohibited before semicolon
#535: FILE: drivers/i2c/chips/sis5595.c:455:
+	return set_fan_div(dev, buf, count, 1) ;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_1_div' to 'fan1_div_show' 'set_fan_1_div' to 'fan1_div_store'
#536: FILE: drivers/i2c/chips/sis5595.c:456:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#537: FILE: drivers/i2c/chips/sis5595.c:457:
+static DEVICE_ATTR(fan1_div, S_IRUGO | S_IWUSR,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_fan_2_div' to 'fan2_div_show' 'set_fan_2_div' to 'fan2_div_store'
#539: FILE: drivers/i2c/chips/sis5595.c:459:
+static DEVICE_ATTR(fan2_div, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#539: FILE: drivers/i2c/chips/sis5595.c:459:
+static DEVICE_ATTR(fan2_div, S_IRUGO | S_IWUSR,

WARNING:LINE_SPACING: Missing a blank line after declarations
#546: FILE: drivers/i2c/chips/sis5595.c:466:
+	struct sis5595_data *data = sis5595_update_device(dev);
+	return sprintf(buf, "%d\n", data->alarms);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms' to 'alarms_show'
#547: FILE: drivers/i2c/chips/sis5595.c:467:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#548: FILE: drivers/i2c/chips/sis5595.c:468:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: drivers/i2c/chips/sis5595.c:469:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: drivers/i2c/chips/sis5595.c:469:
+ $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#564: FILE: drivers/i2c/chips/sis5595.c:484:
+	if (!(s_bridge =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#569: FILE: drivers/i2c/chips/sis5595.c:489:
+	for(i = blacklist; *i != 0; i++) {

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#571: FILE: drivers/i2c/chips/sis5595.c:491:
+			printk("sis5595.ko: Error: Looked for SIS5595 but found unsupported device %.4X\n", *i);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#571: FILE: drivers/i2c/chips/sis5595.c:491:
+			printk("sis5595.ko: Error: Looked for SIS5595 but found unsupported device %.4X\n", *i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#582: FILE: drivers/i2c/chips/sis5595.c:502:
+		printk("sis5595.ko: base address not set - upgrade BIOS or use force_addr=0xaddr\n");

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: drivers/i2c/chips/sis5595.c:524:
+	if(force_addr)

ERROR:SPACING: space required before the open parenthesis '('
#611: FILE: drivers/i2c/chips/sis5595.c:531:
+	if(force_addr) {

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: drivers/i2c/chips/sis5595.c:548:
+	if((val & 0x80) == 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: drivers/i2c/chips/sis5595.c:556:
+^I^Iif((val & 0x80) == 0) $

ERROR:SPACING: space required before the open parenthesis '('
#636: FILE: drivers/i2c/chips/sis5595.c:556:
+		if((val & 0x80) == 0) 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#641: FILE: drivers/i2c/chips/sis5595.c:561:
+	if (!(data = kmalloc(sizeof(struct sis5595_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct sis5595_data)...)
#641: FILE: drivers/i2c/chips/sis5595.c:561:
+	if (!(data = kmalloc(sizeof(struct sis5595_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->revision
#656: FILE: drivers/i2c/chips/sis5595.c:576:
+	pci_read_config_byte(s_bridge, SIS5595_REVISION_REG, &(data->revision));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#659: FILE: drivers/i2c/chips/sis5595.c:579:
+	if(data->revision >= REV2MIN) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: drivers/i2c/chips/sis5595.c:585:
+^I$

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#667: FILE: drivers/i2c/chips/sis5595.c:587:
+	strlcpy(new_client->name, "sis5595", I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#673: FILE: drivers/i2c/chips/sis5595.c:593:
+	if ((err = i2c_attach_client(new_client)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/i2c/chips/sis5595.c:595:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: drivers/i2c/chips/sis5595.c:602:
+		data->fan_min[i] = sis5595_read_value(new_client,
+					SIS5595_REG_FAN_MIN(i));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: drivers/i2c/chips/sis5595.c:636:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#729: FILE: drivers/i2c/chips/sis5595.c:649:
+	if ((err = i2c_detach_client(client))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/i2c/chips/sis5595.c:651:
+		dev_err(&client->dev,
+		    "Client deregistration failed, client not detached.\n");

ERROR:SPACING: space required before the open parenthesis '('
#735: FILE: drivers/i2c/chips/sis5595.c:655:
+	if(i2c_is_isa_client(client))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#743: FILE: drivers/i2c/chips/sis5595.c:663:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#750: FILE: drivers/i2c/chips/sis5595.c:670:
+	struct sis5595_data *data = i2c_get_clientdata(client);
+	down(&data->lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#760: FILE: drivers/i2c/chips/sis5595.c:680:
+	struct sis5595_data *data = i2c_get_clientdata(client);
+	down(&data->lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#771: FILE: drivers/i2c/chips/sis5595.c:691:
+	u8 config = sis5595_read_value(client, SIS5595_REG_CONFIG);
+	if (!(config & 0x01))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/i2c/chips/sis5595.c:693:
+		sis5595_write_value(client, SIS5595_REG_CONFIG,
+				(config & 0xf7) | 0x01);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#784: FILE: drivers/i2c/chips/sis5595.c:704:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#785: FILE: drivers/i2c/chips/sis5595.c:705:
+	    (jiffies < data->last_updated) || !data->valid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#786: FILE: drivers/i2c/chips/sis5595.c:706:
+	    (jiffies < data->last_updated) || !data->valid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#804: FILE: drivers/i2c/chips/sis5595.c:724:
+		if(data->maxins == 3) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#827: FILE: drivers/i2c/chips/sis5595.c:747:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#845: FILE: drivers/i2c/chips/sis5595.c:765:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 92 warnings, 32 checks, 797 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
