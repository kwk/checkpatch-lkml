WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
diff -u -r linux-2.4.4/arch/i386/kernel/entry.S linux-2.4.4-4c-1mb/arch/i386/kernel/entry.S

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#145: FILE: arch/i386/kernel/process.c:535:
+	childregs = ((struct pt_regs *) (THREAD_SIZE + (unsigned long) p - (((unsigned long) p >> 13) & 0x00000060))) - 1;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#145: FILE: arch/i386/kernel/process.c:535:
+	childregs = ((struct pt_regs *) (THREAD_SIZE + (unsigned long) p - (((unsigned long) p >> 13) & 0x00000060))) - 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/asm-i386/processor.h:448:
+extern unsigned long FASTCALL(__get_free_pages(int gfp_mask, unsigned long order));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: include/asm-i386/processor.h:449:
+extern inline struct task_struct * alloc_task_struct(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#307: FILE: include/asm-i386/processor.h:452:
+	p = (struct task_struct *) __get_free_pages(GFP_KERNEL,1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: include/asm-i386/processor.h:452:
+	struct task_struct *p;
+	p = (struct task_struct *) __get_free_pages(GFP_KERNEL,1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: include/asm-i386/processor.h:452:
+	p = (struct task_struct *) __get_free_pages(GFP_KERNEL,1);
 	                                                      ^

CHECK:SPACING: No space is necessary after a cast
#311: FILE: include/asm-i386/processor.h:456:
+#define free_task_struct(p) free_pages(((unsigned long) (p) & 0xffffe000UL), 1)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#311: FILE: include/asm-i386/processor.h:456:
+}
+#define free_task_struct(p) free_pages(((unsigned long) (p) & 0xffffe000UL), 1)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000496278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 5 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000496278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
