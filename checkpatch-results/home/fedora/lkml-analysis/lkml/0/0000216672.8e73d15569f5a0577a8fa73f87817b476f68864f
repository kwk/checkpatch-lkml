WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#64: FILE: include/asm-i386/pgtable-3level.h:12:
+ * August 26, 2004 added ptep_cmpxchg <christoph@lameter.com>
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#87: FILE: include/asm-i386/pgtable-3level.h:51:
+#define set_pte(pteptr,pteval) \
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: include/asm-i386/pgtable-3level.h:51:
+#define set_pte(pteptr,pteval) \
+		*(unsigned long long *)(pteptr) = pte_val(pteval)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__ptep' - possible side-effects?
#97: FILE: include/asm-i386/pgtable-3level.h:150:
+#define ptep_xchg_flush(__vma, __addr, __ptep, __newval) \
+({	pte_t __r;							\
+	/* xchg acts as a barrier before the setting of the high bits. */\
+	__r.pte_low = xchg(&(__ptep)->pte_low, (__newval).pte_low);	\
+	__r.pte_high = (__ptep)->pte_high;				\
+	(__ptep)->pte_high = (__newval).pte_high;			\
+	flush_tlb_page(__vma, __addr);					\
+	(__r);								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__newval' - possible side-effects?
#97: FILE: include/asm-i386/pgtable-3level.h:150:
+#define ptep_xchg_flush(__vma, __addr, __ptep, __newval) \
+({	pte_t __r;							\
+	/* xchg acts as a barrier before the setting of the high bits. */\
+	__r.pte_low = xchg(&(__ptep)->pte_low, (__newval).pte_low);	\
+	__r.pte_high = (__ptep)->pte_high;				\
+	(__ptep)->pte_high = (__newval).pte_high;			\
+	flush_tlb_page(__vma, __addr);					\
+	(__r);								\
+})

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#109: FILE: include/asm-i386/pgtable-3level.h:162:
+static inline int ptep_cmpxchg(struct vm_area_struct *vma, unsigned long address, pte_t *ptep, pte_t oldval, pte_t newval)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#111: FILE: include/asm-i386/pgtable-3level.h:164:
+	return cmpxchg8b((unsigned long long *)ptep, pte_val(oldval), pte_val(newval)) == pte_val(oldval);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)
                                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)
                                                                                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__oldpte' - possible side-effects?
#127: FILE: include/asm-i386/pgtable-2level.h:69:
+#define ptep_cmpxchg(__vma,__a,__xp,__oldpte,__newpte) (cmpxchg(&(__xp)->pte_low, (__oldpte).pte_low, (__newpte).pte_low)==(__oldpte).pte_low)

ERROR:SPACING: space prohibited after that open parenthesis '('
#155: FILE: include/asm-i386/pgalloc.h:24:
+	return cmpxchg8b( ((unsigned long long *)pmd), PMD_NONE, _PAGE_TABLE +

CHECK:SPACING: No space is necessary after a cast
#157: FILE: include/asm-i386/pgalloc.h:26:
+			(unsigned long long) PAGE_SHIFT) ) == PMD_NONE;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: include/asm-i386/pgalloc.h:26:
+			(unsigned long long) PAGE_SHIFT) ) == PMD_NONE;

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#159: FILE: include/asm-i386/pgalloc.h:28:
+	return cmpxchg( (unsigned long *)pmd, PMD_NONE, _PAGE_TABLE + (page_to_pfn(pte) << PAGE_SHIFT)) == PMD_NONE;

ERROR:SPACING: space prohibited after that open parenthesis '('
#159: FILE: include/asm-i386/pgalloc.h:28:
+	return cmpxchg( (unsigned long *)pmd, PMD_NONE, _PAGE_TABLE + (page_to_pfn(pte) << PAGE_SHIFT)) == PMD_NONE;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: include/asm-i386/pgalloc.h:62:
+#define pud_test_and_populate(mm, pmd, pte) ^I({ BUG(); 1; })$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#170: FILE: include/asm-i386/pgalloc.h:62:
+#define pud_test_and_populate(mm, pmd, pte) 	({ BUG(); 1; })

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 4 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216672.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
