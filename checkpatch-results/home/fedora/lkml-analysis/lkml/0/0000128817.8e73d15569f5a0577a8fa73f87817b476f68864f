WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
Split out patches, timertop and pmstats utilities and latest patch available

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: include/linux/dyn-tick.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#117: FILE: include/linux/dyn-tick.h:2:
+ * linux/include/linux/dyn-tick.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:BIT_MACRO: Prefer using the BIT macro
#134: FILE: include/linux/dyn-tick.h:19:
+#define DYN_TICK_SKIPPING	(1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#135: FILE: include/linux/dyn-tick.h:20:
+#define DYN_TICK_ENABLED	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#136: FILE: include/linux/dyn-tick.h:21:
+#define DYN_TICK_SUITABLE	(1 << 0)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#144: FILE: include/linux/dyn-tick.h:29:
+	spinlock_t lock;

WARNING:SPACING: Unnecessary space before function pointer arguments
#146: FILE: include/linux/dyn-tick.h:31:
+	int (*arch_init) (void);	/* dyn_tick init */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#149: FILE: include/linux/dyn-tick.h:34:
+	void (*arch_reprogram)(unsigned long); /* Reprograms the timer */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#150: FILE: include/linux/dyn-tick.h:35:
+	int (*arch_handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#150: FILE: include/linux/dyn-tick.h:35:
+	int (*arch_handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#150: FILE: include/linux/dyn-tick.h:35:
+	int (*arch_handler)(int, void *, struct pt_regs *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#151: FILE: include/linux/dyn-tick.h:36:
+	void (*arch_all_cpus_idle) (int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#151: FILE: include/linux/dyn-tick.h:36:
+	void (*arch_all_cpus_idle) (int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/linux/dyn-tick.h:49:
+extern void dyn_tick_register(struct dyn_tick_timer *new_timer);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/linux/dyn-tick.h:52:
+extern int dyn_tick_enabled(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/linux/dyn-tick.h:53:
+extern void timer_dyn_reprogram(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: include/linux/dyn-tick.h:54:
+extern void dyn_early_reprogram(unsigned int delta);

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#170: FILE: include/linux/dyn-tick.h:55:
+extern void set_dyn_tick_limits(unsigned int max_skip, unsigned int min_sk=
                                                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: include/linux/dyn-tick.h:55:
+extern void set_dyn_tick_limits(unsigned int max_skip, unsigned int min_sk=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#171: FILE: include/linux/dyn-tick.h:55:
ip);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/dyn-tick.h:58:
+extern int account_timer(unsigned long function, unsigned long data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: include/linux/dyn-tick.h:73:
+static inline void set_dyn_tick_limits(unsigned int max_skip,
+	unsigned int min_skip)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/timer.h:100:
+extern void conditional_run_local_timers(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#224: FILE: kernel/dyn-tick.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#225: FILE: kernel/dyn-tick.c:2:
+ * linux/kernel/dyn-tick.c

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#254: FILE: kernel/dyn-tick.c:31:
+EXPORT_SYMBOL(dyn_tick);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#261: FILE: kernel/dyn-tick.c:38:
+EXPORT_SYMBOL(dyn_tick_enabled);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#276: FILE: kernel/dyn-tick.c:52:
+	dyn_tick->last_skip =3D dyn_tick->skip_tick;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: kernel/dyn-tick.c:53:
+	dyn_tick->skip_tick =3D jiffies;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: kernel/dyn-tick.c:54:
+	dyn_tick->skip =3D delta;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#298: FILE: kernel/dyn-tick.c:72:
+	cpu =3D smp_processor_id();
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#306: FILE: kernel/dyn-tick.c:80:
+	delta =3D next_timer_interrupt() - jiffies;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#308: FILE: kernel/dyn-tick.c:82:
+		delta =3D dyn_tick->max_skip;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#311: FILE: kernel/dyn-tick.c:85:
+		int idle_time =3D 0;
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#313: FILE: kernel/dyn-tick.c:87:
+		if (dyn_tick->skip_tick + dyn_tick->skip =3D=3D jiffies)
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#313: FILE: kernel/dyn-tick.c:87:
+		if (dyn_tick->skip_tick + dyn_tick->skip =3D=3D jiffies)
 		                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#313: FILE: kernel/dyn-tick.c:87:
+		if (dyn_tick->skip_tick + dyn_tick->skip =3D=3D jiffies)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#314: FILE: kernel/dyn-tick.c:88:
+			idle_time =3D dyn_tick->skip;
 			          ^

WARNING:TYPO_SPELLING: 'curren' may be misspelled - perhaps 'current'?
#330: FILE: kernel/dyn-tick.c:104:
+ * dyn_early_reprogram is used to reprogram an earlier tick than is curren=
                                                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: kernel/dyn-tick.c:113:
+	unsigned long flags, tick =3D jiffies + delta;
 	                          ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#344: FILE: kernel/dyn-tick.c:115:
+	if (tick >=3D dyn_tick->last_skip + dyn_tick->skip)
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#357: FILE: kernel/dyn-tick.c:128:
+		max_skip =3D DYN_TICK_MAX_SKIP;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#359: FILE: kernel/dyn-tick.c:130:
+		dyn_tick->max_skip =3D max_skip;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#361: FILE: kernel/dyn-tick.c:132:
+		min_skip =3D DYN_TICK_MIN_SKIP;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: kernel/dyn-tick.c:134:
+		dyn_tick->min_skip =3D min_skip;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#368: FILE: kernel/dyn-tick.c:139:
+	dyn_tick =3D arch_timer;
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#369: FILE: kernel/dyn-tick.c:140:
+	printk(KERN_INFO "dyn-tick: Registering dynamic tick timer v%s\n",

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#374: FILE: kernel/dyn-tick.c:145:
+static int __initdata dyntick_autoenable =3D 1;
                                          ^

WARNING:MISPLACED_INIT: __initdata should be placed after dyntick_autoenable
#374: FILE: kernel/dyn-tick.c:145:
+static int __initdata dyntick_autoenable =3D 1;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#387: FILE: kernel/dyn-tick.c:158:
+		dyntick_autoenable =3D 1;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#389: FILE: kernel/dyn-tick.c:160:
+		dyntick_autoenable =3D 0;
 		                   ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#394: FILE: kernel/dyn-tick.c:165:
+__setup("dyntick=3D", dyntick_setup);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#402: FILE: kernel/dyn-tick.c:173:
+extern struct sys_device device_timer;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#413: FILE: kernel/dyn-tick.c:184:
+	unsigned int enable =3D simple_strtoul(buf, NULL, 2);
 	                    ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#413: FILE: kernel/dyn-tick.c:184:
+	unsigned int enable =3D simple_strtoul(buf, NULL, 2);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#414: FILE: kernel/dyn-tick.c:185:
+	int ret =3D -ENODEV;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#414: FILE: kernel/dyn-tick.c:185:
+	int ret =3D -ENODEV;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#418: FILE: kernel/dyn-tick.c:189:
+		ret =3D dyn_tick->arch_enable();
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#419: FILE: kernel/dyn-tick.c:190:
+		if (ret =3D=3D 0)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#419: FILE: kernel/dyn-tick.c:190:
+		if (ret =3D=3D 0)
 		           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#419: FILE: kernel/dyn-tick.c:190:
+		if (ret =3D=3D 0)

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#420: FILE: kernel/dyn-tick.c:191:
+			dyn_tick->state |=3D DYN_TICK_ENABLED;
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#422: FILE: kernel/dyn-tick.c:193:
+		ret =3D dyn_tick->arch_disable();
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#423: FILE: kernel/dyn-tick.c:194:
+		if (ret =3D=3D 0)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#423: FILE: kernel/dyn-tick.c:194:
+		if (ret =3D=3D 0)
 		           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: kernel/dyn-tick.c:194:
+		if (ret =3D=3D 0)

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#424: FILE: kernel/dyn-tick.c:195:
+			dyn_tick->state &=3D ~DYN_TICK_ENABLED;
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#431: FILE: kernel/dyn-tick.c:202:
+static SYSDEV_ATTR(dyn_tick, 0644, timer_show_dyn_tick, timer_set_dyn_tick=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: kernel/dyn-tick.c:206:
+	int ret =3D sysdev_create_file(&device_timer, &attr_dyn_tick);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#452: FILE: kernel/dyn-tick.c:222:
+	if (dyn_tick =3D=3D NULL || dyn_tick->arch_init =3D=3D NULL ||
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#452: FILE: kernel/dyn-tick.c:222:
+	if (dyn_tick =3D=3D NULL || dyn_tick->arch_init =3D=3D NULL ||
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#452: FILE: kernel/dyn-tick.c:222:
+	if (dyn_tick =3D=3D NULL || dyn_tick->arch_init =3D=3D NULL ||
 	                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#452: FILE: kernel/dyn-tick.c:222:
+	if (dyn_tick =3D=3D NULL || dyn_tick->arch_init =3D=3D NULL ||
 	                                                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#452: FILE: kernel/dyn-tick.c:222:
+	if (dyn_tick =3D=3D NULL || dyn_tick->arch_init =3D=3D NULL ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#454: FILE: kernel/dyn-tick.c:224:
+		printk(KERN_ERR "dyn-tick: No suitable timer found\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#458: FILE: kernel/dyn-tick.c:228:
+	if ((ret =3D dyn_tick->arch_init())) {
 	         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#458: FILE: kernel/dyn-tick.c:228:
+	if ((ret =3D dyn_tick->arch_init())) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#459: FILE: kernel/dyn-tick.c:229:
+		printk(KERN_ERR "dyn-tick: Init failed\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#463: FILE: kernel/dyn-tick.c:233:
+	if (!ret && dyntick_autoenable) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#464: FILE: kernel/dyn-tick.c:234:
+		dyn_tick->state |=3D DYN_TICK_ENABLED;
 		                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#465: FILE: kernel/dyn-tick.c:235:
+		printk(KERN_INFO "dyn-tick: Timer using dynamic tick\n");

CHECK:BRACES: Unbalanced braces around else statement
#466: FILE: kernel/dyn-tick.c:236:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#467: FILE: kernel/dyn-tick.c:237:
+		printk(KERN_INFO "dyn-tick: Timer not enabled during boot\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#469: FILE: kernel/dyn-tick.c:239:
+	dyn_tick->skip_tick =3D 0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#470: FILE: kernel/dyn-tick.c:240:
+	dyn_tick->last_skip =3D 0;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#471: FILE: kernel/dyn-tick.c:241:
+	dyn_tick->skip =3D 0;
 	               ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#520: FILE: kernel/timer.c:874:
 }
+void conditional_run_local_timers(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#522: FILE: kernel/timer.c:876:
+	tvec_base_t *base  =3D &__get_cpu_var(tvec_bases);
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#522: FILE: kernel/timer.c:876:
+	tvec_base_t *base  =3D &__get_cpu_var(tvec_bases);
 	                       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#524: FILE: kernel/timer.c:878:
+	if (base->timer_jiffies !=3D jiffies)
 	                        ^

CHECK:CAMELCASE: Avoid CamelCase: <This>
#540: FILE: kernel/timer.c:303:
+	  This timer is selected by dyntick (NO_IDLE_HZ).

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#625: FILE: arch/i386/kernel/apic.c:957:
+	apic_timer_val =3D clocks * HZ / APIC_DIVISOR;
 	               ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#630: FILE: arch/i386/kernel/apic.c:961:
 static void __devinit setup_APIC_timer(unsigned int clocks)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#635: FILE: arch/i386/kernel/apic.c:978:
 }
+/* Used by NO_IDLE_HZ to skip ticks on idle CPUs */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#640: FILE: arch/i386/kernel/apic.c:983:
+	count =3D count * apic_timer_val / HZ;
 	      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#697: FILE: arch/i386/kernel/dyn-tick.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#698: FILE: arch/i386/kernel/dyn-tick.c:2:
+ * linux/arch/i386/kernel/dyn-tick.c

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#749: FILE: arch/i386/kernel/dyn-tick.c:53:
+static struct dyn_tick_timer arch_dyn_tick =3D {
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#750: FILE: arch/i386/kernel/dyn-tick.c:54:
+	.arch_reprogram		=3D &pit_reprogram,
 	               		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#750: FILE: arch/i386/kernel/dyn-tick.c:54:
+	.arch_reprogram		=3D &pit_reprogram,
 	               		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#751: FILE: arch/i386/kernel/dyn-tick.c:55:
+	.arch_all_cpus_idle	=3D &arch_all_cpus_idle,
 	                   	^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#751: FILE: arch/i386/kernel/dyn-tick.c:55:
+	.arch_all_cpus_idle	=3D &arch_all_cpus_idle,
 	                   	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#752: FILE: arch/i386/kernel/dyn-tick.c:56:
+	.arch_enable		=3D &arch_enable,
 	            		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#752: FILE: arch/i386/kernel/dyn-tick.c:56:
+	.arch_enable		=3D &arch_enable,
 	            		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#753: FILE: arch/i386/kernel/dyn-tick.c:57:
+	.arch_disable		=3D &arch_disable,
 	             		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#753: FILE: arch/i386/kernel/dyn-tick.c:57:
+	.arch_disable		=3D &arch_disable,
 	             		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#754: FILE: arch/i386/kernel/dyn-tick.c:58:
+	.min_skip		=3D DYN_TICK_MIN_SKIP,
 	         		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#755: FILE: arch/i386/kernel/dyn-tick.c:59:
+	.state			=3D 0,
 	      			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#758: FILE: arch/i386/kernel/dyn-tick.c:62:
+struct dyn_tick_timer *dyn_tick =3D &arch_dyn_tick;
                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#758: FILE: arch/i386/kernel/dyn-tick.c:62:
+struct dyn_tick_timer *dyn_tick =3D &arch_dyn_tick;
                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#765: FILE: arch/i386/kernel/dyn-tick.c:69:
+	printk(KERN_INFO "dyn-tick: Maximum ticks to skip limited to %i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: arch/i386/kernel/dyn-tick.c:70:
+	printk(KERN_INFO "dyn-tick: Maximum ticks to skip limited to %i\n",
+		dyn_tick->max_skip);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#773: FILE: arch/i386/kernel/dyn-tick.c:77:
+	dyn_tick->arch_init =3D dyn_tick_arch_init;
 	                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#783: FILE: arch/i386/kernel/dyn-tick.c:86:
+/* Functions that need blank prototypes for !CONFIG_NO_IDLE_HZ below here =
+int __init setup_dyn_tick_use_apic(unsigned int calibration_result)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#805: FILE: arch/i386/kernel/dyn-tick.c:108:
+		int lost =3D cur_timer->mark_offset();
 		         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#806: FILE: arch/i386/kernel/dyn-tick.c:109:
+		int lost =3D cur_timer->mark_offset();
+		if (lost && in_irq())

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#811: FILE: arch/i386/kernel/dyn-tick.c:114:
+			kstat_cpu(cpu).cpustat.idle +=3D (lost - 1);

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#811: FILE: arch/i386/kernel/dyn-tick.c:114:
+			kstat_cpu(cpu).cpustat.idle +=3D (lost - 1);
 			                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#823: FILE: arch/i386/kernel/dyn-tick.c:126:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#828: FILE: arch/i386/kernel/dyn-tick.c:131:
+	if (strncmp(cur_timer->name, "pmtmr", 3) =3D=3D 0) {
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#828: FILE: arch/i386/kernel/dyn-tick.c:131:
+	if (strncmp(cur_timer->name, "pmtmr", 3) =3D=3D 0) {
 	                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#828: FILE: arch/i386/kernel/dyn-tick.c:131:
+	if (strncmp(cur_timer->name, "pmtmr", 3) =3D=3D 0) {

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#829: FILE: arch/i386/kernel/dyn-tick.c:132:
+		dyn_tick->state |=3D DYN_TICK_SUITABLE;
 		                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#830: FILE: arch/i386/kernel/dyn-tick.c:133:
+		printk(KERN_INFO "dyn-tick: Found suitable timer: %s\n",

CHECK:BRACES: Unbalanced braces around else statement
#832: FILE: arch/i386/kernel/dyn-tick.c:135:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#833: FILE: arch/i386/kernel/dyn-tick.c:136:
+		printk(KERN_ERR "dyn-tick: Cannot use timer %s\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#870: FILE: arch/i386/kernel/io_apic.c:1194:
=2D		else
+		else if (vector)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#874: FILE: arch/i386/kernel/io_apic.c:1198:
+			irq_desc[vector].handler =3D &ioapic_edge_type_irq0;
 			                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#874: FILE: arch/i386/kernel/io_apic.c:1198:
+			irq_desc[vector].handler =3D &ioapic_edge_type_irq0;
 			                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#880: FILE: arch/i386/kernel/io_apic.c:1203:
=2D		else
+		else if (irq)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#884: FILE: arch/i386/kernel/io_apic.c:1207:
+			irq_desc[irq].handler =3D &ioapic_edge_type_irq0;
 			                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#884: FILE: arch/i386/kernel/io_apic.c:1207:
+			irq_desc[irq].handler =3D &ioapic_edge_type_irq0;
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#893: FILE: arch/i386/kernel/io_apic.c:1320:
+	irq_desc[0].handler =3D &ioapic_edge_type_irq0;
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#893: FILE: arch/i386/kernel/io_apic.c:1320:
+	irq_desc[0].handler =3D &ioapic_edge_type_irq0;
 	                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#901: FILE: arch/i386/kernel/io_apic.c:2096:
 };
+/* Needed to disable PIT interrupts when all CPUs sleep */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#902: FILE: arch/i386/kernel/io_apic.c:2097:
+static struct hw_interrupt_type ioapic_edge_type_irq0 __read_mostly =3D {
                                                                     ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#903: FILE: arch/i386/kernel/io_apic.c:2098:
+^I.typename ^I=3D "IO-APIC-edge-irq0",$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#903: FILE: arch/i386/kernel/io_apic.c:2098:
+	.typename 	=3D "IO-APIC-edge-irq0",
 	          	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#904: FILE: arch/i386/kernel/io_apic.c:2099:
+^I.startup ^I=3D startup_edge_ioapic,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#904: FILE: arch/i386/kernel/io_apic.c:2099:
+	.startup 	=3D startup_edge_ioapic,
 	         	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#905: FILE: arch/i386/kernel/io_apic.c:2100:
+^I.shutdown ^I=3D shutdown_edge_ioapic,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#905: FILE: arch/i386/kernel/io_apic.c:2100:
+	.shutdown 	=3D shutdown_edge_ioapic,
 	          	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#906: FILE: arch/i386/kernel/io_apic.c:2101:
+^I.enable ^I=3D unmask_IO_APIC_irq,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#906: FILE: arch/i386/kernel/io_apic.c:2101:
+	.enable 	=3D unmask_IO_APIC_irq,
 	        	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#907: FILE: arch/i386/kernel/io_apic.c:2102:
+^I.disable ^I=3D mask_IO_APIC_irq,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#907: FILE: arch/i386/kernel/io_apic.c:2102:
+	.disable 	=3D mask_IO_APIC_irq,
 	         	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#908: FILE: arch/i386/kernel/io_apic.c:2103:
+^I.ack ^I^I=3D ack_edge_ioapic,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#908: FILE: arch/i386/kernel/io_apic.c:2103:
+	.ack 		=3D ack_edge_ioapic,
 	     		^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#909: FILE: arch/i386/kernel/io_apic.c:2104:
+^I.end ^I^I=3D end_edge_ioapic,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#909: FILE: arch/i386/kernel/io_apic.c:2104:
+	.end 		=3D end_edge_ioapic,
 	     		^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#911: FILE: arch/i386/kernel/io_apic.c:2106:
+^I.set_affinity ^I=3D set_ioapic_affinity,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#911: FILE: arch/i386/kernel/io_apic.c:2106:
+	.set_affinity 	=3D set_ioapic_affinity,
 	              	^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1060: FILE: arch/i386/kernel/smp.c:250:
+static inline void do_timer_interrupt(int irq, struct pt_regs *regs, int l=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1091: FILE: arch/i386/kernel/smp.c:304:
+	lost =3D cur_timer->mark_offset();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1102: FILE: arch/i386/kernel/smp.c:431:
+struct sys_device device_timer =3D {
                                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1125: FILE: arch/i386/kernel/timers/timer_pit.c:34:
 }
+static int mark_offset_pit(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1136: FILE: arch/i386/kernel/timers/timer_pit.c:151:
 }
+void disable_pit_timer(void)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1155: FILE: arch/i386/kernel/timers/timer_pit.c:170:
+	extern spinlock_t i8253_lock;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1158: FILE: arch/i386/kernel/timers/timer_pit.c:173:
+	skip =3D jiffies_to_skip * LATCH;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1160: FILE: arch/i386/kernel/timers/timer_pit.c:175:
+		skip =3D 0xffff;
 		     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1190: FILE: arch/i386/kernel/timers/timer_pm.c:32:
+#define PMTMR_TICKS_PER_JIFFY (PMTMR_EXPECTED_RATE / (CALIBRATE_LATCH/LATC=
                                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1190: FILE: arch/i386/kernel/timers/timer_pm.c:32:
+#define PMTMR_TICKS_PER_JIFFY (PMTMR_EXPECTED_RATE / (CALIBRATE_LATCH/LATC=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1190: FILE: arch/i386/kernel/timers/timer_pm.c:32:
+#define PMTMR_TICKS_PER_JIFFY (PMTMR_EXPECTED_RATE / (CALIBRATE_LATCH/LATC=

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1199: FILE: arch/i386/kernel/timers/timer_pm.c:130:
+	printk("Using %u PM timer ticks per jiffy \n", PMTMR_TICKS_PER_JIFFY);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1199: FILE: arch/i386/kernel/timers/timer_pm.c:130:
+	printk("Using %u PM timer ticks per jiffy \n", PMTMR_TICKS_PER_JIFFY);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1201: FILE: arch/i386/kernel/timers/timer_pm.c:132:
+	offset_tick =3D read_pmtmr();
 	            ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1230: FILE: arch/i386/kernel/timers/timer_pm.c:170:
+	monotonic_base +=3D cyc2us(delta) * NSEC_PER_USEC;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1238: FILE: arch/i386/kernel/timers/timer_pm.c:174:
+	lost =3D delta / PMTMR_TICKS_PER_JIFFY;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1239: FILE: arch/i386/kernel/timers/timer_pm.c:175:
+	offset_delay =3D delta % PMTMR_TICKS_PER_JIFFY;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1259: FILE: arch/i386/kernel/timers/timer_pm.c:192:
+	offset_delay =3D 0;
 	             ^

CHECK:SPACING: No space is necessary after a cast
#1268: FILE: arch/i386/kernel/timers/timer_pm.c:243:
+	return (unsigned long) cyc2us(delta + offset_delay);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1292: FILE: arch/i386/kernel/timers/timer_tsc.c:35:
 int tsc_disable __devinitdata =3D 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1299: FILE: arch/i386/kernel/timers/timer_tsc.c:172:
 }
+/* update the monotonic base value */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1304: FILE: arch/i386/kernel/timers/timer_tsc.c:177:
+	this_offset =3D ((unsigned long long)last_tsc_high << 32) | last_tsc_low;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1304: FILE: arch/i386/kernel/timers/timer_tsc.c:177:
+	this_offset =3D ((unsigned long long)last_tsc_high << 32) | last_tsc_low;
 	            ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1305: FILE: arch/i386/kernel/timers/timer_tsc.c:178:
+	monotonic_base +=3D cycles_2_ns(this_offset - last_offset);
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: arch/i386/kernel/timers/timer_tsc.c:186:
+ ^Iint lost_ticks =3D 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1315: FILE: arch/i386/kernel/timers/timer_tsc.c:186:
+ ^Iint lost_ticks =3D 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: arch/i386/kernel/timers/timer_tsc.c:186:
+ ^Iint lost_ticks =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1315: FILE: arch/i386/kernel/timers/timer_tsc.c:186:
+ 	int lost_ticks =3D 0;
  	               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1324: FILE: arch/i386/kernel/timers/timer_tsc.c:209:
+		lost_ticks =3D (offset - hpet_last) / hpet_tick;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1324: FILE: arch/i386/kernel/timers/timer_tsc.c:209:
+		lost_ticks =3D (offset - hpet_last) / hpet_tick;
 		           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1443: FILE: include/asm-i386/apic.h:124:
+extern void reprogram_apic_timer(unsigned long count);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1462: FILE: include/asm-i386/dyn-tick.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1463: FILE: include/asm-i386/dyn-tick.h:2:
+ * linux/include/asm-i386/dyn-tick.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1482: FILE: include/asm-i386/dyn-tick.h:21:
+extern void idle_reprogram_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1483: FILE: include/asm-i386/dyn-tick.h:22:
+extern void dyn_tick_interrupt(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1484: FILE: include/asm-i386/dyn-tick.h:23:
+extern int __init setup_dyn_tick_use_apic(unsigned int calibration_result);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1485: FILE: include/asm-i386/dyn-tick.h:24:
+extern void __init dyn_tick_time_init(struct timer_opts *cur_timer);

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#1488: FILE: include/asm-i386/dyn-tick.h:27:
+ * Needs to be different to the arch independant values specified in
                                      ^^^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1492: FILE: include/asm-i386/dyn-tick.h:31:
+#define DYN_TICK_APICABLE	(1 << 3)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1553: FILE: include/asm-i386/timer.h:42:
+extern void disable_pit_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1554: FILE: include/asm-i386/timer.h:43:
+extern void enable_pit_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1555: FILE: include/asm-i386/timer.h:44:
+extern void reprogram_pit_timer(unsigned long jiffies_to_skip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1568: FILE: include/asm-i386/timer.h:79:
+extern void cpufreq_delayed_get(void);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1572: FILE: include/asm-i386/timer.h:83:
+	static int lost_count =3D 0;
 	                      ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1574: FILE: include/asm-i386/timer.h:85:
+	if (lost >=3D 2) {
 	         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1574: FILE: include/asm-i386/timer.h:85:
+	if (lost >=3D 2) {
[...]
+	} else
[...]

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1575: FILE: include/asm-i386/timer.h:86:
+		jiffies_64 +=3D lost-1;
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1575: FILE: include/asm-i386/timer.h:86:
+		jiffies_64 +=3D lost-1;
 		                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1579: FILE: include/asm-i386/timer.h:90:
+			printk(KERN_WARNING "Losing too many ticks!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1580: FILE: include/asm-i386/timer.h:91:
+			printk(KERN_WARNING "TSC cannot be used as a timesource.  \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1580: FILE: include/asm-i386/timer.h:91:
+			printk(KERN_WARNING "TSC cannot be used as a timesource.  \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1581: FILE: include/asm-i386/timer.h:92:
+			printk(KERN_WARNING "Possible reasons for this are:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1582: FILE: include/asm-i386/timer.h:93:
+			printk(KERN_WARNING "  You're running with Speedstep,\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1583: FILE: include/asm-i386/timer.h:94:
+			printk(KERN_WARNING "  You don't have DMA enabled for your hard disk (s=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1585: FILE: include/asm-i386/timer.h:95:
+			printk(KERN_WARNING "  Incorrect TSC synchronization on an SMP system (=

ERROR:SPACING: spaces required around that '=' (ctx:BxE)
#1585: FILE: include/asm-i386/timer.h:95:
+			printk(KERN_WARNING "  Incorrect TSC synchronization on an SMP system (=
 			                                                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Incorrect>
#1585: FILE: include/asm-i386/timer.h:95:
+			printk(KERN_WARNING "  Incorrect TSC synchronization on an SMP system (=

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1587: FILE: include/asm-i386/timer.h:96:
+			printk(KERN_WARNING "Falling back to a sane timesource now.\n");

CHECK:BRACES: Unbalanced braces around else statement
#1594: FILE: include/asm-i386/timer.h:103:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1595: FILE: include/asm-i386/timer.h:104:
+		lost_count =3D 0;
 		           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1634: FILE: arch/i386/kernel/timers/timer_hpet.c:103:
 }
+static int mark_offset_hpet(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1672: FILE: kernel/timer_top.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1673: FILE: kernel/timer_top.c:2:
+ * kernel/timer_top.c

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1694: FILE: kernel/timer_top.c:23:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1701: FILE: kernel/timer_top.c:30:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1709: FILE: kernel/timer_top.c:38:
+^Ichar ^I^I^Icomm[TASK_COMM_LEN];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1710: FILE: kernel/timer_top.c:39:
+^Istruct list_head ^Ilist;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1714: FILE: kernel/timer_top.c:43:
+	spinlock_t		lock;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1719: FILE: kernel/timer_top.c:48:
+static struct timer_top_root top_root =3D {
                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1720: FILE: kernel/timer_top.c:49:
+	.lock		=3D SPIN_LOCK_UNLOCKED,
 	     		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1721: FILE: kernel/timer_top.c:50:
+	.list		=3D LIST_HEAD_INIT(top_root.list),
 	     		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1724: FILE: kernel/timer_top.c:53:
+static struct list_head *timer_list =3D &top_root.list;
                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1724: FILE: kernel/timer_top.c:53:
+static struct list_head *timer_list =3D &top_root.list;
                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1726: FILE: kernel/timer_top.c:55:
+static spinlock_t *top_lock =3D &top_root.lock;
                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1726: FILE: kernel/timer_top.c:55:
+static spinlock_t *top_lock =3D &top_root.lock;
                                 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1727: FILE: kernel/timer_top.c:56:
+static int start_flag =3D 0; ^I/* signs if will collect data or not */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1727: FILE: kernel/timer_top.c:56:
+static int start_flag =3D 0; 	/* signs if will collect data or not */
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1729: FILE: kernel/timer_top.c:58:
+static inline struct timer_top_info *update_top_info(unsigned long functio=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1737: FILE: kernel/timer_top.c:65:
+		if (top->func_pointer =3D=3D function && top->pid =3D=3D pid_info) {
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1737: FILE: kernel/timer_top.c:65:
+		if (top->func_pointer =3D=3D function && top->pid =3D=3D pid_info) {
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1737: FILE: kernel/timer_top.c:65:
+		if (top->func_pointer =3D=3D function && top->pid =3D=3D pid_info) {
 		                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1737: FILE: kernel/timer_top.c:65:
+		if (top->func_pointer =3D=3D function && top->pid =3D=3D pid_info) {
 		                                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1737: FILE: kernel/timer_top.c:65:
+		if (top->func_pointer =3D=3D function && top->pid =3D=3D pid_info) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1743: FILE: kernel/timer_top.c:71:
+	top =3D NULL;
 	    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1751: FILE: kernel/timer_top.c:79:
+	struct task_struct * task_info;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1752: FILE: kernel/timer_top.c:80:
+	pid_t pid_info =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1753: FILE: kernel/timer_top.c:81:
+	char name[TASK_COMM_LEN] =3D "";
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1756: FILE: kernel/timer_top.c:84:
+	if (start_flag =3D=3D 0)
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1756: FILE: kernel/timer_top.c:84:
+	if (start_flag =3D=3D 0)
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1756: FILE: kernel/timer_top.c:84:
+	if (start_flag =3D=3D 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1762: FILE: kernel/timer_top.c:90:
+^I       ^Itask_info =3D (struct task_struct *) data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1762: FILE: kernel/timer_top.c:90:
+^I       ^Itask_info =3D (struct task_struct *) data;$

CHECK:SPACING: No space is necessary after a cast
#1762: FILE: kernel/timer_top.c:90:
+	       	task_info =3D (struct task_struct *) data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1762: FILE: kernel/timer_top.c:90:
+	       	task_info =3D (struct task_struct *) data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1762: FILE: kernel/timer_top.c:90:
+	       	task_info =3D (struct task_struct *) data;
 	       	          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task_info->pid > 0'
#1764: FILE: kernel/timer_top.c:92:
+		if ((task_info->pid > 0) && (task_info->pid < PID_MAX_LIMIT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'task_info->pid < PID_MAX_LIMIT'
#1764: FILE: kernel/timer_top.c:92:
+		if ((task_info->pid > 0) && (task_info->pid < PID_MAX_LIMIT)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1765: FILE: kernel/timer_top.c:93:
+			pid_info =3D task_info->pid;
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1770: FILE: kernel/timer_top.c:98:
+	top =3D update_top_info(function, pid_info);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1774: FILE: kernel/timer_top.c:102:
+	top =3D kmem_cache_alloc(top_root.cache, GFP_ATOMIC);
 	    ^

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#1778: FILE: kernel/timer_top.c:106:
+	/* if you are here then it didnt find so inserts in the list */
 	                           ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1779: FILE: kernel/timer_top.c:107:
+	top->func_pointer =3D function;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1780: FILE: kernel/timer_top.c:108:
+	top->counter =3D 1;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1781: FILE: kernel/timer_top.c:109:
+	top->pid =3D pid_info;
 	         ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1792: FILE: kernel/timer_top.c:120:
+EXPORT_SYMBOL(account_timer);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1802: FILE: kernel/timer_top.c:130:
+		entry =3D list_entry(aux1, struct timer_top_info, list);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1823: FILE: kernel/timer_top.c:151:
+		seq_printf(m, "%x %lu %d %s\n", top->func_pointer, top->counter, top->pi=
 		                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1827: FILE: kernel/timer_top.c:154:
+	if (start_flag =3D=3D 0) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1827: FILE: kernel/timer_top.c:154:
+	if (start_flag =3D=3D 0) {
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1827: FILE: kernel/timer_top.c:154:
+	if (start_flag =3D=3D 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1827: FILE: kernel/timer_top.c:154:
+	if (start_flag =3D=3D 0) {
+		seq_printf(m, "Disabled\n");
+	}

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1828: FILE: kernel/timer_top.c:155:
+		seq_printf(m, "Disabled\n");

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1839: FILE: kernel/timer_top.c:166:
+static struct file_operations proc_timertop_operations =3D {
                                                        ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1839: FILE: kernel/timer_top.c:166:
+static struct file_operations proc_timertop_operations =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1840: FILE: kernel/timer_top.c:167:
+	.open		=3D proc_timertop_open,
 	     		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1841: FILE: kernel/timer_top.c:168:
+	.read		=3D seq_read,
 	     		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1842: FILE: kernel/timer_top.c:169:
+	.llseek		=3D seq_lseek,
 	       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1843: FILE: kernel/timer_top.c:170:
+	.release	=3D single_release,
 	        	^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1850: FILE: kernel/timer_top.c:177:
+                                 unsigned long count, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1850: FILE: kernel/timer_top.c:177:
+static int proc_write_timer_input(struct file *file, const char *page,
+                                 unsigned long count, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1850: FILE: kernel/timer_top.c:177:
+                                 unsigned long count, void *data)$

ERROR:SPACING: space required before the open parenthesis '('
#1856: FILE: kernel/timer_top.c:183:
+	if(count > MAX_INPUT_TOP - 1)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1857: FILE: kernel/timer_top.c:184:
+		len =3D MAX_INPUT_TOP - 1;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1859: FILE: kernel/timer_top.c:186:
+		len =3D count;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1864: FILE: kernel/timer_top.c:191:
+	input_data[len] =3D '\0';
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#1866: FILE: kernel/timer_top.c:193:
+	if(!strncmp(input_data, "clear", 5))

ERROR:SPACING: space required before the open parenthesis '('
#1868: FILE: kernel/timer_top.c:195:
+	else if(!strncmp(input_data, "start", 5))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1869: FILE: kernel/timer_top.c:196:
+		start_flag =3D 1;
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#1870: FILE: kernel/timer_top.c:197:
+	else if(!strncmp(input_data, "stop", 4))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1871: FILE: kernel/timer_top.c:198:
+		start_flag =3D 0;
 		           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1878: FILE: kernel/timer_top.c:205:
+                                int count, int *eof, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1878: FILE: kernel/timer_top.c:205:
+static int proc_read_timer_input(char *page, char **start, off_t off,
+                                int count, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1878: FILE: kernel/timer_top.c:205:
+                                int count, int *eof, void *data)$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1882: FILE: kernel/timer_top.c:209:
+	len =3D sprintf(page, "clear start stop\n");
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1889: FILE: kernel/timer_top.c:216:
+	top_root.cache =3D kmem_cache_create("top_info",
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1892: FILE: kernel/timer_top.c:219:
+	top_info_file =3D create_proc_entry("timer_info", 0444, NULL);
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1893: FILE: kernel/timer_top.c:220:
+	if (top_info_file =3D=3D NULL)
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1893: FILE: kernel/timer_top.c:220:
+	if (top_info_file =3D=3D NULL)
 	                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1893: FILE: kernel/timer_top.c:220:
+	if (top_info_file =3D=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1896: FILE: kernel/timer_top.c:223:
+	top_info_file_out =3D create_proc_entry("timer_input", 0666, NULL);
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1897: FILE: kernel/timer_top.c:224:
+	if (top_info_file_out =3D=3D NULL)
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1897: FILE: kernel/timer_top.c:224:
+	if (top_info_file_out =3D=3D NULL)
 	                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1897: FILE: kernel/timer_top.c:224:
+	if (top_info_file_out =3D=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1901: FILE: kernel/timer_top.c:228:
+	top_info_file->proc_fops =3D &proc_timertop_operations;
 	                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1901: FILE: kernel/timer_top.c:228:
+	top_info_file->proc_fops =3D &proc_timertop_operations;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1904: FILE: kernel/timer_top.c:231:
+	top_info_file_out->write_proc =3D &proc_write_timer_input;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1904: FILE: kernel/timer_top.c:231:
+	top_info_file_out->write_proc =3D &proc_write_timer_input;
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1905: FILE: kernel/timer_top.c:232:
+	top_info_file_out->read_proc =3D &proc_read_timer_input;
 	                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1905: FILE: kernel/timer_top.c:232:
+	top_info_file_out->read_proc =3D &proc_read_timer_input;
 	                                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1955: FILE: drivers/acpi/processor_idle.c:63:
+#define BM_JIFFIES	(HZ >=3D 800 ? 4 : 2)
                   	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1964: FILE: drivers/acpi/processor_idle.c:182:
+static int last_sleep =3D 0;
                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 16)
#1985: FILE: drivers/acpi/processor_idle.c:273:
=2D		if (pr->power.bm_activity & cx->demotion.threshold.bm) {
+		if (bm_status && cx->demotion.threshold.bm) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1991: FILE: drivers/acpi/processor_idle.c:279:
+			last_sleep =3D 0; /* do not promote in fast-path */
 			           ^

WARNING:TYPO_SPELLING: 'funciton' may be misspelled - perhaps 'function'?
#2001: FILE: drivers/acpi/processor_idle.c:287:
+	 * during this call (to this funciton) but should upon the next.
 	                             ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'last_sleep > BM_JIFFIES'
#2004: FILE: drivers/acpi/processor_idle.c:290:
+		if (cx->promotion.state && cx->promotion.count &&
+		    (last_sleep > BM_JIFFIES) &&
+		    (dyn_tick->skip > BM_JIFFIES)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dyn_tick->skip > BM_JIFFIES'
#2004: FILE: drivers/acpi/processor_idle.c:290:
+		if (cx->promotion.state && cx->promotion.count &&
+		    (last_sleep > BM_JIFFIES) &&
+		    (dyn_tick->skip > BM_JIFFIES)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2008: FILE: drivers/acpi/processor_idle.c:294:
+			next_state =3D cx->promotion.state;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2013: FILE: drivers/acpi/processor_idle.c:299:
+	last_sleep =3D 0;
 	           ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2022: FILE: drivers/acpi/processor_idle.c:410:
+	if (cx->type !=3D ACPI_STATE_C1) {
 	             ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#2024: FILE: drivers/acpi/processor_idle.c:412:
+			cx->time +=3D sleep_ticks;
 			         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2027: FILE: drivers/acpi/processor_idle.c:415:
+		 * a jiffy */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2028: FILE: drivers/acpi/processor_idle.c:416:
+		cx->time +=3D (PM_TIMER_FREQUENCY / (2 * HZ));

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#2028: FILE: drivers/acpi/processor_idle.c:416:
+		cx->time +=3D (PM_TIMER_FREQUENCY / (2 * HZ));
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2031: FILE: drivers/acpi/processor_idle.c:419:
+	last_sleep =3D sleep_ticks / (PM_TIMER_FREQUENCY / HZ);
 	           ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#2034: FILE: drivers/acpi/processor_idle.c:422:
+		pr->power.bm_check_timestamp +=3D last_sleep;
 		                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2045: FILE: drivers/acpi/processor_idle.c:1028:
+		seq_printf(seq, "latency[%03d] usage[%08d] time[%020llu]\n",
=2D			   pr->power.states[i].usage);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000128817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 172 errors, 80 warnings, 67 checks, 1799 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000128817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
