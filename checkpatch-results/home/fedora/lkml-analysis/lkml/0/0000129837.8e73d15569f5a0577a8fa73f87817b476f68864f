WARNING:NEW_TYPEDEFS: do not add new typedefs
#141: FILE: kernel/ktimeout.c:122:
+typedef struct ktimeout_base_s ktimeout_base_t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: kernel/ktimeout.c:146:
+static inline void detach_ktimeout(struct ktimeout *ktimeout,
 					int clear_pending)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: kernel/ktimeout.c:169:
+static ktimeout_base_t *lock_ktimeout_base(struct ktimeout *ktimeout,
 					unsigned long *flags)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: kernel/ktimeout.c:193:
+	BUG_ON(!ktimeout->function);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#288: FILE: kernel/ktimeout.c:231:
+EXPORT_SYMBOL(__mod_ktimeout);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: kernel/ktimeout.c:245:
+  ^IBUG_ON(ktimeout_pending(ktimeout) || !ktimeout->function);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: kernel/ktimeout.c:245:
+  ^IBUG_ON(ktimeout_pending(ktimeout) || !ktimeout->function);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: kernel/ktimeout.c:245:
+  ^IBUG_ON(ktimeout_pending(ktimeout) || !ktimeout->function);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#306: FILE: kernel/ktimeout.c:245:
+  	BUG_ON(ktimeout_pending(ktimeout) || !ktimeout->function);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#350: FILE: kernel/ktimeout.c:274:
+	BUG_ON(!ktimeout->function);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#367: FILE: kernel/ktimeout.c:287:
+EXPORT_SYMBOL(mod_ktimeout);

WARNING:TYPO_SPELLING: 'deactive' may be misspelled - perhaps 'deactivate'?
#372: FILE: kernel/ktimeout.c:290:
+ * del_ktimeout - deactive a ktimeout.
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#411: FILE: kernel/ktimeout.c:318:
+EXPORT_SYMBOL(del_ktimeout);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#485: FILE: kernel/ktimeout.c:375:
+EXPORT_SYMBOL(del_ktimeout_sync);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#528: FILE: kernel/ktimeout.c:409:
+#define INDEX(N) (base->ktimeout_jiffies >> (TVR_BITS + N * TVN_BITS)) & TVN_MASK

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'N' may be better as '(N)' to avoid precedence issues
#528: FILE: kernel/ktimeout.c:409:
+#define INDEX(N) (base->ktimeout_jiffies >> (TVR_BITS + N * TVN_BITS)) & TVN_MASK

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: kernel/ktimeout.c:419:
+ ^I^Iint index = base->ktimeout_jiffies & TVR_MASK;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#542: FILE: kernel/ktimeout.c:419:
+ ^I^Iint index = base->ktimeout_jiffies & TVR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/ktimeout.c:419:
+ ^I^Iint index = base->ktimeout_jiffies & TVR_MASK;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: kernel/ktimeout.c:429:
+^I^I++base->ktimeout_jiffies; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: kernel/ktimeout.c:435:
+			ktimeout = list_entry(head->next,struct ktimeout,entry);
 			                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: kernel/ktimeout.c:435:
+			ktimeout = list_entry(head->next,struct ktimeout,entry);
 			                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: kernel/ktimeout.c:436:
+ ^I^I^Ifn = ktimeout->function;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: kernel/ktimeout.c:436:
+ ^I^I^Ifn = ktimeout->function;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/ktimeout.c:436:
+ ^I^I^Ifn = ktimeout->function;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: kernel/ktimeout.c:437:
+ ^I^I^Idata = ktimeout->data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: kernel/ktimeout.c:437:
+ ^I^I^Idata = ktimeout->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: kernel/ktimeout.c:437:
+ ^I^I^Idata = ktimeout->data;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#699: FILE: kernel/ktimeout.c:677:
+static void __devinit init_ktimeouts_cpu(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#731: FILE: kernel/ktimeout.c:709:
+static void __devinit migrate_ktimeouts(int cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: kernel/ktimeout.c:741:
+static int __devinit ktimeout_cpu_notify(struct notifier_block *self, $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#762: FILE: kernel/ktimeout.c:741:
+static int __devinit ktimeout_cpu_notify(struct notifier_block *self, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: kernel/ktimeout.c:742:
+static int __devinit ktimeout_cpu_notify(struct notifier_block *self, 
 				unsigned long action, void *hcpu)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#784: FILE: kernel/ktimeout.c:760:
+static struct notifier_block __devinitdata ktimeouts_nb = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after ktimeouts_nb
#784: FILE: kernel/ktimeout.c:760:
+static struct notifier_block __devinitdata ktimeouts_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: kernel/ktimeout.c:768:
+	ktimeout_cpu_notify(&ktimeouts_nb, (unsigned long)CPU_UP_PREPARE,
 				(void *)(long)smp_processor_id());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129837.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 22 warnings, 5 checks, 735 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129837.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
