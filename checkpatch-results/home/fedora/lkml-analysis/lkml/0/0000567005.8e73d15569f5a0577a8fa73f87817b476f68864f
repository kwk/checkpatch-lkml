WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#22: 
It might be usefull to someone..
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: bitops.h:17:
+ * C language equivalents written by Theodore Ts'o, 9/26/92 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#48: FILE: bitops.h:20:
+extern __inline__ int set_bit(int nr, void * a)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#48: FILE: bitops.h:20:
+extern __inline__ int set_bit(int nr, void * a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: bitops.h:35:
+extern __inline__ int clear_bit(int nr, void * a)

WARNING:INLINE: plain inline is preferred over __inline__
#66: FILE: bitops.h:35:
+extern __inline__ int clear_bit(int nr, void * a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: bitops.h:50:
+extern __inline__ int change_bit(int nr, void * a)

WARNING:INLINE: plain inline is preferred over __inline__
#84: FILE: bitops.h:50:
+extern __inline__ int change_bit(int nr, void * a)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: bitops.h:69:
+extern __inline__ int test_bit(int nr, void * a)

WARNING:INLINE: plain inline is preferred over __inline__
#103: FILE: bitops.h:69:
+extern __inline__ int test_bit(int nr, void * a)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#113: FILE: bitops.h:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#118: FILE: bitops.h:84:
+extern __inline__ unsigned long ffz(unsigned long word)

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: bitops.h:87:
+	int i;
+	for (i=0; i<64; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: bitops.h:87:
+	for (i=0; i<64; i++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#121: FILE: bitops.h:87:
+	for (i=0; i<64; i++)
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#122: FILE: bitops.h:88:
+		if (!(word & (1<<i)))
 		               ^

WARNING:INLINE: plain inline is preferred over __inline__
#127: FILE: bitops.h:93:
+extern __inline__ int find_next_zero_bit(void *addr, int size, int offset)

CHECK:SPACING: No space is necessary after a cast
#129: FILE: bitops.h:95:
+	unsigned long *p = ((unsigned long *) addr) + (offset >> 5);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#139: FILE: bitops.h:105:
+		tmp |= ~0UL >> (32-offset);
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#148: FILE: bitops.h:114:
+		if (~(tmp = *(p++)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: bitops.h:130:
+        find_next_zero_bit((addr), (size), 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: bitops.h:130:
+        find_next_zero_bit((addr), (size), 0)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 9 warnings, 4 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
