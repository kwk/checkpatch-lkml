WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	sound/core/oss/pcm_oss.c	1.20    -> 1.22   

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# 03/02/21	mulix@alhambra.mulix.org	1.1007

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# snd_pcm_oss_change_params was a stack offender, having three large 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# structs on the stack. Allocate those structs on the heap and change

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# the code accordingly. 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# 03/02/21	mulix@alhambra.mulix.org	1.1008

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# This time, also free the memory :-((

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# Thanks to Andreas Dilger for spotting.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#61: 
--- a/sound/core/oss/pcm_oss.c	Fri Feb 21 10:15:10 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: sound/core/oss/pcm_oss.c:294:
+static int alloc_param_structs(snd_pcm_hw_params_t** params, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#67: FILE: sound/core/oss/pcm_oss.c:294:
+static int alloc_param_structs(snd_pcm_hw_params_t** params, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#68: FILE: sound/core/oss/pcm_oss.c:295:
+			       snd_pcm_hw_params_t** sparams,

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#69: FILE: sound/core/oss/pcm_oss.c:296:
+			       snd_pcm_sw_params_t** sw_params)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: sound/core/oss/pcm_oss.c:298:
+^Isnd_pcm_hw_params_t* hwp; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#71: FILE: sound/core/oss/pcm_oss.c:298:
+	snd_pcm_hw_params_t* hwp; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: sound/core/oss/pcm_oss.c:299:
+^Isnd_pcm_sw_params_t* swp; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#72: FILE: sound/core/oss/pcm_oss.c:299:
+	snd_pcm_sw_params_t* swp; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#74: FILE: sound/core/oss/pcm_oss.c:301:
+	if (!(hwp = kmalloc(sizeof(*hwp), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: sound/core/oss/pcm_oss.c:302:
+^I^Igoto out; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: sound/core/oss/pcm_oss.c:304:
+^Imemset(hwp, 0, sizeof(*hwp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: sound/core/oss/pcm_oss.c:305:
+^I*params = hwp; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#80: FILE: sound/core/oss/pcm_oss.c:307:
+	if (!(hwp = kmalloc(sizeof(*hwp), GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: sound/core/oss/pcm_oss.c:308:
+^I^Igoto free_params; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: sound/core/oss/pcm_oss.c:310:
+^Imemset(hwp, 0, sizeof(*hwp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: sound/core/oss/pcm_oss.c:311:
+^I*sparams = hwp; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#86: FILE: sound/core/oss/pcm_oss.c:313:
+	if (!(swp = kmalloc(sizeof(*swp), GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: sound/core/oss/pcm_oss.c:314:
+^I^Igoto free_sparams; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: sound/core/oss/pcm_oss.c:316:
+^Imemset(swp, 0, sizeof(*swp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: sound/core/oss/pcm_oss.c:317:
+^I*sw_params = swp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: sound/core/oss/pcm_oss.c:318:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: sound/core/oss/pcm_oss.c:319:
+^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: sound/core/oss/pcm_oss.c:322:
+^Ikfree(*sparams); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: sound/core/oss/pcm_oss.c:323:
+^I*sparams = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: sound/core/oss/pcm_oss.c:326:
+^Ikfree(*params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: sound/core/oss/pcm_oss.c:327:
+^I*params = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: sound/core/oss/pcm_oss.c:329:
+ out: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: sound/core/oss/pcm_oss.c:330:
+^Ireturn -ENOMEM; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#106: FILE: sound/core/oss/pcm_oss.c:333:
+static void free_param_structs(snd_pcm_hw_params_t* params, snd_pcm_hw_params_t* sparams,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#106: FILE: sound/core/oss/pcm_oss.c:333:
+static void free_param_structs(snd_pcm_hw_params_t* params, snd_pcm_hw_params_t* sparams,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: sound/core/oss/pcm_oss.c:334:
+			       snd_pcm_sw_params_t* sw_params)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: sound/core/oss/pcm_oss.c:336:
+^Ikfree(params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: sound/core/oss/pcm_oss.c:337:
+^Ikfree(sparams); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: sound/core/oss/pcm_oss.c:338:
+^Ikfree(sw_params); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#131: FILE: sound/core/oss/pcm_oss.c:361:
+	if ((err = alloc_param_structs(&params, &sparams, &sw_params))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: sound/core/oss/pcm_oss.c:362:
+^I^Isnd_printd("out of memory\n"); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: sound/core/oss/pcm_oss.c:363:
+^I^Ireturn err; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: sound/core/oss/pcm_oss.c:379:
+^I^Ifree_param_structs(params, sparams, sw_params); $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#156: FILE: sound/core/oss/pcm_oss.c:384:
+	snd_pcm_hw_param_near(substream, sparams, SNDRV_PCM_HW_PARAM_CHANNELS, runtime->oss.channels, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: sound/core/oss/pcm_oss.c:401:
+^I^I^Ifree_param_structs(params, sparams, sw_params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: sound/core/oss/pcm_oss.c:410:
+^I^Imemcpy(params, sparams, sizeof(*params)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: sound/core/oss/pcm_oss.c:437:
+^I^I^I^I^I^I       params, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: sound/core/oss/pcm_oss.c:439:
+^I^I^Ifree_param_structs(params, sparams, sw_params); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: sound/core/oss/pcm_oss.c:446:
+			if ((err = snd_pcm_plugin_build_io(substream, sparams, &plugin)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: sound/core/oss/pcm_oss.c:447:
+^I^I^I^Ifree_param_structs(params, sparams, sw_params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: sound/core/oss/pcm_oss.c:458:
+^I^I^I^Ifree_param_structs(params, sparams, sw_params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: sound/core/oss/pcm_oss.c:467:
+^I^Ifree_param_structs(params, sparams, sw_params); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: sound/core/oss/pcm_oss.c:476:
+	err = snd_pcm_hw_param_near(substream, sparams, SNDRV_PCM_HW_PARAM_PERIODS,
 				     runtime->oss.periods, 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#270: FILE: sound/core/oss/pcm_oss.c:481:
+	if ((err = snd_pcm_kernel_ioctl(substream, SNDRV_PCM_IOCTL_HW_PARAMS, sparams)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: sound/core/oss/pcm_oss.c:482:
+^I^Ifree_param_structs(params, sparams, sw_params); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#306: FILE: sound/core/oss/pcm_oss.c:504:
+	if ((err = snd_pcm_kernel_ioctl(substream, SNDRV_PCM_IOCTL_SW_PARAMS, sw_params)) < 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: sound/core/oss/pcm_oss.c:505:
+^I^Ifree_param_structs(params, sparams, sw_params); $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#318: FILE: sound/core/oss/pcm_oss.c:513:
+	snd_assert(oss_period_size >= 0, {free_param_structs(params, sparams, sw_params); return -EINVAL});

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: sound/core/oss/pcm_oss.c:517:
+^I^I^Ifree_param_structs(params, sparams, sw_params); $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#331: FILE: sound/core/oss/pcm_oss.c:524:
+	snd_assert(oss_buffer_size >= 0, {free_param_structs(params, sparams, sw_params); return -EINVAL});

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: sound/core/oss/pcm_oss.c:549:
+^Ifree_param_structs(params, sparams, sw_params); $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 17 warnings, 1 checks, 292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
