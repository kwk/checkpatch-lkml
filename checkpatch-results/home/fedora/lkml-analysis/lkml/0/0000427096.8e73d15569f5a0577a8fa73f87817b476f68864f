WARNING:TYPO_SPELLING: 'evaulate' may be misspelled - perhaps 'evaluate'?
#45: FILE: include/linux/list.h:142:
+ * @member:      member to evaulate
                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: include/linux/list.h:146:
+     return ((!member->next || !member->prev) ? 0 : 1);$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#66: FILE: include/linux/list.h:260:
+#define list_for_each_entry_safe(pos, n, head, member)                      \
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \
+               n = list_entry(pos->member.next, typeof(*pos), member); \
+           &pos->member != (head);                             \
+           pos = n,                                                    \
+               n = list_entry(pos->member.next, typeof(*pos), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#66: FILE: include/linux/list.h:260:
+#define list_for_each_entry_safe(pos, n, head, member)                      \
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \
+               n = list_entry(pos->member.next, typeof(*pos), member); \
+           &pos->member != (head);                             \
+           pos = n,                                                    \
+               n = list_entry(pos->member.next, typeof(*pos), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#66: FILE: include/linux/list.h:260:
+#define list_for_each_entry_safe(pos, n, head, member)                      \
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \
+               n = list_entry(pos->member.next, typeof(*pos), member); \
+           &pos->member != (head);                             \
+           pos = n,                                                    \
+               n = list_entry(pos->member.next, typeof(*pos), member))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#66: FILE: include/linux/list.h:260:
+#define list_for_each_entry_safe(pos, n, head, member)                      \
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \
+               n = list_entry(pos->member.next, typeof(*pos), member); \
+           &pos->member != (head);                             \
+           pos = n,                                                    \
+               n = list_entry(pos->member.next, typeof(*pos), member))

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: include/linux/list.h:261:
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/linux/list.h:261:
+        for (pos = list_entry((head)->next, typeof(*pos), member),          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: include/linux/list.h:262:
+               n = list_entry(pos->member.next, typeof(*pos), member); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: include/linux/list.h:262:
+               n = list_entry(pos->member.next, typeof(*pos), member); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: include/linux/list.h:263:
+           &pos->member != (head);                             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/list.h:263:
+           &pos->member != (head);                             \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: include/linux/list.h:264:
+           pos = n,                                                    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: include/linux/list.h:264:
+           pos = n,                                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: include/linux/list.h:265:
+               n = list_entry(pos->member.next, typeof(*pos), member))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: include/linux/list.h:265:
+               n = list_entry(pos->member.next, typeof(*pos), member))$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 7 warnings, 4 checks, 35 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
