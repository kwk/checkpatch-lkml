WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -urN linux-2.4.19-rc3/fs/partitions/check.c linux-2.4.19-s390/fs/partitions/check.c

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#46: FILE: fs/partitions/check.c:280:
+	umode_t devfs_perm  = S_IFBLK | S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#54: FILE: fs/partitions/check.c:288:
+	if (is_read_only(MKDEV(dev->major, minor+part))) {
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#54: FILE: fs/partitions/check.c:288:
+	if (is_read_only(MKDEV(dev->major, minor+part))) {
+	        devfs_perm &= ~(S_IWUSR);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: fs/partitions/check.c:289:
+^I        devfs_perm &= ~(S_IWUSR);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#55: FILE: fs/partitions/check.c:289:
+	        devfs_perm &= ~(S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#70: FILE: fs/partitions/check.c:307:
+	umode_t devfs_perm  = S_IFBLK | S_IRUSR | S_IWUSR;

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/partitions/check.c:315:
+^I        devfs_perm &= ~(S_IWUSR);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#78: FILE: fs/partitions/check.c:315:
+	        devfs_perm &= ~(S_IWUSR);

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: fs/partitions/check.c:366:
+		if(dev->label_arr && dev->label_arr[minor >> dev->minor_shift]) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#123: FILE: fs/partitions/check.c:440:
+void register_disk_label(struct gendisk *hd, int minor, char *label) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#126: FILE: fs/partitions/check.c:443:
+	static devfs_handle_t devfs_label_dir = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#135: FILE: fs/partitions/check.c:452:
+	for(i=0; label[i] != '\0'; i++);
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: fs/partitions/check.c:452:
+	for(i=0; label[i] != '\0'; i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#135: FILE: fs/partitions/check.c:452:
+	for(i=0; label[i] != '\0'; i++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: fs/partitions/check.c:453:
+	for(i--; i >= 0; i--) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#137: FILE: fs/partitions/check.c:454:
+		if(label[i] == ' ' && label[i+1] == '\0') {
 		                             ^

ERROR:SPACING: space required before the open parenthesis '('
#137: FILE: fs/partitions/check.c:454:
+		if(label[i] == ' ' && label[i+1] == '\0') {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#141: FILE: fs/partitions/check.c:458:
+		if(

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: fs/partitions/check.c:458:
+		if(

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: fs/partitions/check.c:463:
+		if(label[i] >= 'a' && label[i] <= 'z')

ERROR:SPACING: space required before the open parenthesis '('
#148: FILE: fs/partitions/check.c:465:
+		if(label[i] >= 'A' && label[i] <= 'Z')

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: fs/partitions/check.c:467:
+		if(label[i] >= '0' && label[i] <= '9')

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#153: FILE: fs/partitions/check.c:470:
+		printk(KERN_WARNING "\nregister_disk_label: invalid character(s)"

WARNING:SPLIT_STRING: quoted string split across lines
#154: FILE: fs/partitions/check.c:471:
+		printk(KERN_WARNING "\nregister_disk_label: invalid character(s)"
+			" in label <%s>\n", label);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#155: FILE: fs/partitions/check.c:472:
+		printk(KERN_WARNING "register_label: refusing to create devfs entry.\n");

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: fs/partitions/check.c:476:
+	if(!hd->label_arr)

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: fs/partitions/check.c:479:
+	if(!devfs_label_dir)

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: fs/partitions/check.c:480:
+		if(!(devfs_label_dir = devfs_mk_dir(NULL, "labels", NULL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: fs/partitions/check.c:480:
+		if(!(devfs_label_dir = devfs_mk_dir(NULL, "labels", NULL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: fs/partitions/check.c:483:
+	if(hd->label_arr[disknum]) {

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: fs/partitions/check.c:484:
+		if(strcmp(devfs_get_name(hd->label_arr[disknum], NULL), label) == 0)

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: fs/partitions/check.c:490:
+	if(!devfs_find_handle(devfs_label_dir, label, 0, 0, 0, 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: fs/partitions/check.c:494:
+		if(hd->de_arr) {

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: fs/partitions/check.c:495:
+			if(!hd->de_arr[disknum])

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: fs/partitions/check.c:498:
+			pos = devfs_generate_path(hd->de_arr[disknum], path+3, sizeof(path)-3);
 			                                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#181: FILE: fs/partitions/check.c:498:
+			pos = devfs_generate_path(hd->de_arr[disknum], path+3, sizeof(path)-3);
 			                                                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: fs/partitions/check.c:499:
+			if(pos < 0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: fs/partitions/check.c:502:
+			strncpy(path+pos, "../", 3);
 			            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#189: FILE: fs/partitions/check.c:506:
+		devfs_mk_symlink(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: fs/partitions/check.c:507:
+			devfs_label_dir, label, DEVFS_FL_DEFAULT, path+pos,
 			                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: fs/partitions/ibm.c:138:
+	if(name[0] != '\0')

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#233: FILE: fs/partitions/ibm.c:221:
+				 size-offset*(blocksize >> 9));
 				     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#233: FILE: fs/partitions/ibm.c:221:
+				 size-offset*(blocksize >> 9));
 				            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 9 warnings, 10 checks, 194 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
