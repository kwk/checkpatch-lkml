WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#145: FILE: saa7134-alsa.c:318:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: saa7134-alsa.c:492:
+				      snd_pcm_hw_params_t * hw_params)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#299: FILE: saa7134-alsa.c:503:
+		   return -EINVAL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#322: FILE: saa7134-alsa.c:526:
+	if (0 != err) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#329: FILE: saa7134-alsa.c:533:
+	if (0 != (err = videobuf_dma_pci_map(dev->pci, &dev->dmasound.dma))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#333: FILE: saa7134-alsa.c:537:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->dmasound.pt))) {
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#333: FILE: saa7134-alsa.c:537:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->dmasound.pt))) {
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#333: FILE: saa7134-alsa.c:537:
+	if (0 != (err = saa7134_pgtable_alloc(dev->pci,&dev->dmasound.pt))) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#338: FILE: saa7134-alsa.c:542:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->dmasound.pt,
 	                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#338: FILE: saa7134-alsa.c:542:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->dmasound.pt,
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#338: FILE: saa7134-alsa.c:542:
+	if (0 != (err = saa7134_pgtable_build(dev->pci,&dev->dmasound.pt,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#349: FILE: saa7134-alsa.c:553:
+	/* I should be able to use runtime->dma_addr in the control
+	   byte, but it doesn't work. So I allocate the DMA using the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: saa7134-alsa.c:554:
+	   V4L functions, and force ALSA to use that as the DMA area */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: saa7134-alsa.c:881:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 5 warnings, 1 checks, 450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
