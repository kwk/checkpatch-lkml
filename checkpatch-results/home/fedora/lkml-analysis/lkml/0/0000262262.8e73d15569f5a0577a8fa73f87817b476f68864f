CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/bitmap.h:103:
+extern int bitmap_scnlistprintf(char *buf, unsigned int len,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: include/linux/bitmap.h:104:
+extern int bitmap_scnlistprintf(char *buf, unsigned int len,
+			const unsigned long *src, int nbits);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/bitmap.h:105:
+extern int bitmap_parselist(const char *buf, unsigned long *maskp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: include/linux/bitmap.h:106:
+extern int bitmap_parselist(const char *buf, unsigned long *maskp,
+			int nmaskbits);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#141: FILE: include/linux/cpumask.h:276:
+			__cpumask_parse((ubuf), (ulen), &(dst), NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#149: FILE: include/linux/cpumask.h:284:
+			__cpulist_scnprintf((buf), (len), &(src), NR_CPUS)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/cpumask.h:286:
+static inline int __cpulist_scnprintf(char *buf, int len,
+					const cpumask_t *srcp, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: include/linux/nodemask.h:289:
+static inline int __nodelist_scnprintf(char *buf, int len,
+					const nodemask_t *srcp, int nbits)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: lib/bitmap.c:450:
+int bitmap_scnlistprintf(char *buf, unsigned int buflen,
+	const unsigned long *maskp, int nmaskbits)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#277: FILE: lib/bitmap.c:456:
+	rbot = cur = find_first_bit(maskp, nmaskbits);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: lib/bitmap.c:459:
+		cur = find_next_bit(maskp, nmaskbits, cur+1);
 		                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#308: FILE: lib/bitmap.c:487:
+	unsigned a, b;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#314: FILE: lib/bitmap.c:493:
+		b = a = simple_strtoul(bp, (char **)&bp, BASEDEC);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#314: FILE: lib/bitmap.c:493:
+		b = a = simple_strtoul(bp, (char **)&bp, BASEDEC);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#319: FILE: lib/bitmap.c:498:
+			b = simple_strtoul(bp, (char **)&bp, BASEDEC);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 10 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
