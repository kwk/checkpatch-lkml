WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -Naurp 2.6.14-rc2-mm2/fs/namespace.c 2.6.14-rc2-mm2+unshare/fs/namespace.c

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/namespace.h:17:
+extern struct namespace *dup_namespace_struct(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#125: FILE: include/linux/namespace.h:17:
+extern struct namespace *dup_namespace_struct(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: kernel/fork.c:1390:
+^I ^I * Cannot unshare vm if the signal structure is being shared$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: kernel/fork.c:1390:
+^I ^I * Cannot unshare vm if the signal structure is being shared$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: kernel/fork.c:1391:
+^I ^I * through a previous call to clone() with CLONE_THREAD.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: kernel/fork.c:1391:
+^I ^I * through a previous call to clone() with CLONE_THREAD.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: kernel/fork.c:1392:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: kernel/fork.c:1392:
+^I ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: kernel/fork.c:1393:
+^I    ^Iif (atomic_read(&current->signal->count) > 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: kernel/fork.c:1393:
+^I    ^Iif (atomic_read(&current->signal->count) > 1)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: kernel/fork.c:1401:
+		if (!(unshare_flags & CLONE_SIGHAND) &&
+		     (atomic_read(&current->sighand->count) > 1))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#335: FILE: kernel/fork.c:1420:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#375: FILE: kernel/fork.c:1460:
+			if (!new_mm)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#377: FILE: kernel/fork.c:1462:
+			else {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#382: FILE: kernel/fork.c:1467:
+						if (!new_sh)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#384: FILE: kernel/fork.c:1469:
+						else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#401: FILE: kernel/fork.c:1486:
+		current->min_flt = current->maj_flt = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#402: FILE: kernel/fork.c:1487:
+		current->nvcsw = current->nivcsw = 0;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143957.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 7 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000143957.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
