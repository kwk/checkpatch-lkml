WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -ur linux.orig/drivers/char/ipmi/ipmi_kcs_intf.c linux.keepup/drivers/char/ipmi/ipmi_kcs_intf.c

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#85: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1024:
+	s8      Signature[4];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#86: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1025:
+	u32     Length;

CHECK:CAMELCASE: Avoid CamelCase: <Revision>
#87: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1026:
+	u8      Revision;

CHECK:CAMELCASE: Avoid CamelCase: <Checksum>
#88: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1027:
+	u8      Checksum;

CHECK:CAMELCASE: Avoid CamelCase: <OEMTableID>
#90: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1029:
+	s8      OEMTableID[8];

CHECK:CAMELCASE: Avoid CamelCase: <OEMRevision>
#91: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1030:
+	s8      OEMRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorID>
#92: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1031:
+	s8      CreatorID[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorRevision>
#93: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1032:
+	s8      CreatorRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <InterfaceType>
#94: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1033:
+	u8      InterfaceType[2];

CHECK:CAMELCASE: Avoid CamelCase: <SpecificationRevision>
#95: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1034:
+	s16     SpecificationRevision;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptType>
#101: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1040:
+	u8      InterruptType;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1043:
+	/* If bit 0 of InterruptType is set, then this is the SCI
+	   interrupt in the GPEx_STS register. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1043:
+	   interrupt in the GPEx_STS register. */

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#107: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1046:
+	s16     Reserved;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#110: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1049:
+	/* If bit 1 of InterruptType is set, then this is the I/O
+	   APIC/SAPIC interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#110: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1049:
+	   APIC/SAPIC interrupt. */

CHECK:CAMELCASE: Avoid CamelCase: <GlobalSystemInterrupt>
#111: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1050:
+	u32     GlobalSystemInterrupt;

CHECK:CAMELCASE: Avoid CamelCase: <SPMITable>
#131: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1063:
+	struct SPMITable     *spmi;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1064:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#136: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1067:
+					 (struct acpi_table_header **) &spmi);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#148: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1079:
+	if (spmi->addr.address_space_id == ACPI_ADR_SPACE_SYSTEM_MEMORY) {
[...]
+	} else if (spmi->addr.address_space_id == ACPI_ADR_SPACE_SYSTEM_IO) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1081:
+		printk("ipmi_kcs_intf: Found ACPI-specified state machine"

WARNING:SPLIT_STRING: quoted string split across lines
#151: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1082:
+		printk("ipmi_kcs_intf: Found ACPI-specified state machine"
+		       " at memory address 0x%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#152: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1083:
+		       (unsigned long) spmi->addr.address);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1086:
+		printk("ipmi_kcs_intf: Found ACPI-specified state machine"

WARNING:SPLIT_STRING: quoted string split across lines
#156: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1087:
+		printk("ipmi_kcs_intf: Found ACPI-specified state machine"
+		       " at I/O address 0x%lx\n",

CHECK:SPACING: No space is necessary after a cast
#157: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1088:
+		       (int) spmi->addr.address);

CHECK:BRACES: Unbalanced braces around else statement
#158: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1089:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pos == 0'
#189: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1134:
+	if (kcs_trydefaults && (pos == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1137:
+		if (rv && (physaddr = acpi_find_bmc(&physaddr, &port) == 0)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1138:
+^I^I^Irv = init_one_kcs(port, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1139:
+^I^I^I^I^I  0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1140:
+^I^I^I^I^I  physaddr, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around kcs_infos[pos]
#205: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1141:
+					  &(kcs_infos[pos]));

CHECK:SPACING: No space is necessary after a cast
#223: FILE: drivers/char/ipmi/ipmi_watchdog.c:562:
+		i = copy_to_user((void *) arg, &val, sizeof(val));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346326.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 22 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346326.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
