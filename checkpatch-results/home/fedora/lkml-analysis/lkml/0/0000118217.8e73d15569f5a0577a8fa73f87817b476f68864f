ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#68: FILE: drivers/mmc/wbsd.c:91:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#79: FILE: drivers/mmc/wbsd.c:100:
 }
+static inline void wbsd_lock_config(struct wbsd_host *host)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#88: FILE: drivers/mmc/wbsd.c:105:
 }
+static inline void wbsd_write_config(struct wbsd_host *host, u8 reg, u8 =

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#98: FILE: drivers/mmc/wbsd.c:115:
 }
+static inline u8 wbsd_read_config(struct wbsd_host *host, u8 reg)

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#108: FILE: drivers/mmc/wbsd.c:124:
+static inline void wbsd_write_index(struct wbsd_host *host, u8 index, u8=
                                                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#116: FILE: drivers/mmc/wbsd.c:130:
 }
+static inline u8 wbsd_read_index(struct wbsd_host *host, u8 index)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: drivers/mmc/wbsd.c:199:
 }
+static void wbsd_reset(struct wbsd_host *host)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#153: FILE: drivers/mmc/wbsd.c:218:
+	if (host->dma >=3D 0) {
[...]
@@ -247,7 +246,7 @@ static void wbsd_request_end(struct wbsd

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#153: FILE: drivers/mmc/wbsd.c:218:
+	if (host->dma >=3D 0) {
 	              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#173: FILE: drivers/mmc/wbsd.c:260:
 }
+static inline int wbsd_next_sg(struct wbsd_host *host)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: drivers/mmc/wbsd.c:273:
+		host->offset =3D 0;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#188: FILE: drivers/mmc/wbsd.c:274:
+		host->remain =3D host->cur_sg->length;
 		             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#195: FILE: drivers/mmc/wbsd.c:278:
 }
+static inline char *wbsd_kmap_sg(struct wbsd_host *host)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#203: FILE: drivers/mmc/wbsd.c:284:
 }
+static inline void wbsd_kunmap_sg(struct wbsd_host *host)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#210: FILE: drivers/mmc/wbsd.c:288:
 }
+static inline void wbsd_sg_to_dma(struct wbsd_host *host, struct mmc_dat=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#210: FILE: drivers/mmc/wbsd.c:288:
+static inline void wbsd_sg_to_dma(struct wbsd_host *host, struct mmc_dat=
                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#218: FILE: drivers/mmc/wbsd.c:292:
+	char *dmabuf =3D host->dma_buffer;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#229: FILE: drivers/mmc/wbsd.c:309:
+	for (i =3D 0; i < len; i++) {
 	       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: drivers/mmc/wbsd.c:336:
 }
+static inline void wbsd_dma_to_sg(struct wbsd_host *host, struct mmc_dat=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#239: FILE: drivers/mmc/wbsd.c:336:
+static inline void wbsd_dma_to_sg(struct wbsd_host *host, struct mmc_dat=
                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#247: FILE: drivers/mmc/wbsd.c:340:
+	char *dmabuf =3D host->dma_buffer;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#258: FILE: drivers/mmc/wbsd.c:354:
+	for (i =3D 0; i < len; i++) {
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#276: FILE: drivers/mmc/wbsd.c:391:
+	if (wbsd_read_index(host, WBSD_IDX_RSPLEN) !=3D WBSD_RSP_SHORT) {
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#291: FILE: drivers/mmc/wbsd.c:395:
+	cmd->resp[0]  =3D wbsd_read_index(host, WBSD_IDX_RESP12) << 24;
 	              ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#292: FILE: drivers/mmc/wbsd.c:396:
+	cmd->resp[0] |=3D wbsd_read_index(host, WBSD_IDX_RESP13) << 16;
 	             ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#293: FILE: drivers/mmc/wbsd.c:397:
+	cmd->resp[0] |=3D wbsd_read_index(host, WBSD_IDX_RESP14) << 8;
 	             ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#294: FILE: drivers/mmc/wbsd.c:398:
+	cmd->resp[0] |=3D wbsd_read_index(host, WBSD_IDX_RESP15) << 0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#295: FILE: drivers/mmc/wbsd.c:399:
+	cmd->resp[1]  =3D wbsd_read_index(host, WBSD_IDX_RESP16) << 24;
 	              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#300: FILE: drivers/mmc/wbsd.c:401:
 }
+static inline void wbsd_get_long_reply(struct wbsd_host *host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/mmc/wbsd.c:402:
+static inline void wbsd_get_long_reply(struct wbsd_host *host,
+	struct mmc_command *cmd)

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#310: FILE: drivers/mmc/wbsd.c:408:
+	if (wbsd_read_index(host, WBSD_IDX_RSPLEN) !=3D WBSD_RSP_LONG) {
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#317: FILE: drivers/mmc/wbsd.c:412:
+	for (i =3D 0; i < 4; i++) {
 	       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#327: FILE: drivers/mmc/wbsd.c:428:
 }
+static void wbsd_send_command(struct wbsd_host *host, struct mmc_command=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#327: FILE: drivers/mmc/wbsd.c:428:
+static void wbsd_send_command(struct wbsd_host *host, struct mmc_command=
                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#337: FILE: drivers/mmc/wbsd.c:447:
+	for (i =3D 3; i >=3D 0; i--)
 	       ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#337: FILE: drivers/mmc/wbsd.c:447:
+	for (i =3D 3; i >=3D 0; i--)
 	                ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#347: FILE: drivers/mmc/wbsd.c:462:
+	if ((cmd->flags & MMC_RSP_MASK) !=3D MMC_RSP_NONE) {
 	                                ^

CHECK:BRACES: Unbalanced braces around else statement
#357: FILE: drivers/mmc/wbsd.c:478:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#370: FILE: drivers/mmc/wbsd.c:494:
+	struct mmc_data *data =3D host->mrq->cmd->data;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#381: FILE: drivers/mmc/wbsd.c:511:
+	while (!((fsr =3D inb(host->base + WBSD_FSR)) & WBSD_FIFO_EMPTY)) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#391: FILE: drivers/mmc/wbsd.c:522:
+		for (i =3D 0; i < fifo; i++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: drivers/mmc/wbsd.c:534:
+			if (data->bytes_xfered =3D=3D host->size) {
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: drivers/mmc/wbsd.c:534:
+			if (data->bytes_xfered =3D=3D host->size) {
 			                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#401: FILE: drivers/mmc/wbsd.c:534:
+			if (data->bytes_xfered =3D=3D host->size) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#411: FILE: drivers/mmc/wbsd.c:542:
+			if (host->remain =3D=3D 0) {
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#411: FILE: drivers/mmc/wbsd.c:542:
+			if (host->remain =3D=3D 0) {
 			                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#411: FILE: drivers/mmc/wbsd.c:542:
+			if (host->remain =3D=3D 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 0)
#419: FILE: drivers/mmc/wbsd.c:547:
+				if (!wbsd_next_sg(host)) {
[...]
@@ -594,10 +575,10 @@ static void wbsd_empty_fifo(struct wbsd_

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#428: FILE: drivers/mmc/wbsd.c:577:
 }
+static void wbsd_fill_fifo(struct wbsd_host *host)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#432: FILE: drivers/mmc/wbsd.c:579:
+	struct mmc_data *data =3D host->mrq->cmd->data;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#443: FILE: drivers/mmc/wbsd.c:597:
+	while (!((fsr =3D inb(host->base + WBSD_FSR)) & WBSD_FIFO_FULL)) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#453: FILE: drivers/mmc/wbsd.c:608:
+		for (i =3D 16; i > fifo; i--) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#463: FILE: drivers/mmc/wbsd.c:620:
+			if (data->bytes_xfered =3D=3D host->size) {
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#463: FILE: drivers/mmc/wbsd.c:620:
+			if (data->bytes_xfered =3D=3D host->size) {
 			                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#463: FILE: drivers/mmc/wbsd.c:620:
+			if (data->bytes_xfered =3D=3D host->size) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#473: FILE: drivers/mmc/wbsd.c:628:
+			if (host->remain =3D=3D 0) {
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#473: FILE: drivers/mmc/wbsd.c:628:
+			if (host->remain =3D=3D 0) {
 			                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#473: FILE: drivers/mmc/wbsd.c:628:
+			if (host->remain =3D=3D 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 0)
#481: FILE: drivers/mmc/wbsd.c:633:
+				if (!wbsd_next_sg(host)) {
[...]
@@ -684,7 +660,7 @@ static void wbsd_fill_fifo(struct wbsd_h

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#491: FILE: drivers/mmc/wbsd.c:662:
 }
+static void wbsd_prepare_data(struct wbsd_host *host, struct mmc_data *d=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#491: FILE: drivers/mmc/wbsd.c:662:
+static void wbsd_prepare_data(struct wbsd_host *host, struct mmc_data *d=
                                                                         ^

CHECK:BRACES: Unbalanced braces around else statement
#502: FILE: drivers/mmc/wbsd.c:685:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/mmc/wbsd.c:687:
+		wbsd_write_index(host, WBSD_IDX_TAAC,
+			data->timeout_ns / 1000000);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#515: FILE: drivers/mmc/wbsd.c:703:
+	if (host->bus_width =3D=3D MMC_BUS_WIDTH_1) {
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#515: FILE: drivers/mmc/wbsd.c:703:
+	if (host->bus_width =3D=3D MMC_BUS_WIDTH_1) {
 	                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#515: FILE: drivers/mmc/wbsd.c:703:
+	if (host->bus_width =3D=3D MMC_BUS_WIDTH_1) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#523: FILE: drivers/mmc/wbsd.c:707:
+	} else if (host->bus_width =3D=3D MMC_BUS_WIDTH_4) {
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#523: FILE: drivers/mmc/wbsd.c:707:
+	} else if (host->bus_width =3D=3D MMC_BUS_WIDTH_4) {
 	                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#523: FILE: drivers/mmc/wbsd.c:707:
+	} else if (host->bus_width =3D=3D MMC_BUS_WIDTH_4) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/mmc/wbsd.c:710:
+		wbsd_write_index(host, WBSD_IDX_PBSMSB,
+			((blksize >> 4) & 0xF0) | WBSD_DATA_WIDTH);

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#544: FILE: drivers/mmc/wbsd.c:731:
+	if (host->dma >=3D 0) {
 	              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#588: FILE: drivers/mmc/wbsd.c:801:
 }
+static void wbsd_finish_data(struct wbsd_host *host, struct mmc_data *da=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#588: FILE: drivers/mmc/wbsd.c:801:
+static void wbsd_finish_data(struct wbsd_host *host, struct mmc_data *da=
                                                                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#608: FILE: drivers/mmc/wbsd.c:826:
+	if (host->dma >=3D 0) {
[...]
@@ -878,16 +842,13 @@ static void wbsd_finish_data(struct wbsd

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#608: FILE: drivers/mmc/wbsd.c:826:
+	if (host->dma >=3D 0) {
 	              ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#627: FILE: drivers/mmc/wbsd.c:850:
+		} else {
[...]
@@ -910,10 +871,10 @@ static void wbsd_finish_data(struct wbsd

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#673: FILE: drivers/mmc/wbsd.c:916:
+	if (cmd->data && (cmd->error =3D=3D MMC_ERR_NONE)) {
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#673: FILE: drivers/mmc/wbsd.c:916:
+	if (cmd->data && (cmd->error =3D=3D MMC_ERR_NONE)) {
 	                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#673: FILE: drivers/mmc/wbsd.c:916:
+	if (cmd->data && (cmd->error =3D=3D MMC_ERR_NONE)) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#682: FILE: drivers/mmc/wbsd.c:933:
 }
+static void wbsd_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#685: FILE: drivers/mmc/wbsd.c:935:
+	struct wbsd_host *host =3D mmc_priv(mmc);
 	                       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#702: FILE: drivers/mmc/wbsd.c:965:
+	if (clk !=3D host->clk) {
 	        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#712: FILE: drivers/mmc/wbsd.c:973:
+	if (ios->power_mode !=3D MMC_POWER_OFF) {
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#722: FILE: drivers/mmc/wbsd.c:985:
+	if (ios->chip_select =3D=3D MMC_CS_HIGH) {
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#722: FILE: drivers/mmc/wbsd.c:985:
+	if (ios->chip_select =3D=3D MMC_CS_HIGH) {
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#722: FILE: drivers/mmc/wbsd.c:985:
+	if (ios->chip_select =3D=3D MMC_CS_HIGH) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#749: FILE: drivers/mmc/wbsd.c:1010:
 }
+static int wbsd_get_ro(struct mmc_host *mmc)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#752: FILE: drivers/mmc/wbsd.c:1012:
+	struct wbsd_host *host =3D mmc_priv(mmc);
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: drivers/mmc/wbsd.c:1050:
+	struct wbsd_host *host =3D (struct wbsd_host *)data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#761: FILE: drivers/mmc/wbsd.c:1050:
+	struct wbsd_host *host =3D (struct wbsd_host *)data;
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: drivers/mmc/wbsd.c:1092:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#779: FILE: drivers/mmc/wbsd.c:1092:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#825: FILE: drivers/mmc/wbsd.c:1141:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#825: FILE: drivers/mmc/wbsd.c:1141:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#836: FILE: drivers/mmc/wbsd.c:1162:
+	if (host->size =3D=3D data->bytes_xfered) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#836: FILE: drivers/mmc/wbsd.c:1162:
+	if (host->size =3D=3D data->bytes_xfered) {
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#836: FILE: drivers/mmc/wbsd.c:1162:
+	if (host->size =3D=3D data->bytes_xfered) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#846: FILE: drivers/mmc/wbsd.c:1172:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#846: FILE: drivers/mmc/wbsd.c:1172:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#857: FILE: drivers/mmc/wbsd.c:1196:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#857: FILE: drivers/mmc/wbsd.c:1196:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: drivers/mmc/wbsd.c:1220:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#868: FILE: drivers/mmc/wbsd.c:1220:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: drivers/mmc/wbsd.c:1241:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#879: FILE: drivers/mmc/wbsd.c:1241:
+	struct wbsd_host *host =3D (struct wbsd_host *)param;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#897: FILE: drivers/mmc/wbsd.c:1270:
+	struct wbsd_host *host =3D dev_id;
 	                       ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#906: FILE: drivers/mmc/wbsd.c:1311:
+static int __devinit wbsd_alloc_mmc(struct device *dev)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#920: FILE: drivers/mmc/wbsd.c:1335:
+	mmc->ocr_avail =3D MMC_VDD_32_33 | MMC_VDD_33_34;
 	               ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#929: FILE: drivers/mmc/wbsd.c:1370:
 }
+static void __devexit wbsd_free_mmc(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#929: FILE: drivers/mmc/wbsd.c:1370:
+static void __devexit wbsd_free_mmc(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#943: FILE: drivers/mmc/wbsd.c:1393:
+static int __devinit wbsd_scan(struct wbsd_host *host)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#953: FILE: drivers/mmc/wbsd.c:1423:
+				if (id =3D=3D valid_ids[k]) {
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#953: FILE: drivers/mmc/wbsd.c:1423:
+				if (id =3D=3D valid_ids[k]) {
 				          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#953: FILE: drivers/mmc/wbsd.c:1423:
+				if (id =3D=3D valid_ids[k]) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#962: FILE: drivers/mmc/wbsd.c:1428:
+			if (id !=3D 0xFFFF) {
 			       ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#972: FILE: drivers/mmc/wbsd.c:1449:
+static int __devinit wbsd_request_region(struct wbsd_host *host, int bas=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#972: FILE: drivers/mmc/wbsd.c:1449:
+static int __devinit wbsd_request_region(struct wbsd_host *host, int bas=
                                                                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#982: FILE: drivers/mmc/wbsd.c:1462:
 }
+static void __devexit wbsd_release_regions(struct wbsd_host *host)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#982: FILE: drivers/mmc/wbsd.c:1462:
+static void __devexit wbsd_release_regions(struct wbsd_host *host)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#991: FILE: drivers/mmc/wbsd.c:1479:
+static void __devinit wbsd_request_dma(struct wbsd_host *host, int dma)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: drivers/mmc/wbsd.c:1524:
+	dma_unmap_single(host->mmc->dev, host->dma_addr,
+		WBSD_DMA_SIZE, DMA_BIDIRECTIONAL);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1011: FILE: drivers/mmc/wbsd.c:1538:
 }
+static void __devexit wbsd_release_dma(struct wbsd_host *host)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1011: FILE: drivers/mmc/wbsd.c:1538:
+static void __devexit wbsd_release_dma(struct wbsd_host *host)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1018: FILE: drivers/mmc/wbsd.c:1542:
+		dma_unmap_single(host->mmc->dev, host->dma_addr,
+			WBSD_DMA_SIZE, DMA_BIDIRECTIONAL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1028: FILE: drivers/mmc/wbsd.c:1557:
+static int __devinit wbsd_request_irq(struct wbsd_host *host, int irq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: drivers/mmc/wbsd.c:1576:
+	tasklet_init(&host->card_tasklet, wbsd_tasklet_card,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: drivers/mmc/wbsd.c:1578:
+	tasklet_init(&host->fifo_tasklet, wbsd_tasklet_fifo,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: drivers/mmc/wbsd.c:1580:
+	tasklet_init(&host->crc_tasklet, wbsd_tasklet_crc,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: drivers/mmc/wbsd.c:1582:
+	tasklet_init(&host->timeout_tasklet, wbsd_tasklet_timeout,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/mmc/wbsd.c:1584:
+	tasklet_init(&host->finish_tasklet, wbsd_tasklet_finish,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1059: FILE: drivers/mmc/wbsd.c:1586:
+	tasklet_init(&host->block_tasklet, wbsd_tasklet_block,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: drivers/mmc/wbsd.c:1586:
+	tasklet_init(&host->block_tasklet, wbsd_tasklet_block,
=20

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1065: FILE: drivers/mmc/wbsd.c:1589:
 }
+static void __devexit wbsd_release_irq(struct wbsd_host *host)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1065: FILE: drivers/mmc/wbsd.c:1589:
+static void __devexit wbsd_release_irq(struct wbsd_host *host)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1074: FILE: drivers/mmc/wbsd.c:1611:
+static int __devinit wbsd_request_resources(struct wbsd_host *host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1075: FILE: drivers/mmc/wbsd.c:1612:
+static int __devinit wbsd_request_resources(struct wbsd_host *host,
 	int base, int irq, int dma)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1083: FILE: drivers/mmc/wbsd.c:1642:
+static void __devexit wbsd_release_resources(struct wbsd_host *host)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1142: FILE: drivers/mmc/wbsd.c:1773:
+		if (pnp && (ret =3D=3D -ENODEV)) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1142: FILE: drivers/mmc/wbsd.c:1773:
+		if (pnp && (ret =3D=3D -ENODEV)) {
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1142: FILE: drivers/mmc/wbsd.c:1773:
+		if (pnp && (ret =3D=3D -ENODEV)) {
 		                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1142: FILE: drivers/mmc/wbsd.c:1773:
+		if (pnp && (ret =3D=3D -ENODEV)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1171: FILE: drivers/mmc/wbsd.c:1796:
+	if (pnp) {
[...]
-	}
[...]

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1172: FILE: drivers/mmc/wbsd.c:1797:
+		if ((host->config !=3D 0) && !wbsd_chip_validate(host)) {
 		                  ^

CHECK:BRACES: Unbalanced braces around else statement
#1181: FILE: drivers/mmc/wbsd.c:1804:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1200: FILE: drivers/mmc/wbsd.c:1844:
 }
+static void __devexit wbsd_shutdown(struct device *dev, int pnp)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1200: FILE: drivers/mmc/wbsd.c:1844:
+static void __devexit wbsd_shutdown(struct device *dev, int pnp)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1204: FILE: drivers/mmc/wbsd.c:1846:
+	struct mmc_host *mmc =3D dev_get_drvdata(dev);
 	                     ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1214: FILE: drivers/mmc/wbsd.c:1871:
+static int __devinit wbsd_probe(struct platform_device *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1220: FILE: drivers/mmc/wbsd.c:1875:
 }
+static int __devexit wbsd_remove(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1220: FILE: drivers/mmc/wbsd.c:1875:
+static int __devexit wbsd_remove(struct platform_device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1227: FILE: drivers/mmc/wbsd.c:1889:
 static int __devinit

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1230: FILE: drivers/mmc/wbsd.c:1890:
+wbsd_pnp_probe(struct pnp_dev *pnpdev, const struct pnp_device_id *dev_i=
                                                                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1240: FILE: drivers/mmc/wbsd.c:1909:
 }
+static void __devexit wbsd_pnp_remove(struct pnp_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1240: FILE: drivers/mmc/wbsd.c:1909:
+static void __devexit wbsd_pnp_remove(struct pnp_dev *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1250: FILE: drivers/mmc/wbsd.c:1938:
 }
+static int wbsd_platform_suspend(struct platform_device *dev,

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1263: FILE: drivers/mmc/wbsd.c:2016:
+	if (host->config !=3D 0) {
 	                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 85 errors, 28 warnings, 43 checks, 1171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
