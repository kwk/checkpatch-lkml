CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ioc"
#46: FILE: arch/ia64/hp/common/sba_iommu.c:1635:
+	while (ioc != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#52: FILE: arch/ia64/hp/common/sba_iommu.c:1641:
+		WRITE_REG(ioc->ibase | (get_iovp_order(ioc->iov_size) + iovp_shift), ioc->ioc_hpa + IOC_PCOM);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'indepedent' may be misspelled - perhaps 'independent'?
#76: FILE: arch/ia64/Kconfig:385:
+	  but it is indepedent of the system firmware.   And like a reboot
 	            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'similiarity' may be misspelled - perhaps 'similarity'?
#79: FILE: arch/ia64/Kconfig:388:
+	  The name comes from the similiarity to the exec system call.
 	                          ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: arch/ia64/kernel/crash.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#95: FILE: arch/ia64/kernel/crash.c:2:
+ * arch/ia64/kernel/crash.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'paniced' may be misspelled - perhaps 'panicked'?
#121: FILE: arch/ia64/kernel/crash.c:28:
+	 * has paniced or is otherwise in a critical state.
 	       ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: arch/ia64/kernel/machine_kexec.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: arch/ia64/kernel/machine_kexec.c:2:
+ * arch/ia64/kernel/machine_kexec.c $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#154: FILE: arch/ia64/kernel/machine_kexec.c:2:
+ * arch/ia64/kernel/machine_kexec.c 

WARNING:TYPO_SPELLING: 'Comapny' may be misspelled - perhaps 'Company'?
#157: FILE: arch/ia64/kernel/machine_kexec.c:5:
+ * Copyright (C) 2005 Hewlett-Packard Development Comapny, L.P.
                                                   ^^^^^^^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#171: FILE: arch/ia64/kernel/machine_kexec.c:19:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bitops.h> instead of <asm/bitops.h>
#175: FILE: arch/ia64/kernel/machine_kexec.c:23:
+#include <asm/bitops.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#177: FILE: arch/ia64/kernel/machine_kexec.c:25:
+#include <asm/delay.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/ia64/kernel/machine_kexec.c:39:
+typedef void (*relocate_new_kernel_t)( unsigned long, unsigned long, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: arch/ia64/kernel/machine_kexec.c:39:
+typedef void (*relocate_new_kernel_t)( unsigned long, unsigned long, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/ia64/kernel/machine_kexec.c:55:
+^Imemcpy((void *)control_code_buffer, (const void *)func[0], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: arch/ia64/kernel/machine_kexec.c:56:
+	memcpy((void *)control_code_buffer, (const void *)func[0], 
+			relocate_new_kernel_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/ia64/kernel/machine_kexec.c:57:
+^Iflush_icache_range((unsigned long)control_code_buffer, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: arch/ia64/kernel/machine_kexec.c:58:
+	flush_icache_range((unsigned long)control_code_buffer, 
+			(unsigned long)control_code_buffer + relocate_new_kernel_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: arch/ia64/kernel/machine_kexec.c:94:
+ * We are past the point of no return, committed to rebooting now. $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#267: FILE: arch/ia64/kernel/machine_kexec.c:115:
+	ia64_set_itv(1<<16);
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/ia64/kernel/machine_kexec.c:131:
+^I * We will start by executing the control code linked into the $

WARNING:LONG_LINE_COMMENT: line length of 152 exceeds 100 columns
#284: FILE: arch/ia64/kernel/machine_kexec.c:132:
+	 * kernel as opposed to the code we copied in control code buffer		 * page. When this code switches to physical mode, we will start

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: arch/ia64/kernel/machine_kexec.c:136:
+^I * address space, we will need to make an ITLB entry to avoid ITLB $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/ia64/kernel/machine_kexec.c:145:
+	(*rnk)(indirection_page, image->start, ia64_boot_param,
+		     GRANULEROUNDDOWN((unsigned long) pal_addr));

CHECK:SPACING: No space is necessary after a cast
#297: FILE: arch/ia64/kernel/machine_kexec.c:145:
+		     GRANULEROUNDDOWN((unsigned long) pal_addr));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#298: FILE: arch/ia64/kernel/machine_kexec.c:146:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#317: FILE: arch/ia64/kernel/relocate_kernel.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: arch/ia64/kernel/relocate_kernel.S:2:
+ * arch/ia64/kernel/relocate_kernel.S $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#318: FILE: arch/ia64/kernel/relocate_kernel.S:2:
+ * arch/ia64/kernel/relocate_kernel.S 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: arch/ia64/kernel/relocate_kernel.S:313:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#638: FILE: arch/ia64/kernel/relocate_kernel.S:322:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/ia64/kernel/relocate_kernel.S:331:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: arch/ia64/kernel/relocate_kernel.S:340:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: arch/ia64/kernel/smp.c:94:
+kexec_stop_this_cpu (void *func)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#726: FILE: include/asm-ia64/kexec.h:1:
+#ifndef _ASM_IA64_KEXEC_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#729: FILE: include/asm-ia64/kexec.h:4:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#751: FILE: include/asm-ia64/kexec.h:26:
+volatile extern long kexec_rendez;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ia64_boot_param *' should also have an identifier name
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#752: FILE: include/asm-ia64/kexec.h:27:
+extern void relocate_new_kernel(unsigned long, unsigned long, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: include/asm-ia64/kexec.h:28:
+extern void relocate_new_kernel(unsigned long, unsigned long, 
+		struct ia64_boot_param *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#754: FILE: include/asm-ia64/kexec.h:29:
+extern void kexec_fake_sal_rendez(void *start, unsigned long wake_up,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: include/asm-ia64/kexec.h:30:
+extern void kexec_fake_sal_rendez(void *start, unsigned long wake_up,
+		unsigned long pal_base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/asm-ia64/machvec_hpzx1.h:37:
+extern void ioc_iova_disable(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#780: FILE: include/asm-ia64/smp.h:133:
+extern void kexec_stop_this_cpu(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#792: FILE: include/linux/irq.h:97:
+extern void terminate_irqs(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#808: FILE: kernel/irq/manage.c:385:
+	struct irqaction * action;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#812: FILE: kernel/irq/manage.c:389:
+	for (i=0; i<NR_IRQS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#812: FILE: kernel/irq/manage.c:389:
+	for (i=0; i<NR_IRQS; i++) {
 	           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 20 warnings, 17 checks, 738 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087937.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
