WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -uNr linux-2.6/include/linux/netfilter_ipv4/ipt_evil.h linux-2.6-ipt-evil/include/linux/netfilter_ipv4/ipt_evil.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: include/linux/netfilter_ipv4/ipt_evil.h:1:
+#ifndef _IPT_EVIL_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: net/ipv4/netfilter/Kconfig:277:
+config IP_NF_MATCH_EVIL
+	tristate "Evil bit match support"
+	depends on IP_NF_IPTABLES
+	help
+	  Matches the "Evil" bit in the IP header. See RFC 3514 for 
+	  details.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
 # The targets

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: net/ipv4/netfilter/Kconfig:281:
+^I  Matches the "Evil" bit in the IP header. See RFC 3514 for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: net/ipv4/netfilter/ipt_evil.c:1:
+/* (C) 2004 Hugo Mills <hugo@carfax.org.uk>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: net/ipv4/netfilter/ipt_evil.c:23:
+static int match(const struct sk_buff *skb,
+      const struct net_device *in,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: net/ipv4/netfilter/ipt_evil.c:23:
+      const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: net/ipv4/netfilter/ipt_evil.c:24:
+      const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: net/ipv4/netfilter/ipt_evil.c:25:
+      const void *matchinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: net/ipv4/netfilter/ipt_evil.c:26:
+      int offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: net/ipv4/netfilter/ipt_evil.c:27:
+      int *hotdrop)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: net/ipv4/netfilter/ipt_evil.c:29:
+    const struct ipt_evil_info *info = matchinfo;$

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: net/ipv4/netfilter/ipt_evil.c:31:
+	if(skb->nh.iph->frag_off & __constant_htons(IP_EVIL))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#122: FILE: net/ipv4/netfilter/ipt_evil.c:31:
+	if(skb->nh.iph->frag_off & __constant_htons(IP_EVIL))

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: net/ipv4/netfilter/ipt_evil.c:38:
+static int checkentry(const char *tablename,
+		   const struct ipt_ip *ip,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 11 warnings, 2 checks, 104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
