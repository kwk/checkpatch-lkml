CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#31: 
keeping tracks of data pages written to the swap.  The structure itself is
                                                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: kernel/power/swsusp.c:282:
+	unsigned n = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_swap_map', this function's name, in a string
#153: FILE: kernel/power/swsusp.c:287:
+	pr_debug("alloc_swap_map(): nr_pages = %d\n", nr_pages);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: kernel/power/swsusp.c:345:
+		if ((error = write_page((unsigned long)swap_map, &entry)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: kernel/power/swsusp.c:360:
+	unsigned k;

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: kernel/power/swsusp.c:381:
+                                        struct swap_map_page *map)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: kernel/power/swsusp.c:381:
+                                        struct swap_map_page *map)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: kernel/power/swsusp.c:388:
+                                      unsigned long addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: kernel/power/swsusp.c:388:
+                                      unsigned long addr)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: kernel/power/swsusp.c:409:
+                           struct swap_map_handle *handle,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: kernel/power/swsusp.c:409:
+                           struct swap_map_handle *handle,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: kernel/power/swsusp.c:410:
+                           unsigned int nr_pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: kernel/power/swsusp.c:410:
+                           unsigned int nr_pages)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: kernel/power/swsusp.c:416:
+	printk("Saving image data pages (%u pages) ...     ", nr_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: kernel/power/swsusp.c:421:
+	for_each_pbe (p, pblist) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: kernel/power/swsusp.c:426:
+			printk("\b\b\b\b%3d%%", nr_pages / m);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#312: FILE: kernel/power/swsusp.c:430:
+		printk("\b\b\b\bdone\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: kernel/power/swsusp.c:483:
+                                              struct pbe *pbe)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/power/swsusp.c:483:
+                                              struct pbe *pbe)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: kernel/power/swsusp.c:503:
+                               struct swap_map_handle *handle)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: kernel/power/swsusp.c:503:
+                               struct swap_map_handle *handle)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#394: FILE: kernel/power/swsusp.c:510:
+	printk("Saving image metadata ... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: kernel/power/swsusp.c:524:
+		printk("done (%u pages saved)\n", n);

CHECK:CAMELCASE: Avoid CamelCase: <Free_image_entries>
#449: FILE: kernel/power/swsusp.c:572:
+		goto Free_image_entries;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Free_map_entries>
#454: FILE: kernel/power/swsusp.c:577:
+		goto Free_map_entries;

CHECK:CAMELCASE: Avoid CamelCase: <Free_swap_map>
#463: FILE: kernel/power/swsusp.c:583:
+Free_swap_map:

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: kernel/power/swsusp.c:802:
+                                      swp_entry_t start)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: kernel/power/swsusp.c:802:
+                                      swp_entry_t start)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: kernel/power/swsusp.c:917:
+                           struct swap_map_handle *handle,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/power/swsusp.c:917:
+                           struct swap_map_handle *handle,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: kernel/power/swsusp.c:918:
+                           unsigned int nr_pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: kernel/power/swsusp.c:918:
+                           unsigned int nr_pages)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#633: FILE: kernel/power/swsusp.c:926:
+	printk("Loading image data pages (%u pages) ...     ", nr_pages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#645: FILE: kernel/power/swsusp.c:938:
+			printk("\b\b\b\b%3d%%", nr_pages / m);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#650: FILE: kernel/power/swsusp.c:942:
+		printk("\b\b\b\bdone\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: kernel/power/swsusp.c:952:
+                                                struct pbe *pbe)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: kernel/power/swsusp.c:952:
+                                                struct pbe *pbe)$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#700: FILE: kernel/power/swsusp.c:975:
+	printk("Loading image metadata ... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#717: FILE: kernel/power/swsusp.c:989:
+		printk("done (%u pages loaded)\n", n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#838: FILE: kernel/power/power.h:67:
+extern unsigned int snapshot_nr_pages(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: kernel/power/power.h:68:
+extern struct pbe *snapshot_pblist(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#840: FILE: kernel/power/power.h:69:
+extern void snapshot_pblist_set(struct pbe *pblist);

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: kernel/power/snapshot.c:337:
+        } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: kernel/power/snapshot.c:337:
+        } else$

CHECK:BRACES: Unbalanced braces around else statement
#877: FILE: kernel/power/snapshot.c:337:
+        } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: kernel/power/snapshot.c:338:
+        ^Icreate_pbe_list(pblist, nr_pages);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#878: FILE: kernel/power/snapshot.c:338:
+        ^Icreate_pbe_list(pblist, nr_pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: kernel/power/snapshot.c:338:
+        ^Icreate_pbe_list(pblist, nr_pages);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#927: FILE: kernel/power/disk.c:28:
+extern int swsusp_write(struct pbe *pblist, unsigned int nr_pages);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#930: FILE: kernel/power/disk.c:30:
+extern int swsusp_read(struct pbe **pblist_ptr);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#948: FILE: kernel/power/disk.c:250:
+	if ((error = swsusp_read(&pagedir_nosave))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 29 warnings, 8 checks, 855 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
