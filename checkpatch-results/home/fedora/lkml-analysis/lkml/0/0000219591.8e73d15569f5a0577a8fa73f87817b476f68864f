WARNING:TYPO_SPELLING: 'aswell' may be misspelled - perhaps 'as well'?
#42: 
> native aswell.  Also this still has the useless inode * paramater in
         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'paramater' may be misspelled - perhaps 'parameter'?
#42: 
> native aswell.  Also this still has the useless inode * paramater in
                                                          ^^^^^^^^^

WARNING:TYPO_SPELLING: 'superceded' may be misspelled - perhaps 'superseded'?
#80: FILE: Documentation/filesystems/Locking:435:
+->ioctl() on regular files is superceded by the ->unlocked_ioctl() that
                               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#91: FILE: fs/compat.c:400:
+static void compat_ioctl_error(struct file *filp, unsigned int fd,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: fs/compat.c:401:
+static void compat_ioctl_error(struct file *filp, unsigned int fd,
+		unsigned int cmd, unsigned long arg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: fs/compat.c:415:
+	sprintf(buf,"'%c'", (cmd>>24) & 0x3f);
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#106: FILE: fs/compat.c:415:
+	sprintf(buf,"'%c'", (cmd>>24) & 0x3f);
 	                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: fs/compat.c:418:
+	printk("ioctl32(%s:%d): Unknown cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: fs/compat.c:419:
+	printk("ioctl32(%s:%d): Unknown cmd fd(%d) "
+			"cmd(%08x){%s} arg(%08x) on %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/compat.c:423:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#123: FILE: fs/compat.c:431:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: fs/compat.c:436:
+	if (!filp)
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#140: FILE: fs/compat.c:443:
+		error = filp->f_op->compat_ioctl(filp, cmd, arg);
 		                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#171: FILE: fs/compat.c:460:
+			compat_ioctl_error(filp, fd, cmd, arg);
 			                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: fs/compat.c:467:
+^Iif (t->handler) { $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#180: FILE: fs/compat.c:469:
+		error = t->handler(fd, cmd, arg, filp);
 		                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#237: FILE: fs/ioctl.c:19:
+static long do_ioctl(struct file *filp, unsigned int cmd,
                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: fs/ioctl.c:20:
+static long do_ioctl(struct file *filp, unsigned int cmd,
+		unsigned long arg)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#246: FILE: fs/ioctl.c:28:
+		error = filp->f_op->unlocked_ioctl(filp, cmd, arg);
 		                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#250: FILE: fs/ioctl.c:32:
+					  filp, cmd, arg);
 					  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#258: FILE: fs/ioctl.c:40:
+static int file_ioctl(struct file *filp, unsigned int cmd,
                                    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: fs/ioctl.c:41:
+static int file_ioctl(struct file *filp, unsigned int cmd,
+		unsigned long arg)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#281: FILE: fs/ioctl.c:74:
+	return do_ioctl(filp, cmd, arg);
 	                ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#311: FILE: fs/ioctl.c:123:
+				if (filp->f_op && filp->f_op->fasync) {
[...]
 				else error = -ENOTTY;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#329: FILE: fs/ioctl.c:153:
+				error = do_ioctl(filp, cmd, arg);
 				                 ^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#358: FILE: include/linux/fs.h:918:
+	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#358: FILE: include/linux/fs.h:918:
+	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#358: FILE: include/linux/fs.h:918:
+	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#358: FILE: include/linux/fs.h:918:
+	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#359: FILE: include/linux/fs.h:919:
+	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#359: FILE: include/linux/fs.h:919:
+	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#359: FILE: include/linux/fs.h:919:
+	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#359: FILE: include/linux/fs.h:919:
+	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 25 warnings, 5 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
