ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#161: FILE: drivers/char/selection.c:260:
+		if (! ((i + 2) % vc->vc_size_row)) {
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#273: FILE: drivers/char/vc_screen.c:361:
+			org0 = org = screen_pos(vc, p, viewed);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#310: FILE: drivers/char/vc_screen.c:393:
+				org0 = org = screen_pos(vc, p/2, viewed);
 				                             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#310: FILE: drivers/char/vc_screen.c:393:
+				org0 = org = screen_pos(vc, p/2, viewed);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#331: FILE: drivers/char/vc_screen.c:409:
+						org = screen_pos(vc, p/2, viewed);
 						                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'vc' may be better as '(vc)' to avoid precedence issues
#403: FILE: drivers/char/vt.c:218:
+#define IS_FG_VC(vc)		(vc == vc_cons[fg_console].d)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/char/vt.c:226:
+#define DO_UPDATE ^I^IIS_VISIBLE$

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/char/vt.c:267:
+	d = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#451: FILE: drivers/char/vt.c:267:
+	d = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#451: FILE: drivers/char/vt.c:267:
+	d = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);
 	                                                               ^

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/char/vt.c:268:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*(t+nr));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: drivers/char/vt.c:268:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*(t+nr));
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: drivers/char/vt.c:268:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*(t+nr));
 	                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: drivers/char/vt.c:268:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*(t+nr));
 	                                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#453: FILE: drivers/char/vt.c:269:
+	scr_memmovew(d, s, (b-t-nr) * vc_cons[currcons].d->vc_size_row);
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#453: FILE: drivers/char/vt.c:269:
+	scr_memmovew(d, s, (b-t-nr) * vc_cons[currcons].d->vc_size_row);
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#454: FILE: drivers/char/vt.c:270:
+	scr_memsetw(d + (b-t-nr) * vc_cons[currcons].d->vc_cols, video_erase_char,
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#454: FILE: drivers/char/vt.c:270:
+	scr_memsetw(d + (b-t-nr) * vc_cons[currcons].d->vc_cols, video_erase_char,
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/char/vt.c:271:
+	scr_memsetw(d + (b-t-nr) * vc_cons[currcons].d->vc_cols, video_erase_char,
+			vc_cons[currcons].d->vc_size_row * nr);

CHECK:SPACING: No space is necessary after a cast
#471: FILE: drivers/char/vt.c:286:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#471: FILE: drivers/char/vt.c:286:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#471: FILE: drivers/char/vt.c:286:
+	s = (unsigned short *) (origin+vc_cons[currcons].d->vc_size_row*t);
 	                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#473: FILE: drivers/char/vt.c:288:
+	scr_memmovew(s + step, s, (b-t-nr)*vc_cons[currcons].d->vc_size_row);
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#473: FILE: drivers/char/vt.c:288:
+	scr_memmovew(s + step, s, (b-t-nr)*vc_cons[currcons].d->vc_size_row);
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#473: FILE: drivers/char/vt.c:288:
+	scr_memmovew(s + step, s, (b-t-nr)*vc_cons[currcons].d->vc_size_row);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#508: FILE: drivers/char/vt.c:315:
+					vc->vc_sw->con_putcs(vc, q, p-q, yy, startx);
 					                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#517: FILE: drivers/char/vt.c:325:
+			vc->vc_sw->con_putcs(vc, q, p-q, yy, startx);
 			                             ^

CHECK:SPACING: No space is necessary after a cast
#597: FILE: drivers/char/vt.c:441:
+		do_update_region(vc, (unsigned long) p, count);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#650: FILE: drivers/char/vt.c:486:
+			      vc_cons[currcons].d->vc_cols-x-nr);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#650: FILE: drivers/char/vt.c:486:
+			      vc_cons[currcons].d->vc_cols-x-nr);
 			                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#668: FILE: drivers/char/vt.c:509:
+			      vc_cons[currcons].d->vc_cols-x-nr);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#668: FILE: drivers/char/vt.c:509:
+			      vc_cons[currcons].d->vc_cols-x-nr);
 			                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#674: FILE: drivers/char/vt.c:514:
+				     vc_cons[currcons].d->vc_cols-1-nr);
 				                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#674: FILE: drivers/char/vt.c:514:
+				     vc_cons[currcons].d->vc_cols-1-nr);
 				                                   ^

CHECK:SPACING: No space is necessary after a cast
#686: FILE: drivers/char/vt.c:523:
+	int i = scr_readw((u16 *) vc->vc_pos);

CHECK:SPACING: No space is necessary after a cast
#698: FILE: drivers/char/vt.c:533:
+	scr_writew(i, (u16 *) vc->vc_pos);

CHECK:BRACES: braces {} should be used on all arms of this statement
#746: FILE: drivers/char/vt.c:562:
+	if (vc->vc_deccm) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#752: FILE: drivers/char/vt.c:568:
+	} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#762: FILE: drivers/char/vt.c:582:
+	pos = origin + vc_cons[currcons].d->vc_size_row*y + 2*x;
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#762: FILE: drivers/char/vt.c:582:
+	pos = origin + vc_cons[currcons].d->vc_size_row*y + 2*x;
 	                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#789: FILE: drivers/char/vt.c:661:
+			do_update_region(vc_cons[currcons].d, origin, screenbuf_size/2);
 			                                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/char/vt.c:696:
+    vc_cons[currcons].d->vc_can_do_color = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/char/vt.c:699:
+        complement_mask =$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/char/vt.c:699:
+        complement_mask =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: drivers/char/vt.c:702:
+    vc_cons[currcons].d->vc_size_row = vc_cons[currcons].d->vc_cols<<1;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#810: FILE: drivers/char/vt.c:702:
+    vc_cons[currcons].d->vc_size_row = vc_cons[currcons].d->vc_cols<<1;
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: drivers/char/vt.c:703:
+    screenbuf_size = vc_cons[currcons].d->vc_rows * vc_cons[currcons].d->vc_size_row;$

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: drivers/char/vt.c:921:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/char/vt.c:928:
+ ^Iif (vc->vc_decom) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: drivers/char/vt.c:928:
+ ^Iif (vc->vc_decom) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/char/vt.c:928:
+ ^Iif (vc->vc_decom) {$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#939: FILE: drivers/char/vt.c:941:
+	vc->vc_pos = vc->vc_origin + vc->vc_y * vc->vc_size_row + (vc->vc_x<<1);
 	                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#947: FILE: drivers/char/vt.c:948:
+	gotoxy(vc_cons[currcons].d, new_x, decom ? (top+new_y) : new_y);
 	                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#956: FILE: drivers/char/vt.c:956:
+		lines = vc_cons[currcons].d->vc_rows/2;
 		                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#965: FILE: drivers/char/vt.c:965:
+		lines = vc_cons[currcons].d->vc_rows/2;
 		                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#974: FILE: drivers/char/vt.c:976:
+	else if (y < vc_cons[currcons].d->vc_rows-1) {
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#995: FILE: drivers/char/vt.c:1029:
+					      vc_cons[currcons].d->vc_cols-x);
 					                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#999: FILE: drivers/char/vt.c:1031:
+					      vc_cons[currcons].d->vc_rows-y-1,
 					                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#999: FILE: drivers/char/vt.c:1031:
+					      vc_cons[currcons].d->vc_rows-y-1,
 					                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1032: FILE: drivers/char/vt.c:1068:
+			count = vc_cons[currcons].d->vc_cols-x;
 			                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1037: FILE: drivers/char/vt.c:1072:
+					      vc_cons[currcons].d->vc_cols-x);
 					                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1059: FILE: drivers/char/vt.c:1101:
+	count = (vpar > vc_cons[currcons].d->vc_cols-x) ? (vc_cons[currcons].d->vc_cols-x) : vpar;
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1059: FILE: drivers/char/vt.c:1101:
+	count = (vpar > vc_cons[currcons].d->vc_cols-x) ? (vc_cons[currcons].d->vc_cols-x) : vpar;
 	                                                                               ^

CHECK:SPACING: No space is necessary after a cast
#1068: FILE: drivers/char/vt.c:1274:
+				(void) vc_resize(deccolm ? 132 : 80, vc_cons[currcons].d->vc_rows);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: drivers/char/vt.c:1330:
+			if (vc_cons[currcons].d->vc_can_do_color &&
+					par[1] < 16) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1096: FILE: drivers/char/vt.c:1338:
+			if (vc_cons[currcons].d->vc_can_do_color &&
+					par[1] < 16) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: drivers/char/vt.c:1444:
+	gotoxy(vc_cons[currcons].d,saved_x,saved_y);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: drivers/char/vt.c:1444:
+	gotoxy(vc_cons[currcons].d,saved_x,saved_y);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1190: FILE: drivers/char/vt.c:1729:
+			gotoxy(vc_cons[currcons].d, x, y-par[0]);
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1195: FILE: drivers/char/vt.c:1733:
+			gotoxy(vc_cons[currcons].d, x, y+par[0]);
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1200: FILE: drivers/char/vt.c:1737:
+			gotoxy(vc_cons[currcons].d, x+par[0], y);
 			                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1205: FILE: drivers/char/vt.c:1741:
+			gotoxy(vc_cons[currcons].d, x-par[0], y);
 			                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1210: FILE: drivers/char/vt.c:1745:
+			gotoxy(vc_cons[currcons].d, 0, y+par[0]);
 			                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1215: FILE: drivers/char/vt.c:1749:
+			gotoxy(vc_cons[currcons].d, 0, y-par[0]);
 			                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1237: FILE: drivers/char/vt.c:1853:
+			do_update_region(vc_cons[currcons].d, origin, screenbuf_size/2);
 			                                                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1331: FILE: drivers/char/vt.c:2515:
+	vc_cons[currcons].d->vc_size_row = cols<<1;
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1345: FILE: drivers/char/vt.c:2573:
+^I^Ivc_init(currcons, vc_cons[currcons].d->vc_rows, vc_cons[currcons].d->vc_cols, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1369: FILE: drivers/char/vt.c:2697:
+		pos = origin + vc_cons[currcons].d->vc_size_row*y + 2*x;
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1369: FILE: drivers/char/vt.c:2697:
+		pos = origin + vc_cons[currcons].d->vc_size_row*y + 2*x;
 		                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1472: FILE: drivers/char/vt_ioctl.c:40:
+#define VT_BUSY(i)	(VT_IS_IN_USE(i) || i == fg_console || vc_cons[i].d == sel_cons)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1527: FILE: include/linux/selection.h:29:
+extern unsigned short *screen_pos(struct vc_data *vc, int w_offset, int viewed);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1528: FILE: include/linux/selection.h:30:
+extern u16 screen_glyph(struct vc_data *vc, int offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1529: FILE: include/linux/selection.h:31:
+extern void complement_pos(struct vc_data *vc, int offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1530: FILE: include/linux/selection.h:32:
+extern void invert_screen(struct vc_data *vc, int offset, int count, int shift);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1534: FILE: include/linux/selection.h:34:
+extern void getconsxy(struct vc_data *vc, unsigned char *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1535: FILE: include/linux/selection.h:35:
+extern void putconsxy(struct vc_data *vc, unsigned char *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1539: FILE: include/linux/selection.h:37:
+extern u16 vcs_scr_readw(struct vc_data *vc, const u16 *org);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1540: FILE: include/linux/selection.h:38:
+extern void vcs_scr_writew(struct vc_data *vc, u16 val, u16 *org);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 7 warnings, 75 checks, 1399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
