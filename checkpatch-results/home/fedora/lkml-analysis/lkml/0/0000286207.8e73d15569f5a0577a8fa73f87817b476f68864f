CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
Jörn
 ^

WARNING:TYPO_SPELLING: 'sais' may be misspelled - perhaps 'says'?
#40: 
Adds a new syscall, copyfile() which does as the name sais.
                                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
--- linux-2.6.5cow/arch/i386/kernel/entry.S~copyfile	2004-04-14 16:22:15.000000000 +0200

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: fs/namei.c:2282:
+		int error = vfs_unlink(new_nd->dentry->d_inode, new_dentry);
+		BUG_ON(error);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#136: FILE: fs/namei.c:2282:
+		BUG_ON(error);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: fs/namei.c:2284:
+		 * on */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: fs/namei.c:2309:
+	ret = __user_walk(to, LOOKUP_PARENT|LOOKUP_OPEN|LOOKUP_CREATE, &new_nd);
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: fs/namei.c:2309:
+	ret = __user_walk(to, LOOKUP_PARENT|LOOKUP_OPEN|LOOKUP_CREATE, &new_nd);
 	                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: fs/read_write.c:543:
+	struct inode * in_inode, * out_inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#195: FILE: fs/read_write.c:543:
+	struct inode * in_inode, * out_inode;
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: fs/read_write.c:571:
+	ret = security_file_permission (out_file, MAY_WRITE);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#246: FILE: fs/read_write.c:594:
+EXPORT_SYMBOL(vfs_sendfile);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#319: FILE: include/linux/fs.h:880:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#319: FILE: include/linux/fs.h:880:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#319: FILE: include/linux/fs.h:880:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#319: FILE: include/linux/fs.h:880:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#319: FILE: include/linux/fs.h:880:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: include/linux/syscalls.h:282:
+asmlinkage long sys_copyfile(const char __user *from, const char __user *to,
+				umode_t mode);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 4 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
