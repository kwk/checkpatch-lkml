WARNING:TYPO_SPELLING: 'wich' may be misspelled - perhaps 'which'?
#17: 
Subject: Re: [PATCH] Re: New feature: Removal of the exceptions wich belongs
                                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
| Tiago (sapuglha@yahoo.com.br) and I (julianofs@pop.com.br) fixed the patch

WARNING:TYPO_SPELLING: 'wich' may be misspelled - perhaps 'which'?
#72: 
| Subject: Re: New feature: Removal of the exceptions wich belongs to the init
                                                      ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/i386/kernel/module.c:40:
+{^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: include/asm-i386/uaccess.h:127:
+static inline int extable_cmp(const struct exception_table_entry ex1, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: include/asm-i386/uaccess.h:128:
+                const struct exception_table_entry ex2)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: include/asm-i386/uaccess.h:128:
+static inline int extable_cmp(const struct exception_table_entry ex1, 
+                const struct exception_table_entry ex2)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: include/asm-i386/uaccess.h:128:
+                const struct exception_table_entry ex2)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: include/asm-i386/uaccess.h:131:
+}           $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#320: FILE: include/asm-i386/uaccess.h:133:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: include/linux/moduleloader.h:49:
+                   struct exception_table_entry *finish);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: include/linux/moduleloader.h:49:
+                   struct exception_table_entry *finish);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: kernel/extable.c:51:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: kernel/extable.c:55:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: kernel/extable.c:72:
+^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: kernel/module.c:1085:
+void remove_init_exceptions(struct module *mod) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#393: FILE: kernel/module.c:1089:
+	int num_init_ex=0;
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: kernel/module.c:1097:
+^I^Iif (within((unsigned long) local->insn, mod->module_init, $

CHECK:SPACING: No space is necessary after a cast
#401: FILE: kernel/module.c:1097:
+		if (within((unsigned long) local->insn, mod->module_init, 

CHECK:BRACES: braces {} should be used on all arms of this statement
#401: FILE: kernel/module.c:1097:
+		if (within((unsigned long) local->insn, mod->module_init, 
[...]
+		else break;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: kernel/module.c:1098:
+^I^I            mod->init_size)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: kernel/module.c:1098:
+		if (within((unsigned long) local->insn, mod->module_init, 
+		            mod->init_size)) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#405: FILE: kernel/module.c:1101:
+		else break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#405: FILE: kernel/module.c:1101:
+		}
+		else break;

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#406: FILE: kernel/module.c:1102:
+		local = local+1;
 		             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#417: FILE: kernel/module.c:1113:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: kernel/module.c:1654:
+        /* Classifying the exception table */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: kernel/module.c:1655:
+        sort_ex_table((struct exception_table_entry *)mod->extable,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/module.c:1655:
+        sort_ex_table((struct exception_table_entry *)mod->extable,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: kernel/module.c:1656:
+                      (struct exception_table_entry *)mod->extable +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/module.c:1656:
+                      (struct exception_table_entry *)mod->extable +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: kernel/module.c:1657:
+                                mod->num_exentries);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/module.c:1657:
+                                mod->num_exentries);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 8 warnings, 8 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000318109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
