WARNING:TYPO_SPELLING: 'allways' may be misspelled - perhaps 'always'?
#27: 
>obeserved hang behavior allways reproducable with kernels 2.4.16, 
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
>ACPI or APM, tried compiles with gcc-2.95.4, gcc-3.0.1, gcc-3.0.2, gcc-3.0.3

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#30: 
>This hangs occures allways when APIC support on uniprocessors is 
            ^^^^^^^

WARNING:TYPO_SPELLING: 'sheme' may be misspelled - perhaps 'scheme'?
#31: 
>compiled in, no matter what power managemnet sheme is used. It never 
                                              ^^^^^

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#32: 
>occures when APIC is not present, no matter of which kernel version 
 ^^^^^^^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#56: FILE: arch/i386/kernel/apic.c:574:
+int dont_enable_local_apic __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#74: FILE: arch/i386/kernel/apic.c:902:
+int dont_use_local_apic_timer __initdata = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: arch/i386/kernel/dmi_scan.c:159:
+	dmi_ident[slot] = alloc_bootmem(strlen(p)+1);
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#135: FILE: arch/i386/kernel/dmi_scan.c:427:
+	extern int dont_enable_local_apic;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: arch/i386/kernel/dmi_scan.c:428:
+	extern int dont_enable_local_apic;
+	if (!dont_enable_local_apic) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: arch/i386/kernel/dmi_scan.c:430:
+		printk(KERN_WARNING "%s with broken BIOS detected. "

WARNING:SPLIT_STRING: quoted string split across lines
#139: FILE: arch/i386/kernel/dmi_scan.c:431:
+		printk(KERN_WARNING "%s with broken BIOS detected. "
+		       "Refusing to enable the local APIC.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#153: FILE: arch/i386/kernel/dmi_scan.c:445:
+	extern int dont_use_local_apic_timer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: arch/i386/kernel/dmi_scan.c:446:
+	extern int dont_use_local_apic_timer;
+	if (apm_info.bios.version && !dont_use_local_apic_timer) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#156: FILE: arch/i386/kernel/dmi_scan.c:448:
+		printk(KERN_WARNING "%s with broken BIOS detected. "

WARNING:SPLIT_STRING: quoted string split across lines
#157: FILE: arch/i386/kernel/dmi_scan.c:449:
+		printk(KERN_WARNING "%s with broken BIOS detected. "
+		       "The local APIC timer will not be used.\n",

CHECK:SPACING: No space is necessary after a cast
#309: FILE: arch/i386/mm/ioremap.c:207:
+	return (void*) (offset + fix_to_virt(FIX_BTMAP_BEGIN));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#309: FILE: arch/i386/mm/ioremap.c:207:
+	return (void*) (offset + fix_to_virt(FIX_BTMAP_BEGIN));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: include/asm-i386/io.h:105:
+extern void *bt_ioremap(unsigned long offset, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#368: FILE: include/asm-i386/io.h:106:
+extern void bt_iounmap(void *addr, unsigned long size);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 4 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
