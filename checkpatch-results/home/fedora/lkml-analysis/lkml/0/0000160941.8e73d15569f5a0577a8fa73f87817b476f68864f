WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
found in some IBM eServer xSeries machines. This driver is based on the ugly

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/char/watchdog/ibmasr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#64: FILE: drivers/char/watchdog/ibmasr.c:24:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#65: FILE: drivers/char/watchdog/ibmasr.c:25:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#67: FILE: drivers/char/watchdog/ibmasr.c:27:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: drivers/char/watchdog/ibmasr.c:65:
+
+

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: drivers/char/watchdog/ibmasr.c:119:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#190: FILE: drivers/char/watchdog/ibmasr.c:150:
+		asr_read_addr = asr_write_addr =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: drivers/char/watchdog/ibmasr.c:166:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/char/watchdog/ibmasr.c:168:
+^I^I * Only the lower 16 bits are valid, but the address is word $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/char/watchdog/ibmasr.c:175:
+^I^Iasr_read_addr = asr_write_addr = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#215: FILE: drivers/char/watchdog/ibmasr.c:175:
+		asr_read_addr = asr_write_addr = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: drivers/char/watchdog/ibmasr.c:179:
+^I^Iasr_length = JASPER_ASR_REG_OFFSET + 1; $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#236: FILE: drivers/char/watchdog/ibmasr.c:196:
+		asr_read_addr = asr_write_addr = asr_base;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#244: FILE: drivers/char/watchdog/ibmasr.c:204:
+		asr_read_addr = asr_write_addr = asr_base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#251: FILE: drivers/char/watchdog/ibmasr.c:211:
+		printk(KERN_ERR PFX "address %#x already in use\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/char/watchdog/ibmasr.c:212:
+		printk(KERN_ERR PFX "address %#x already in use\n",
+			asr_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: drivers/char/watchdog/ibmasr.c:216:
+	printk(KERN_INFO PFX "found %sASR @ addr %#x\n", type, asr_base);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: drivers/char/watchdog/ibmasr.c:221:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: drivers/char/watchdog/ibmasr.c:234:
+				char c;
+				if (get_user(c, buf + i))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#297: FILE: drivers/char/watchdog/ibmasr.c:257:
+	switch (cmd) {
+		case WDIOC_GETSUPPORT:
[...]
+		case WDIOC_GETSTATUS:
+		case WDIOC_GETBOOTSTATUS:
[...]
+		case WDIOC_KEEPALIVE:
[...]
+		case WDIOC_SETTIMEOUT:
[...]
+		case WDIOC_GETTIMEOUT:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/char/watchdog/ibmasr.c:259:
+^I^I^Ireturn copy_to_user(argp, &ident, sizeof(ident)) ? $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#310: FILE: drivers/char/watchdog/ibmasr.c:270:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: drivers/char/watchdog/ibmasr.c:306:
+	if(test_and_set_bit(0, &asr_is_open))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#357: FILE: drivers/char/watchdog/ibmasr.c:317:
+	if (asr_expect_close == 42)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#359: FILE: drivers/char/watchdog/ibmasr.c:319:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#360: FILE: drivers/char/watchdog/ibmasr.c:320:
+		printk(KERN_CRIT PFX "unexpected close, not stopping watchdog!\n");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#368: FILE: drivers/char/watchdog/ibmasr.c:328:
+static struct file_operations asr_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: drivers/char/watchdog/ibmasr.c:343:
+
+

WARNING:MISPLACED_INIT: __initdata should be placed after ibmasr_id_table[]
#389: FILE: drivers/char/watchdog/ibmasr.c:349:
+static struct ibmasr_id __initdata ibmasr_id_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/char/watchdog/ibmasr.c:368:
+^I} $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#415: FILE: drivers/char/watchdog/ibmasr.c:375:
+		printk(KERN_ERR PFX "failed to register misc device\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 13 checks, 430 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
