WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: src/getkeycodes.c:24:
+    int fd, sc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: src/getkeycodes.c:26:
+    int old_kernel = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: src/getkeycodes.c:41:
+    a.scancode = 0; /* Old kernels don't support */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: src/getkeycodes.c:42:
+    a.keycode = 0;  /* scancodes below SC_LIM. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: src/getkeycodes.c:43:
+    if (ioctl(fd,KDGETKEYCODE,&a))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: src/getkeycodes.c:43:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#80: FILE: src/getkeycodes.c:43:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#80: FILE: src/getkeycodes.c:43:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: src/getkeycodes.c:44:
+        old_kernel = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: src/getkeycodes.c:44:
+        old_kernel = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: src/getkeycodes.c:48:
+    if (old_kernel) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: src/getkeycodes.c:49:
+        printf(_("0 is an error; for 1-88 (0x01-0x58) scancode equals keycode\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: src/getkeycodes.c:49:
+        printf(_("0 is an error; for 1-88 (0x01-0x58) scancode equals keycode\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: src/getkeycodes.c:51:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: src/getkeycodes.c:53:
+    while (1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#95: FILE: src/getkeycodes.c:54:
+	if (old_kernel) {
+	  if (sc == 128)

WARNING:TABSTOP: Statements should start on a tabstop
#96: FILE: src/getkeycodes.c:55:
+	  if (sc == 128)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#96: FILE: src/getkeycodes.c:55:
+	  if (sc == 128)
+            printf(_("\n\nEscaped scancodes e0 xx (hex)\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: src/getkeycodes.c:56:
+            printf(_("\n\nEscaped scancodes e0 xx (hex)\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: src/getkeycodes.c:56:
+            printf(_("\n\nEscaped scancodes e0 xx (hex)\n"));$

WARNING:TABSTOP: Statements should start on a tabstop
#98: FILE: src/getkeycodes.c:57:
+	  if (sc == 256) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#98: FILE: src/getkeycodes.c:57:
+	  if (sc == 256) {
+            printf("\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: src/getkeycodes.c:58:
+            printf("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: src/getkeycodes.c:58:
+            printf("\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: src/getkeycodes.c:59:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: src/getkeycodes.c:59:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: src/getkeycodes.c:60:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: src/getkeycodes.c:60:
+          }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: src/getkeycodes.c:61:
+        }^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: src/getkeycodes.c:61:
+        }^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: src/getkeycodes.c:61:
+        }^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#103: FILE: src/getkeycodes.c:62:
 	if (sc % 8 == 0) {
+            if (old_kernel) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: src/getkeycodes.c:63:
+            if (old_kernel) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: src/getkeycodes.c:63:
+            if (old_kernel) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#113: FILE: src/getkeycodes.c:63:
+            if (old_kernel) {
+	      if (sc < 128)

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: src/getkeycodes.c:63:
+            if (old_kernel) {
[...]
+	    } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: src/getkeycodes.c:64:
+	      if (sc < 128)

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: src/getkeycodes.c:65:
+^I        printf("\n 0x%02x: ", sc);$

WARNING:TABSTOP: Statements should start on a tabstop
#116: FILE: src/getkeycodes.c:66:
+	      else

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: src/getkeycodes.c:67:
+^I        printf("\ne0 %02x: ", sc-128);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#117: FILE: src/getkeycodes.c:67:
+	        printf("\ne0 %02x: ", sc-128);
 	                                ^

WARNING:TABSTOP: Statements should start on a tabstop
#118: FILE: src/getkeycodes.c:68:
+	    } else

CHECK:BRACES: Unbalanced braces around else statement
#118: FILE: src/getkeycodes.c:68:
+	    } else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: src/getkeycodes.c:69:
+^I^Iprintf("\n 0x%04x: ", sc); $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#124: FILE: src/getkeycodes.c:73:
 	if (ioctl(fd,KDGETKEYCODE,&a)) {
+	    if (errno == EINVAL) {

WARNING:TABSTOP: Statements should start on a tabstop
#126: FILE: src/getkeycodes.c:74:
+	    if (errno == EINVAL) {

WARNING:TABSTOP: Statements should start on a tabstop
#133: FILE: src/getkeycodes.c:80:
+	    } else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: src/setkeycodes.c:30:
+    int fd, sc, old_kernel = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: src/setkeycodes.c:46:
+    a.scancode = 0; /* Old kernels don't support */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: src/setkeycodes.c:47:
+    a.keycode = 0;  /* scancodes below SC_LIM. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: src/setkeycodes.c:48:
+    if (ioctl(fd,KDGETKEYCODE,&a))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: src/setkeycodes.c:48:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#164: FILE: src/setkeycodes.c:48:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#164: FILE: src/setkeycodes.c:48:
+    if (ioctl(fd,KDGETKEYCODE,&a))
                               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#173: FILE: src/setkeycodes.c:56:
+	if ((a.scancode & ~0xff) == 0xe000) {
 	    a.scancode -= 0xe000;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: src/setkeycodes.c:58:
+            a.scancode += old_kernel ? 128 : 256;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: src/setkeycodes.c:58:
+            a.scancode += old_kernel ? 128 : 256;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 35 warnings, 3 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
