ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#29: 
--- a/drivers/usb/core/hcd.c	Thu Dec  5 01:19:10 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#35: FILE: drivers/usb/core/hcd.c:83:
+EXPORT_SYMBOL (usb_bus_list);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#43: FILE: drivers/usb/core/hcd.c:94:
+EXPORT_SYMBOL (usb_bus_list_lock);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: security/Kconfig:25:
+config SECURITY_ROOTPLUG
+	tristate "Root Plug Support"
+	depends on SECURITY!=n
+	help
+	  This is a sample LSM module that should only be used as such.
+	  It enables control over processes being created by root users

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: security/Kconfig:32:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: security/root_plug.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#122: FILE: security/root_plug.c:43:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#136: FILE: security/root_plug.c:57:
+			printk(KERN_DEBUG "%s: %s: " fmt ,	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#136: FILE: security/root_plug.c:57:
+			printk(KERN_DEBUG "%s: %s: " fmt ,	\
 			                                 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: security/root_plug.c:58:
+^I^I^I^IMY_NAME , __FUNCTION__ , ^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#137: FILE: security/root_plug.c:58:
+				MY_NAME , __FUNCTION__ , 	\
 				        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#137: FILE: security/root_plug.c:58:
+				MY_NAME , __FUNCTION__ , 	\
 				                       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#137: FILE: security/root_plug.c:58:
+				MY_NAME , __FUNCTION__ , 	\

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#142: FILE: security/root_plug.c:63:
+extern struct semaphore usb_bus_list_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: security/root_plug.c:65:
+static int match_device (struct usb_device *dev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: security/root_plug.c:70:
+	dbg ("looking at vendor %d, product %d\n",

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#150: FILE: security/root_plug.c:71:
+	     dev->descriptor.idVendor,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#151: FILE: security/root_plug.c:72:
+	     dev->descriptor.idProduct);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->descriptor.idVendor == vendor_id'
#154: FILE: security/root_plug.c:75:
+	if ((dev->descriptor.idVendor == vendor_id) &&
+	    (dev->descriptor.idProduct == product_id)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->descriptor.idProduct == product_id'
#154: FILE: security/root_plug.c:75:
+	if ((dev->descriptor.idVendor == vendor_id) &&
+	    (dev->descriptor.idProduct == product_id)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: security/root_plug.c:77:
+		dbg ("found the device!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: security/root_plug.c:85:
+			retval = match_device (dev->children[child]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: security/root_plug.c:94:
+static int find_usb_device (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: security/root_plug.c:99:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: security/root_plug.c:100:
+	down (&usb_bus_list_lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: security/root_plug.c:102:
+^I     buslist != &usb_bus_list; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: security/root_plug.c:104:
+		bus = container_of (buslist, struct usb_bus, bus_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: security/root_plug.c:110:
+	up (&usb_bus_list_lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: security/root_plug.c:113:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#193: FILE: security/root_plug.c:114:
+	
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: security/root_plug.c:115:
+static int rootplug_bprm_check_security (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: security/root_plug.c:117:
+	dbg ("file %s, e_uid = %d, e_gid = %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: security/root_plug.c:122:
+			dbg ("e_gid = 0, and device not found, "

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: security/root_plug.c:123:
+			dbg ("e_gid = 0, and device not found, "
+				"task not allowed to run...\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: security/root_plug.c:149:
+static int __init rootplug_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: security/root_plug.c:152:
+	if (register_security (&rootplug_security_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&rootplug_security_ops'
#231: FILE: security/root_plug.c:152:
+	if (register_security (&rootplug_security_ops)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: security/root_plug.c:153:
+^I^Iprintk (KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#232: FILE: security/root_plug.c:153:
+		printk (KERN_INFO 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: security/root_plug.c:153:
+		printk (KERN_INFO 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: security/root_plug.c:156:
+		if (mod_reg_security (MY_NAME, &rootplug_security_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#236: FILE: security/root_plug.c:157:
+			printk (KERN_INFO "Failure registering Root Plug "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: security/root_plug.c:157:
+			printk (KERN_INFO "Failure registering Root Plug "

WARNING:SPLIT_STRING: quoted string split across lines
#237: FILE: security/root_plug.c:158:
+			printk (KERN_INFO "Failure registering Root Plug "
+				" module with primary security module.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#242: FILE: security/root_plug.c:163:
+	printk (KERN_INFO "Root Plug module initialized, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: security/root_plug.c:163:
+	printk (KERN_INFO "Root Plug module initialized, "

WARNING:SPLIT_STRING: quoted string split across lines
#243: FILE: security/root_plug.c:164:
+	printk (KERN_INFO "Root Plug module initialized, "
+		"vendor_id = %4.4x, product id = %4.4x\n", vendor_id, product_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: security/root_plug.c:168:
+static void __exit rootplug_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: security/root_plug.c:172:
+		if (mod_unreg_security (MY_NAME, &rootplug_security_ops))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#252: FILE: security/root_plug.c:173:
+			printk (KERN_INFO "Failure unregistering Root Plug "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: security/root_plug.c:173:
+			printk (KERN_INFO "Failure unregistering Root Plug "

WARNING:SPLIT_STRING: quoted string split across lines
#253: FILE: security/root_plug.c:174:
+			printk (KERN_INFO "Failure unregistering Root Plug "
+				" module with primary module.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: security/root_plug.c:175:
+^I} else { $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: security/root_plug.c:176:
+		if (unregister_security (&rootplug_security_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&rootplug_security_ops'
#255: FILE: security/root_plug.c:176:
+		if (unregister_security (&rootplug_security_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: security/root_plug.c:177:
+			printk (KERN_INFO "Failure unregistering Root Plug "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: security/root_plug.c:177:
+			printk (KERN_INFO "Failure unregistering Root Plug "

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: security/root_plug.c:178:
+			printk (KERN_INFO "Failure unregistering Root Plug "
+				"module with the kernel\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#260: FILE: security/root_plug.c:181:
+	printk (KERN_INFO "Root Plug module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: security/root_plug.c:181:
+	printk (KERN_INFO "Root Plug module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: security/root_plug.c:184:
+module_init (rootplug_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: security/root_plug.c:185:
+module_exit (rootplug_exit);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 44 warnings, 7 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000409081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
