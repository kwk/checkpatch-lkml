WARNING:TYPO_SPELLING: 'alltogether' may be misspelled - perhaps 'altogether'?
#47: 
alltogether, which should save the above space, and make the embedded
^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#72: FILE: arch/arm/kernel/ptrace.c:722:
+		if ((ret = security_ptrace(current->parent, current)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#85: FILE: arch/i386/kernel/ptrace.c:163:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#98: FILE: arch/ia64/kernel/ptrace.c:1104:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#111: FILE: arch/ppc/kernel/ptrace.c:169:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#124: FILE: arch/ppc64/kernel/ptrace.c:62:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#137: FILE: arch/ppc64/kernel/ptrace32.c:51:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#158: FILE: arch/ppc64/kernel/sys_ppc32.c:3523:
+	if ((retval = security_bprm_alloc(&bprm)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#189: FILE: arch/s390/kernel/ptrace.c:333:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: arch/s390x/kernel/ptrace.c:572:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: arch/sparc/kernel/ptrace.c:294:
+		if ((ret = security_ptrace(current->parent, current))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#236: FILE: arch/sparc64/kernel/ptrace.c:143:
+		if ((ret = security_ptrace(current->parent, current))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: arch/sparc64/kernel/sys_sparc32.c:2975:
+	if ((retval = security_bprm_alloc(&bprm)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#280: FILE: arch/um/kernel/ptrace.c:36:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#293: FILE: arch/x86_64/kernel/ptrace.c:181:
+		if ((ret = security_ptrace(current->parent, current)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#330: FILE: fs/attr.c:156:
+		if (!(error = security_inode_setattr(dentry, attr)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#357: FILE: fs/dquot.c:1309:
+	if ((error = security_quota_on(f)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#378: FILE: fs/exec.c:822:
+	if ((retval = security_bprm_set(bprm)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#397: FILE: fs/exec.c:939:
+	if ((retval = security_bprm_check(bprm)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#407: FILE: fs/exec.c:1035:
+	if ((retval = security_bprm_alloc(&bprm)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#438: FILE: fs/fcntl.c:277:
+	if ((err = security_file_set_fowner(filp)))
 	                                    ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#438: FILE: fs/fcntl.c:277:
+	if ((err = security_file_set_fowner(filp)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#448: FILE: fs/fcntl.c:370:
+	if ((err = security_file_fcntl(filp, cmd, arg))) {
 	                               ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#448: FILE: fs/fcntl.c:370:
+	if ((err = security_file_fcntl(filp, cmd, arg))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#458: FILE: fs/fcntl.c:393:
+	if ((err = security_file_fcntl(filp, cmd, arg))) {
 	                               ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#458: FILE: fs/fcntl.c:393:
+	if ((err = security_file_fcntl(filp, cmd, arg))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#540: FILE: fs/ioctl.c:62:
+	if ((error = security_file_ioctl(filp, cmd, arg))) {
 	                                 ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#540: FILE: fs/ioctl.c:62:
+	if ((error = security_file_ioctl(filp, cmd, arg))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#561: FILE: fs/locks.c:1174:
+	if ((error = security_file_lock(filp, arg)))
 	                                ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#561: FILE: fs/locks.c:1174:
+	if ((error = security_file_lock(filp, arg)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#571: FILE: fs/locks.c:1287:
+	if ((error = security_file_lock(filp, cmd)))
 	                                ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#571: FILE: fs/locks.c:1287:
+	if ((error = security_file_lock(filp, cmd)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#581: FILE: fs/locks.c:1436:
+	if ((error = security_file_lock(filp, file_lock->fl_type)))
 	                                ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#581: FILE: fs/locks.c:1436:
+	if ((error = security_file_lock(filp, file_lock->fl_type)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#591: FILE: fs/locks.c:1575:
+	if ((error = security_file_lock(filp, file_lock->fl_type)))
 	                                ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#591: FILE: fs/locks.c:1575:
+	if ((error = security_file_lock(filp, file_lock->fl_type)))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#631: FILE: fs/namei.c:416:
+	if ((err = security_inode_follow_link(dentry, nd)))
 	                                              ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#631: FILE: fs/namei.c:416:
+	if ((err = security_inode_follow_link(dentry, nd)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#650: FILE: fs/namei.c:1127:
+	if ((error = security_inode_create(dir, dentry, mode)))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#667: FILE: fs/namei.c:1345:
+	if ((error = security_inode_follow_link(dentry, nd)))
 	                                                ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#667: FILE: fs/namei.c:1345:
+	if ((error = security_inode_follow_link(dentry, nd)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#677: FILE: fs/namei.c:1410:
+	if ((error = security_inode_mknod(dir, dentry, mode, dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#695: FILE: fs/namei.c:1477:
+	if ((error = security_inode_mkdir(dir, dentry, mode)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#703: FILE: fs/namei.c:1484:
+		security_inode_post_mkdir(dir,dentry, mode);
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#713: FILE: fs/namei.c:1568:
+		if (!(error = security_inode_rmdir(dir, dentry))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#723: FILE: fs/namei.c:1641:
+		if (!(error = security_inode_unlink(dir, dentry)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#735: FILE: fs/namei.c:1704:
+	if ((error = security_inode_symlink(dir, dentry, oldname)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#753: FILE: fs/namei.c:1774:
+	if ((error = security_inode_link(old_dentry, dir, new_dentry)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#772: FILE: fs/namei.c:1882:
+	if ((error = security_inode_rename(old_dir, old_dentry, new_dir, new_dentry)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#793: FILE: fs/namei.c:1916:
+	if ((error = security_inode_rename(old_dir, old_dentry, new_dir, new_dentry)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#823: FILE: fs/namespace.c:292:
+	if ((retval = security_sb_umount(mnt, flags)))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#851: FILE: fs/namespace.c:473:
+	if ((err = security_sb_check_sb(mnt, nd)))
 	                                     ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#851: FILE: fs/namespace.c:473:
+	if ((err = security_sb_check_sb(mnt, nd)))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#860: FILE: fs/namespace.c:489:
+		security_sb_post_addmount(mnt, nd);
 		                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#879: FILE: fs/namespace.c:743:
+	if ((retval = security_sb_mount(dev_name, &nd, type_page, flags, data_page)))
 	                                           ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#879: FILE: fs/namespace.c:743:
+	if ((retval = security_sb_mount(dev_name, &nd, type_page, flags, data_page)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#889: FILE: fs/namespace.c:940:
+	if ((error = security_sb_pivotroot(&old_nd, &new_nd))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#911: FILE: fs/open.c:33:
+			if ((retval = security_sb_statfs(sb)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#923: FILE: fs/quota.c:101:
+	return security_quotactl (cmd, type, id, sb);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#936: FILE: fs/read_write.c:124:
+	if ((retval = security_file_llseek(file))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#946: FILE: fs/read_write.c:155:
+	if ((retval = security_file_llseek(file)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#956: FILE: fs/read_write.c:204:
+		if (!(ret = security_file_permission (file, MAY_READ))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#956: FILE: fs/read_write.c:204:
+		if (!(ret = security_file_permission (file, MAY_READ))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#966: FILE: fs/read_write.c:243:
+		if (!(ret = security_file_permission (file, MAY_WRITE))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#966: FILE: fs/read_write.c:243:
+		if (!(ret = security_file_permission (file, MAY_WRITE))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#976: FILE: fs/read_write.c:474:
+		if (!(ret = security_file_permission (file, MAY_READ)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#976: FILE: fs/read_write.c:474:
+		if (!(ret = security_file_permission (file, MAY_READ)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#986: FILE: fs/read_write.c:496:
+		if (!(ret = security_file_permission (file, MAY_WRITE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#986: FILE: fs/read_write.c:496:
+		if (!(ret = security_file_permission (file, MAY_WRITE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1007: FILE: fs/readdir.c:25:
+	if ((res = security_file_permission(file, MAY_READ)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1020: FILE: fs/stat.c:42:
+	if ((retval = security_inode_getattr(mnt, dentry)))

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1030: FILE: fs/stat.c:240:
+			if (!(error = security_inode_readlink(nd.dentry))) {
 			                                      ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1030: FILE: fs/stat.c:240:
+			if (!(error = security_inode_readlink(nd.dentry))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1084: FILE: fs/xattr.c:89:
+		if ((error = security_inode_setxattr(d, kname, kvalue, size, flags)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1094: FILE: fs/xattr.c:165:
+		if ((error = security_inode_getxattr(d, kname)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1104: FILE: fs/xattr.c:237:
+		if ((error = security_inode_listxattr(d)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1114: FILE: fs/xattr.c:311:
+		if ((error = security_inode_removexattr(d, kname)))

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
   ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                        ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                 ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                                                     ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                                                                                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1134: FILE: fs/proc/base.c:398:
+(p==current||(p->parent==current&&(p->ptrace & PT_PTRACED)&&p->state==TASK_STOPPED&&security_ptrace(current,p)==0))
                                                                                                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1145: FILE: include/linux/sched.h:599:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1179: FILE: include/linux/security.h:34:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1181: FILE: include/linux/security.h:36:
+ * as the default capabilities functions */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1182: FILE: include/linux/security.h:37:
+extern int cap_capable (struct task_struct *tsk, int cap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1182: FILE: include/linux/security.h:37:
+extern int cap_capable (struct task_struct *tsk, int cap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1183: FILE: include/linux/security.h:38:
+extern int cap_ptrace (struct task_struct *parent, struct task_struct *child);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1183: FILE: include/linux/security.h:38:
+extern int cap_ptrace (struct task_struct *parent, struct task_struct *child);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1184: FILE: include/linux/security.h:39:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1184: FILE: include/linux/security.h:39:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1184: FILE: include/linux/security.h:39:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#1185: FILE: include/linux/security.h:40:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1185: FILE: include/linux/security.h:40:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1185: FILE: include/linux/security.h:40:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#1186: FILE: include/linux/security.h:41:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1186: FILE: include/linux/security.h:41:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1186: FILE: include/linux/security.h:41:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1187: FILE: include/linux/security.h:42:
+extern int cap_bprm_set_security (struct linux_binprm *bprm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1187: FILE: include/linux/security.h:42:
+extern int cap_bprm_set_security (struct linux_binprm *bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1188: FILE: include/linux/security.h:43:
+extern void cap_bprm_compute_creds (struct linux_binprm *bprm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1188: FILE: include/linux/security.h:43:
+extern void cap_bprm_compute_creds (struct linux_binprm *bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1189: FILE: include/linux/security.h:44:
+extern int cap_task_post_setuid (uid_t old_ruid, uid_t old_euid, uid_t old_suid, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1189: FILE: include/linux/security.h:44:
+extern int cap_task_post_setuid (uid_t old_ruid, uid_t old_euid, uid_t old_suid, int flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1190: FILE: include/linux/security.h:45:
+extern void cap_task_kmod_set_label (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1190: FILE: include/linux/security.h:45:
+extern void cap_task_kmod_set_label (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1191: FILE: include/linux/security.h:46:
+extern void cap_task_reparent_to_init (struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1191: FILE: include/linux/security.h:46:
+extern void cap_task_reparent_to_init (struct task_struct *p);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1200: FILE: include/linux/security.h:63:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1214: FILE: include/linux/security.h:870:
+static inline int security_ptrace (struct task_struct * parent, struct task_struct * child)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1214: FILE: include/linux/security.h:870:
+static inline int security_ptrace (struct task_struct * parent, struct task_struct * child)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1214: FILE: include/linux/security.h:870:
+static inline int security_ptrace (struct task_struct * parent, struct task_struct * child)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1216: FILE: include/linux/security.h:872:
+	return security_ops->ptrace (parent, child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1219: FILE: include/linux/security.h:875:
+static inline int security_capget (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1224: FILE: include/linux/security.h:880:
+	return security_ops->capget (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1227: FILE: include/linux/security.h:883:
+static inline int security_capset_check (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1232: FILE: include/linux/security.h:888:
+	return security_ops->capset_check (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1235: FILE: include/linux/security.h:891:
+static inline void security_capset_set (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1240: FILE: include/linux/security.h:896:
+	security_ops->capset_set (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1243: FILE: include/linux/security.h:899:
+static inline int security_acct (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1245: FILE: include/linux/security.h:901:
+	return security_ops->acct (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1248: FILE: include/linux/security.h:904:
+static inline int security_quotactl (int cmds, int type, int id,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1251: FILE: include/linux/security.h:907:
+	return security_ops->quotactl (cmds, type, id, sb);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1254: FILE: include/linux/security.h:910:
+static inline int security_quota_on (struct file * file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: include/linux/security.h:910:
+static inline int security_quota_on (struct file * file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1256: FILE: include/linux/security.h:912:
+	return security_ops->quota_on (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1259: FILE: include/linux/security.h:915:
+static inline int security_bprm_alloc (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1261: FILE: include/linux/security.h:917:
+	return security_ops->bprm_alloc_security (bprm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1263: FILE: include/linux/security.h:919:
+}
+static inline void security_bprm_free (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1263: FILE: include/linux/security.h:919:
+static inline void security_bprm_free (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1265: FILE: include/linux/security.h:921:
+	security_ops->bprm_free_security (bprm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1267: FILE: include/linux/security.h:923:
+}
+static inline void security_bprm_compute_creds (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1267: FILE: include/linux/security.h:923:
+static inline void security_bprm_compute_creds (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1269: FILE: include/linux/security.h:925:
+	security_ops->bprm_compute_creds (bprm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1271: FILE: include/linux/security.h:927:
+}
+static inline int security_bprm_set (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1271: FILE: include/linux/security.h:927:
+static inline int security_bprm_set (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1273: FILE: include/linux/security.h:929:
+	return security_ops->bprm_set_security (bprm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1275: FILE: include/linux/security.h:931:
+}
+static inline int security_bprm_check (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1275: FILE: include/linux/security.h:931:
+static inline int security_bprm_check (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1277: FILE: include/linux/security.h:933:
+	return security_ops->bprm_check_security (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1280: FILE: include/linux/security.h:936:
+static inline int security_sb_alloc (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1282: FILE: include/linux/security.h:938:
+	return security_ops->sb_alloc_security (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1285: FILE: include/linux/security.h:941:
+static inline void security_sb_free (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1287: FILE: include/linux/security.h:943:
+	security_ops->sb_free_security (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: include/linux/security.h:946:
+static inline int security_sb_statfs (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1292: FILE: include/linux/security.h:948:
+	return security_ops->sb_statfs (sb);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1295: FILE: include/linux/security.h:951:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,
                                                                        ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1295: FILE: include/linux/security.h:951:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1296: FILE: include/linux/security.h:952:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,
+				    char *type, unsigned long flags,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1299: FILE: include/linux/security.h:955:
+	return security_ops->sb_mount (dev_name, nd, type, flags, data);
 	                                         ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1299: FILE: include/linux/security.h:955:
+	return security_ops->sb_mount (dev_name, nd, type, flags, data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1302: FILE: include/linux/security.h:958:
+static inline int security_sb_check_sb (struct vfsmount *mnt,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1303: FILE: include/linux/security.h:959:
+					struct nameidata *nd)
 					                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1305: FILE: include/linux/security.h:961:
+	return security_ops->sb_check_sb (mnt, nd);
 	                                       ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1305: FILE: include/linux/security.h:961:
+	return security_ops->sb_check_sb (mnt, nd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1308: FILE: include/linux/security.h:964:
+static inline int security_sb_umount (struct vfsmount *mnt, int flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: include/linux/security.h:966:
+	return security_ops->sb_umount (mnt, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1313: FILE: include/linux/security.h:969:
+static inline void security_sb_umount_close (struct vfsmount *mnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1315: FILE: include/linux/security.h:971:
+	security_ops->sb_umount_close (mnt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1318: FILE: include/linux/security.h:974:
+static inline void security_sb_umount_busy (struct vfsmount *mnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1320: FILE: include/linux/security.h:976:
+	security_ops->sb_umount_busy (mnt);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1323: FILE: include/linux/security.h:979:
+static inline void security_sb_post_remount (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1326: FILE: include/linux/security.h:982:
+	security_ops->sb_post_remount (mnt, flags, data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1329: FILE: include/linux/security.h:985:
+static inline void security_sb_post_mountroot (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1331: FILE: include/linux/security.h:987:
+	security_ops->sb_post_mountroot ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1334: FILE: include/linux/security.h:990:
+static inline void security_sb_post_addmount (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1337: FILE: include/linux/security.h:993:
+	security_ops->sb_post_addmount (mnt, mountpoint_nd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1340: FILE: include/linux/security.h:996:
+static inline int security_sb_pivotroot (struct nameidata *old_nd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1343: FILE: include/linux/security.h:999:
+	return security_ops->sb_pivotroot (old_nd, new_nd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1346: FILE: include/linux/security.h:1002:
+static inline void security_sb_post_pivotroot (struct nameidata *old_nd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1349: FILE: include/linux/security.h:1005:
+	security_ops->sb_post_pivotroot (old_nd, new_nd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1352: FILE: include/linux/security.h:1008:
+static inline int security_inode_alloc (struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1354: FILE: include/linux/security.h:1010:
+	return security_ops->inode_alloc_security (inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1357: FILE: include/linux/security.h:1013:
+static inline void security_inode_free (struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1359: FILE: include/linux/security.h:1015:
+	security_ops->inode_free_security (inode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: include/linux/security.h:1017:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1362: FILE: include/linux/security.h:1018:
+static inline int security_inode_create (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1366: FILE: include/linux/security.h:1022:
+	return security_ops->inode_create (dir, dentry, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1369: FILE: include/linux/security.h:1025:
+static inline void security_inode_post_create (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1373: FILE: include/linux/security.h:1029:
+	security_ops->inode_post_create (dir, dentry, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1376: FILE: include/linux/security.h:1032:
+static inline int security_inode_link (struct dentry *old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1380: FILE: include/linux/security.h:1036:
+	return security_ops->inode_link (old_dentry, dir, new_dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1383: FILE: include/linux/security.h:1039:
+static inline void security_inode_post_link (struct dentry *old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1387: FILE: include/linux/security.h:1043:
+	security_ops->inode_post_link (old_dentry, dir, new_dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1390: FILE: include/linux/security.h:1046:
+static inline int security_inode_unlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1393: FILE: include/linux/security.h:1049:
+	return security_ops->inode_unlink (dir, dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1396: FILE: include/linux/security.h:1052:
+static inline int security_inode_symlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1400: FILE: include/linux/security.h:1056:
+	return security_ops->inode_symlink (dir, dentry, old_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1403: FILE: include/linux/security.h:1059:
+static inline void security_inode_post_symlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1407: FILE: include/linux/security.h:1063:
+	security_ops->inode_post_symlink (dir, dentry, old_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1410: FILE: include/linux/security.h:1066:
+static inline int security_inode_mkdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1414: FILE: include/linux/security.h:1070:
+	return security_ops->inode_mkdir (dir, dentry, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1417: FILE: include/linux/security.h:1073:
+static inline void security_inode_post_mkdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1421: FILE: include/linux/security.h:1077:
+	security_ops->inode_post_mkdir (dir, dentry, mode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1424: FILE: include/linux/security.h:1080:
+static inline int security_inode_rmdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: include/linux/security.h:1083:
+	return security_ops->inode_rmdir (dir, dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1430: FILE: include/linux/security.h:1086:
+static inline int security_inode_mknod (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1434: FILE: include/linux/security.h:1090:
+	return security_ops->inode_mknod (dir, dentry, mode, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1437: FILE: include/linux/security.h:1093:
+static inline void security_inode_post_mknod (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1441: FILE: include/linux/security.h:1097:
+	security_ops->inode_post_mknod (dir, dentry, mode, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1444: FILE: include/linux/security.h:1100:
+static inline int security_inode_rename (struct inode *old_dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1449: FILE: include/linux/security.h:1105:
+	return security_ops->inode_rename (old_dir, old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1453: FILE: include/linux/security.h:1109:
+static inline void security_inode_post_rename (struct inode *old_dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1458: FILE: include/linux/security.h:1114:
+	security_ops->inode_post_rename (old_dir, old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1462: FILE: include/linux/security.h:1118:
+static inline int security_inode_readlink (struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1464: FILE: include/linux/security.h:1120:
+	return security_ops->inode_readlink (dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1467: FILE: include/linux/security.h:1123:
+static inline int security_inode_follow_link (struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1468: FILE: include/linux/security.h:1124:
+					      struct nameidata *nd)
 					                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1470: FILE: include/linux/security.h:1126:
+	return security_ops->inode_follow_link (dentry, nd);
 	                                                ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1470: FILE: include/linux/security.h:1126:
+	return security_ops->inode_follow_link (dentry, nd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1473: FILE: include/linux/security.h:1129:
+static inline int security_inode_permission (struct inode *inode, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1475: FILE: include/linux/security.h:1131:
+	return security_ops->inode_permission (inode, mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1478: FILE: include/linux/security.h:1134:
+static inline int security_inode_permission_lite (struct inode *inode,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1481: FILE: include/linux/security.h:1137:
+	return security_ops->inode_permission_lite (inode, mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1484: FILE: include/linux/security.h:1140:
+static inline int security_inode_setattr (struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1487: FILE: include/linux/security.h:1143:
+	return security_ops->inode_setattr (dentry, attr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1490: FILE: include/linux/security.h:1146:
+static inline int security_inode_getattr (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1493: FILE: include/linux/security.h:1149:
+	return security_ops->inode_getattr (mnt, dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1496: FILE: include/linux/security.h:1152:
+static inline void security_inode_post_lookup (struct inode *inode,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1499: FILE: include/linux/security.h:1155:
+	security_ops->inode_post_lookup (inode, dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1502: FILE: include/linux/security.h:1158:
+static inline void security_inode_delete (struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1504: FILE: include/linux/security.h:1160:
+	security_ops->inode_delete (inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1507: FILE: include/linux/security.h:1163:
+static inline int security_inode_setxattr (struct dentry *dentry, char *name,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1510: FILE: include/linux/security.h:1166:
+	return security_ops->inode_setxattr (dentry, name, value, size, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: include/linux/security.h:1169:
+static inline int security_inode_getxattr (struct dentry *dentry, char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1515: FILE: include/linux/security.h:1171:
+	return security_ops->inode_getxattr (dentry, name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1518: FILE: include/linux/security.h:1174:
+static inline int security_inode_listxattr (struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1520: FILE: include/linux/security.h:1176:
+	return security_ops->inode_listxattr (dentry);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1523: FILE: include/linux/security.h:1179:
+static inline int security_inode_removexattr (struct dentry *dentry, char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1525: FILE: include/linux/security.h:1181:
+	return security_ops->inode_removexattr (dentry, name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1528: FILE: include/linux/security.h:1184:
+static inline int security_file_permission (struct file *file, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1530: FILE: include/linux/security.h:1186:
+	return security_ops->file_permission (file, mask);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1533: FILE: include/linux/security.h:1189:
+static inline int security_file_alloc (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1535: FILE: include/linux/security.h:1191:
+	return security_ops->file_alloc_security (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1538: FILE: include/linux/security.h:1194:
+static inline void security_file_free (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1540: FILE: include/linux/security.h:1196:
+	security_ops->file_free_security (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1543: FILE: include/linux/security.h:1199:
+static inline int security_file_llseek (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1545: FILE: include/linux/security.h:1201:
+	return security_ops->file_llseek (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1548: FILE: include/linux/security.h:1204:
+static inline int security_file_ioctl (struct file *file, unsigned int cmd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1551: FILE: include/linux/security.h:1207:
+	return security_ops->file_ioctl (file, cmd, arg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1554: FILE: include/linux/security.h:1210:
+static inline int security_file_mmap (struct file *file, unsigned long prot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1557: FILE: include/linux/security.h:1213:
+	return security_ops->file_mmap (file, prot, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1560: FILE: include/linux/security.h:1216:
+static inline int security_file_mprotect (struct vm_area_struct *vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1563: FILE: include/linux/security.h:1219:
+	return security_ops->file_mprotect (vma, prot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1566: FILE: include/linux/security.h:1222:
+static inline int security_file_lock (struct file *file, unsigned int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: include/linux/security.h:1224:
+	return security_ops->file_lock (file, cmd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1571: FILE: include/linux/security.h:1227:
+static inline int security_file_fcntl (struct file *file, unsigned int cmd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1574: FILE: include/linux/security.h:1230:
+	return security_ops->file_fcntl (file, cmd, arg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1577: FILE: include/linux/security.h:1233:
+static inline int security_file_set_fowner (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1579: FILE: include/linux/security.h:1235:
+	return security_ops->file_set_fowner (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1582: FILE: include/linux/security.h:1238:
+static inline int security_file_send_sigiotask (struct task_struct *tsk,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1586: FILE: include/linux/security.h:1242:
+	return security_ops->file_send_sigiotask (tsk, fown, fd, reason);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1589: FILE: include/linux/security.h:1245:
+static inline int security_file_receive (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1591: FILE: include/linux/security.h:1247:
+	return security_ops->file_receive (file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1594: FILE: include/linux/security.h:1250:
+static inline int security_task_create (unsigned long clone_flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1596: FILE: include/linux/security.h:1252:
+	return security_ops->task_create (clone_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1599: FILE: include/linux/security.h:1255:
+static inline int security_task_alloc (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: include/linux/security.h:1257:
+	return security_ops->task_alloc_security (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1604: FILE: include/linux/security.h:1260:
+static inline void security_task_free (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1606: FILE: include/linux/security.h:1262:
+	security_ops->task_free_security (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1609: FILE: include/linux/security.h:1265:
+static inline int security_task_setuid (uid_t id0, uid_t id1, uid_t id2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1612: FILE: include/linux/security.h:1268:
+	return security_ops->task_setuid (id0, id1, id2, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1615: FILE: include/linux/security.h:1271:
+static inline int security_task_post_setuid (uid_t old_ruid, uid_t old_euid,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1618: FILE: include/linux/security.h:1274:
+	return security_ops->task_post_setuid (old_ruid, old_euid, old_suid, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1621: FILE: include/linux/security.h:1277:
+static inline int security_task_setgid (gid_t id0, gid_t id1, gid_t id2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: include/linux/security.h:1280:
+	return security_ops->task_setgid (id0, id1, id2, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1627: FILE: include/linux/security.h:1283:
+static inline int security_task_setpgid (struct task_struct *p, pid_t pgid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1629: FILE: include/linux/security.h:1285:
+	return security_ops->task_setpgid (p, pgid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1632: FILE: include/linux/security.h:1288:
+static inline int security_task_getpgid (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1634: FILE: include/linux/security.h:1290:
+	return security_ops->task_getpgid (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1637: FILE: include/linux/security.h:1293:
+static inline int security_task_getsid (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1639: FILE: include/linux/security.h:1295:
+	return security_ops->task_getsid (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1642: FILE: include/linux/security.h:1298:
+static inline int security_task_setgroups (int gidsetsize, gid_t *grouplist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1644: FILE: include/linux/security.h:1300:
+	return security_ops->task_setgroups (gidsetsize, grouplist);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1647: FILE: include/linux/security.h:1303:
+static inline int security_task_setnice (struct task_struct *p, int nice)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1649: FILE: include/linux/security.h:1305:
+	return security_ops->task_setnice (p, nice);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1652: FILE: include/linux/security.h:1308:
+static inline int security_task_setrlimit (unsigned int resource,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1655: FILE: include/linux/security.h:1311:
+	return security_ops->task_setrlimit (resource, new_rlim);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1658: FILE: include/linux/security.h:1314:
+static inline int security_task_setscheduler (struct task_struct *p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1662: FILE: include/linux/security.h:1318:
+	return security_ops->task_setscheduler (p, policy, lp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1665: FILE: include/linux/security.h:1321:
+static inline int security_task_getscheduler (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1667: FILE: include/linux/security.h:1323:
+	return security_ops->task_getscheduler (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1670: FILE: include/linux/security.h:1326:
+static inline int security_task_kill (struct task_struct *p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1673: FILE: include/linux/security.h:1329:
+	return security_ops->task_kill (p, info, sig);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1676: FILE: include/linux/security.h:1332:
+static inline int security_task_wait (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1678: FILE: include/linux/security.h:1334:
+	return security_ops->task_wait (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1681: FILE: include/linux/security.h:1337:
+static inline int security_task_prctl (int option, unsigned long arg2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1686: FILE: include/linux/security.h:1342:
+	return security_ops->task_prctl (option, arg2, arg3, arg4, arg5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1689: FILE: include/linux/security.h:1345:
+static inline void security_task_kmod_set_label (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1691: FILE: include/linux/security.h:1347:
+	security_ops->task_kmod_set_label ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1694: FILE: include/linux/security.h:1350:
+static inline void security_task_reparent_to_init (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1696: FILE: include/linux/security.h:1352:
+	security_ops->task_reparent_to_init (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1699: FILE: include/linux/security.h:1355:
+static inline int security_ipc_permission (struct kern_ipc_perm *ipcp,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1702: FILE: include/linux/security.h:1358:
+	return security_ops->ipc_permission (ipcp, flag);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1705: FILE: include/linux/security.h:1361:
+static inline int security_msg_queue_alloc (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1707: FILE: include/linux/security.h:1363:
+	return security_ops->msg_queue_alloc_security (msq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1710: FILE: include/linux/security.h:1366:
+static inline void security_msg_queue_free (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1712: FILE: include/linux/security.h:1368:
+	security_ops->msg_queue_free_security (msq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1715: FILE: include/linux/security.h:1371:
+static inline int security_shm_alloc (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1717: FILE: include/linux/security.h:1373:
+	return security_ops->shm_alloc_security (shp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1720: FILE: include/linux/security.h:1376:
+static inline void security_shm_free (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1722: FILE: include/linux/security.h:1378:
+	security_ops->shm_free_security (shp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1725: FILE: include/linux/security.h:1381:
+static inline int security_sem_alloc (struct sem_array *sma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1727: FILE: include/linux/security.h:1383:
+	return security_ops->sem_alloc_security (sma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1730: FILE: include/linux/security.h:1386:
+static inline void security_sem_free (struct sem_array *sma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1732: FILE: include/linux/security.h:1388:
+	security_ops->sem_free_security (sma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1752: FILE: include/linux/security.h:1408:
+static inline int security_scaffolding_startup (void)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1757: FILE: include/linux/security.h:1413:
+static inline int security_ptrace (struct task_struct *parent, struct task_struct * child)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1757: FILE: include/linux/security.h:1413:
+static inline int security_ptrace (struct task_struct *parent, struct task_struct * child)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1759: FILE: include/linux/security.h:1415:
+	return cap_ptrace (parent, child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1762: FILE: include/linux/security.h:1418:
+static inline int security_capget (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1767: FILE: include/linux/security.h:1423:
+	return cap_capget (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1770: FILE: include/linux/security.h:1426:
+static inline int security_capset_check (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1775: FILE: include/linux/security.h:1431:
+	return cap_capset_check (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1778: FILE: include/linux/security.h:1434:
+static inline void security_capset_set (struct task_struct *target,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1783: FILE: include/linux/security.h:1439:
+	cap_capset_set (target, effective, inheritable, permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1786: FILE: include/linux/security.h:1442:
+static inline int security_acct (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1791: FILE: include/linux/security.h:1447:
+static inline int security_quotactl (int cmds, int type, int id,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1792: FILE: include/linux/security.h:1448:
+				     struct super_block * sb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1797: FILE: include/linux/security.h:1453:
+static inline int security_quota_on (struct file * file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1797: FILE: include/linux/security.h:1453:
+static inline int security_quota_on (struct file * file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1802: FILE: include/linux/security.h:1458:
+static inline int security_bprm_alloc (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1807: FILE: include/linux/security.h:1463:
+static inline void security_bprm_free (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1810: FILE: include/linux/security.h:1466:
+static inline void security_bprm_compute_creds (struct linux_binprm *bprm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1811: FILE: include/linux/security.h:1467:
+{ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1812: FILE: include/linux/security.h:1468:
+	cap_bprm_compute_creds (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1815: FILE: include/linux/security.h:1471:
+static inline int security_bprm_set (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1817: FILE: include/linux/security.h:1473:
+	return cap_bprm_set_security (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1820: FILE: include/linux/security.h:1476:
+static inline int security_bprm_check (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1825: FILE: include/linux/security.h:1481:
+static inline int security_sb_alloc (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1830: FILE: include/linux/security.h:1486:
+static inline void security_sb_free (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1833: FILE: include/linux/security.h:1489:
+static inline int security_sb_statfs (struct super_block *sb)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1838: FILE: include/linux/security.h:1494:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,
                                                                        ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1838: FILE: include/linux/security.h:1494:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1839: FILE: include/linux/security.h:1495:
+static inline int security_sb_mount (char *dev_name, struct nameidata *nd,
+				    char *type, unsigned long flags,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1845: FILE: include/linux/security.h:1501:
+static inline int security_sb_check_sb (struct vfsmount *mnt,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1846: FILE: include/linux/security.h:1502:
+					struct nameidata *nd)
 					                  ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1851: FILE: include/linux/security.h:1507:
+static inline int security_sb_umount (struct vfsmount *mnt, int flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1856: FILE: include/linux/security.h:1512:
+static inline void security_sb_umount_close (struct vfsmount *mnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1859: FILE: include/linux/security.h:1515:
+static inline void security_sb_umount_busy (struct vfsmount *mnt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1862: FILE: include/linux/security.h:1518:
+static inline void security_sb_post_remount (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1866: FILE: include/linux/security.h:1522:
+static inline void security_sb_post_mountroot (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1869: FILE: include/linux/security.h:1525:
+static inline void security_sb_post_addmount (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1873: FILE: include/linux/security.h:1529:
+static inline int security_sb_pivotroot (struct nameidata *old_nd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1879: FILE: include/linux/security.h:1535:
+static inline void security_sb_post_pivotroot (struct nameidata *old_nd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1883: FILE: include/linux/security.h:1539:
+static inline int security_inode_alloc (struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1888: FILE: include/linux/security.h:1544:
+static inline void security_inode_free (struct inode *inode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1890: FILE: include/linux/security.h:1546:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1891: FILE: include/linux/security.h:1547:
+static inline int security_inode_create (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1898: FILE: include/linux/security.h:1554:
+static inline void security_inode_post_create (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1903: FILE: include/linux/security.h:1559:
+static inline int security_inode_link (struct dentry *old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1910: FILE: include/linux/security.h:1566:
+static inline void security_inode_post_link (struct dentry *old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1915: FILE: include/linux/security.h:1571:
+static inline int security_inode_unlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1921: FILE: include/linux/security.h:1577:
+static inline int security_inode_symlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1928: FILE: include/linux/security.h:1584:
+static inline void security_inode_post_symlink (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1933: FILE: include/linux/security.h:1589:
+static inline int security_inode_mkdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1940: FILE: include/linux/security.h:1596:
+static inline void security_inode_post_mkdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1945: FILE: include/linux/security.h:1601:
+static inline int security_inode_rmdir (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1951: FILE: include/linux/security.h:1607:
+static inline int security_inode_mknod (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1958: FILE: include/linux/security.h:1614:
+static inline void security_inode_post_mknod (struct inode *dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1963: FILE: include/linux/security.h:1619:
+static inline int security_inode_rename (struct inode *old_dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1971: FILE: include/linux/security.h:1627:
+static inline void security_inode_post_rename (struct inode *old_dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1977: FILE: include/linux/security.h:1633:
+static inline int security_inode_readlink (struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1982: FILE: include/linux/security.h:1638:
+static inline int security_inode_follow_link (struct dentry *dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1983: FILE: include/linux/security.h:1639:
+					      struct nameidata *nd)
 					                        ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1988: FILE: include/linux/security.h:1644:
+static inline int security_inode_permission (struct inode *inode, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1993: FILE: include/linux/security.h:1649:
+static inline int security_inode_permission_lite (struct inode *inode,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1999: FILE: include/linux/security.h:1655:
+static inline int security_inode_setattr (struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2005: FILE: include/linux/security.h:1661:
+static inline int security_inode_getattr (struct vfsmount *mnt,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2011: FILE: include/linux/security.h:1667:
+static inline void security_inode_post_lookup (struct inode *inode,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2015: FILE: include/linux/security.h:1671:
+static inline void security_inode_delete (struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2018: FILE: include/linux/security.h:1674:
+static inline int security_inode_setxattr (struct dentry *dentry, char *name,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2024: FILE: include/linux/security.h:1680:
+static inline int security_inode_getxattr (struct dentry *dentry, char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2029: FILE: include/linux/security.h:1685:
+static inline int security_inode_listxattr (struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2034: FILE: include/linux/security.h:1690:
+static inline int security_inode_removexattr (struct dentry *dentry, char *name)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2039: FILE: include/linux/security.h:1695:
+static inline int security_file_permission (struct file *file, int mask)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2044: FILE: include/linux/security.h:1700:
+static inline int security_file_alloc (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2049: FILE: include/linux/security.h:1705:
+static inline void security_file_free (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2052: FILE: include/linux/security.h:1708:
+static inline int security_file_llseek (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2057: FILE: include/linux/security.h:1713:
+static inline int security_file_ioctl (struct file *file, unsigned int cmd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2063: FILE: include/linux/security.h:1719:
+static inline int security_file_mmap (struct file *file, unsigned long prot,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2069: FILE: include/linux/security.h:1725:
+static inline int security_file_mprotect (struct vm_area_struct *vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2075: FILE: include/linux/security.h:1731:
+static inline int security_file_lock (struct file *file, unsigned int cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2080: FILE: include/linux/security.h:1736:
+static inline int security_file_fcntl (struct file *file, unsigned int cmd,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2086: FILE: include/linux/security.h:1742:
+static inline int security_file_set_fowner (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2091: FILE: include/linux/security.h:1747:
+static inline int security_file_send_sigiotask (struct task_struct *tsk,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2098: FILE: include/linux/security.h:1754:
+static inline int security_file_receive (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2103: FILE: include/linux/security.h:1759:
+static inline int security_task_create (unsigned long clone_flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2108: FILE: include/linux/security.h:1764:
+static inline int security_task_alloc (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2113: FILE: include/linux/security.h:1769:
+static inline void security_task_free (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2116: FILE: include/linux/security.h:1772:
+static inline int security_task_setuid (uid_t id0, uid_t id1, uid_t id2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2122: FILE: include/linux/security.h:1778:
+static inline int security_task_post_setuid (uid_t old_ruid, uid_t old_euid,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2125: FILE: include/linux/security.h:1781:
+	return cap_task_post_setuid (old_ruid, old_euid, old_suid, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2128: FILE: include/linux/security.h:1784:
+static inline int security_task_setgid (gid_t id0, gid_t id1, gid_t id2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2134: FILE: include/linux/security.h:1790:
+static inline int security_task_setpgid (struct task_struct *p, pid_t pgid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2139: FILE: include/linux/security.h:1795:
+static inline int security_task_getpgid (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2144: FILE: include/linux/security.h:1800:
+static inline int security_task_getsid (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2149: FILE: include/linux/security.h:1805:
+static inline int security_task_setgroups (int gidsetsize, gid_t *grouplist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2154: FILE: include/linux/security.h:1810:
+static inline int security_task_setnice (struct task_struct *p, int nice)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2159: FILE: include/linux/security.h:1815:
+static inline int security_task_setrlimit (unsigned int resource,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2165: FILE: include/linux/security.h:1821:
+static inline int security_task_setscheduler (struct task_struct *p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2172: FILE: include/linux/security.h:1828:
+static inline int security_task_getscheduler (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2177: FILE: include/linux/security.h:1833:
+static inline int security_task_kill (struct task_struct *p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2183: FILE: include/linux/security.h:1839:
+static inline int security_task_wait (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2188: FILE: include/linux/security.h:1844:
+static inline int security_task_prctl (int option, unsigned long arg2,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2196: FILE: include/linux/security.h:1852:
+static inline void security_task_kmod_set_label (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2198: FILE: include/linux/security.h:1854:
+	cap_task_kmod_set_label ();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2201: FILE: include/linux/security.h:1857:
+static inline void security_task_reparent_to_init (struct task_struct *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2203: FILE: include/linux/security.h:1859:
+	cap_task_reparent_to_init (p);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2206: FILE: include/linux/security.h:1862:
+static inline int security_ipc_permission (struct kern_ipc_perm *ipcp,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2212: FILE: include/linux/security.h:1868:
+static inline int security_msg_queue_alloc (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2217: FILE: include/linux/security.h:1873:
+static inline void security_msg_queue_free (struct msg_queue *msq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2220: FILE: include/linux/security.h:1876:
+static inline int security_shm_alloc (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2225: FILE: include/linux/security.h:1881:
+static inline void security_shm_free (struct shmid_kernel *shp)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2228: FILE: include/linux/security.h:1884:
+static inline int security_sem_alloc (struct sem_array *sma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2233: FILE: include/linux/security.h:1889:
+static inline void security_sem_free (struct sem_array *sma)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2236: FILE: include/linux/security.h:1892:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2272: FILE: ipc/msg.c:104:
+	if ((retval = security_msg_queue_alloc(msq))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2302: FILE: ipc/sem.c:139:
+	if ((retval = security_sem_alloc(sma))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2341: FILE: ipc/shm.c:191:
+	if ((error = security_shm_alloc(shp))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2383: FILE: kernel/acct.c:226:
+	if ((error = security_acct(file)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2403: FILE: kernel/capability.c:67:
+     ret = security_capget(target, &data.effective, &data.inheritable, &data.permitted);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2430: FILE: kernel/capability.c:167:
+     if (security_capset_check(target, &effective, &inheritable, &permitted))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#2430: FILE: kernel/capability.c:167:
+     if (security_capset_check(target, &effective, &inheritable, &permitted))
 	     goto out;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#2437: FILE: kernel/capability.c:193:
      } else {
+	     security_capset_set(target, &effective, &inheritable, &permitted);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2482: FILE: kernel/fork.c:685:
+	if ((retval = security_task_create(clone_flags)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2541: FILE: kernel/ptrace.c:104:
+	if ((retval = security_ptrace(current, task)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2554: FILE: kernel/sched.c:1332:
+	if ((retval = security_task_setnice(current, nice)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2564: FILE: kernel/sched.c:1453:
+	if ((retval = security_task_setscheduler(p, policy, &lp)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2574: FILE: kernel/sched.c:1516:
+		if (!(retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2584: FILE: kernel/sched.c:1545:
+	if ((retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2594: FILE: kernel/sched.c:1777:
+	if ((retval = security_task_getscheduler(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2615: FILE: kernel/signal.c:710:
+	if ((ret = security_task_kill(t, info, sig)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2636: FILE: kernel/sys.c:483:
+	if ((retval = security_task_setgid(rgid, egid, (gid_t)-1, LSM_SETID_RE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2646: FILE: kernel/sys.c:528:
+	if ((retval = security_task_setgid(gid, (gid_t)-1, (gid_t)-1, LSM_SETID_ID)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2656: FILE: kernel/sys.c:601:
+	if ((retval = security_task_setuid(ruid, euid, (uid_t)-1, LSM_SETID_RE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2675: FILE: kernel/sys.c:661:
+	if ((retval = security_task_setuid(uid, (uid_t)-1, (uid_t)-1, LSM_SETID_ID)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2694: FILE: kernel/sys.c:698:
+	if ((retval = security_task_setuid(ruid, euid, suid, LSM_SETID_RES)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2713: FILE: kernel/sys.c:749:
+	if ((retval = security_task_setgid(rgid, egid, sgid, LSM_SETID_RES)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2723: FILE: kernel/sys.c:802:
+	if ((retval = security_task_setuid(uid, (uid_t)-1, (uid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2733: FILE: kernel/sys.c:818:
+	if ((retval = security_task_post_setuid(old_fsuid, (uid_t)-1, (uid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2743: FILE: kernel/sys.c:832:
+	if ((retval = security_task_setgid(gid, (gid_t)-1, (gid_t)-1, LSM_SETID_FS)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2753: FILE: kernel/sys.c:957:
+			if (!(retval = security_task_getpgid(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2763: FILE: kernel/sys.c:984:
+			if (!(retval = security_task_getsid(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2773: FILE: kernel/sys.c:1065:
+	if ((retval = security_task_setgroups(gidsetsize, groups)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2783: FILE: kernel/sys.c:1228:
+	if ((retval = security_task_setrlimit(resource, &new_rlim)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2793: FILE: kernel/sys.c:1302:
+	if ((error = security_task_prctl(option, arg2, arg3, arg4, arg5)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2806: FILE: kernel/uid16.c:143:
+	if ((i = security_task_setgroups(gidsetsize, new_groups)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2819: FILE: mm/mmap.c:501:
+	if ((error = security_file_mmap(file, prot, flags)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2832: FILE: mm/mprotect.c:265:
+		if ((error = security_file_mprotect(vma, prot)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2845: FILE: net/core/scm.c:220:
+		if ((err = security_file_receive(fp[i])))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2923: FILE: security/capability.c:23:
+int cap_capable (struct task_struct *tsk, int cap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2948: FILE: security/capability.c:32:
+int cap_ptrace (struct task_struct *parent, struct task_struct *child)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2958: FILE: security/capability.c:42:
+int cap_capget (struct task_struct *target, kernel_cap_t *effective,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2971: FILE: security/capability.c:52:
+int cap_capset_check (struct task_struct *target, kernel_cap_t *effective,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2984: FILE: security/capability.c:78:
+void cap_capset_set (struct task_struct *target, kernel_cap_t *effective,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3003: FILE: security/capability.c:86:
+int cap_bprm_set_security (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3028: FILE: security/capability.c:120:
+void cap_bprm_compute_creds (struct linux_binprm *bprm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3037: FILE: security/capability.c:166:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3051: FILE: security/capability.c:180:
+ *  fsuid is handled elsewhere. fsuid == 0 and {r,e,s}uid!= 0 should $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3054: FILE: security/capability.c:183:
+ *  -astor $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3066: FILE: security/capability.c:195:
+static inline void cap_emulate_setxuid (int old_ruid, int old_euid,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3072: FILE: security/capability.c:201:
+		cap_clear (current->cap_permitted);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3073: FILE: security/capability.c:202:
+		cap_clear (current->cap_effective);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3075: FILE: security/capability.c:204:
+	if (old_euid == 0 && current->euid != 0) {
+		cap_clear (current->cap_effective);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3076: FILE: security/capability.c:205:
+		cap_clear (current->cap_effective);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3078: FILE: security/capability.c:207:
+	if (old_euid != 0 && current->euid == 0) {
+		current->cap_effective = current->cap_permitted;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3083: FILE: security/capability.c:212:
+int cap_task_post_setuid (uid_t old_ruid, uid_t old_euid, uid_t old_suid,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3091: FILE: security/capability.c:220:
+		if (!issecure (SECURE_NO_SETUID_FIXUP)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3091: FILE: security/capability.c:220:
+		if (!issecure (SECURE_NO_SETUID_FIXUP)) {
+			cap_emulate_setxuid (old_ruid, old_euid, old_suid);
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3092: FILE: security/capability.c:221:
+			cap_emulate_setxuid (old_ruid, old_euid, old_suid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3106: FILE: security/capability.c:235:
+			if (!issecure (SECURE_NO_SETUID_FIXUP)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3126: FILE: security/capability.c:255:
+void cap_task_kmod_set_label (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3128: FILE: security/capability.c:257:
+	cap_set_full (current->cap_effective);

WARNING:RETURN_VOID: void function return statements are not generally useful
#3130: FILE: security/capability.c:259:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3132: FILE: security/capability.c:261:
+void cap_task_reparent_to_init (struct task_struct *p)

WARNING:RETURN_VOID: void function return statements are not generally useful
#3139: FILE: security/capability.c:268:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3141: FILE: security/capability.c:270:
+EXPORT_SYMBOL(cap_capable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3142: FILE: security/capability.c:271:
+EXPORT_SYMBOL(cap_ptrace);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3143: FILE: security/capability.c:272:
+EXPORT_SYMBOL(cap_capget);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3144: FILE: security/capability.c:273:
+EXPORT_SYMBOL(cap_capset_check);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3145: FILE: security/capability.c:274:
+EXPORT_SYMBOL(cap_capset_set);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3146: FILE: security/capability.c:275:
+EXPORT_SYMBOL(cap_bprm_set_security);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3147: FILE: security/capability.c:276:
+EXPORT_SYMBOL(cap_bprm_compute_creds);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3148: FILE: security/capability.c:277:
+EXPORT_SYMBOL(cap_task_post_setuid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3149: FILE: security/capability.c:278:
+EXPORT_SYMBOL(cap_task_kmod_set_label);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#3150: FILE: security/capability.c:279:
+EXPORT_SYMBOL(cap_task_reparent_to_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3154: FILE: security/capability.c:283:
+static int cap_sys_security (unsigned int id, unsigned int call,

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3157: FILE: security/capability.c:286:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3160: FILE: security/capability.c:289:
+static int cap_quotactl (int cmds, int type, int id, struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3165: FILE: security/capability.c:294:
+static int cap_quota_on (struct file *f)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3170: FILE: security/capability.c:299:
+static int cap_acct (struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3175: FILE: security/capability.c:304:
+static int cap_bprm_alloc_security (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3180: FILE: security/capability.c:309:
+static int cap_bprm_check_security (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3185: FILE: security/capability.c:314:
+static void cap_bprm_free_security (struct linux_binprm *bprm)

WARNING:RETURN_VOID: void function return statements are not generally useful
#3188: FILE: security/capability.c:317:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3319: FILE: security/capability.c:851:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 108 errors, 373 warnings, 21 checks, 2914 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
