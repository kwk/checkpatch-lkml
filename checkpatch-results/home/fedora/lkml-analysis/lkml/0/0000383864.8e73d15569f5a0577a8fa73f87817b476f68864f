WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#17: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.5.65/include/asm-i386/mach-pc9800/setup_arch_post.h linux-2.5.65-ac2/include/asm-i386/mach-pc9800/setup_arch_post.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#21: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#34: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:14:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#39: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:19:
+	lower_high = (__u32) *(__u8 *) bus_to_virt(PC9800SCA_EXPMMSZ) << 17;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#40: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:20:
+	higher_high = (__u32) *(__u16 *) bus_to_virt(PC9800SCA_MMSZ16M) << 20;

CHECK:BRACES: braces {} should be used on all arms of this statement
#41: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:21:
+	if (lower_high != 0x00f00000UL) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#45: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:25:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:1:
+/* Hook to call BIOS initialisation function */

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#58: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:5:
+#define ARCH_SETUP arch_setup_pc9800();

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#61: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:8:
+#include <asm/io.h>

CHECK:SPACING: No space is necessary after a cast
#73: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:20:
+#define MPC_TABLE ((char *) (PARAM+0x400))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#73: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:20:
+#define MPC_TABLE ((char *) (PARAM+0x400))
                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <PC9800_8MHz_P>
#79: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:26:
+	CLOCK_TICK_RATE = PC9800_8MHz_P() ? 1996800 : 2457600;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#80: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:27:
+	printk(KERN_DEBUG "CLOCK_TICK_RATE = %d\n", CLOCK_TICK_RATE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:28:
+^Itick_usec = TICK_USEC; ^I^I/* ACTHZ          period (usec) */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 7 checks, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
