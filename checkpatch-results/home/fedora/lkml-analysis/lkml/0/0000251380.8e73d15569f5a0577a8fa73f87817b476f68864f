WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#117: FILE: arch/sparc/kernel/time.c:84:
+	extern char __copy_user_begin[], __copy_user_end[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#118: FILE: arch/sparc/kernel/time.c:85:
+	extern char __atomic_begin[], __atomic_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#119: FILE: arch/sparc/kernel/time.c:86:
+	extern char __bzero_begin[], __bzero_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#120: FILE: arch/sparc/kernel/time.c:87:
+	extern char __bitops_begin[], __bitops_end[];

CHECK:SPACING: No space is necessary after a cast
#133: FILE: arch/sparc/kernel/time.c:92:
+	    (pc >= (unsigned long) __copy_user_begin &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#134: FILE: arch/sparc/kernel/time.c:93:
+	     pc < (unsigned long) __copy_user_end) ||

CHECK:SPACING: No space is necessary after a cast
#135: FILE: arch/sparc/kernel/time.c:94:
+	    (pc >= (unsigned long) __atomic_begin &&

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/sparc/kernel/time.c:95:
+	     pc < (unsigned long) __atomic_end) ||

CHECK:SPACING: No space is necessary after a cast
#137: FILE: arch/sparc/kernel/time.c:96:
+	    (pc >= (unsigned long) __bzero_begin &&

CHECK:SPACING: No space is necessary after a cast
#138: FILE: arch/sparc/kernel/time.c:97:
+	     pc < (unsigned long) __bzero_end) ||

CHECK:SPACING: No space is necessary after a cast
#139: FILE: arch/sparc/kernel/time.c:98:
+	    (pc >= (unsigned long) __bitops_begin &&

CHECK:SPACING: No space is necessary after a cast
#140: FILE: arch/sparc/kernel/time.c:99:
+	     pc < (unsigned long) __bitops_end))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#199: FILE: kernel/sched.c:4677:
+		(addr >= (unsigned long)__sched_text_start
+		&& addr < (unsigned long)__sched_text_end);

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#281: FILE: kernel/spinlock.c:56:
+		while (spin_is_locked(lock))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#320: FILE: kernel/spinlock.c:303:
+	extern char __lock_text_start[], __lock_text_end[];

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#323: FILE: kernel/spinlock.c:306:
+	return addr >= (unsigned long)__lock_text_start
+	&& addr < (unsigned long)__lock_text_end;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 10 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
