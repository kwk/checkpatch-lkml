WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#106: FILE: arch/ia64/kernel/entry.S:1111:
+	tbit.z p6,p0=r31,TIF_NEED_RESCHED_DELAYED	// current_thread_info()->need_resched_delayed==0?

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: arch/ia64/kernel/iosapic.c:388:
+iosapic_ack_level_irq (unsigned int irq)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: arch/ia64/kernel/iosapic.c:400:
+iosapic_end_level_irq (unsigned int irq)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: arch/ia64/kernel/iosapic.c:421:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: arch/ia64/kernel/iosapic.c:422:
+#endif $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#259: FILE: arch/ia64/kernel/process.c:101:
+	if (irqs_disabled()) {
+		printk("Uh oh.. entering dump_stack() with irqs disabled.\n");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: arch/ia64/kernel/process.c:102:
+		printk("Uh oh.. entering dump_stack() with irqs disabled.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/ia64/kernel/process.c:307:
+^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/ia64/kernel/sal.c:22:
+ __cacheline_aligned DEFINE_RAW_SPINLOCK(sal_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: arch/ia64/kernel/semaphore.c:43:
+__up (struct compat_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: arch/ia64/kernel/semaphore.c:48:
+void __sched __down (struct compat_semaphore *sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: arch/ia64/kernel/semaphore.c:85:
+int __sched __down_interruptible (struct compat_semaphore * sem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: arch/ia64/kernel/semaphore.c:85:
+int __sched __down_interruptible (struct compat_semaphore * sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: arch/ia64/kernel/semaphore.c:145:
+__down_trylock (struct compat_semaphore *sem)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: arch/ia64/kernel/smp.c:240:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#537: FILE: include/asm-ia64/irqflags.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: include/asm-ia64/irqflags.h:41:
+  extern unsigned long last_cli_ip;$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#579: FILE: include/asm-ia64/irqflags.h:43:
+# define __save_ip()		last_cli_ip = ia64_getreg(_IA64_REG_IP)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#619: FILE: include/asm-ia64/irqflags.h:83:
+#define raw_irqs_disabled_flags(flags) ((flags & IA64_PSR_I) == 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#621: FILE: include/asm-ia64/irqflags.h:85:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: include/asm-ia64/percpu.h:30:
+	extern __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name##_locked

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#661: FILE: include/asm-ia64/percpu.h:34:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#661: FILE: include/asm-ia64/percpu.h:34:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#664: FILE: include/asm-ia64/percpu.h:37:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#664: FILE: include/asm-ia64/percpu.h:37:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA spinlock_t per_cpu_lock__##name##_locked = SPIN_LOCK_UNLOCKED; \

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#665: FILE: include/asm-ia64/percpu.h:38:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name##_locked

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#665: FILE: include/asm-ia64/percpu.h:38:
+	__attribute__((__section__(".data.percpu"))) __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name##_locked

CHECK:LINE_SPACING: Please don't use multiple blank lines
#682: FILE: include/asm-ia64/percpu.h:63:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#691: FILE: include/asm-ia64/rtc.h:1:
+#ifndef _IA64_RTC_H

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#717: FILE: include/asm-ia64/rwsem.h:62:
+#define COMPAT_DECLARE_RWSEM(name) \
+	struct compat_rw_semaphore name = __RWSEM_INITIALIZER(name)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#724: FILE: include/asm-ia64/rwsem.h:65:
+extern struct compat_rw_semaphore *rwsem_down_read_failed(struct compat_rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#725: FILE: include/asm-ia64/rwsem.h:66:
+extern struct compat_rw_semaphore *rwsem_down_write_failed(struct compat_rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#726: FILE: include/asm-ia64/rwsem.h:67:
+extern struct compat_rw_semaphore *rwsem_wake(struct compat_rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#727: FILE: include/asm-ia64/rwsem.h:68:
+extern struct compat_rw_semaphore *rwsem_downgrade_wake(struct compat_rw_semaphore *sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: include/asm-ia64/rwsem.h:71:
+compat_init_rwsem (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#740: FILE: include/asm-ia64/rwsem.h:85:
+__down_read (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: include/asm-ia64/rwsem.h:97:
+__down_write (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: include/asm-ia64/rwsem.h:114:
+__up_read (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: include/asm-ia64/rwsem.h:126:
+__up_write (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: include/asm-ia64/rwsem.h:143:
+__down_read_trylock (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: include/asm-ia64/rwsem.h:158:
+__down_write_trylock (struct compat_rw_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#794: FILE: include/asm-ia64/rwsem.h:169:
+__downgrade_write (struct compat_rw_semaphore *sem)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: include/asm-ia64/semaphore.h:34:
+#define __COMPAT_DECLARE_SEMAPHORE_GENERIC(name,count)					\
                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#852: FILE: include/asm-ia64/semaphore.h:34:
+#define __COMPAT_DECLARE_SEMAPHORE_GENERIC(name,count)					\
+	struct compat_semaphore name = __COMPAT_SEMAPHORE_INITIALIZER(name, count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: include/asm-ia64/semaphore.h:45:
+compat_sema_init (struct compat_semaphore *sem, int val)

CHECK:SPACING: No space is necessary after a cast
#869: FILE: include/asm-ia64/semaphore.h:47:
+	*sem = (struct compat_semaphore) __COMPAT_SEMAPHORE_INITIALIZER(*sem, val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#874: FILE: include/asm-ia64/semaphore.h:51:
+compat_init_MUTEX (struct compat_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#882: FILE: include/asm-ia64/semaphore.h:57:
+compat_init_MUTEX_LOCKED (struct compat_semaphore *sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#892: FILE: include/asm-ia64/semaphore.h:62:
+extern void __down (struct compat_semaphore * sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#892: FILE: include/asm-ia64/semaphore.h:62:
+extern void __down (struct compat_semaphore * sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#892: FILE: include/asm-ia64/semaphore.h:62:
+extern void __down (struct compat_semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#893: FILE: include/asm-ia64/semaphore.h:63:
+extern int  __down_interruptible (struct compat_semaphore * sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#893: FILE: include/asm-ia64/semaphore.h:63:
+extern int  __down_interruptible (struct compat_semaphore * sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#893: FILE: include/asm-ia64/semaphore.h:63:
+extern int  __down_interruptible (struct compat_semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#894: FILE: include/asm-ia64/semaphore.h:64:
+extern int  __down_trylock (struct compat_semaphore * sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#894: FILE: include/asm-ia64/semaphore.h:64:
+extern int  __down_trylock (struct compat_semaphore * sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: include/asm-ia64/semaphore.h:64:
+extern int  __down_trylock (struct compat_semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#895: FILE: include/asm-ia64/semaphore.h:65:
+extern void __up (struct compat_semaphore * sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#895: FILE: include/asm-ia64/semaphore.h:65:
+extern void __up (struct compat_semaphore * sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#895: FILE: include/asm-ia64/semaphore.h:65:
+extern void __up (struct compat_semaphore * sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#903: FILE: include/asm-ia64/semaphore.h:72:
+compat_down (struct compat_semaphore *sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#912: FILE: include/asm-ia64/semaphore.h:84:
+compat_down_interruptible (struct compat_semaphore * sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#912: FILE: include/asm-ia64/semaphore.h:84:
+compat_down_interruptible (struct compat_semaphore * sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#921: FILE: include/asm-ia64/semaphore.h:95:
+compat_down_trylock (struct compat_semaphore *sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#930: FILE: include/asm-ia64/semaphore.h:105:
+compat_up (struct compat_semaphore * sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: include/asm-ia64/semaphore.h:105:
+compat_up (struct compat_semaphore * sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#957: FILE: include/asm-ia64/spinlock.h:31:
+__raw_spin_lock_flags (__raw_spinlock_t *lock, unsigned long flags)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#966: FILE: include/asm-ia64/spinlock.h:90:
+static inline void __raw_spin_unlock(__raw_spinlock_t *x) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#975: FILE: include/asm-ia64/spinlock.h:110:
+#define __raw_spin_unlock(x)	do { barrier(); ((__raw_spinlock_t *) x)->lock = 0; } while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1182: FILE: include/asm-ia64/tlb.h:135:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: include/asm-ia64/tlb.h:135:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 40 warnings, 18 checks, 985 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
