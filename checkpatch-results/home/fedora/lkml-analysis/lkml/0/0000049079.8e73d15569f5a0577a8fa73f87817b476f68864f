CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#103: FILE: arch/i386/kernel/traps.c:1190:
+	_set_gate(n, DESCTYPE_TASK, (void *)0, (gdt_entry<<3));
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: include/asm-i386/desc.h:42:
+extern void set_intr_gate(unsigned int irq, void * addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/asm-i386/desc.h:42:
+extern void set_intr_gate(unsigned int irq, void * addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: include/asm-i386/desc.h:45:
+static inline void pack_descriptor(__u32 *a, __u32 *b,
+	unsigned long base, unsigned long limit, unsigned char type, unsigned char flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/asm-i386/desc.h:53:
+static inline void pack_gate(__u32 *a, __u32 *b,
+	unsigned long base, unsigned short seg, unsigned char type, unsigned char flags)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: include/asm-i386/desc.h:59:
+#define DESCTYPE_LDT ^I0x82^I/* present, system, DPL-0, LDT */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: include/asm-i386/desc.h:60:
+#define DESCTYPE_TSS ^I0x89^I/* present, system, DPL-0, 32-bit TSS */$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: include/asm-i386/desc.h:72:
+#define load_tr(tr) __asm__ __volatile("ltr %0"::"m" (tr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: include/asm-i386/desc.h:73:
+#define load_ldt(ldt) __asm__ __volatile("lldt %0"::"m" (ldt))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#160: FILE: include/asm-i386/desc.h:77:
+#define store_tr(tr) __asm__ ("str %0":"=m" (tr))
                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#160: FILE: include/asm-i386/desc.h:77:
+#define store_tr(tr) __asm__ ("str %0":"=m" (tr))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#161: FILE: include/asm-i386/desc.h:78:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#161: FILE: include/asm-i386/desc.h:78:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#175: FILE: include/asm-i386/desc.h:86:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#175: FILE: include/asm-i386/desc.h:86:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#175: FILE: include/asm-i386/desc.h:86:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#182: FILE: include/asm-i386/desc.h:93:
+	__u32 *lp = (__u32 *)((char *)dt + entry*8);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: include/asm-i386/desc.h:95:
+	*(lp+1) = entry_b;
 	    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: include/asm-i386/desc.h:105:
+	__u32 a, b;
+	pack_gate(&a, &b, (unsigned long)addr, seg, type, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: include/asm-i386/desc.h:112:
+	__u32 a, b;
+	pack_descriptor(&a, &b, (unsigned long)addr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: include/asm-i386/desc.h:121:
+	__u32 a, b;
+	pack_descriptor(&a, &b, (unsigned long)addr,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: include/asm-i386/desc.h:127:
+#define set_tss_desc(cpu,addr) __set_tss_desc(cpu, GDT_ENTRY_TSS, addr)
                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 10 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
