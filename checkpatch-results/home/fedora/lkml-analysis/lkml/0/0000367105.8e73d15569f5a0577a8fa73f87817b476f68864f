WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -Nrup -Xdontdiff linux-2.5.70/drivers/input/evdev.c linux-input/drivers/input/evdev.c

ERROR:SPACING: space required before the open brace '{'
#87: FILE: drivers/input/evdev.c:97:
+		else{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#87: FILE: drivers/input/evdev.c:97:
+		else{

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: drivers/input/evdev.c:380:
+^I.name = ^I"input/event%d",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/input/evdev.c:381:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#100: FILE: drivers/input/evdev.c:381:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/input/evdev.c:382:
+^I.minor_base = ^IEVDEV_MINOR_BASE,$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#138: FILE: drivers/input/input.c:37:
+EXPORT_SYMBOL(input_unregister_class_dev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: drivers/input/input.c:668:
+static ssize_t show_dev (struct class_device *class_dev, char *buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#156: FILE: drivers/input/input.c:676:
+static CLASS_DEVICE_ATTR(dev, S_IRUGO, show_dev, NULL);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#164: FILE: drivers/input/input.c:684:
+	devfs_mk_cdev(MKDEV(INPUT_MAJOR, intf->minor_base + intf->minor), intf->mode, intf->name, intf->minor);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#169: FILE: drivers/input/input.c:689:
+	if(input_name)

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: drivers/input/input.c:698:
+	if(err)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: drivers/input/input.c:700:
+	class_device_create_file (&dev->class_dev, &class_device_attr_dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: drivers/input/input.c:709:
+void input_unregister_class_dev(char *name, unsigned minor)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/input/input.c:719:
+	list_for_each (tmp, &input_dev_list) {

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: drivers/input/input.c:726:
+	if(found) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/input/input.c:731:
+}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#233: FILE: drivers/input/joydev.c:162:
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#233: FILE: drivers/input/joydev.c:162:
+		else{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: drivers/input/joydev.c:381:
+^I.name = ^I"js%d",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: drivers/input/joydev.c:382:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#246: FILE: drivers/input/joydev.c:382:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/input/joydev.c:383:
+^I.minor_base = ^IJOYDEV_MINOR_BASE,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: drivers/input/joydev.c:458:
+^Iinput_register_class_dev(dev, &intf); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/input/joydev.c:458:
+^Iinput_register_class_dev(dev, &intf); ^I$

ERROR:SPACING: space required before the open brace '{'
#271: FILE: drivers/input/joydev.c:471:
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#271: FILE: drivers/input/joydev.c:471:
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#295: FILE: drivers/input/mousedev.c:191:
+			else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: drivers/input/mousedev.c:192:
+				input_unregister_class_dev("input/mouse%d",mousedev->minor);
 				                                          ^

ERROR:SPACING: space required before the open brace '{'
#307: FILE: drivers/input/mousedev.c:216:
+			else{

CHECK:BRACES: Unbalanced braces around else statement
#307: FILE: drivers/input/mousedev.c:216:
+			else{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#320: FILE: drivers/input/mousedev.c:411:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#320: FILE: drivers/input/mousedev.c:411:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: drivers/input/mousedev.c:412:
+^I.minor_base = ^IMOUSEDEV_MINOR_BASE,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: drivers/input/mousedev.c:463:
+		input_unregister_class_dev("input/mouse%d",mousedev->minor);
 		                                          ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#350: FILE: drivers/input/mousedev.c:510:
 {
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: drivers/input/mousedev.c:521:
+	input_register_class_dev (mousedev_mix.handler.dev, &intf);

ERROR:SPACING: space required before the open brace '{'
#392: FILE: drivers/input/tsdev.c:136:
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#392: FILE: drivers/input/tsdev.c:136:
+		else{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: drivers/input/tsdev.c:137:
+			input_unregister_class_dev("input/ts%d",list->tsdev->minor);
 			                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: drivers/input/tsdev.c:304:
+^I.name =^I^I"input/ts%d", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: drivers/input/tsdev.c:305:
+^I.mode = ^IS_IFCHRIS | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#405: FILE: drivers/input/tsdev.c:305:
+	.mode = 	S_IFCHRIS | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#406: FILE: drivers/input/tsdev.c:306:
+^I.minor_base = ^ITSDEV_MINOR_BASE,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: drivers/input/tsdev.c:343:
+^Iinput_register_class_dev(dev, &intf);^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: drivers/input/tsdev.c:358:
+		input_unregister_class_dev("input/ts%d",tsdev->minor);
 		                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#454: FILE: include/linux/input.h:806:
+	unsigned minor;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#463: FILE: include/linux/input.h:885:
+struct input_class_interface {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#466: FILE: include/linux/input.h:888:
+	unsigned minor;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: include/linux/input.h:889:
+^Iint minor_base; $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#477: FILE: include/linux/input.h:903:
+void input_register_class_dev(struct input_dev *, struct input_class_interface *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_class_interface *' should also have an identifier name
#477: FILE: include/linux/input.h:903:
+void input_register_class_dev(struct input_dev *, struct input_class_interface *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#478: FILE: include/linux/input.h:904:
+void input_unregister_class_dev(char *, unsigned );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#478: FILE: include/linux/input.h:904:
+void input_unregister_class_dev(char *, unsigned );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#478: FILE: include/linux/input.h:904:
+void input_unregister_class_dev(char *, unsigned );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#478: FILE: include/linux/input.h:904:
+void input_unregister_class_dev(char *, unsigned );

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 31 warnings, 8 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367105.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
