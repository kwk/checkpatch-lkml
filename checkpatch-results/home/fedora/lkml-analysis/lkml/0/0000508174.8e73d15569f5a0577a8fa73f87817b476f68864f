Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:REPEATED_WORD: Possible repeated word: 'the'
#40: 
two is that the -ac patch doesn't use the page cache, while the the

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#52: 
 fs/partitions/msdos.c               |   14
               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#72: 
use.  There's a Protective MBR in the place of the normal MSDOS MBR at
                                                          ^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#2 Linux Server provider with 17% in the US and 14% Worldwide (IDC)!

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#3 Unix provider with 18% in the US (Dataquest)!

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#92: 
diff -burNp linux-2.4.11-pre5/Documentation/Configure.help linux-2.4.11-pre5.gpt/Documentation/Configure.help

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: fs/devfs/base.c:1952:
+void devfs_unregister_slave (devfs_handle_t master)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#154: FILE: fs/devfs/base.c:1956:
+	if (master == NULL) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!master"
#154: FILE: fs/devfs/base.c:1956:
+	if (master == NULL) return;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: fs/devfs/base.c:1961:
+		unregister (slave);

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#215: FILE: fs/partitions/check.c:47:
+	efi_partition,		/* this must come before msdos */
 	              		                         ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: fs/partitions/check.c:91:
+ ^I^Iguid->data4[0], guid->data4[1], guid->data4[2], guid->data4[3],$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: fs/partitions/check.c:91:
+ ^I^Iguid->data4[0], guid->data4[1], guid->data4[2], guid->data4[3],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/partitions/check.c:91:
+ ^I^Iguid->data4[0], guid->data4[1], guid->data4[2], guid->data4[3],$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#247: FILE: fs/partitions/check.c:289:
+/*
+  devfs_register_guid: create a /dev/guid entry for a disk or partition

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: fs/partitions/check.c:290:
+                       if it has a GUID.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: fs/partitions/check.c:302:
+                 to a valid kmalloc'ed GUID.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: fs/partitions/check.c:305:
+static void devfs_register_guid (struct gendisk *dev, int minor)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: fs/partitions/check.c:316:
+		guid_top_handle = devfs_mk_dir (NULL, "guid", NULL);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#276: FILE: fs/partitions/check.c:318:
+	if (!guid || !master) return;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: fs/partitions/check.c:321:
+		slave = devfs_get_unregister_slave (master);

CHECK:BRACES: braces {} should be used on all arms of this statement
#281: FILE: fs/partitions/check.c:323:
+			if (slave == master || slave == real_master) {
[...]
+			} else if (devfs_get_parent (slave) == guid_top_handle) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#282: FILE: fs/partitions/check.c:324:
+				printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: fs/partitions/check.c:324:
+				printk (KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'devfs_register_guid', this function's name, in a string
#283: FILE: fs/partitions/check.c:325:
+					"devfs_register_guid: infinite slave loop!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: fs/partitions/check.c:327:
+			} else if (devfs_get_parent (slave) == guid_top_handle) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#286: FILE: fs/partitions/check.c:328:
+				printk (KERN_INFO

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: fs/partitions/check.c:328:
+				printk (KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'devfs_register_guid', this function's name, in a string
#287: FILE: fs/partitions/check.c:329:
+					"devfs_register_guid: unregistering %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: fs/partitions/check.c:330:
+					devfs_get_name (slave, NULL));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: fs/partitions/check.c:331:
+				devfs_unregister_slave (master);

CHECK:BRACES: Unbalanced braces around else statement
#291: FILE: fs/partitions/check.c:333:
+			} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: fs/partitions/check.c:338:
+	uuid_unparse_1 (guid, guid_link);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: fs/partitions/check.c:339:
+	pos = devfs_generate_path (real_master, dirname + 3,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: fs/partitions/check.c:340:
+				   sizeof (dirname) - 3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#300: FILE: fs/partitions/check.c:342:
+		printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: fs/partitions/check.c:342:
+		printk (KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'devfs_register_guid', this function's name, in a string
#301: FILE: fs/partitions/check.c:343:
+			"devfs_register_guid: error generating path: %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: fs/partitions/check.c:348:
+	strncpy (dirname + pos, "../", 3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: fs/partitions/check.c:350:
+	st = devfs_mk_symlink (guid_top_handle, guid_link,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#313: FILE: fs/partitions/check.c:355:
+		printk ("Error %d creating symlink\n", st);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: fs/partitions/check.c:355:
+		printk ("Error %d creating symlink\n", st);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: fs/partitions/check.c:357:
+		devfs_auto_unregister (master, guid_handle);

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#320: FILE: fs/partitions/check.c:362:
+  free_disk_guids: kfree all guid data structures alloced for
                                                   ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#320: FILE: fs/partitions/check.c:362:
+/*
+  free_disk_guids: kfree all guid data structures alloced for

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: fs/partitions/check.c:367:
+static void free_disk_guids (struct gendisk *dev, int minor)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#332: FILE: fs/partitions/check.c:374:
+		if (!guid) continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: fs/partitions/check.c:375:
+		kfree (guid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#351: FILE: fs/partitions/check.c:393:
+	/* Even if the devfs handle is still up-to-date,
+	   the GUID entry probably isn't */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#351: FILE: fs/partitions/check.c:393:
+	   the GUID entry probably isn't */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: fs/partitions/check.c:408:
+	devfs_register_guid (dev, minor + part);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: fs/partitions/check.c:455:
+	devfs_register_guid (dev, minor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: fs/partitions/check.c:480:
+		free_disk_guids (dev, minor);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: fs/partitions/check.c:505:
+	/* Initialize all guid fields to NULL (=^ not kmalloc'ed).
+	   It is assumed that drivers call register_disk after

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#412: FILE: fs/partitions/check.c:508:
+	   (among which hd and sd) do. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#425: FILE: fs/partitions/check.c:531:
+	/* In case this is a revalidation, free GUID memory.
+	   On the first call for this device,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: fs/partitions/check.c:533:
+	   and nothing will happen. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: fs/partitions/check.c:534:
+	free_disk_guids (dev, first_minor);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#437: FILE: fs/partitions/efi.c:1:
+/************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#461: FILE: fs/partitions/efi.c:25:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#462: FILE: fs/partitions/efi.c:26:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#531: FILE: fs/partitions/efi.c:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#534: FILE: fs/partitions/efi.c:98:
+#define Dprintk(x...) printk(KERN_DEBUG x)

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#534: FILE: fs/partitions/efi.c:98:
+#define Dprintk(x...) printk(KERN_DEBUG x)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#550: FILE: fs/partitions/efi.c:114:
+__setup("gpt", force_gpt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#552: FILE: fs/partitions/efi.c:116:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: fs/partitions/efi.c:118:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#572: FILE: fs/partitions/efi.c:136:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: fs/partitions/efi.c:149:
+static void le_guid_to_cpus(efi_guid_t * guid)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#592: FILE: fs/partitions/efi.c:156:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: fs/partitions/efi.c:169:
+static void le_part_attributes_to_cpus(GuidPartitionEntryAttributes_t * a)

CHECK:CAMELCASE: Avoid CamelCase: <GuidPartitionEntryAttributes_t>
#605: FILE: fs/partitions/efi.c:169:
+static void le_part_attributes_to_cpus(GuidPartitionEntryAttributes_t * a)

CHECK:SPACING: No space is necessary after a cast
#607: FILE: fs/partitions/efi.c:171:
+	u64 *b = (u64 *) a;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#620: FILE: fs/partitions/efi.c:184:
+static int is_pmbr_valid(LegacyMBR_t * mbr)

CHECK:CAMELCASE: Avoid CamelCase: <LegacyMBR_t>
#620: FILE: fs/partitions/efi.c:184:
+static int is_pmbr_valid(LegacyMBR_t * mbr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: fs/partitions/efi.c:187:
+	int i, found = 0, signature = 0;
+	if (!mbr)

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#625: FILE: fs/partitions/efi.c:189:
+	signature = (le16_to_cpu(mbr->Signature) == MSDOS_MBR_SIGNATURE);

CHECK:CAMELCASE: Avoid CamelCase: <PartitionRecord>
#627: FILE: fs/partitions/efi.c:191:
+		if (mbr->PartitionRecord[i].OSType ==

CHECK:CAMELCASE: Avoid CamelCase: <OSType>
#627: FILE: fs/partitions/efi.c:191:
+		if (mbr->PartitionRecord[i].OSType ==

CHECK:LINE_SPACING: Please don't use multiple blank lines
#636: FILE: fs/partitions/efi.c:200:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#657: FILE: fs/partitions/efi.c:221:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'size'
#664: FILE: fs/partitions/efi.c:228:
+ *  - buffer is a buffer of size size into which data copied

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: fs/partitions/efi.c:239:
+	 u8 * buffer, size_t count)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#677: FILE: fs/partitions/efi.c:241:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#681: FILE: fs/partitions/efi.c:245:
+	Sector sect;

CHECK:SPACING: No space is necessary after a cast
#698: FILE: fs/partitions/efi.c:262:
+				       (unsigned char *) page_address(sect.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'sect.v'
#699: FILE: fs/partitions/efi.c:263:
+				       (unsigned char *) page_address(sect.
+								      v));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#712: FILE: fs/partitions/efi.c:276:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#714: FILE: fs/partitions/efi.c:278:
+static void print_gpt_header(GuidPartitionTableHeader_t * gpt)

CHECK:CAMELCASE: Avoid CamelCase: <GuidPartitionTableHeader_t>
#714: FILE: fs/partitions/efi.c:278:
+static void print_gpt_header(GuidPartitionTableHeader_t * gpt)

CHECK:CAMELCASE: Avoid CamelCase: <Revision>
#720: FILE: fs/partitions/efi.c:284:
+	Dprintk("Revision       : %x\n", gpt->Revision);

CHECK:CAMELCASE: Avoid CamelCase: <HeaderSize>
#721: FILE: fs/partitions/efi.c:285:
+	Dprintk("HeaderSize     : %x\n", gpt->HeaderSize);

CHECK:CAMELCASE: Avoid CamelCase: <HeaderCRC32>
#722: FILE: fs/partitions/efi.c:286:
+	Dprintk("HeaderCRC32    : %x\n", gpt->HeaderCRC32);

CHECK:CAMELCASE: Avoid CamelCase: <MyLBA>
#723: FILE: fs/partitions/efi.c:287:
+	Dprintk("MyLBA          : " PU64X "\n", gpt->MyLBA);

CHECK:CAMELCASE: Avoid CamelCase: <AlternateLBA>
#724: FILE: fs/partitions/efi.c:288:
+	Dprintk("AlternateLBA   : " PU64X "\n", gpt->AlternateLBA);

CHECK:CAMELCASE: Avoid CamelCase: <FirstUsableLBA>
#725: FILE: fs/partitions/efi.c:289:
+	Dprintk("FirstUsableLBA : " PU64X "\n", gpt->FirstUsableLBA);

CHECK:CAMELCASE: Avoid CamelCase: <LastUsableLBA>
#726: FILE: fs/partitions/efi.c:290:
+	Dprintk("LastUsableLBA  : " PU64X "\n", gpt->LastUsableLBA);

CHECK:CAMELCASE: Avoid CamelCase: <PartitionEntryLBA>
#728: FILE: fs/partitions/efi.c:292:
+	Dprintk("PartitionEntryLBA : " PU64X "\n", gpt->PartitionEntryLBA);

CHECK:CAMELCASE: Avoid CamelCase: <NumberOfPartitionEntries>
#730: FILE: fs/partitions/efi.c:294:
+		gpt->NumberOfPartitionEntries);

CHECK:CAMELCASE: Avoid CamelCase: <SizeOfPartitionEntry>
#731: FILE: fs/partitions/efi.c:295:
+	Dprintk("SizeOfPartitionEntry : %x\n", gpt->SizeOfPartitionEntry);

CHECK:CAMELCASE: Avoid CamelCase: <PartitionEntryArrayCRC32>
#733: FILE: fs/partitions/efi.c:297:
+		gpt->PartitionEntryArrayCRC32);

WARNING:RETURN_VOID: void function return statements are not generally useful
#736: FILE: fs/partitions/efi.c:300:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#738: FILE: fs/partitions/efi.c:302:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <GuidPartitionEntry_t>
#751: FILE: fs/partitions/efi.c:315:
+static GuidPartitionEntry_t *

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: fs/partitions/efi.c:317:
+                       struct block_device *bdev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: fs/partitions/efi.c:317:
+                       struct block_device *bdev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: fs/partitions/efi.c:318:
+                       GuidPartitionTableHeader_t *gpt)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: fs/partitions/efi.c:318:
+                       GuidPartitionTableHeader_t *gpt)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#759: FILE: fs/partitions/efi.c:323:
+	GuidPartitionEntry_t *pte;
+	if (!hd || !bdev || !gpt)

CHECK:SPACING: No space is necessary after a cast
#771: FILE: fs/partitions/efi.c:335:
+	if (read_lba(hd, bdev, gpt->PartitionEntryLBA, (u8 *) pte,

CHECK:CAMELCASE: Avoid CamelCase: <PartitionTypeGuid>
#778: FILE: fs/partitions/efi.c:342:
+		le_guid_to_cpus(&pte[i].PartitionTypeGuid);

CHECK:CAMELCASE: Avoid CamelCase: <UniquePartitionGuid>
#779: FILE: fs/partitions/efi.c:343:
+		le_guid_to_cpus(&pte[i].UniquePartitionGuid);

CHECK:CAMELCASE: Avoid CamelCase: <StartingLBA>
#780: FILE: fs/partitions/efi.c:344:
+		le64_to_cpus(pte[i].StartingLBA);

CHECK:CAMELCASE: Avoid CamelCase: <EndingLBA>
#781: FILE: fs/partitions/efi.c:345:
+		le64_to_cpus(pte[i].EndingLBA);

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#782: FILE: fs/partitions/efi.c:346:
+		le_part_attributes_to_cpus(&pte[i].Attributes);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#783: FILE: fs/partitions/efi.c:347:
+		for (j = 0; j < (72 / sizeof(efi_char16_t)); j++) {
+			le16_to_cpus((u16) (pte[i].PartitionName[j]));
+		}

CHECK:SPACING: No space is necessary after a cast
#784: FILE: fs/partitions/efi.c:348:
+			le16_to_cpus((u16) (pte[i].PartitionName[j]));

CHECK:CAMELCASE: Avoid CamelCase: <PartitionName>
#784: FILE: fs/partitions/efi.c:348:
+			le16_to_cpus((u16) (pte[i].PartitionName[j]));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#791: FILE: fs/partitions/efi.c:355:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#812: FILE: fs/partitions/efi.c:376:
+							 *bdev, u64 lba)
 							 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#815: FILE: fs/partitions/efi.c:379:
+	GuidPartitionTableHeader_t *gpt;
+	if (!hd || !bdev)

CHECK:SPACING: No space is necessary after a cast
#824: FILE: fs/partitions/efi.c:388:
+	if (read_lba(hd, bdev, lba, (u8 *) gpt,

CHECK:CAMELCASE: Avoid CamelCase: <Reserved1>
#837: FILE: fs/partitions/efi.c:401:
+	le32_to_cpus(gpt->Reserved1);

CHECK:CAMELCASE: Avoid CamelCase: <DiskGUID>
#842: FILE: fs/partitions/efi.c:406:
+	le_guid_to_cpus(&gpt->DiskGUID);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#853: FILE: fs/partitions/efi.c:417:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#871: FILE: fs/partitions/efi.c:435:
+	     GuidPartitionTableHeader_t ** gpt,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#872: FILE: fs/partitions/efi.c:436:
+	     GuidPartitionEntry_t ** ptes)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#878: FILE: fs/partitions/efi.c:442:
+	if (!(*gpt = alloc_read_gpt_header(hd, bdev, lba)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#895: FILE: fs/partitions/efi.c:459:
+	    efi_crc32((const unsigned char *) (*gpt), (*gpt)->HeaderSize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#897: FILE: fs/partitions/efi.c:461:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#909: FILE: fs/partitions/efi.c:473:
+	 * the GUID Partition Table */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#918: FILE: fs/partitions/efi.c:482:
+	if (!(*ptes = alloc_read_gpt_entries(hd, bdev, *gpt))) {

CHECK:SPACING: No space is necessary after a cast
#926: FILE: fs/partitions/efi.c:490:
+	crc = efi_crc32((const unsigned char *) (*ptes),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#940: FILE: fs/partitions/efi.c:504:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#945: FILE: fs/partitions/efi.c:509:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#962: FILE: fs/partitions/efi.c:526:
+	       GuidPartitionTableHeader_t ** gpt,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#963: FILE: fs/partitions/efi.c:527:
+	       GuidPartitionEntry_t ** ptes)

CHECK:CAMELCASE: Avoid CamelCase: <legacyMbr>
#968: FILE: fs/partitions/efi.c:532:
+	LegacyMBR_t *legacyMbr = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#970: FILE: fs/partitions/efi.c:534:
+	u64 lastlba;
+	if (!hd || !bdev || !gpt || !ptes)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#982: FILE: fs/partitions/efi.c:546:
+			printk(KERN_WARNING

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#989: FILE: fs/partitions/efi.c:553:
+		if (agpt)
+			kfree(agpt);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#991: FILE: fs/partitions/efi.c:555:
+		if (aptes)
+			kfree(aptes);

CHECK:BRACES: Unbalanced braces around else statement
#993: FILE: fs/partitions/efi.c:557:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#998: FILE: fs/partitions/efi.c:562:
+			/* Primary is bad, alternate is good.
+			   Return values from the alternate and warn.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1000: FILE: fs/partitions/efi.c:564:
+			printk(KERN_WARNING

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: fs/partitions/efi.c:577:
+			read_lba(hd, bdev, 0, (u8 *) legacyMbr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1023: FILE: fs/partitions/efi.c:587:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1025: FILE: fs/partitions/efi.c:589:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1028: FILE: fs/partitions/efi.c:592:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1030: FILE: fs/partitions/efi.c:594:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1032: FILE: fs/partitions/efi.c:596:
+			printk(KERN_WARNING

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1042: FILE: fs/partitions/efi.c:606:
+	if (pgpt) {
+		kfree(pgpt);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1046: FILE: fs/partitions/efi.c:610:
+	if (agpt) {
+		kfree(agpt);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1050: FILE: fs/partitions/efi.c:614:
+	if (pptes) {
+		kfree(pptes);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1054: FILE: fs/partitions/efi.c:618:
+	if (aptes) {
+		kfree(aptes);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1063: FILE: fs/partitions/efi.c:627:
+/* Fill in the GUID field of the partition.
+   It is set to NULL by register_disk before. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1063: FILE: fs/partitions/efi.c:627:
+   It is set to NULL by register_disk before. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1066: FILE: fs/partitions/efi.c:630:
+		   const int minor, const efi_guid_t * guid)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1078: FILE: fs/partitions/efi.c:642:
+		printk(KERN_WARNING

CHECK:CAMELCASE: Avoid CamelCase: <unusedGuid>
#1109: FILE: fs/partitions/efi.c:673:
+	efi_guid_t unusedGuid = UNUSED_ENTRY_GUID;

CHECK:CAMELCASE: Avoid CamelCase: <raidGuid>
#1111: FILE: fs/partitions/efi.c:675:
+	efi_guid_t raidGuid = PARTITION_LINUX_RAID_GUID;

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1119: FILE: fs/partitions/efi.c:683:
+		if (gpt)
+			kfree(gpt);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1121: FILE: fs/partitions/efi.c:685:
+		if (ptes)
+			kfree(ptes);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around gpt->DiskGUID
#1127: FILE: fs/partitions/efi.c:691:
+	set_partition_guid(hd, nextminor - 1, &(gpt->DiskGUID));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ptes[i].UniquePartitionGuid
#1139: FILE: fs/partitions/efi.c:703:
+				   &(ptes[i].UniquePartitionGuid));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1152: FILE: fs/partitions/efi.c:716:
+
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1155: FILE: fs/partitions/efi.c:719:
+	printk("\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1158: FILE: fs/partitions/efi.c:722:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1160: FILE: fs/partitions/efi.c:724:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1184: FILE: fs/partitions/efi.c:748:
+{
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1191: FILE: fs/partitions/efi.c:755:
+	if (blksize_size[MAJOR(dev)]) {
+		orig_blksize_size = blksize_size[MAJOR(dev)][MINOR(dev)];
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1207: FILE: fs/partitions/efi.c:771:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1230: FILE: fs/partitions/efi.h:1:
+/************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1249: FILE: fs/partitions/efi.h:20:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1250: FILE: fs/partitions/efi.h:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1271: FILE: fs/partitions/efi.h:42:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: fs/partitions/efi.h:53:
+    ((efi_guid_t) { 0x00000000, 0x0000, 0x0000, { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: fs/partitions/efi.h:57:
+    ((efi_guid_t) { 0x024DEE41, 0x33E7, 0x11d3, { 0x9D, 0x69, 0x00, 0x08, 0xC7, 0x81, 0xF3, 0x9F }})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: fs/partitions/efi.h:59:
+    ((efi_guid_t) { 0xE3C9E316, 0x0B5C, 0x4DB8, { 0x81, 0x7D, 0xF9, 0x2D, 0xF0, 0x02, 0x15, 0xAE }})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: fs/partitions/efi.h:61:
+    ((efi_guid_t) { 0xEBD0A0A2, 0xB9E5, 0x4433, { 0x87, 0xC0, 0x68, 0xB6, 0xB7, 0x26, 0x99, 0xC7 }})$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1292: FILE: fs/partitions/efi.h:63:
+    ((efi_guid_t) { 0xa19d880f, 0x05fc, 0x4d3b, { 0xa0, 0x06, 0x74, 0x3f, 0x0f, 0x84, 0x91, 0x1e  }})

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: fs/partitions/efi.h:63:
+    ((efi_guid_t) { 0xa19d880f, 0x05fc, 0x4d3b, { 0xa0, 0x06, 0x74, 0x3f, 0x0f, 0x84, 0x91, 0x1e  }})$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1294: FILE: fs/partitions/efi.h:65:
+    ((efi_guid_t) { 0x0657fd6d, 0xa4ab, 0x43c4, { 0x84, 0xe5, 0x09, 0x33, 0xc8, 0x4b, 0x4f, 0x4f  }})

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: fs/partitions/efi.h:65:
+    ((efi_guid_t) { 0x0657fd6d, 0xa4ab, 0x43c4, { 0x84, 0xe5, 0x09, 0x33, 0xc8, 0x4b, 0x4f, 0x4f  }})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: fs/partitions/efi.h:67:
+    ((efi_guid_t) { 0xe6d6d379, 0xf507, 0x44c2, { 0xa2, 0x3c, 0x23, 0x8f, 0x2a, 0x3d, 0xf9, 0x28 }})$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1298: FILE: fs/partitions/efi.h:69:
+typedef struct _GuidPartitionTableHeader_t {

CHECK:CAMELCASE: Avoid CamelCase: <_GuidPartitionTableHeader_t>
#1298: FILE: fs/partitions/efi.h:69:
+typedef struct _GuidPartitionTableHeader_t {

CHECK:CAMELCASE: Avoid CamelCase: <Reserved2>
#1313: FILE: fs/partitions/efi.h:84:
+	u8 Reserved2[GPT_BLOCK_SIZE - 92];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1314: FILE: fs/partitions/efi.h:85:
+} __attribute__ ((packed)) GuidPartitionTableHeader_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1316: FILE: fs/partitions/efi.h:87:
+typedef struct _GuidPartitionEntryAttributes_t {

CHECK:CAMELCASE: Avoid CamelCase: <_GuidPartitionEntryAttributes_t>
#1316: FILE: fs/partitions/efi.h:87:
+typedef struct _GuidPartitionEntryAttributes_t {

CHECK:CAMELCASE: Avoid CamelCase: <RequiredToFunction>
#1317: FILE: fs/partitions/efi.h:88:
+	u64 RequiredToFunction:1;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#1318: FILE: fs/partitions/efi.h:89:
+	u64 Reserved:63;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1319: FILE: fs/partitions/efi.h:90:
+} __attribute__ ((packed)) GuidPartitionEntryAttributes_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1321: FILE: fs/partitions/efi.h:92:
+typedef struct _GuidPartitionEntry_t {

CHECK:CAMELCASE: Avoid CamelCase: <_GuidPartitionEntry_t>
#1321: FILE: fs/partitions/efi.h:92:
+typedef struct _GuidPartitionEntry_t {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1328: FILE: fs/partitions/efi.h:99:
+} __attribute__ ((packed)) GuidPartitionEntry_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1330: FILE: fs/partitions/efi.h:101:
+typedef struct _PartitionRecord_t {

CHECK:CAMELCASE: Avoid CamelCase: <_PartitionRecord_t>
#1330: FILE: fs/partitions/efi.h:101:
+typedef struct _PartitionRecord_t {

CHECK:CAMELCASE: Avoid CamelCase: <BootIndicator>
#1331: FILE: fs/partitions/efi.h:102:
+	u8 BootIndicator;	/* Not used by EFI firmware. Set to 0x80 to indicate that this

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1332: FILE: fs/partitions/efi.h:103:
+	u8 BootIndicator;	/* Not used by EFI firmware. Set to 0x80 to indicate that this
+				   is the bootable legacy partition. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1332: FILE: fs/partitions/efi.h:103:
+				   is the bootable legacy partition. */

CHECK:CAMELCASE: Avoid CamelCase: <StartHead>
#1333: FILE: fs/partitions/efi.h:104:
+	u8 StartHead;		/* Start of partition in CHS address, not used by EFI firmware. */

CHECK:CAMELCASE: Avoid CamelCase: <StartSector>
#1334: FILE: fs/partitions/efi.h:105:
+	u8 StartSector;		/* Start of partition in CHS address, not used by EFI firmware. */

CHECK:CAMELCASE: Avoid CamelCase: <StartTrack>
#1335: FILE: fs/partitions/efi.h:106:
+	u8 StartTrack;		/* Start of partition in CHS address, not used by EFI firmware. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1337: FILE: fs/partitions/efi.h:108:
+	u8 OSType;		/* OS type. A value of 0xEF defines an EFI system partition.
+				   Other values are reserved for legacy operating systems, and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1338: FILE: fs/partitions/efi.h:109:
+				   allocated independently of the EFI specification. */

CHECK:CAMELCASE: Avoid CamelCase: <EndHead>
#1339: FILE: fs/partitions/efi.h:110:
+	u8 EndHead;		/* End of partition in CHS address, not used by EFI firmware. */

CHECK:CAMELCASE: Avoid CamelCase: <EndSector>
#1340: FILE: fs/partitions/efi.h:111:
+	u8 EndSector;		/* End of partition in CHS address, not used by EFI firmware. */

CHECK:CAMELCASE: Avoid CamelCase: <EndTrack>
#1341: FILE: fs/partitions/efi.h:112:
+	u8 EndTrack;		/* End of partition in CHS address, not used by EFI firmware. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1343: FILE: fs/partitions/efi.h:114:
+	u32 StartingLBA;	/* Starting LBA address of the partition on the disk. Used by
+				   EFI firmware to define the start of the partition. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1343: FILE: fs/partitions/efi.h:114:
+				   EFI firmware to define the start of the partition. */

CHECK:CAMELCASE: Avoid CamelCase: <SizeInLBA>
#1344: FILE: fs/partitions/efi.h:115:
+	u32 SizeInLBA;		/* Size of partition in LBA. Used by EFI firmware to determine

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1345: FILE: fs/partitions/efi.h:116:
+	u32 SizeInLBA;		/* Size of partition in LBA. Used by EFI firmware to determine
+				   the size of the partition. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1345: FILE: fs/partitions/efi.h:116:
+				   the size of the partition. */

CHECK:CAMELCASE: Avoid CamelCase: <PartitionRecord_t>
#1346: FILE: fs/partitions/efi.h:117:
+} PartitionRecord_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1348: FILE: fs/partitions/efi.h:119:
+typedef struct _LegacyMBR_t {

CHECK:CAMELCASE: Avoid CamelCase: <_LegacyMBR_t>
#1348: FILE: fs/partitions/efi.h:119:
+typedef struct _LegacyMBR_t {

CHECK:CAMELCASE: Avoid CamelCase: <BootCode>
#1349: FILE: fs/partitions/efi.h:120:
+	u8 BootCode[440];

CHECK:CAMELCASE: Avoid CamelCase: <UniqueMBRSignature>
#1350: FILE: fs/partitions/efi.h:121:
+	u32 UniqueMBRSignature;

CHECK:CAMELCASE: Avoid CamelCase: <Unknown>
#1351: FILE: fs/partitions/efi.h:122:
+	u16 Unknown;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1354: FILE: fs/partitions/efi.h:125:
+} __attribute__ ((packed)) LegacyMBR_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1356: FILE: fs/partitions/efi.h:127:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1363: FILE: fs/partitions/efi.h:134:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1365: FILE: fs/partitions/efi.h:136:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1405: FILE: fs/partitions/msdos.c:574:
+	for (i=1 ; i<=4 ; i++,p++) {
 	      ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#1405: FILE: fs/partitions/msdos.c:574:
+	for (i=1 ; i<=4 ; i++,p++) {
 	            ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1405: FILE: fs/partitions/msdos.c:574:
+	for (i=1 ; i<=4 ; i++,p++) {
 	                     ^

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#1406: FILE: fs/partitions/msdos.c:575:
+		/* If this is an EFI GPT disk, msdos should ignore it. */
 		                               ^^^^^

CHECK:SPACING: No space is necessary after a cast
#1412: FILE: fs/partitions/msdos.c:581:
+	p = (struct partition *) (data + 0x1be);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1421: FILE: include/linux/crc32.h:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1435: FILE: include/linux/crc32.h:15:
+extern u32 crc32 (const void *buf, unsigned long len, u32 seed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1435: FILE: include/linux/crc32.h:15:
+extern u32 crc32 (const void *buf, unsigned long len, u32 seed);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1446: FILE: include/linux/devfs_fs_kernel.h:101:
+extern void devfs_unregister_slave (devfs_handle_t master);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1446: FILE: include/linux/devfs_fs_kernel.h:101:
+extern void devfs_unregister_slave (devfs_handle_t master);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1491: FILE: lib/crc32.c:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: lib/crc32.c:54:
+      0x00000000L, 0x77073096L, 0xee0e612cL, 0x990951baL, 0x076dc419L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: lib/crc32.c:55:
+      0x706af48fL, 0xe963a535L, 0x9e6495a3L, 0x0edb8832L, 0x79dcb8a4L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: lib/crc32.c:56:
+      0xe0d5e91eL, 0x97d2d988L, 0x09b64c2bL, 0x7eb17cbdL, 0xe7b82d07L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: lib/crc32.c:57:
+      0x90bf1d91L, 0x1db71064L, 0x6ab020f2L, 0xf3b97148L, 0x84be41deL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: lib/crc32.c:58:
+      0x1adad47dL, 0x6ddde4ebL, 0xf4d4b551L, 0x83d385c7L, 0x136c9856L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: lib/crc32.c:59:
+      0x646ba8c0L, 0xfd62f97aL, 0x8a65c9ecL, 0x14015c4fL, 0x63066cd9L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: lib/crc32.c:60:
+      0xfa0f3d63L, 0x8d080df5L, 0x3b6e20c8L, 0x4c69105eL, 0xd56041e4L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: lib/crc32.c:61:
+      0xa2677172L, 0x3c03e4d1L, 0x4b04d447L, 0xd20d85fdL, 0xa50ab56bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: lib/crc32.c:62:
+      0x35b5a8faL, 0x42b2986cL, 0xdbbbc9d6L, 0xacbcf940L, 0x32d86ce3L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: lib/crc32.c:63:
+      0x45df5c75L, 0xdcd60dcfL, 0xabd13d59L, 0x26d930acL, 0x51de003aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: lib/crc32.c:64:
+      0xc8d75180L, 0xbfd06116L, 0x21b4f4b5L, 0x56b3c423L, 0xcfba9599L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: lib/crc32.c:65:
+      0xb8bda50fL, 0x2802b89eL, 0x5f058808L, 0xc60cd9b2L, 0xb10be924L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: lib/crc32.c:66:
+      0x2f6f7c87L, 0x58684c11L, 0xc1611dabL, 0xb6662d3dL, 0x76dc4190L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: lib/crc32.c:67:
+      0x01db7106L, 0x98d220bcL, 0xefd5102aL, 0x71b18589L, 0x06b6b51fL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: lib/crc32.c:68:
+      0x9fbfe4a5L, 0xe8b8d433L, 0x7807c9a2L, 0x0f00f934L, 0x9609a88eL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: lib/crc32.c:69:
+      0xe10e9818L, 0x7f6a0dbbL, 0x086d3d2dL, 0x91646c97L, 0xe6635c01L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: lib/crc32.c:70:
+      0x6b6b51f4L, 0x1c6c6162L, 0x856530d8L, 0xf262004eL, 0x6c0695edL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: lib/crc32.c:71:
+      0x1b01a57bL, 0x8208f4c1L, 0xf50fc457L, 0x65b0d9c6L, 0x12b7e950L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: lib/crc32.c:72:
+      0x8bbeb8eaL, 0xfcb9887cL, 0x62dd1ddfL, 0x15da2d49L, 0x8cd37cf3L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: lib/crc32.c:73:
+      0xfbd44c65L, 0x4db26158L, 0x3ab551ceL, 0xa3bc0074L, 0xd4bb30e2L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: lib/crc32.c:74:
+      0x4adfa541L, 0x3dd895d7L, 0xa4d1c46dL, 0xd3d6f4fbL, 0x4369e96aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: lib/crc32.c:75:
+      0x346ed9fcL, 0xad678846L, 0xda60b8d0L, 0x44042d73L, 0x33031de5L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: lib/crc32.c:76:
+      0xaa0a4c5fL, 0xdd0d7cc9L, 0x5005713cL, 0x270241aaL, 0xbe0b1010L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: lib/crc32.c:77:
+      0xc90c2086L, 0x5768b525L, 0x206f85b3L, 0xb966d409L, 0xce61e49fL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: lib/crc32.c:78:
+      0x5edef90eL, 0x29d9c998L, 0xb0d09822L, 0xc7d7a8b4L, 0x59b33d17L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: lib/crc32.c:79:
+      0x2eb40d81L, 0xb7bd5c3bL, 0xc0ba6cadL, 0xedb88320L, 0x9abfb3b6L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: lib/crc32.c:80:
+      0x03b6e20cL, 0x74b1d29aL, 0xead54739L, 0x9dd277afL, 0x04db2615L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: lib/crc32.c:81:
+      0x73dc1683L, 0xe3630b12L, 0x94643b84L, 0x0d6d6a3eL, 0x7a6a5aa8L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1572: FILE: lib/crc32.c:82:
+      0xe40ecf0bL, 0x9309ff9dL, 0x0a00ae27L, 0x7d079eb1L, 0xf00f9344L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: lib/crc32.c:83:
+      0x8708a3d2L, 0x1e01f268L, 0x6906c2feL, 0xf762575dL, 0x806567cbL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: lib/crc32.c:84:
+      0x196c3671L, 0x6e6b06e7L, 0xfed41b76L, 0x89d32be0L, 0x10da7a5aL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: lib/crc32.c:85:
+      0x67dd4accL, 0xf9b9df6fL, 0x8ebeeff9L, 0x17b7be43L, 0x60b08ed5L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: lib/crc32.c:86:
+      0xd6d6a3e8L, 0xa1d1937eL, 0x38d8c2c4L, 0x4fdff252L, 0xd1bb67f1L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: lib/crc32.c:87:
+      0xa6bc5767L, 0x3fb506ddL, 0x48b2364bL, 0xd80d2bdaL, 0xaf0a1b4cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: lib/crc32.c:88:
+      0x36034af6L, 0x41047a60L, 0xdf60efc3L, 0xa867df55L, 0x316e8eefL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1579: FILE: lib/crc32.c:89:
+      0x4669be79L, 0xcb61b38cL, 0xbc66831aL, 0x256fd2a0L, 0x5268e236L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1580: FILE: lib/crc32.c:90:
+      0xcc0c7795L, 0xbb0b4703L, 0x220216b9L, 0x5505262fL, 0xc5ba3bbeL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: lib/crc32.c:91:
+      0xb2bd0b28L, 0x2bb45a92L, 0x5cb36a04L, 0xc2d7ffa7L, 0xb5d0cf31L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: lib/crc32.c:92:
+      0x2cd99e8bL, 0x5bdeae1dL, 0x9b64c2b0L, 0xec63f226L, 0x756aa39cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: lib/crc32.c:93:
+      0x026d930aL, 0x9c0906a9L, 0xeb0e363fL, 0x72076785L, 0x05005713L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: lib/crc32.c:94:
+      0x95bf4a82L, 0xe2b87a14L, 0x7bb12baeL, 0x0cb61b38L, 0x92d28e9bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: lib/crc32.c:95:
+      0xe5d5be0dL, 0x7cdcefb7L, 0x0bdbdf21L, 0x86d3d2d4L, 0xf1d4e242L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: lib/crc32.c:96:
+      0x68ddb3f8L, 0x1fda836eL, 0x81be16cdL, 0xf6b9265bL, 0x6fb077e1L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: lib/crc32.c:97:
+      0x18b74777L, 0x88085ae6L, 0xff0f6a70L, 0x66063bcaL, 0x11010b5cL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: lib/crc32.c:98:
+      0x8f659effL, 0xf862ae69L, 0x616bffd3L, 0x166ccf45L, 0xa00ae278L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: lib/crc32.c:99:
+      0xd70dd2eeL, 0x4e048354L, 0x3903b3c2L, 0xa7672661L, 0xd06016f7L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: lib/crc32.c:100:
+      0x4969474dL, 0x3e6e77dbL, 0xaed16a4aL, 0xd9d65adcL, 0x40df0b66L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: lib/crc32.c:101:
+      0x37d83bf0L, 0xa9bcae53L, 0xdebb9ec5L, 0x47b2cf7fL, 0x30b5ffe9L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: lib/crc32.c:102:
+      0xbdbdf21cL, 0xcabac28aL, 0x53b39330L, 0x24b4a3a6L, 0xbad03605L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: lib/crc32.c:103:
+      0xcdd70693L, 0x54de5729L, 0x23d967bfL, 0xb3667a2eL, 0xc4614ab8L,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: lib/crc32.c:104:
+      0x5d681b02L, 0x2a6f2b94L, 0xb40bbe37L, 0xc30c8ea1L, 0x5a05df1bL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1595: FILE: lib/crc32.c:105:
+      0x2d02ef8dL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: lib/crc32.c:106:
+   };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1603: FILE: lib/crc32.c:113:
+  unsigned long i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1604: FILE: lib/crc32.c:114:
+  unsigned long i;
+  register u32 crc32val;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: lib/crc32.c:114:
+  register u32 crc32val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1605: FILE: lib/crc32.c:115:
+  const unsigned char *s = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1607: FILE: lib/crc32.c:117:
+  crc32val = seed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1608: FILE: lib/crc32.c:118:
+  for (i = 0;  i < len;  i ++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1608: FILE: lib/crc32.c:118:
+  for (i = 0;  i < len;  i ++)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1608: FILE: lib/crc32.c:118:
+  for (i = 0;  i < len;  i ++)
+    {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#1608: FILE: lib/crc32.c:118:
+  for (i = 0;  i < len;  i ++)
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: lib/crc32.c:119:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: lib/crc32.c:120:
+      crc32val =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1613: FILE: lib/crc32.c:123:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: lib/crc32.c:124:
+  return crc32val;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 180 warnings, 93 checks, 1454 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
