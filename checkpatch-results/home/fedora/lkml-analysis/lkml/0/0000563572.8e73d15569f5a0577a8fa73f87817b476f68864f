WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -u -r linux-2.2.18-pre24.clean/drivers/char/rio/rio_linux.c linux-2.2.18-pre24.rio_break/drivers/char/rio/rio_linux.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: drivers/char/rio/rio_linux.c:518:
+  rio_dprintk ( RIO_DEBUG_IFLOW, "riointr() doing host %p type %d\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/char/rio/rio_linux.c:518:
+  rio_dprintk ( RIO_DEBUG_IFLOW, "riointr() doing host %p type %d\n", $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: drivers/char/rio/rio_linux.c:518:
+  rio_dprintk ( RIO_DEBUG_IFLOW, "riointr() doing host %p type %d\n", 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#69: FILE: drivers/char/rio/rio_linux.c:518:
+  rio_dprintk ( RIO_DEBUG_IFLOW, "riointr() doing host %p type %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: drivers/char/rio/rio_linux.c:519:
+  rio_dprintk ( RIO_DEBUG_IFLOW, "riointr() doing host %p type %d\n", 
                 (int) ptr, HostP->Type);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/char/rio/rio_linux.c:626:
+  struct Port *PortP;$

CHECK:CAMELCASE: Avoid CamelCase: <Port>
#77: FILE: drivers/char/rio/rio_linux.c:626:
+  struct Port *PortP;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PortP>
#77: FILE: drivers/char/rio/rio_linux.c:626:
+  struct Port *PortP;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/char/rio/rio_linux.c:630:
+  PortP = (struct Port *)ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/char/rio/rio_linux.c:631:
+  PortP->gs.tty = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/char/rio/rio_linux.c:684:
+  struct Port *PortP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/char/rio/rio_linux.c:686:
+  func_enter();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/char/rio/rio_linux.c:687:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/char/rio/rio_linux.c:687:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/char/rio/rio_linux.c:688:
+  PortP = (struct Port *)ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/rio/rio_linux.c:689:
+  PortP->gs.tty = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/char/rio/rio_linux.c:715:
+  PortP->gs.tty = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/char/rio/rio_linux.c:769:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/char/rio/rio_linux.c:770:
+  case TCSBRK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/char/rio/rio_linux.c:771:
+    if ( PortP->State & RIO_DELETED ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#124: FILE: drivers/char/rio/rio_linux.c:771:
+    if ( PortP->State & RIO_DELETED ) {
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#124: FILE: drivers/char/rio/rio_linux.c:771:
+    if ( PortP->State & RIO_DELETED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: drivers/char/rio/rio_linux.c:771:
+    if ( PortP->State & RIO_DELETED ) {

CHECK:CAMELCASE: Avoid CamelCase: <State>
#124: FILE: drivers/char/rio/rio_linux.c:771:
+    if ( PortP->State & RIO_DELETED ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/char/rio/rio_linux.c:772:
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: drivers/char/rio/rio_linux.c:772:
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/char/rio/rio_linux.c:773:
+      rc = -EIO;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/char/rio/rio_linux.c:773:
+      rc = -EIO;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/char/rio/rio_linux.c:774:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#127: FILE: drivers/char/rio/rio_linux.c:774:
+    } else {
+      if (RIOShortCommand(p, PortP, SBREAK, 2, 250) == RIO_FAIL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/char/rio/rio_linux.c:775:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, 250) == RIO_FAIL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#128: FILE: drivers/char/rio/rio_linux.c:775:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, 250) == RIO_FAIL) {
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");

CHECK:CAMELCASE: Avoid CamelCase: <RIOShortCommand>
#128: FILE: drivers/char/rio/rio_linux.c:775:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, 250) == RIO_FAIL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/char/rio/rio_linux.c:776:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/char/rio/rio_linux.c:776:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: drivers/char/rio/rio_linux.c:776:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/char/rio/rio_linux.c:777:
+         rc = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/char/rio/rio_linux.c:777:
+         rc = -EIO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/char/rio/rio_linux.c:778:
+      }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/rio/rio_linux.c:778:
+      }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/char/rio/rio_linux.c:779:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/char/rio/rio_linux.c:780:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/char/rio/rio_linux.c:781:
+  case TCSBRKP:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/char/rio/rio_linux.c:782:
+    if ( PortP->State & RIO_DELETED ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#135: FILE: drivers/char/rio/rio_linux.c:782:
+    if ( PortP->State & RIO_DELETED ) {
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#135: FILE: drivers/char/rio/rio_linux.c:782:
+    if ( PortP->State & RIO_DELETED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#135: FILE: drivers/char/rio/rio_linux.c:782:
+    if ( PortP->State & RIO_DELETED ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/char/rio/rio_linux.c:783:
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/char/rio/rio_linux.c:783:
+      rio_dprintk (RIO_DEBUG_TTY, "BREAK on deleted RTA\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/char/rio/rio_linux.c:784:
+      rc = -EIO;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/char/rio/rio_linux.c:784:
+      rc = -EIO;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/char/rio/rio_linux.c:785:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#138: FILE: drivers/char/rio/rio_linux.c:785:
+    } else {
+      int l;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/char/rio/rio_linux.c:786:
+      int l;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: drivers/char/rio/rio_linux.c:787:
+      int l;
+      l = arg?arg*100:250;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/char/rio/rio_linux.c:787:
+      l = arg?arg*100:250;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#140: FILE: drivers/char/rio/rio_linux.c:787:
+      l = arg?arg*100:250;
              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#140: FILE: drivers/char/rio/rio_linux.c:787:
+      l = arg?arg*100:250;
                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#140: FILE: drivers/char/rio/rio_linux.c:787:
+      l = arg?arg*100:250;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/char/rio/rio_linux.c:788:
+      if (l > 255) l = 255;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#141: FILE: drivers/char/rio/rio_linux.c:788:
+      if (l > 255) l = 255;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/char/rio/rio_linux.c:789:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, arg?arg*100:250) == RIO_FAIL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 9)
#142: FILE: drivers/char/rio/rio_linux.c:789:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, arg?arg*100:250) == RIO_FAIL) {
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#142: FILE: drivers/char/rio/rio_linux.c:789:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, arg?arg*100:250) == RIO_FAIL) {
                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: drivers/char/rio/rio_linux.c:789:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, arg?arg*100:250) == RIO_FAIL) {
                                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#142: FILE: drivers/char/rio/rio_linux.c:789:
+      if (RIOShortCommand(p, PortP, SBREAK, 2, arg?arg*100:250) == RIO_FAIL) {
                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/char/rio/rio_linux.c:790:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/char/rio/rio_linux.c:790:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: drivers/char/rio/rio_linux.c:790:
+         rio_dprintk (RIO_DEBUG_INTR, "SBREAK RIOShortCommand failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/char/rio/rio_linux.c:791:
+         rc = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/rio/rio_linux.c:791:
+         rc = -EIO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/char/rio/rio_linux.c:792:
+      }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/char/rio/rio_linux.c:792:
+      }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/char/rio/rio_linux.c:793:
+    }$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#170: FILE: drivers/char/rio/riointr.c:276:
+		rio_dprintk (RIO_DEBUG_INTR,  "riointr() doing host %p type %d\n", host, HostP->Type);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: drivers/char/rio/riointr.c:276:
+		rio_dprintk (RIO_DEBUG_INTR,  "riointr() doing host %p type %d\n", host, HostP->Type);

CHECK:CAMELCASE: Avoid CamelCase: <HostP>
#170: FILE: drivers/char/rio/riointr.c:276:
+		rio_dprintk (RIO_DEBUG_INTR,  "riointr() doing host %p type %d\n", host, HostP->Type);

CHECK:CAMELCASE: Avoid CamelCase: <Type>
#170: FILE: drivers/char/rio/riointr.c:276:
+		rio_dprintk (RIO_DEBUG_INTR,  "riointr() doing host %p type %d\n", host, HostP->Type);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/char/rio/riotty.c:98:
+int RIOShortCommand(struct rio_info *p, struct Port *PortP, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#182: FILE: drivers/char/rio/riotty.c:98:
+int RIOShortCommand(struct rio_info *p, struct Port *PortP, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/char/rio/riotty.c:99:
+int RIOShortCommand(struct rio_info *p, struct Port *PortP, 
 			   int command, int len, int arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/char/rio/riotty.c:512:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/char/rio/riotty.c:798:
+int RIOShortCommand(struct rio_info *p, struct Port *PortP,
 		int command, int len, int arg)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 51 warnings, 15 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
