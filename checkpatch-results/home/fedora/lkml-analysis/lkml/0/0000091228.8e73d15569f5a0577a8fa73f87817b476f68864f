WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#111: FILE: arch/powerpc/platforms/cell/spider-pic.c:157:
+	pr_debug("%s(%d): Using hardcoded defaults\n", __FUNCTION__, __LINE__);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#117: FILE: arch/powerpc/platforms/cell/spider-pic.c:159:
+	for (node = 0; node < num_present_cpus()/2; node++) {
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#159: FILE: arch/powerpc/platforms/cell/spider-pic.c:197:
+		if (strstr(compatible, "CBEA,platform-spider-pic"))
[...]
+		else if (strstr(compatible, "sti,platform-spider-pic")) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: arch/powerpc/platforms/cell/spider-pic.c:198:
+			spider_reg = *(long *)get_property(dn,"reg", NULL);
 			                                     ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#164: FILE: arch/powerpc/platforms/cell/spider-pic.c:202:
+			return;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#164: FILE: arch/powerpc/platforms/cell/spider-pic.c:202:
+		} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/powerpc/platforms/cell/spider-pic.c:206:
+			printk("interrupt controller does not have reg property !\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#172: FILE: arch/powerpc/platforms/cell/spider-pic.c:210:
+		if ( n != 2)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: arch/powerpc/platforms/cell/spider-pic.c:211:
+			printk("reg property with invalid number of elements \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#173: FILE: arch/powerpc/platforms/cell/spider-pic.c:211:
+			printk("reg property with invalid number of elements \n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: arch/powerpc/platforms/cell/spider-pic.c:215:
+		printk("SPIDER addr: %lx with %i addr_cells mapped to %p\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: arch/powerpc/platforms/cell/spider-pic.c:220:
+			int irq = n + IIC_EXT_OFFSET + node * IIC_NODE_STRIDE;
+			get_irq_desc(irq)->handler = &spider_pic;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: arch/powerpc/platforms/cell/spider-pic.c:231:
+		out_be32(spider_pics[node] + TIR_PIEN,
+			in_be32(spider_pics[node] + TIR_PIEN) | 0x1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: arch/powerpc/platforms/cell/spider-pic.c:235:
+		out_be32(spider_pics[node] + TIR_DEN,
+			in_be32(spider_pics[node] + TIR_DEN) | 0x1);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#238: FILE: arch/powerpc/platforms/cell/interrupt.c:188:
+		nodeid = cpu/2;
 		            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#254: FILE: arch/powerpc/platforms/cell/interrupt.c:198:
+			printk(KERN_WARNING "IIC: CPU %d not found\n", cpu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#267: FILE: arch/powerpc/platforms/cell/interrupt.c:211:
+		printk(KERN_INFO "IIC for CPU %d at %lx\n", cpu, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: arch/powerpc/platforms/cell/interrupt.c:226:
+ ^Iunsigned *np, found = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: arch/powerpc/platforms/cell/interrupt.c:226:
+ ^Iunsigned *np, found = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/powerpc/platforms/cell/interrupt.c:226:
+ ^Iunsigned *np, found = 0;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#292: FILE: arch/powerpc/platforms/cell/interrupt.c:226:
+ 	unsigned *np, found = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#299: FILE: arch/powerpc/platforms/cell/interrupt.c:233:
+			printk(KERN_WARNING "no compatible property found !\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/powerpc/platforms/cell/interrupt.c:237:
+ ^I^Iif (strstr(compatible, "IBM,CBEA-Internal-Interrupt-Controller"))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: arch/powerpc/platforms/cell/interrupt.c:237:
+ ^I^Iif (strstr(compatible, "IBM,CBEA-Internal-Interrupt-Controller"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/powerpc/platforms/cell/interrupt.c:237:
+ ^I^Iif (strstr(compatible, "IBM,CBEA-Internal-Interrupt-Controller"))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/powerpc/platforms/cell/interrupt.c:238:
+ ^I^I^Iregs = (unsigned long *)get_property(dn,"reg", NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: arch/powerpc/platforms/cell/interrupt.c:238:
+ ^I^I^Iregs = (unsigned long *)get_property(dn,"reg", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/powerpc/platforms/cell/interrupt.c:238:
+ ^I^I^Iregs = (unsigned long *)get_property(dn,"reg", NULL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: arch/powerpc/platforms/cell/interrupt.c:238:
+ 			regs = (unsigned long *)get_property(dn,"reg", NULL);
  			                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/powerpc/platforms/cell/interrupt.c:239:
+ ^I^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: arch/powerpc/platforms/cell/interrupt.c:239:
+ ^I^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/powerpc/platforms/cell/interrupt.c:239:
+ ^I^Ielse$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/powerpc/platforms/cell/interrupt.c:242:
+ ^I^Iif (!regs)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: arch/powerpc/platforms/cell/interrupt.c:242:
+ ^I^Iif (!regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/powerpc/platforms/cell/interrupt.c:242:
+ ^I^Iif (!regs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/powerpc/platforms/cell/interrupt.c:243:
+ ^I^I^Iprintk(KERN_WARNING "IIC: no reg property\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: arch/powerpc/platforms/cell/interrupt.c:243:
+ ^I^I^Iprintk(KERN_WARNING "IIC: no reg property\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/powerpc/platforms/cell/interrupt.c:243:
+ ^I^I^Iprintk(KERN_WARNING "IIC: no reg property\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#309: FILE: arch/powerpc/platforms/cell/interrupt.c:243:
+ 			printk(KERN_WARNING "IIC: no reg property\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/powerpc/platforms/cell/interrupt.c:245:
+ ^I^Inp = (unsigned int *)get_property(dn, "ibm,interrupt-server-ranges", NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: arch/powerpc/platforms/cell/interrupt.c:245:
+ ^I^Inp = (unsigned int *)get_property(dn, "ibm,interrupt-server-ranges", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/powerpc/platforms/cell/interrupt.c:245:
+ ^I^Inp = (unsigned int *)get_property(dn, "ibm,interrupt-server-ranges", NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/powerpc/platforms/cell/interrupt.c:247:
+ ^I^Iif (!np) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: arch/powerpc/platforms/cell/interrupt.c:247:
+ ^I^Iif (!np) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/powerpc/platforms/cell/interrupt.c:247:
+ ^I^Iif (!np) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#314: FILE: arch/powerpc/platforms/cell/interrupt.c:248:
+			printk(KERN_WARNING "IIC: CPU association not found\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/powerpc/platforms/cell/interrupt.c:254:
+ ^I^Iiic = &per_cpu(iic, np[0]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#320: FILE: arch/powerpc/platforms/cell/interrupt.c:254:
+ ^I^Iiic = &per_cpu(iic, np[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/powerpc/platforms/cell/interrupt.c:254:
+ ^I^Iiic = &per_cpu(iic, np[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/powerpc/platforms/cell/interrupt.c:255:
+ ^I^Iiic->regs = __ioremap(regs[0], sizeof(struct iic_regs),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: arch/powerpc/platforms/cell/interrupt.c:255:
+ ^I^Iiic->regs = __ioremap(regs[0], sizeof(struct iic_regs),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/powerpc/platforms/cell/interrupt.c:255:
+ ^I^Iiic->regs = __ioremap(regs[0], sizeof(struct iic_regs),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ 		iic->regs = __ioremap(regs[0], sizeof(struct iic_regs),
+ 				      _PAGE_NO_CACHE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/powerpc/platforms/cell/interrupt.c:256:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/powerpc/platforms/cell/interrupt.c:258:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[0], regs[0], iic->regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: arch/powerpc/platforms/cell/interrupt.c:258:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[0], regs[0], iic->regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/powerpc/platforms/cell/interrupt.c:258:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[0], regs[0], iic->regs);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: arch/powerpc/platforms/cell/interrupt.c:258:
+ 		printk("IIC for CPU %d at %lx mapped to %p\n", np[0], regs[0], iic->regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/powerpc/platforms/cell/interrupt.c:260:
+ ^I^Iiic = &per_cpu(iic, np[1]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: arch/powerpc/platforms/cell/interrupt.c:260:
+ ^I^Iiic = &per_cpu(iic, np[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/powerpc/platforms/cell/interrupt.c:260:
+ ^I^Iiic = &per_cpu(iic, np[1]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: arch/powerpc/platforms/cell/interrupt.c:261:
+ ^I^Iiic->regs = __ioremap(regs[2], sizeof(struct iic_regs),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#327: FILE: arch/powerpc/platforms/cell/interrupt.c:261:
+ ^I^Iiic->regs = __ioremap(regs[2], sizeof(struct iic_regs),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: arch/powerpc/platforms/cell/interrupt.c:261:
+ ^I^Iiic->regs = __ioremap(regs[2], sizeof(struct iic_regs),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: arch/powerpc/platforms/cell/interrupt.c:262:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#328: FILE: arch/powerpc/platforms/cell/interrupt.c:262:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: arch/powerpc/platforms/cell/interrupt.c:262:
+ 		iic->regs = __ioremap(regs[2], sizeof(struct iic_regs),
+ 				      _PAGE_NO_CACHE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/powerpc/platforms/cell/interrupt.c:262:
+ ^I^I^I^I      _PAGE_NO_CACHE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: arch/powerpc/platforms/cell/interrupt.c:264:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[1], regs[2], iic->regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#330: FILE: arch/powerpc/platforms/cell/interrupt.c:264:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[1], regs[2], iic->regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/powerpc/platforms/cell/interrupt.c:264:
+ ^I^Iprintk("IIC for CPU %d at %lx mapped to %p\n", np[1], regs[2], iic->regs);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#330: FILE: arch/powerpc/platforms/cell/interrupt.c:264:
+ 		printk("IIC for CPU %d at %lx mapped to %p\n", np[1], regs[2], iic->regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/powerpc/platforms/cell/interrupt.c:267:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: arch/powerpc/platforms/cell/interrupt.c:267:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/powerpc/platforms/cell/interrupt.c:267:
+  ^I}$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: arch/powerpc/platforms/cell/interrupt.h:60:
+extern int spider_get_irq(int node);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 49 warnings, 9 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
