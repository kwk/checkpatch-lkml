WARNING:TYPO_SPELLING: 'abouve' may be misspelled - perhaps 'above'?
#29: 
Phy Abstraction Layer subsystem. Along with the abouve, there are apparent
                                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: drivers/net/fs_enet/fec.h:1:
+#ifndef FS_ENET_FEC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#78: FILE: drivers/net/fs_enet/fec.h:10:
+/* Interrupt events/masks.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: drivers/net/fs_enet/fec.h:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#107: FILE: drivers/net/fs_enet/fec.h:39:
+/*
+ * Delay to wait for FEC reset command to complete (in us)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: drivers/net/fs_enet/fs_enet-main.c:713:
+ *-----------------------------------------------------------------------------*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/net/fs_enet/fs_enet-main.c:716:
+       struct fs_enet_private *fep = netdev_priv(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/net/fs_enet/fs_enet-main.c:717:
+       struct phy_device *phydev = fep->phydev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/net/fs_enet/fs_enet-main.c:718:
+       int new_state = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/net/fs_enet/fs_enet-main.c:720:
+       if (phydev->link) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#186: FILE: drivers/net/fs_enet/fs_enet-main.c:720:
+       if (phydev->link) {
[...]
+               if (phydev->duplex != fep->oldduplex){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#187: FILE: drivers/net/fs_enet/fs_enet-main.c:721:
+       if (phydev->link) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/net/fs_enet/fs_enet-main.c:722:
+               /* adjust to duplex mode */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/net/fs_enet/fs_enet-main.c:723:
+               if (phydev->duplex != fep->oldduplex){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/net/fs_enet/fs_enet-main.c:723:
+               if (phydev->duplex != fep->oldduplex){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#189: FILE: drivers/net/fs_enet/fs_enet-main.c:723:
+               if (phydev->duplex != fep->oldduplex){
+                       new_state = 1;

ERROR:SPACING: space required before the open brace '{'
#189: FILE: drivers/net/fs_enet/fs_enet-main.c:723:
+               if (phydev->duplex != fep->oldduplex){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/net/fs_enet/fs_enet-main.c:724:
+                       new_state = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/net/fs_enet/fs_enet-main.c:724:
+                       new_state = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/net/fs_enet/fs_enet-main.c:725:
+                       fep->oldduplex = phydev->duplex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/net/fs_enet/fs_enet-main.c:725:
+                       fep->oldduplex = phydev->duplex;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/net/fs_enet/fs_enet-main.c:726:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/net/fs_enet/fs_enet-main.c:726:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/net/fs_enet/fs_enet-main.c:728:
+               if (phydev->speed != fep->oldspeed) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/net/fs_enet/fs_enet-main.c:728:
+               if (phydev->speed != fep->oldspeed) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#194: FILE: drivers/net/fs_enet/fs_enet-main.c:728:
+               if (phydev->speed != fep->oldspeed) {
+                       new_state = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/net/fs_enet/fs_enet-main.c:729:
+                       new_state = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/net/fs_enet/fs_enet-main.c:729:
+                       new_state = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/net/fs_enet/fs_enet-main.c:730:
+                       fep->oldspeed = phydev->speed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/net/fs_enet/fs_enet-main.c:730:
+                       fep->oldspeed = phydev->speed;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/net/fs_enet/fs_enet-main.c:731:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/net/fs_enet/fs_enet-main.c:731:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/net/fs_enet/fs_enet-main.c:733:
+               if (!fep->oldlink) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/net/fs_enet/fs_enet-main.c:733:
+               if (!fep->oldlink) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#199: FILE: drivers/net/fs_enet/fs_enet-main.c:733:
+               if (!fep->oldlink) {
+                       new_state = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/net/fs_enet/fs_enet-main.c:734:
+                       new_state = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/net/fs_enet/fs_enet-main.c:734:
+                       new_state = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/net/fs_enet/fs_enet-main.c:735:
+                       fep->oldlink = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/net/fs_enet/fs_enet-main.c:735:
+                       fep->oldlink = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/net/fs_enet/fs_enet-main.c:736:
+                       netif_schedule(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/net/fs_enet/fs_enet-main.c:736:
+                       netif_schedule(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/net/fs_enet/fs_enet-main.c:737:
+                       netif_carrier_on(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/net/fs_enet/fs_enet-main.c:737:
+                       netif_carrier_on(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/net/fs_enet/fs_enet-main.c:738:
+                       netif_start_queue(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/net/fs_enet/fs_enet-main.c:738:
+                       netif_start_queue(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/net/fs_enet/fs_enet-main.c:739:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/net/fs_enet/fs_enet-main.c:739:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/net/fs_enet/fs_enet-main.c:741:
+               if (new_state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/net/fs_enet/fs_enet-main.c:741:
+               if (new_state)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#207: FILE: drivers/net/fs_enet/fs_enet-main.c:741:
+               if (new_state)
+                       fep->ops->restart(dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/net/fs_enet/fs_enet-main.c:742:
+                       fep->ops->restart(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/net/fs_enet/fs_enet-main.c:742:
+                       fep->ops->restart(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/net/fs_enet/fs_enet-main.c:744:
+       } else if (fep->oldlink) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#210: FILE: drivers/net/fs_enet/fs_enet-main.c:744:
+       } else if (fep->oldlink) {
+               new_state = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/net/fs_enet/fs_enet-main.c:745:
+               new_state = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/net/fs_enet/fs_enet-main.c:745:
+               new_state = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/net/fs_enet/fs_enet-main.c:746:
+               fep->oldlink = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/net/fs_enet/fs_enet-main.c:746:
+               fep->oldlink = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/net/fs_enet/fs_enet-main.c:747:
+               fep->oldspeed = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/net/fs_enet/fs_enet-main.c:747:
+               fep->oldspeed = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/net/fs_enet/fs_enet-main.c:748:
+               fep->oldduplex = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/net/fs_enet/fs_enet-main.c:748:
+               fep->oldduplex = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/net/fs_enet/fs_enet-main.c:749:
+               netif_carrier_off(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/net/fs_enet/fs_enet-main.c:749:
+               netif_carrier_off(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/net/fs_enet/fs_enet-main.c:750:
+               netif_stop_queue(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/net/fs_enet/fs_enet-main.c:750:
+               netif_stop_queue(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/net/fs_enet/fs_enet-main.c:751:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/net/fs_enet/fs_enet-main.c:753:
+       if (new_state && netif_msg_link(fep))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#219: FILE: drivers/net/fs_enet/fs_enet-main.c:753:
+       if (new_state && netif_msg_link(fep))
+               phy_print_status(phydev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/net/fs_enet/fs_enet-main.c:754:
+               phy_print_status(phydev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/net/fs_enet/fs_enet-main.c:754:
+               phy_print_status(phydev);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: drivers/net/fs_enet/fs_enet-main.c:757:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/net/fs_enet/fs_enet-main.c:765:
+	if(fep->ops->adjust_link)

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: drivers/net/fs_enet/fs_enet-main.c:781:
+	if(fep->fpi->bus_id)

CHECK:BRACES: braces {} should be used on all arms of this statement
#247: FILE: drivers/net/fs_enet/fs_enet-main.c:781:
+	if(fep->fpi->bus_id)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#249: FILE: drivers/net/fs_enet/fs_enet-main.c:783:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: drivers/net/fs_enet/fs_enet-main.c:784:
+		printk("No phy bus ID specified in BSP code\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#254: FILE: drivers/net/fs_enet/fs_enet-main.c:788:
+		printk(KERN_ERR "%s: Could not attach to PHY\n", dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: drivers/net/fs_enet/fs_enet-main.c:797:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#292: FILE: drivers/net/fs_enet/fs_enet-main.c:813:
+	if(err)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#406: FILE: drivers/net/fs_enet/fs_enet-main.c:1234:
+		printk(KERN_ERR DRV_MODULE_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#419: FILE: drivers/net/fs_enet/fs_enet-main.c:1246:
+		printk(KERN_ERR DRV_MODULE_NAME

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: drivers/net/fs_enet/fs_enet.h:18:
+        fec_t*  fecp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: drivers/net/fs_enet/fs_enet.h:18:
+        fec_t*  fecp;$

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#966: FILE: drivers/net/fs_enet/fs_enet.h:18:
+        fec_t*  fecp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#976: FILE: drivers/net/fs_enet/fs_enet.h:28:
+/* This is used to operate with pins.
+  Note that the actual port size may

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#977: FILE: drivers/net/fs_enet/fs_enet.h:29:
+    be different; cpm(s) handle it OK  */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1078: FILE: drivers/net/fs_enet/mac-fcc.c:136:
+	if (fep->fpi->fcc_regs_c) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1082: FILE: drivers/net/fs_enet/mac-fcc.c:140:
+		r = platform_get_resource_byname(pdev, IORESOURCE_MEM,
+				"fcc_regs_c");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fep->fcc.mem"
#1091: FILE: drivers/net/fs_enet/mac-fcc.c:149:
+	if (fep->fcc.mem == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1204: FILE: drivers/net/fs_enet/mac-fec.c:265:
+	struct mii_bus* mii = fep->phydev->bus;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1205: FILE: drivers/net/fs_enet/mac-fec.c:266:
+	struct fec_info* fec_inf = mii->priv;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1238: FILE: drivers/net/fs_enet/mac-fec.c:354:
 
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1258: FILE: drivers/net/fs_enet/mac-fec.c:386:
+	struct fec_info* feci= fep->phydev->bus->priv;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1258: FILE: drivers/net/fs_enet/mac-fec.c:386:
+	struct fec_info* feci= fep->phydev->bus->priv;
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1368: FILE: drivers/net/fs_enet/mac-scc.c:503:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1392: FILE: drivers/net/fs_enet/mii-bitbang.c:45:
+static int bitbang_prep_bit(u8 **datp, u8 *mskp,
+		struct fs_mii_bit *mii_bit)

CHECK:SPACING: No space is necessary after a cast
#1495: FILE: drivers/net/fs_enet/mii-bitbang.c:51:
+	dat = (void*) mii_bit->offset;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1495: FILE: drivers/net/fs_enet/mii-bitbang.c:51:
+	dat = (void*) mii_bit->offset;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1533: FILE: drivers/net/fs_enet/mii-bitbang.c:84:
+static inline void mdio_tristate(struct bb_info *bitbang )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1540: FILE: drivers/net/fs_enet/mii-bitbang.c:89:
+static inline int mdio_read(struct bb_info *bitbang )

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1547: FILE: drivers/net/fs_enet/mii-bitbang.c:94:
+static inline void mdio(struct bb_info *bitbang , int what)
                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1558: FILE: drivers/net/fs_enet/mii-bitbang.c:102:
+static inline void mdc(struct bb_info *bitbang , int what)
                                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1569: FILE: drivers/net/fs_enet/mii-bitbang.c:110:
+static inline void mii_delay(struct bb_info *bitbang )

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1577: FILE: drivers/net/fs_enet/mii-bitbang.c:116:
+static void bitbang_pre(struct bb_info *bitbang , int read, u8 addr, u8 reg)
                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1674: FILE: drivers/net/fs_enet/mii-bitbang.c:180:
+static int fs_enet_mii_bb_read(struct mii_bus *bus , int phy_id, int location)
                                                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1680: FILE: drivers/net/fs_enet/mii-bitbang.c:186:
+	struct bb_info* bitbang = bus->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1758: FILE: drivers/net/fs_enet/mii-bitbang.c:239:
+	struct bb_info* bitbang = bus->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1827: FILE: drivers/net/fs_enet/mii-bitbang.c:286:
+static int fs_mii_bitbang_init(struct bb_info *bitbang, struct fs_mii_bb_platform_info* fmpi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1840: FILE: drivers/net/fs_enet/mii-bitbang.c:293:
+	r = bitbang_prep_bit(&bitbang->mdio_dir,
+			 &bitbang->mdio_dir_msk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1851: FILE: drivers/net/fs_enet/mii-bitbang.c:299:
+	r = bitbang_prep_bit(&bitbang->mdio_dat,
+			 &bitbang->mdio_dat_msk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1859: FILE: drivers/net/fs_enet/mii-bitbang.c:305:
+	r = bitbang_prep_bit(&bitbang->mdc_dat,
+			 &bitbang->mdc_msk,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1867: FILE: drivers/net/fs_enet/mii-bitbang.c:313:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1868: FILE: drivers/net/fs_enet/mii-bitbang.c:314:
+static int __devinit fs_enet_mdio_probe(struct device *dev)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1876: FILE: drivers/net/fs_enet/mii-bitbang.c:322:
+	if (NULL == dev)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_bus)...) over kzalloc(sizeof(struct mii_bus)...)
#1879: FILE: drivers/net/fs_enet/mii-bitbang.c:325:
+	new_bus = kzalloc(sizeof(struct mii_bus), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1881: FILE: drivers/net/fs_enet/mii-bitbang.c:327:
+	if (NULL == new_bus)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bitbang)...) over kzalloc(sizeof(struct bb_info)...)
#1884: FILE: drivers/net/fs_enet/mii-bitbang.c:330:
+	bitbang = kzalloc(sizeof(struct bb_info), GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1886: FILE: drivers/net/fs_enet/mii-bitbang.c:332:
+	if (NULL == bitbang)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1898: FILE: drivers/net/fs_enet/mii-bitbang.c:344:
+	if (NULL == pdata) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1899: FILE: drivers/net/fs_enet/mii-bitbang.c:345:
+		printk(KERN_ERR "gfar mdio %d: Missing platform data!\n", pdev->id);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1915: FILE: drivers/net/fs_enet/mii-bitbang.c:361:
+	if (0 != err) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1916: FILE: drivers/net/fs_enet/mii-bitbang.c:362:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1916: FILE: drivers/net/fs_enet/mii-bitbang.c:362:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1917: FILE: drivers/net/fs_enet/mii-bitbang.c:363:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",
+				new_bus->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1930: FILE: drivers/net/fs_enet/mii-bitbang.c:376:
+
+

CHECK:SPACING: No space is necessary after a cast
#1939: FILE: drivers/net/fs_enet/mii-bitbang.c:385:
+	iounmap((void *) (&bus->priv));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1969: FILE: drivers/net/fs_enet/mii-fec.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1983: FILE: drivers/net/fs_enet/mii-fec.c:15:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#2007: FILE: drivers/net/fs_enet/mii-fec.c:39:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#2009: FILE: drivers/net/fs_enet/mii-fec.c:41:
+#include <asm/uaccess.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2015: FILE: drivers/net/fs_enet/mii-fec.c:47:
+/* Make MII read/write commands for the FEC.
+*/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'REG' may be better as '(REG)' to avoid precedence issues
#2016: FILE: drivers/net/fs_enet/mii-fec.c:48:
+#define mk_mii_read(REG)	(0x60020000 | ((REG & 0x1f) << 18))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'REG' may be better as '(REG)' to avoid precedence issues
#2017: FILE: drivers/net/fs_enet/mii-fec.c:49:
+#define mk_mii_write(REG, VAL)	(0x50020000 | ((REG & 0x1f) << 18) | (VAL & 0xffff))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'VAL' may be better as '(VAL)' to avoid precedence issues
#2017: FILE: drivers/net/fs_enet/mii-fec.c:49:
+#define mk_mii_write(REG, VAL)	(0x50020000 | ((REG & 0x1f) << 18) | (VAL & 0xffff))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2022: FILE: drivers/net/fs_enet/mii-fec.c:54:
+static int match_has_phy (struct device *dev, void* data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2022: FILE: drivers/net/fs_enet/mii-fec.c:54:
+static int match_has_phy (struct device *dev, void* data)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2024: FILE: drivers/net/fs_enet/mii-fec.c:56:
+	struct platform_device* pdev = container_of(dev, struct platform_device, dev);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2025: FILE: drivers/net/fs_enet/mii-fec.c:57:
+	struct fs_platform_info* fpi;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2026: FILE: drivers/net/fs_enet/mii-fec.c:58:
+	struct fs_platform_info* fpi;
+	if(strcmp(pdev->name, (char*)data))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2026: FILE: drivers/net/fs_enet/mii-fec.c:58:
+	if(strcmp(pdev->name, (char*)data))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2026: FILE: drivers/net/fs_enet/mii-fec.c:58:
+	if(strcmp(pdev->name, (char*)data))
+	{

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2026: FILE: drivers/net/fs_enet/mii-fec.c:58:
+	if(strcmp(pdev->name, (char*)data))

ERROR:SPACING: space required before the open parenthesis '('
#2026: FILE: drivers/net/fs_enet/mii-fec.c:58:
+	if(strcmp(pdev->name, (char*)data))

WARNING:TABSTOP: Statements should start on a tabstop
#2028: FILE: drivers/net/fs_enet/mii-fec.c:60:
+	    return 0;

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#2032: FILE: drivers/net/fs_enet/mii-fec.c:64:
+	if((fpi)&&(fpi->has_phy))
 	        ^

ERROR:SPACING: space required before the open parenthesis '('
#2032: FILE: drivers/net/fs_enet/mii-fec.c:64:
+	if((fpi)&&(fpi->has_phy))

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2037: FILE: drivers/net/fs_enet/mii-fec.c:69:
+static int fs_mii_fec_init(struct fec_info* fec, struct fs_mii_fec_platform_info *fmpi)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2041: FILE: drivers/net/fs_enet/mii-fec.c:73:
+	char* name = "fsl-cpm-fec";

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2046: FILE: drivers/net/fs_enet/mii-fec.c:78:
+		container_of(bus_find_device(&platform_bus_type, NULL, name, match_has_phy),
+				struct platform_device, dev);

ERROR:SPACING: space required before the open parenthesis '('
#2048: FILE: drivers/net/fs_enet/mii-fec.c:80:
+	if(fec_pdev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fec_pdev"
#2048: FILE: drivers/net/fs_enet/mii-fec.c:80:
+	if(fec_pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2049: FILE: drivers/net/fs_enet/mii-fec.c:81:
+		printk(KERN_ERR"Unable to find PHY for %s", name);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2049: FILE: drivers/net/fs_enet/mii-fec.c:81:
+		printk(KERN_ERR"Unable to find PHY for %s", name);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2055: FILE: drivers/net/fs_enet/mii-fec.c:87:
+	fec->fecp = fecp = (fec_t*)ioremap(r->start,sizeof(fec_t));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2055: FILE: drivers/net/fs_enet/mii-fec.c:87:
+	fec->fecp = fecp = (fec_t*)ioremap(r->start,sizeof(fec_t));
 	                                           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2055: FILE: drivers/net/fs_enet/mii-fec.c:87:
+	fec->fecp = fecp = (fec_t*)ioremap(r->start,sizeof(fec_t));

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2066: FILE: drivers/net/fs_enet/mii-fec.c:98:
+static int fs_enet_fec_mii_read(struct mii_bus *bus , int phy_id, int location)
                                                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2068: FILE: drivers/net/fs_enet/mii-fec.c:100:
+	struct fec_info* fec = bus->priv;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2073: FILE: drivers/net/fs_enet/mii-fec.c:105:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2089: FILE: drivers/net/fs_enet/mii-fec.c:121:
+
+}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2093: FILE: drivers/net/fs_enet/mii-fec.c:125:
+	struct fec_info* fec = bus->priv;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2099: FILE: drivers/net/fs_enet/mii-fec.c:131:
+		BUG();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2113: FILE: drivers/net/fs_enet/mii-fec.c:145:
+
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2121: FILE: drivers/net/fs_enet/mii-fec.c:153:
+static int __devinit fs_enet_fec_mdio_probe(struct device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2128: FILE: drivers/net/fs_enet/mii-fec.c:160:
+	int err = 0;
+	if (NULL == dev)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2128: FILE: drivers/net/fs_enet/mii-fec.c:160:
+	if (NULL == dev)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_bus)...) over kzalloc(sizeof(struct mii_bus)...)
#2130: FILE: drivers/net/fs_enet/mii-fec.c:162:
+	new_bus = kzalloc(sizeof(struct mii_bus), GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2132: FILE: drivers/net/fs_enet/mii-fec.c:164:
+	if (NULL == new_bus)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fec)...) over kzalloc(sizeof(struct fec_info)...)
#2135: FILE: drivers/net/fs_enet/mii-fec.c:167:
+	fec = kzalloc(sizeof(struct fec_info), GFP_KERNEL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2137: FILE: drivers/net/fs_enet/mii-fec.c:169:
+	if (NULL == fec)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2148: FILE: drivers/net/fs_enet/mii-fec.c:180:
+	if (NULL == pdata) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2149: FILE: drivers/net/fs_enet/mii-fec.c:181:
+		printk(KERN_ERR "fs_enet FEC mdio %d: Missing platform data!\n", pdev->id);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2165: FILE: drivers/net/fs_enet/mii-fec.c:197:
+	if (0 != err) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2166: FILE: drivers/net/fs_enet/mii-fec.c:198:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2166: FILE: drivers/net/fs_enet/mii-fec.c:198:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2167: FILE: drivers/net/fs_enet/mii-fec.c:199:
+		printk (KERN_ERR "%s: Cannot register as MDIO bus\n",
+				new_bus->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2179: FILE: drivers/net/fs_enet/mii-fec.c:211:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 81 warnings, 36 checks, 1505 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000050438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
