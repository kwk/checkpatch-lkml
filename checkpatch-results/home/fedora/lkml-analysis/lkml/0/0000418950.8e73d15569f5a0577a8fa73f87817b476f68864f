WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> with fcntl(fd,F_SETLKW,) and shmem) a kernel implementation has some advantages:

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#41: 
> 	different uid that can acces the queue but aren't allowed to
  	                       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: include/linux/mqueue.h:1:
+#ifndef _LINUX_MQUEUE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#152: FILE: include/linux/msg.h:54:
ifiers */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: include/linux/msg.h:74:
+#define DATALEN_MSG	(PAGE_SIZE-sizeof(struct msg_msg))
                    	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: include/linux/msg.h:75:
+#define DATALEN_SEG	(PAGE_SIZE-sizeof(struct msg_msgseg))
                    	          ^

ERROR:POINTER_LOCATION: "foo* volatile bar" should be "foo * volatile bar"
#192: FILE: include/linux/msg.h:94:
+	struct msg_msg* volatile r_msg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#192: FILE: include/linux/msg.h:94:
+	struct msg_msg* volatile r_msg;

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: include/linux/msg.h:145:
+^I^I^I                receivers should be sent */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#255: FILE: include/linux/msg.h:145:
+	int q_signo;            /* signal to be sent if empty queue with no wai=
+			                receivers should be sent */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#255: FILE: include/linux/msg.h:145:
+			                receivers should be sent */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: ipc/msg.c:52:
+static struct super_block * msg_sb;

ERROR:SPACING: space required after that ',' (ctx:OxV)
#317: FILE: ipc/msg.c:54:
+static struct super_block *msg_read_super(struct file_system_type *,int =
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#323: FILE: ipc/msg.c:59:
+static int msg_create(struct inode *,struct dentry *,int);
                                     ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#323: FILE: ipc/msg.c:59:
+static int msg_create(struct inode *,struct dentry *,int);
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#324: FILE: ipc/msg.c:60:
+static struct dentry *msg_lookup(struct inode *,struct dentry *);
                                                ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#325: FILE: ipc/msg.c:61:
+static int msg_unlink(struct inode *,struct dentry *);
                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#330: FILE: ipc/msg.c:66:
+static int msg_ioctl(struct inode *, struct file *, unsigned int, unsign=
                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#332: FILE: ipc/msg.c:67:
+static int msg_root_ioctl(struct inode *, struct file *, unsigned int, u=
                                                                         ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#335: FILE: ipc/msg.c:69:
+static ssize_t msg_write(struct file *, const char *, size_t, loff_t *);=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#335: FILE: ipc/msg.c:69:
+static ssize_t msg_write(struct file *, const char *, size_t, loff_t *);=
                                                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#338: FILE: ipc/msg.c:72:
+/* FIXME: Support poll on mq
+static unsigned int msg_poll(struct file *, poll_table *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: ipc/msg.c:74:
+static ssize_t msg_send (struct inode *, struct file *, const char *, si=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#340: FILE: ipc/msg.c:74:
+static ssize_t msg_send (struct inode *, struct file *, const char *, si=
                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: ipc/msg.c:75:
+static ssize_t msg_receive (struct inode *, struct file *, char *, size_=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#342: FILE: ipc/msg.c:75:
+static ssize_t msg_receive (struct inode *, struct file *, char *, size_=
                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: ipc/msg.c:76:
+static int msg_flush (struct file *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: ipc/msg.c:77:
+static int msg_release (struct inode *, struct file *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#356: FILE: ipc/msg.c:80:
+static void freeque (int id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: ipc/msg.c:81:
+static int newque (key_t key, const char *name, int namelen, struct mq_a=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#357: FILE: ipc/msg.c:81:
+static int newque (key_t key, const char *name, int namelen, struct mq_a=
                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#362: FILE: ipc/msg.c:84:
+static struct file_system_type msg_fs_type =3D {
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: ipc/msg.c:85:
+	.name		=3D "msgfs",
 	     		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#364: FILE: ipc/msg.c:86:
+	.get_sb		=3D msg_read_super,
 	       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#365: FILE: ipc/msg.c:87:
+	.kill_sb	=3D kill_litter_super,
 	        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#373: FILE: ipc/msg.c:91:
+static struct super_operations msg_sops =3D {
                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#374: FILE: ipc/msg.c:92:
+	.read_inode=3D	msg_fill_inode,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#375: FILE: ipc/msg.c:93:
+	.delete_inode=3D	msg_delete,
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#376: FILE: ipc/msg.c:94:
+	.put_super=3D	msg_put_super,
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#377: FILE: ipc/msg.c:95:
+	.statfs=3D		msg_statfs,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#378: FILE: ipc/msg.c:96:
+	.remount_fs=3D	msg_remount_fs,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#385: FILE: ipc/msg.c:100:
+static struct file_operations msg_root_operations =3D {
                                                   ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#385: FILE: ipc/msg.c:100:
+static struct file_operations msg_root_operations =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#386: FILE: ipc/msg.c:101:
+	.readdir=3D	msg_readdir,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#387: FILE: ipc/msg.c:102:
+	.ioctl=3D		msg_root_ioctl,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#395: FILE: ipc/msg.c:106:
+static struct inode_operations msg_root_inode_operations =3D {
                                                          ^

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#395: FILE: ipc/msg.c:106:
+static struct inode_operations msg_root_inode_operations =3D {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#396: FILE: ipc/msg.c:107:
+	.create=3D		msg_create,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#397: FILE: ipc/msg.c:108:
+	.lookup=3D		msg_lookup,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#398: FILE: ipc/msg.c:109:
+	.unlink=3D		msg_unlink,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: ipc/msg.c:112:
+static struct file_operations msg_file_operations =3D {
                                                   ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#401: FILE: ipc/msg.c:112:
+static struct file_operations msg_file_operations =3D {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#402: FILE: ipc/msg.c:113:
+	.read=3D		msg_read,
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#403: FILE: ipc/msg.c:114:
+	.write=3D		msg_write,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#404: FILE: ipc/msg.c:115:
+	.ioctl=3D		msg_ioctl,
 	      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#406: FILE: ipc/msg.c:117:
+/* FIXME: Support poll on mq *
+	poll=3D		msg_poll,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: ipc/msg.c:119:
+	.flush=3D		msg_flush,
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#409: FILE: ipc/msg.c:120:
+	.release=3D	msg_release,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#412: FILE: ipc/msg.c:123:
+static struct inode_operations msg_inode_operations =3D {
                                                     ^

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#412: FILE: ipc/msg.c:123:
+static struct inode_operations msg_inode_operations =3D {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#413: FILE: ipc/msg.c:124:
+	.setattr=3D	msg_setattr,
 	        ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#429: FILE: ipc/msg.c:131:
+#define msg_get(id)   ((struct msg_queue*)ipc_get(&msg_ids,id))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#429: FILE: ipc/msg.c:131:
+#define msg_get(id)   ((struct msg_queue*)ipc_get(&msg_ids,id))
                                                           ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: ipc/msg.c:132:
+#define msg_buildid(id, seq) ^Iipc_buildid(&msg_ids, id, seq)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: ipc/msg.c:144:
+	register_filesystem (&msg_fs_type);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#447: FILE: ipc/msg.c:145:
+	res =3D kern_mount(&msg_fs_type);
 	    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: ipc/msg.c:158:
+  int blocks =3D msg_ctlmnb * msg_ctlmni;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#462: FILE: ipc/msg.c:158:
+  int blocks =3D msg_ctlmnb * msg_ctlmni;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: ipc/msg.c:159:
+  int inodes =3D msg_ctlmni;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#463: FILE: ipc/msg.c:159:
+  int inodes =3D msg_ctlmni;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: ipc/msg.c:160:
+  umode_t mode =3D msg_mode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#464: FILE: ipc/msg.c:160:
+  umode_t mode =3D msg_mode;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: ipc/msg.c:161:
+  char *this_char, *value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: ipc/msg.c:163:
+  this_char =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#467: FILE: ipc/msg.c:163:
+  this_char =3D NULL;
             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: ipc/msg.c:164:
+  if ( options )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#468: FILE: ipc/msg.c:164:
+  if ( options )
+      this_char =3D strsep(&options,",");

ERROR:SPACING: space prohibited after that open parenthesis '('
#468: FILE: ipc/msg.c:164:
+  if ( options )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#468: FILE: ipc/msg.c:164:
+  if ( options )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: ipc/msg.c:165:
+      this_char =3D strsep(&options,",");$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#469: FILE: ipc/msg.c:165:
+      this_char =3D strsep(&options,",");
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#469: FILE: ipc/msg.c:165:
+      this_char =3D strsep(&options,",");
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: ipc/msg.c:166:
+  for ( ; this_char; this_char =3D strsep(&options,",")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#470: FILE: ipc/msg.c:166:
+  for ( ; this_char; this_char =3D strsep(&options,",")) {
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#470: FILE: ipc/msg.c:166:
+  for ( ; this_char; this_char =3D strsep(&options,",")) {
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: ipc/msg.c:166:
+  for ( ; this_char; this_char =3D strsep(&options,",")) {
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)
+          *value++ =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)
                                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)
                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: ipc/msg.c:167:
+      if ((value =3D strchr(this_char,'=3D')) !=3D NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: ipc/msg.c:168:
+          *value++ =3D 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: ipc/msg.c:168:
+          *value++ =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#472: FILE: ipc/msg.c:168:
+          *value++ =3D 0;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: ipc/msg.c:169:
+      if (!strcmp(this_char,"nr_blocks")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#473: FILE: ipc/msg.c:169:
+      if (!strcmp(this_char,"nr_blocks")) {
+          if (!value || !*value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#473: FILE: ipc/msg.c:169:
+      if (!strcmp(this_char,"nr_blocks")) {
                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#473: FILE: ipc/msg.c:169:
+      if (!strcmp(this_char,"nr_blocks")) {
[...]
+      else if (!strcmp(this_char,"nr_inodes")) {
[...]
+      else if (!strcmp(this_char,"mode")) {
[...]
+      else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: ipc/msg.c:170:
+          if (!value || !*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: ipc/msg.c:170:
+          if (!value || !*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#474: FILE: ipc/msg.c:170:
+          if (!value || !*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: ipc/msg.c:171:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: ipc/msg.c:171:
+              return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);
                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);
                                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#476: FILE: ipc/msg.c:172:
+          blocks =3D simple_strtoul(value,&value,0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: ipc/msg.c:173:
+          if (*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: ipc/msg.c:173:
+          if (*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#477: FILE: ipc/msg.c:173:
+          if (*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: ipc/msg.c:174:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: ipc/msg.c:174:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: ipc/msg.c:175:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: ipc/msg.c:176:
+      else if (!strcmp(this_char,"nr_inodes")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#480: FILE: ipc/msg.c:176:
+      else if (!strcmp(this_char,"nr_inodes")) {
+          if (!value || !*value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: ipc/msg.c:176:
+      else if (!strcmp(this_char,"nr_inodes")) {
                                 ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#480: FILE: ipc/msg.c:176:
+      }
+      else if (!strcmp(this_char,"nr_inodes")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: ipc/msg.c:177:
+          if (!value || !*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: ipc/msg.c:177:
+          if (!value || !*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#481: FILE: ipc/msg.c:177:
+          if (!value || !*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: ipc/msg.c:178:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: ipc/msg.c:178:
+              return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);
                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);
                                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#483: FILE: ipc/msg.c:179:
+          inodes =3D simple_strtoul(value,&value,0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: ipc/msg.c:180:
+          if (*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: ipc/msg.c:180:
+          if (*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#484: FILE: ipc/msg.c:180:
+          if (*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: ipc/msg.c:181:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: ipc/msg.c:181:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: ipc/msg.c:182:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: ipc/msg.c:183:
+      else if (!strcmp(this_char,"mode")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#487: FILE: ipc/msg.c:183:
+      else if (!strcmp(this_char,"mode")) {
+          if (!value || !*value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: ipc/msg.c:183:
+      else if (!strcmp(this_char,"mode")) {
                                 ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#487: FILE: ipc/msg.c:183:
+      }
+      else if (!strcmp(this_char,"mode")) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: ipc/msg.c:184:
+          if (!value || !*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: ipc/msg.c:184:
+          if (!value || !*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#488: FILE: ipc/msg.c:184:
+          if (!value || !*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: ipc/msg.c:185:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: ipc/msg.c:185:
+              return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);
                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);
                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);
                                               ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#490: FILE: ipc/msg.c:186:
+          mode =3D simple_strtoul(value,&value,8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: ipc/msg.c:187:
+          if (*value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: ipc/msg.c:187:
+          if (*value)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#491: FILE: ipc/msg.c:187:
+          if (*value)
+              return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: ipc/msg.c:188:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: ipc/msg.c:188:
+              return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: ipc/msg.c:189:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: ipc/msg.c:190:
+      else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#494: FILE: ipc/msg.c:190:
+      else
+          return 1;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#494: FILE: ipc/msg.c:190:
+      }
+      else

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: ipc/msg.c:191:
+          return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: ipc/msg.c:191:
+          return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: ipc/msg.c:192:
+  }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#498: FILE: ipc/msg.c:194:
+/* FIXME *
+  msg_ctlmni =3D inodes;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: ipc/msg.c:197:
+  msg_mode   =3D mode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#501: FILE: ipc/msg.c:197:
+  msg_mode   =3D mode;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: ipc/msg.c:199:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: ipc/msg.c:203:
+msg_fill_super (struct super_block *sb, void *data, int silent)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: ipc/msg.c:205:
+  struct inode * root_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: ipc/msg.c:205:
+  struct inode * root_inode;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#512: FILE: ipc/msg.c:208:
+/* FIXME *
+  msg_ctlmnb =3D MSGMNB;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: ipc/msg.c:211:
+  msg_mode   =3D S_IRWXUGO | S_ISVTX;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#515: FILE: ipc/msg.c:211:
+  msg_mode   =3D S_IRWXUGO | S_ISVTX;
              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#515: FILE: ipc/msg.c:211:
+  msg_mode   =3D S_IRWXUGO | S_ISVTX;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: ipc/msg.c:212:
+  if (msg_parse_options (data)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#516: FILE: ipc/msg.c:212:
+  if (msg_parse_options (data)) {
+      printk(KERN_ERR "msg fs invalid option\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: ipc/msg.c:212:
+  if (msg_parse_options (data)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: ipc/msg.c:213:
+      printk(KERN_ERR "msg fs invalid option\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: ipc/msg.c:213:
+      printk(KERN_ERR "msg fs invalid option\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: ipc/msg.c:214:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: ipc/msg.c:215:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: ipc/msg.c:217:
+  sb->s_blocksize =3D PAGE_SIZE;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#521: FILE: ipc/msg.c:217:
+  sb->s_blocksize =3D PAGE_SIZE;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: ipc/msg.c:218:
+  sb->s_blocksize_bits =3D PAGE_SHIFT;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#522: FILE: ipc/msg.c:218:
+  sb->s_blocksize_bits =3D PAGE_SHIFT;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: ipc/msg.c:219:
+  sb->s_magic =3D MSG_FS_MAGIC;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#523: FILE: ipc/msg.c:219:
+  sb->s_magic =3D MSG_FS_MAGIC;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: ipc/msg.c:220:
+  sb->s_op =3D &msg_sops;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#524: FILE: ipc/msg.c:220:
+  sb->s_op =3D &msg_sops;
            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#524: FILE: ipc/msg.c:220:
+  sb->s_op =3D &msg_sops;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: ipc/msg.c:221:
+  root_inode =3D iget (sb, SEQ_MULTIPLIER);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#525: FILE: ipc/msg.c:221:
+  root_inode =3D iget (sb, SEQ_MULTIPLIER);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#525: FILE: ipc/msg.c:221:
+  root_inode =3D iget (sb, SEQ_MULTIPLIER);
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: ipc/msg.c:222:
+  if (!root_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#526: FILE: ipc/msg.c:222:
+  if (!root_inode)
+      return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: ipc/msg.c:223:
+      return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: ipc/msg.c:224:
+  root_inode->i_op =3D &msg_root_inode_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#528: FILE: ipc/msg.c:224:
+  root_inode->i_op =3D &msg_root_inode_operations;
                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#528: FILE: ipc/msg.c:224:
+  root_inode->i_op =3D &msg_root_inode_operations;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: ipc/msg.c:225:
+  root_inode->i_sb =3D sb;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#529: FILE: ipc/msg.c:225:
+  root_inode->i_sb =3D sb;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: ipc/msg.c:226:
+  root_inode->i_nlink =3D 2;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#530: FILE: ipc/msg.c:226:
+  root_inode->i_nlink =3D 2;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: ipc/msg.c:227:
+  root_inode->i_mode =3D S_IFDIR | msg_mode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#531: FILE: ipc/msg.c:227:
+  root_inode->i_mode =3D S_IFDIR | msg_mode;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: ipc/msg.c:228:
+  sb->s_root =3D d_alloc_root(root_inode);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#532: FILE: ipc/msg.c:228:
+  sb->s_root =3D d_alloc_root(root_inode);
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: ipc/msg.c:229:
+  if (!sb->s_root)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#533: FILE: ipc/msg.c:229:
+  if (!sb->s_root)
+      goto out_no_root;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: ipc/msg.c:230:
+      goto out_no_root;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: ipc/msg.c:231:
+  msg_sb =3D sb;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#535: FILE: ipc/msg.c:231:
+  msg_sb =3D sb;
          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: ipc/msg.c:232:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: ipc/msg.c:235:
+  printk(KERN_ERR "msg_fill_super: get root inode failed\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#539: FILE: ipc/msg.c:235:
+  printk(KERN_ERR "msg_fill_super: get root inode failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'msg_fill_super', this function's name, in a string
#539: FILE: ipc/msg.c:235:
+  printk(KERN_ERR "msg_fill_super: get root inode failed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#540: FILE: ipc/msg.c:236:
+  iput(root_inode);
   ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: ipc/msg.c:236:
+  iput(root_inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: ipc/msg.c:237:
+  return -ENOMEM;$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#544: FILE: ipc/msg.c:240:
+static struct super_block *msg_read_super(struct file_system_type *fs_ty=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: ipc/msg.c:243:
+  return get_sb_single (fs_type, flags, data, msg_fill_super);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: ipc/msg.c:246:
+static int msg_remount_fs (struct super_block *sb, int *flags, char *dat=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#551: FILE: ipc/msg.c:246:
+static int msg_remount_fs (struct super_block *sb, int *flags, char *dat=
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#553: FILE: ipc/msg.c:247:
+static int msg_remount_fs (struct super_block *sb, int *flags, char *dat=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: ipc/msg.c:248:
+  if (msg_parse_options (data))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#554: FILE: ipc/msg.c:248:
+  if (msg_parse_options (data))
+      return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: ipc/msg.c:248:
+  if (msg_parse_options (data))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: ipc/msg.c:249:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: ipc/msg.c:250:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: ipc/msg.c:255:
+  if (!(msq->q_flags & MSG_SYSV))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#561: FILE: ipc/msg.c:255:
+  if (!(msq->q_flags & MSG_SYSV))
+      return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: ipc/msg.c:256:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: ipc/msg.c:257:
+  if (ipc_checkid(&msg_ids,&msq->q_perm,id))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#563: FILE: ipc/msg.c:257:
+  if (ipc_checkid(&msg_ids,&msq->q_perm,id))
+      return -EIDRM;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#563: FILE: ipc/msg.c:257:
+  if (ipc_checkid(&msg_ids,&msq->q_perm,id))
                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#563: FILE: ipc/msg.c:257:
+  if (ipc_checkid(&msg_ids,&msq->q_perm,id))
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: ipc/msg.c:257:
+  if (ipc_checkid(&msg_ids,&msq->q_perm,id))
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: ipc/msg.c:258:
+      return -EIDRM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: ipc/msg.c:259:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: ipc/msg.c:264:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: ipc/msg.c:265:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: ipc/msg.c:267:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: ipc/msg.c:268:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#574: FILE: ipc/msg.c:268:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
+      if (!(msq =3D msg_lock (i)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#574: FILE: ipc/msg.c:268:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
         ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#574: FILE: ipc/msg.c:268:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#574: FILE: ipc/msg.c:268:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: ipc/msg.c:269:
+      if (!(msq =3D msg_lock (i)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#575: FILE: ipc/msg.c:269:
+      if (!(msq =3D msg_lock (i)))
+          continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#575: FILE: ipc/msg.c:269:
+      if (!(msq =3D msg_lock (i)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#575: FILE: ipc/msg.c:269:
+      if (!(msq =3D msg_lock (i)))
                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#575: FILE: ipc/msg.c:269:
+      if (!(msq =3D msg_lock (i)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: ipc/msg.c:270:
+          continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: ipc/msg.c:270:
+          continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: ipc/msg.c:271:
+      freeque(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: ipc/msg.c:272:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: ipc/msg.c:273:
+  dput (sb->s_root);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: ipc/msg.c:273:
+  dput (sb->s_root);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: ipc/msg.c:274:
+  up(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: ipc/msg.c:279:
+  buf->f_type =3D MSG_FS_MAGIC;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#585: FILE: ipc/msg.c:279:
+  buf->f_type =3D MSG_FS_MAGIC;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: ipc/msg.c:280:
+  buf->f_bsize =3D PAGE_SIZE;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#586: FILE: ipc/msg.c:280:
+  buf->f_bsize =3D PAGE_SIZE;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: ipc/msg.c:281:
+  buf->f_blocks =3D (msg_ctlmnb * msg_ctlmni) >> PAGE_SHIFT;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: ipc/msg.c:281:
+  buf->f_blocks =3D (msg_ctlmnb * msg_ctlmni) >> PAGE_SHIFT;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#587: FILE: ipc/msg.c:281:
+  buf->f_blocks =3D (msg_ctlmnb * msg_ctlmni) >> PAGE_SHIFT;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: ipc/msg.c:282:
+  buf->f_bavail =3D buf->f_bfree =3D buf->f_blocks - (atomic_read(&msg_b=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#588: FILE: ipc/msg.c:282:
+  buf->f_bavail =3D buf->f_bfree =3D buf->f_blocks - (atomic_read(&msg_b=
                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#588: FILE: ipc/msg.c:282:
+  buf->f_bavail =3D buf->f_bfree =3D buf->f_blocks - (atomic_read(&msg_b=
                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#588: FILE: ipc/msg.c:282:
+  buf->f_bavail =3D buf->f_bfree =3D buf->f_blocks - (atomic_read(&msg_b=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: ipc/msg.c:283:
+  buf->f_files =3D msg_ctlmni;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#590: FILE: ipc/msg.c:283:
+  buf->f_files =3D msg_ctlmni;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: ipc/msg.c:284:
+  buf->f_ffree =3D msg_ctlmni - atomic_read(&msg_hdrs);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#591: FILE: ipc/msg.c:284:
+  buf->f_ffree =3D msg_ctlmni - atomic_read(&msg_hdrs);
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: ipc/msg.c:285:
+  buf->f_namelen =3D MSG_NAME_LEN;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#592: FILE: ipc/msg.c:285:
+  buf->f_namelen =3D MSG_NAME_LEN;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: ipc/msg.c:286:
+  return 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: ipc/msg.c:289:
+static void msg_fill_inode(struct inode * inode)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: ipc/msg.c:291:
+  int id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: ipc/msg.c:292:
+  struct msg_queue *msq;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#600: FILE: ipc/msg.c:293:
+  struct msg_queue *msq;
+  id =3D inode->i_ino;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: ipc/msg.c:293:
+  id =3D inode->i_ino;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#600: FILE: ipc/msg.c:293:
+  id =3D inode->i_ino;
      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: ipc/msg.c:294:
+  inode->i_op =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#601: FILE: ipc/msg.c:294:
+  inode->i_op =3D NULL;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: ipc/msg.c:295:
+  inode->i_mode =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#602: FILE: ipc/msg.c:295:
+  inode->i_mode =3D 0;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: ipc/msg.c:297:
+  if (id < SEQ_MULTIPLIER) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#604: FILE: ipc/msg.c:297:
+  if (id < SEQ_MULTIPLIER) {
+      if (!(msq =3D msg_lock (id)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: ipc/msg.c:298:
+      if (!(msq =3D msg_lock (id)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#605: FILE: ipc/msg.c:298:
+      if (!(msq =3D msg_lock (id)))
+          return;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#605: FILE: ipc/msg.c:298:
+      if (!(msq =3D msg_lock (id)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#605: FILE: ipc/msg.c:298:
+      if (!(msq =3D msg_lock (id)))
                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#605: FILE: ipc/msg.c:298:
+      if (!(msq =3D msg_lock (id)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: ipc/msg.c:299:
+          return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: ipc/msg.c:299:
+          return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: ipc/msg.c:300:
+      inode->i_mode =3D (msq->q_flags & S_IRWXUGO) | S_IFIFO;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: ipc/msg.c:300:
+      inode->i_mode =3D (msq->q_flags & S_IRWXUGO) | S_IFIFO;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#607: FILE: ipc/msg.c:300:
+      inode->i_mode =3D (msq->q_flags & S_IRWXUGO) | S_IFIFO;
                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#607: FILE: ipc/msg.c:300:
+      inode->i_mode =3D (msq->q_flags & S_IRWXUGO) | S_IFIFO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: ipc/msg.c:301:
+      inode->i_uid  =3D msq->q_perm.uid;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#608: FILE: ipc/msg.c:301:
+      inode->i_uid  =3D msq->q_perm.uid;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: ipc/msg.c:302:
+      inode->i_gid  =3D msq->q_perm.gid;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#609: FILE: ipc/msg.c:302:
+      inode->i_gid  =3D msq->q_perm.gid;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: ipc/msg.c:303:
+      inode->i_size =3D msq->q_cbytes;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#610: FILE: ipc/msg.c:303:
+      inode->i_size =3D msq->q_cbytes;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: ipc/msg.c:304:
+      inode->i_mtime =3D msq->q_stime;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#611: FILE: ipc/msg.c:304:
+      inode->i_mtime =3D msq->q_stime;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: ipc/msg.c:305:
+      inode->i_atime =3D msq->q_stime > msq->q_rtime ? msq->q_stime : ms=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#612: FILE: ipc/msg.c:305:
+      inode->i_atime =3D msq->q_stime > msq->q_rtime ? msq->q_stime : ms=
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#612: FILE: ipc/msg.c:305:
+      inode->i_atime =3D msq->q_stime > msq->q_rtime ? msq->q_stime : ms=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: ipc/msg.c:306:
+      inode->i_ctime =3D msq->q_ctime;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#614: FILE: ipc/msg.c:306:
+      inode->i_ctime =3D msq->q_ctime;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: ipc/msg.c:307:
+      msg_unlock (id);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#615: FILE: ipc/msg.c:307:
+      msg_unlock (id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: ipc/msg.c:308:
+      inode->i_op  =3D &msg_inode_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#616: FILE: ipc/msg.c:308:
+      inode->i_op  =3D &msg_inode_operations;
                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#616: FILE: ipc/msg.c:308:
+      inode->i_op  =3D &msg_inode_operations;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: ipc/msg.c:309:
+      inode->i_fop =3D &msg_file_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#617: FILE: ipc/msg.c:309:
+      inode->i_fop =3D &msg_file_operations;
                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#617: FILE: ipc/msg.c:309:
+      inode->i_fop =3D &msg_file_operations;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: ipc/msg.c:310:
+      return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: ipc/msg.c:311:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=
                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=
                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=
                                                        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#620: FILE: ipc/msg.c:312:
+  inode->i_mtime =3D inode->i_atime =3D inode->i_ctime =3D CURRENT_TIME;=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: ipc/msg.c:314:
+  inode->i_op    =3D &msg_root_inode_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#622: FILE: ipc/msg.c:314:
+  inode->i_op    =3D &msg_root_inode_operations;
                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#622: FILE: ipc/msg.c:314:
+  inode->i_op    =3D &msg_root_inode_operations;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: ipc/msg.c:315:
+  inode->i_fop   =3D &msg_root_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#623: FILE: ipc/msg.c:315:
+  inode->i_fop   =3D &msg_root_operations;
                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#623: FILE: ipc/msg.c:315:
+  inode->i_fop   =3D &msg_root_operations;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: ipc/msg.c:316:
+  inode->i_sb    =3D msg_sb;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#624: FILE: ipc/msg.c:316:
+  inode->i_sb    =3D msg_sb;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: ipc/msg.c:317:
+  inode->i_nlink =3D 2;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#625: FILE: ipc/msg.c:317:
+  inode->i_nlink =3D 2;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: ipc/msg.c:318:
+  inode->i_mode  =3D S_IFDIR | msg_mode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#626: FILE: ipc/msg.c:318:
+  inode->i_mode  =3D S_IFDIR | msg_mode;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: ipc/msg.c:319:
+  inode->i_uid   =3D inode->i_gid =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#627: FILE: ipc/msg.c:319:
+  inode->i_uid   =3D inode->i_gid =3D 0;
                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#627: FILE: ipc/msg.c:319:
+  inode->i_uid   =3D inode->i_gid =3D 0;
                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#630: FILE: ipc/msg.c:322:
+static int msg_create (struct inode *dir, struct dentry *dent, int mode)=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: ipc/msg.c:325:
+  int id, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: ipc/msg.c:326:
+  struct inode *inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: ipc/msg.c:327:
+  struct mq_attr attr, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: ipc/msg.c:328:
+  struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: ipc/msg.c:330:
+  attr.mq_maxmsg =3D 32;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#638: FILE: ipc/msg.c:330:
+  attr.mq_maxmsg =3D 32;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: ipc/msg.c:331:
+  attr.mq_msgsize =3D 64;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#639: FILE: ipc/msg.c:331:
+  attr.mq_msgsize =3D 64;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: ipc/msg.c:332:
+  p =3D &attr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#640: FILE: ipc/msg.c:332:
+  p =3D &attr;
     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#640: FILE: ipc/msg.c:332:
+  p =3D &attr;
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: ipc/msg.c:334:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: ipc/msg.c:335:
+  list_for_each(tmp, &mq_open_links) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: ipc/msg.c:336:
+      struct mq_link *l =3D list_entry(tmp, struct mq_link, link);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#644: FILE: ipc/msg.c:336:
+      struct mq_link *l =3D list_entry(tmp, struct mq_link, link);
                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#645: FILE: ipc/msg.c:337:
+      struct mq_link *l =3D list_entry(tmp, struct mq_link, link);
+      if (l->tsk =3D=3D current) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: ipc/msg.c:337:
+      if (l->tsk =3D=3D current) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#645: FILE: ipc/msg.c:337:
+      if (l->tsk =3D=3D current) {
+          p =3D l->attr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#645: FILE: ipc/msg.c:337:
+      if (l->tsk =3D=3D current) {
                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#645: FILE: ipc/msg.c:337:
+      if (l->tsk =3D=3D current) {
                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#645: FILE: ipc/msg.c:337:
+      if (l->tsk =3D=3D current) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: ipc/msg.c:338:
+          p =3D l->attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: ipc/msg.c:338:
+          p =3D l->attr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#646: FILE: ipc/msg.c:338:
+          p =3D l->attr;
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: ipc/msg.c:339:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: ipc/msg.c:339:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: ipc/msg.c:340:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: ipc/msg.c:341:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: ipc/msg.c:342:
+  err =3D id =3D newque (IPC_PRIVATE, dent->d_name.name, dent->d_name.le=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#650: FILE: ipc/msg.c:342:
+  err =3D id =3D newque (IPC_PRIVATE, dent->d_name.name, dent->d_name.le=
       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#650: FILE: ipc/msg.c:342:
+  err =3D id =3D newque (IPC_PRIVATE, dent->d_name.name, dent->d_name.le=
              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#650: FILE: ipc/msg.c:342:
+  err =3D id =3D newque (IPC_PRIVATE, dent->d_name.name, dent->d_name.le=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: ipc/msg.c:343:
+  if (err < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#652: FILE: ipc/msg.c:343:
+  if (err < 0)
+      goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: ipc/msg.c:344:
+      goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: ipc/msg.c:346:
+  inode =3D iget (msg_sb, id % SEQ_MULTIPLIER);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: ipc/msg.c:346:
+  inode =3D iget (msg_sb, id % SEQ_MULTIPLIER);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#655: FILE: ipc/msg.c:346:
+  inode =3D iget (msg_sb, id % SEQ_MULTIPLIER);
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: ipc/msg.c:347:
+  if (!inode){$

ERROR:SPACING: space required before the open brace '{'
#656: FILE: ipc/msg.c:347:
+  if (!inode){

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: ipc/msg.c:348:
+  ^Ierr =3D -ENOMEM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#657: FILE: ipc/msg.c:348:
+  ^Ierr =3D -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: ipc/msg.c:348:
+  ^Ierr =3D -ENOMEM;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#657: FILE: ipc/msg.c:348:
+  	err =3D -ENOMEM;
   	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#657: FILE: ipc/msg.c:348:
+  	err =3D -ENOMEM;
   	        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: ipc/msg.c:349:
+  ^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#658: FILE: ipc/msg.c:349:
+  ^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: ipc/msg.c:349:
+  ^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: ipc/msg.c:350:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: ipc/msg.c:351:
+  err =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#660: FILE: ipc/msg.c:351:
+  err =3D 0;
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: ipc/msg.c:352:
+  down (&inode->i_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: ipc/msg.c:352:
+  down (&inode->i_sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: ipc/msg.c:353:
+  inode->i_mode =3D (mode & S_IRWXUGO) | S_IFIFO;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: ipc/msg.c:353:
+  inode->i_mode =3D (mode & S_IRWXUGO) | S_IFIFO;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#662: FILE: ipc/msg.c:353:
+  inode->i_mode =3D (mode & S_IRWXUGO) | S_IFIFO;
                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#662: FILE: ipc/msg.c:353:
+  inode->i_mode =3D (mode & S_IRWXUGO) | S_IFIFO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: ipc/msg.c:354:
+  inode->i_op   =3D &msg_inode_operations;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#663: FILE: ipc/msg.c:354:
+  inode->i_op   =3D &msg_inode_operations;
                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#663: FILE: ipc/msg.c:354:
+  inode->i_op   =3D &msg_inode_operations;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: ipc/msg.c:355:
+  d_instantiate(dent, inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: ipc/msg.c:356:
+  up (&inode->i_sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: ipc/msg.c:356:
+  up (&inode->i_sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: ipc/msg.c:359:
+  up(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: ipc/msg.c:360:
+  return err;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#672: FILE: ipc/msg.c:363:
+static int msg_readdir (struct file *filp, void *dirent, filldir_t filld=
                                      ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#672: FILE: ipc/msg.c:363:
+static int msg_readdir (struct file *filp, void *dirent, filldir_t filld=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#672: FILE: ipc/msg.c:363:
+static int msg_readdir (struct file *filp, void *dirent, filldir_t filld=
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#674: FILE: ipc/msg.c:364:
+static int msg_readdir (struct file *filp, void *dirent, filldir_t filld=
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: ipc/msg.c:365:
+  struct inode * inode =3D filp->f_dentry->d_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: ipc/msg.c:365:
+  struct inode * inode =3D filp->f_dentry->d_inode;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#675: FILE: ipc/msg.c:365:
+  struct inode * inode =3D filp->f_dentry->d_inode;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: ipc/msg.c:366:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: ipc/msg.c:367:
+  off_t nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: ipc/msg.c:369:
+  nr =3D filp->f_pos;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#679: FILE: ipc/msg.c:369:
+  nr =3D filp->f_pos;
      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: ipc/msg.c:371:
+  switch(nr)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#681: FILE: ipc/msg.c:371:
+  switch(nr)
+  {

ERROR:SPACING: space required before the open parenthesis '('
#681: FILE: ipc/msg.c:371:
+  switch(nr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: ipc/msg.c:372:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: ipc/msg.c:373:
+  case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: ipc/msg.c:374:
+      if (filldir(dirent, ".", 1, nr, inode->i_ino, DT_DIR) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#684: FILE: ipc/msg.c:374:
+      if (filldir(dirent, ".", 1, nr, inode->i_ino, DT_DIR) < 0)
+          return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: ipc/msg.c:375:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: ipc/msg.c:375:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: ipc/msg.c:376:
+      filp->f_pos =3D ++nr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#686: FILE: ipc/msg.c:376:
+      filp->f_pos =3D ++nr;
                   ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#687: FILE: ipc/msg.c:377:
+      /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: ipc/msg.c:378:
+  case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: ipc/msg.c:379:
+      if (filldir(dirent, "..", 2, nr, inode->i_ino, DT_DIR) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#689: FILE: ipc/msg.c:379:
+      if (filldir(dirent, "..", 2, nr, inode->i_ino, DT_DIR) < 0)
+          return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: ipc/msg.c:380:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: ipc/msg.c:380:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: ipc/msg.c:381:
+      filp->f_pos =3D ++nr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#691: FILE: ipc/msg.c:381:
+      filp->f_pos =3D ++nr;
                   ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#692: FILE: ipc/msg.c:382:
+      /* fall through */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: ipc/msg.c:384:
+      down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: ipc/msg.c:385:
+      for (; nr-2 <=3D msg_ids.max_id; nr++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#695: FILE: ipc/msg.c:385:
+      for (; nr-2 <=3D msg_ids.max_id; nr++) {
+          if (!(msq =3D msg_get (nr-2)))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#695: FILE: ipc/msg.c:385:
+      for (; nr-2 <=3D msg_ids.max_id; nr++) {
                ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#695: FILE: ipc/msg.c:385:
+      for (; nr-2 <=3D msg_ids.max_id; nr++) {
                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))
+              continue;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))
                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))
                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#696: FILE: ipc/msg.c:386:
+          if (!(msq =3D msg_get (nr-2)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: ipc/msg.c:387:
+              continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: ipc/msg.c:387:
+              continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: ipc/msg.c:388:
+          if (msq->q_flags & MSG_UNLK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: ipc/msg.c:388:
+          if (msq->q_flags & MSG_UNLK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#698: FILE: ipc/msg.c:388:
+          if (msq->q_flags & MSG_UNLK)
+              continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: ipc/msg.c:389:
+              continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: ipc/msg.c:389:
+              continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: ipc/msg.c:390:
+          if (filldir(dirent, msq->q_name, msq->q_namelen, nr, nr, DT_FI=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: ipc/msg.c:390:
+          if (filldir(dirent, msq->q_name, msq->q_namelen, nr, nr, DT_FI=$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#700: FILE: ipc/msg.c:390:
+          if (filldir(dirent, msq->q_name, msq->q_namelen, nr, nr, DT_FI=
[...]
+              break;;

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#700: FILE: ipc/msg.c:390:
+          if (filldir(dirent, msq->q_name, msq->q_namelen, nr, nr, DT_FI=
                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#700: FILE: ipc/msg.c:390:
+          if (filldir(dirent, msq->q_name, msq->q_namelen, nr, nr, DT_FI=

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: ipc/msg.c:391:
+              break;;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: ipc/msg.c:391:
+              break;;$

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#702: FILE: ipc/msg.c:391:
+              break;;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: ipc/msg.c:392:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: ipc/msg.c:393:
+      filp->f_pos =3D nr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#704: FILE: ipc/msg.c:393:
+      filp->f_pos =3D nr;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: ipc/msg.c:394:
+      up(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: ipc/msg.c:395:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: ipc/msg.c:396:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: ipc/msg.c:398:
+  UPDATE_ATIME(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: ipc/msg.c:399:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#713: FILE: ipc/msg.c:402:
+static struct dentry *msg_lookup (struct inode *dir, struct dentry *dent=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#713: FILE: ipc/msg.c:402:
+static struct dentry *msg_lookup (struct inode *dir, struct dentry *dent=
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#715: FILE: ipc/msg.c:403:
+static struct dentry *msg_lookup (struct inode *dir, struct dentry *dent=
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: ipc/msg.c:404:
+  int i, err =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#716: FILE: ipc/msg.c:404:
+  int i, err =3D 0;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: ipc/msg.c:405:
+  struct msg_queue* msq;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#717: FILE: ipc/msg.c:405:
+  struct msg_queue* msq;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: ipc/msg.c:406:
+  struct inode *inode =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#718: FILE: ipc/msg.c:406:
+  struct inode *inode =3D NULL;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: ipc/msg.c:408:
+  if (dent->d_name.len > MSG_NAME_LEN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#720: FILE: ipc/msg.c:408:
+  if (dent->d_name.len > MSG_NAME_LEN)
+      return ERR_PTR(-ENAMETOOLONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: ipc/msg.c:409:
+      return ERR_PTR(-ENAMETOOLONG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: ipc/msg.c:411:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: ipc/msg.c:412:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#724: FILE: ipc/msg.c:412:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
+      if (!(msq =3D msg_lock(i)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#724: FILE: ipc/msg.c:412:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
         ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#724: FILE: ipc/msg.c:412:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#724: FILE: ipc/msg.c:412:
+  for(i =3D 0; i <=3D msg_ids.max_id; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: ipc/msg.c:413:
+      if (!(msq =3D msg_lock(i)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#725: FILE: ipc/msg.c:413:
+      if (!(msq =3D msg_lock(i)))
+          continue;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#725: FILE: ipc/msg.c:413:
+      if (!(msq =3D msg_lock(i)))
                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#725: FILE: ipc/msg.c:413:
+      if (!(msq =3D msg_lock(i)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: ipc/msg.c:414:
+          continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: ipc/msg.c:414:
+          continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: ipc/msg.c:415:
+      if (!(msq->q_flags & MSG_UNLK) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#727: FILE: ipc/msg.c:415:
+      if (!(msq->q_flags & MSG_UNLK) &&
[...]
+          goto found;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#727: FILE: ipc/msg.c:415:
+      if (!(msq->q_flags & MSG_UNLK) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: ipc/msg.c:416:
+          dent->d_name.len =3D=3D msq->q_namelen &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: ipc/msg.c:416:
+          dent->d_name.len =3D=3D msq->q_namelen &&$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#728: FILE: ipc/msg.c:416:
+          dent->d_name.len =3D=3D msq->q_namelen &&
                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#728: FILE: ipc/msg.c:416:
+          dent->d_name.len =3D=3D msq->q_namelen &&
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: ipc/msg.c:417:
+          strncmp(dent->d_name.name, msq->q_name, msq->q_namelen) =3D=3D=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: ipc/msg.c:417:
+          strncmp(dent->d_name.name, msq->q_name, msq->q_namelen) =3D=3D=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#729: FILE: ipc/msg.c:417:
+          strncmp(dent->d_name.name, msq->q_name, msq->q_namelen) =3D=3D=
                                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#729: FILE: ipc/msg.c:417:
+          strncmp(dent->d_name.name, msq->q_name, msq->q_namelen) =3D=3D=
                                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#729: FILE: ipc/msg.c:417:
+          strncmp(dent->d_name.name, msq->q_name, msq->q_namelen) =3D=3D=
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: ipc/msg.c:419:
+          goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: ipc/msg.c:419:
+          goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: ipc/msg.c:420:
+      msg_unlock(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: ipc/msg.c:421:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: ipc/msg.c:427:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#739: FILE: ipc/msg.c:427:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
[...]
+      err =3D -EINVAL;  /* EINVAL to give IPC_RMID the right error */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#739: FILE: ipc/msg.c:427:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#739: FILE: ipc/msg.c:427:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#739: FILE: ipc/msg.c:427:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: ipc/msg.c:428:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#740: FILE: ipc/msg.c:428:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#740: FILE: ipc/msg.c:428:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#740: FILE: ipc/msg.c:428:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: ipc/msg.c:429:
+      err =3D -EINVAL;  /* EINVAL to give IPC_RMID the right error */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#741: FILE: ipc/msg.c:429:
+      err =3D -EINVAL;  /* EINVAL to give IPC_RMID the right error */
           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#741: FILE: ipc/msg.c:429:
+      err =3D -EINVAL;  /* EINVAL to give IPC_RMID the right error */
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: ipc/msg.c:431:
+  goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: ipc/msg.c:434:
+  msg_unlock(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: ipc/msg.c:435:
+  inode =3D iget(dir->i_sb, i);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#747: FILE: ipc/msg.c:435:
+  inode =3D iget(dir->i_sb, i);
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: ipc/msg.c:437:
+  if (!inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#749: FILE: ipc/msg.c:437:
+  if (!inode)
+      err =3D -EACCES;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: ipc/msg.c:438:
+      err =3D -EACCES;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#750: FILE: ipc/msg.c:438:
+      err =3D -EACCES;
           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#750: FILE: ipc/msg.c:438:
+      err =3D -EACCES;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: ipc/msg.c:440:
+  if (err =3D=3D 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#752: FILE: ipc/msg.c:440:
+  if (err =3D=3D 0)
+      d_add (dent, inode);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#752: FILE: ipc/msg.c:440:
+  if (err =3D=3D 0)
           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#752: FILE: ipc/msg.c:440:
+  if (err =3D=3D 0)
              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#752: FILE: ipc/msg.c:440:
+  if (err =3D=3D 0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: ipc/msg.c:441:
+      d_add (dent, inode);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: ipc/msg.c:441:
+      d_add (dent, inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: ipc/msg.c:442:
+  up (&msg_ids.sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#754: FILE: ipc/msg.c:442:
+  up (&msg_ids.sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: ipc/msg.c:443:
+  return ERR_PTR(err);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#758: FILE: ipc/msg.c:446:
+static inline int msg_do_unlink (struct inode *dir, struct dentry *dent,=

ERROR:SPACING: space required after that ',' (ctx:VxO)
#758: FILE: ipc/msg.c:446:
+static inline int msg_do_unlink (struct inode *dir, struct dentry *dent,=
                                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#758: FILE: ipc/msg.c:446:
+static inline int msg_do_unlink (struct inode *dir, struct dentry *dent,=
                                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: ipc/msg.c:449:
+  struct inode * inode =3D dent->d_inode;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#761: FILE: ipc/msg.c:449:
+  struct inode * inode =3D dent->d_inode;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#761: FILE: ipc/msg.c:449:
+  struct inode * inode =3D dent->d_inode;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: ipc/msg.c:450:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: ipc/msg.c:452:
+  down (&msg_ids.sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#764: FILE: ipc/msg.c:452:
+  down (&msg_ids.sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))
+      BUG();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))
             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_ino'
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#765: FILE: ipc/msg.c:453:
+  if (!(msq =3D msg_lock (inode->i_ino)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: ipc/msg.c:454:
+      BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: ipc/msg.c:454:
+      BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: ipc/msg.c:455:
+  if (sysv) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#767: FILE: ipc/msg.c:455:
+  if (sysv) {
+      int ret =3D 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: ipc/msg.c:456:
+      int ret =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#768: FILE: ipc/msg.c:456:
+      int ret =3D 0;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: ipc/msg.c:458:
+      if (!(msq->q_flags & MSG_SYSV))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#770: FILE: ipc/msg.c:458:
+      if (!(msq->q_flags & MSG_SYSV))
+          ret =3D -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: ipc/msg.c:459:
+          ret =3D -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: ipc/msg.c:459:
+          ret =3D -EINVAL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#771: FILE: ipc/msg.c:459:
+          ret =3D -EINVAL;
               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#771: FILE: ipc/msg.c:459:
+          ret =3D -EINVAL;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: ipc/msg.c:460:
+      else if (current->euid !=3D msq->q_perm.cuid &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#772: FILE: ipc/msg.c:460:
+      else if (current->euid !=3D msq->q_perm.cuid &&
[...]
+          ret =3D -EPERM;

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#772: FILE: ipc/msg.c:460:
+      else if (current->euid !=3D msq->q_perm.cuid &&
                              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#772: FILE: ipc/msg.c:460:
+      else if (current->euid !=3D msq->q_perm.cuid &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#773: FILE: ipc/msg.c:461:
+           current->euid !=3D msq->q_perm.uid && !capable(CAP_SYS_ADMIN)=$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: ipc/msg.c:461:
+      else if (current->euid !=3D msq->q_perm.cuid &&
+           current->euid !=3D msq->q_perm.uid && !capable(CAP_SYS_ADMIN)=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: ipc/msg.c:461:
+           current->euid !=3D msq->q_perm.uid && !capable(CAP_SYS_ADMIN)=$

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#773: FILE: ipc/msg.c:461:
+           current->euid !=3D msq->q_perm.uid && !capable(CAP_SYS_ADMIN)=
                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#773: FILE: ipc/msg.c:461:
+           current->euid !=3D msq->q_perm.uid && !capable(CAP_SYS_ADMIN)=
                                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: ipc/msg.c:461:
+      else if (current->euid !=3D msq->q_perm.cuid &&
)

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: ipc/msg.c:462:
+          ret =3D -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: ipc/msg.c:462:
+          ret =3D -EPERM;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#775: FILE: ipc/msg.c:462:
+          ret =3D -EPERM;
               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#775: FILE: ipc/msg.c:462:
+          ret =3D -EPERM;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: ipc/msg.c:463:
+      if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#776: FILE: ipc/msg.c:463:
+      if (ret) {
+          msg_unlock (inode->i_ino);

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: ipc/msg.c:464:
+          msg_unlock (inode->i_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: ipc/msg.c:464:
+          msg_unlock (inode->i_ino);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#777: FILE: ipc/msg.c:464:
+          msg_unlock (inode->i_ino);

ERROR:CODE_INDENT: code indent should use tabs where possible
#778: FILE: ipc/msg.c:465:
+          up (&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: ipc/msg.c:465:
+          up (&msg_ids.sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#778: FILE: ipc/msg.c:465:
+          up (&msg_ids.sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: ipc/msg.c:466:
+          return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: ipc/msg.c:466:
+          return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: ipc/msg.c:467:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: ipc/msg.c:468:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: ipc/msg.c:469:
+  msq->q_flags |=3D MSG_UNLK;$

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#782: FILE: ipc/msg.c:469:
+  msq->q_flags |=3D MSG_UNLK;
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: ipc/msg.c:470:
+  msq->q_perm.key =3D IPC_PRIVATE; /* Do not find it any more */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#783: FILE: ipc/msg.c:470:
+  msq->q_perm.key =3D IPC_PRIVATE; /* Do not find it any more */
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: ipc/msg.c:471:
+  msg_unlock (inode->i_ino);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#784: FILE: ipc/msg.c:471:
+  msg_unlock (inode->i_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: ipc/msg.c:472:
+  up (&msg_ids.sem);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: ipc/msg.c:472:
+  up (&msg_ids.sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: ipc/msg.c:473:
+  inode->i_nlink -=3D 1;$

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#786: FILE: ipc/msg.c:473:
+  inode->i_nlink -=3D 1;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: ipc/msg.c:478:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#791: FILE: ipc/msg.c:478:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
[...]
+      d_drop (dent);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#791: FILE: ipc/msg.c:478:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#791: FILE: ipc/msg.c:478:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&
                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#791: FILE: ipc/msg.c:478:
+  if (dent->d_name.len =3D=3D MSG_FMT_LEN &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: ipc/msg.c:479:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#792: FILE: ipc/msg.c:479:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#792: FILE: ipc/msg.c:479:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#792: FILE: ipc/msg.c:479:
+      memcmp (MSG_FMT, dent->d_name.name, MSG_FMT_LEN - 8) =3D=3D 0)
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: ipc/msg.c:480:
+      d_drop (dent);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#793: FILE: ipc/msg.c:480:
+      d_drop (dent);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: ipc/msg.c:481:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#797: FILE: ipc/msg.c:484:
+static int msg_unlink (struct inode *dir, struct dentry *dent)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: ipc/msg.c:486:
+  return msg_do_unlink (dir, dent, 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: ipc/msg.c:486:
+  return msg_do_unlink (dir, dent, 0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#801: FILE: ipc/msg.c:488:
+}
+static int msg_setattr (struct dentry *dentry, struct iattr *attr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: ipc/msg.c:490:
+  int error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: ipc/msg.c:491:
+  struct inode *inode =3D dentry->d_inode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#804: FILE: ipc/msg.c:491:
+  struct inode *inode =3D dentry->d_inode;
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: ipc/msg.c:492:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: ipc/msg.c:494:
+  error =3D inode_change_ok(inode, attr);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#807: FILE: ipc/msg.c:494:
+  error =3D inode_change_ok(inode, attr);
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: ipc/msg.c:495:
+  if (error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#808: FILE: ipc/msg.c:495:
+  if (error)
+      return error;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: ipc/msg.c:496:
+      return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: ipc/msg.c:497:
+  if (attr->ia_valid & ATTR_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#810: FILE: ipc/msg.c:497:
+  if (attr->ia_valid & ATTR_SIZE)
+      return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: ipc/msg.c:498:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: ipc/msg.c:500:
+  if (attr->ia_valid & (ATTR_MODE | ATTR_UID | ATTR_GID)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#813: FILE: ipc/msg.c:500:
+  if (attr->ia_valid & (ATTR_MODE | ATTR_UID | ATTR_GID)) {
+      if (!(msq =3D msg_lock(inode->i_ino)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: ipc/msg.c:501:
+      if (!(msq =3D msg_lock(inode->i_ino)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#814: FILE: ipc/msg.c:501:
+      if (!(msq =3D msg_lock(inode->i_ino)))
+          BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#814: FILE: ipc/msg.c:501:
+      if (!(msq =3D msg_lock(inode->i_ino)))
                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#814: FILE: ipc/msg.c:501:
+      if (!(msq =3D msg_lock(inode->i_ino)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: ipc/msg.c:502:
+          BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: ipc/msg.c:502:
+          BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#815: FILE: ipc/msg.c:502:
+          BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: ipc/msg.c:503:
+      if (attr->ia_valid & ATTR_MODE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#816: FILE: ipc/msg.c:503:
+      if (attr->ia_valid & ATTR_MODE)
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: ipc/msg.c:504:
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: ipc/msg.c:504:
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#817: FILE: ipc/msg.c:504:
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#817: FILE: ipc/msg.c:504:
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)
                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#817: FILE: ipc/msg.c:504:
+          msq->q_flags =3D (msq->q_flags & ~S_IRWXUGO)

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: ipc/msg.c:505:
+              | (S_IRWXUGO & attr->ia_mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: ipc/msg.c:505:
+              | (S_IRWXUGO & attr->ia_mode);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#818: FILE: ipc/msg.c:505:
+              | (S_IRWXUGO & attr->ia_mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: ipc/msg.c:506:
+      if (attr->ia_valid & ATTR_UID)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#819: FILE: ipc/msg.c:506:
+      if (attr->ia_valid & ATTR_UID)
+          msq->q_perm.uid =3D attr->ia_uid;

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: ipc/msg.c:507:
+          msq->q_perm.uid =3D attr->ia_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: ipc/msg.c:507:
+          msq->q_perm.uid =3D attr->ia_uid;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#820: FILE: ipc/msg.c:507:
+          msq->q_perm.uid =3D attr->ia_uid;
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: ipc/msg.c:508:
+      if (attr->ia_valid & ATTR_GID)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#821: FILE: ipc/msg.c:508:
+      if (attr->ia_valid & ATTR_GID)
+          msq->q_perm.gid =3D attr->ia_gid;

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: ipc/msg.c:509:
+          msq->q_perm.gid =3D attr->ia_gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: ipc/msg.c:509:
+          msq->q_perm.gid =3D attr->ia_gid;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#822: FILE: ipc/msg.c:509:
+          msq->q_perm.gid =3D attr->ia_gid;
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: ipc/msg.c:510:
+      msq->q_ctime =3D attr->ia_ctime;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#823: FILE: ipc/msg.c:510:
+      msq->q_ctime =3D attr->ia_ctime;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: ipc/msg.c:511:
+      msg_unlock (inode->i_ino);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#824: FILE: ipc/msg.c:511:
+      msg_unlock (inode->i_ino);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: ipc/msg.c:512:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: ipc/msg.c:514:
+  inode_setattr(inode, attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: ipc/msg.c:515:
+  return error;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#831: FILE: ipc/msg.c:518:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=
                                                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#831: FILE: ipc/msg.c:518:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#831: FILE: ipc/msg.c:518:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: ipc/msg.c:518:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#831: FILE: ipc/msg.c:518:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#833: FILE: ipc/msg.c:519:
+static int msg_root_ioctl (struct inode * inode, struct file * filp, uns=
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: ipc/msg.c:520:
+  struct mq_open o;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: ipc/msg.c:521:
+  struct mq_link link;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: ipc/msg.c:522:
+  int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: ipc/msg.c:524:
+  if (cmd !=3D MQ_OPEN)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#838: FILE: ipc/msg.c:524:
+  if (cmd !=3D MQ_OPEN)
+      return -EINVAL;

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#838: FILE: ipc/msg.c:524:
+  if (cmd !=3D MQ_OPEN)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: ipc/msg.c:525:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: ipc/msg.c:526:
+  ret =3D -EFAULT;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#840: FILE: ipc/msg.c:526:
+  ret =3D -EFAULT;
       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#840: FILE: ipc/msg.c:526:
+  ret =3D -EFAULT;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: ipc/msg.c:527:
+  if (copy_from_user(&o, (struct mq_open *)arg, sizeof(struct mq_open)))=$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#841: FILE: ipc/msg.c:527:
+  if (copy_from_user(&o, (struct mq_open *)arg, sizeof(struct mq_open)))=
                                                                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#841: FILE: ipc/msg.c:527:
+  if (copy_from_user(&o, (struct mq_open *)arg, sizeof(struct mq_open)))=

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: ipc/msg.c:529:
+      goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: ipc/msg.c:530:
+  ret =3D -EINVAL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#844: FILE: ipc/msg.c:530:
+  ret =3D -EINVAL;
       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#844: FILE: ipc/msg.c:530:
+  ret =3D -EINVAL;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: ipc/msg.c:531:
+  if ((unsigned long)o.mq_attr.mq_msgsize > msg_ctlmnb ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#845: FILE: ipc/msg.c:531:
+  if ((unsigned long)o.mq_attr.mq_msgsize > msg_ctlmnb ||
[...]
+      goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: ipc/msg.c:532:
+      (unsigned long)o.mq_attr.mq_maxmsg > msg_ctlmnb ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: ipc/msg.c:533:
+      o.mq_attr.mq_msgsize * o.mq_attr.mq_maxmsg > msg_ctlmnb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: ipc/msg.c:534:
+      goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: ipc/msg.c:535:
+  link.attr =3D &o.mq_attr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#849: FILE: ipc/msg.c:535:
+  link.attr =3D &o.mq_attr;
             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#849: FILE: ipc/msg.c:535:
+  link.attr =3D &o.mq_attr;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: ipc/msg.c:536:
+  link.tsk =3D current;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#850: FILE: ipc/msg.c:536:
+  link.tsk =3D current;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: ipc/msg.c:537:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: ipc/msg.c:538:
+  list_add(&link.link, &mq_open_links);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: ipc/msg.c:539:
+  up(&msg_ids.sem);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#856: FILE: ipc/msg.c:541:
+  /* FIXME: Shouldn't we check here whether mq_name is really a file wit=
+     Otherwise people tracing the open(2) syscall might miss this place.=

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#866: FILE: ipc/msg.c:550:
+static int msg_ioctl (struct inode * inode, struct file * filp, unsigned=
                                                           ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: ipc/msg.c:563:
+          BUG();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: ipc/msg.c:576:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#895: FILE: ipc/msg.c:579:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: ipc/msg.c:582:
+          break;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#899: FILE: ipc/msg.c:583:
+      ret =3D msg_send (inode, filp, sr.mq_buf, sr.mq_len, sr.mq_type);
                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: ipc/msg.c:588:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: ipc/msg.c:591:
+          break;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#908: FILE: ipc/msg.c:592:
+      ret =3D msg_receive (inode, filp, sr.mq_buf, sr.mq_len, &sr.mq_typ=
                                   ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: ipc/msg.c:594:
+          ret =3D -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: ipc/msg.c:601:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: ipc/msg.c:604:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: ipc/msg.c:606:
+          break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: ipc/msg.c:611:
+          ret =3D -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: ipc/msg.c:613:
+          msg->q_signo =3D sev.sigev_signo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: ipc/msg.c:614:
+          msg->q_sigval =3D sev.sigev_value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: ipc/msg.c:616:
+          msg->q_signo =3D 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#960: FILE: ipc/msg.c:640:
+static int msg_release (struct inode *ino, struct file *filp)
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#970: FILE: ipc/msg.c:650:
+static int msg_flush (struct file *filp)
                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#972: FILE: ipc/msg.c:652:
+  return msg_release(filp->f_dentry->d_inode, filp);
                                               ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#999: FILE: ipc/msg.c:673:
+	msq->q_flags =3D (msgflg & S_IRWXUGO);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#999: FILE: ipc/msg.c:673:
+	msq->q_flags =3D (msgflg & S_IRWXUGO);
 	             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#999: FILE: ipc/msg.c:673:
+	msq->q_flags =3D (msgflg & S_IRWXUGO);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1000: FILE: ipc/msg.c:674:
+	msq->q_perm.key =3D key;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1008: FILE: ipc/msg.c:682:
+	msq->q_signo =3D 0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1013: FILE: ipc/msg.c:687:
+	msq->id =3D msg_buildid(id, msq->q_perm.seq);
 	        ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1014: FILE: ipc/msg.c:688:
+	if (name) {
+	  msq->q_maxmsg =3D attr->mq_maxmsg;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1015: FILE: ipc/msg.c:689:
+	  msq->q_maxmsg =3D attr->mq_maxmsg;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1016: FILE: ipc/msg.c:690:
+	  msq->q_msgsize =3D attr->mq_msgsize;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1017: FILE: ipc/msg.c:691:
+	  msq->q_qbytes =3D msq->q_maxmsg * msq->q_msgsize;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1018: FILE: ipc/msg.c:692:
+	  msq->q_namelen =3D namelen;
 	                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1020: FILE: ipc/msg.c:694:
+	} else {
+	  msq->q_qbytes =3D msg_ctlmnb;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1021: FILE: ipc/msg.c:695:
+	  msq->q_qbytes =3D msg_ctlmnb;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1022: FILE: ipc/msg.c:696:
+	  msq->q_maxmsg =3D msg_ctlmnb;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1023: FILE: ipc/msg.c:697:
+	  msq->q_msgsize =3D msg_ctlmax;
 	                 ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1024: FILE: ipc/msg.c:698:
+	  msq->q_flags |=3D MSG_SYSV;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1025: FILE: ipc/msg.c:699:
+	  msq->q_namelen =3D sprintf(msq->q_name, MSG_FMT, msq->id);
 	                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: ipc/msg.c:710:
+  int msgid =3D ino->i_ino;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1037: FILE: ipc/msg.c:710:
+  int msgid =3D ino->i_ino;
             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: ipc/msg.c:711:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: ipc/msg.c:713:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: ipc/msg.c:714:
+  msq =3D msg_lock(msgid);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1041: FILE: ipc/msg.c:714:
+  msq =3D msg_lock(msgid);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)
+      BUG();

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)
         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)
            ^

ERROR:SPACING: space required before the open parenthesis '('
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1042: FILE: ipc/msg.c:715:
+  if(msq=3D=3DNULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: ipc/msg.c:716:
+      BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1043: FILE: ipc/msg.c:716:
+      BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: ipc/msg.c:717:
+  freeque(msgid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: ipc/msg.c:718:
+  up(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: ipc/msg.c:719:
+  clear_inode(ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: ipc/msg.c:724:
+  struct dentry *dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: ipc/msg.c:725:
+  struct dentry *dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: ipc/msg.c:726:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: ipc/msg.c:727:
+  int error, id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: ipc/msg.c:728:
+  char name[MSG_FMT_LEN+1];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1055: FILE: ipc/msg.c:728:
+  char name[MSG_FMT_LEN+1];
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: ipc/msg.c:730:
+  down(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: ipc/msg.c:731:
+  msq =3D msg_lock(msqid);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1058: FILE: ipc/msg.c:731:
+  msq =3D msg_lock(msqid);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: ipc/msg.c:732:
+  if (msq =3D=3D NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1059: FILE: ipc/msg.c:732:
+  if (msq =3D=3D NULL)
+      return -EINVAL;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1059: FILE: ipc/msg.c:732:
+  if (msq =3D=3D NULL)
           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1059: FILE: ipc/msg.c:732:
+  if (msq =3D=3D NULL)
              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1059: FILE: ipc/msg.c:732:
+  if (msq =3D=3D NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: ipc/msg.c:733:
+      return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: ipc/msg.c:734:
+  id =3D msq->id;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1061: FILE: ipc/msg.c:734:
+  id =3D msq->id;
      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: ipc/msg.c:735:
+  if (msg_checkid (msq, msqid)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1062: FILE: ipc/msg.c:735:
+  if (msg_checkid (msq, msqid)) {
+      msg_unlock(msqid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: ipc/msg.c:735:
+  if (msg_checkid (msq, msqid)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: ipc/msg.c:736:
+      msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: ipc/msg.c:737:
+      return -EIDRM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: ipc/msg.c:738:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: ipc/msg.c:739:
+  msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: ipc/msg.c:740:
+  up(&msg_ids.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: ipc/msg.c:741:
+  sprintf (name, MSG_FMT, id);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1068: FILE: ipc/msg.c:741:
+  sprintf (name, MSG_FMT, id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: ipc/msg.c:742:
+  dir=3Dmsg_sb->s_root;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1069: FILE: ipc/msg.c:742:
+  dir=3Dmsg_sb->s_root;
      ^

CHECK:CAMELCASE: Avoid CamelCase: <Dmsg_sb>
#1069: FILE: ipc/msg.c:742:
+  dir=3Dmsg_sb->s_root;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: ipc/msg.c:743:
+  down(&dir->d_inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: ipc/msg.c:744:
+  dentry =3D lookup_one_len(name, dir, strlen(name) );$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1071: FILE: ipc/msg.c:744:
+  dentry =3D lookup_one_len(name, dir, strlen(name) );
          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1071: FILE: ipc/msg.c:744:
+  dentry =3D lookup_one_len(name, dir, strlen(name) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: ipc/msg.c:745:
+  error =3D PTR_ERR(dentry);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1072: FILE: ipc/msg.c:745:
+  error =3D PTR_ERR(dentry);
         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: ipc/msg.c:746:
+  if (!IS_ERR(dentry)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1073: FILE: ipc/msg.c:746:
+  if (!IS_ERR(dentry)) {
[...]
+      struct inode *inode =3D dir->d_inode;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: ipc/msg.c:753:
+      struct inode *inode =3D dir->d_inode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1080: FILE: ipc/msg.c:753:
+      struct inode *inode =3D dir->d_inode;
                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1081: FILE: ipc/msg.c:754:
+      struct inode *inode =3D dir->d_inode;
+      down(&inode->i_sem);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: ipc/msg.c:754:
+      down(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: ipc/msg.c:755:
+      error =3D msg_do_unlink(inode, dentry, 1);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1082: FILE: ipc/msg.c:755:
+      error =3D msg_do_unlink(inode, dentry, 1);
             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: ipc/msg.c:756:
+      if (!error)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1083: FILE: ipc/msg.c:756:
+      if (!error)
+          d_delete(dentry);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: ipc/msg.c:757:
+          d_delete(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: ipc/msg.c:757:
+          d_delete(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: ipc/msg.c:758:
+      up(&inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: ipc/msg.c:759:
+      dput(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: ipc/msg.c:760:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: ipc/msg.c:761:
+  up(&dir->d_inode->i_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: ipc/msg.c:762:
+  return error;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1100: FILE: ipc/msg.c:776:
+static struct msg_msg* load_msg(const char * src, int len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1100: FILE: ipc/msg.c:776:
+static struct msg_msg* load_msg(const char * src, int len)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1110: FILE: ipc/msg.c:828:
+static int store_msg(void* dest, struct msg_msg* msg, size_t len)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1110: FILE: ipc/msg.c:828:
+static int store_msg(void* dest, struct msg_msg* msg, size_t len)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1123: FILE: ipc/msg.c:849:
+		seg =3D seg->next;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1144: FILE: ipc/msg.c:930:
+		ret =3D newque(key, NULL, MSG_FMT_LEN + 1, NULL, msgflg);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1176: FILE: ipc/msg.c:1098:
+			err =3D -EINVAL;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1176: FILE: ipc/msg.c:1098:
+			err =3D -EINVAL;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1183: FILE: ipc/msg.c:1103:
+			err =3D msg_checkid(msq,msqid);
 			    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1183: FILE: ipc/msg.c:1103:
+			err =3D msg_checkid(msq,msqid);
 			                       ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#1193: FILE: ipc/msg.c:1113:
+		tbuf.msg_perm.mode &=3D S_IRWXUGO;
 		                   ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1193: FILE: ipc/msg.c:1113:
+		tbuf.msg_perm.mode &=3D S_IRWXUGO;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1214: FILE: ipc/msg.c:1155:
+	if (cmd =3D=3D IPC_SET) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1214: FILE: ipc/msg.c:1155:
+	if (cmd =3D=3D IPC_SET) {
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1214: FILE: ipc/msg.c:1155:
+	if (cmd =3D=3D IPC_SET) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1218: FILE: ipc/msg.c:1159:
+		msq->q_maxmsg =3D setbuf.qbytes;
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1244: FILE: ipc/msg.c:1239:
+	struct msg_queue *msq =3D *msqp;
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1244: FILE: ipc/msg.c:1239:
+	struct msg_queue *msq =3D *msqp;
 	                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1246: FILE: ipc/msg.c:1241:
+	if(msgsz + msq->q_cbytes > msq->q_qbytes ||

ERROR:SPACING: space required before the open parenthesis '('
#1250: FILE: ipc/msg.c:1245:
+		if(nowait)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1256: FILE: ipc/msg.c:1251:
+		current->state =3D TASK_RUNNING;
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1258: FILE: ipc/msg.c:1253:
+		*msqp =3D msq =3D msg_lock(msqid);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1258: FILE: ipc/msg.c:1253:
+		*msqp =3D msq =3D msg_lock(msqid);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1259: FILE: ipc/msg.c:1254:
+		if(msq=3D=3DNULL)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1259: FILE: ipc/msg.c:1254:
+		if(msq=3D=3DNULL)
 		         ^

ERROR:SPACING: space required before the open parenthesis '('
#1259: FILE: ipc/msg.c:1254:
+		if(msq=3D=3DNULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1259: FILE: ipc/msg.c:1254:
+		if(msq=3D=3DNULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1269: FILE: ipc/msg.c:1264:
+	if(!pipelined_send(msq,msg)) {
 	                      ^

ERROR:SPACING: space required before the open parenthesis '('
#1269: FILE: ipc/msg.c:1264:
+	if(!pipelined_send(msq,msg)) {

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#1270: FILE: ipc/msg.c:1265:
+		/* noone is waiting for this message, enqueue it */
 		   ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1271: FILE: ipc/msg.c:1266:
+		list_add_tail(&msg->m_list,&msq->q_messages);
 		                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1271: FILE: ipc/msg.c:1266:
+		list_add_tail(&msg->m_list,&msq->q_messages);
 		                           ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1272: FILE: ipc/msg.c:1267:
+		msq->q_cbytes +=3D msgsz;
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1274: FILE: ipc/msg.c:1269:
+		atomic_add(msgsz,&msg_bytes);
 		                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1274: FILE: ipc/msg.c:1269:
+		atomic_add(msgsz,&msg_bytes);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1276: FILE: ipc/msg.c:1271:
+		if (msq->q_qnum =3D=3D 1 && msq->q_signo) {
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1276: FILE: ipc/msg.c:1271:
+		if (msq->q_qnum =3D=3D 1 && msq->q_signo) {
 		                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1276: FILE: ipc/msg.c:1271:
+		if (msq->q_qnum =3D=3D 1 && msq->q_signo) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1279: FILE: ipc/msg.c:1274:
+			siginfo_t si;
+			read_lock(&tasklist_lock);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1280: FILE: ipc/msg.c:1275:
+			p =3D find_task_by_pid(msq->q_pid);
 			  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1282: FILE: ipc/msg.c:1277:
+				si.si_signo =3D msq->q_signo;
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1283: FILE: ipc/msg.c:1278:
+				si.si_errno =3D 0;
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1284: FILE: ipc/msg.c:1279:
+				si.si_code =3D SI_MESGQ;
 				           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1285: FILE: ipc/msg.c:1280:
+				si.si_pid =3D current->pid;
 				          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1286: FILE: ipc/msg.c:1281:
+				si.si_uid =3D current->euid;
 				          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1287: FILE: ipc/msg.c:1282:
+				si.si_value =3D msq->q_sigval;
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1292: FILE: ipc/msg.c:1287:
+			msq->q_signo =3D 0;
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1296: FILE: ipc/msg.c:1291:
+	msq->q_lspid =3D current->pid;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1297: FILE: ipc/msg.c:1292:
+	msq->q_stime =3D CURRENT_TIME;
 	             ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1301: FILE: ipc/msg.c:1296:
+static ssize_t msg_send (struct inode *ino, struct file *filp, const cha=
                                                          ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1301: FILE: ipc/msg.c:1296:
+static ssize_t msg_send (struct inode *ino, struct file *filp, const cha=
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1303: FILE: ipc/msg.c:1297:
+static ssize_t msg_send (struct inode *ino, struct file *filp, const cha=
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1306: FILE: ipc/msg.c:1300:
+	int err =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1311: FILE: ipc/msg.c:1305:
+	msq =3D msg_lock(ino->i_ino);
 	    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1312: FILE: ipc/msg.c:1306:
+	if (!msq) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1312: FILE: ipc/msg.c:1306:
+	if (!msq) BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1314: FILE: ipc/msg.c:1308:
+		err =3D -EMSGSIZE;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1314: FILE: ipc/msg.c:1308:
+		err =3D -EMSGSIZE;
 		        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1316: FILE: ipc/msg.c:1310:
+	if (err) return err;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1318: FILE: ipc/msg.c:1312:
+	msg =3D load_msg(mtext, msgsz);
 	    ^

ERROR:SPACING: space required before the open parenthesis '('
#1319: FILE: ipc/msg.c:1313:
+	if(IS_ERR(msg))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1322: FILE: ipc/msg.c:1316:
+	msg->m_type =3D mtype;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1323: FILE: ipc/msg.c:1317:
+	msg->m_ts =3D msgsz;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1325: FILE: ipc/msg.c:1319:
+	msq =3D msg_lock(ino->i_ino);
 	    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1326: FILE: ipc/msg.c:1320:
+	if (!msq) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1326: FILE: ipc/msg.c:1320:
+	if (!msq) BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1329: FILE: ipc/msg.c:1323:
+		err =3D -EACCES;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1329: FILE: ipc/msg.c:1323:
+		err =3D -EACCES;
 		        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#1330: FILE: ipc/msg.c:1324:
+		if (msq->q_flags & MSG_SYSV && ipcperms(&msq->q_perm, S_IWUGO))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1333: FILE: ipc/msg.c:1327:
+		err =3D msg_do_send(&msq, ino->i_ino, msg, msgsz, filp->f_flags & O_NO=
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1333: FILE: ipc/msg.c:1327:
+		err =3D msg_do_send(&msq, ino->i_ino, msg, msgsz, filp->f_flags & O_NO=
 		                                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1336: FILE: ipc/msg.c:1329:
+	} while (err =3D=3D -EBUSY);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1336: FILE: ipc/msg.c:1329:
+	} while (err =3D=3D -EBUSY);
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1336: FILE: ipc/msg.c:1329:
+	} while (err =3D=3D -EBUSY);
 	                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1374: FILE: ipc/msg.c:1360:
+	do {
+	  err=3D -EIDRM;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1375: FILE: ipc/msg.c:1361:
+	  err=3D -EIDRM;
 	     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1375: FILE: ipc/msg.c:1361:
+	  err=3D -EIDRM;
 	         ^

WARNING:TABSTOP: Statements should start on a tabstop
#1376: FILE: ipc/msg.c:1362:
+	  if (msg_checkid(msq,msqid))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 10)
#1376: FILE: ipc/msg.c:1362:
+	  if (msg_checkid(msq,msqid))
+    	  break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1376: FILE: ipc/msg.c:1362:
+	  if (msg_checkid(msq,msqid))
 	                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1377: FILE: ipc/msg.c:1363:
+    ^I  break;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1377: FILE: ipc/msg.c:1363:
+    ^I  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: ipc/msg.c:1363:
+    ^I  break;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1393: FILE: ipc/msg.c:1367:
+	  err=3D-EACCES;
 	     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1393: FILE: ipc/msg.c:1367:
+	  err=3D-EACCES;
 	        ^

WARNING:TABSTOP: Statements should start on a tabstop
#1394: FILE: ipc/msg.c:1368:
+	  if (ipcperms(&msq->q_perm, S_IWUGO))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 10)
#1394: FILE: ipc/msg.c:1368:
+	  if (ipcperms(&msq->q_perm, S_IWUGO))
+    	  break;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#1394: FILE: ipc/msg.c:1368:
+	  if (ipcperms(&msq->q_perm, S_IWUGO))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1395: FILE: ipc/msg.c:1369:
+    ^I  break;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1395: FILE: ipc/msg.c:1369:
+    ^I  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: ipc/msg.c:1369:
+    ^I  break;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1400: FILE: ipc/msg.c:1372:
+	  err =3D msg_do_send(&msq, msqid, msg, msgsz, msgflg & IPC_NOWAIT);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1415: FILE: ipc/msg.c:1376:
+	} while (err =3D=3D -EBUSY);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1415: FILE: ipc/msg.c:1376:
+	} while (err =3D=3D -EBUSY);
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1415: FILE: ipc/msg.c:1376:
+	} while (err =3D=3D -EBUSY);
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: ipc/msg.c:1402:
+msg_do_receive (struct msg_queue *msq, int *msqidp, size_t msgsz,
+      long msgtyp, int mode, int msgflg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: ipc/msg.c:1402:
+      long msgtyp, int mode, int msgflg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: ipc/msg.c:1404:
+  struct msg_receiver msr_d;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: ipc/msg.c:1405:
+  struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: ipc/msg.c:1406:
+  struct msg_msg *msg, *found_msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: ipc/msg.c:1407:
+  int msqid =3D *msqidp;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1440: FILE: ipc/msg.c:1407:
+  int msqid =3D *msqidp;
             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1440: FILE: ipc/msg.c:1407:
+  int msqid =3D *msqidp;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: ipc/msg.c:1409:
+  for (;;) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1442: FILE: ipc/msg.c:1409:
+  for (;;) {
+      if (msq->q_flags & MSG_SYSV && ipcperms (&msq->q_perm, S_IRUGO))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: ipc/msg.c:1410:
+      if (msq->q_flags & MSG_SYSV && ipcperms (&msq->q_perm, S_IRUGO))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1443: FILE: ipc/msg.c:1410:
+      if (msq->q_flags & MSG_SYSV && ipcperms (&msq->q_perm, S_IRUGO))
+          return ERR_PTR(-EACCES);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1443: FILE: ipc/msg.c:1410:
+      if (msq->q_flags & MSG_SYSV && ipcperms (&msq->q_perm, S_IRUGO))

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1443: FILE: ipc/msg.c:1410:
+      if (msq->q_flags & MSG_SYSV && ipcperms (&msq->q_perm, S_IRUGO))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: ipc/msg.c:1411:
+          return ERR_PTR(-EACCES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: ipc/msg.c:1411:
+          return ERR_PTR(-EACCES);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: ipc/msg.c:1413:
+      tmp =3D msq->q_messages.next;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1446: FILE: ipc/msg.c:1413:
+      tmp =3D msq->q_messages.next;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: ipc/msg.c:1414:
+      found_msg =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1447: FILE: ipc/msg.c:1414:
+      found_msg =3D NULL;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: ipc/msg.c:1415:
+      while (tmp !=3D &msq->q_messages) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1448: FILE: ipc/msg.c:1415:
+      while (tmp !=3D &msq->q_messages) {
+          msg =3D list_entry(tmp,struct msg_msg,m_list);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1448: FILE: ipc/msg.c:1415:
+      while (tmp !=3D &msq->q_messages) {
                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1448: FILE: ipc/msg.c:1415:
+      while (tmp !=3D &msq->q_messages) {
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: ipc/msg.c:1416:
+          msg =3D list_entry(tmp,struct msg_msg,m_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: ipc/msg.c:1416:
+          msg =3D list_entry(tmp,struct msg_msg,m_list);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1449: FILE: ipc/msg.c:1416:
+          msg =3D list_entry(tmp,struct msg_msg,m_list);
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1449: FILE: ipc/msg.c:1416:
+          msg =3D list_entry(tmp,struct msg_msg,m_list);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1449: FILE: ipc/msg.c:1416:
+          msg =3D list_entry(tmp,struct msg_msg,m_list);
                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: ipc/msg.c:1417:
+          if(testmsg(msg, msgtyp, mode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: ipc/msg.c:1417:
+          if(testmsg(msg, msgtyp, mode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1450: FILE: ipc/msg.c:1417:
+          if(testmsg(msg, msgtyp, mode)) {
+              found_msg =3D msg;

ERROR:SPACING: space required before the open parenthesis '('
#1450: FILE: ipc/msg.c:1417:
+          if(testmsg(msg, msgtyp, mode)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: ipc/msg.c:1418:
+              found_msg =3D msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: ipc/msg.c:1418:
+              found_msg =3D msg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1451: FILE: ipc/msg.c:1418:
+              found_msg =3D msg;
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)
+                  msgtyp =3D msg->m_type - 1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)
                          ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)
                                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1452: FILE: ipc/msg.c:1419:
+              if(mode =3D=3D SEARCH_LESSEQUAL && msg->m_type !=3D 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: ipc/msg.c:1420:
+                  msgtyp =3D msg->m_type - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: ipc/msg.c:1420:
+                  msgtyp =3D msg->m_type - 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1453: FILE: ipc/msg.c:1420:
+                  msgtyp =3D msg->m_type - 1;
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1454: FILE: ipc/msg.c:1421:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: ipc/msg.c:1421:
+              else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1454: FILE: ipc/msg.c:1421:
+              else
+                  break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1455: FILE: ipc/msg.c:1422:
+                  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1455: FILE: ipc/msg.c:1422:
+                  break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: ipc/msg.c:1423:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: ipc/msg.c:1423:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: ipc/msg.c:1424:
+          tmp =3D tmp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: ipc/msg.c:1424:
+          tmp =3D tmp->next;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1457: FILE: ipc/msg.c:1424:
+          tmp =3D tmp->next;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: ipc/msg.c:1425:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1459: FILE: ipc/msg.c:1426:
+      if (found_msg) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1459: FILE: ipc/msg.c:1426:
+      if (found_msg) {
+          msg =3D found_msg;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1460: FILE: ipc/msg.c:1427:
+          msg =3D found_msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: ipc/msg.c:1427:
+          msg =3D found_msg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1460: FILE: ipc/msg.c:1427:
+          msg =3D found_msg;
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1461: FILE: ipc/msg.c:1428:
+          if ((msgsz < msg->m_ts) && !(msgflg & MSG_NOERROR))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: ipc/msg.c:1428:
+          if ((msgsz < msg->m_ts) && !(msgflg & MSG_NOERROR))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1461: FILE: ipc/msg.c:1428:
+          if ((msgsz < msg->m_ts) && !(msgflg & MSG_NOERROR))
+              return ERR_PTR(-E2BIG);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msgsz < msg->m_ts'
#1461: FILE: ipc/msg.c:1428:
+          if ((msgsz < msg->m_ts) && !(msgflg & MSG_NOERROR))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: ipc/msg.c:1429:
+              return ERR_PTR(-E2BIG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: ipc/msg.c:1429:
+              return ERR_PTR(-E2BIG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1463: FILE: ipc/msg.c:1430:
+          list_del(&msg->m_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: ipc/msg.c:1430:
+          list_del(&msg->m_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1464: FILE: ipc/msg.c:1431:
+          msq->q_qnum--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1464: FILE: ipc/msg.c:1431:
+          msq->q_qnum--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1465: FILE: ipc/msg.c:1432:
+          msq->q_rtime =3D CURRENT_TIME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1465: FILE: ipc/msg.c:1432:
+          msq->q_rtime =3D CURRENT_TIME;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1465: FILE: ipc/msg.c:1432:
+          msq->q_rtime =3D CURRENT_TIME;
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1466: FILE: ipc/msg.c:1433:
+          msq->q_lrpid =3D current->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: ipc/msg.c:1433:
+          msq->q_lrpid =3D current->pid;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1466: FILE: ipc/msg.c:1433:
+          msq->q_lrpid =3D current->pid;
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1467: FILE: ipc/msg.c:1434:
+          msq->q_cbytes -=3D msg->m_ts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1467: FILE: ipc/msg.c:1434:
+          msq->q_cbytes -=3D msg->m_ts;$

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#1467: FILE: ipc/msg.c:1434:
+          msq->q_cbytes -=3D msg->m_ts;
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1468: FILE: ipc/msg.c:1435:
+          atomic_sub(msg->m_ts,&msg_bytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: ipc/msg.c:1435:
+          atomic_sub(msg->m_ts,&msg_bytes);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1468: FILE: ipc/msg.c:1435:
+          atomic_sub(msg->m_ts,&msg_bytes);
                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1468: FILE: ipc/msg.c:1435:
+          atomic_sub(msg->m_ts,&msg_bytes);
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1469: FILE: ipc/msg.c:1436:
+          atomic_dec(&msg_hdrs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1469: FILE: ipc/msg.c:1436:
+          atomic_dec(&msg_hdrs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1470: FILE: ipc/msg.c:1437:
+          ss_wakeup(&msq->q_senders,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: ipc/msg.c:1437:
+          ss_wakeup(&msq->q_senders,0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1470: FILE: ipc/msg.c:1437:
+          ss_wakeup(&msq->q_senders,0);
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1471: FILE: ipc/msg.c:1438:
+          msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1471: FILE: ipc/msg.c:1438:
+          msg_unlock(msqid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: ipc/msg.c:1439:
+          return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: ipc/msg.c:1439:
+          return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1473: FILE: ipc/msg.c:1440:
+      } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1473: FILE: ipc/msg.c:1440:
+      } else {
+          struct msg_queue *t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: ipc/msg.c:1441:
+          struct msg_queue *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: ipc/msg.c:1441:
+          struct msg_queue *t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1475: FILE: ipc/msg.c:1442:
+          /* no message waiting. Prepare for pipelined$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1476: FILE: ipc/msg.c:1443:
+           * receive.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: ipc/msg.c:1444:
+           */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1478: FILE: ipc/msg.c:1445:
+          if (msgflg & IPC_NOWAIT)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: ipc/msg.c:1445:
+          if (msgflg & IPC_NOWAIT)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1478: FILE: ipc/msg.c:1445:
+          if (msgflg & IPC_NOWAIT)
+              return ERR_PTR(-ENOMSG);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1479: FILE: ipc/msg.c:1446:
+              return ERR_PTR(-ENOMSG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: ipc/msg.c:1446:
+              return ERR_PTR(-ENOMSG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1480: FILE: ipc/msg.c:1447:
+          list_add_tail(&msr_d.r_list,&msq->q_receivers);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: ipc/msg.c:1447:
+          list_add_tail(&msr_d.r_list,&msq->q_receivers);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1480: FILE: ipc/msg.c:1447:
+          list_add_tail(&msr_d.r_list,&msq->q_receivers);
                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1480: FILE: ipc/msg.c:1447:
+          list_add_tail(&msr_d.r_list,&msq->q_receivers);
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1481: FILE: ipc/msg.c:1448:
+          msr_d.r_tsk =3D current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: ipc/msg.c:1448:
+          msr_d.r_tsk =3D current;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1481: FILE: ipc/msg.c:1448:
+          msr_d.r_tsk =3D current;
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1482: FILE: ipc/msg.c:1449:
+          msr_d.r_msgtype =3D msgtyp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: ipc/msg.c:1449:
+          msr_d.r_msgtype =3D msgtyp;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1482: FILE: ipc/msg.c:1449:
+          msr_d.r_msgtype =3D msgtyp;
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1483: FILE: ipc/msg.c:1450:
+          msr_d.r_mode =3D mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: ipc/msg.c:1450:
+          msr_d.r_mode =3D mode;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1483: FILE: ipc/msg.c:1450:
+          msr_d.r_mode =3D mode;
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1484: FILE: ipc/msg.c:1451:
+          if(msgflg & MSG_NOERROR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: ipc/msg.c:1451:
+          if(msgflg & MSG_NOERROR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1484: FILE: ipc/msg.c:1451:
+          if(msgflg & MSG_NOERROR)
+              msr_d.r_maxsize =3D INT_MAX;

ERROR:SPACING: space required before the open parenthesis '('
#1484: FILE: ipc/msg.c:1451:
+          if(msgflg & MSG_NOERROR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1485: FILE: ipc/msg.c:1452:
+              msr_d.r_maxsize =3D INT_MAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: ipc/msg.c:1452:
+              msr_d.r_maxsize =3D INT_MAX;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1485: FILE: ipc/msg.c:1452:
+              msr_d.r_maxsize =3D INT_MAX;
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1486: FILE: ipc/msg.c:1453:
+          else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: ipc/msg.c:1453:
+          else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1486: FILE: ipc/msg.c:1453:
+          else
+              msr_d.r_maxsize =3D msgsz;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: ipc/msg.c:1454:
+              msr_d.r_maxsize =3D msgsz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: ipc/msg.c:1454:
+              msr_d.r_maxsize =3D msgsz;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1487: FILE: ipc/msg.c:1454:
+              msr_d.r_maxsize =3D msgsz;
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1488: FILE: ipc/msg.c:1455:
+          msr_d.r_msg =3D ERR_PTR(-EAGAIN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: ipc/msg.c:1455:
+          msr_d.r_msg =3D ERR_PTR(-EAGAIN);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1488: FILE: ipc/msg.c:1455:
+          msr_d.r_msg =3D ERR_PTR(-EAGAIN);
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1489: FILE: ipc/msg.c:1456:
+          current->state =3D TASK_INTERRUPTIBLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: ipc/msg.c:1456:
+          current->state =3D TASK_INTERRUPTIBLE;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1489: FILE: ipc/msg.c:1456:
+          current->state =3D TASK_INTERRUPTIBLE;
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1490: FILE: ipc/msg.c:1457:
+          msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: ipc/msg.c:1457:
+          msg_unlock(msqid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1492: FILE: ipc/msg.c:1459:
+          schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: ipc/msg.c:1459:
+          schedule();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1493: FILE: ipc/msg.c:1460:
+          current->state =3D TASK_RUNNING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: ipc/msg.c:1460:
+          current->state =3D TASK_RUNNING;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1493: FILE: ipc/msg.c:1460:
+          current->state =3D TASK_RUNNING;
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;$

CHECK:SPACING: No space is necessary after a cast
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1495: FILE: ipc/msg.c:1462:
+          msg =3D (struct msg_msg*) msr_d.r_msg;
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1496: FILE: ipc/msg.c:1463:
+          if(!IS_ERR(msg))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: ipc/msg.c:1463:
+          if(!IS_ERR(msg))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1496: FILE: ipc/msg.c:1463:
+          if(!IS_ERR(msg))
+              return msg;

ERROR:SPACING: space required before the open parenthesis '('
#1496: FILE: ipc/msg.c:1463:
+          if(!IS_ERR(msg))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1497: FILE: ipc/msg.c:1464:
+              return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: ipc/msg.c:1464:
+              return msg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1499: FILE: ipc/msg.c:1466:
+          t =3D msg_lock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: ipc/msg.c:1466:
+          t =3D msg_lock(msqid);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1499: FILE: ipc/msg.c:1466:
+          t =3D msg_lock(msqid);
             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)
+              *msqidp =3D msqid =3D -1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)
                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1500: FILE: ipc/msg.c:1467:
+          if(t =3D=3D NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: ipc/msg.c:1468:
+              *msqidp =3D msqid =3D -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: ipc/msg.c:1468:
+              *msqidp =3D msqid =3D -1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1501: FILE: ipc/msg.c:1468:
+              *msqidp =3D msqid =3D -1;
                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1501: FILE: ipc/msg.c:1468:
+              *msqidp =3D msqid =3D -1;
                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1501: FILE: ipc/msg.c:1468:
+              *msqidp =3D msqid =3D -1;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1502: FILE: ipc/msg.c:1469:
+          msg =3D (struct msg_msg*)msr_d.r_msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: ipc/msg.c:1469:
+          msg =3D (struct msg_msg*)msr_d.r_msg;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1502: FILE: ipc/msg.c:1469:
+          msg =3D (struct msg_msg*)msr_d.r_msg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1502: FILE: ipc/msg.c:1469:
+          msg =3D (struct msg_msg*)msr_d.r_msg;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1502: FILE: ipc/msg.c:1469:
+          msg =3D (struct msg_msg*)msr_d.r_msg;
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1503: FILE: ipc/msg.c:1470:
+          if(!IS_ERR(msg)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1503: FILE: ipc/msg.c:1470:
+          if(!IS_ERR(msg)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1503: FILE: ipc/msg.c:1470:
+          if(!IS_ERR(msg)) {
[...]
+              if (msqid !=3D -1)

ERROR:SPACING: space required before the open parenthesis '('
#1503: FILE: ipc/msg.c:1470:
+          if(!IS_ERR(msg)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1504: FILE: ipc/msg.c:1471:
+              /* our message arived while we waited for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1505: FILE: ipc/msg.c:1472:
+               * the spinlock. Process it.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1506: FILE: ipc/msg.c:1473:
+               */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1507: FILE: ipc/msg.c:1474:
+              if (msqid !=3D -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: ipc/msg.c:1474:
+              if (msqid !=3D -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1507: FILE: ipc/msg.c:1474:
+              if (msqid !=3D -1)
+                  msg_unlock(msqid);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1507: FILE: ipc/msg.c:1474:
+              if (msqid !=3D -1)
                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1507: FILE: ipc/msg.c:1474:
+              if (msqid !=3D -1)
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1508: FILE: ipc/msg.c:1475:
+                  msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: ipc/msg.c:1475:
+                  msg_unlock(msqid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1509: FILE: ipc/msg.c:1476:
+              return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: ipc/msg.c:1476:
+              return msg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1510: FILE: ipc/msg.c:1477:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: ipc/msg.c:1477:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {
+              if(msqid =3D=3D -1)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {
                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {
                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1511: FILE: ipc/msg.c:1478:
+          if(PTR_ERR(msg) =3D=3D -EAGAIN) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)
+                  BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)
                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)
                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)
                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1512: FILE: ipc/msg.c:1479:
+              if(msqid =3D=3D -1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: ipc/msg.c:1480:
+                  BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: ipc/msg.c:1480:
+                  BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1513: FILE: ipc/msg.c:1480:
+                  BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: ipc/msg.c:1481:
+              list_del(&msr_d.r_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: ipc/msg.c:1481:
+              list_del(&msr_d.r_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1515: FILE: ipc/msg.c:1482:
+              if (signal_pending(current))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: ipc/msg.c:1482:
+              if (signal_pending(current))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1515: FILE: ipc/msg.c:1482:
+              if (signal_pending(current))
+                  return ERR_PTR(-EINTR);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1516: FILE: ipc/msg.c:1483:
+                  return ERR_PTR(-EINTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: ipc/msg.c:1483:
+                  return ERR_PTR(-EINTR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1517: FILE: ipc/msg.c:1484:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: ipc/msg.c:1484:
+              else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#1517: FILE: ipc/msg.c:1484:
+              else
+                  continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: ipc/msg.c:1485:
+                  continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: ipc/msg.c:1485:
+                  continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: ipc/msg.c:1486:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: ipc/msg.c:1486:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1520: FILE: ipc/msg.c:1487:
+          return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: ipc/msg.c:1487:
+          return msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: ipc/msg.c:1488:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: ipc/msg.c:1489:
+  }$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1525: FILE: ipc/msg.c:1492:
+static int msg_receive (struct inode *ino, struct file *filp, char *mtex=
                                                         ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1525: FILE: ipc/msg.c:1492:
+static int msg_receive (struct inode *ino, struct file *filp, char *mtex=
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1527: FILE: ipc/msg.c:1493:
+          size_t msgsz, long *msgtypp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: ipc/msg.c:1493:
+          size_t msgsz, long *msgtypp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: ipc/msg.c:1495:
+  struct msg_queue *msq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1530: FILE: ipc/msg.c:1496:
+  struct msg_msg *msg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: ipc/msg.c:1497:
+  long msgtyp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1532: FILE: ipc/msg.c:1498:
+  int err, mode, msqid =3D ino->i_ino;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1532: FILE: ipc/msg.c:1498:
+  int err, mode, msqid =3D ino->i_ino;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: ipc/msg.c:1500:
+  if (msgtypp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1534: FILE: ipc/msg.c:1500:
+  if (msgtypp)
+      msgtyp =3D *msgtypp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: ipc/msg.c:1501:
+      msgtyp =3D *msgtypp;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1535: FILE: ipc/msg.c:1501:
+      msgtyp =3D *msgtypp;
              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1535: FILE: ipc/msg.c:1501:
+      msgtyp =3D *msgtypp;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: ipc/msg.c:1502:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1536: FILE: ipc/msg.c:1502:
+  else
+      msgtyp =3D -MQ_DEFAULT_TYPE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: ipc/msg.c:1503:
+      msgtyp =3D -MQ_DEFAULT_TYPE;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1537: FILE: ipc/msg.c:1503:
+      msgtyp =3D -MQ_DEFAULT_TYPE;
              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1537: FILE: ipc/msg.c:1503:
+      msgtyp =3D -MQ_DEFAULT_TYPE;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1538: FILE: ipc/msg.c:1504:
+  mode =3D convert_mode(&msgtyp, 0);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1538: FILE: ipc/msg.c:1504:
+  mode =3D convert_mode(&msgtyp, 0);
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1539: FILE: ipc/msg.c:1505:
+  msq =3D msg_lock(msqid);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1539: FILE: ipc/msg.c:1505:
+  msq =3D msg_lock(msqid);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: ipc/msg.c:1506:
+  if (!msq) BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1540: FILE: ipc/msg.c:1506:
+  if (!msq) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1540: FILE: ipc/msg.c:1506:
+  if (!msq) BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: ipc/msg.c:1507:
+  if (msgtypp && msgsz < msq->q_msgsize) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1541: FILE: ipc/msg.c:1507:
+  if (msgtypp && msgsz < msq->q_msgsize) {
+      msg_unlock(msqid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: ipc/msg.c:1508:
+      msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: ipc/msg.c:1509:
+      return -EMSGSIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: ipc/msg.c:1510:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: ipc/msg.c:1512:
+  msg =3D msg_do_receive (msq, &msqid, msgsz, msgtyp, mode,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1546: FILE: ipc/msg.c:1512:
+  msg =3D msg_do_receive (msq, &msqid, msgsz, msgtyp, mode,
       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1547: FILE: ipc/msg.c:1513:
+                (filp->f_flags & O_NONBLOCK) ? IPC_NOWAIT : 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: ipc/msg.c:1513:
+                (filp->f_flags & O_NONBLOCK) ? IPC_NOWAIT : 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: ipc/msg.c:1514:
+  if (!IS_ERR (msg)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1548: FILE: ipc/msg.c:1514:
+  if (!IS_ERR (msg)) {
+      msgsz =3D (msgsz > msg->m_ts) ? msg->m_ts : msgsz;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1548: FILE: ipc/msg.c:1514:
+  if (!IS_ERR (msg)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: ipc/msg.c:1515:
+      msgsz =3D (msgsz > msg->m_ts) ? msg->m_ts : msgsz;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1549: FILE: ipc/msg.c:1515:
+      msgsz =3D (msgsz > msg->m_ts) ? msg->m_ts : msgsz;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1549: FILE: ipc/msg.c:1515:
+      msgsz =3D (msgsz > msg->m_ts) ? msg->m_ts : msgsz;
             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: ipc/msg.c:1516:
+      if (store_msg(mtext, msg, msgsz))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1550: FILE: ipc/msg.c:1516:
+      if (store_msg(mtext, msg, msgsz))
+          msgsz =3D -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1551: FILE: ipc/msg.c:1517:
+          msgsz =3D -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: ipc/msg.c:1517:
+          msgsz =3D -EFAULT;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1551: FILE: ipc/msg.c:1517:
+          msgsz =3D -EFAULT;
                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1551: FILE: ipc/msg.c:1517:
+          msgsz =3D -EFAULT;
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: ipc/msg.c:1518:
+      else if (msgtypp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#1552: FILE: ipc/msg.c:1518:
+      else if (msgtypp)
+          *msgtypp =3D msg->m_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1553: FILE: ipc/msg.c:1519:
+          *msgtypp =3D msg->m_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: ipc/msg.c:1519:
+          *msgtypp =3D msg->m_type;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1553: FILE: ipc/msg.c:1519:
+          *msgtypp =3D msg->m_type;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: ipc/msg.c:1520:
+      free_msg(msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: ipc/msg.c:1521:
+      return msgsz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: ipc/msg.c:1522:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: ipc/msg.c:1523:
+  if (msqid !=3D -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#1557: FILE: ipc/msg.c:1523:
+  if (msqid !=3D -1)
+      msg_unlock(msqid);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1557: FILE: ipc/msg.c:1523:
+  if (msqid !=3D -1)
             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1557: FILE: ipc/msg.c:1523:
+  if (msqid !=3D -1)
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: ipc/msg.c:1524:
+      msg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: ipc/msg.c:1525:
+  err =3D PTR_ERR(msg);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1559: FILE: ipc/msg.c:1525:
+  err =3D PTR_ERR(msg);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: ipc/msg.c:1526:
+  switch (err) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: ipc/msg.c:1527:
+  case -ENOMSG: err =3D -EAGAIN; break;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1561: FILE: ipc/msg.c:1527:
+  case -ENOMSG: err =3D -EAGAIN; break;
                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1561: FILE: ipc/msg.c:1527:
+  case -ENOMSG: err =3D -EAGAIN; break;
                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1561: FILE: ipc/msg.c:1527:
+  case -ENOMSG: err =3D -EAGAIN; break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: ipc/msg.c:1528:
+  case -E2BIG: err =3D -EMSGSIZE; break;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1562: FILE: ipc/msg.c:1528:
+  case -E2BIG: err =3D -EMSGSIZE; break;
                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1562: FILE: ipc/msg.c:1528:
+  case -E2BIG: err =3D -EMSGSIZE; break;
                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1562: FILE: ipc/msg.c:1528:
+  case -E2BIG: err =3D -EMSGSIZE; break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: ipc/msg.c:1529:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: ipc/msg.c:1530:
+  return err;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1583: FILE: ipc/msg.c:1543:
+	mode =3D convert_mode(&msgtyp, msgflg);
 	     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1588: FILE: ipc/msg.c:1546:
+	msq =3D msg_lock (msqid);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1588: FILE: ipc/msg.c:1546:
+	msq =3D msg_lock (msqid);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1589: FILE: ipc/msg.c:1547:
+	if (msq=3D=3DNULL)
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1589: FILE: ipc/msg.c:1547:
+	if (msq=3D=3DNULL)
 	          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1589: FILE: ipc/msg.c:1547:
+	if (msq=3D=3DNULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1592: FILE: ipc/msg.c:1550:
+		msg_unlock (msqid);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1635: FILE: ipc/msg.c:1553:
+	msg =3D msg_do_receive (msq, &msqid, msgsz, msgtyp, mode, msgflg);
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1636: FILE: ipc/msg.c:1554:
+	if (!IS_ERR (msg)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1701: FILE: ipc/msg.c:1557:
+    ^Iif (put_user (msg->m_type, &msgp->mtype) ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1701: FILE: ipc/msg.c:1557:
+    ^Iif (put_user (msg->m_type, &msgp->mtype) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: ipc/msg.c:1557:
+    ^Iif (put_user (msg->m_type, &msgp->mtype) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1701: FILE: ipc/msg.c:1557:
+    	if (put_user (msg->m_type, &msgp->mtype) ||
[...]
+    	  msgsz =3D -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1702: FILE: ipc/msg.c:1558:
+    ^I  store_msg(msgp->mtext, msg, msgsz))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1702: FILE: ipc/msg.c:1558:
+    ^I  store_msg(msgp->mtext, msg, msgsz))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: ipc/msg.c:1558:
+    	if (put_user (msg->m_type, &msgp->mtype) ||
+    	  store_msg(msgp->mtext, msg, msgsz))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: ipc/msg.c:1558:
+    ^I  store_msg(msgp->mtext, msg, msgsz))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1703: FILE: ipc/msg.c:1559:
+    ^I  msgsz =3D -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1703: FILE: ipc/msg.c:1559:
+    ^I  msgsz =3D -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: ipc/msg.c:1559:
+    ^I  msgsz =3D -EFAULT;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1703: FILE: ipc/msg.c:1559:
+    	  msgsz =3D -EFAULT;
     	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1703: FILE: ipc/msg.c:1559:
+    	  msgsz =3D -EFAULT;
     	            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1704: FILE: ipc/msg.c:1560:
+    ^Ifree_msg(msg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1704: FILE: ipc/msg.c:1560:
+    ^Ifree_msg(msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: ipc/msg.c:1560:
+    ^Ifree_msg(msg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1705: FILE: ipc/msg.c:1561:
+    ^Ireturn msgsz;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1705: FILE: ipc/msg.c:1561:
+    ^Ireturn msgsz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1705: FILE: ipc/msg.c:1561:
+    ^Ireturn msgsz;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1707: FILE: ipc/msg.c:1563:
+	if (msqid !=3D -1)
+    	msg_unlock(msqid);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1707: FILE: ipc/msg.c:1563:
+	if (msqid !=3D -1)
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1707: FILE: ipc/msg.c:1563:
+	if (msqid !=3D -1)
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1708: FILE: ipc/msg.c:1564:
+    ^Imsg_unlock(msqid);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1708: FILE: ipc/msg.c:1564:
+    ^Imsg_unlock(msqid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1708: FILE: ipc/msg.c:1564:
+    ^Imsg_unlock(msqid);$

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1722: FILE: ipc/msg.c:1574:
+	len +=3D sprintf(buffer, "       key      msqid perms      cbytes      =
 	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1733: FILE: ipc/msg.c:1582:
+			len +=3D sprintf(buffer + len, "%10d %10d  %4o  %10lu %10lu %5u %5u %=
 			                                                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 559 errors, 646 warnings, 60 checks, 1556 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
