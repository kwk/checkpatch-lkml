WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -u -r orig/linux-2.5.33/drivers/scsi/sr.c linux-2.5.33/drivers/scsi/sr.c

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#61: FILE: drivers/scsi/sr.c:609:
+	cgc.cmd[1] = (SCp->device->scsi_level <= SCSI_2) ?

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#95: FILE: drivers/scsi/sr.h:24:
+#define IOCTL_TIMEOUT 30*HZ
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#95: FILE: drivers/scsi/sr.h:24:
+#define IOCTL_TIMEOUT 30*HZ

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#105: FILE: drivers/scsi/sr.h:41:
+int sr_do_ioctl(int, struct cdrom_generic_command *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_generic_command *' should also have an identifier name
#105: FILE: drivers/scsi/sr.h:41:
+int sr_do_ioctl(int, struct cdrom_generic_command *);

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#176: FILE: drivers/scsi/sr_ioctl.c:94:
+	SRpnt->sr_data_direction = cgc->data_direction;

CHECK:SPACING: No space is necessary after a cast
#186: FILE: drivers/scsi/sr_ioctl.c:100:
+		bounce_buffer = (char *) kmalloc(cgc->buflen, GFP_DMA);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#186: FILE: drivers/scsi/sr_ioctl.c:100:
+		bounce_buffer = (char *) kmalloc(cgc->buflen, GFP_DMA);

CHECK:CAMELCASE: Avoid CamelCase: <SDev>
#202: FILE: drivers/scsi/sr_ioctl.c:110:
+	if (!scsi_block_when_processing_errors(SDev)) {

WARNING:INDENTED_LABEL: labels should not be indented
#276: FILE: drivers/scsi/sr_ioctl.c:191:
+      out:

WARNING:SPACING: space prohibited before semicolon
#321: FILE: drivers/scsi/sr_ioctl.c:224:
+	cgc.cmd[4] = (pos == 0) ? 0x03 /* close */ : 0x02 /* eject */ ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: drivers/scsi/sr_ioctl.c:298:
+        memset(&cgc, 0, sizeof(struct cdrom_generic_command));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/scsi/sr_ioctl.c:298:
+        memset(&cgc, 0, sizeof(struct cdrom_generic_command));$

CHECK:SPACING: No space is necessary after a cast
#512: FILE: drivers/scsi/sr_ioctl.c:475:
+	cgc.cmd[2] = (unsigned char) (lba >> 24) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#513: FILE: drivers/scsi/sr_ioctl.c:476:
+	cgc.cmd[3] = (unsigned char) (lba >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#514: FILE: drivers/scsi/sr_ioctl.c:477:
+	cgc.cmd[4] = (unsigned char) (lba >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#515: FILE: drivers/scsi/sr_ioctl.c:478:
+	cgc.cmd[5] = (unsigned char) lba & 0xff;

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/scsi/sr_ioctl.c:533:
+	cgc.cmd[2] = (unsigned char) (lba >> 24) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#572: FILE: drivers/scsi/sr_ioctl.c:534:
+	cgc.cmd[3] = (unsigned char) (lba >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#573: FILE: drivers/scsi/sr_ioctl.c:535:
+	cgc.cmd[4] = (unsigned char) (lba >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#574: FILE: drivers/scsi/sr_ioctl.c:536:
+	cgc.cmd[5] = (unsigned char) lba & 0xff;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: drivers/scsi/sr_vendor.c:61:
+#define VENDOR_TIMEOUT	30*HZ
                       	  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#591: FILE: drivers/scsi/sr_vendor.c:61:
+#define VENDOR_TIMEOUT	30*HZ

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#632: FILE: drivers/scsi/sr_vendor.c:142:
+	if (0 == (rc = sr_do_ioctl(minor, &cgc))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#632: FILE: drivers/scsi/sr_vendor.c:142:
+	if (0 == (rc = sr_do_ioctl(minor, &cgc))) {
 		SCp->device->sector_size = blocklength;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 14 checks, 693 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
