WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
 drivers/scsi/libata-core.c  |  142 +++++++++++++++++++++++++++-----------------

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#192: FILE: drivers/scsi/ahci.c:602:
+	msleep(1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#231: FILE: drivers/scsi/ahci.c:641:
+		printk(KERN_ERR "ata%u: softreset failed (%s)\n",

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#281: FILE: drivers/scsi/libata-bmdma.c:710:
+ *	enter non simplex mode. This implements the neccessary logic to 
   	                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/scsi/libata-bmdma.c:710:
+ *^Ienter non simplex mode. This implements the neccessary logic to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#302: FILE: drivers/scsi/libata-bmdma.c:731:
+unsigned long ata_pci_default_filter(const struct ata_port *ap, struct ata_device *adev, unsigned long xfer_mask)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#305: FILE: drivers/scsi/libata-bmdma.c:734:
+	/* Filter out DMA modes if the device has been configured by
+	   the BIOS as PIO only */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#305: FILE: drivers/scsi/libata-bmdma.c:734:
+	   the BIOS as PIO only */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/scsi/libata-bmdma.c:735:
+^I   $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#346: FILE: drivers/scsi/libata-core.c:1735:
+			printk(KERN_WARNING "ata%u: no PIO support for device %d.\n", ap->id, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: drivers/scsi/libata-core.c:2002:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: drivers/scsi/libata-core.c:2002:
 
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/scsi/libata-core.c:2003:
+^I/* Before we perform post reset processing we want to see if $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#361: FILE: drivers/scsi/libata-core.c:2004:
+	/* Before we perform post reset processing we want to see if 
+	   the bus shows 0xFF because the odd clown forgets the D7 pulldown

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#362: FILE: drivers/scsi/libata-core.c:2005:
+	   resistor */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: drivers/scsi/libata-core.c:2006:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/scsi/libata-core.c:2570:
+ ^I"CRD-84", NULL,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/scsi/libata-core.c:2570:
+ ^I"CRD-84", NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/scsi/libata-core.c:2570:
+ ^I"CRD-84", NULL,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/scsi/libata-core.c:2575:
+^I"HITACHI CDR-8335", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: drivers/scsi/libata-core.c:2577:
+^I"Toshiba CD-ROM XM-6202B", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/scsi/libata-core.c:2578:
+^I"TOSHIBA CD-ROM XM-1702BC", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/scsi/libata-core.c:2579:
+^I"CD-532E-A", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: drivers/scsi/libata-core.c:2580:
+^I"E-IDE CD-ROM CR-840", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/scsi/libata-core.c:2581:
+^I"CD-ROM Drive/F5A", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/scsi/libata-core.c:2582:
+^I"WPI CDD-820", NULL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/scsi/libata-core.c:2584:
+^I"SAMSUNG CD-ROM SC", NULL, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: drivers/scsi/libata-core.c:2586:
+	"ATAPI CD-ROM DRIVE 40X MAXIMUM",NULL,
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/scsi/libata-core.c:2590:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/scsi/libata-core.c:2590:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: drivers/scsi/libata-core.c:2611:
+	ata_id_string(dev->id, model_num, ATA_ID_PROD_OFS,
+			  sizeof(model_num));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: drivers/scsi/libata-core.c:2613:
+	ata_id_string(dev->id, model_rev, ATA_ID_FW_REV_OFS,
+			  sizeof(model_rev));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#470: FILE: drivers/scsi/libata-core.c:2619:
+			if (ata_dma_blacklist[i+1] == NULL)
 			                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ata_dma_blacklist[i+1]"
#470: FILE: drivers/scsi/libata-core.c:2619:
+			if (ata_dma_blacklist[i+1] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#512: FILE: drivers/scsi/libata-core.c:4237:
+		      ((void __iomem *) ap->ioaddr.bmdma_addr) + ATA_DMA_STATUS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#516: FILE: drivers/scsi/libata-core.c:4241:
+		unsigned long addr = ap->ioaddr.bmdma_addr + ATA_DMA_STATUS;
+		outb(inb(addr), addr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#545: FILE: drivers/scsi/libata-core.c:5147:
+EXPORT_SYMBOL_GPL(ata_pci_clear_simplex);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#565: FILE: drivers/scsi/libata-scsi.c:525:
+	/* We need a sensible error return here, which is tricky, and one
+	   that won't cause people to do things like return a disk wrongly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#565: FILE: drivers/scsi/libata-scsi.c:525:
+	   that won't cause people to do things like return a disk wrongly */

WARNING:LINE_SPACING: Missing a blank line after declarations
#607: FILE: drivers/scsi/libata-scsi.c:704:
+		request_queue_t *q = sdev->request_queue;
+		blk_queue_max_hw_segments(q, q->max_hw_segments - 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: drivers/scsi/libata-scsi.c:1700:
+^I^Irbuf[num + 0] = 2;^I$

CHECK:SPACING: No space is necessary after a cast
#744: FILE: drivers/scsi/libata-scsi.c:1703:
+		ata_id_string(args->id, (unsigned char *) rbuf + num,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: drivers/scsi/libata-scsi.c:1710:
+^I^Irbuf[num + 0] = 2;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/scsi/libata-scsi.c:1711:
+^I^Irbuf[num + 1] = 1;^I$

CHECK:SPACING: No space is necessary after a cast
#758: FILE: drivers/scsi/libata-scsi.c:1716:
+		ata_id_string(args->id, (unsigned char *) rbuf + num,

CHECK:SPACING: No space is necessary after a cast
#761: FILE: drivers/scsi/libata-scsi.c:1719:
+		ata_id_string(args->id, (unsigned char *) rbuf + num,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#799: FILE: drivers/scsi/pdc_adma.c:324:
+		VPRINTK("PRD[%u] = (0x%lX, 0x%X)\n", i/4,
 		                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: drivers/scsi/pdc_adma.c:325:
+		VPRINTK("PRD[%u] = (0x%lX, 0x%X)\n", i/4,
 					(unsigned long)addr, len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#875: FILE: drivers/scsi/sata_svw.c:69:
+^IK2_SATA_TF_CMDSTAT_OFFSET      ^I= 0x1c,$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#951: FILE: drivers/scsi/sata_vsc.c:93:
+	VSC_SATA_INT_ERROR = (VSC_SATA_INT_ERROR_CRC  | VSC_SATA_INT_ERROR_T | \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/scsi/sata_vsc.c:233:
+^I^I^I^I^I * On some chips (i.e. Intel 31244), an error $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: drivers/scsi/sata_vsc.c:237:
+^I^I^I^I^I * the phy state change interrupts from recurring $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1037: FILE: drivers/scsi/sata_vsc.c:241:
+					u32 err_status;
+					err_status = vsc_sata_scr_read(ap, SCR_ERROR);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1038: FILE: drivers/scsi/sata_vsc.c:242:
+					printk(KERN_DEBUG "%s: clearing interrupt, "

WARNING:SPLIT_STRING: quoted string split across lines
#1039: FILE: drivers/scsi/sata_vsc.c:243:
+					printk(KERN_DEBUG "%s: clearing interrupt, "
+					       "status %x; sata err status %x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1040: FILE: drivers/scsi/sata_vsc.c:244:
+					       __FUNCTION__,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1103: FILE: include/linux/libata.h:505:
+extern int ata_pci_clear_simplex(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1111: FILE: include/linux/libata.h:546:
+extern void ata_noop_qc_prep(struct ata_queued_cmd *qc);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1120: FILE: include/linux/libata.h:613:
+extern unsigned long ata_pci_default_filter(const struct ata_port *, struct ata_device *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1120: FILE: include/linux/libata.h:613:
+extern unsigned long ata_pci_default_filter(const struct ata_port *, struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ata_port *' should also have an identifier name
#1120: FILE: include/linux/libata.h:613:
+extern unsigned long ata_pci_default_filter(const struct ata_port *, struct ata_device *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1120: FILE: include/linux/libata.h:613:
+extern unsigned long ata_pci_default_filter(const struct ata_port *, struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1120: FILE: include/linux/libata.h:613:
+extern unsigned long ata_pci_default_filter(const struct ata_port *, struct ata_device *, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091557.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 28 warnings, 14 checks, 957 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091557.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
