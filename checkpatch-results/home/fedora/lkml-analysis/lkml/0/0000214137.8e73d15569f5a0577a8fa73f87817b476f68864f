WARNING:REPEATED_WORD: Possible repeated word: 'by'
#33: 
of this patch by by never setting bot the local apic and the ioapic

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#37: 
an ExtInt input to make this decision.  A future improvement
   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'virutal' may be misspelled - perhaps 'virtual'?
#40: 
method, of selecting which apic to place in virutal wire mode.
                                            ^^^^^^^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#68: FILE: arch/x86_64/kernel/apic.c:148:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#68: FILE: arch/x86_64/kernel/apic.c:148:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#84: FILE: arch/x86_64/kernel/apic.c:164:
+				APIC_LVT_LEVEL_TRIGGER | APIC_LVT_MASKED );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#89: FILE: arch/x86_64/kernel/apic.c:169:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#89: FILE: arch/x86_64/kernel/apic.c:169:
+		else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#96: FILE: arch/x86_64/kernel/apic.c:176:
+		value &= ~(

WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#132: FILE: arch/x86_64/kernel/io_apic.c:1137:
+	 * so legacy interrups can be delivered.
 	             ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <mp_ExtINT>
#134: FILE: arch/x86_64/kernel/io_apic.c:1139:
+	pin = find_isa_irq_pin(0, mp_ExtINT);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#146: FILE: arch/x86_64/kernel/io_apic.c:1151:
+		entry.delivery_mode   = 7; /* ExtInt */
 		                              ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: arch/x86_64/kernel/io_apic.c:1155:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: arch/x86_64/kernel/io_apic.c:1160:
+		io_apic_write(0, 0x11+2*pin, *(((int *)&entry)+1));
 		                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#155: FILE: arch/x86_64/kernel/io_apic.c:1160:
+		io_apic_write(0, 0x11+2*pin, *(((int *)&entry)+1));
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: arch/x86_64/kernel/io_apic.c:1160:
+		io_apic_write(0, 0x11+2*pin, *(((int *)&entry)+1));
 		                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: arch/x86_64/kernel/io_apic.c:1161:
+		io_apic_write(0, 0x10+2*pin, *(((int *)&entry)+0));
 		                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: arch/x86_64/kernel/io_apic.c:1161:
+		io_apic_write(0, 0x10+2*pin, *(((int *)&entry)+0));
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: arch/x86_64/kernel/io_apic.c:1161:
+		io_apic_write(0, 0x10+2*pin, *(((int *)&entry)+0));
 		                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: include/asm-x86_64/apic.h:80:
+extern void disconnect_bsp_APIC (int virt_wire_setup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/asm-x86_64/apic.h:80:
+extern void disconnect_bsp_APIC (int virt_wire_setup);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 12 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
