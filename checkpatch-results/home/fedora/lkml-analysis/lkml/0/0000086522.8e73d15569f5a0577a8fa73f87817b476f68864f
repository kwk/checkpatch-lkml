WARNING:TYPO_SPELLING: 'layed' may be misspelled - perhaps 'laid'?
#26: 
different options and each command layed out in its own static const
                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: drivers/char/tpm/tpm.c:501:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the timeouts");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/char/tpm/tpm.c:516:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the timeouts");

CHECK:SPACING: No space is necessary after a cast
#106: FILE: drivers/char/tpm/tpm.c:520:
+	if (be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_SIZE_IDX)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/char/tpm/tpm.c:525:
+^Itimeout = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#112: FILE: drivers/char/tpm/tpm.c:526:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX)));

CHECK:SPACING: No space is necessary after a cast
#116: FILE: drivers/char/tpm/tpm.c:530:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_2_IDX)));

CHECK:SPACING: No space is necessary after a cast
#120: FILE: drivers/char/tpm/tpm.c:534:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_3_IDX)));

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/char/tpm/tpm.c:538:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_4_IDX)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/char/tpm/tpm.c:548:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the durations");

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/char/tpm/tpm.c:552:
+	if (be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_SIZE_IDX)))

CHECK:SPACING: No space is necessary after a cast
#143: FILE: drivers/char/tpm/tpm.c:557:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX)));

CHECK:SPACING: No space is necessary after a cast
#145: FILE: drivers/char/tpm/tpm.c:559:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_2_IDX)));

CHECK:SPACING: No space is necessary after a cast
#147: FILE: drivers/char/tpm/tpm.c:561:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_3_IDX)));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#153: FILE: drivers/char/tpm/tpm.c:567:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: drivers/char/tpm/tpm.c:578:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: drivers/char/tpm/tpm.c:578:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/char/tpm/tpm.c:579:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,
+			char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#171: FILE: drivers/char/tpm/tpm.c:585:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#171: FILE: drivers/char/tpm/tpm.c:585:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#179: FILE: drivers/char/tpm/tpm.c:593:
+			"attemtping to determine the permanent state");
 			 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/char/tpm/tpm.c:593:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attemtping to determine the permanent state");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: drivers/char/tpm/tpm.c:600:
+ssize_t tpm_show_active(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: drivers/char/tpm/tpm.c:600:
+ssize_t tpm_show_active(struct device * dev, struct device_attribute * attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: drivers/char/tpm/tpm.c:607:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#193: FILE: drivers/char/tpm/tpm.c:607:
+	if (chip == NULL)

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#201: FILE: drivers/char/tpm/tpm.c:615:
+			"attemtping to determine the permanent state");
 			 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/char/tpm/tpm.c:615:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attemtping to determine the permanent state");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/char/tpm/tpm.c:622:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/char/tpm/tpm.c:622:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/char/tpm/tpm.c:623:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,
+			char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/char/tpm/tpm.c:629:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#215: FILE: drivers/char/tpm/tpm.c:629:
+	if (chip == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/char/tpm/tpm.c:637:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the owner state");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: drivers/char/tpm/tpm.c:644:
+ssize_t tpm_show_temp_deactivated(struct device * dev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#230: FILE: drivers/char/tpm/tpm.c:644:
+ssize_t tpm_show_temp_deactivated(struct device * dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/char/tpm/tpm.c:645:
+ssize_t tpm_show_temp_deactivated(struct device * dev, 
+				struct device_attribute * attr, char *buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: drivers/char/tpm/tpm.c:645:
+				struct device_attribute * attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: drivers/char/tpm/tpm.c:651:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#237: FILE: drivers/char/tpm/tpm.c:651:
+	if (chip == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/char/tpm/tpm.c:659:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the temporary state");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/char/tpm/tpm.c:665:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: drivers/char/tpm/tpm.c:830:
+ssize_t tpm_show_caps_1_2(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: drivers/char/tpm/tpm.c:831:
+			  struct device_attribute * attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/char/tpm/tpm.c:838:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#275: FILE: drivers/char/tpm/tpm.c:838:
+	if (chip == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#282: FILE: drivers/char/tpm/tpm.c:845:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: drivers/char/tpm/tpm.c:848:
+		dev_dbg(chip->dev, "A TPM error (%d) occurred "
+			"attempting to determine the manufacturer\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#286: FILE: drivers/char/tpm/tpm.c:849:
+			be32_to_cpu(*((__be32 *) (data + TPM_RET_CODE_IDX))));

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/char/tpm/tpm.c:854:
+		       be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX))));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#296: FILE: drivers/char/tpm/tpm.c:859:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <=

WARNING:SPLIT_STRING: quoted string split across lines
#299: FILE: drivers/char/tpm/tpm.c:862:
+		dev_err(chip->dev, "A TPM error (%d) occurred "
+			"attempting to determine the 1.2 version\n",

CHECK:SPACING: No space is necessary after a cast
#300: FILE: drivers/char/tpm/tpm.c:863:
+			be32_to_cpu(*((__be32 *) (data + TPM_RET_CODE_IDX))));

CHECK:SPACING: No space is necessary after a cast
#305: FILE: drivers/char/tpm/tpm.c:868:
+		       (int) data[16], (int) data[17], (int) data[18],

CHECK:SPACING: No space is necessary after a cast
#306: FILE: drivers/char/tpm/tpm.c:869:
+		       (int) data[19]);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#322: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#322: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/char/tpm/tpm.h:45:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#326: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#326: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#328: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#328: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/char/tpm/tpm.h:51:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#330: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#330: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/char/tpm/tpm.h:53:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#332: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#332: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: drivers/char/tpm/tpm.h:123:
+extern void tpm_get_timeouts(struct tpm_chip *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#350: FILE: drivers/char/tpm/tpm.h:124:
+extern void tpm_gen_interrupt(struct tpm_chip *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#350: FILE: drivers/char/tpm/tpm.h:124:
+extern void tpm_gen_interrupt(struct tpm_chip *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: drivers/char/tpm/tpm.h:125:
+extern void tpm_continue_selftest(struct tpm_chip *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#351: FILE: drivers/char/tpm/tpm.h:125:
+extern void tpm_continue_selftest(struct tpm_chip *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 22 warnings, 41 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
