WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
The patch below is a solution for early kmalloc/kfree.  An architecture which 

WARNING:TYPO_SPELLING: 'knowlege' may be misspelled - perhaps 'knowledge'?
#43: 
knowlege and possibly manipulation of arch dependent code for enablement. 
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: mm/Kconfig:103:
+# code calling kmem_cache_init when pfn_to_page is safe to call. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: mm/slab.c:1212:
+	unsigned long size = 1UL << (PAGE_SHIFT+order);
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: mm/slab.c:1218:
+		ptr = __alloc_bootmem_node(NODE_DATA(nodeid), size, size,
+				__pa(MAX_DMA_ADDRESS));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#171: FILE: mm/slab.c:1222:
+		__ClearPageReserved(page+j);
 		                        ^

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageReserved>
#171: FILE: mm/slab.c:1222:
+		__ClearPageReserved(page+j);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#172: FILE: mm/slab.c:1223:
+		reset_page_mapcount(page+j);
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#175: FILE: mm/slab.c:1226:
+			set_page_count(page+j, 0);
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: mm/slab.c:1229:
+			set_page_count(page+j, 1);
 			                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: mm/slab.c:1251:
+ ^Ielse if (likely(nodeid == -1))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: mm/slab.c:1251:
+ ^Ielse if (likely(nodeid == -1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: mm/slab.c:1251:
+ ^Ielse if (likely(nodeid == -1))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: mm/slab.c:1270:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#237: FILE: mm/slab.c:1300:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169391.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 8 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169391.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
