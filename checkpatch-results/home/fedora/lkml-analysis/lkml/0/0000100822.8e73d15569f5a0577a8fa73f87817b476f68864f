WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#100: 
--- linux-2.6.16-rc4-mm1x/include/linux/sched.h.org	2006-02-20 14:07:26.000000000 +0100

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: include/linux/sysctl.h:150:
+	KERN_SCHED_THROTTLE1=72,  /* int: throttling grace period 1 in secs */
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: include/linux/sysctl.h:151:
+	KERN_SCHED_THROTTLE2=73,  /* int: throttling grace period 2 in secs */
 	                    ^

CHECK:SPACING: No space is necessary after a cast
#138: FILE: kernel/sched.c:84:
+	((unsigned long long)(TIME) * ((unsigned long) (1000000000 / HZ)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'TIME' - possible side-effects?
#140: FILE: kernel/sched.c:86:
+#define NS64_TO_JIFFIES(TIME) \
+	((((unsigned long long)((TIME)) >> BITS_PER_LONG) * \
+	(1 + NS_TO_JIFFIES(~0UL))) + NS_TO_JIFFIES((unsigned long)(TIME)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: kernel/sched.c:96:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'aviod' may be misspelled - perhaps 'avoid'?
#177: FILE: kernel/sched.c:185:
+ *           can aviod being throttled.  Each conforming slice
                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: kernel/sched.c:223:
+#define SLICE_SPA_SHIFT   (SLICE_LTS_SHIFT + SLICE_LTS_BITS) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#219: FILE: kernel/sched.c:227:
+#define INFO_MASK(x)      ((1U << (x))-1)
                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: kernel/sched.c:245:
+#define last_slice(p) (((p)->slice_info & SLICE_LTS_MASK) >> SLICE_LTS_SHIFT) $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#238: FILE: kernel/sched.c:246:
+#define set_last_slice(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_LTS_MASK) | (((n) << SLICE_LTS_SHIFT) & SLICE_LTS_MASK))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: kernel/sched.c:247:
+^I~SLICE_LTS_MASK) | (((n) << SLICE_LTS_SHIFT) & SLICE_LTS_MASK))) $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#246: FILE: kernel/sched.c:254:
+#define set_slice_avg(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_AVG_MASK) | ((((n) / NS_SLEEP_AVG_PCNT) \
+	<< SLICE_AVG_SHIFT) & SLICE_AVG_MASK))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/sched.c:256:
+^I<< SLICE_AVG_SHIFT) & SLICE_AVG_MASK))) $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#251: FILE: kernel/sched.c:259:
+#define set_slice_avg_raw(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_AVG_MASK) | (((n) << SLICE_AVG_SHIFT) & SLICE_AVG_MASK))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: kernel/sched.c:260:
+^I~SLICE_AVG_MASK) | (((n) << SLICE_AVG_SHIFT) & SLICE_AVG_MASK))) $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#266: FILE: kernel/sched.c:274:
+#define cpu_this_slice(p) \
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \
+	(unsigned) last_slice(p)))

CHECK:SPACING: No space is necessary after a cast
#267: FILE: kernel/sched.c:275:
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#267: FILE: kernel/sched.c:275:
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \

CHECK:SPACING: No space is necessary after a cast
#268: FILE: kernel/sched.c:276:
+	(unsigned) last_slice(p)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#268: FILE: kernel/sched.c:276:
+	(unsigned) last_slice(p)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#286: FILE: kernel/sched.c:294:
+#define SLEEP_AVG_DIVISOR(p) \
+	(grace_expired(p, G2) ? : (1 + CURRENT_BONUS(p)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: kernel/sched.c:315:
+		int bonus;
+		if (length >= NS_PER_DYNPRIO)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#342: FILE: kernel/sched.c:950:
 	if (likely(sleep_time > 0)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#394: FILE: kernel/sched.c:985:
+			else ceiling += sleep_time;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: kernel/sched.c:2880:
 
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#487: FILE: kernel/sched.c:2919:
+	if (!grace_expired(p, G1) || cpu < cpu_max(p) + PCNT_PER_DYNPRIO)
[...]
+	else if (cpu > cpu_max(p)) {
[...]

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#594: FILE: kernel/sysctl.c:75:
+extern int sched_g1;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#595: FILE: kernel/sysctl.c:76:
+extern int sched_g2;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#596: FILE: kernel/sysctl.c:77:
+extern int sched_g2_max;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#605: FILE: kernel/sysctl.c:232:
+ * kern_table.  We use these as one-element integer vectors. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: kernel/sysctl.c:684:
+		.maxlen		= sizeof (int),

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#624: FILE: kernel/sysctl.c:688:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#631: FILE: kernel/sysctl.c:695:
+		.maxlen		= sizeof (int),

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#635: FILE: kernel/sysctl.c:699:
+		.extra1		= &zero,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100822.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 13 warnings, 14 checks, 533 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100822.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
