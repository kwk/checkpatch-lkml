WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#APP

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#NO_APP

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#APP

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#NO_APP

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -urN kernels/2.4/v2.4.13-ac8/arch/i386/kernel/entry.S v2.4.13-ac8+tr.5/arch/i386/kernel/entry.S

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/i386/kernel/setup.c:2890:
+	if(cur->mm)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#234: FILE: arch/i386/kernel/smpboot.c:510:
+volatile int physical_apicid_to_cpu[MAX_APICID];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#237: FILE: arch/i386/kernel/smpboot.c:512:
+volatile int cpu_to_physical_apicid[NR_CPUS];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#241: FILE: arch/i386/kernel/smpboot.c:515:
+volatile int logical_apicid_to_cpu[MAX_APICID];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#244: FILE: arch/i386/kernel/smpboot.c:517:
+volatile int cpu_to_logical_apicid[NR_CPUS];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: arch/i386/kernel/smpboot.c:541:
+^I^Ilogical_apicid_to_cpu[apicid] = cpu;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: arch/i386/kernel/smpboot.c:544:
+^I^Iphysical_apicid_to_cpu[apicid] = cpu;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: arch/i386/kernel/smpboot.c:556:
+^I^Ilogical_apicid_to_cpu[apicid] = -1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: arch/i386/kernel/smpboot.c:559:
+^I^Iphysical_apicid_to_cpu[apicid] = -1;^I$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#385: FILE: include/asm-i386/current.h:6:
+static inline struct task_struct *get_current(void) __attribute__((const));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#399: FILE: include/asm-i386/current.h:16:
+	__asm__ __volatile__("andl %%esp,%0; ":"=r" (ptsk) : "0" (~8191UL));
 	                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#416: FILE: include/asm-i386/current_asm.h:1:
+/* asm/current_asm.h

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_1: Consider removing the #if 1 and its #endif
#425: FILE: include/asm-i386/current_asm.h:10:
+#if 1 /*def CONFIG_SMP*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: include/asm-i386/current_asm.h:14:
+ * opcode we want should actually be generated by strl, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: include/asm-i386/current_asm.h:15:
+ * unfortunately gas doesn't realize that the operand size $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: include/asm-i386/current_asm.h:16:
+ * prefix applies to str.  Please take a wet noodle and thread $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: include/asm-i386/current_asm.h:17:
+ * it into my eye as that will be less painful than dealing $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: include/asm-i386/current_asm.h:20:
+#define GET_CURRENT(reg,regw)				\
                        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#435: FILE: include/asm-i386/current_asm.h:20:
+#define GET_CURRENT(reg,regw)				\
+	str regw					\
+	; shll $LOG2_PER_CPU_SIZE-2,reg			\
+	; aligned_data_adjusted = aligned_data-(__FIRST_TSS_ENTRY << (3 + LOG2_PER_CPU_SIZE - 2))	\
+	; movl aligned_data_adjusted(reg),reg

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#435: FILE: include/asm-i386/current_asm.h:20:
+#define GET_CURRENT(reg,regw)				\
+	str regw					\
+	; shll $LOG2_PER_CPU_SIZE-2,reg			\
+	; aligned_data_adjusted = aligned_data-(__FIRST_TSS_ENTRY << (3 + LOG2_PER_CPU_SIZE - 2))	\
+	; movl aligned_data_adjusted(reg),reg

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#437: FILE: include/asm-i386/current_asm.h:22:
+	; shll $LOG2_PER_CPU_SIZE-2,reg			\
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: include/asm-i386/current_asm.h:22:
+	; shll $LOG2_PER_CPU_SIZE-2,reg			\
 	                           ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#438: FILE: include/asm-i386/current_asm.h:23:
+	; aligned_data_adjusted = aligned_data-(__FIRST_TSS_ENTRY << (3 + LOG2_PER_CPU_SIZE - 2))	\

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#438: FILE: include/asm-i386/current_asm.h:23:
+	; aligned_data_adjusted = aligned_data-(__FIRST_TSS_ENTRY << (3 + LOG2_PER_CPU_SIZE - 2))	\
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#439: FILE: include/asm-i386/current_asm.h:24:
+	; movl aligned_data_adjusted(reg),reg
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: include/asm-i386/current_asm.h:27:
+#define GET_CURRENT(reg,regw)	movl (aligned_data),reg

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: include/asm-i386/current_asm.h:27:
+#define GET_CURRENT(reg,regw)	movl (aligned_data),reg
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: include/asm-i386/current_asm.h:27:
+#define GET_CURRENT(reg,regw)	movl (aligned_data),reg
                              	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#442: FILE: include/asm-i386/current_asm.h:27:
+#define GET_CURRENT(reg,regw)	movl (aligned_data),reg

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#494: FILE: include/asm-i386/descfn.h:1:
+#ifndef __ARCH_DESCFN_H

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#506: FILE: include/asm-i386/descfn.h:13:
+extern void set_intr_gate(unsigned int irq, void * addr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: include/asm-i386/descfn.h:13:
+extern void set_intr_gate(unsigned int irq, void * addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#507: FILE: include/asm-i386/descfn.h:14:
+extern void set_ldt_desc(unsigned int n, void *addr, unsigned int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#508: FILE: include/asm-i386/descfn.h:15:
+extern void set_tss_desc(unsigned int n, void *addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: include/asm-i386/descfn.h:20:
+	int cpu = smp_processor_id();
+	set_ldt_desc(cpu, &default_ldt[0], 5);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#520: FILE: include/asm-i386/descfn.h:27:
+static inline void load_LDT (struct mm_struct *mm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: include/asm-i386/descfn.h:37:
+^I^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#566: FILE: include/asm-i386/smp.h:87:
+extern volatile int physical_apicid_to_cpu[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#567: FILE: include/asm-i386/smp.h:88:
+extern volatile int cpu_to_physical_apicid[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#568: FILE: include/asm-i386/smp.h:89:
+extern volatile int cpu_to_logical_apicid[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#569: FILE: include/asm-i386/smp.h:90:
+extern volatile int logical_apicid_to_cpu[];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#578: FILE: include/asm-i386/smp.h:105:
+static inline unsigned get_TR(void) __attribute__ ((pure));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __pure over __attribute__((pure))
#578: FILE: include/asm-i386/smp.h:105:
+static inline unsigned get_TR(void) __attribute__ ((pure));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#579: FILE: include/asm-i386/smp.h:106:
+static inline unsigned get_TR(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#582: FILE: include/asm-i386/smp.h:109:
+	unsigned tr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: include/asm-i386/smp.h:111:
+^I * Technically this is wrong, wrong, wrong, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: include/asm-i386/smp.h:112:
+^I * gas doesn't know about strl.  *sigh*  Please $

ERROR:SPACING: space prohibited after that open parenthesis '('
#595: FILE: include/asm-i386/smp.h:122:
+#define smp_processor_id()	( ((get_TR() >> 3) - __FIRST_TSS_ENTRY) >> 2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#595: FILE: include/asm-i386/smp.h:122:
+#define smp_processor_id()	( ((get_TR() >> 3) - __FIRST_TSS_ENTRY) >> 2 )

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#610: FILE: include/asm-i386/smpboot.h:39:
+extern volatile int logical_apicid_to_cpu[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#611: FILE: include/asm-i386/smpboot.h:40:
+extern volatile int cpu_to_logical_apicid[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#612: FILE: include/asm-i386/smpboot.h:41:
+extern volatile int physical_apicid_to_cpu[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#613: FILE: include/asm-i386/smpboot.h:42:
+extern volatile int cpu_to_physical_apicid[];

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#644: FILE: include/asm-i386/uaccess.h:112:
+		:"0" (ptr), "1" (current))
 		^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#652: FILE: include/linux/per_cpu.h:1:
+#ifndef __LINUX__PER_CPU__H

CHECK:BIT_MACRO: Prefer using the BIT macro
#656: FILE: include/linux/per_cpu.h:5:
+#define PER_CPU_SIZE		(1 << LOG2_PER_CPU_SIZE)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: include/linux/per_cpu.h:11:
+^I/* Assembly code relies on curr being the first member of this $

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#671: FILE: include/linux/per_cpu.h:20:
+	char __pad [PER_CPU_SIZE];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: include/linux/per_cpu.h:22:
+^I/* Make sure the padding is large enough by forcing an error $

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#676: FILE: include/linux/per_cpu.h:25:
+	char __pad2 [PER_CPU_SIZE - sizeof(struct per_cpu_data)];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: init/main.c:649:
+^I * needs to perform CPU setup before current is valid.  This $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: init/main.c:650:
+^I * should be okay as we're still running with interrupts disabled $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#756: FILE: kernel/sched.c:530:
+	struct per_cpu_data * sched_data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#793: FILE: kernel/sched.c:1307:
+	struct per_cpu_data * sched_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#795: FILE: kernel/sched.c:1309:
+	int cpu = smp_processor_id();
+	sched_data = per_data(cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 31 warnings, 8 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
