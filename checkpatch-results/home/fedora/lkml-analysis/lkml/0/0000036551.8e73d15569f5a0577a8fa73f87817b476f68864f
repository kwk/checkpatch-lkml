WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#38: FILE: include/linux/skbuff.h:1341:
+extern int	       skb_splice_bits(const struct sk_buff *skb, int offset,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#39: FILE: include/linux/skbuff.h:1342:
+extern int	       skb_splice_bits(const struct sk_buff *skb, int offset,
+				     struct pipe_inode_info *pipe, int len, unsigned int flags);

WARNING:CONST_STRUCT: struct pipe_buf_operations should normally be const
#60: FILE: net/core/skbuff.c:75:
+static struct pipe_buf_operations sock_buf_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#81: FILE: net/core/skbuff.c:1167:
+int skb_splice_bits(const struct sk_buff *skb, int offset, struct pipe_inode_info *pipe, int len, unsigned int flags)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#100: FILE: net/core/skbuff.c:1186:
+	if ((available_len = buflen - offset) >0) {
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#100: FILE: net/core/skbuff.c:1186:
+	if ((available_len = buflen - offset) >0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#116: FILE: net/core/skbuff.c:1202:
+				 * splice pipe desc(pipe buffer) equals 16, then call splice_to_pipe.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: net/core/skbuff.c:1204:
+				if (((len -= available_len) == 0) || pg_nr == PIPE_BUFFERS) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: net/core/skbuff.c:1207:
+                                        ret = splice_to_pipe(pipe, &spd);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: net/core/skbuff.c:1207:
+                                        ret = splice_to_pipe(pipe, &spd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: net/core/skbuff.c:1208:
+                                        if (ret == -EPIPE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: net/core/skbuff.c:1208:
+                                        if (ret == -EPIPE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: net/core/skbuff.c:1209:
+                                                return -EPIPE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: net/core/skbuff.c:1209:
+                                                return -EPIPE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: net/core/skbuff.c:1210:
+                                        else if (ret == -EAGAIN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: net/core/skbuff.c:1210:
+                                        else if (ret == -EAGAIN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: net/core/skbuff.c:1211:
+                                                return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: net/core/skbuff.c:1211:
+                                                return -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: net/core/skbuff.c:1212:
+                                        else if (ret == -ERESTARTSYS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: net/core/skbuff.c:1212:
+                                        else if (ret == -ERESTARTSYS)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: net/core/skbuff.c:1213:
+                                                return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: net/core/skbuff.c:1213:
+                                                return -ERESTARTSYS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: net/core/skbuff.c:1214:
+                                        else goto frags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: net/core/skbuff.c:1214:
+                                        else goto frags;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#128: FILE: net/core/skbuff.c:1214:
+                                        else goto frags;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:INDENTED_LABEL: labels should not be indented
#131: FILE: net/core/skbuff.c:1217:
+		frags:

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: net/core/skbuff.c:1224:
+					skb_frag_t *frag = &skb_shinfo(skb)->frags[i];
+					get_page(skb_shinfo(skb)->frags[i].page);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#142: FILE: net/core/skbuff.c:1228:
+					if ((available_len = total - offset) > 0) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#143: FILE: net/core/skbuff.c:1229:
+					if ((available_len = total - offset) > 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#144: FILE: net/core/skbuff.c:1230:
+						if (available_len > len)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#152: FILE: net/core/skbuff.c:1238:
+						if (((len -= available_len) == 0) || pg_nr == PIPE_BUFFERS) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#152: FILE: net/core/skbuff.c:1238:
+						if (((len -= available_len) == 0) || pg_nr == PIPE_BUFFERS) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#152: FILE: net/core/skbuff.c:1238:
+						if (((len -= available_len) == 0) || pg_nr == PIPE_BUFFERS) {

WARNING:INDENTED_LABEL: labels should not be indented
#165: FILE: net/core/skbuff.c:1251:
+		out:

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: net/core/skbuff.c:1253:
+                                return -EPIPE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: net/core/skbuff.c:1253:
+                                return -EPIPE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: net/core/skbuff.c:1254:
+                        if (ret == -EAGAIN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: net/core/skbuff.c:1254:
+                        if (ret == -EAGAIN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: net/core/skbuff.c:1255:
+                                return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: net/core/skbuff.c:1255:
+                                return -EAGAIN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: net/core/skbuff.c:1256:
+                        if (ret == -ERESTARTSYS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: net/core/skbuff.c:1256:
+                        if (ret == -ERESTARTSYS)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: net/core/skbuff.c:1257:
+                                return -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: net/core/skbuff.c:1257:
+                                return -ERESTARTSYS;$

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: net/core/skbuff.c:1262:
+				for(; list; list = list->next) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: net/core/skbuff.c:1266:
+					if ((available_len = total - offset) > 0) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#181: FILE: net/core/skbuff.c:1267:
+					if ((available_len = total - offset) > 0) {
+

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#182: FILE: net/core/skbuff.c:1268:
+						if (available_len > len)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#185: FILE: net/core/skbuff.c:1271:
+						more = skb_splice_bits(list, offset - buflen, pipe, available_len, flags);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#186: FILE: net/core/skbuff.c:1272:
+						if (more >= 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: net/core/skbuff.c:1273:
+                ^I                                ret += more;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: net/core/skbuff.c:1273:
+                ^I                                ret += more;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: net/core/skbuff.c:1273:
+                ^I                                ret += more;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: net/core/skbuff.c:1274:
+                        ^I                else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: net/core/skbuff.c:1274:
+                        ^I                else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: net/core/skbuff.c:1274:
+                        ^I                else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: net/core/skbuff.c:1275:
+                                ^I                return -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: net/core/skbuff.c:1275:
+                                ^I                return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: net/core/skbuff.c:1275:
+                                ^I                return -EFAULT;$

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#191: FILE: net/core/skbuff.c:1277:
+						if ((len -= available_len) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#191: FILE: net/core/skbuff.c:1277:
+						if ((len -= available_len) == 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 33 warnings, 4 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
