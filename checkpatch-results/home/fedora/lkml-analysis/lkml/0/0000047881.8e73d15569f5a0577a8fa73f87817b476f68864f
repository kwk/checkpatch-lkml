WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Clear up the warnings generated by -Wformat when converting ino_t to 64-bits.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: fs/afs/dir.c:151:
+			printk("kAFS: %s(%llu): bad magic %d/%d is %04hx\n",

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%04hx' is unnecessary
#170: FILE: fs/afs/dir.c:151:
+			printk("kAFS: %s(%llu): bad magic %d/%d is %04hx\n",
 			       __FUNCTION__, dir->i_ino, tmp, qty,
 			       ntohs(dbuf->blocks[tmp].pagehdr.magic));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: fs/bfs/dir.c:39:
+^I^Iprintf("Bad f_pos=%08lx for %s:%08llx\n", (unsigned long)f->f_pos, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: fs/bfs/dir.c:40:
+		printf("Bad f_pos=%08lx for %s:%08llx\n", (unsigned long)f->f_pos, 
 			dir->i_sb->s_id, dir->i_ino);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: fs/bfs/dir.c:191:
+^I^Iprintf("unlinking non-existent file %s:%llu (nlink=%d)\n", inode->i_sb->s_id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: fs/bfs/dir.c:192:
+		printf("unlinking non-existent file %s:%llu (nlink=%d)\n", inode->i_sb->s_id, 
 				inode->i_ino, inode->i_nlink);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: fs/coda/dir.c:546:
+			printk("coda_venus_readdir: short read: %lld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'coda_venus_readdir', this function's name, in a string
#205: FILE: fs/coda/dir.c:546:
+			printk("coda_venus_readdir: short read: %lld\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: fs/coda/dir.c:553:
+			printk("coda_venus_readdir: Invalid dir: %lld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'coda_venus_readdir', this function's name, in a string
#213: FILE: fs/coda/dir.c:553:
+			printk("coda_venus_readdir: Invalid dir: %lld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: fs/coda/dir.c:685:
+			printk("Coda: inode %lld, fid %s changed type!\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: fs/coda/inode.c:205:
+^Iprintk("coda_read_super: rootinode is %lld dev %s\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#235: FILE: fs/coda/inode.c:205:
+	printk("coda_read_super: rootinode is %lld dev %s\n", 

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#261: FILE: fs/efs/inode.c:125:
+			printk(KERN_WARNING "EFS: extent %d has bad magic number in inode %llu\n", i, inode->i_ino);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#261: FILE: fs/efs/inode.c:125:
+			printk(KERN_WARNING "EFS: extent %d has bad magic number in inode %llu\n", i, inode->i_ino);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#270: FILE: fs/efs/inode.c:165:
+	printk(KERN_WARNING "EFS: failed to read inode %llu\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: fs/ext2/dir.c:141:
+	ext2_error (sb, "ext2_check_page",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: fs/ext2/dir.c:142:
+	ext2_error (sb, "ext2_check_page",
+		"bad entry in directory #%llu: %s - "

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#346: FILE: fs/ext2/xattr.c:175:
 	if (HDR(bh)->h_magic != cpu_to_le32(EXT2_XATTR_MAGIC) ||
[...]
+			"inode %lld: bad block %d", inode->i_ino,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#355: FILE: fs/ext2/xattr.c:275:
 	if (HDR(bh)->h_magic != cpu_to_le32(EXT2_XATTR_MAGIC) ||
[...]
+			"inode %lld: bad block %d", inode->i_ino,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#364: FILE: fs/ext2/xattr.c:411:
 		if (header->h_magic != cpu_to_le32(EXT2_XATTR_MAGIC) ||
[...]
+				"inode %lld: bad block %d", inode->i_ino, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: fs/ext2/xattr.c:414:
+^I^I^I^I"inode %lld: bad block %d", inode->i_ino, $

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#430: FILE: fs/ext3/inode.c:2115:
+					   "Read failure, inode=%lld, block="E3FSBLK,

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: fs/ext3/inode.c:2463:
 				"unable to read inode block - "
+				"inode=%llu, block="E3FSBLK,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#439: FILE: fs/ext3/inode.c:2463:
+				"inode=%llu, block="E3FSBLK,

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: fs/ext3/inode.c:2545:
 					"unable to read inode block - "
+					"inode=%llu, block="E3FSBLK,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#448: FILE: fs/ext3/inode.c:2545:
+					"inode=%llu, block="E3FSBLK,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#461: FILE: fs/ext3/namei.c:881:
+			ext3_error(sb, __FUNCTION__, "reading directory #%llu "

WARNING:SPLIT_STRING: quoted string split across lines
#502: FILE: fs/ext3/namei.c:1839:
 						   "error %d reading directory"
+						   " #%llu offset %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: fs/ext3/namei.c:1924:
+	jbd_debug(4, "orphan inode %lld will point to %d\n",
 			inode->i_ino, NEXT_ORPHAN(inode));

WARNING:SPLIT_STRING: quoted string split across lines
#562: FILE: fs/ext3/super.c:379:
 		printk(KERN_ERR "  "
+		       "inode %s:%lld at %p: mode %o, nlink %d, next %d\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#571: FILE: fs/ext3/super.c:1262:
+				"%s: truncating inode %lld to %Ld bytes\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#574: FILE: fs/ext3/super.c:1264:
+			jbd_debug(2, "truncating inode %lld to %Ld bytes\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 27)
#594: FILE: fs/ext3/xattr.c:234:
 	if (ext3_xattr_check_block(bh)) {
[...]
+			   "inode %lld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#597: FILE: fs/ext3/xattr.c:236:
+			   "inode %lld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#606: FILE: fs/ext3/xattr.c:378:
+			   "inode %lld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#615: FILE: fs/ext3/xattr.c:650:
+				"inode %lld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#624: FILE: fs/ext3/xattr.c:851:
+		   "inode %lld: bad block "E3FSBLK, inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#633: FILE: fs/ext3/xattr.c:1080:
+			"inode %lld: block "E3FSBLK" read error", inode->i_ino,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#641: FILE: fs/ext3/xattr.c:1087:
+			"inode %lld: bad block "E3FSBLK, inode->i_ino,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#663: FILE: fs/freevxfs/vxfs_bmap.c:273:
+	printk(KERN_WARNING "vxfs: inode %lld has no valid orgtype (%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: fs/freevxfs/vxfs_bmap.c:274:
+	printk(KERN_WARNING "vxfs: inode %lld has no valid orgtype (%x)\n",
 			ip->i_ino, vip->vii_orgtype);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#669: FILE: fs/freevxfs/vxfs_bmap.c:278:
+	printk(KERN_WARNING "vxfs: inode %lld has an unsupported orgtype (%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: fs/freevxfs/vxfs_bmap.c:279:
+	printk(KERN_WARNING "vxfs: inode %lld has an unsupported orgtype (%x)\n",
 			ip->i_ino, vip->vii_orgtype);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#695: FILE: fs/hfs/catalog.c:277:
+	dprint(DBG_CAT_MOD, "rename_cat: %u - %llu,%s - %llu,%s\n", cnid, src_dir->i_ino, src_name->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: fs/hfs/catalog.c:278:
+	dprint(DBG_CAT_MOD, "rename_cat: %u - %llu,%s - %llu,%s\n", cnid, src_dir->i_ino, src_name->name,
 		dst_dir->i_ino, dst_name->name);

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#717: FILE: fs/hfs/extent.c:463:
+	dprint(DBG_INODE, "truncate: %llu, %Lu -> %Lu\n", inode->i_ino,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfs_write_inode', this function's name, in a string
#739: FILE: fs/hfs/inode.c:383:
+	dprint(DBG_INODE, "hfs_write_inode: %llu\n", inode->i_ino);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#752: FILE: fs/hfsplus/catalog.c:317:
+	dprint(DBG_CAT_MOD, "rename_cat: %u - %llu,%s - %llu,%s\n", cnid, src_dir->i_ino, src_name->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: fs/hfsplus/catalog.c:318:
+	dprint(DBG_CAT_MOD, "rename_cat: %u - %llu,%s - %llu,%s\n", cnid, src_dir->i_ino, src_name->name,
 		dst_dir->i_ino, dst_name->name);

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#796: FILE: fs/hfsplus/extents.c:441:
+	dprint(DBG_INODE, "truncate: %llu, %Lu -> %Lu\n", inode->i_ino,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hfsplus_write_inode', this function's name, in a string
#809: FILE: fs/hfsplus/super.c:85:
+	dprint(DBG_INODE, "hfsplus_write_inode: %llu\n", inode->i_ino);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#831: FILE: fs/isofs/compress.c:102:
+		printk(KERN_DEBUG "zisofs: Null buffer on reading block table, inode = %llu, block = %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#840: FILE: fs/isofs/compress.c:110:
+		printk(KERN_DEBUG "zisofs: Failed to read block table, inode = %llu, block = %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#849: FILE: fs/isofs/compress.c:123:
+			printk(KERN_DEBUG "zisofs: Failed to read block table, inode = %llu, block = %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#858: FILE: fs/isofs/compress.c:249:
+						printk(KERN_DEBUG "zisofs: zisofs_inflate returned %d, inode = %llu, index = %lu, fpage = %d, xpage = %d, avail_in = %d, avail_out = %d, ai = %d, ao = %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: fs/isofs/inode.c:1173:
+^I  ^I"isofs_read_level3_size: inode=%llu\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: fs/isofs/inode.c:1173:
+^I  ^I"isofs_read_level3_size: inode=%llu\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#880: FILE: fs/isofs/inode.c:1273:
+		printk("File unit size != 0 for ISO file (%lld).\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#893: FILE: fs/jbd/journal.c:764:
+		  "journal %p: inode %s/%lld, size %Ld, bits %d, blksize %ld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#906: FILE: fs/jffs/inode-v23.c:211:
+		printk("jffs_setattr(): Invalid inode number: %llu\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jffs_setattr', this function's name, in a string
#906: FILE: fs/jffs/inode-v23.c:211:
+		printk("jffs_setattr(): Invalid inode number: %llu\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#915: FILE: fs/jffs/inode-v23.c:1009:
+		printk("Deleting nonexistent file inode: %llu, nlink: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'diRead', this function's name, in a string
#928: FILE: fs/jfs/jfs_imap.c:324:
+	jfs_info("diRead: ino = %lld", ip->i_ino);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__get_metapage', this function's name, in a string
#941: FILE: fs/jfs/jfs_metapage.c:601:
+	jfs_info("__get_metapage: ino = %lld, lblock = 0x%lx, abs=%d",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nlmsvc_lock', this function's name, in a string
#954: FILE: fs/lockd/svclock.c:364:
+	dprintk("lockd: nlmsvc_lock(%s/%lld, ty=%d, pi=%d, %Ld-%Ld, bl=%d)\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#954: FILE: fs/lockd/svclock.c:364:
+	dprintk("lockd: nlmsvc_lock(%s/%lld, ty=%d, pi=%d, %Ld-%Ld, bl=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: fs/lockd/svclock.c:365:
+	dprintk("lockd: nlmsvc_lock(%s/%lld, ty=%d, pi=%d, %Ld-%Ld, bl=%d)\n",
 				file->f_file->f_dentry->d_inode->i_sb->s_id,

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#963: FILE: fs/lockd/svclock.c:441:
+	dprintk("lockd: nlmsvc_testlock(%s/%lld, ty=%d, %Ld-%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: fs/lockd/svclock.c:442:
+	dprintk("lockd: nlmsvc_testlock(%s/%lld, ty=%d, %Ld-%Ld)\n",
 				file->f_file->f_dentry->d_inode->i_sb->s_id,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nlmsvc_unlock', this function's name, in a string
#972: FILE: fs/lockd/svclock.c:474:
+	dprintk("lockd: nlmsvc_unlock(%s/%lld, pi=%d, %Ld-%Ld)\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#972: FILE: fs/lockd/svclock.c:474:
+	dprintk("lockd: nlmsvc_unlock(%s/%lld, pi=%d, %Ld-%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#973: FILE: fs/lockd/svclock.c:475:
+	dprintk("lockd: nlmsvc_unlock(%s/%lld, pi=%d, %Ld-%Ld)\n",
 				file->f_file->f_dentry->d_inode->i_sb->s_id,

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#981: FILE: fs/lockd/svclock.c:503:
+	dprintk("lockd: nlmsvc_cancel(%s/%lld, pi=%d, %Ld-%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: fs/lockd/svclock.c:504:
+	dprintk("lockd: nlmsvc_cancel(%s/%lld, pi=%d, %Ld-%Ld)\n",
 				file->f_file->f_dentry->d_inode->i_sb->s_id,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1020: FILE: fs/minix/inode.c:527:
+			printk("IO error syncing minix inode [%s:%08llx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: fs/minix/inode.c:528:
+			printk("IO error syncing minix inode [%s:%08llx]\n",
 				inode->i_sb->s_id, inode->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: fs/nfs/dir.c:135:
+	dfprintk(VFS, "NFS: opendir(%s/%lld)\n",
 			inode->i_sb->s_id, inode->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: fs/nfs/dir.c:971:
+	dfprintk(VFS, "NFS: atomic_lookup(%s/%lld), %s\n",
 			dir->i_sb->s_id, dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: fs/nfs/dir.c:1183:
+	dfprintk(VFS, "NFS: create(%s/%lld), %s\n",
 			dir->i_sb->s_id, dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: fs/nfs/dir.c:1217:
+	dfprintk(VFS, "NFS: mknod(%s/%lld), %s\n",
 			dir->i_sb->s_id, dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: fs/nfs/dir.c:1250:
+	dfprintk(VFS, "NFS: mkdir(%s/%lld), %s\n",
 			dir->i_sb->s_id, dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: fs/nfs/dir.c:1276:
+	dfprintk(VFS, "NFS: rmdir(%s/%lld), %s\n",
 			dir->i_sb->s_id, dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: fs/nfs/dir.c:1419:
+	dfprintk(VFS, "NFS: unlink(%s/%lld, %s)\n", dir->i_sb->s_id,
 		dir->i_ino, dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: fs/nfs/dir.c:1457:
+	dfprintk(VFS, "NFS: symlink(%s/%lld, %s, %s)\n", dir->i_sb->s_id,
 		dir->i_ino, dentry->d_name.name, symname);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: fs/nfs/dir.c:1922:
+	dfprintk(VFS, "NFS: permission(%s/%lld), mask=0x%x, res=%d\n",
 		inode->i_sb->s_id, inode->i_ino, mask, res);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: fs/nfs/file.c:380:
+	dfprintk(VFS, "nfs: write(%s/%s(%lld), %lu@%lu)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_lock', this function's name, in a string
#1154: FILE: fs/nfs/file.c:531:
+	dprintk("NFS: nfs_lock(f=%s/%lld, t=%x, fl=%x, r=%Ld:%Ld)\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#1154: FILE: fs/nfs/file.c:531:
+	dprintk("NFS: nfs_lock(f=%s/%lld, t=%x, fl=%x, r=%Ld:%Ld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: fs/nfs/file.c:532:
+	dprintk("NFS: nfs_lock(f=%s/%lld, t=%x, fl=%x, r=%Ld:%Ld)\n",
 			inode->i_sb->s_id, inode->i_ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1164: FILE: fs/nfs/file.c:555:
+	dprintk("NFS: nfs_flock(f=%s/%lld, t=%x, fl=%x)\n",
 			filp->f_dentry->d_inode->i_sb->s_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: fs/nfs/inode.c:895:
+	dfprintk(VFS, "NFS: %s(%s/%lld ct=%d info=0x%x)\n",
 			__FUNCTION__, inode->i_sb->s_id, inode->i_ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: fs/nfs/inode.c:947:
+		dprintk("NFS: isize change on server for file %s/%lld\n",
 				inode->i_sb->s_id, inode->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1194: FILE: fs/nfs/inode.c:954:
+		dprintk("NFS: mtime change on server for file %s/%lld\n",
 				inode->i_sb->s_id, inode->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1203: FILE: fs/nfs/inode.c:991:
+		dprintk("NFS: change_attr change on server for file %s/%lld\n",
 				inode->i_sb->s_id, inode->i_ino);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1211: FILE: fs/nfs/inode.c:1022:
+	printk(KERN_DEBUG "%s: inode %lld mode changed, %07o to %07o\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1212: FILE: fs/nfs/inode.c:1023:
+	printk(KERN_DEBUG "%s: inode %lld mode changed, %07o to %07o\n",
 			__FUNCTION__, inode->i_ino, inode->i_mode, fattr->mode);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs3_cache_acls', this function's name, in a string
#1242: FILE: fs/nfs/nfs3acl.c:171:
+	dprintk("nfs3_cache_acls(%s/%lld, %p, %p)\n", inode->i_sb->s_id,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'exp_rootfh', this function's name, in a string
#1255: FILE: fs/nfsd/export.c:999:
+	dprintk("nfsd: exp_rootfh(%s [%p] %s:%s/%lld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1256: FILE: fs/nfsd/export.c:1000:
+	dprintk("nfsd: exp_rootfh(%s [%p] %s:%s/%lld)\n",
 		 path, nd.dentry, clp->name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fh_compose', this function's name, in a string
#1268: FILE: fs/nfsd/nfsfh.c:336:
+	dprintk("nfsd: fh_compose(exp %02x:%02x/%lld %s/%s, ino=%lld)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1293: FILE: fs/ntfs/aops.c:1173:
 			ntfs_error(vol->sb, "Failed to apply mst fixups "
+					"(inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1302: FILE: fs/ntfs/aops.c:1220:
 			ntfs_error(vol->sb, "I/O error while writing ntfs "
+					"record buffer (inode 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1315: FILE: fs/ntfs/attrib.c:1787:
 					"to non-resident attribute "
+					"conversion.  Truncating inode 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1324: FILE: fs/ntfs/attrib.c:1960:
 				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%llx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#1333: FILE: fs/ntfs/attrib.c:1969:
 				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%llx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#1342: FILE: fs/ntfs/attrib.c:2099:
 			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1351: FILE: fs/ntfs/attrib.c:2192:
 				ntfs_error(vol->sb, "Cannot extend allocation "
+						"of inode 0x%llx, attribute "

WARNING:SPLIT_STRING: quoted string split across lines
#1360: FILE: fs/ntfs/attrib.c:2230:
 			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1369: FILE: fs/ntfs/attrib.c:2243:
 			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1378: FILE: fs/ntfs/attrib.c:2275:
 			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1387: FILE: fs/ntfs/attrib.c:2311:
 			ntfs_error(vol->sb, "Cannot extend allocation of "
+					"inode 0x%llx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1396: FILE: fs/ntfs/attrib.c:2381:
 		ntfs_error(vol->sb, "Cannot complete extension of allocation "
+				"of inode 0x%llx, attribute type 0x%x, because "

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: fs/ntfs/dir.c:1121:
+	ntfs_debug("Entering for inode 0x%llx, fpos 0x%llx.",
 			vdir->i_ino, fpos);

WARNING:SPLIT_STRING: quoted string split across lines
#1431: FILE: fs/ntfs/dir.c:1130:
 		ntfs_debug("Calling filldir for . with len 1, fpos 0x0, "
+				"inode 0x%llx, DT_DIR.", vdir->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1440: FILE: fs/ntfs/dir.c:1180:
 		ntfs_error(sb, "Index root attribute missing in directory "
+				"inode 0x%llx.", vdir->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1458: FILE: fs/ntfs/dir.c:1339:
 		ntfs_error(sb, "Out of bounds check failed. Corrupt directory "
+				"inode 0x%llx or driver bug.", vdir->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1465: FILE: fs/ntfs/dir.c:1345:
 		ntfs_error(sb, "Directory index record with vcn 0x%llx is "
+				"corrupt.  Corrupt inode 0x%llx.  Run chkdsk.",

WARNING:SPLIT_STRING: quoted string split across lines
#1474: FILE: fs/ntfs/dir.c:1355:
 				"different from expected VCN (0x%llx). "
+				"Directory inode 0x%llx is corrupt or driver "

WARNING:SPLIT_STRING: quoted string split across lines
#1483: FILE: fs/ntfs/dir.c:1365:
 		ntfs_error(sb, "Index buffer (VCN 0x%llx) of directory inode "
+				"0x%llx has a size (%u) differing from the "

WARNING:SPLIT_STRING: quoted string split across lines
#1492: FILE: fs/ntfs/dir.c:1377:
 		ntfs_error(sb, "Index buffer (VCN 0x%llx) of directory inode "
+				"0x%llx crosses page boundary. Impossible! "

WARNING:SPLIT_STRING: quoted string split across lines
#1501: FILE: fs/ntfs/dir.c:1387:
 		ntfs_error(sb, "Size of index buffer (VCN 0x%llx) of directory "
+				"inode 0x%llx exceeds maximum size.",

WARNING:SPLIT_STRING: quoted string split across lines
#1577: FILE: fs/ntfs/file.c:1884:
 			ntfs_error(vol->sb, "Cannot perform write to inode "
+					"0x%llx, attribute type 0x%x, because "

WARNING:SPLIT_STRING: quoted string split across lines
#1604: FILE: fs/ntfs/file.c:1933:
 				ntfs_error(vol->sb, "Cannot perform write to "
+						"inode 0x%llx, attribute type "

WARNING:SPLIT_STRING: quoted string split across lines
#1613: FILE: fs/ntfs/file.c:1960:
 			ntfs_error(vol->sb, "Cannot perform write to inode "
+					"0x%llx, attribute type 0x%x, because "

WARNING:SPLIT_STRING: quoted string split across lines
#1622: FILE: fs/ntfs/file.c:2009:
 							"perform write to "
+							"inode 0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#1671: FILE: fs/ntfs/inode.c:716:
 			ntfs_warning(vi->i_sb, "Resident attribute list "
+					"attribute in inode 0x%llx is marked "

WARNING:SPLIT_STRING: quoted string split across lines
#1680: FILE: fs/ntfs/inode.c:1191:
 	ntfs_error(vol->sb, "Failed with error code %i.  Marking corrupt "
+			"inode 0x%llx as bad.  Run chkdsk.", err, vi->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1699: FILE: fs/ntfs/inode.c:1446:
 	ntfs_error(vol->sb, "Failed with error code %i while reading attribute "
+			"inode (mft_no 0x%llx, type 0x%x, name_len %i).  "

WARNING:SPLIT_STRING: quoted string split across lines
#1700: FILE: fs/ntfs/inode.c:1447:
+			"inode (mft_no 0x%llx, type 0x%x, name_len %i).  "
+			"Marking corrupt inode and base inode 0x%llx as bad.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1718: FILE: fs/ntfs/inode.c:1733:
 	ntfs_error(vi->i_sb, "Failed with error code %i while reading index "
+			"inode (mft_no 0x%llx, name_len %i.", err, vi->i_ino,

WARNING:SPLIT_STRING: quoted string split across lines
#1727: FILE: fs/ntfs/inode.c:2315:
 			ntfs_error(vi->i_sb, "Failed to commit dirty inode "
+					"0x%llx.  Losing data!", vi->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1754: FILE: fs/ntfs/inode.c:2450:
 		ntfs_error(vi->i_sb, "Failed to allocate a search context for "
+				"inode 0x%llx (not enough memory).%s",

WARNING:SPLIT_STRING: quoted string split across lines
#1763: FILE: fs/ntfs/inode.c:2460:
 			ntfs_error(vi->i_sb, "Open attribute is missing from "
+					"mft record.  Inode 0x%llx is corrupt.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1769: FILE: fs/ntfs/inode.c:2465:
 			ntfs_error(vi->i_sb, "Failed to lookup attribute in "
+					"inode 0x%llx (error code %d).%s",

WARNING:SPLIT_STRING: quoted string split across lines
#1778: FILE: fs/ntfs/inode.c:2516:
 				ntfs_error(vol->sb, "Truncate would cause the "
+						"inode 0x%llx to %simum size "

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#1832: FILE: fs/ntfs/inode.c:3024:
+	ntfs_debug("Entering for %sinode 0x%llx.", NInoAttr(ni) ? "attr " : "",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1833: FILE: fs/ntfs/inode.c:3025:
+	ntfs_debug("Entering for %sinode 0x%llx.", NInoAttr(ni) ? "attr " : "",
 			vi->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: fs/ntfs/namei.c:113:
+	ntfs_debug("Looking up %s in directory inode 0x%llx.",
 			dent->d_name.name, dir_ino->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#1899: FILE: fs/ntfs/namei.c:438:
 		ntfs_error(vi->i_sb, "Failed to get parent directory inode "
+				"0x%lx of child inode 0x%llx.", parent_ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1953: FILE: fs/ocfs2/dlm/dlmfs.c:109:
+	mlog(0, "open called on inode %llu, flags 0x%x\n", inode->i_ino,
 		file->f_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1971: FILE: fs/ocfs2/dlm/dlmfs.c:182:
+	mlog(0, "inode %llu, count = %zu, *ppos = %llu\n",
 		inode->i_ino, count, *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1980: FILE: fs/ocfs2/dlm/dlmfs.c:226:
+	mlog(0, "inode %llu, count = %zu, *ppos = %llu\n",
 		inode->i_ino, count, *ppos);

WARNING:SPLIT_STRING: quoted string split across lines
#2099: FILE: fs/ocfs2/namei.c:566:
 		mlog(ML_ERROR, "populate inode failed! bh->b_blocknr=%llu, "
+		     "i_blkno=%llu, i_ino=%llu\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2178: FILE: fs/sysv/inode.c:283:
+                        printk ("IO error syncing sysv inode [%s:%08llx]\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2178: FILE: fs/sysv/inode.c:283:
+                        printk ("IO error syncing sysv inode [%s:%08llx]\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2178: FILE: fs/sysv/inode.c:283:
+                        printk ("IO error syncing sysv inode [%s:%08llx]\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2178: FILE: fs/sysv/inode.c:283:
+                        printk ("IO error syncing sysv inode [%s:%08llx]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2191: FILE: fs/udf/inode.c:925:
+		printk(KERN_ERR "udf: udf_read_inode(ino %lld) failed !bh\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2192: FILE: fs/udf/inode.c:926:
+		printk(KERN_ERR "udf: udf_read_inode(ino %lld) failed !bh\n",
 			inode->i_ino);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2200: FILE: fs/udf/inode.c:934:
+		printk(KERN_ERR "udf: udf_read_inode(ino %lld) failed ident=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2201: FILE: fs/udf/inode.c:935:
+		printk(KERN_ERR "udf: udf_read_inode(ino %lld) failed ident=%d\n",
 			inode->i_ino, ident);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2209: FILE: fs/udf/inode.c:1215:
+			printk(KERN_ERR "udf: udf_fill_inode(ino %lld) failed unknown file type=%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udf_fill_inode', this function's name, in a string
#2209: FILE: fs/udf/inode.c:1215:
+			printk(KERN_ERR "udf: udf_fill_inode(ino %lld) failed unknown file type=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2210: FILE: fs/udf/inode.c:1216:
+			printk(KERN_ERR "udf: udf_fill_inode(ino %lld) failed unknown file type=%d\n",
 				inode->i_ino, fe->icbTag.fileType);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2218: FILE: fs/udf/inode.c:1520:
+			printk("IO error syncing udf inode [%s:%08llx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2219: FILE: fs/udf/inode.c:1521:
+			printk("IO error syncing udf inode [%s:%08llx]\n",
 				inode->i_sb->s_id, inode->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2232: FILE: fs/ufs/balloc.c:242:
+	UFSD("ENTER, ino %llu, count %u, oldb %u, newb %u\n",
 	      inode->i_ino, count, oldb, newb);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2240: FILE: fs/ufs/balloc.c:286:
+	UFSD("ENTER, ino %llu, fragment %u, goal %u, count %u\n", inode->i_ino, fragment, goal, count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2271: FILE: fs/ufs/dir.c:164:
+	ufs_error (sb, "ufs_check_page", "bad entry in directory #%llu: %s - "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2369: FILE: fs/ufs/inode.c:623:
+		ufs_error (sb, "ufs_read_inode", "inode %llu has zero nlink\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2386: FILE: fs/ufs/inode.c:668:
+		ufs_error (sb, "ufs_read_inode", "inode %llu has zero nlink\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2429: FILE: fs/ufs/inode.c:773:
+		ufs_warning (sb, "ufs_read_inode", "bad inode number (%llu)\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2436: FILE: fs/ufs/inode.c:779:
+		ufs_warning (sb, "ufs_read_inode", "unable to read inode %llu\n", inode->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#2449: FILE: fs/ufs/util.c:262:
 			printk(KERN_ERR "ufs_change_blocknr: "
+			       "read_cache_page error: ino %llu, index: %lu\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2458: FILE: fs/ufs/util.c:282:
 			printk(KERN_ERR "ufs_change_blocknr: "
+			       "can not read page: ino %llu, index: %lu\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2471: FILE: net/ax25/af_ax25.c:1918:
+		seq_printf(seq," %d %d %lld\n",
 		              ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2475: FILE: net/ax25/af_ax25.c:1921:
+			   ax25->sk->sk_socket != NULL ? SOCK_INODE(ax25->sk->sk_socket)->i_ino : 0LL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ax25->sk->sk_socket"
#2475: FILE: net/ax25/af_ax25.c:1921:
+			   ax25->sk->sk_socket != NULL ? SOCK_INODE(ax25->sk->sk_socket)->i_ino : 0LL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#2545: FILE: net/x25/x25_proc.c:155:
 	seq_printf(seq, "%-10s %-10s %-5s %3.3X  %d  %d  %d  %d %3lu %3lu "
+			"%3lu %3lu %3lu %5d %5d %lld\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2580: FILE: security/selinux/hooks.c:886:
 			printk(KERN_WARNING "%s:  no dentry for dev=%s "
+			       "ino=%lld\n", __FUNCTION__, inode->i_sb->s_id,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2580: FILE: security/selinux/hooks.c:886:
+			       "ino=%lld\n", __FUNCTION__, inode->i_sb->s_id,

WARNING:SPLIT_STRING: quoted string split across lines
#2589: FILE: security/selinux/hooks.c:924:
 				printk(KERN_WARNING "%s:  getxattr returned "
+				       "%d for dev=%s ino=%lld\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2589: FILE: security/selinux/hooks.c:924:
+				       "%d for dev=%s ino=%lld\n", __FUNCTION__,

WARNING:SPLIT_STRING: quoted string split across lines
#2598: FILE: security/selinux/hooks.c:937:
 				printk(KERN_WARNING "%s:  context_to_sid(%s) "
+				       "returned %d for dev=%s ino=%lld\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2607: FILE: security/selinux/hooks.c:2087:
 			       "security_transition_sid failed, rc=%d (dev=%s "
+			       "ino=%lld)\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 118 warnings, 53 checks, 1997 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000047881.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
