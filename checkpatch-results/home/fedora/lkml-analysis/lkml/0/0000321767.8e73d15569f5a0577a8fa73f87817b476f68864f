WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test11/fs/Kconfig linux-2.6.0-test11.cur/fs/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#32: FILE: fs/Kconfig:896:
+config RELAYFS_FS
+	tristate "Relayfs file system support"
+	---help---
+	  Relayfs is a high-speed data relay filesystem designed to provide
+	  an efficient mechanism for tools and facilities to relay large
+	  amounts of data from kernel space to user space.  It's not useful
+	  on its own, and should only be enabled if other facilities that
+	  need it are enabled, such as for example klog or the Linux Trace
+	  Toolkit.
+
+	  See <file:Documentation/filesystems/relayfs.txt> for further
+	  information.
+
+	  This file system is also available as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want).
+	  The module is called relayfs.  If you want to compile it as a
+	  module, say M here and read <file:Documentation/modules.txt>.
+
+	  If unsure, say N.
+
+config KLOG_CHANNEL
+	bool "Enable klog debugging support"
+	depends on RELAYFS_FS
+	help
+	  If you say Y to this, a relayfs channel named klog will be created
+	  in the root of the relayfs file system.  You can write to the klog
+	  channel using klog() or klog_raw() from within the kernel or
+	  kernel modules, and read from the klog channel by mounting relayfs
+	  and using read(2) to read from it (or using cat).  If you're not  
+	  sure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: fs/Kconfig:924:
+^I  and using read(2) to read from it (or using cat).  If you're not  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: fs/relayfs/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#162: FILE: fs/relayfs/inode.c:24:
+#include <asm/uaccess.h>

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#168: FILE: fs/relayfs/inode.c:30:
+static struct address_space_operations	relayfs_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#169: FILE: fs/relayfs/inode.c:31:
+static struct inode_operations		relayfs_file_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#170: FILE: fs/relayfs/inode.c:32:
+static struct file_operations		relayfs_file_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#171: FILE: fs/relayfs/inode.c:33:
+static struct inode_operations		relayfs_dir_inode_operations;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#173: FILE: fs/relayfs/inode.c:35:
+static struct vfsmount *		relayfs_mount;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: fs/relayfs/inode.c:46:
+	struct inode * inode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: fs/relayfs/inode.c:47:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#196: FILE: fs/relayfs/inode.c:58:
+		inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: fs/relayfs/inode.c:86:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/relayfs/inode.c:89:
+	struct inode * inode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: fs/relayfs/inode.c:102:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: fs/relayfs/inode.c:103:
+relayfs_mkdir(struct inode * dir, struct dentry * dentry, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: fs/relayfs/inode.c:103:
+relayfs_mkdir(struct inode * dir, struct dentry * dentry, int mode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: fs/relayfs/inode.c:114:
+static int $

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#253: FILE: fs/relayfs/inode.c:115:
+relayfs_create(struct inode *dir, struct dentry *dentry, int mode, struct nameidata *nd)
                                                                                      ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: fs/relayfs/inode.c:120:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: fs/relayfs/inode.c:121:
+relayfs_symlink(struct inode * dir, struct dentry *dentry, const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: fs/relayfs/inode.c:121:
+relayfs_symlink(struct inode * dir, struct dentry *dentry, const char * symname)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#264: FILE: fs/relayfs/inode.c:126:
+	inode = relayfs_get_inode(dir->i_sb, S_IFLNK|S_IRWXUGO, 0);
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#264: FILE: fs/relayfs/inode.c:126:
+	inode = relayfs_get_inode(dir->i_sb, S_IFLNK|S_IRWXUGO, 0);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#267: FILE: fs/relayfs/inode.c:129:
+		int l = strlen(symname)+1;
 		                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: fs/relayfs/inode.c:130:
+		int l = strlen(symname)+1;
+		error = page_symlink(inode, symname, l);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#269: FILE: fs/relayfs/inode.c:131:
+		if (!error) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#272: FILE: fs/relayfs/inode.c:134:
+		} else

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#273: FILE: fs/relayfs/inode.c:135:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#287: FILE: fs/relayfs/inode.c:149:
+ *	Creates a file or directory with the specifed permissions.
   	                                     ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: fs/relayfs/inode.c:151:
+static int $

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#290: FILE: fs/relayfs/inode.c:152:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: fs/relayfs/inode.c:152:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: fs/relayfs/inode.c:152:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: fs/relayfs/inode.c:152:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: fs/relayfs/inode.c:155:
+	struct dentry * d;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: fs/relayfs/inode.c:156:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: fs/relayfs/inode.c:161:
+		printk(KERN_ERR "Couldn't mount relayfs: errcode %d\n", error);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#307: FILE: fs/relayfs/inode.c:169:
+	if (parent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#311: FILE: fs/relayfs/inode.c:173:
+	if (parent == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: fs/relayfs/inode.c:175:
+ ^I^Ireturn -EINVAL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: fs/relayfs/inode.c:175:
+ ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/relayfs/inode.c:175:
+ ^I^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: fs/relayfs/inode.c:185:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry_type == S_IFREG'
#336: FILE: fs/relayfs/inode.c:198:
+	if ((entry_type == S_IFREG) && data) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: fs/relayfs/inode.c:205:
+exit:^I$

WARNING:TYPO_SPELLING: 'specied' may be misspelled - perhaps 'specified'?
#357: FILE: fs/relayfs/inode.c:219:
+ *	@mode: mode, if not specied the default perms are used
   	                    ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/relayfs/inode.c:223:
+int $

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#362: FILE: fs/relayfs/inode.c:224:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: fs/relayfs/inode.c:224:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: fs/relayfs/inode.c:224:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: fs/relayfs/inode.c:224:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data, int mode)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#365: FILE: fs/relayfs/inode.c:227:
+		mode = S_IRUSR | S_IWUSR;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: fs/relayfs/inode.c:228:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: fs/relayfs/inode.c:241:
+int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: fs/relayfs/inode.c:242:
+relayfs_create_dir(const char * name, struct dentry * parent, struct dentry **dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: fs/relayfs/inode.c:242:
+relayfs_create_dir(const char * name, struct dentry * parent, struct dentry **dentry)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0755'.
#383: FILE: fs/relayfs/inode.c:245:
+				    S_IRWXU | S_IRUGO | S_IXUGO, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: fs/relayfs/inode.c:254:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: fs/relayfs/inode.c:259:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#399: FILE: fs/relayfs/inode.c:261:
+	if (parent == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: fs/relayfs/inode.c:276:
+	if(is_reg)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#423: FILE: fs/relayfs/inode.c:285:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#429: FILE: fs/relayfs/inode.c:291:
+relayfs_open(struct inode *inode, struct file *filp)
                                                ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#437: FILE: fs/relayfs/inode.c:299:
+		if (rchan == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#439: FILE: fs/relayfs/inode.c:301:
+		reader = __add_rchan_reader(rchan, filp, 1, 0);
 		                                   ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#440: FILE: fs/relayfs/inode.c:302:
+		if (reader == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#443: FILE: fs/relayfs/inode.c:305:
+		retval = rchan->callbacks->fileop_notify(rchan->id, filp,
 		                                                    ^^^^

CHECK:BRACES: Unbalanced braces around else statement
#448: FILE: fs/relayfs/inode.c:310:
+		else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#459: FILE: fs/relayfs/inode.c:321:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: fs/relayfs/inode.c:326:
+int $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#465: FILE: fs/relayfs/inode.c:327:
+relayfs_mmap(struct file *filp, struct vm_area_struct *vma)
                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: fs/relayfs/inode.c:330:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#476: FILE: fs/relayfs/inode.c:338:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: fs/relayfs/inode.c:350:
+ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#489: FILE: fs/relayfs/inode.c:351:
+relayfs_file_read(struct file *filp, char * buf, size_t count, loff_t *offset)
                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#489: FILE: fs/relayfs/inode.c:351:
+relayfs_file_read(struct file *filp, char * buf, size_t count, loff_t *offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: fs/relayfs/inode.c:365:
+	read_count = relay_read(reader, buf, count,
+		filp->f_flags & (O_NDELAY | O_NONBLOCK) ? 0 : 1, &dummy);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#510: FILE: fs/relayfs/inode.c:372:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: fs/relayfs/inode.c:380:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: fs/relayfs/inode.c:384:
+ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#523: FILE: fs/relayfs/inode.c:385:
+relayfs_file_write(struct file *filp, const char *buf, size_t count, loff_t *offset)
                                 ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#526: FILE: fs/relayfs/inode.c:388:
+	char * write_buf;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#533: FILE: fs/relayfs/inode.c:395:
+	if (reader == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#537: FILE: fs/relayfs/inode.c:399:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: fs/relayfs/inode.c:408:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!write_buf"
#548: FILE: fs/relayfs/inode.c:410:
+	if (write_buf == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: fs/relayfs/inode.c:422:
+^I         (write_count = relay_write(rchan->id, write_buf, count, -1, &wrote_pos)));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: fs/relayfs/inode.c:422:
+		err = wait_event_interruptible(rchan->write_wait,
+	         (write_count = relay_write(rchan->id, write_buf, count, -1, &wrote_pos)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: fs/relayfs/inode.c:426:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: fs/relayfs/inode.c:428:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: fs/relayfs/inode.c:429:
+        rchan->callbacks->user_deliver(rchan->id, wrote_pos, write_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: fs/relayfs/inode.c:429:
+        rchan->callbacks->user_deliver(rchan->id, wrote_pos, write_count);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#574: FILE: fs/relayfs/inode.c:436:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#577: FILE: fs/relayfs/inode.c:439:
+ *	Poll implemention.
   	     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#580: FILE: fs/relayfs/inode.c:442:
+relayfs_poll(struct file *filp, poll_table *wait)
                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: fs/relayfs/inode.c:446:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#591: FILE: fs/relayfs/inode.c:453:
+		poll_wait(filp, &reader->rchan->read_wait, wait);
 		          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: fs/relayfs/inode.c:457:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#597: FILE: fs/relayfs/inode.c:459:
+		poll_wait(filp, &reader->rchan->write_wait, wait);
 		          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: fs/relayfs/inode.c:463:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#608: FILE: fs/relayfs/inode.c:470:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#614: FILE: fs/relayfs/inode.c:476:
+relayfs_release(struct inode *inode, struct file *filp)
                                                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: fs/relayfs/inode.c:480:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#623: FILE: fs/relayfs/inode.c:485:
+	if (reader == NULL || reader->rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader->rchan"
#623: FILE: fs/relayfs/inode.c:485:
+	if (reader == NULL || reader->rchan == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#627: FILE: fs/relayfs/inode.c:489:
+        rchan->callbacks->fileop_notify(reader->rchan->id, filp,
                                                            ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: fs/relayfs/inode.c:489:
+        rchan->callbacks->fileop_notify(reader->rchan->id, filp,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: fs/relayfs/inode.c:489:
+        rchan->callbacks->fileop_notify(reader->rchan->id, filp,$

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#637: FILE: fs/relayfs/inode.c:499:
+static struct address_space_operations relayfs_aops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#643: FILE: fs/relayfs/inode.c:505:
+static struct file_operations relayfs_file_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#653: FILE: fs/relayfs/inode.c:515:
+static struct inode_operations relayfs_file_inode_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#657: FILE: fs/relayfs/inode.c:519:
+static struct inode_operations relayfs_dir_inode_operations = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: fs/relayfs/inode.c:536:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: fs/relayfs/inode.c:537:
+relayfs_fill_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: fs/relayfs/inode.c:537:
+relayfs_fill_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#677: FILE: fs/relayfs/inode.c:539:
+	struct inode * inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#678: FILE: fs/relayfs/inode.c:540:
+	struct dentry * root;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#691: FILE: fs/relayfs/inode.c:553:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: fs/relayfs/inode.c:563:
+relayfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: fs/relayfs/inode.c:575:
+static int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: fs/relayfs/inode.c:586:
+static void __exit $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#744: FILE: fs/relayfs/klog.c:1:
+/*

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#788: FILE: fs/relayfs/klog.c:45:
+static int klog_enabled = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: fs/relayfs/klog.c:61:
+^Iif (!klog_enabled || klog_channel < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: fs/relayfs/klog.c:70:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#827: FILE: fs/relayfs/klog.c:84:
+int klog_raw(const char *buf,int len)
                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: fs/relayfs/klog.c:87:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#848: FILE: fs/relayfs/klog.c:105:
+static struct ctl_table relayfs_table[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#863: FILE: fs/relayfs/klog.c:120:
+static struct ctl_table relayfs_dir_table[] =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#878: FILE: fs/relayfs/klog.c:135:
+static struct ctl_table relayfs_root_table[] =
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: fs/relayfs/klog.c:154:
+int $

CHECK:BRACES: braces {} should be used on all arms of this statement
#921: FILE: fs/relayfs/klog.c:178:
+	if (klog_channel < 0)
[...]
+	else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#922: FILE: fs/relayfs/klog.c:179:
+		printk("klog channel creation failed, errcode: %d\n", klog_channel);

CHECK:BRACES: Unbalanced braces around else statement
#923: FILE: fs/relayfs/klog.c:180:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#924: FILE: fs/relayfs/klog.c:181:
+		printk("klog channel created (%u bytes)\n", 1 << CONFIG_KLOG_CHANNEL_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: fs/relayfs/klog.c:198:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#945: FILE: fs/relayfs/klog.c:202:
+EXPORT_SYMBOL(klog);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#946: FILE: fs/relayfs/klog.c:203:
+EXPORT_SYMBOL(klog_raw);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#952: FILE: fs/relayfs/relay.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#956: FILE: fs/relayfs/relay.c:5:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#978: FILE: fs/relayfs/relay.c:27:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#980: FILE: fs/relayfs/relay.c:29:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#981: FILE: fs/relayfs/relay.c:30:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#982: FILE: fs/relayfs/relay.c:31:
+#include <asm/pgtable.h>

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#991: FILE: fs/relayfs/relay.c:40:
+static struct rchan *	rchan_table[RELAY_MAX_CHANNELS];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1014: FILE: fs/relayfs/relay.c:63:
+ * Low-level relayfs kernel API.  These functions should not normally be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: fs/relayfs/relay.c:68:
+ *^Irchan_get - get channel associated with id, incrementing refcount $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: fs/relayfs/relay.c:77:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#1029: FILE: fs/relayfs/relay.c:78:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#1029: FILE: fs/relayfs/relay.c:78:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: fs/relayfs/relay.c:80:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: fs/relayfs/relay.c:101:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: fs/relayfs/relay.c:122:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1074: FILE: fs/relayfs/relay.c:123:
+	if (rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan_table[i]"
#1079: FILE: fs/relayfs/relay.c:128:
+		if (rchan_table[i] == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1081: FILE: fs/relayfs/relay.c:130:
+			rchan_id = rchan->id = i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: fs/relayfs/relay.c:137:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#1101: FILE: fs/relayfs/relay.c:150:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#1101: FILE: fs/relayfs/relay.c:150:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: fs/relayfs/relay.c:166:
+ *^Irelay file from the relayfs filesystem.  Should only be called from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: fs/relayfs/relay.c:169:
+static int $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1123: FILE: fs/relayfs/relay.c:172:
+	if (rchan == NULL)
+	   return -EBADF;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1123: FILE: fs/relayfs/relay.c:172:
+	if (rchan == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#1124: FILE: fs/relayfs/relay.c:173:
+	   return -EBADF;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rchan->buf"
#1126: FILE: fs/relayfs/relay.c:175:
+	if (rchan->buf != NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: fs/relayfs/relay.c:191:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1159: FILE: fs/relayfs/relay.c:208:
+ *^IThe errcode value contains the result flags and is an ORed combination $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1179: FILE: fs/relayfs/relay.c:228:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1181: FILE: fs/relayfs/relay.c:230:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1187: FILE: fs/relayfs/relay.c:236:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1196: FILE: fs/relayfs/relay.c:245:
+static void $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1204: FILE: fs/relayfs/relay.c:253:
+
+

WARNING:TYPO_SPELLING: 'complted' may be misspelled - perhaps 'completed'?
#1212: FILE: fs/relayfs/relay.c:261:
+ *      After the write into the reserved buffer has been complted, this
                                                           ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: fs/relayfs/relay.c:262:
+ *      function must be called in order for the relay to determine whether $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1227: FILE: fs/relayfs/relay.c:276:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1229: FILE: fs/relayfs/relay.c:278:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: fs/relayfs/relay.c:279:
+^Ideliver = packet_delivery(rchan) || $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1236: FILE: fs/relayfs/relay.c:285:
+^Iif (deliver && ^Iwaitqueue_active(&rchan->read_wait)) {$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1275: FILE: fs/relayfs/relay.c:324:
+	struct file *filp = vma->vm_file;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1284: FILE: fs/relayfs/relay.c:333:
+	rchan->callbacks->fileop_notify(reader->rchan->id, filp,
 	                                                   ^^^^

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#1291: FILE: fs/relayfs/relay.c:340:
+static struct vm_operations_struct relay_file_mmap_ops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: fs/relayfs/relay.c:345:
+static inline unsigned long $

CHECK:SPACING: No space is necessary after a cast
#1301: FILE: fs/relayfs/relay.c:350:
+	kva = (unsigned long) page_address(vmalloc_to_page((void *) adr));

CHECK:SPACING: No space is necessary after a cast
#1313: FILE: fs/relayfs/relay.c:362:
+	unsigned long start = (unsigned long) adr;

CHECK:SPACING: No space is necessary after a cast
#1316: FILE: fs/relayfs/relay.c:365:
+	pos = (unsigned long) start_pos;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1329: FILE: fs/relayfs/relay.c:378:
+}
+/* \end{Code inspired from BTTV driver} */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1343: FILE: fs/relayfs/relay.c:392:
+int $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1349: FILE: fs/relayfs/relay.c:398:
+	struct file *filp = vma->vm_file;
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1351: FILE: fs/relayfs/relay.c:400:
+	if (rchan == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1368: FILE: fs/relayfs/relay.c:417:
+		err = rchan->callbacks->fileop_notify(rchan->id, filp,
 		                                                 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: fs/relayfs/relay.c:422:
+exit:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1389: FILE: fs/relayfs/relay.c:438:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: fs/relayfs/relay.c:444:
+^I^I^I    int using_tsc) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: fs/relayfs/relay.c:452:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: fs/relayfs/relay.c:466:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1425: FILE: fs/relayfs/relay.c:474:
+static void $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1446: FILE: fs/relayfs/relay.c:495:
+			       struct file *filp,
 			                    ^^^^

WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#1465: FILE: fs/relayfs/relay.c:514:
+ *	@resizeable: 1 if true
   	 ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#1470: FILE: fs/relayfs/relay.c:519:
+check_attribute_flags(u32 *attribute_flags, int resizeable)
                                                 ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1473: FILE: fs/relayfs/relay.c:522:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1476: FILE: fs/relayfs/relay.c:525:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1479: FILE: fs/relayfs/relay.c:528:
+^I$

WARNING:TYPO_SPELLING: 'resizeable' may be misspelled - perhaps 'resizable'?
#1480: FILE: fs/relayfs/relay.c:529:
+	if (resizeable) {  /* Resizeable can never be continuous */
 	    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Resizeable' may be misspelled - perhaps 'Resizable'?
#1480: FILE: fs/relayfs/relay.c:529:
+	if (resizeable) {  /* Resizeable can never be continuous */
 	                      ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: fs/relayfs/relay.c:533:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: fs/relayfs/relay.c:537:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: fs/relayfs/relay.c:541:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: fs/relayfs/relay.c:552:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: fs/relayfs/relay.c:582:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1543: FILE: fs/relayfs/relay.c:592:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1544: FILE: fs/relayfs/relay.c:593:
+	rchan->buf_id = rchan->buf_idx = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1553: FILE: fs/relayfs/relay.c:602:
+	rchan->resize_min = rchan->resize_max = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1577: FILE: fs/relayfs/relay.c:626:
+^I$

WARNING:TYPO_SPELLING: 'channnel' may be misspelled - perhaps 'channel'?
#1591: FILE: fs/relayfs/relay.c:640:
+ *	NOTE: Care should be taken that the channnel isn't actually
   	                                    ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1600: FILE: fs/relayfs/relay.c:649:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: fs/relayfs/relay.c:677:
+rchan_create(const char *chanpath, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: fs/relayfs/relay.c:678:
+^I     int bufsize, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: fs/relayfs/relay.c:679:
+^I     int nbufs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: fs/relayfs/relay.c:680:
+^I     u32 rchan_flags, $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1641: FILE: fs/relayfs/relay.c:690:
+	rchan = (struct rchan *)kmalloc(sizeof(struct rchan), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rchan)...) over kmalloc(sizeof(struct rchan)...)
#1641: FILE: fs/relayfs/relay.c:690:
+	rchan = (struct rchan *)kmalloc(sizeof(struct rchan), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1642: FILE: fs/relayfs/relay.c:691:
+	if (rchan == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1653: FILE: fs/relayfs/relay.c:702:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1677: FILE: fs/relayfs/relay.c:726:
+	if ((rchan->buf = (char *)alloc_rchan_buf(size_alloc, &page_array, &page_count)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1709: FILE: fs/relayfs/relay.c:758:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1721: FILE: fs/relayfs/relay.c:770:
+ *^Iincludes the filename, creates any and all directories necessary $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1724: FILE: fs/relayfs/relay.c:773:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1725: FILE: fs/relayfs/relay.c:774:
+rchan_create_dir(const char * chanpath, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1725: FILE: fs/relayfs/relay.c:774:
+rchan_create_dir(const char * chanpath, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1726: FILE: fs/relayfs/relay.c:775:
+^I^I const char **residual, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1732: FILE: fs/relayfs/relay.c:781:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: fs/relayfs/relay.c:811:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1763: FILE: fs/relayfs/relay.c:812:
+rchan_create_file(const char * chanpath, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1763: FILE: fs/relayfs/relay.c:812:
+rchan_create_file(const char * chanpath, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1764: FILE: fs/relayfs/relay.c:813:
+^I^I  struct dentry **dentry, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1765: FILE: fs/relayfs/relay.c:814:
+		  struct rchan * data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1769: FILE: fs/relayfs/relay.c:818:
+	const char * fname;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1801: FILE: fs/relayfs/relay.c:850:
+int $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chanpath"
#1819: FILE: fs/relayfs/relay.c:868:
+	if (chanpath == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1834: FILE: fs/relayfs/relay.c:883:
+	if ((err = rchan_create_file(chanpath, &dentry, rchan, mode)) < 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!channel_callbacks"
#1842: FILE: fs/relayfs/relay.c:891:
+	if (channel_callbacks == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->buffer_end"
#1847: FILE: fs/relayfs/relay.c:896:
+	if (callbacks->buffer_end == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->buffer_start"
#1849: FILE: fs/relayfs/relay.c:898:
+	if (callbacks->buffer_start == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->deliver"
#1851: FILE: fs/relayfs/relay.c:900:
+	if (callbacks->deliver == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->user_deliver"
#1853: FILE: fs/relayfs/relay.c:902:
+	if (callbacks->user_deliver == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->needs_resize"
#1855: FILE: fs/relayfs/relay.c:904:
+	if (callbacks->needs_resize == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!callbacks->fileop_notify"
#1857: FILE: fs/relayfs/relay.c:906:
+	if (callbacks->fileop_notify == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1874: FILE: fs/relayfs/relay.c:923:
+^Iif (resize_min > 0 && resize_max > 0 && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1875: FILE: fs/relayfs/relay.c:924:
+	if (resize_min > 0 && resize_max > 0 && 
+	   resize_max < RELAY_MAX_TOTAL_BUF_SIZE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1893: FILE: fs/relayfs/relay.c:942:
+static int $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1897: FILE: fs/relayfs/relay.c:946:
+	struct rchan *rchan = rchan_get(rchan_id);
+	if (rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1897: FILE: fs/relayfs/relay.c:946:
+	if (rchan == NULL)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1905: FILE: fs/relayfs/relay.c:954:
+	if (waitqueue_active(&rchan->read_wait)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1918: FILE: fs/relayfs/relay.c:967:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1923: FILE: fs/relayfs/relay.c:972:
+int $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id < 0'
#1929: FILE: fs/relayfs/relay.c:978:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rchan_id >= RELAY_MAX_CHANNELS'
#1929: FILE: fs/relayfs/relay.c:978:
+	if ((rchan_id < 0) || (rchan_id >= RELAY_MAX_CHANNELS))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1931: FILE: fs/relayfs/relay.c:980:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1947: FILE: fs/relayfs/relay.c:996:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1957: FILE: fs/relayfs/relay.c:1006:
+ *^I@wrote_pos: optional ptr returning buf pos written to, ignored if NULL $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1964: FILE: fs/relayfs/relay.c:1013:
+ *^Ilockless scheme regardless of usage). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1974: FILE: fs/relayfs/relay.c:1023:
+relay_write(int rchan_id, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1975: FILE: fs/relayfs/relay.c:1024:
+^I    const void *data_ptr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1987: FILE: fs/relayfs/relay.c:1036:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#1989: FILE: fs/relayfs/relay.c:1038:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1994: FILE: fs/relayfs/relay.c:1043:
+^Iwrite_pos = reserved = relay_reserve(rchan, count, &ts, &td, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1994: FILE: fs/relayfs/relay.c:1043:
+	write_pos = reserved = relay_reserve(rchan, count, &ts, &td, 

CHECK:BRACES: braces {} should be used on all arms of this statement
#1997: FILE: fs/relayfs/relay.c:1046:
+	if (reserved != NULL) {
[...]
+	} else if (reserve_code == RELAY_WRITE_TOO_LONG)
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "reserved"
#1997: FILE: fs/relayfs/relay.c:1046:
+	if (reserved != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'td_offset >= 0'
#1999: FILE: fs/relayfs/relay.c:1048:
+		if ((td_offset >= 0) && (td_offset < count - sizeof(td)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2014: FILE: fs/relayfs/relay.c:1063:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2023: FILE: fs/relayfs/relay.c:1072:
+ *^Ireason waking is deferred is that calling directly from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2024: FILE: fs/relayfs/relay.c:1073:
+ *^Ibuffers_consumed causes problems if you're writing from say $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2027: FILE: fs/relayfs/relay.c:1076:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2031: FILE: fs/relayfs/relay.c:1080:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2035: FILE: fs/relayfs/relay.c:1084:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2040: FILE: fs/relayfs/relay.c:1089:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2050: FILE: fs/relayfs/relay.c:1099:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2061: FILE: fs/relayfs/relay.c:1110:
+ *^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2064: FILE: fs/relayfs/relay.c:1113:
+ *	resulting total is greater than the channel's, update the channel's.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2069: FILE: fs/relayfs/relay.c:1118:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2078: FILE: fs/relayfs/relay.c:1127:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2085: FILE: fs/relayfs/relay.c:1134:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2093: FILE: fs/relayfs/relay.c:1142:
+ *^I__relay_bytes_consumed - internal version of relay_bytes_consumed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2097: FILE: fs/relayfs/relay.c:1146:
+ *^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2099: FILE: fs/relayfs/relay.c:1148:
+ *	Internal - updates the channel's consumed count.
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2111: FILE: fs/relayfs/relay.c:1160:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2113: FILE: fs/relayfs/relay.c:1162:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2125: FILE: fs/relayfs/relay.c:1174:
+ *^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2128: FILE: fs/relayfs/relay.c:1177:
+ *	resulting total is greater than the channel's, update the channel's.
+*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2141: FILE: fs/relayfs/relay.c:1190:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2143: FILE: fs/relayfs/relay.c:1192:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reader->bufs_consumed > reader->rchan->bufs_consumed'
#2149: FILE: fs/relayfs/relay.c:1198:
+	if ((reader->bufs_consumed > reader->rchan->bufs_consumed) ||
+	    ((reader->bufs_consumed == reader->rchan->bufs_consumed) &&
+	     (reader->bytes_consumed > reader->rchan->bytes_consumed)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reader->bufs_consumed == reader->rchan->bufs_consumed'
#2149: FILE: fs/relayfs/relay.c:1198:
+	if ((reader->bufs_consumed > reader->rchan->bufs_consumed) ||
+	    ((reader->bufs_consumed == reader->rchan->bufs_consumed) &&
+	     (reader->bytes_consumed > reader->rchan->bytes_consumed)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reader->bytes_consumed > reader->rchan->bytes_consumed'
#2149: FILE: fs/relayfs/relay.c:1198:
+	if ((reader->bufs_consumed > reader->rchan->bufs_consumed) ||
+	    ((reader->bufs_consumed == reader->rchan->bufs_consumed) &&
+	     (reader->bytes_consumed > reader->rchan->bytes_consumed)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2160: FILE: fs/relayfs/relay.c:1209:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2188: FILE: fs/relayfs/relay.c:1237:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2194: FILE: fs/relayfs/relay.c:1243:
+^I^Iif (reader->vfs_reader) $

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2215: FILE: fs/relayfs/relay.c:1264:
+do_read(struct rchan *rchan, char *buf, size_t count, u32 read_offset, u32 *new_offset, u32 *actual_read_offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2225: FILE: fs/relayfs/relay.c:1274:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2227: FILE: fs/relayfs/relay.c:1276:
+	if (unlikely(!buf_size)) BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2227: FILE: fs/relayfs/relay.c:1276:
+	if (unlikely(!buf_size)) BUG();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2230: FILE: fs/relayfs/relay.c:1279:
+	if (unlikely(read_bufno >= RELAY_MAX_BUFS)) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2230: FILE: fs/relayfs/relay.c:1279:
+	if (unlikely(read_bufno >= RELAY_MAX_BUFS)) BUG();

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2233: FILE: fs/relayfs/relay.c:1282:
+	avail_offset = cur_idx = relay_get_offset(rchan, &max_offset);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2258: FILE: fs/relayfs/relay.c:1307:
+	if (unlikely(read_bufno >= RELAY_MAX_BUFS)) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2258: FILE: fs/relayfs/relay.c:1307:
+	if (unlikely(read_bufno >= RELAY_MAX_BUFS)) BUG();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#2271: FILE: fs/relayfs/relay.c:1320:
+	if (read_count && buf != NULL)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#2276: FILE: fs/relayfs/relay.c:1325:
+		if (read_count && (read_offset + read_count >= buf_end_offset) && (read_offset + read_count <= cur_idx)) {

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2306: FILE: fs/relayfs/relay.c:1355:
+__relay_read(struct rchan_reader *reader, char *buf, size_t count, u32 read_offset, u32 *new_offset, u32 *actual_read_offset, int wait)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2322: FILE: fs/relayfs/relay.c:1371:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#2323: FILE: fs/relayfs/relay.c:1372:
+	if (buf != NULL && wait) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2325: FILE: fs/relayfs/relay.c:1374:
+		err = wait_event_interruptible(rchan->read_wait,
+		       ((rchan->finalized == 1) ||

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2336: FILE: fs/relayfs/relay.c:1385:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2345: FILE: fs/relayfs/relay.c:1394:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2379: FILE: fs/relayfs/relay.c:1428:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#2380: FILE: fs/relayfs/relay.c:1429:
+	if (reader == NULL || reader->rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader->rchan"
#2380: FILE: fs/relayfs/relay.c:1429:
+	if (reader == NULL || reader->rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!actual_read_offset"
#2383: FILE: fs/relayfs/relay.c:1432:
+	if (actual_read_offset == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2391: FILE: fs/relayfs/relay.c:1440:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_offset != read_offset'
#2403: FILE: fs/relayfs/relay.c:1452:
+	if (reader->auto_consume && ((read_count) || (new_offset != read_offset)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2408: FILE: fs/relayfs/relay.c:1457:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2415: FILE: fs/relayfs/relay.c:1464:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2428: FILE: fs/relayfs/relay.c:1477:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#2429: FILE: fs/relayfs/relay.c:1478:
+	if (reader == NULL || reader->rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader->rchan"
#2429: FILE: fs/relayfs/relay.c:1478:
+	if (reader == NULL || reader->rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2431: FILE: fs/relayfs/relay.c:1480:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_offset != f_pos'
#2441: FILE: fs/relayfs/relay.c:1490:
+	if ((new_offset != f_pos) &&
+	    ((bytes_read == -EINTR) || (bytes_read == 0)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bytes_read == 0'
#2441: FILE: fs/relayfs/relay.c:1490:
+	if ((new_offset != f_pos) &&
+	    ((bytes_read == -EINTR) || (bytes_read == 0)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2453: FILE: fs/relayfs/relay.c:1502:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2469: FILE: fs/relayfs/relay.c:1518:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2477: FILE: fs/relayfs/relay.c:1526:
+		if (buffers_ready)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2479: FILE: fs/relayfs/relay.c:1528:
+			return 0;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#2479: FILE: fs/relayfs/relay.c:1528:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2494: FILE: fs/relayfs/relay.c:1543:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2515: FILE: fs/relayfs/relay.c:1564:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2516: FILE: fs/relayfs/relay.c:1565:
+ *^IFills in an rchan_info struct with channel status and attribute $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2521: FILE: fs/relayfs/relay.c:1570:
+int $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#2528: FILE: fs/relayfs/relay.c:1577:
+	if (rchan == NULL)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2543: FILE: fs/relayfs/relay.c:1592:
+			rchan_info->buffer_complete[i] = (atomic_read(&fill_count(rchan, i)) == rchan->buf_size);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2556: FILE: fs/relayfs/relay.c:1605:
+ *	@filp: the file associated with rchan, if applicable
   	 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2563: FILE: fs/relayfs/relay.c:1612:
+ *	If filp is non-NULL, the reader is a VFS reader, otherwise not.
   	   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2569: FILE: fs/relayfs/relay.c:1618:
+__add_rchan_reader(struct rchan *rchan, struct file *filp, int auto_consume, int map_reader)
                                                      ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2573: FILE: fs/relayfs/relay.c:1622:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*reader)...) over kmalloc(sizeof(struct rchan_reader)...)
#2574: FILE: fs/relayfs/relay.c:1623:
+	reader = kmalloc(sizeof(struct rchan_reader), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2579: FILE: fs/relayfs/relay.c:1628:
+		if (filp) {
 		    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2581: FILE: fs/relayfs/relay.c:1630:
+			reader->pos.file = filp;
 			                   ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2595: FILE: fs/relayfs/relay.c:1644:
+			rchan->bytes_consumed = reader->bytes_consumed = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2598: FILE: fs/relayfs/relay.c:1647:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2620: FILE: fs/relayfs/relay.c:1669:
+	struct rchan *rchan = rchan_get(rchan_id);
+	if (rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#2620: FILE: fs/relayfs/relay.c:1669:
+	if (rchan == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2639: FILE: fs/relayfs/relay.c:1688:
+	struct rchan *rchan = rchan_get(rchan_id);
+	if (rchan == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rchan"
#2639: FILE: fs/relayfs/relay.c:1688:
+	if (rchan == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2656: FILE: fs/relayfs/relay.c:1705:
+^I$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#2668: FILE: fs/relayfs/relay.c:1717:
+	if (found_reader)
+		kfree(found_reader);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2680: FILE: fs/relayfs/relay.c:1729:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2684: FILE: fs/relayfs/relay.c:1733:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#2685: FILE: fs/relayfs/relay.c:1734:
+	if (reader) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2688: FILE: fs/relayfs/relay.c:1737:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2703: FILE: fs/relayfs/relay.c:1752:
+int $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2709: FILE: fs/relayfs/relay.c:1758:
+EXPORT_SYMBOL(relay_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2710: FILE: fs/relayfs/relay.c:1759:
+EXPORT_SYMBOL(relay_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2711: FILE: fs/relayfs/relay.c:1760:
+EXPORT_SYMBOL(relay_reset);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2712: FILE: fs/relayfs/relay.c:1761:
+EXPORT_SYMBOL(relay_reserve);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2713: FILE: fs/relayfs/relay.c:1762:
+EXPORT_SYMBOL(relay_commit);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2714: FILE: fs/relayfs/relay.c:1763:
+EXPORT_SYMBOL(relay_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2715: FILE: fs/relayfs/relay.c:1764:
+EXPORT_SYMBOL(relay_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2716: FILE: fs/relayfs/relay.c:1765:
+EXPORT_SYMBOL(relay_bytes_avail);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2717: FILE: fs/relayfs/relay.c:1766:
+EXPORT_SYMBOL(relay_buffers_consumed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2718: FILE: fs/relayfs/relay.c:1767:
+EXPORT_SYMBOL(relay_bytes_consumed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2719: FILE: fs/relayfs/relay.c:1768:
+EXPORT_SYMBOL(relay_info);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2721: FILE: fs/relayfs/relay.c:1770:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000321767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 181 errors, 104 warnings, 89 checks, 2671 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000321767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
