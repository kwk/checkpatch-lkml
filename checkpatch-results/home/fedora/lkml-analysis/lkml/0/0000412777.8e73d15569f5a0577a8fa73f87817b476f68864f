WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urN linux-2.5.48/arch/s390x/kernel/ioctl32.c linux-2.5.48-s390/arch/s390x/kernel/ioctl32.c

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l"
#54: FILE: arch/s390x/kernel/ioctl32.c:1048:
+	for (l = ioctl32_hash_table[hash]; l != NULL; l = l->next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct ioctl32_list)...)
#57: FILE: arch/s390x/kernel/ioctl32.c:1051:
+	new = kmalloc(sizeof(struct ioctl32_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#58: FILE: arch/s390x/kernel/ioctl32.c:1052:
+	if (new == NULL)

CHECK:SPACING: No space is necessary after a cast
#61: FILE: arch/s390x/kernel/ioctl32.c:1055:
+	new->handler.function = (void *) handler;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l"
#73: FILE: arch/s390x/kernel/ioctl32.c:1067:
+	for (l = ioctl32_hash_table[hash]; l != NULL; l = l->next) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!l"
#78: FILE: arch/s390x/kernel/ioctl32.c:1072:
+	if (l == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#80: FILE: arch/s390x/kernel/ioctl32.c:1074:
+	if (p == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#102: FILE: arch/s390x/kernel/linux32.c:2499:
+			 * from 64-bit time values to 32-bit time values
+			*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo*   bar" should be "foo *bar"
#105: FILE: arch/s390x/kernel/linux32.c:2502:
+			__kernel_time_t*   ptr_time   = CMSG_DATA(ucmsg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: arch/s390x/kernel/linux32.c:2503:
+			__kernel_time_t*   ptr_time   = CMSG_DATA(ucmsg);
+			get_user(*ptr_time32, ptr_time);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: arch/s390x/kernel/linux32.c:2504:
+			get_user(*(ptr_time32+1), ptr_time+1);
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: arch/s390x/kernel/linux32.c:2504:
+			get_user(*(ptr_time32+1), ptr_time+1);
 			                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#108: FILE: arch/s390x/kernel/linux32.c:2505:
+			kcmsg32->cmsg_len -= 2*(sizeof(__kernel_time_t) -
 			                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#111: FILE: arch/s390x/kernel/linux32.c:2508:
+		default:;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:INLINE: plain inline is preferred over __inline__
#272: FILE: arch/s390x/kernel/linux32.c:2618:
+static __inline__ void

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/s390x/kernel/linux32.c:2620:
+scm_recv32(struct socket *sock, struct msghdr *msg,
+		struct scm_cookie *scm, int flags, unsigned long cmsg_ptr)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#276: FILE: arch/s390x/kernel/linux32.c:2622:
+	if(!msg->msg_control)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#276: FILE: arch/s390x/kernel/linux32.c:2622:
+	if(!msg->msg_control)

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: arch/s390x/kernel/linux32.c:2624:
+		if(sock->passcred || scm->fp)

CHECK:SPACING: No space is necessary after a cast
#288: FILE: arch/s390x/kernel/linux32.c:2634:
+	if((unsigned long) msg->msg_control != cmsg_ptr)

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: arch/s390x/kernel/linux32.c:2634:
+	if((unsigned long) msg->msg_control != cmsg_ptr)

ERROR:SPACING: space required before the open parenthesis '('
#291: FILE: arch/s390x/kernel/linux32.c:2637:
+	if(sock->passcred)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: arch/s390x/kernel/linux32.c:2639:
+		put_cmsg32(msg,
+			SOL_SOCKET, SCM_CREDENTIALS,

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: arch/s390x/kernel/linux32.c:2641:
+	if(!scm->fp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: arch/s390x/kernel/linux32.c:2647:
+static int  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/s390x/kernel/linux32.c:2649:
+               unsigned long cmsg_ptr)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/s390x/kernel/linux32.c:2649:
+               unsigned long cmsg_ptr)$

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#391: FILE: arch/s390x/kernel/linux32.c:2749:
+	err = __put_user((__kernel_size_t32) ((unsigned long)msg_sys.msg_control - cmsg_ptr), &msg->msg_controllen);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: arch/s390x/kernel/linux32.c:2845:
+^Iif (level == SOL_SOCKET && $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#408: FILE: arch/s390x/kernel/linux32.c:2851:
+		if (get_tv32(&tmp, (struct timeval32 *)optval ))

CHECK:SPACING: No space is necessary after a cast
#412: FILE: arch/s390x/kernel/linux32.c:2855:
+		ret = sys_setsockopt(fd, level, optname, (char *) &tmp, sizeof(struct timeval));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: arch/s390x/kernel/linux32.c:2857:
+^I^Ireturn ret; $

CHECK:SPACING: No space is necessary after a cast
#423: FILE: arch/s390x/kernel/linux32.c:3815:
+	if ((ssize_t32) count < 0)

CHECK:SPACING: No space is necessary after a cast
#431: FILE: arch/s390x/kernel/linux32.c:3823:
+	if ((ssize_t32) count < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: arch/s390x/kernel/linux32.c:4363:
+	    get_user (tmp.tv_nsec, &timeout32->tv_nsec))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#472: FILE: arch/s390x/kernel/linux32.c:4374:
+asmlinkage ssize_t sys_read(unsigned int fd, char * buf, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: arch/s390x/kernel/linux32.c:4376:
+asmlinkage ssize_t32 sys32_read(unsigned int fd, char * buf, size_t count)

CHECK:SPACING: No space is necessary after a cast
#476: FILE: arch/s390x/kernel/linux32.c:4378:
+	if ((ssize_t32) count < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: arch/s390x/kernel/linux32.c:4379:
+^I^Ireturn -EINVAL; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: arch/s390x/kernel/linux32.c:4384:
+asmlinkage ssize_t sys_write(unsigned int fd, const char * buf, size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#484: FILE: arch/s390x/kernel/linux32.c:4386:
+asmlinkage ssize_t32 sys32_write(unsigned int fd, char * buf, size_t count)

CHECK:SPACING: No space is necessary after a cast
#486: FILE: arch/s390x/kernel/linux32.c:4388:
+	if ((ssize_t32) count < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: arch/s390x/kernel/linux32.c:4389:
+^I^Ireturn -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: arch/s390x/kernel/s390_ksyms.c:68:
+^I^I^I^I       int (*handler)(unsigned int, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#507: FILE: arch/s390x/kernel/s390_ksyms.c:72:
+int unregister_ioctl32_conversion(unsigned int cmd);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#508: FILE: arch/s390x/kernel/s390_ksyms.c:73:
+EXPORT_SYMBOL(register_ioctl32_conversion);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#509: FILE: arch/s390x/kernel/s390_ksyms.c:74:
+EXPORT_SYMBOL(unregister_ioctl32_conversion);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 10 warnings, 18 checks, 484 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
