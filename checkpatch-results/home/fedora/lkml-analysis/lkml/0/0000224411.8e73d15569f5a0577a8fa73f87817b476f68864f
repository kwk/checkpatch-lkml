WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#40: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#40: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#40: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#40: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#40: FILE: include/linux/device.h:385:
+extern struct resource *platform_get_resource_byname(struct platform_device *, unsigned int, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#41: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#41: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#41: FILE: include/linux/device.h:386:
+extern int platform_get_irq_byname(struct platform_device *, char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 2 checks, 8 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224411.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
