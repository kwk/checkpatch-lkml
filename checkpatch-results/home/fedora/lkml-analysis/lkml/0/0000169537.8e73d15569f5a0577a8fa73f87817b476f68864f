WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#38: 
Optimizes lots of redundant pnode propogation code.
                                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#47: 
Optimizes lots of redundant pnode propogation code.
                                  ^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: fs/pnode.c:215:
+ * ^I^Ithe first time. (PNODE_DOWN)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: fs/pnode.c:217:
+ * ^I^Ieach time a child pnode is done processing with.(PNODE_MID)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: fs/pnode.c:219:
+ * ^I^Ito the pnode. Called when the pnode is done processing with.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: fs/pnode.c:223:
+pnode_traverse(struct vfspnode *pnode,
+		void *in_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: fs/pnode.c:226:
+		int (*pnode_pre_func)(struct vfspnode *, void *, void **,
+			void **, va_list ),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#80: FILE: fs/pnode.c:226:
+			void **, va_list ),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#96: FILE: fs/pnode.c:232:
+	int ret=0,traversal,level;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: fs/pnode.c:232:
+	int ret=0,traversal,level;
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: fs/pnode.c:232:
+	int ret=0,traversal,level;
 	                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: fs/pnode.c:234:
+     ^Istruct vfspnode *slave_pnode, *master_pnode;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: fs/pnode.c:234:
+     ^Istruct vfspnode *slave_pnode, *master_pnode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/pnode.c:234:
+     ^Istruct vfspnode *slave_pnode, *master_pnode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/pnode.c:235:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/pnode.c:235:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/pnode.c:235:
+     ^Istruct vfsmount *slave_mnt, *member_mnt, *t_m;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: fs/pnode.c:239:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: fs/pnode.c:247:
+	while(pnode_next(&context)) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: fs/pnode.c:254:
+		if (traversal == PNODE_DOWN ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#119: FILE: fs/pnode.c:255:
+			if (master_pnode) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#120: FILE: fs/pnode.c:256:
+				data_from_master = p_array[level-1].in_data;
 				                                ^

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: fs/pnode.c:263:
+				if((ret = pnode_pre_func(pnode, data_from_master,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: fs/pnode.c:263:
+				if((ret = pnode_pre_func(pnode, data_from_master,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: fs/pnode.c:264:
+				if((ret = pnode_pre_func(pnode, data_from_master,
+						&my_data, &data_for_slave, args))) {

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: fs/pnode.c:275:
+		} else if(traversal == PNODE_MID) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#140: FILE: fs/pnode.c:276:
+		} else if(traversal == PNODE_MID) {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#142: FILE: fs/pnode.c:278:
+			if (slave_pnode) {
[...]
+			} else {
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#143: FILE: fs/pnode.c:279:
+				data_from_slave = p_array[level+1].out_data;
 				                               ^

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: fs/pnode.c:285:
+				if((ret = pnode_post_func(pnode, my_data,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#149: FILE: fs/pnode.c:285:
+				if((ret = pnode_post_func(pnode, my_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: fs/pnode.c:286:
+				if((ret = pnode_post_func(pnode, my_data,
+						data_from_slave, args))) {

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: fs/pnode.c:292:
+		} else if(traversal == PNODE_UP) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#157: FILE: fs/pnode.c:293:
+		} else if(traversal == PNODE_UP) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: fs/pnode.c:300:
+			list_for_each_entry_safe(member_mnt,
+				t_m, &pnode->pnode_vfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#167: FILE: fs/pnode.c:303:
+				if ((ret = vfs_func(member_mnt, PNODE_MEMBER_VFS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: fs/pnode.c:304:
+				if ((ret = vfs_func(member_mnt, PNODE_MEMBER_VFS,
+					my_data, args))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: fs/pnode.c:311:
+			list_for_each_entry_safe(slave_mnt,
+				t_m, &pnode->pnode_slavevfs, mnt_pnode_mntlist) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: fs/pnode.c:314:
+				if ((ret = vfs_func(slave_mnt, PNODE_SLAVE_VFS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: fs/pnode.c:315:
+				if ((ret = vfs_func(slave_mnt, PNODE_SLAVE_VFS,
+					my_data, args))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: fs/pnode.c:337:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: fs/pnode.c:373:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: fs/pnode.c:380:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: fs/pnode.c:390:
+		if (IS_MNT_SHARED(child_mnt) ||
+				IS_MNT_SLAVE(child_mnt)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#281: FILE: fs/pnode.c:391:
+			BUG_ON(!child_mnt->mnt_pnode);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#325: FILE: fs/pnode.c:407:
+static void inline

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#357: FILE: fs/pnode.c:490:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: fs/pnode.c:539:
+pnode_mount_pre_func(struct vfspnode *pnode, void *indata,
+		void **outdata, void **out_slavedata, va_list args)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#377: FILE: fs/pnode.c:541:
+	struct vfspnode *pnode_child=NULL;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#378: FILE: fs/pnode.c:542:
+	int ret=0;
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: fs/pnode.c:546:
+	if(indata) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#461: FILE: fs/pnode.c:577:
+	int ret=0;
 	       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#466: FILE: fs/pnode.c:582:
+	if (!(child_mount = do_make_mounted(mnt, target_dentry))) {

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#472: FILE: fs/pnode.c:588:
+	case PNODE_SLAVE_VFS :
 	                     ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#475: FILE: fs/pnode.c:591:
+	case PNODE_MEMBER_VFS :
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: fs/pnode.c:604:
+	struct vfsmount *child_mnt;
+	if(pnode_traverse(pnode, NULL, (void *)NULL,

ERROR:SPACING: space required before the open parenthesis '('
#490: FILE: fs/pnode.c:604:
+	if(pnode_traverse(pnode, NULL, (void *)NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: fs/pnode.c:605:
+	if(pnode_traverse(pnode, NULL, (void *)NULL,
+			pnode_mount_pre_func, pnode_mount_post_func,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#571: FILE: fs/pnode.c:647:
+	source_mnt = va_arg(args, struct vfsmount * );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#581: FILE: fs/pnode.c:672:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: fs/pnode.c:693:
+pnode_real_mount_post_func(struct vfspnode *pnode, void *indata,
+		void *outdata, va_list args)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#663: FILE: fs/pnode.c:697:
+		BUG_ON(!list_empty(&pnode->pnode_vfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#664: FILE: fs/pnode.c:698:
+		BUG_ON(!list_empty(&pnode->pnode_slavevfs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#665: FILE: fs/pnode.c:699:
+		BUG_ON(!list_empty(&pnode->pnode_slavepnode));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 16 warnings, 22 checks, 673 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169537.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
