WARNING:TYPO_SPELLING: 'implentation' may be misspelled - perhaps 'implementation'?
#40: 
alternative counter-based RCU implentation improves to the point that
                              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#80: FILE: include/linux/rcupdate.h:201:
+#define call_rcu_bh(head, rcu) call_rcu(head, rcu)

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: include/linux/rcupdate.h:203:
+extern void rcu_read_lock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/rcupdate.h:204:
+extern void rcu_read_unlock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/rcupdate.h:205:
+extern int rcu_pending(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/rcupdate.h:297:
+extern void synchronize_sched(void);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#121: FILE: include/linux/rcupdate.h:297:
+extern void synchronize_sched(void);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#148: FILE: kernel/Kconfig.preempt:66:
+choice
+	prompt "RCU infrastructure implementation"
+	default RCU_CLASSIC
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: kernel/Makefile:35:
+obj-$(CONFIG_RCU_CLASSIC) += rcupdate.o $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: kernel/Makefile:36:
+obj-$(CONFIG_RCU_COUNTER) += rcucounter.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#206: FILE: kernel/rcucommon.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#221: FILE: kernel/rcucommon.h:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#222: FILE: kernel/rcucommon.h:17:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: kernel/rcucommon.h:71:
+	[0 ... (RCUREF_HASH_SIZE-1)] = SPIN_LOCK_UNLOCKED
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#283: FILE: kernel/rcucounter.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#300: FILE: kernel/rcucounter.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#301: FILE: kernel/rcucounter.c:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: kernel/rcucounter.c:28:
+ * ^I^IDocumentation/RCU/ *.txt$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#320: FILE: kernel/rcucounter.c:38:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: kernel/rcucounter.c:88:
+};
+struct rcu_ctrlblk {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#374: FILE: kernel/rcucounter.c:92:
+};
+static struct rcu_data rcu_data;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#379: FILE: kernel/rcucounter.c:97:
+};
+static DEFINE_PER_CPU(atomic_t [2], rcu_flipctr) =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#380: FILE: kernel/rcucounter.c:98:
+static DEFINE_PER_CPU(atomic_t [2], rcu_flipctr) =
+	{ ATOMIC_INIT(0), ATOMIC_INIT(0) };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#390: FILE: kernel/rcucounter.c:108:
+	if (current->rcu_read_lock_nesting++ == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#403: FILE: kernel/rcucounter.c:121:
+		if (unlikely(flipctr != (rcu_ctrlblk.completed & 0x1))) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#434: FILE: kernel/rcucounter.c:152:
+	if (--current->rcu_read_lock_nesting == 0) {
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "current->rcu_flipctr2"
#445: FILE: kernel/rcucounter.c:163:
+		if (unlikely(current->rcu_flipctr2 != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#456: FILE: kernel/rcucounter.c:174:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcu_data.waitlist"
#458: FILE: kernel/rcucounter.c:176:
+		if (rcu_data.waitlist != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcu_data.nextlist"
#467: FILE: kernel/rcucounter.c:185:
+		if (rcu_data.nextlist != NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#512: FILE: kernel/rcucounter.c:230:
+	if (unlikely(flipctr != rcu_ctrlblk.completed)) {
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#543: FILE: kernel/rcucounter.c:261:
+	smp_mb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#559: FILE: kernel/rcucounter.c:277:
+		if (rcu_ctrlblk.completed == rcu_data.completed) {
+			return;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rcu_data.donelist"
#568: FILE: kernel/rcucounter.c:286:
+	if (rcu_data.donelist == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!list"
#584: FILE: kernel/rcucounter.c:302:
+	if (list == NULL) {

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#631: FILE: kernel/rcucounter.c:349:
+synchronize_sched(void)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: kernel/rcucounter.c:354:
+	if (sched_getaffinity(0, &oldmask) < 0) {
+		oldmask = cpu_possible_map;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcu_data.donelist"
#649: FILE: kernel/rcucounter.c:367:
+	return (rcu_data.donelist != NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcu_data.waitlist"
#650: FILE: kernel/rcucounter.c:368:
+		rcu_data.waitlist != NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcu_data.nextlist"
#651: FILE: kernel/rcucounter.c:369:
+		rcu_data.nextlist != NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#656: FILE: kernel/rcucounter.c:374:
+/*&&&&*/printk("WARNING: experimental RCU implementation.\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#747: FILE: kernel/rcucounter.c:465:
+	return (cnt);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#750: FILE: kernel/rcucounter.c:468:
+EXPORT_SYMBOL_GPL(rcu_read_proc_data);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#751: FILE: kernel/rcucounter.c:469:
+EXPORT_SYMBOL_GPL(rcu_read_proc_gp_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#752: FILE: kernel/rcucounter.c:470:
+EXPORT_SYMBOL_GPL(rcu_read_proc_ptrs_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#753: FILE: kernel/rcucounter.c:471:
+EXPORT_SYMBOL_GPL(rcu_read_proc_ctrs_data);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#757: FILE: kernel/rcucounter.c:475:
+EXPORT_SYMBOL_GPL(rcu_batches_completed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#758: FILE: kernel/rcucounter.c:476:
+EXPORT_SYMBOL(call_rcu); /* WARNING: GPL-only in April 2006. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#760: FILE: kernel/rcucounter.c:478:
+EXPORT_SYMBOL_GPL(synchronize_sched);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#761: FILE: kernel/rcucounter.c:479:
+EXPORT_SYMBOL(rcu_read_lock);  /* WARNING: GPL-only in April 2006. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#762: FILE: kernel/rcucounter.c:480:
+EXPORT_SYMBOL(rcu_read_unlock);  /* WARNING: GPL-only in April 2006. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#763: FILE: kernel/rcucounter.c:481:
+EXPORT_SYMBOL(synchronize_kernel);  /* WARNING: Removal in April 2006. */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#790: FILE: kernel/rcupdate.c:30:
+ * ^I^IDocumentation/RCU/ *.txt$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 24 warnings, 21 checks, 771 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000139674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
