CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: include/linux/fs.h:355:
+	int  (*get_block)(struct inode *inode, sector_t iblock,
+			struct buffer_head *bh_result, int create);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#233: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#238: FILE: kernel/kevent/kevent_inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: kernel/kevent/kevent_inode.c:2:
+ * ^Ikevent_inode.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: kernel/kevent/kevent_inode.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: kernel/kevent/kevent_inode.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#255: FILE: kernel/kevent/kevent_inode.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#256: FILE: kernel/kevent/kevent_inode.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: kernel/kevent/kevent_inode.c:45:
+^I$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#295: FILE: kernel/kevent/kevent_inode.c:58:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#306: FILE: kernel/kevent/kevent_inode.c:69:
+	iput(inode);
 	^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: kernel/kevent/kevent_inode.c:91:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: kernel/kevent/kevent_inode.c:101:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: kernel/kevent/kevent_inode.c:106:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: kernel/kevent/kevent_aio.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: kernel/kevent/kevent_aio.c:2:
+ * ^Ikevent_aio.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: kernel/kevent/kevent_aio.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: kernel/kevent/kevent_aio.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#371: FILE: kernel/kevent/kevent_aio.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#372: FILE: kernel/kevent/kevent_aio.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: kernel/kevent/kevent_aio.c:39:
+#define dprintk(f, a...) printk(f, ##a)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#398: FILE: kernel/kevent/kevent_aio.c:45:
+struct kevent_aio_private
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#413: FILE: kernel/kevent/kevent_aio.c:60:
+extern void bio_fs_destructor(struct bio *bio);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#420: FILE: kernel/kevent/kevent_aio.c:67:
+	dprintk("%s: bio=%p, num=%u, k=%p, inode=%p.\n", __func__, bio, bio->bi_vcnt, k, k->st->origin);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: kernel/kevent/kevent_aio.c:75:
+^I$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#435: FILE: kernel/kevent/kevent_aio.c:82:
+	const int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#448: FILE: kernel/kevent/kevent_aio.c:95:
+		if (uptodate) {
 		    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: kernel/kevent/kevent_aio.c:121:
+^I^Istruct page *page, unsigned nr_pages, get_block_t get_block, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: kernel/kevent/kevent_aio.c:121:
+static struct bio *kevent_mpage_readpage(struct kevent *k, struct bio *bio,
+		struct page *page, unsigned nr_pages, get_block_t get_block, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#474: FILE: kernel/kevent/kevent_aio.c:121:
+		struct page *page, unsigned nr_pages, get_block_t get_block, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#478: FILE: kernel/kevent/kevent_aio.c:125:
+	const unsigned blkbits = inode->i_blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#479: FILE: kernel/kevent/kevent_aio.c:126:
+	const unsigned blocks_per_page = PAGE_CACHE_SIZE >> blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#480: FILE: kernel/kevent/kevent_aio.c:127:
+	const unsigned blocksize = 1 << blkbits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#484: FILE: kernel/kevent/kevent_aio.c:131:
+	unsigned first_hole = blocks_per_page;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#485: FILE: kernel/kevent/kevent_aio.c:132:
+	unsigned page_block;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#515: FILE: kernel/kevent/kevent_aio.c:162:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: kernel/kevent/kevent_aio.c:166:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#524: FILE: kernel/kevent/kevent_aio.c:171:
+		if (page_block && blocks[page_block-1] != bh.b_blocknr-1)
 		                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#524: FILE: kernel/kevent/kevent_aio.c:171:
+		if (page_block && blocks[page_block-1] != bh.b_blocknr-1)
 		                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: kernel/kevent/kevent_aio.c:182:
+		char *kaddr = kmap_atomic(page, KM_USER0);
+		memset(kaddr + (first_hole << blkbits), 0,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: kernel/kevent/kevent_aio.c:183:
+		memset(kaddr + (first_hole << blkbits), 0,
+				PAGE_CACHE_SIZE - (first_hole << blkbits));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: kernel/kevent/kevent_aio.c:193:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#554: FILE: kernel/kevent/kevent_aio.c:201:
+	if (bio == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#555: FILE: kernel/kevent/kevent_aio.c:202:
+		nr_pages = min_t(unsigned, nr_pages, bio_get_nr_vecs(bdev));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#557: FILE: kernel/kevent/kevent_aio.c:204:
+		if (bio == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: kernel/kevent/kevent_aio.c:216:
+^I^Idprintk("%s: Failed to add a page: nr_pages=%d, length=%d, page=%p.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: kernel/kevent/kevent_aio.c:217:
+		dprintk("%s: Failed to add a page: nr_pages=%d, length=%d, page=%p.\n", 
+				__func__, nr_pages, length, page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: kernel/kevent/kevent_aio.c:220:
+^I$

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#574: FILE: kernel/kevent/kevent_aio.c:221:
+	dprintk("%s: bio=%p, b=%d, m=%d, u=%d, nr_pages=%d, offset=%Lu, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: kernel/kevent/kevent_aio.c:222:
+^I^I^I"size=%Lu. page_block=%u, page=%p.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#575: FILE: kernel/kevent/kevent_aio.c:222:
+	dprintk("%s: bio=%p, b=%d, m=%d, u=%d, nr_pages=%d, offset=%Lu, "
+			"size=%Lu. page_block=%u, page=%p.\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#575: FILE: kernel/kevent/kevent_aio.c:222:
+			"size=%Lu. page_block=%u, page=%p.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: kernel/kevent/kevent_aio.c:223:
+^I^I^I__func__, bio, buffer_boundary(&bh), buffer_mapped(&bh), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: kernel/kevent/kevent_aio.c:224:
+^I^I^Ibuffer_uptodate(&bh), nr_pages, *offset, i_size_read(inode), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: kernel/kevent/kevent_aio.c:226:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'first_hole != blocks_per_page'
#582: FILE: kernel/kevent/kevent_aio.c:229:
+	if (buffer_boundary(&bh) || (first_hole != blocks_per_page))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#630: FILE: kernel/kevent/kevent_aio.c:277:
+	dprintk("%s: page=%p, offset=%Lu, processed=%Lu, index=%lu, size=%zu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: kernel/kevent/kevent_aio.c:278:
+	dprintk("%s: page=%p, offset=%Lu, processed=%Lu, index=%lu, size=%zu.\n",
+			__func__, page, priv->offset, priv->processed, index, priv->size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: kernel/kevent/kevent_aio.c:287:
+^I^Iint (* get_block)(struct inode *inode, sector_t iblock,^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: kernel/kevent/kevent_aio.c:287:
+static int kevent_mpage_readpages(struct kevent *k, int first,
+		int (* get_block)(struct inode *inode, sector_t iblock,	

WARNING:SPACING: Unnecessary space before function pointer name
#640: FILE: kernel/kevent/kevent_aio.c:287:
+		int (* get_block)(struct inode *inode, sector_t iblock,	

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#640: FILE: kernel/kevent/kevent_aio.c:287:
+		int (* get_block)(struct inode *inode, sector_t iblock,	
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: kernel/kevent/kevent_aio.c:288:
+		int (* get_block)(struct inode *inode, sector_t iblock,	
+			struct buffer_head *bh_result, int create))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#650: FILE: kernel/kevent/kevent_aio.c:297:
+	for (i=first; i<priv->pg_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#650: FILE: kernel/kevent/kevent_aio.c:297:
+	for (i=first; i<priv->pg_num; ++i) {
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: kernel/kevent/kevent_aio.c:299:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: kernel/kevent/kevent_aio.c:313:
+^I^Ibio = kevent_mpage_readpage(k, bio, page, priv->pg_num - i, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: kernel/kevent/kevent_aio.c:314:
+		bio = kevent_mpage_readpage(k, bio, page, priv->pg_num - i, 
+				get_block, &priv->offset, &last_block_in_bio);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: kernel/kevent/kevent_aio.c:327:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: kernel/kevent/kevent_aio.c:330:
+^Idprintk("%s: k=%p, page=%p, len=%zu, ret=%zd.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: kernel/kevent/kevent_aio.c:331:
+	dprintk("%s: k=%p, page=%p, len=%zu, ret=%zd.\n", 
+			__func__, k, kpage, len, ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: kernel/kevent/kevent_aio.c:336:
+static int kevent_aio_vfs_read(struct kevent *k, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#690: FILE: kernel/kevent/kevent_aio.c:337:
+static int kevent_aio_vfs_read(struct kevent *k, 
+		size_t (*actor)(struct kevent *, struct page *, size_t))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: kernel/kevent/kevent_aio.c:346:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: kernel/kevent/kevent_aio.c:347:
+^Idprintk("%s: start: size_left=%zd, offset=%Lu, processed=%Lu, isize=%zu, pg_num=%d.\n", $

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#700: FILE: kernel/kevent/kevent_aio.c:347:
+	dprintk("%s: start: size_left=%zd, offset=%Lu, processed=%Lu, isize=%zu, pg_num=%d.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: kernel/kevent/kevent_aio.c:348:
+	dprintk("%s: start: size_left=%zd, offset=%Lu, processed=%Lu, isize=%zu, pg_num=%d.\n", 
+			__func__, priv->size, priv->offset, priv->processed, isize, priv->pg_num);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#703: FILE: kernel/kevent/kevent_aio.c:350:
+	for (i=0; i<priv->pg_num && priv->size; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#703: FILE: kernel/kevent/kevent_aio.c:350:
+	for (i=0; i<priv->pg_num && priv->size; ++i) {
 	           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#709: FILE: kernel/kevent/kevent_aio.c:356:
+		if (unlikely(page == NULL))

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#712: FILE: kernel/kevent/kevent_aio.c:359:
+			dprintk("%s: %2d: page=%p, processed=%Lu, size=%zu not uptodate.\n", 
 			                                                       ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: kernel/kevent/kevent_aio.c:359:
+^I^I^Idprintk("%s: %2d: page=%p, processed=%Lu, size=%zu not uptodate.\n", $

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#712: FILE: kernel/kevent/kevent_aio.c:359:
+			dprintk("%s: %2d: page=%p, processed=%Lu, size=%zu not uptodate.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: kernel/kevent/kevent_aio.c:360:
+			dprintk("%s: %2d: page=%p, processed=%Lu, size=%zu not uptodate.\n", 
+					__func__, i, page, priv->processed, priv->size);

WARNING:TYPO_SPELLING: 'procesed' may be misspelled - perhaps 'processed'?
#746: FILE: kernel/kevent/kevent_aio.c:393:
+	dprintk("%s: end: next=%d, num=%d, left=%zu, offset=%Lu, procesed=%Lu, ret=%d.\n", 
 	                                                         ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: kernel/kevent/kevent_aio.c:393:
+^Idprintk("%s: end: next=%d, num=%d, left=%zu, offset=%Lu, procesed=%Lu, ret=%d.\n", $

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#746: FILE: kernel/kevent/kevent_aio.c:393:
+	dprintk("%s: end: next=%d, num=%d, left=%zu, offset=%Lu, procesed=%Lu, ret=%d.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: kernel/kevent/kevent_aio.c:394:
+^I^I^I__func__, i, priv->pg_num, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: kernel/kevent/kevent_aio.c:394:
+	dprintk("%s: end: next=%d, num=%d, left=%zu, offset=%Lu, procesed=%Lu, ret=%d.\n", 
+			__func__, i, priv->pg_num, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: kernel/kevent/kevent_aio.c:416:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#770: FILE: kernel/kevent/kevent_aio.c:417:
+	num = ready = kevent_aio_vfs_read(k, &kevent_aio_vfs_read_actor);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: kernel/kevent/kevent_aio.c:427:
+			dprintk("%s: kevent_mpage_readpages failed: err=%d, k=%p, size=%zd.\n",
+					__func__, err, k, priv->size);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#787: FILE: kernel/kevent/kevent_aio.c:434:
+		if (priv->size)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#789: FILE: kernel/kevent/kevent_aio.c:436:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: kernel/kevent/kevent_aio.c:460:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: kernel/kevent/kevent_aio.c:464:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: kernel/kevent/kevent_aio.c:478:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct kevent_aio_private)...)
#835: FILE: kernel/kevent/kevent_aio.c:482:
+	priv = kzalloc(sizeof(struct kevent_aio_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: kernel/kevent/kevent_aio.c:494:
+^Idprintk("%s: read: k=%p, priv=%p, inode=%p, num=%u, size=%zu, off=%Lu.\n", $

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#847: FILE: kernel/kevent/kevent_aio.c:494:
+	dprintk("%s: read: k=%p, priv=%p, inode=%p, num=%u, size=%zu, off=%Lu.\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: kernel/kevent/kevent_aio.c:495:
+	dprintk("%s: read: k=%p, priv=%p, inode=%p, num=%u, size=%zu, off=%Lu.\n", 
+			__func__, k, priv, inode, priv->pg_num, priv->size, priv->offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: kernel/kevent/kevent_aio.c:496:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: kernel/kevent/kevent_aio.c:500:
+^I$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#857: FILE: kernel/kevent/kevent_aio.c:504:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#880: FILE: kernel/kevent/kevent_aio.c:527:
+	iput(inode);
 	^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: kernel/kevent/kevent_aio.c:534:
+asmlinkage long sys_aio_sendfile(int ctl_fd, int fd, int s, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: kernel/kevent/kevent_aio.c:535:
+asmlinkage long sys_aio_sendfile(int ctl_fd, int fd, int s, 
+		size_t size, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#888: FILE: kernel/kevent/kevent_aio.c:535:
+		size_t size, unsigned flags)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#894: FILE: kernel/kevent/kevent_aio.c:541:
+	int num = (flags & 7)?(flags & 7):8;
 	                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#894: FILE: kernel/kevent/kevent_aio.c:541:
+	int num = (flags & 7)?(flags & 7):8;
 	                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054762.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 36 warnings, 27 checks, 833 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054762.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
