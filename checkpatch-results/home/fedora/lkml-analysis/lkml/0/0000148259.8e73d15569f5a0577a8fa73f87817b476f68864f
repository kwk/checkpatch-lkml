WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: include/linux/cpu_rc.h:1:
+#ifndef _LINUX_CPU_RC_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#128: FILE: init/Kconfig:250:
+config CPU_RC
+	bool "CPU resource controller"
+	help
+	  This options will let you control the CPU resource by scaling 
+	  the timeslice allocated for each tasks.
+
+	  Say N if unsure.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: init/Kconfig:253:
+^I  This options will let you control the CPU resource by scaling $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: kernel/cpu_rc.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#172: FILE: kernel/cpu_rc.c:2:
+ *  kernel/cpu_rc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#197: FILE: kernel/cpu_rc.c:27:
+	spinlock_t lock;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#213: FILE: kernel/cpu_rc.c:43:
+	} stat[NR_CPUS];	/* XXX  need alignment */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#273: FILE: kernel/cpu_rc.c:103:
+	if (load * CPU_RC_GUAR_SCALE >= cr->guarantee * CPU_RC_LOAD_SCALE) {
[...]
+	} else if (maybe_hungry > 0) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: kernel/cpu_rc.c:120:
+^I^I^Icr->ts_factor = cr->ts_factor * cr->guarantee $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#296: FILE: kernel/cpu_rc.c:126:
+	if (cr->ts_factor == 0) {
[...]
+	} else if (cr->ts_factor > CPU_RC_TSFACTOR_MAX) {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#313: FILE: kernel/cpu_rc.c:143:
+	if (cr == NULL) {
+		return slice;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cr"
#313: FILE: kernel/cpu_rc.c:143:
+	if (cr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#317: FILE: kernel/cpu_rc.c:147:
+	if (jiffies - cr->last_recalc > CPU_RC_RECALC_INTERVAL) {
+		cpu_rc_recalc_tsfactor(cr);
+	}	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: kernel/cpu_rc.c:149:
+^I}^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: kernel/cpu_rc.c:152:
+	if (scaled == 0) {
+		scaled = 1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#337: FILE: kernel/cpu_rc.c:167:
+	if (tsk == idle_task(task_cpu(tsk))) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#342: FILE: kernel/cpu_rc.c:172:
+	if (cr == NULL) {
+		return;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cr"
#342: FILE: kernel/cpu_rc.c:172:
+	if (cr == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#354: FILE: kernel/cpu_rc.c:184:
+	if (base > CPU_RC_SPREAD_PERIOD) {
+		tsk_load = CPU_RC_SPREAD_PERIOD * tsk_load / base;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#378: FILE: kernel/cpu_rc.c:208:
+	if (tsk == idle_task(task_cpu(tsk))) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#382: FILE: kernel/cpu_rc.c:212:
+	if (tsk->last_activated == 0) {
+		return;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cr"
#387: FILE: kernel/cpu_rc.c:217:
+	if (cr == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#422: FILE: kernel/sched.c:175:
+		timeslice = SCALE_PRIO(DEF_TIMESLICE*4, p->static_prio);
 		                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 15 warnings, 5 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
