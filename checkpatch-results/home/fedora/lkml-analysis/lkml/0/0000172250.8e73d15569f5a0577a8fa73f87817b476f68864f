WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
--- linux-2.6.12/drivers/char/tpm/tpm_atmel.c	2005-06-17 16:03:59.000000000 -0700

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#76: FILE: drivers/char/tpm/tpm_atmel.c:130:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#76: FILE: drivers/char/tpm/tpm_atmel.c:130:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#77: FILE: drivers/char/tpm/tpm_atmel.c:131:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#77: FILE: drivers/char/tpm/tpm_atmel.c:131:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps' to 'caps_show'
#78: FILE: drivers/char/tpm/tpm_atmel.c:132:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#78: FILE: drivers/char/tpm/tpm_atmel.c:132:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#79: FILE: drivers/char/tpm/tpm_atmel.c:133:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR |S_IWGRP' used
#79: FILE: drivers/char/tpm/tpm_atmel.c:133:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR |S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#79: FILE: drivers/char/tpm/tpm_atmel.c:133:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#81: FILE: drivers/char/tpm/tpm_atmel.c:135:
+static struct attribute* atmel_attrs[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: drivers/char/tpm/tpm_atmel.c:169:
+	tpm_atmel.base = (hi<<8)|lo;
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#119: FILE: drivers/char/tpm/tpm_atmel.c:169:
+	tpm_atmel.base = (hi<<8)|lo;
 	                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#120: FILE: drivers/char/tpm/tpm_atmel.c:170:
+	dev_dbg( &pci_dev->dev, "Operating with base: 0x%x\n", tpm_atmel.base);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#126: FILE: drivers/char/tpm/tpm_atmel.c:174:
+	if (tpm_read_index(TPM_ADDR, 4) != 'A' || tpm_read_index(TPM_ADDR, 5) != 'T'
+	    || tpm_read_index(TPM_ADDR, 6) != 'M' || tpm_read_index(TPM_ADDR, 7) != 'L') {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#136: FILE: drivers/char/tpm/tpm_atmel.c:180:
+	if ((version[0] = tpm_read_index(TPM_ADDR, 0x00)) != 0xFF) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#281: FILE: drivers/char/tpm/tpm.c:62:
+	count = be32_to_cpu(*((__be32 *) (buf + 2)));

CHECK:SPACING: No space is necessary after a cast
#290: FILE: drivers/char/tpm/tpm.c:74:
+	if ((rc = chip->vendor->send(chip, (u8 *) buf, count)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#290: FILE: drivers/char/tpm/tpm.c:74:
+	if ((rc = chip->vendor->send(chip, (u8 *) buf, count)) < 0) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#294: FILE: drivers/char/tpm/tpm.c:76:
+			"tpm_transmit: tpm_send: error %zd\n", rc);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == chip->vendor->req_canceled'
#320: FILE: drivers/char/tpm/tpm.c:88:
+		if ((status == chip->vendor->req_canceled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses - maybe == should be = ?
#320: FILE: drivers/char/tpm/tpm.c:88:
+		if ((status == chip->vendor->req_canceled)) {

CHECK:SPACING: No space is necessary after a cast
#343: FILE: drivers/char/tpm/tpm.c:105:
+	rc = chip->vendor->recv(chip, (u8 *) buf, bufsiz);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tpm_transmit', this function's name, in a string
#347: FILE: drivers/char/tpm/tpm.c:108:
+			"tpm_transmit: tpm_recv: error %zd\n", rc);

WARNING:SPLIT_STRING: quoted string split across lines
#396: FILE: drivers/char/tpm/tpm.c:151:
+		dev_dbg(&chip->pci_dev->dev, "A TPM error (%d) occurred "
+				"attempting to determine the number of PCRS\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#397: FILE: drivers/char/tpm/tpm.c:152:
+			be32_to_cpu(*((__be32 *) (data + 6))));

CHECK:SPACING: No space is necessary after a cast
#402: FILE: drivers/char/tpm/tpm.c:156:
+	num_pcrs = be32_to_cpu(*((__be32 *) (data + 14)));

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/char/tpm/tpm.c:165:
+			dev_dbg(&chip->pci_dev->dev, "A TPM error (%d) occurred"
+				" attempting to read PCR %d of %d\n",

CHECK:SPACING: No space is necessary after a cast
#414: FILE: drivers/char/tpm/tpm.c:166:
+				be32_to_cpu(*((__be32 *) (data + 6))), i, num_pcrs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#465: FILE: drivers/char/tpm/tpm.c:206:
+	if ((len = tpm_transmit(chip, data, READ_PUBEK_RESULT_SIZE)) <

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: drivers/char/tpm/tpm.c:209:
+		dev_dbg(&chip->pci_dev->dev, "A TPM error (%d) occurred "
+				"attempting to read the PUBEK\n",

CHECK:SPACING: No space is necessary after a cast
#469: FILE: drivers/char/tpm/tpm.c:210:
+			    be32_to_cpu(*((__be32 *) (data + 6))));

CHECK:SPACING: No space is necessary after a cast
#491: FILE: drivers/char/tpm/tpm.c:236:
+		    be32_to_cpu(*((__be32 *) (data + 34))));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#507: FILE: drivers/char/tpm/tpm.c:249:
+EXPORT_SYMBOL_GPL(tpm_show_pubek);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: No space is necessary after a cast
#548: FILE: drivers/char/tpm/tpm.c:289:
+		       be32_to_cpu(*((__be32 *) (data + 14))));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/char/tpm/tpm.c:307:
+ssize_t tpm_store_cancel(struct device *dev, struct device_attribute *attr,
+			const char *buf, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: drivers/char/tpm/tpm.c:310:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#562: FILE: drivers/char/tpm/tpm.c:310:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#666: FILE: drivers/char/tpm/tpm.c:440:
+		    ((void __user *) buf, chip->data_buffer, ret_size))

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#685: FILE: drivers/char/tpm/tpm.c:473:
+	dev_mask[chip->dev_num / TPM_NUM_MASK_ENTRIES ] &= !(1 << (chip->dev_num % TPM_NUM_MASK_ENTRIES));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that close square bracket ']'
#685: FILE: drivers/char/tpm/tpm.c:473:
+	dev_mask[chip->dev_num / TPM_NUM_MASK_ENTRIES ] &= !(1 << (chip->dev_num % TPM_NUM_MASK_ENTRIES));

CHECK:SPACING: No space is necessary after a cast
#720: FILE: drivers/char/tpm/tpm.c:549:
+	chip->user_read_timer.data = (unsigned long) chip;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#780: FILE: drivers/char/tpm/tpm.c:606:
+EXPORT_SYMBOL_GPL(tpm_register_hardware);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#803: FILE: drivers/char/tpm/tpm.h:38:
+extern ssize_t tpm_show_pubek(struct device *, struct device_attribute *attr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#803: FILE: drivers/char/tpm/tpm.h:38:
+extern ssize_t tpm_show_pubek(struct device *, struct device_attribute *attr,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#803: FILE: drivers/char/tpm/tpm.h:38:
+extern ssize_t tpm_show_pubek(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: drivers/char/tpm/tpm.h:39:
+extern ssize_t tpm_show_pubek(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: drivers/char/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#805: FILE: drivers/char/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#805: FILE: drivers/char/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/char/tpm/tpm.h:41:
+extern ssize_t tpm_show_pcrs(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#807: FILE: drivers/char/tpm/tpm.h:42:
+extern ssize_t tpm_show_caps(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#807: FILE: drivers/char/tpm/tpm.h:42:
+extern ssize_t tpm_show_caps(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#807: FILE: drivers/char/tpm/tpm.h:42:
+extern ssize_t tpm_show_caps(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: drivers/char/tpm/tpm.h:43:
+extern ssize_t tpm_show_caps(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#809: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_store_cancel(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#809: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_store_cancel(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#809: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_store_cancel(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#809: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_store_cancel(struct device *, struct device_attribute *attr,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: drivers/char/tpm/tpm.h:85:
+	return inb(base+1) & 0xFF;
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#855: FILE: drivers/char/tpm/tpm.h:91:
+	outb(value & 0xFF, base+1);
 	                       ^

WARNING:SPACING: missing space after enum definition
#872: FILE: drivers/char/tpm/tpm_nsc.c:25:
+enum tpm_nsc_addr{

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#964: FILE: drivers/char/tpm/tpm_nsc.c:85:
+	while (time_before(jiffies, stop));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#964: FILE: drivers/char/tpm/tpm_nsc.c:85:
 	}
+	while (time_before(jiffies, stop));

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1000: FILE: drivers/char/tpm/tpm_nsc.c:112:
+	while (time_before(jiffies, stop));

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1000: FILE: drivers/char/tpm/tpm_nsc.c:112:
 	}
+	while (time_before(jiffies, stop));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/char/tpm/tpm_nsc.c:154:
+	if ((data & NSC_STATUS_F0) == 0 &&
+	(wait_for_stat(chip, NSC_STATUS_F0, NSC_STATUS_F0, &data) < 0)) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#1018: FILE: drivers/char/tpm/tpm_nsc.c:232:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1018: FILE: drivers/char/tpm/tpm_nsc.c:232:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#1019: FILE: drivers/char/tpm/tpm_nsc.c:233:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1019: FILE: drivers/char/tpm/tpm_nsc.c:233:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps' to 'caps_show'
#1020: FILE: drivers/char/tpm/tpm_nsc.c:234:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1020: FILE: drivers/char/tpm/tpm_nsc.c:234:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1021: FILE: drivers/char/tpm/tpm_nsc.c:235:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);
                                   ^

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR|S_IWGRP' used
#1021: FILE: drivers/char/tpm/tpm_nsc.c:235:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#1021: FILE: drivers/char/tpm/tpm_nsc.c:235:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1023: FILE: drivers/char/tpm/tpm_nsc.c:237:
+static struct attribute * nsc_attrs[] = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1046: FILE: drivers/char/tpm/tpm_nsc.c:258:
 static int __devinit tpm_nsc_init(struct pci_dev *pci_dev,

CHECK:CAMELCASE: Avoid CamelCase: <nscAddrBase>
#1051: FILE: drivers/char/tpm/tpm_nsc.c:263:
+	int nscAddrBase = TPM_ADDR;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1062: FILE: drivers/char/tpm/tpm_nsc.c:270:
+	tpm_write_index(nscAddrBase,NSC_LDN_INDEX, 0x12);
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1069: FILE: drivers/char/tpm/tpm_nsc.c:274:
+		nscAddrBase = (tpm_read_index(TPM_SUPERIO_ADDR, 0x2C)<<8)|
 		                                                     ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1069: FILE: drivers/char/tpm/tpm_nsc.c:274:
+		nscAddrBase = (tpm_read_index(TPM_SUPERIO_ADDR, 0x2C)<<8)|
 		                                                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1070: FILE: drivers/char/tpm/tpm_nsc.c:275:
+			(tpm_read_index(TPM_SUPERIO_ADDR, 0x2B)&0xFE);
 			                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1079: FILE: drivers/char/tpm/tpm_nsc.c:284:
+	tpm_nsc.base = (hi<<8) | lo;
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1086: FILE: drivers/char/tpm/tpm_nsc.c:289:
+		tpm_read_index(nscAddrBase,0x07), tpm_read_index(nscAddrBase,0x20),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1086: FILE: drivers/char/tpm/tpm_nsc.c:289:
+		tpm_read_index(nscAddrBase,0x07), tpm_read_index(nscAddrBase,0x20),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1087: FILE: drivers/char/tpm/tpm_nsc.c:290:
+		tpm_read_index(nscAddrBase,0x27));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1092: FILE: drivers/char/tpm/tpm_nsc.c:293:
+		tpm_read_index(nscAddrBase,0x21), tpm_read_index(nscAddrBase,0x25),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1092: FILE: drivers/char/tpm/tpm_nsc.c:293:
+		tpm_read_index(nscAddrBase,0x21), tpm_read_index(nscAddrBase,0x25),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: drivers/char/tpm/tpm_nsc.c:294:
+		tpm_read_index(nscAddrBase,0x26), tpm_read_index(nscAddrBase,0x28));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: drivers/char/tpm/tpm_nsc.c:294:
+		tpm_read_index(nscAddrBase,0x26), tpm_read_index(nscAddrBase,0x28));
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/char/tpm/tpm_nsc.c:296:
+		(tpm_read_index(nscAddrBase,0x60) << 8) | tpm_read_index(nscAddrBase,0x61));
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/char/tpm/tpm_nsc.c:296:
+		(tpm_read_index(nscAddrBase,0x60) << 8) | tpm_read_index(nscAddrBase,0x61));
 		                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1099: FILE: drivers/char/tpm/tpm_nsc.c:298:
+		(tpm_read_index(nscAddrBase,0x62) << 8) | tpm_read_index(nscAddrBase,0x63));
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1099: FILE: drivers/char/tpm/tpm_nsc.c:298:
+		(tpm_read_index(nscAddrBase,0x62) << 8) | tpm_read_index(nscAddrBase,0x63));
 		                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1102: FILE: drivers/char/tpm/tpm_nsc.c:300:
+		tpm_read_index(nscAddrBase,0x70));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1105: FILE: drivers/char/tpm/tpm_nsc.c:302:
+		tpm_read_index(nscAddrBase,0x71));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: drivers/char/tpm/tpm_nsc.c:305:
+		tpm_read_index(nscAddrBase,0x74), tpm_read_index(nscAddrBase,0x75));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: drivers/char/tpm/tpm_nsc.c:305:
+		tpm_read_index(nscAddrBase,0x74), tpm_read_index(nscAddrBase,0x75));
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: drivers/char/tpm/tpm_nsc.c:309:
+		tpm_read_index(nscAddrBase,0xF0), tpm_read_index(nscAddrBase,0xF1),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: drivers/char/tpm/tpm_nsc.c:309:
+		tpm_read_index(nscAddrBase,0xF0), tpm_read_index(nscAddrBase,0xF1),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/tpm/tpm_nsc.c:310:
+		tpm_read_index(nscAddrBase,0xF2), tpm_read_index(nscAddrBase,0xF3),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1119: FILE: drivers/char/tpm/tpm_nsc.c:310:
+		tpm_read_index(nscAddrBase,0xF2), tpm_read_index(nscAddrBase,0xF3),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/char/tpm/tpm_nsc.c:311:
+		tpm_read_index(nscAddrBase,0xF4), tpm_read_index(nscAddrBase,0xF5),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: drivers/char/tpm/tpm_nsc.c:311:
+		tpm_read_index(nscAddrBase,0xF4), tpm_read_index(nscAddrBase,0xF5),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: drivers/char/tpm/tpm_nsc.c:312:
+		tpm_read_index(nscAddrBase,0xF6), tpm_read_index(nscAddrBase,0xF7),
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1121: FILE: drivers/char/tpm/tpm_nsc.c:312:
+		tpm_read_index(nscAddrBase,0xF6), tpm_read_index(nscAddrBase,0xF7),
 		                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/char/tpm/tpm_nsc.c:313:
+		tpm_read_index(nscAddrBase,0xF8), tpm_read_index(nscAddrBase,0xF9));
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: drivers/char/tpm/tpm_nsc.c:313:
+		tpm_read_index(nscAddrBase,0xF8), tpm_read_index(nscAddrBase,0xF9));
 		                                                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 38 warnings, 34 checks, 1102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
