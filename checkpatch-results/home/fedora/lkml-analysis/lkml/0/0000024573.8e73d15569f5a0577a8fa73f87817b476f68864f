WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
> > Just updated the backlight and output sysfs support for ACPI Video driver

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#118: FILE: drivers/video/backlight/backlight.c:193:
+struct backlight_device *backlight_device_register(const char *name,struct device *dev,  void *devdata,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: drivers/video/backlight/backlight.c:193:
+struct backlight_device *backlight_device_register(const char *name,struct device *dev,  void *devdata,
                                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#153: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#158: FILE: drivers/video/output.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/video/output.c:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: drivers/video/output.c:15:
+static ssize_t video_output_show_state (struct class_device *dev, char *buf)

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: drivers/video/output.c:20:
+	if(od->props)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: drivers/video/output.c:26:
+static ssize_t video_output_store_state (struct class_device *dev, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#187: FILE: drivers/video/output.c:30:
+	int request_state = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#188: FILE: drivers/video/output.c:31:
+	size_t size = endp -buf;
 	                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/video/output.c:33:
+        if (*endp && isspace(*endp))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/video/output.c:33:
+        if (*endp && isspace(*endp))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/video/output.c:34:
+                size++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/video/output.c:34:
+                size++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/video/output.c:35:
+        if (size != count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/video/output.c:35:
+        if (size != count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/video/output.c:36:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/video/output.c:36:
+                return -EINVAL;$

ERROR:SPACING: space required before the open brace '{'
#195: FILE: drivers/video/output.c:38:
+	if(od->props){

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: drivers/video/output.c:38:
+	if(od->props){

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/video/output.c:47:
+        struct output_device *od = to_output_device(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/video/output.c:47:
+        struct output_device *od = to_output_device(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/video/output.c:48:
+        kfree(od);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: drivers/video/output.c:48:
+        struct output_device *od = to_output_device(dev);
+        kfree(od);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/video/output.c:48:
+        kfree(od);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: drivers/video/output.c:62:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/video/output.c:63:
+struct output_device *video_output_register(const char *name,struct device *dev,
                                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/video/output.c:64:
+struct output_device *video_output_register(const char *name,struct device *dev,
+				void *devdata, struct output_properties *op)

CHECK:SPACING: No space is necessary after a cast
#226: FILE: drivers/video/output.c:69:
+	new_dev = (struct output_device *) kzalloc( sizeof(struct output_device), GFP_KERNEL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#226: FILE: drivers/video/output.c:69:
+	new_dev = (struct output_device *) kzalloc( sizeof(struct output_device), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#226: FILE: drivers/video/output.c:69:
+	new_dev = (struct output_device *) kzalloc( sizeof(struct output_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_dev)...) over kzalloc(sizeof(struct output_device)...)
#226: FILE: drivers/video/output.c:69:
+	new_dev = (struct output_device *) kzalloc( sizeof(struct output_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#234: FILE: drivers/video/output.c:77:
+	strlcpy(new_dev->class_dev.class_id, name, KOBJ_NAME_LEN);

ERROR:SPACING: space required before the open brace '{'
#237: FILE: drivers/video/output.c:80:
+	if (ret_code){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: drivers/video/output.c:81:
+		kfree (new_dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#274: FILE: include/linux/output.h:1:
+#ifndef _LINUX_OUTPUT_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_device *' should also have an identifier name
#282: FILE: include/linux/output.h:9:
+	int (*set_state)(struct output_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_device *' should also have an identifier name
#283: FILE: include/linux/output.h:10:
+	int (*get_status)(struct output_device *);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#294: FILE: include/linux/output.h:21:
+struct output_device *video_output_register(const char *, struct device *dev, void *, struct output_properties *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#294: FILE: include/linux/output.h:21:
+struct output_device *video_output_register(const char *, struct device *dev, void *, struct output_properties *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#294: FILE: include/linux/output.h:21:
+struct output_device *video_output_register(const char *, struct device *dev, void *, struct output_properties *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_properties *' should also have an identifier name
#294: FILE: include/linux/output.h:21:
+struct output_device *video_output_register(const char *, struct device *dev, void *, struct output_properties *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct output_device *' should also have an identifier name
#295: FILE: include/linux/output.h:22:
+void video_output_unregister(struct output_device *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#401: FILE: drivers/acpi/video.c:268:
+static int acpi_video_device_lcd_get_level_current(struct acpi_video_device *,unsigned long *);
                                                                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#418: FILE: drivers/acpi/video.c:285:
+};
+static struct output_properties acpi_output_properties = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#422: FILE: drivers/acpi/video.c:289:
+};
+static int acpi_video_get_brightness(struct backlight_device *bd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: drivers/acpi/video.c:292:
+	unsigned long cur_level;
+	acpi_video_device_lcd_get_level_current(backlight_acpi_device, &cur_level);

CHECK:SPACING: No space is necessary after a cast
#426: FILE: drivers/acpi/video.c:293:
+	return (int) cur_level;

WARNING:LINE_SPACING: Missing a blank line after declarations
#432: FILE: drivers/acpi/video.c:299:
+	int request_level = bd->props->brightness;
+	acpi_video_device_lcd_set_level(backlight_acpi_device, request_level);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#439: FILE: drivers/acpi/video.c:306:
+	struct acpi_video_device *vd = (struct acpi_video_device *)class_get_devdata(&od->class_dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/acpi/video.c:307:
+	struct acpi_video_device *vd = (struct acpi_video_device *)class_get_devdata(&od->class_dev);
+	acpi_video_device_get_state(vd, &state);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#447: FILE: drivers/acpi/video.c:314:
+	struct acpi_video_device *vd = (struct acpi_video_device *)class_get_devdata(&od->class_dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: drivers/acpi/video.c:315:
+	struct acpi_video_device *vd = (struct acpi_video_device *)class_get_devdata(&od->class_dev);
+	return acpi_video_device_set_state(vd, state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#458: FILE: drivers/acpi/video.c:402:
+	printk(KERN_DEBUG PREFIX "set_level status: %x\n", status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#466: FILE: drivers/acpi/video.c:539:
 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: drivers/acpi/video.c:547:
+        struct acpi_pci_id id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/acpi/video.c:547:
+        struct acpi_pci_id id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/acpi/video.c:548:
+        struct pci_bus *bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/acpi/video.c:548:
+        struct pci_bus *bus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/acpi/video.c:549:
+        struct pci_dev *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/acpi/video.c:549:
+        struct pci_dev *dev;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#482: FILE: drivers/acpi/video.c:555:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#486: FILE: drivers/acpi/video.c:559:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#488: FILE: drivers/acpi/video.c:561:
+static struct acpi_pci_data * acpi_pci_get (struct acpi_device *device)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: drivers/acpi/video.c:561:
+static struct acpi_pci_data * acpi_pci_get (struct acpi_device *device)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#500: FILE: drivers/acpi/video.c:573:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct acpi_pci_data)...)
#511: FILE: drivers/acpi/video.c:584:
+	data = kmalloc(sizeof(struct acpi_pci_data), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#519: FILE: drivers/acpi/video.c:592:
+	printk(KERN_INFO PREFIX "finding PCI device [%s]...\n", pathname);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp_dev->parent->handle != ACPI_ROOT_OBJECT'
#533: FILE: drivers/acpi/video.c:606:
+		if (tmp_dev->parent && (tmp_dev->parent->handle != ACPI_ROOT_OBJECT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#555: FILE: drivers/acpi/video.c:628:
+	printk(KERN_INFO PREFIX "...to %02x:%02x:%02x.%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/acpi/video.c:629:
+	printk(KERN_INFO PREFIX "...to %02x:%02x:%02x.%02x\n",
+			  data->id.segment, data->id.bus, data->id.device,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#583: FILE: drivers/acpi/video.c:656:
+	printk(KERN_INFO PREFIX "data->dev =%p", &data->dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#584: FILE: drivers/acpi/video.c:657:
+	printk(KERN_INFO PREFIX "data->dev->dev =%p\n", &data->dev->dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: drivers/acpi/video.c:659:
+		printk(KERN_ERR PREFIX "Device %02x:%02x:%02x.%02x not present in PCI namespace\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: drivers/acpi/video.c:660:
+		printk(KERN_ERR PREFIX "Device %02x:%02x:%02x.%02x not present in PCI namespace\n",
+				  data->id.segment, data->id.bus,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: drivers/acpi/video.c:689:
+	data = acpi_pci_get (device->video->device);

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: drivers/acpi/video.c:690:
+        if (!data || !(data->dev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/acpi/video.c:690:
+        if (!data || !(data->dev)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#609: FILE: drivers/acpi/video.c:691:
+		printk(KERN_ERR PREFIX "acpi_video_device:no valid data from acpi_pci_get\n");

WARNING:SPACING: space prohibited before semicolon
#610: FILE: drivers/acpi/video.c:692:
+		return ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#621: FILE: drivers/acpi/video.c:704:
+	if (ACPI_SUCCESS(acpi_get_handle(device->dev->handle, "_BQC", &h_dummy1))) {
+		device->cap._BQC = 1;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#631: FILE: drivers/acpi/video.c:720:
 
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#640: FILE: drivers/acpi/video.c:729:
+			printk(KERN_ERR PREFIX "can't allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#640: FILE: drivers/acpi/video.c:729:
 		if (!br) {
+			printk(KERN_ERR PREFIX "can't allocate memory\n");

ERROR:SPACING: space required before the open brace '{'
#657: FILE: drivers/acpi/video.c:765:
+	if (device->cap._BCL && device->cap._BCM && device->cap._BQC){

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: drivers/acpi/video.c:767:
+		unsigned long tmp;
+		acpi_video_data.max_brightness = max_level;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: drivers/acpi/video.c:771:
+		acpi_video_backlight = backlight_device_register("acpi-video",
+			&(data->dev->dev), NULL, &acpi_video_data);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->dev->dev
#663: FILE: drivers/acpi/video.c:771:
+			&(data->dev->dev), NULL, &acpi_video_data);

ERROR:SPACING: space required before the open brace '{'
#667: FILE: drivers/acpi/video.c:775:
+	if (device->cap._DCS && device->cap._DSS){

WARNING:LINE_SPACING: Missing a blank line after declarations
#669: FILE: drivers/acpi/video.c:777:
+		char name[16];
+		memset(name, 0, 16);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/acpi/video.c:782:
+		device->output_dev = video_output_register(name,
+					 &(data->dev->dev),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->dev->dev
#674: FILE: drivers/acpi/video.c:782:
+					 &(data->dev->dev),

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: drivers/acpi/video.c:1364:
+        char proc_dir_name[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/acpi/video.c:1364:
+        char proc_dir_name[32];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: drivers/acpi/video.c:1370:
+              ^Istrcpy(proc_dir_name, acpi_device_bid(device));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#699: FILE: drivers/acpi/video.c:1370:
+              ^Istrcpy(proc_dir_name, acpi_device_bid(device));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/acpi/video.c:1370:
+              ^Istrcpy(proc_dir_name, acpi_device_bid(device));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: drivers/acpi/video.c:1371:
+               ^Istrcat(proc_dir_name, "_");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#700: FILE: drivers/acpi/video.c:1371:
+               ^Istrcat(proc_dir_name, "_");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/acpi/video.c:1371:
+               ^Istrcat(proc_dir_name, "_");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: drivers/acpi/video.c:1372:
+               ^Istrcat(proc_dir_name, acpi_device_bid(device->parent));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#701: FILE: drivers/acpi/video.c:1372:
+               ^Istrcat(proc_dir_name, acpi_device_bid(device->parent));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/acpi/video.c:1372:
+               ^Istrcat(proc_dir_name, acpi_device_bid(device->parent));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/acpi/video.c:1444:
+        char proc_dir_name[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/acpi/video.c:1444:
+        char proc_dir_name[32];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: drivers/acpi/video.c:1455:
+                strcpy(proc_dir_name, acpi_device_bid(device));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: drivers/acpi/video.c:1455:
+                strcpy(proc_dir_name, acpi_device_bid(device));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: drivers/acpi/video.c:1456:
+                strcat(proc_dir_name, "_");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: drivers/acpi/video.c:1456:
+                strcat(proc_dir_name, "_");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: drivers/acpi/video.c:1457:
+                strcat(proc_dir_name, acpi_device_bid(device->parent));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/acpi/video.c:1457:
+                strcat(proc_dir_name, acpi_device_bid(device->parent));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: drivers/acpi/video.c:1458:
+                remove_proc_entry(proc_dir_name, acpi_video_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/acpi/video.c:1458:
+                remove_proc_entry(proc_dir_name, acpi_video_dir);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#754: FILE: drivers/acpi/video.c:1842:
+	printk(KERN_INFO PREFIX "video bus notify\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: drivers/acpi/video.c:1916:
+        char proc_dir_name[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: drivers/acpi/video.c:1916:
+        char proc_dir_name[32];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: drivers/acpi/video.c:1961:
+        strcpy(proc_dir_name, acpi_device_bid(device));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: drivers/acpi/video.c:1961:
+        strcpy(proc_dir_name, acpi_device_bid(device));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: drivers/acpi/video.c:1962:
+        strcat(proc_dir_name, "_");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/acpi/video.c:1962:
+        strcat(proc_dir_name, "_");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: drivers/acpi/video.c:1963:
+        strcat(proc_dir_name, acpi_device_bid(device->parent));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/acpi/video.c:1963:
+        strcat(proc_dir_name, acpi_device_bid(device->parent));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: drivers/acpi/video.c:1966:
+               ACPI_VIDEO_DEVICE_NAME, proc_dir_name,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/acpi/video.c:1966:
+               ACPI_VIDEO_DEVICE_NAME, proc_dir_name,$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#801: FILE: drivers/video/Kconfig:1648:
+config VIDEO_OUTPUT_CONTROL
+	tristate "video output device switch control"
+	depends on SYSFS
+	---help---
+	  sysfs support for video output device switching.
+
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 70 warnings, 21 checks, 614 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
