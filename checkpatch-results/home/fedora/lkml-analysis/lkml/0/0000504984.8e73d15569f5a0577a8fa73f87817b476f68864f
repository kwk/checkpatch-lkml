WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
diff -ruN dist-2.4.12+patches/drivers/ide/hpt366.c cvs-2.4.12+patches/drivers/ide/hpt366.c

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#58: FILE: drivers/ide/hpt366.c:2:
+ * linux/drivers/ide/hpt366.c		Version 0.22	20 Sep 2001

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: drivers/ide/hpt366.c:16:
+ * - the HPT370's state machine can get confused. reset it before each dma $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/ide/hpt366.c:19:
+ * - check for busmaster state at end of dma. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: drivers/ide/hpt366.c:28:
+ * ^IAdrian Sun <a.sun@sun.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: drivers/ide/hpt366.c:34:
+ * ^IDuncan Laurie <void@sun.com>$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#99: FILE: drivers/ide/hpt366.c:55:
+#include <asm/uaccess.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#254: FILE: drivers/ide/hpt366.c:224:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/ide/hpt366.c:227:
+        {       XFER_UDMA_5,    0x12446231      },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/ide/hpt366.c:227:
+        {       XFER_UDMA_5,    0x12446231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/ide/hpt366.c:228:
+        {       XFER_UDMA_4,    0x12446231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/ide/hpt366.c:228:
+        {       XFER_UDMA_4,    0x12446231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/ide/hpt366.c:229:
+        {       XFER_UDMA_3,    0x126c6231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/ide/hpt366.c:229:
+        {       XFER_UDMA_3,    0x126c6231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/ide/hpt366.c:230:
+        {       XFER_UDMA_2,    0x12486231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/ide/hpt366.c:230:
+        {       XFER_UDMA_2,    0x12486231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: drivers/ide/hpt366.c:231:
+        {       XFER_UDMA_1,    0x124c6233      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/ide/hpt366.c:231:
+        {       XFER_UDMA_1,    0x124c6233      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: drivers/ide/hpt366.c:232:
+        {       XFER_UDMA_0,    0x12506297      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/ide/hpt366.c:232:
+        {       XFER_UDMA_0,    0x12506297      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: drivers/ide/hpt366.c:234:
+        {       XFER_MW_DMA_2,  0x22406c31      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/ide/hpt366.c:234:
+        {       XFER_MW_DMA_2,  0x22406c31      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/ide/hpt366.c:235:
+        {       XFER_MW_DMA_1,  0x22406c33      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/ide/hpt366.c:235:
+        {       XFER_MW_DMA_1,  0x22406c33      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: drivers/ide/hpt366.c:236:
+        {       XFER_MW_DMA_0,  0x22406c97      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/ide/hpt366.c:236:
+        {       XFER_MW_DMA_0,  0x22406c97      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/ide/hpt366.c:238:
+        {       XFER_PIO_4,     0x06414e31      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/ide/hpt366.c:238:
+        {       XFER_PIO_4,     0x06414e31      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: drivers/ide/hpt366.c:239:
+        {       XFER_PIO_3,     0x06414e42      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/ide/hpt366.c:239:
+        {       XFER_PIO_3,     0x06414e42      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/ide/hpt366.c:240:
+        {       XFER_PIO_2,     0x06414e53      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/ide/hpt366.c:240:
+        {       XFER_PIO_2,     0x06414e53      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: drivers/ide/hpt366.c:241:
+        {       XFER_PIO_1,     0x06814e93      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/ide/hpt366.c:241:
+        {       XFER_PIO_1,     0x06814e93      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/ide/hpt366.c:242:
+        {       XFER_PIO_0,     0x06814ea7      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/ide/hpt366.c:242:
+        {       XFER_PIO_0,     0x06814ea7      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: drivers/ide/hpt366.c:243:
+        {       0,              0x06814ea7      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/ide/hpt366.c:243:
+        {       0,              0x06814ea7      }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/ide/hpt366.c:256:
+^I{       XFER_MW_DMA_1,  0x2480fa77       }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/ide/hpt366.c:295:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/ide/hpt366.c:299:
+^I$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#392: FILE: drivers/ide/hpt366.c:345:
+byte hpt366_proc = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: drivers/ide/hpt366.c:348:
+extern char *ide_xfer_verbose (byte xfer_rate);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#395: FILE: drivers/ide/hpt366.c:348:
+extern char *ide_xfer_verbose (byte xfer_rate);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#438: FILE: drivers/ide/hpt366.c:358:
+	char *chipset_nums[] = {"366", "366", "368", "370", "370A"};

WARNING:SPLIT_STRING: quoted string split across lines
#442: FILE: drivers/ide/hpt366.c:362:
+	p += sprintf(p, "\n                             "
+		"HighPoint HPT366/368/370\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#455: FILE: drivers/ide/hpt366.c:375:
+		p += sprintf(p, "--------------- Primary Channel "
+				"--------------- Secondary Channel "

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/ide/hpt366.c:376:
+				"--------------- Secondary Channel "
+				"--------------\n");

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: drivers/ide/hpt366.c:382:
+		p += sprintf(p, "Enabled:        %s"
+				"                             %s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#468: FILE: drivers/ide/hpt366.c:388:
+			u8 cbl;
+			cbl = inb_p(iobase + 0x7b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#473: FILE: drivers/ide/hpt366.c:393:
+			p += sprintf(p, "Cable:          ATA-%d"
+					"                          ATA-%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: drivers/ide/hpt366.c:400:
+		p += sprintf(p, "--------------- drive0 --------- drive1 "
+				"------- drive0 ---------- drive1 -------\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/ide/hpt366.c:401:
+^I^Ip += sprintf(p, "DMA capable:    %s              %s" $

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: drivers/ide/hpt366.c:402:
+		p += sprintf(p, "DMA capable:    %s              %s" 
+				"            %s               %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: drivers/ide/hpt366.c:403:
+^I^I^I(c0 & 0x20) ? "yes" : "no ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/ide/hpt366.c:405:
+^I^I^I(c1 & 0x20) ? "yes" : "no ", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: drivers/ide/hpt366.c:410:
+			u8 c2, c3;
+			c0 = inb_p(iobase + 0x63);

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: drivers/ide/hpt366.c:416:
+			p += sprintf(p, "Mode:           %s             %s"
+					"           %s              %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/ide/hpt366.c:417:
+^I^I^I^I(c0 & 0x10) ? "UDMA" : (c0 & 0x20) ? "DMA " : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/ide/hpt366.c:428:
+^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#527: FILE: drivers/ide/hpt366.c:470:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#527: FILE: drivers/ide/hpt366.c:470:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: drivers/ide/hpt366.c:470:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#539: FILE: drivers/ide/hpt366.c:479:
+static void hpt366_tune_chipset (ide_drive_t *drive, byte speed)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: drivers/ide/hpt366.c:492:
+^I * Disable the "fast interrupt" prediction. $

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: drivers/ide/hpt366.c:500:
+	switch((reg1 >> 8) & 15) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: drivers/ide/hpt366.c:525:
+static void hpt370_tune_chipset (ide_drive_t *drive, byte speed)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: drivers/ide/hpt366.c:533:
+^Istruct pci_dev *dev ^I= HWIF(drive)->pci_dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/ide/hpt366.c:537:
+^I * don't holdoff on interrupts. (== 0x01 despite what the docs say) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: drivers/ide/hpt366.c:554:
+^Ilist_conf = pci_bus_clock_list(speed, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: drivers/ide/hpt366.c:560:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: drivers/ide/hpt366.c:561:
+	if (speed < XFER_MW_DMA_0) {
+		list_conf &= ~0x80000000; /* Disable on-chip PIO FIFO/buffer */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: drivers/ide/hpt366.c:579:
+                hpt366_tune_chipset(drive, speed);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/ide/hpt366.c:579:
+                hpt366_tune_chipset(drive, speed);$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#707: FILE: drivers/ide/hpt366.c:835:
 	switch (func) {
[...]
+		case ide_dma_end:
[...]
+		case ide_dma_timeout:
+		case ide_dma_lostirq:
[...]
+	        case ide_dma_begin:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#714: FILE: drivers/ide/hpt366.c:842:
+				udelay(20); /* wait a little */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: drivers/ide/hpt366.c:845:
+^I^I^Iif ((dma_stat & 0x01) == 0) $

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#721: FILE: drivers/ide/hpt366.c:849:
+			/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: drivers/ide/hpt366.c:853:
+^I^I^Ipci_read_config_byte(hwif->pci_dev, reginfo, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: drivers/ide/hpt366.c:854:
+^I^I^I^I^I     &dma_stat); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: drivers/ide/hpt366.c:855:
+^I^I^Iprintk("%s: %d bytes in FIFO\n", drive->name, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#727: FILE: drivers/ide/hpt366.c:855:
+			printk("%s: %d bytes in FIFO\n", drive->name, 

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#730: FILE: drivers/ide/hpt366.c:858:
+			udelay(10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: drivers/ide/hpt366.c:861:
+^I^I^Idma_stat = inb(dma_base + 2); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#734: FILE: drivers/ide/hpt366.c:862:
+			outb(dma_stat | 0x6, dma_base+2); /* clear errors */
 			                             ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#735: FILE: drivers/ide/hpt366.c:863:
+			/* fallthrough */

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: drivers/ide/hpt366.c:866:
+^I        case ide_dma_begin:$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#741: FILE: drivers/ide/hpt366.c:869:
+			udelay(10);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#759: FILE: drivers/ide/hpt366.c:887:
+	 * to prevent drives having problems with 40-pin cables. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: drivers/ide/hpt366.c:890:
+^I/* set up the PLL. we need to adjust it so that it's stable. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#763: FILE: drivers/ide/hpt366.c:891:
+	 * freq = Tpll * 192 / Tpci */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#766: FILE: drivers/ide/hpt366.c:894:
+	if (freq < 0x9c) {
+	  pll = F_LOW_PCI_33;

CHECK:BRACES: braces {} should be used on all arms of this statement
#766: FILE: drivers/ide/hpt366.c:894:
+	if (freq < 0x9c) {
[...]
+	} else if (freq < 0xb0)
[...]
+	else if (freq < 0xc8) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#768: FILE: drivers/ide/hpt366.c:896:
+	  dev->sysdata = (void *) thirty_three_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#769: FILE: drivers/ide/hpt366.c:897:
+	  printk("HPT370: using 33MHz PCI clock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#770: FILE: drivers/ide/hpt366.c:898:
+	} else if (freq < 0xb0)
+	  pll = F_LOW_PCI_40;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#772: FILE: drivers/ide/hpt366.c:900:
+	else if (freq < 0xc8) {
+	  pll = F_LOW_PCI_50;

CHECK:SPACING: No space is necessary after a cast
#774: FILE: drivers/ide/hpt366.c:902:
+	  dev->sysdata = (void *) fifty_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#775: FILE: drivers/ide/hpt366.c:903:
+	  printk("HPT370: using 50MHz PCI clock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#776: FILE: drivers/ide/hpt366.c:904:
+	} else {
+	  pll = F_LOW_PCI_66;

CHECK:SPACING: No space is necessary after a cast
#778: FILE: drivers/ide/hpt366.c:906:
+	  dev->sysdata = (void *) sixty_six_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#779: FILE: drivers/ide/hpt366.c:907:
+	  printk("HPT370: using 66MHz PCI clock\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/ide/hpt366.c:909:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#786: FILE: drivers/ide/hpt366.c:914:
+	 * on PRST/SRST when the HPT state engine gets reset. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: drivers/ide/hpt366.c:915:
+^Iif (dev->sysdata) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/ide/hpt366.c:917:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#791: FILE: drivers/ide/hpt366.c:919:
+	/* adjust PLL based upon PCI clock, enable it, and wait for
+	   stabilization. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#791: FILE: drivers/ide/hpt366.c:919:
+	   stabilization. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: drivers/ide/hpt366.c:932:
+^I^I^I^I^Ipci_read_config_byte(dev, 0x5b, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: drivers/ide/hpt366.c:938:
+^I^I^I^Ipci_write_config_dword(dev, 0x5c, $

CHECK:SPACING: No space is necessary after a cast
#813: FILE: drivers/ide/hpt366.c:941:
+				dev->sysdata = (void *) fifty_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#814: FILE: drivers/ide/hpt366.c:942:
+				printk("HPT370: using 50MHz internal PLL\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: drivers/ide/hpt366.c:951:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: drivers/ide/hpt366.c:955:
+^Ipci_write_config_byte(dev, 0x50, 0x37); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/ide/hpt366.c:956:
+^Ipci_write_config_byte(dev, 0x54, 0x37); $

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#829: FILE: drivers/ide/hpt366.c:957:
+	udelay(100);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: drivers/ide/hpt366.c:983:
+^Iif (pci_rev_check_hpt3xx(dev)) $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#879: FILE: drivers/ide/hpt366.c:1003:
+	if (hwif->channel) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: drivers/ide/hpt366.c:1017:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: drivers/ide/hpt366.c:1036:
+^Iif (hwif->channel) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: drivers/ide/hpt366.c:1039:
+^I^Iresetmask = 0x80; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: drivers/ide/hpt366.c:1040:
+^I} else { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#929: FILE: drivers/ide/hpt366.c:1051:
+	 * make sure that the drive knows that it has failed if it's off */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#977: FILE: drivers/ide/hpt366.c:1097:
+		hwif->serialized = hwif->mate->serialized = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#983: FILE: drivers/ide/hpt366.c:1103:
+		 * drives on each channel */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 60 warnings, 11 checks, 928 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
