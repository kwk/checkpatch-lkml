WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This patch is the result of running Lindent against arch/ppc64/kernel/lparcfg.c.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#37: 
Signed-off-by:  Will Schmidt   willschm@us.ibm.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Will Schmidt   willschm@us.ibm.com'
#37: 
Signed-off-by:  Will Schmidt   willschm@us.ibm.com

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#68: FILE: arch/ppc64/krenel/lparcfg.c:49:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#72: FILE: arch/ppc64/krenel/lparcfg.c:52:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#76: FILE: arch/ppc64/krenel/lparcfg.c:55:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#81: FILE: arch/ppc64/krenel/lparcfg.c:59:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#85: FILE: arch/ppc64/krenel/lparcfg.c:62:
+		printk(KERN_INFO

CHECK:CAMELCASE: Avoid CamelCase: <xItExtVpdPanel>
#106: FILE: arch/ppc64/krenel/lparcfg.c:87:
+		   e2a(xItExtVpdPanel.mfgID[2]),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <mfgID>
#106: FILE: arch/ppc64/krenel/lparcfg.c:87:
+		   e2a(xItExtVpdPanel.mfgID[2]),

CHECK:CAMELCASE: Avoid CamelCase: <systemSerial>
#108: FILE: arch/ppc64/krenel/lparcfg.c:89:
+		   e2a(xItExtVpdPanel.systemSerial[1]),

CHECK:CAMELCASE: Avoid CamelCase: <machineType>
#119: FILE: arch/ppc64/krenel/lparcfg.c:96:
+		   e2a(xItExtVpdPanel.machineType[0]),

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getLpIndex>
#125: FILE: arch/ppc64/krenel/lparcfg.c:101:
+	lp_index = HvLpConfig_getLpIndex();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getSystemPhysicalProcessors>
#130: FILE: arch/ppc64/krenel/lparcfg.c:105:
+		   (int)HvLpConfig_getSystemPhysicalProcessors());

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getPhysicalProcessors>
#137: FILE: arch/ppc64/krenel/lparcfg.c:110:
+	processors = (int)HvLpConfig_getPhysicalProcessors();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getMaxPhysicalProcessors>
#141: FILE: arch/ppc64/krenel/lparcfg.c:113:
+	max_processors = (int)HvLpConfig_getMaxPhysicalProcessors();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getSharedProcUnits>
#148: FILE: arch/ppc64/krenel/lparcfg.c:117:
+		entitled_capacity = HvLpConfig_getSharedProcUnits();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getMaxSharedProcUnits>
#149: FILE: arch/ppc64/krenel/lparcfg.c:118:
+		max_entitled_capacity = HvLpConfig_getMaxSharedProcUnits();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getSharedPoolIndex>
#165: FILE: arch/ppc64/krenel/lparcfg.c:129:
+		pool_id = HvLpConfig_getSharedPoolIndex();

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getNumProcsInSharedPool>
#169: FILE: arch/ppc64/krenel/lparcfg.c:132:
+			   (int)(HvLpConfig_getNumProcsInSharedPool(pool_id) *

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#222: FILE: arch/ppc64/krenel/lparcfg.c:231:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: arch/ppc64/krenel/lparcfg.c:239:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#232: FILE: arch/ppc64/krenel/lparcfg.c:239:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#232: FILE: arch/ppc64/krenel/lparcfg.c:239:
 		if (!workbuffer) {
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#233: FILE: arch/ppc64/krenel/lparcfg.c:240:
+			       __FILE__, __FUNCTION__, __LINE__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#253: FILE: arch/ppc64/krenel/lparcfg.c:266:
+				   with different keyword strings */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#254: FILE: arch/ppc64/krenel/lparcfg.c:267:
+				if (0 == strcmp(workbuffer, "MaxEntCap")) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#261: FILE: arch/ppc64/krenel/lparcfg.c:272:
+				if (0 == strcmp(workbuffer, "MaxPlatProcs")) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#272: FILE: arch/ppc64/krenel/lparcfg.c:298:
+		printk(KERN_ERR "cpus_dn %p \n", cpus_dn);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#272: FILE: arch/ppc64/krenel/lparcfg.c:298:
+		printk(KERN_ERR "cpus_dn %p \n", cpus_dn);

CHECK:CAMELCASE: Avoid CamelCase: <xSharedProc>
#375: FILE: arch/ppc64/krenel/lparcfg.c:421:
+	seq_printf(m, "shared_processor_mode=%d\n", paca[0].lppaca.xSharedProc);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#384: FILE: arch/ppc64/krenel/lparcfg.c:436:
+static ssize_t lparcfg_write(struct file *file, const char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#385: FILE: arch/ppc64/krenel/lparcfg.c:437:
+			     size_t count, loff_t * off)

CHECK:SPACING: No space is necessary after a cast
#402: FILE: arch/ppc64/krenel/lparcfg.c:469:
+		*new_entitled_ptr = (u64) simple_strtoul(tmp, &endp, 10);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#402: FILE: arch/ppc64/krenel/lparcfg.c:469:
+		*new_entitled_ptr = (u64) simple_strtoul(tmp, &endp, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#409: FILE: arch/ppc64/krenel/lparcfg.c:475:
+		*new_weight_ptr = (u8) simple_strtoul(tmp, &endp, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#409: FILE: arch/ppc64/krenel/lparcfg.c:475:
+		*new_weight_ptr = (u8) simple_strtoul(tmp, &endp, 10);

WARNING:INDENTED_LABEL: labels should not be indented
#427: FILE: arch/ppc64/krenel/lparcfg.c:514:
+      out:

WARNING:INDENTED_LABEL: labels should not be indented
#447: FILE: arch/ppc64/krenel/lparcfg.c:527:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#448: FILE: arch/ppc64/krenel/lparcfg.c:528:
+      read:seq_read,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#448: FILE: arch/ppc64/krenel/lparcfg.c:528:
+      read:seq_read,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#449: FILE: arch/ppc64/krenel/lparcfg.c:529:
+      open:lparcfg_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#449: FILE: arch/ppc64/krenel/lparcfg.c:529:
+      open:lparcfg_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#450: FILE: arch/ppc64/krenel/lparcfg.c:530:
+      release:single_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#450: FILE: arch/ppc64/krenel/lparcfg.c:530:
+      release:single_release,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#459: FILE: arch/ppc64/krenel/lparcfg.c:549:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#459: FILE: arch/ppc64/krenel/lparcfg.c:549:
 		if (!ent->data) {
+			printk(KERN_ERR

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#469: FILE: arch/ppc64/krenel/lparcfg.c:567:
 		if (proc_ppc64_lparcfg->data) {
+			kfree(proc_ppc64_lparcfg->data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 27 warnings, 18 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
