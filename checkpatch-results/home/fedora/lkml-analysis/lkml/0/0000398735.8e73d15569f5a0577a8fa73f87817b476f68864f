WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urpN mm1-2.5.59/arch/i386/kernel/io_apic.c irq-2.5.59-1/arch/i386/kernel/io_apic.c

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#53: FILE: arch/i386/kernel/io_apic.c:650:
+		    mp_bus_id_to_node[mp_irqs[i].mpc_srcbus] == apic/2 &&
 		                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: arch/i386/kernel/io_apic.c:701:
+			if ((mp_ioapics[apic].mpc_apicid == mp_irqs[i].mpc_dstapic ||
+			    mp_irqs[i].mpc_dstapic == MP_APIC_ALL) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: arch/i386/kernel/io_apic.c:702:
+^I^I    ^I    mp_bus_id_to_node[mp_irqs[i].mpc_srcbus] == apic/2)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: arch/i386/kernel/io_apic.c:702:
+^I^I    ^I    mp_bus_id_to_node[mp_irqs[i].mpc_srcbus] == apic/2)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#65: FILE: arch/i386/kernel/io_apic.c:702:
+		    	    mp_bus_id_to_node[mp_irqs[i].mpc_srcbus] == apic/2)
 		    	                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#74: FILE: arch/i386/kernel/io_apic.c:920:
+	if (mp_bus_id_to_node[bus] != apic/2)
 	                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#75: FILE: arch/i386/kernel/io_apic.c:921:
+		printk(KERN_ERR "bus %d on node %d, apic %d on node %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: arch/i386/kernel/io_apic.c:922:
+		printk(KERN_ERR "bus %d on node %d, apic %d on node %d\n",
+			bus, mp_bus_id_to_node[bus], apic, apic/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#76: FILE: arch/i386/kernel/io_apic.c:922:
+			bus, mp_bus_id_to_node[bus], apic, apic/2);
 			                                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#119: FILE: arch/i386/kernel/io_apic.c:1014:
+	int n, v;
+	for (n = 0; n < MAX_NUMNODES; ++n) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: arch/i386/kernel/io_apic.c:1027:
+	int irq;
+	if (vector < FIRST_DEVICE_VECTOR)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: arch/i386/kernel/io_apic.c:1030:
+		irq = vector_to_irq[numa_node_id()][vector-FIRST_DEVICE_VECTOR];
 		                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#141: FILE: arch/i386/kernel/io_apic.c:1036:
+	vector_to_irq[apic/2][vector-FIRST_DEVICE_VECTOR] = irq;
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: arch/i386/kernel/io_apic.c:1036:
+	vector_to_irq[apic/2][vector-FIRST_DEVICE_VECTOR] = irq;
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: arch/i386/kernel/io_apic.c:1056:
+	static int current_vector = FIRST_DEVICE_VECTOR+1;
 	                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: arch/i386/kernel/io_apic.c:1057:
+	static int current_vector = FIRST_DEVICE_VECTOR+1;
+	if (!irq)

CHECK:BRACES: braces {} should be used on all arms of this statement
#162: FILE: arch/i386/kernel/io_apic.c:1057:
+	if (!irq)
[...]
+	else if (!irq_vector[irq]) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: arch/i386/kernel/io_apic.c:1069:
+#define set_irq_of_vector(a,v,i)	do {} while (0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: arch/i386/kernel/io_apic.c:1069:
+#define set_irq_of_vector(a,v,i)	do {} while (0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: arch/i386/kernel/io_apic.c:1070:
+#define set_irq_of_pin(a,v,i)	do {} while (0)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: arch/i386/kernel/io_apic.c:1070:
+#define set_irq_of_pin(a,v,i)	do {} while (0)
                           ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#259: FILE: arch/i386/kernel/io_apic.c:1619:
+		printk(KERN_INFO "...changing IO-APIC physical APIC ID to %d ...", (int)numaq_ioapic_id);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#259: FILE: arch/i386/kernel/io_apic.c:1619:
+		printk(KERN_INFO "...changing IO-APIC physical APIC ID to %d ...", (int)numaq_ioapic_id);

CHECK:BRACES: Unbalanced braces around else statement
#289: FILE: arch/i386/kernel/io_apic.c:1872:
+			else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/i386/kernel/io_apic.c:1875:
+				printk("init_IO_APIC_traps():"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_IO_APIC_traps', this function's name, in a string
#292: FILE: arch/i386/kernel/io_apic.c:1875:
+				printk("init_IO_APIC_traps():"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: arch/i386/kernel/io_apic.c:1876:
+				printk("init_IO_APIC_traps():"
+					"unhandled irq %d\n", irq);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#317: FILE: arch/i386/kernel/irq.c:72:
+int irq_of_vector(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#317: FILE: arch/i386/kernel/irq.c:72:
+int irq_of_vector(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#342: FILE: arch/i386/kernel/irq.c:336:
+		printk("bad vector %ld, irq %d\n", regs.orig_eax & 0xff, irq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: arch/i386/pci/numa.c:123:
+	int quad = BUS2QUAD(parent->number);
+	child->primary = QUADLOCAL2BUS(quad, buses & 0xFF);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#428: FILE: include/asm-i386/mach-numaq/irq_vectors.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: include/asm-i386/mach-numaq/irq_vectors.h:21:
+ */^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 16 warnings, 12 checks, 419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
