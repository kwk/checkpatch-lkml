WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Put some bounds on the interactive_credit and specified a size beyond which a 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#68: FILE: kernel/sched.c:139:
+#define VARYING_CREDIT(p) \
+	(!(HIGH_CREDIT(p) || LOW_CREDIT(p)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#109: FILE: kernel/sched.c:408:
+			if (LOW_CREDIT(p) &&
[...]
 					sleep_time =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: kernel/sched.c:409:
+			if (LOW_CREDIT(p) &&
 				sleep_time > JIFFIES_TO_NS(task_timeslice(p)))

ERROR:SPACING: space required before the open brace '{'
#118: FILE: kernel/sched.c:417:
+			if (!HIGH_CREDIT(p) && p->activated == -1){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#119: FILE: kernel/sched.c:418:
+				if (p->sleep_avg >=
[...]
+						sleep_time = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#122: FILE: kernel/sched.c:421:
+				else if (p->sleep_avg + sleep_time >=
[...]
+						p->sleep_avg =

ERROR:SPACING: space required before the open brace '{'
#123: FILE: kernel/sched.c:422:
+					JIFFIES_TO_NS(JUST_INTERACTIVE_SLEEP(p))){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: kernel/sched.c:1181:
+#define CAN_MIGRATE_TASK(p,rq,this_cpu)	\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: kernel/sched.c:1181:
+#define CAN_MIGRATE_TASK(p,rq,this_cpu)	\
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#163: FILE: kernel/sched.c:1181:
+#define CAN_MIGRATE_TASK(p,rq,this_cpu)	\
+	((!idle || (NS_TO_JIFFIES(now - (p)->timestamp) > \
+		cache_decay_ticks)) && !task_running(rq, p) && \
 			cpu_isset(this_cpu, (p)->cpus_allowed))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->time_slice > MIN_TIMESLICE'
#179: FILE: kernel/sched.c:1395:
+		if (p->mm && TASK_INTERACTIVE(p) && !((task_timeslice(p) -
+			p->time_slice) % TIMESLICE_GRANULARITY) &&
+			(p->time_slice > MIN_TIMESLICE) &&
 			(p->array == rq->active)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->array == rq->active'
#179: FILE: kernel/sched.c:1395:
+		if (p->mm && TASK_INTERACTIVE(p) && !((task_timeslice(p) -
+			p->time_slice) % TIMESLICE_GRANULARITY) &&
+			(p->time_slice > MIN_TIMESLICE) &&
 			(p->array == rq->active)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 5 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347206.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
