WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
> I agree with you that doing the locking outside would clean some stuff up,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#82: FILE: fs/attr.c:145:
+		if ((mode & (S_ISGID | S_IXGRP)) == (S_ISGID | S_IXGRP)) {

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#82: FILE: fs/attr.c:145:
+		if ((mode & (S_ISGID | S_IXGRP)) == (S_ISGID | S_IXGRP)) {

CHECK:SPACING: No space is necessary after a cast
#342: FILE: fs/open.c:526:
+	if (user != (uid_t) -1) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#359: FILE: fs/open.c:530:
+	if (group != (gid_t) -1) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#364: FILE: fs/open.c:535:
+		newattrs.ia_valid |= ATTR_KILL_SUID|ATTR_KILL_SGID;
 		                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/fs.h:1318:
+extern void remove_suid(struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#388: FILE: include/linux/fs.h:1318:
+extern void remove_suid(struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#405: FILE: mm/filemap.c:2510:
+	unsigned int mode = inode->i_mode & (S_ISUID|S_ISGID|S_IXGRP);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#405: FILE: mm/filemap.c:2510:
+	unsigned int mode = inode->i_mode & (S_ISUID|S_ISGID|S_IXGRP);
 	                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#405: FILE: mm/filemap.c:2510:
+	unsigned int mode = inode->i_mode & (S_ISUID|S_ISGID|S_IXGRP);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#409: FILE: mm/filemap.c:2512:
+	if (!(mode & S_IXGRP))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 6 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465744.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
