WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	           ChangeSet	1.602   -> 1.603  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	fs/reiserfs/fix_node.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# 02/05/30	green@angband.namesys.com	1.603

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# fix_node.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#   reiserfs: tb_buffer_sanity_check panic message text cleanup.  From Josh MacDonald.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#49: 
--- a/fs/reiserfs/fix_node.c	Thu May 30 18:42:23 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#53: FILE: fs/reiserfs/fix_node.c:2093:
     if (atomic_read (&(p_s_bh->b_count)) <= 0) {
[...]
+      reiserfs_panic (p_s_sb, "jmacd-1: tb_buffer_sanity_check(): negative or zero reference counter for buffer %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#56: FILE: fs/reiserfs/fix_node.c:2095:
+      reiserfs_panic (p_s_sb, "jmacd-1: tb_buffer_sanity_check(): negative or zero reference counter for buffer %s[%d] (%b)\n", descr, level, p_s_bh);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: fs/reiserfs/fix_node.c:2095:
+      reiserfs_panic (p_s_sb, "jmacd-1: tb_buffer_sanity_check(): negative or zero reference counter for buffer %s[%d] (%b)\n", descr, level, p_s_bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#56: FILE: fs/reiserfs/fix_node.c:2095:
+      reiserfs_panic (p_s_sb, "jmacd-1: tb_buffer_sanity_check(): negative or zero reference counter for buffer %s[%d] (%b)\n", descr, level, p_s_bh);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#59: FILE: fs/reiserfs/fix_node.c:2098:
     if ( ! buffer_uptodate (p_s_bh) ) {
+      reiserfs_panic (p_s_sb, "jmacd-2: tb_buffer_sanity_check(): buffer is not up to date %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#61: FILE: fs/reiserfs/fix_node.c:2099:
+      reiserfs_panic (p_s_sb, "jmacd-2: tb_buffer_sanity_check(): buffer is not up to date %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/reiserfs/fix_node.c:2099:
+      reiserfs_panic (p_s_sb, "jmacd-2: tb_buffer_sanity_check(): buffer is not up to date %s[%d] (%b)\n", descr, level, p_s_bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#61: FILE: fs/reiserfs/fix_node.c:2099:
+      reiserfs_panic (p_s_sb, "jmacd-2: tb_buffer_sanity_check(): buffer is not up to date %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#64: FILE: fs/reiserfs/fix_node.c:2102:
     if ( ! B_IS_IN_TREE (p_s_bh) ) {
+      reiserfs_panic (p_s_sb, "jmacd-3: tb_buffer_sanity_check(): buffer is not in tree %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#66: FILE: fs/reiserfs/fix_node.c:2103:
+      reiserfs_panic (p_s_sb, "jmacd-3: tb_buffer_sanity_check(): buffer is not in tree %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/reiserfs/fix_node.c:2103:
+      reiserfs_panic (p_s_sb, "jmacd-3: tb_buffer_sanity_check(): buffer is not in tree %s[%d] (%b)\n", descr, level, p_s_bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: fs/reiserfs/fix_node.c:2103:
+      reiserfs_panic (p_s_sb, "jmacd-3: tb_buffer_sanity_check(): buffer is not in tree %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: fs/reiserfs/fix_node.c:2106:
+    if (p_s_bh->b_bdev != p_s_sb->s_bdev) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#73: FILE: fs/reiserfs/fix_node.c:2106:
+    if (p_s_bh->b_bdev != p_s_sb->s_bdev) {
+	reiserfs_panic (p_s_sb, "jmacd-4: tb_buffer_sanity_check(): buffer has wrong device %s[%d] (%b)\n", descr, level, p_s_bh);
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#74: FILE: fs/reiserfs/fix_node.c:2107:
+	reiserfs_panic (p_s_sb, "jmacd-4: tb_buffer_sanity_check(): buffer has wrong device %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: fs/reiserfs/fix_node.c:2107:
+	reiserfs_panic (p_s_sb, "jmacd-4: tb_buffer_sanity_check(): buffer has wrong device %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/reiserfs/fix_node.c:2108:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/reiserfs/fix_node.c:2110:
+    if (p_s_bh->b_size != p_s_sb->s_blocksize) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#77: FILE: fs/reiserfs/fix_node.c:2110:
+    if (p_s_bh->b_size != p_s_sb->s_blocksize) {
+	reiserfs_panic (p_s_sb, "jmacd-5: tb_buffer_sanity_check(): buffer has wrong blocksize %s[%d] (%b)\n", descr, level, p_s_bh);
+    }

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#78: FILE: fs/reiserfs/fix_node.c:2111:
+	reiserfs_panic (p_s_sb, "jmacd-5: tb_buffer_sanity_check(): buffer has wrong blocksize %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#78: FILE: fs/reiserfs/fix_node.c:2111:
+	reiserfs_panic (p_s_sb, "jmacd-5: tb_buffer_sanity_check(): buffer has wrong blocksize %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/reiserfs/fix_node.c:2112:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/reiserfs/fix_node.c:2114:
+    if (p_s_bh->b_blocknr > SB_BLOCK_COUNT(p_s_sb)) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#81: FILE: fs/reiserfs/fix_node.c:2114:
+    if (p_s_bh->b_blocknr > SB_BLOCK_COUNT(p_s_sb)) {
+	reiserfs_panic (p_s_sb, "jmacd-6: tb_buffer_sanity_check(): buffer block number too high %s[%d] (%b)\n", descr, level, p_s_bh);
     }

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#82: FILE: fs/reiserfs/fix_node.c:2115:
+	reiserfs_panic (p_s_sb, "jmacd-6: tb_buffer_sanity_check(): buffer block number too high %s[%d] (%b)\n", descr, level, p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: fs/reiserfs/fix_node.c:2115:
+	reiserfs_panic (p_s_sb, "jmacd-6: tb_buffer_sanity_check(): buffer block number too high %s[%d] (%b)\n", descr, level, p_s_bh);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 41 warnings, 0 checks, 34 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451039.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
