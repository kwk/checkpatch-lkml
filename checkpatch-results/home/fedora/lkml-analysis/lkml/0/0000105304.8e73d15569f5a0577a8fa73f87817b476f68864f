WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#825: FILE: arch/parisc/kernel/pci-dma.c:410:
+static void pa11_dma_unmap_single(struct device *dev, dma_addr_t dma_handle, size_t size, int direction)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#843: FILE: arch/parisc/kernel/pci-dma.c:446:
+static void pa11_dma_unmap_sg(struct device *dev, struct scatterlist *sglist, int nents, int direction)

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#852: FILE: arch/parisc/kernel/pci-dma.c:463:
+static void pa11_dma_sync_single_for_cpu(struct device *dev, dma_addr_t dma_handle, unsigned long offset, size_t size, int direction)

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#861: FILE: arch/parisc/kernel/pci-dma.c:471:
+static void pa11_dma_sync_single_for_device(struct device *dev, dma_addr_t dma_handle, unsigned long offset, size_t size, int direction)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#870: FILE: arch/parisc/kernel/pci-dma.c:479:
+static void pa11_dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sglist, int nents, int direction)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#879: FILE: arch/parisc/kernel/pci-dma.c:489:
+static void pa11_dma_sync_sg_for_device(struct device *dev, struct scatterlist *sglist, int nents, int direction)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: drivers/net/b44.c:117:
+                                                int dir)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: drivers/net/b44.c:117:
+                                                int dir)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: drivers/net/b44.c:127:
+                                             int dir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: drivers/net/b44.c:127:
+                                             int dir)$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1520: FILE: include/asm-arm/dma-mapping.h:152:
+extern dma_addr_t dma_map_single(struct device *,void *, size_t, int);
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1520: FILE: include/asm-arm/dma-mapping.h:152:
+extern dma_addr_t dma_map_single(struct device *,void *, size_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1544: FILE: include/asm-arm/dma-mapping.h:200:
+extern void dma_unmap_single(struct device *, dma_addr_t, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1571: FILE: include/asm-arm/dma-mapping.h:264:
+extern int dma_map_sg(struct device *, struct scatterlist *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1587: FILE: include/asm-arm/dma-mapping.h:287:
+extern void dma_unmap_sg(struct device *, struct scatterlist *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1611: FILE: include/asm-arm/dma-mapping.h:323:
+extern void dma_sync_single_for_cpu(struct device*, dma_addr_t, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1612: FILE: include/asm-arm/dma-mapping.h:324:
+extern void dma_sync_single_for_device(struct device*, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device*' should also have an identifier name
#1612: FILE: include/asm-arm/dma-mapping.h:324:
+extern void dma_sync_single_for_device(struct device*, dma_addr_t, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#1612: FILE: include/asm-arm/dma-mapping.h:324:
+extern void dma_sync_single_for_device(struct device*, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1612: FILE: include/asm-arm/dma-mapping.h:324:
+extern void dma_sync_single_for_device(struct device*, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1612: FILE: include/asm-arm/dma-mapping.h:324:
+extern void dma_sync_single_for_device(struct device*, dma_addr_t, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1640: FILE: include/asm-arm/dma-mapping.h:366:
+extern void dma_sync_sg_for_cpu(struct device*, struct scatterlist*, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1641: FILE: include/asm-arm/dma-mapping.h:367:
+extern void dma_sync_sg_for_device(struct device*, struct scatterlist*, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device*' should also have an identifier name
#1641: FILE: include/asm-arm/dma-mapping.h:367:
+extern void dma_sync_sg_for_device(struct device*, struct scatterlist*, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist*' should also have an identifier name
#1641: FILE: include/asm-arm/dma-mapping.h:367:
+extern void dma_sync_sg_for_device(struct device*, struct scatterlist*, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1641: FILE: include/asm-arm/dma-mapping.h:367:
+extern void dma_sync_sg_for_device(struct device*, struct scatterlist*, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1641: FILE: include/asm-arm/dma-mapping.h:367:
+extern void dma_sync_sg_for_device(struct device*, struct scatterlist*, int, int);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2077: FILE: include/asm-generic/pci-dma-compat.h:35:
+	return dma_map_single(hwdev == NULL ? NULL : &hwdev->dev, ptr, size, direction);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2085: FILE: include/asm-generic/pci-dma-compat.h:42:
+	dma_unmap_single(hwdev == NULL ? NULL : &hwdev->dev, dma_addr, size, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2093: FILE: include/asm-generic/pci-dma-compat.h:49:
+	return dma_map_page(hwdev == NULL ? NULL : &hwdev->dev, page, offset, size, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2101: FILE: include/asm-generic/pci-dma-compat.h:56:
+	dma_unmap_page(hwdev == NULL ? NULL : &hwdev->dev, dma_address, size, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2109: FILE: include/asm-generic/pci-dma-compat.h:63:
+	return dma_map_sg(hwdev == NULL ? NULL : &hwdev->dev, sg, nents, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2117: FILE: include/asm-generic/pci-dma-compat.h:70:
+	dma_unmap_sg(hwdev == NULL ? NULL : &hwdev->dev, sg, nents, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2125: FILE: include/asm-generic/pci-dma-compat.h:77:
+	dma_sync_single_for_cpu(hwdev == NULL ? NULL : &hwdev->dev, dma_handle, size, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2133: FILE: include/asm-generic/pci-dma-compat.h:84:
+	dma_sync_single_for_device(hwdev == NULL ? NULL : &hwdev->dev, dma_handle, size, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2141: FILE: include/asm-generic/pci-dma-compat.h:91:
+	dma_sync_sg_for_cpu(hwdev == NULL ? NULL : &hwdev->dev, sg, nelems, direction);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#2149: FILE: include/asm-generic/pci-dma-compat.h:98:
+	dma_sync_sg_for_device(hwdev == NULL ? NULL : &hwdev->dev, sg, nelems, direction);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2274: FILE: include/asm-ia64/dma-mapping.h:54:
+dma_cache_sync (void *vaddr, size_t size, int dir)

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#2364: FILE: include/asm-parisc/dma-mapping.h:19:
+	void (*dma_sync_single_for_cpu)(struct device *dev, dma_addr_t iova, unsigned long offset, size_t size, int direction);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#2365: FILE: include/asm-parisc/dma-mapping.h:20:
+	void (*dma_sync_single_for_device)(struct device *dev, dma_addr_t iova, unsigned long offset, size_t size, int direction);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2366: FILE: include/asm-parisc/dma-mapping.h:21:
+	void (*dma_sync_sg_for_cpu)(struct device *dev, struct scatterlist *sg, int nelems, int direction);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2367: FILE: include/asm-parisc/dma-mapping.h:22:
+	void (*dma_sync_sg_for_device)(struct device *dev, struct scatterlist *sg, int nelems, int direction);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 21 warnings, 18 checks, 2661 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
