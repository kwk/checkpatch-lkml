WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
Content-Disposition: attachment; filename=sched-fixes-O1-rml-2.4.19-pre7-ac2-1.patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#84: FILE: arch/i386/kernel/i8259.c:474:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/asm-i386/hw_irq.h:152:
+extern void migration_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#231: FILE: include/asm-i386/hw_irq.h:920:
 }
+static inline void set_need_resched(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#233: FILE: include/asm-i386/hw_irq.h:922:
+	current->need_resched =3D 1;
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#238: FILE: include/asm-i386/hw_irq.h:927:
+	current->need_resched =3D 0;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#243: FILE: include/asm-i386/hw_irq.h:932:
+	tsk->need_resched =3D 1;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#248: FILE: include/asm-i386/hw_irq.h:937:
+	tsk->need_resched =3D 0;
 	                  ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#335: FILE: kernel/sched.c:142:
+	spinlock_t frozen;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#360: FILE: kernel/sched.c:162:
+	rq =3D task_rq(p);
 	   ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#362: FILE: kernel/sched.c:164:
+	if (unlikely(rq !=3D task_rq(p))) {
 	                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#371: FILE: kernel/sched.c:170:
 }
+static inline void task_rq_unlock(runqueue_t *rq, unsigned long *flags)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#399: FILE: kernel/sched.c:280:
+	rq =3D task_rq_lock(p, &flags);
 	   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#429: FILE: kernel/sched.c:312:
+static int try_to_wake_up(task_t * p)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: kernel/sched.c:317:
+	rq =3D task_rq_lock(p, &flags);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#461: FILE: kernel/sched.c:336:
+	rq =3D this_rq();
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#507: FILE: kernel/sched.c:504:
+		int logical =3D cpu_logical_map(i);
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#509: FILE: kernel/sched.c:506:
+		rq_src =3D cpu_rq(logical);
 		       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src->nr_running < this_rq->prev_nr_running[logical]'
#510: FILE: kernel/sched.c:507:
+		if (idle || (rq_src->nr_running < this_rq->prev_nr_running[logical]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#515: FILE: kernel/sched.c:510:
+			load =3D this_rq->prev_nr_running[logical];
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: kernel/sched.c:511:
+		this_rq->prev_nr_running[logical] =3D rq_src->nr_running;
 		                                  ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#525: FILE: kernel/sched.c:533:
+	if (busiest->nr_running <=3D nr_running + 1)
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#588: FILE: kernel/sched.c:735:
+need_resched:
             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#589: FILE: kernel/sched.c:736:
+	prev =3D current;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#590: FILE: kernel/sched.c:737:
+	rq =3D this_rq();
 	   ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#607: FILE: kernel/sched.c:792:
+		spin_unlock(&rq->lock);
+	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#607: FILE: kernel/sched.c:792:
+	=09
 	^

WARNING:MEMORY_BARRIER: memory barrier without comment
#615: FILE: kernel/sched.c:799:
+		mb();

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#638: FILE: kernel/sched.c:823:
+static inline void __wake_up_common(wait_queue_head_t *q, unsigned int mod=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#652: FILE: kernel/sched.c:831:
+		curr =3D list_entry(tmp, wait_queue_t, task_list);
 		     ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#660: FILE: kernel/sched.c:834:
+		if ((state & mode) && try_to_wake_up(p) &&
[...]
+				break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: kernel/sched.c:835:
+		if ((state & mode) && try_to_wake_up(p) &&
+			((curr->flags & WQ_FLAG_EXCLUSIVE) && !--nr_exclusive))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#667: FILE: kernel/sched.c:839:
 }
+void __wake_up(wait_queue_head_t *q, unsigned int mode, int nr_exclusive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#686: FILE: kernel/sched.c:842:
+	unsigned long flags;
+	if (unlikely(!q))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#745: FILE: kernel/sched.c:960:
+	rq =3D task_rq_lock(p, &flags);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#772: FILE: kernel/sched.c:1073:
+	rq =3D task_rq_lock(p, &flags);
 	   ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#800: FILE: kernel/sched.c:1108:
+	if (policy !=3D SCHED_OTHER)
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#801: FILE: kernel/sched.c:1109:
+		p->prio =3D (MAX_RT_PRIO - 1) - p->rt_priority;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#801: FILE: kernel/sched.c:1109:
+		p->prio =3D (MAX_RT_PRIO - 1) - p->rt_priority;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#829: FILE: kernel/sched.c:1189:
+	rq =3D this_rq();
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#869: FILE: kernel/sched.c:1232:
+		ret =3D MAX_RT_PRIO - 1;
 		    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#877: FILE: kernel/sched.c:1370:
 }
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#890: FILE: kernel/sched.c:1391:
 }
+/*

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#904: FILE: kernel/sched.c:1406:
+	runqueue_t *idle_rq =3D cpu_rq(cpu), *rq =3D cpu_rq(idle->cpu);
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#904: FILE: kernel/sched.c:1406:
+	runqueue_t *idle_rq =3D cpu_rq(cpu), *rq =3D cpu_rq(idle->cpu);
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#922: FILE: kernel/sched.c:1438:
+		rq->active =3D rq->arrays;
 		           ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#958: FILE: kernel/sched.c:1494:
+typedef struct {

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#979: FILE: kernel/sched.c:1515:
+	new_mask &=3D cpu_online_map;
 	         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#981: FILE: kernel/sched.c:1517:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#983: FILE: kernel/sched.c:1519:
+	rq =3D task_rq_lock(p, &flags);
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#984: FILE: kernel/sched.c:1520:
+	p->cpus_allowed =3D new_mask;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#995: FILE: kernel/sched.c:1531:
+	req.task =3D p;
 	         ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1009: FILE: kernel/sched.c:1545:
+static volatile unsigned long migration_mask;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1012: FILE: kernel/sched.c:1548:
+static struct completion migration_complete
+			=3D COMPLETION_INITIALIZER(migration_complete);

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1012: FILE: kernel/sched.c:1548:
+			=3D COMPLETION_INITIALIZER(migration_complete);
 			^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1014: FILE: kernel/sched.c:1550:
+static int migration_thread(void * unused)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1016: FILE: kernel/sched.c:1552:
+	struct sched_param param =3D { sched_priority: MAX_RT_PRIO - 1 };
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1023: FILE: kernel/sched.c:1559:
+	ret =3D setscheduler(0, SCHED_FIFO, &param);
 	    ^

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1046: FILE: kernel/sched.c:1582:
+		yield();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1048: FILE: kernel/sched.c:1584:
+	current->cpus_allowed =3D 1 << smp_processor_id();
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1049: FILE: kernel/sched.c:1585:
+	rq =3D this_rq();
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1050: FILE: kernel/sched.c:1586:
+	rq->migration_thread =3D current;
 	                     ^

WARNING:REPEATED_WORD: Possible repeated word: 'where'
#1057: FILE: kernel/sched.c:1593:
+	 * where where a timing pattern causes an idle task seeking a

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1086: FILE: kernel/sched.c:1622:
+		head =3D &rq->migration_queue;
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1086: FILE: kernel/sched.c:1622:
+		head =3D &rq->migration_queue;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1087: FILE: kernel/sched.c:1623:
+		current->state =3D TASK_INTERRUPTIBLE;
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1093: FILE: kernel/sched.c:1629:
+		req =3D list_entry(head->next, migration_req_t, list);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1097: FILE: kernel/sched.c:1633:
+		p =3D req->task;
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1098: FILE: kernel/sched.c:1634:
+		cpu_dest =3D __ffs(p->cpus_allowed);
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1099: FILE: kernel/sched.c:1635:
+		rq_dest =3D cpu_rq(cpu_dest);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1101: FILE: kernel/sched.c:1637:
+		cpu_src =3D p->cpu;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1102: FILE: kernel/sched.c:1638:
+		rq_src =3D cpu_rq(cpu_src);
 		       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1106: FILE: kernel/sched.c:1642:
+		if (p->cpu !=3D cpu_src) {
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1111: FILE: kernel/sched.c:1647:
+		if (rq_src =3D=3D rq) {
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1111: FILE: kernel/sched.c:1647:
+		if (rq_src =3D=3D rq) {
 		              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1111: FILE: kernel/sched.c:1647:
+		if (rq_src =3D=3D rq) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1112: FILE: kernel/sched.c:1648:
+			p->cpu =3D cpu_dest;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1132: FILE: kernel/sched.c:1668:
+	orig_cache_decay_ticks =3D cache_decay_ticks;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1133: FILE: kernel/sched.c:1669:
+	cache_decay_ticks =3D 0;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1135: FILE: kernel/sched.c:1671:
+	for (cpu =3D 0; cpu < smp_num_cpus; cpu++)
 	         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: kernel/sched.c:1673:
+		if (kernel_thread(migration_thread, NULL,
+				CLONE_FS | CLONE_FILES | CLONE_SIGNAL) < 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1138: FILE: kernel/sched.c:1674:
+			BUG();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1148: FILE: kernel/sched.c:1684:
+	cache_decay_ticks =3D orig_cache_decay_ticks;
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 11 warnings, 13 checks, 1017 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463080.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
