WARNING:REPEATED_WORD: Possible repeated word: 'Here'
#36: 
Here here is the first stab at having NFS use the CacheFS that is currently

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#95: 
--- 2.6.9-rc3-mm2/include/linux/nfs_fs.h.orig	2004-10-04 09:32:24.883031000 -0400

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: fs/nfs/file.c:251:
+	BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#173: FILE: fs/nfs/file.c:253:
+	if (server->flags & NFS_MOUNT_CACHEFS) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: fs/nfs/file.c:257:
+			dfprintk(PAGECACHE,"NFS: cachefs invalidatepage (0x%p/0x%p/0x%p)\n",
 			                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/nfs/file.c:258:
+			dfprintk(PAGECACHE,"NFS: cachefs invalidatepage (0x%p/0x%p/0x%p)\n",
+				nfsi->cachefs, page, nfsi);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#183: FILE: fs/nfs/file.c:263:
+				BUG_ON(!PageLocked(page));

CHECK:BRACES: Unbalanced braces around else statement
#189: FILE: fs/nfs/file.c:269:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#194: FILE: fs/nfs/file.c:274:
+}
+static int nfs_releasepage(struct page *page, int gfp_flags)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: fs/nfs/file.c:282:
+		dfprintk(PAGECACHE,"NFS: cachefs releasepage (0x%p/0x%p/0x%p)\n",
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: fs/nfs/file.c:283:
+		dfprintk(PAGECACHE,"NFS: cachefs releasepage (0x%p/0x%p/0x%p)\n",
+			nfsi->cachefs, page, nfsi);

CHECK:SPACING: No space is necessary after a cast
#206: FILE: fs/nfs/file.c:286:
+		pageio = (struct cachefs_page *) page->private;

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#211: FILE: fs/nfs/file.c:291:
+		if (pageio)
+			kfree(pageio);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#216: FILE: fs/nfs/file.c:296:
+}
+static int nfs_mkwrite(struct page *page)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: fs/nfs/inode.c:161:
+^I^Idfprintk(PAGECACHE, "NFS: relinquish cookie (0x%p/0x%p)\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: fs/nfs/inode.c:162:
+		dfprintk(PAGECACHE, "NFS: relinquish cookie (0x%p/0x%p)\n", 
+			nfsi, nfsi->cachefs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: fs/nfs/inode.c:482:
+		server->cachefs = cachefs_acquire_cookie(nfs_cache_netfs.primary_index,
+			       &nfs_cache_fh_index_def, server);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!server->cachefs"
#291: FILE: fs/nfs/inode.c:483:
+		if (server->cachefs == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#293: FILE: fs/nfs/inode.c:485:
+			printk(KERN_WARNING "NFS: No CacheFS cookie. Turning CacheFS off!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: fs/nfs/inode.c:487:
+^I^Idfprintk(PAGECACHE,"NFS: cookie (0x%p/0x%p/0x%p)\n", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: fs/nfs/inode.c:487:
+		dfprintk(PAGECACHE,"NFS: cookie (0x%p/0x%p/0x%p)\n", 
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: fs/nfs/inode.c:488:
+		dfprintk(PAGECACHE,"NFS: cookie (0x%p/0x%p/0x%p)\n", 
+			sb, server, server->cachefs);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: fs/nfs/inode.c:601:
+		dfprintk(PAGECACHE,"NFS: zapping cookie (0x%p/0x%p/0x%p)\n",
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/nfs/inode.c:602:
+		dfprintk(PAGECACHE,"NFS: zapping cookie (0x%p/0x%p/0x%p)\n",
+			inode, nfsi, nfsi->cachefs);

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: fs/nfs/inode.c:749:
+		struct nfs_server *server = NFS_SB(sb);
+		if (server->flags & NFS_MOUNT_CACHEFS) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: fs/nfs/inode.c:752:
+^I^I^Idprintk("NFS: fhget new cookie (0x%p/0x%p/0x%p)\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: fs/nfs/inode.c:1070:
+			dfprintk(PAGECACHE,
+				"NFS: revalidation new cookie (0x%p/0x%p/0x%p/0x%p)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#374: FILE: fs/nfs/inode.c:1484:
+		printk(KERN_WARNING "NFS: kernel not compiled with CONFIG_NFS_CACHEFS\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: fs/nfs/inode.c:1524:
+		dfprintk(PAGECACHE,"NFS: killing cookie (0x%p/0x%p/0x%p)\n",
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/nfs/inode.c:1525:
+		dfprintk(PAGECACHE,"NFS: killing cookie (0x%p/0x%p/0x%p)\n",
+			NFS_SB(s), server, server->cachefs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: fs/nfs/inode.c:1854:
+		server->cachefs = cachefs_acquire_cookie(nfs_cache_netfs.primary_index,
+			       &nfs_cache_fh_index_def, server);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!server->cachefs"
#408: FILE: fs/nfs/inode.c:1855:
+		if (server->cachefs == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#410: FILE: fs/nfs/inode.c:1857:
+			printk(KERN_WARNING "NFS: No CacheFS cookie. Turning CacheFS off!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: fs/nfs/inode.c:1859:
+^I^Idfprintk(PAGECACHE,"NFS: nfs4 cookie (0x%p/0x%p/0x%p)\n", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: fs/nfs/inode.c:1859:
+		dfprintk(PAGECACHE,"NFS: nfs4 cookie (0x%p/0x%p/0x%p)\n", 
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: fs/nfs/inode.c:1860:
+		dfprintk(PAGECACHE,"NFS: nfs4 cookie (0x%p/0x%p/0x%p)\n", 
+			s, server, server->cachefs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#466: FILE: fs/nfs/nfs-cachefs.c:1:
+/* nfs-cachefs.c: NFS CacheFS interface

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: fs/nfs/nfs-cachefs.c:12:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#550: FILE: fs/nfs/nfs-cachefs.c:85:
+static const uint8_t nfs_cache_ipv6_wrapper_for_ipv4[12] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#562: FILE: fs/nfs/nfs-cachefs.c:97:
+	const uint8_t *data = entry;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#599: FILE: fs/nfs/nfs-cachefs.c:134:
+	uint8_t *data = entry;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#624: FILE: fs/nfs/nfs-cachefs.c:159:
+	const uint8_t *data = entry;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#629: FILE: fs/nfs/nfs-cachefs.c:164:
+	if (memcmp(data, &nfsi->fh, sizeof(nfsi->fh)) == 0) {
+

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#630: FILE: fs/nfs/nfs-cachefs.c:165:
+		/* check the auxilliary data matches (if any) */
 		             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#649: FILE: fs/nfs/nfs-cachefs.c:184:
+	uint8_t *data = entry;

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#654: FILE: fs/nfs/nfs-cachefs.c:189:
+	/* just clear the auxilliary data for now */
 	                  ^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#662: FILE: fs/nfs/nfs-cachefs.h:1:
+/* nfs-cachefs.h: NFS CacheFS interface definitions

ERROR:TRAILING_WHITESPACE: trailing whitespace
#721: FILE: fs/nfs/read.c:110:
+^Idprintk("NFS: readpage_to_cachefs(0x%p/0x%p/0x%p/%d)\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: fs/nfs/read.c:114:
+^Iret = cachefs_write_page(NFS_I(inode)->cachefs, page, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: fs/nfs/read.c:115:
+	ret = cachefs_write_page(NFS_I(inode)->cachefs, page, 
+		nfs_readpage_to_cachefs_complete, NULL, GFP_KERNEL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#739: FILE: fs/nfs/read.c:128:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#743: FILE: fs/nfs/read.c:132:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: fs/nfs/read.c:250:
+^Iif ((NFS_SERVER(d_inode)->flags & NFS_MOUNT_CACHEFS) && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: fs/nfs/read.c:251:
+	if ((NFS_SERVER(d_inode)->flags & NFS_MOUNT_CACHEFS) && 
+			PageUptodate(req->wb_page))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#780: FILE: fs/nfs/read.c:552:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: fs/nfs/read.c:560:
+^Idprintk("NFS: readpage_from_cachefs_complete (0x%p/0x%p/0x%p/%d)\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: fs/nfs/read.c:577:
+^Idprintk("NFS: readpage_from_cachefs(0x%p/0x%p/0x%p)\n", $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#822: FILE: fs/nfs/read.c:594:
+		BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: fs/nfs/read.c:595:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#868: FILE: fs/nfs/read.c:687:
+		if (error == 0) {
+			return error;
+		}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#891: FILE: fs/nfs/write.c:284:
+}
+static inline void

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: fs/nfs/write.c:289:
+^Idprintk("NFS: writepage_to_cachefs (0x%p/0x%p/0x%p)\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: fs/nfs/write.c:293:
+	ret = cachefs_write_page(NFS_I(inode)->cachefs, page,
+		nfs_writepage_to_cachefs_complete, NULL, GFP_KERNEL);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#901: FILE: fs/nfs/write.c:294:
+	if (ret != 0 ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#910: FILE: fs/nfs/write.c:303:
+	BUG();

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#943: FILE: fs/Kconfig:1485:
+config NFS_CACHEFS
+	bool "Provide NFS client caching support through CacheFS"
+	depends on NFS_FS && CACHEFS && EXPERIMENTAL
+	help
+		Say Y here if you want NFS data to be cached locally on disc through
+		the CacheFS filesystem.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 18 warnings, 30 checks, 800 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
