WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#32: 
 Signed-off-by: Trond Myklebust <trond.myklebust@fys.uio.no>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#159: FILE: include/linux/fs.h:630:
+	void (*fl_copy_lock)(struct file_lock *, struct file_lock *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#159: FILE: include/linux/fs.h:630:
+	void (*fl_copy_lock)(struct file_lock *, struct file_lock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#160: FILE: include/linux/fs.h:631:
+	void (*fl_release_private)(struct file_lock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#164: FILE: include/linux/fs.h:635:
+	int (*fl_compare_owner)(struct file_lock *, struct file_lock *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_lock *' should also have an identifier name
#164: FILE: include/linux/fs.h:635:
+	int (*fl_compare_owner)(struct file_lock *, struct file_lock *);

WARNING:CONST_STRUCT: struct file_lock_operations should normally be const
#174: FILE: include/linux/fs.h:661:
+	struct file_lock_operations *fl_ops;	/* Callbacks for filesystems */

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct lock_manager_operations should normally be const
#175: FILE: include/linux/fs.h:662:
+	struct lock_manager_operations *fl_lmops;	/* Callbacks for lockmanagers */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 0 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
