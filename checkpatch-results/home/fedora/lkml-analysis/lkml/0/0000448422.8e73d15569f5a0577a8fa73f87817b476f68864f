WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	           ChangeSet	1.628   -> 1.629  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	 include/linux/rtc.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	drivers/char/Config.in	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	drivers/char/Config.help	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	               (new)	        -> 1.1     drivers/char/genrtc.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	               (new)	        -> 1.1     include/asm-ppc/rtc.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# 02/07/09	trini@bill-the-cat.bloom.county	1.629

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# Add in the genrtc driver.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#63: 
--- a/drivers/char/Config.help	Tue Jul  9 13:02:51 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'automaticaly' may be misspelled - perhaps 'automatically'?
#86: FILE: drivers/char/Config.help:1078:
+  module automaticaly add 'alias char-major-10-135 genrtc' to your
          ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/char/Config.in:192:
+   tristate 'Generic /dev/rtc emulation' CONFIG_GEN_RTC      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/char/genrtc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#168: FILE: drivers/char/genrtc.c:52:
+#include <asm/uaccess.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/char/genrtc.c:66:
+static int gen_rtc_ioctl(struct inode *inode, struct file *file,
+		     unsigned int cmd, unsigned long arg);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#195: FILE: drivers/char/genrtc.c:79:
+unsigned char days_in_mo[] =
+{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#207: FILE: drivers/char/genrtc.c:91:
+void gen_rtc_timer(unsigned long data);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#209: FILE: drivers/char/genrtc.c:93:
+static volatile int stask_active;              /* schedule_task */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#210: FILE: drivers/char/genrtc.c:94:
+static volatile int ttask_active;              /* timer_task */

WARNING:TYPO_SPELLING: 'posible' may be misspelled - perhaps 'possible'?
#215: FILE: drivers/char/genrtc.c:99:
+ * Routine to poll RTC seconds field for change as often as posible,
                                                             ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/char/genrtc.c:105:
+^I$

ERROR:SPACING: space required before the open brace '{'
#227: FILE: drivers/char/genrtc.c:111:
+	if (oldsecs != tmp){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#227: FILE: drivers/char/genrtc.c:111:
+	if (oldsecs != tmp){
[...]
+	} else if (schedule_task(&genrtc_task) == 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#231: FILE: drivers/char/genrtc.c:115:
+		timer_task.expires = jiffies + HZ - (HZ/10);
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#232: FILE: drivers/char/genrtc.c:116:
+		tt_exp=timer_task.expires;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#233: FILE: drivers/char/genrtc.c:117:
+		ttask_active=1;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#234: FILE: drivers/char/genrtc.c:118:
+		stask_active=0;
 		            ^

WARNING:SPACING: space prohibited before semicolon
#244: FILE: drivers/char/genrtc.c:128:
+	lostint = get_rtc_ss() - oldsecs ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/char/genrtc.c:129:
+^Iif (lostint<0) $

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#245: FILE: drivers/char/genrtc.c:129:
+	if (lostint<0) 
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: drivers/char/genrtc.c:131:
+	if (jiffies-tt_exp>1)
 	           ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#247: FILE: drivers/char/genrtc.c:131:
+	if (jiffies-tt_exp>1)
 	                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: drivers/char/genrtc.c:132:
+		printk("genrtc: timer task delayed by %ld jiffies\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: drivers/char/genrtc.c:133:
+		       jiffies-tt_exp);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: drivers/char/genrtc.c:134:
+	ttask_active=0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#251: FILE: drivers/char/genrtc.c:135:
+	stask_active=1;
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/char/genrtc.c:140:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: drivers/char/genrtc.c:151:
+	 *	of rtc_irq_data.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open brace '{'
#273: FILE: drivers/char/genrtc.c:157:
+	if (lostint){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: drivers/char/genrtc.c:158:
+		printk("genrtc: system delaying clock ticks?\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: drivers/char/genrtc.c:160:
+		gen_rtc_irq_data += ((lostint-1)<<8);
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: drivers/char/genrtc.c:160:
+		gen_rtc_irq_data += ((lostint-1)<<8);
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/char/genrtc.c:171:
+static ssize_t gen_rtc_read(struct file *file, char *buf,
+			size_t count, loff_t *ppos)

ERROR:SPACING: space required before the open brace '{'
#343: FILE: drivers/char/genrtc.c:227:
+	if (ttask_active){

ERROR:SPACING: space prohibited after that open parenthesis '('
#360: FILE: drivers/char/genrtc.c:244:
+	if ( !irq_active ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#360: FILE: drivers/char/genrtc.c:244:
+	if ( !irq_active ) {

ERROR:SPACING: space required before the open brace '{'
#369: FILE: drivers/char/genrtc.c:253:
+		if (schedule_task(&genrtc_task) == 0){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#369: FILE: drivers/char/genrtc.c:253:
+		if (schedule_task(&genrtc_task) == 0){
+			stask_active = 0;
+		}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#388: FILE: drivers/char/genrtc.c:272:
+	switch (cmd) {
+

WARNING:TABSTOP: Statements should start on a tabstop
#390: FILE: drivers/char/genrtc.c:274:
+	    if (get_rtc_pll(&pll))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#390: FILE: drivers/char/genrtc.c:274:
+	    if (get_rtc_pll(&pll))
+	 	    return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/char/genrtc.c:275:
+^I ^I    return -EINVAL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#391: FILE: drivers/char/genrtc.c:275:
+^I ^I    return -EINVAL;$

WARNING:TABSTOP: Statements should start on a tabstop
#392: FILE: drivers/char/genrtc.c:276:
+	    else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#392: FILE: drivers/char/genrtc.c:276:
+	    else
+		    return copy_to_user((void *)arg, &pll, sizeof pll) ? -EFAULT : 0;

WARNING:TABSTOP: Statements should start on a tabstop
#393: FILE: drivers/char/genrtc.c:277:
+		    return copy_to_user((void *)arg, &pll, sizeof pll) ? -EFAULT : 0;

WARNING:SIZEOF_PARENTHESIS: sizeof pll should be sizeof(pll)
#393: FILE: drivers/char/genrtc.c:277:
+		    return copy_to_user((void *)arg, &pll, sizeof pll) ? -EFAULT : 0;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#398: FILE: drivers/char/genrtc.c:282:
+		if (copy_from_user(&pll, (struct rtc_pll_info*)arg,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#401: FILE: drivers/char/genrtc.c:285:
+	    return set_rtc_pll(&pll);

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/char/genrtc.c:292:
+^I        return gen_set_rtc_irq_bit(RTC_UIE);$

WARNING:TABSTOP: Statements should start on a tabstop
#418: FILE: drivers/char/genrtc.c:302:
+	    {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wtime.tm_mday < 1'
#433: FILE: drivers/char/genrtc.c:317:
+		if ((wtime.tm_mon < 0 || wtime.tm_mon > 11) || (wtime.tm_mday < 1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wtime.tm_mon == 1'
#436: FILE: drivers/char/genrtc.c:320:
+		if (wtime.tm_mday < 0 || wtime.tm_mday >
+		    (days_in_mo[wtime.tm_mon] + ((wtime.tm_mon == 1) && leap_yr)))

WARNING:TABSTOP: Statements should start on a tabstop
#447: FILE: drivers/char/genrtc.c:331:
+	    }

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#480: FILE: drivers/char/genrtc.c:364:
+	gen_clear_rtc_irq_bit(RTC_PIE|RTC_AIE|RTC_UIE);
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#480: FILE: drivers/char/genrtc.c:364:
+	gen_clear_rtc_irq_bit(RTC_PIE|RTC_AIE|RTC_UIE);
 	                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: drivers/char/genrtc.c:375:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#496: FILE: drivers/char/genrtc.c:380:
+static struct file_operations gen_rtc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#497: FILE: drivers/char/genrtc.c:381:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#499: FILE: drivers/char/genrtc.c:383:
+	read:		gen_rtc_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#499: FILE: drivers/char/genrtc.c:383:
+	read:		gen_rtc_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#500: FILE: drivers/char/genrtc.c:384:
+	poll:		gen_rtc_poll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#500: FILE: drivers/char/genrtc.c:384:
+	poll:		gen_rtc_poll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#502: FILE: drivers/char/genrtc.c:386:
+	ioctl:		gen_rtc_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#502: FILE: drivers/char/genrtc.c:386:
+	ioctl:		gen_rtc_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#503: FILE: drivers/char/genrtc.c:387:
+	open:		gen_rtc_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#503: FILE: drivers/char/genrtc.c:387:
+	open:		gen_rtc_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#504: FILE: drivers/char/genrtc.c:388:
+	release:	gen_rtc_release
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#504: FILE: drivers/char/genrtc.c:388:
+	release:	gen_rtc_release

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#508: FILE: drivers/char/genrtc.c:392:
+static struct miscdevice rtc_gen_dev =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#516: FILE: drivers/char/genrtc.c:400:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#517: FILE: drivers/char/genrtc.c:401:
+		printk(KERN_INFO "Generic RTC Driver v%s\n", RTC_VERSION);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#520: FILE: drivers/char/genrtc.c:404:
+	create_proc_read_entry ("driver/rtc", 0, 0, gen_rtc_read_proc, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: drivers/char/genrtc.c:411:
+	remove_proc_entry ("driver/rtc", NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#535: FILE: drivers/char/genrtc.c:419:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#544: FILE: drivers/char/genrtc.c:428:
+	unsigned tmp;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: drivers/char/genrtc.c:442:
+	tm.tm_hour=0;tm.tm_min=0;tm.tm_sec=0;
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#558: FILE: drivers/char/genrtc.c:442:
+	tm.tm_hour=0;tm.tm_min=0;tm.tm_sec=0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: drivers/char/genrtc.c:442:
+	tm.tm_hour=0;tm.tm_min=0;tm.tm_sec=0;
 	                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#558: FILE: drivers/char/genrtc.c:442:
+	tm.tm_hour=0;tm.tm_min=0;tm.tm_sec=0;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: drivers/char/genrtc.c:442:
+	tm.tm_hour=0;tm.tm_min=0;tm.tm_sec=0;
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#576: FILE: drivers/char/genrtc.c:460:
+	tmp= RTC_24H ;
 	   ^

WARNING:SPACING: space prohibited before semicolon
#576: FILE: drivers/char/genrtc.c:460:
+	tmp= RTC_24H ;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#595: FILE: drivers/char/genrtc.c:479:
+		     "okay" );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#596: FILE: drivers/char/genrtc.c:480:
+	if (!get_rtc_pll(&pll))
+	    p += sprintf(p,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: drivers/char/genrtc.c:500:
+	int len = gen_rtc_proc_output (page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: drivers/char/genrtc.c:501:
+        if (len <= off+count) *eof = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/char/genrtc.c:501:
+        if (len <= off+count) *eof = 1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#617: FILE: drivers/char/genrtc.c:501:
+        if (len <= off+count) *eof = 1;
                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#617: FILE: drivers/char/genrtc.c:501:
+        if (len <= off+count) *eof = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: drivers/char/genrtc.c:504:
+        if (len>count) len = count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/char/genrtc.c:504:
+        if (len>count) len = count;$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#620: FILE: drivers/char/genrtc.c:504:
+        if (len>count) len = count;
                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#620: FILE: drivers/char/genrtc.c:504:
+        if (len>count) len = count;

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: drivers/char/genrtc.c:505:
+        if (len<0) len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/char/genrtc.c:505:
+        if (len<0) len = 0;$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#621: FILE: drivers/char/genrtc.c:505:
+        if (len<0) len = 0;
                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#621: FILE: drivers/char/genrtc.c:505:
+        if (len<0) len = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#625: FILE: drivers/char/genrtc.c:509:
+
+

WARNING:LONG_LINE_COMMENT: line length of 178 exceeds 100 columns
#631: FILE: drivers/char/genrtc.c:515:
+ * compile-command: "m68k-linux-gcc -D__KERNEL__ -I../../include -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer -pipe -fno-strength-reduce -ffixed-a2 -c -o genrtc.o genrtc.c"

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: include/asm-ppc/rtc.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#639: FILE: include/asm-ppc/rtc.h:1:
+/* 

WARNING:TYPO_SPELLING: 'inclue' may be misspelled - perhaps 'include'?
#640: FILE: include/asm-ppc/rtc.h:2:
+ * inclue/asm-ppc/rtc.h
    ^^^^^^

WARNING:TYPO_SPELLING: 'Dyas' may be misspelled - perhaps 'Dryas'?
#653: FILE: include/asm-ppc/rtc.h:15:
+ * Copyright (C) 1996 Thomas K. Dyas (tdyas@eden.rutgers.edu)
                                 ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#676: FILE: include/asm-ppc/rtc.h:38:
+extern void gen_rtc_interrupt(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#676: FILE: include/asm-ppc/rtc.h:38:
+extern void gen_rtc_interrupt(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ppc_md.get_rtc_time)
#689: FILE: include/asm-ppc/rtc.h:51:
+		nowtime = (ppc_md.get_rtc_time)();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#704: FILE: include/asm-ppc/rtc.h:66:
+		nowtime = mktime(time->tm_year+1900, time->tm_mon+1,
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#704: FILE: include/asm-ppc/rtc.h:66:
+		nowtime = mktime(time->tm_year+1900, time->tm_mon+1,
 		                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: include/asm-ppc/rtc.h:67:
+		nowtime = mktime(time->tm_year+1900, time->tm_mon+1,
+				time->tm_mday, time->tm_hour, time->tm_min,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ppc_md.set_rtc_time)
#708: FILE: include/asm-ppc/rtc.h:70:
+		(ppc_md.set_rtc_time)(nowtime);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#724: FILE: include/asm-ppc/rtc.h:86:
+}
+static inline int set_rtc_pll(struct pll_info *pll)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: include/linux/rtc.h:53:
+ */ $

WARNING:TYPO_SPELLING: 'corection' may be misspelled - perhaps 'correction'?
#756: FILE: include/linux/rtc.h:60:
+	int pll_posmult;    /* factor for +ve corection */
 	                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'corection' may be misspelled - perhaps 'correction'?
#757: FILE: include/linux/rtc.h:61:
+	int pll_negmult;    /* factor for -ve corection */
 	                                      ^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 64 warnings, 25 checks, 694 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000448422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
