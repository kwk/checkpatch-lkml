CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#40: 
; Copyright (C) 2003-2005 Herbert Pötzl <herbert@13thfloor.at>
                                   ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -NurpP --minimal linux-2.6.11-rc4-bme0.06-bm0.01-at0.01-cc0.01/fs/namei.c linux-2.6.11-rc4-bme0.06-bm0.01-at0.01-cc0.01-co0.01/fs/namei.c

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#64: FILE: fs/namei.c:1171:
+static inline int mnt_may_create(struct vfsmount *mnt, struct inode *dir, struct dentry *child) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/namei.c:1172:
+       if (child->d_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#65: FILE: fs/namei.c:1172:
+       if (child->d_inode)
+               return -EEXIST;

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: fs/namei.c:1173:
+               return -EEXIST;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/namei.c:1173:
+               return -EEXIST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/namei.c:1174:
+       if (IS_DEADDIR(dir))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#67: FILE: fs/namei.c:1174:
+       if (IS_DEADDIR(dir))
+               return -ENOENT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: fs/namei.c:1175:
+               return -ENOENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: fs/namei.c:1175:
+               return -ENOENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/namei.c:1176:
+       if (MNT_IS_RDONLY(mnt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#69: FILE: fs/namei.c:1176:
+       if (MNT_IS_RDONLY(mnt))
+               return -EROFS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: fs/namei.c:1177:
+               return -EROFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: fs/namei.c:1177:
+               return -EROFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs/namei.c:1178:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#74: FILE: fs/namei.c:1181:
+static inline int mnt_may_unlink(struct vfsmount *mnt, struct inode *dir, struct dentry *child) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/namei.c:1182:
+       if (!child->d_inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#75: FILE: fs/namei.c:1182:
+       if (!child->d_inode)
+               return -ENOENT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: fs/namei.c:1183:
+               return -ENOENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/namei.c:1183:
+               return -ENOENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/namei.c:1184:
+       if (MNT_IS_RDONLY(mnt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#77: FILE: fs/namei.c:1184:
+       if (MNT_IS_RDONLY(mnt))
+               return -EROFS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: fs/namei.c:1185:
+               return -EROFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: fs/namei.c:1185:
+               return -EROFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/namei.c:1186:
+       return 0;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#125: FILE: fs/namei.c:1789:
+		error = mnt_may_unlink(nd.mnt, nd.dentry->d_inode, dentry);
 		                       ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#125: FILE: fs/namei.c:1789:
+		error = mnt_may_unlink(nd.mnt, nd.dentry->d_inode, dentry);
 		                               ^^

WARNING:INDENTED_LABEL: labels should not be indented
#129: FILE: fs/namei.c:1793:
+	exit2:

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/namei.c:1865:
+		error = mnt_may_unlink(nd.mnt, nd.dentry->d_inode, dentry);
 		                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/namei.c:1865:
+		error = mnt_may_unlink(nd.mnt, nd.dentry->d_inode, dentry);
 		                               ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret > 0'
#151: FILE: fs/pipe.c:337:
+	if ((ret > 0) && !MNT_IS_RDONLY(filp->f_vfsmnt))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 23 warnings, 2 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000205499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
