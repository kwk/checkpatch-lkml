WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
> > > sorry for the intrusion. I noticed iostats didn't display statistics for

WARNING:TYPO_SPELLING: 'constrollers' may be misspelled - perhaps 'controllers'?
#25: 
> > > devices on Mylex RAID constrollers. Det statistics are completely
                            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'runing' may be misspelled - perhaps 'running'?
#32: 
> > i have been runing with 2.4.x kernel with this number
                ^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: block/ll_rw_blk.c:190:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: block/ll_rw_blk.c:400:
+^Istruct disk_stat * new;^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: block/ll_rw_blk.c:400:
+	struct disk_stat * new;	

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: block/ll_rw_blk.c:422:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: block/ll_rw_blk.c:423:
+^I * At last, allocate and initialize the statistics $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct disk_stat)...)
#90: FILE: block/ll_rw_blk.c:425:
+	new = kmalloc(sizeof(struct disk_stat), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#91: FILE: block/ll_rw_blk.c:426:
+	if (new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#92: FILE: block/ll_rw_blk.c:427:
+		printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#92: FILE: block/ll_rw_blk.c:427:
+	if (new == NULL)
+		printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: block/ll_rw_blk.c:515:
+inline void drive_stat_acct (struct disk_stat * ds, int rw,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#104: FILE: block/ll_rw_blk.c:515:
+inline void drive_stat_acct (struct disk_stat * ds, int rw,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ds"
#112: FILE: block/ll_rw_blk.c:518:
+	if (ds == NULL)

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#169: FILE: ide/ide.c:1454:
+	if (DEVICE_NR(dev) >= MAX_DRIVES)
+		 return NULL;

WARNING:TABSTOP: Statements should start on a tabstop
#170: FILE: ide/ide.c:1455:
+		 return NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: ide/ide.c:1456:
+^Ielse $

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: md/md.c:3305:
+		request_queue_t * rq = blk_get_queue(rdev->dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: md/md.c:3306:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: md/md.c:3309:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->dk_stat == NULL'
#196: FILE: md/md.c:3310:
+		if (rq == NULL || (rq->dk_stat == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#196: FILE: md/md.c:3310:
+		if (rq == NULL || (rq->dk_stat == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq->dk_stat"
#196: FILE: md/md.c:3310:
+		if (rq == NULL || (rq->dk_stat == NULL))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: md/md.c:3312:
+^I^Icurr_events = rq->dk_stat->dk_drive_rblk + $

WARNING:SPACING: space prohibited before semicolon
#199: FILE: md/md.c:3313:
+			rq->dk_stat->dk_drive_wblk ;

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: proc/proc_misc.c:237:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: proc/proc_misc.c:237:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: proc/proc_misc.c:238:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,
+					int major, int disk)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: proc/proc_misc.c:304:
+		struct disk_stat * ds;

ERROR:SPACING: space required before the open brace '{'
#271: FILE: proc/proc_misc.c:306:
+		if (!(blk_dev[major].queue)){

ERROR:SPACING: space required after that close brace '}'
#275: FILE: proc/proc_misc.c:310:
+		}else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: proc/proc_misc.c:311:
+			request_queue_t * q;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: proc/proc_misc.c:312:
+			struct gendisk * hd = get_gendisk(MKDEV(major,0));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: proc/proc_misc.c:312:
+			struct gendisk * hd = get_gendisk(MKDEV(major,0));
 			                                             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#278: FILE: proc/proc_misc.c:313:
+			int max_disk = MINORMASK>>hd->minor_shift;
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#281: FILE: proc/proc_misc.c:316:
+				q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));
 				                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#281: FILE: proc/proc_misc.c:316:
+				q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));
 				                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#287: FILE: proc/proc_misc.c:322:
+				len = show_disk_stat(page, len, ds, major,disk);
 				                                         ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: missing space after struct definition
#303: FILE: linux/blkdev.h:74:
+struct disk_stat{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#320: FILE: linux/blkdev.h:135:
+	struct disk_stat * dk_stat;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct disk_stat *' should also have an identifier name
#329: FILE: linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: linux/blkdev.h:201:
+extern void drive_stat_acct (struct disk_stat *, int rw,
 					unsigned long nr_sectors, int new_io);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 18 warnings, 11 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
