WARNING:TYPO_SPELLING: 'completly' may be misspelled - perhaps 'completely'?
#31: 
> Why?  I'd prefer to completly get rid of the SLAB_ flags instead.
                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#155: 
diff -urpN linux-2.5.61/Documentation/DMA-mapping.txt slab-2.5.61/Documentation/DMA-mapping.txt

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: arch/arm/common/sa1111-pcipool.c:113:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: arch/arm/common/sa1111-pcipool.c:113:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SIZEOF_PARENTHESIS: sizeof *retval should be sizeof(*retval)
#201: FILE: arch/arm/common/sa1111-pcipool.c:113:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/block/DAC960.c:254:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, GFP_ATOMIC,$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherCPU>
#339: FILE: drivers/block/DAC960.c:254:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, GFP_ATOMIC,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherPool>
#339: FILE: drivers/block/DAC960.c:254:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, GFP_ATOMIC,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/block/DAC960.c:255:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, GFP_ATOMIC,
 							&ScatterGatherDMA);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#344: FILE: drivers/block/DAC960.c:259:
       if (RequestSensePool != NULL) {
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/block/DAC960.c:260:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: drivers/block/DAC960.c:260:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/block/DAC960.c:260:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseCPU>
#346: FILE: drivers/block/DAC960.c:260:
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,

CHECK:CAMELCASE: Avoid CamelCase: <RequestSensePool>
#346: FILE: drivers/block/DAC960.c:260:
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/block/DAC960.c:261:
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, GFP_ATOMIC,
 						&RequestSenseDMA);

WARNING:SIZEOF_PARENTHESIS: sizeof *pl should be sizeof(*pl)
#370: FILE: drivers/ieee1394/amdtp.c:561:
+	pl = kmalloc(sizeof *pl, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *b should be sizeof(*b)
#389: FILE: drivers/ieee1394/amdtp.c:600:
+	b = kmalloc(sizeof *b + size, GFP_KERNEL);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#398: FILE: drivers/ieee1394/amdtp.c:837:
+					 max_packet_size, 0, 0 ,GFP_KERNEL);
 					                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#398: FILE: drivers/ieee1394/amdtp.c:837:
+					 max_packet_size, 0, 0 ,GFP_KERNEL);
 					                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/ieee1394/amdtp.c:1009:
+        s = kmalloc(sizeof(struct stream), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/ieee1394/amdtp.c:1009:
+        s = kmalloc(sizeof(struct stream), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct stream)...)
#407: FILE: drivers/ieee1394/amdtp.c:1009:
+        s = kmalloc(sizeof(struct stream), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#416: FILE: drivers/ieee1394/amdtp.c:1024:
+					     16, 0 ,GFP_KERNEL);
 					           ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#416: FILE: drivers/ieee1394/amdtp.c:1024:
+					     16, 0 ,GFP_KERNEL);
 					           ^

WARNING:SIZEOF_PARENTHESIS: sizeof *ah should be sizeof(*ah)
#425: FILE: drivers/ieee1394/amdtp.c:1215:
+	ah = kmalloc(sizeof *ah, in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *ch should be sizeof(*ch)
#437: FILE: drivers/ieee1394/cmp.c:162:
+	ch = kmalloc(sizeof *ch, in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/ieee1394/hosts.c:126:
+        h = kmalloc(sizeof(struct hpsb_host) + extra, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/ieee1394/hosts.c:126:
+        h = kmalloc(sizeof(struct hpsb_host) + extra, GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*h)...) over kmalloc(sizeof(struct hpsb_host)...)
#461: FILE: drivers/ieee1394/hosts.c:126:
+        h = kmalloc(sizeof(struct hpsb_host) + extra, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: drivers/ieee1394/nodemgr.c:1328:
+	hi = kmalloc(sizeof (struct host_info), in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hi)...) over kmalloc(sizeof (struct host_info)...)
#485: FILE: drivers/ieee1394/nodemgr.c:1328:
+	hi = kmalloc(sizeof (struct host_info), in_interrupt() ? GFP_ATOMIC : GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#524: FILE: drivers/ieee1394/ohci1394.c:2415:
+		d->prg_cpu[i] = pci_pool_alloc(d->prg_pool, GFP_KERNEL, d->prg_bus+i);
 		                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#538: FILE: drivers/ieee1394/ohci1394.c:2510:
+		d->prg_cpu[i] = pci_pool_alloc(d->prg_pool, GFP_KERNEL, d->prg_bus+i);
 		                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/ieee1394/pcilynx.c:868:
+        md = (struct memdata *)kmalloc(sizeof(struct memdata), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/ieee1394/pcilynx.c:868:
+        md = (struct memdata *)kmalloc(sizeof(struct memdata), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#550: FILE: drivers/ieee1394/pcilynx.c:868:
+        md = (struct memdata *)kmalloc(sizeof(struct memdata), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*md)...) over kmalloc(sizeof(struct memdata)...)
#550: FILE: drivers/ieee1394/pcilynx.c:868:
+        md = (struct memdata *)kmalloc(sizeof(struct memdata), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: drivers/ieee1394/raw1394.c:119:
+        return __alloc_pending_request(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/ieee1394/raw1394.c:119:
+        return __alloc_pending_request(GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: drivers/ieee1394/raw1394.c:275:
+                                req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/ieee1394/raw1394.c:275:
+                                req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/ieee1394/raw1394.c:323:
+                        req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/ieee1394/raw1394.c:323:
+                        req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: drivers/ieee1394/raw1394.c:328:
+                                              + length, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/ieee1394/raw1394.c:328:
+                                              + length, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: drivers/ieee1394/raw1394.c:392:
+                        req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/ieee1394/raw1394.c:392:
+                        req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: drivers/ieee1394/raw1394.c:397:
+                                              + length, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/ieee1394/raw1394.c:397:
+                                              + length, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/ieee1394/raw1394.c:523:
+                              GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/ieee1394/raw1394.c:523:
+                              GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: drivers/ieee1394/raw1394.c:945:
+                req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/ieee1394/raw1394.c:945:
+                req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: drivers/ieee1394/raw1394.c:960:
+                req->data = kmalloc(size, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/ieee1394/raw1394.c:960:
+                req->data = kmalloc(size, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: drivers/ieee1394/raw1394.c:1082:
+                req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/ieee1394/raw1394.c:1082:
+                req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: drivers/ieee1394/raw1394.c:1092:
+                req->data = kmalloc(size, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/ieee1394/raw1394.c:1092:
+                req->data = kmalloc(size, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: drivers/ieee1394/raw1394.c:1258:
+                req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/ieee1394/raw1394.c:1258:
+                req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/ieee1394/raw1394.c:1268:
+                req->data = kmalloc(size, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/ieee1394/raw1394.c:1268:
+                req->data = kmalloc(size, GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/ieee1394/raw1394.c:1465:
+                req = __alloc_pending_request(GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/ieee1394/raw1394.c:1465:
+                req = __alloc_pending_request(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: drivers/ieee1394/raw1394.c:1475:
+                req->data = kmalloc(size, GFP_ATOMIC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/ieee1394/raw1394.c:1475:
+                req->data = kmalloc(size, GFP_ATOMIC);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/ieee1394/raw1394.c:1574:
+        addr = (struct arm_addr *)kmalloc(sizeof(struct arm_addr), GFP_KERNEL); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: drivers/ieee1394/raw1394.c:1574:
+        addr = (struct arm_addr *)kmalloc(sizeof(struct arm_addr), GFP_KERNEL); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/ieee1394/raw1394.c:1574:
+        addr = (struct arm_addr *)kmalloc(sizeof(struct arm_addr), GFP_KERNEL); $

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#700: FILE: drivers/ieee1394/raw1394.c:1574:
+        addr = (struct arm_addr *)kmalloc(sizeof(struct arm_addr), GFP_KERNEL); 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*addr)...) over kmalloc(sizeof(struct arm_addr)...)
#700: FILE: drivers/ieee1394/raw1394.c:1574:
+        addr = (struct arm_addr *)kmalloc(sizeof(struct arm_addr), GFP_KERNEL); 

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: drivers/ieee1394/raw1394.c:1580:
+        addr->addr_space_buffer = (u8 *)kmalloc(req->req.length,GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/ieee1394/raw1394.c:1580:
+        addr->addr_space_buffer = (u8 *)kmalloc(req->req.length,GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#707: FILE: drivers/ieee1394/raw1394.c:1580:
+        addr->addr_space_buffer = (u8 *)kmalloc(req->req.length,GFP_KERNEL);
                                                                ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#707: FILE: drivers/ieee1394/raw1394.c:1580:
+        addr->addr_space_buffer = (u8 *)kmalloc(req->req.length,GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/ieee1394/raw1394.c:1830:
+        quadlet_t *data = kmalloc(req->req.length, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/ieee1394/raw1394.c:1830:
+        quadlet_t *data = kmalloc(req->req.length, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: drivers/ieee1394/raw1394.c:1857:
+        quadlet_t *data = kmalloc(req->req.length, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/ieee1394/raw1394.c:1857:
+        quadlet_t *data = kmalloc(req->req.length, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: drivers/ieee1394/raw1394.c:2251:
+        fi = kmalloc(sizeof(struct file_info), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/ieee1394/raw1394.c:2251:
+        fi = kmalloc(sizeof(struct file_info), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fi)...) over kmalloc(sizeof(struct file_info)...)
#743: FILE: drivers/ieee1394/raw1394.c:2251:
+        fi = kmalloc(sizeof(struct file_info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: drivers/pci/pool.c:128:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#767: FILE: drivers/pci/pool.c:128:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

WARNING:SIZEOF_PARENTHESIS: sizeof *retval should be sizeof(*retval)
#767: FILE: drivers/pci/pool.c:128:
+	if (!(retval = kmalloc (sizeof *retval, GFP_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: drivers/pci/pool.c:289:
+	if (!(page = pool_alloc_page (pool, GFP_ATOMIC))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#786: FILE: drivers/pci/pool.c:289:
+	if (!(page = pool_alloc_page (pool, GFP_ATOMIC))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#811: FILE: drivers/usb/core/hub.c:236:
+	if ((clear = kmalloc (sizeof *clear, GFP_ATOMIC)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#811: FILE: drivers/usb/core/hub.c:236:
+	if ((clear = kmalloc (sizeof *clear, GFP_ATOMIC)) == 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof *clear should be sizeof(*clear)
#811: FILE: drivers/usb/core/hub.c:236:
+	if ((clear = kmalloc (sizeof *clear, GFP_ATOMIC)) == 0) {

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#823: FILE: drivers/usb/core/message.c:442:
+		retval = usb_submit_urb (io->urbs [i], GFP_ATOMIC);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#823: FILE: drivers/usb/core/message.c:442:
+		retval = usb_submit_urb (io->urbs [i], GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#835: FILE: drivers/usb/host/ehci-dbg.c:432:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#835: FILE: drivers/usb/host/ehci-dbg.c:432:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

WARNING:SIZEOF_PARENTHESIS: sizeof *seen should be sizeof(*seen)
#835: FILE: drivers/usb/host/ehci-dbg.c:432:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#847: FILE: drivers/usb/host/ehci-hcd.c:364:
+	if ((retval = ehci_mem_init (ehci, GFP_KERNEL)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#847: FILE: drivers/usb/host/ehci-hcd.c:364:
+	if ((retval = ehci_mem_init (ehci, GFP_KERNEL)) < 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#859: FILE: drivers/usb/host/ehci-q.c:759:
+		qh = qh_make (ehci, urb, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#871: FILE: drivers/usb/host/ohci-dbg.c:430:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#871: FILE: drivers/usb/host/ohci-dbg.c:430:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

WARNING:SIZEOF_PARENTHESIS: sizeof *seen should be sizeof(*seen)
#871: FILE: drivers/usb/host/ohci-dbg.c:430:
+	if (!(seen = kmalloc (DBG_SCHED_LIMIT * sizeof *seen, GFP_ATOMIC)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#883: FILE: drivers/usb/host/ohci-q.c:365:
+		ed = ed_alloc (ohci, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#892: FILE: drivers/usb/host/ohci-q.c:373:
+		td = td_alloc (ohci, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: drivers/usb/input/hid-core.c:918:
+	status = usb_submit_urb (urb, GFP_ATOMIC);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#937: FILE: drivers/usb/input/hid-core.c:1380:
+	if (!(hid->inbuf = usb_buffer_alloc(dev, HID_BUFFER_SIZE, GFP_ATOMIC, &hid->inbuf_dma)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#940: FILE: drivers/usb/input/hid-core.c:1382:
+	if (!(hid->outbuf = usb_buffer_alloc(dev, HID_BUFFER_SIZE, GFP_ATOMIC, &hid->outbuf_dma)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hid->cr
#943: FILE: drivers/usb/input/hid-core.c:1384:
+	if (!(hid->cr = usb_buffer_alloc(dev, sizeof(*(hid->cr)), GFP_ATOMIC, &hid->cr_dma)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hid->cr'
#943: FILE: drivers/usb/input/hid-core.c:1384:
+	if (!(hid->cr = usb_buffer_alloc(dev, sizeof(*(hid->cr)), GFP_ATOMIC, &hid->cr_dma)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#943: FILE: drivers/usb/input/hid-core.c:1384:
+	if (!(hid->cr = usb_buffer_alloc(dev, sizeof(*(hid->cr)), GFP_ATOMIC, &hid->cr_dma)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#946: FILE: drivers/usb/input/hid-core.c:1386:
+	if (!(hid->ctrlbuf = usb_buffer_alloc(dev, HID_BUFFER_SIZE, GFP_ATOMIC, &hid->ctrlbuf_dma)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#975: FILE: drivers/usb/input/usbkbd.c:129:
+	i = usb_submit_urb (urb, GFP_ATOMIC);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#984: FILE: drivers/usb/input/usbkbd.c:207:
+	if (!(kbd->new = usb_buffer_alloc(dev, 8, GFP_ATOMIC, &kbd->new_dma)))

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#987: FILE: drivers/usb/input/usbkbd.c:209:
+	if (!(kbd->cr = usb_buffer_alloc(dev, sizeof(struct usb_ctrlrequest), GFP_ATOMIC, &kbd->cr_dma)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#987: FILE: drivers/usb/input/usbkbd.c:209:
+	if (!(kbd->cr = usb_buffer_alloc(dev, sizeof(struct usb_ctrlrequest), GFP_ATOMIC, &kbd->cr_dma)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#990: FILE: drivers/usb/input/usbkbd.c:211:
+	if (!(kbd->leds = usb_buffer_alloc(dev, 1, GFP_ATOMIC, &kbd->leds_dma)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1002: FILE: drivers/usb/input/usbmouse.c:93:
+	status = usb_submit_urb (urb, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1047: FILE: drivers/usb/misc/usbtest.c:103:
+	urb = usb_alloc_urb (0, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1056: FILE: drivers/usb/misc/usbtest.c:113:
+	urb->transfer_buffer = usb_buffer_alloc (udev, bytes, GFP_KERNEL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/usb/misc/usbtest.c:114:
+	urb->transfer_buffer = usb_buffer_alloc (udev, bytes, GFP_KERNEL,
 			&urb->transfer_dma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1065: FILE: drivers/usb/misc/usbtest.c:144:
+		if ((retval = usb_submit_urb (urb, GFP_KERNEL)) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1065: FILE: drivers/usb/misc/usbtest.c:144:
+		if ((retval = usb_submit_urb (urb, GFP_KERNEL)) != 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1074: FILE: drivers/usb/misc/usbtest.c:201:
+	sg = kmalloc (nents * sizeof *sg, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *sg should be sizeof(*sg)
#1074: FILE: drivers/usb/misc/usbtest.c:201:
+	sg = kmalloc (nents * sizeof *sg, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1083: FILE: drivers/usb/misc/usbtest.c:209:
+		buf = kmalloc (size, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1101: FILE: drivers/usb/misc/usbtest.c:661:
+		if ((status = usb_submit_urb (urb, GFP_ATOMIC)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1101: FILE: drivers/usb/misc/usbtest.c:661:
+		if ((status = usb_submit_urb (urb, GFP_ATOMIC)) != 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1110: FILE: drivers/usb/misc/usbtest.c:696:
+	urb = kmalloc (param->sglen * sizeof (struct urb *), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1110: FILE: drivers/usb/misc/usbtest.c:696:
+	urb = kmalloc (param->sglen * sizeof (struct urb *), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1110: FILE: drivers/usb/misc/usbtest.c:696:
+	urb = kmalloc (param->sglen * sizeof (struct urb *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: drivers/usb/misc/usbtest.c:796:
+		reqp = usb_buffer_alloc (udev, sizeof req, GFP_KERNEL,

WARNING:SIZEOF_PARENTHESIS: sizeof req should be sizeof(req)
#1119: FILE: drivers/usb/misc/usbtest.c:796:
+		reqp = usb_buffer_alloc (udev, sizeof req, GFP_KERNEL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1120: FILE: drivers/usb/misc/usbtest.c:797:
+		reqp = usb_buffer_alloc (udev, sizeof req, GFP_KERNEL,
 				&u->setup_dma);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1128: FILE: drivers/usb/misc/usbtest.c:812:
+		context.status = usb_submit_urb (urb [i], GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1128: FILE: drivers/usb/misc/usbtest.c:812:
+		context.status = usb_submit_urb (urb [i], GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1137: FILE: drivers/usb/misc/usbtest.c:852:
+		status = usb_submit_urb (urb, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1146: FILE: drivers/usb/misc/usbtest.c:880:
+	if ((retval = usb_submit_urb (urb, GFP_KERNEL)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1146: FILE: drivers/usb/misc/usbtest.c:880:
+	if ((retval = usb_submit_urb (urb, GFP_KERNEL)) != 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1155: FILE: drivers/usb/misc/usbtest.c:1217:
+	dev = kmalloc (sizeof *dev, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *dev should be sizeof(*dev)
#1155: FILE: drivers/usb/misc/usbtest.c:1217:
+	dev = kmalloc (sizeof *dev, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1164: FILE: drivers/usb/misc/usbtest.c:1232:
+	if ((dev->buf = kmalloc (TBUF_SIZE, GFP_KERNEL)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1164: FILE: drivers/usb/misc/usbtest.c:1232:
+	if ((dev->buf = kmalloc (TBUF_SIZE, GFP_KERNEL)) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1176: FILE: drivers/usb/net/catc.c:346:
+	status = usb_submit_urb (urb, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1188: FILE: drivers/usb/net/kaweth.c:502:
+	status = usb_submit_urb (u, GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1212: FILE: drivers/usb/net/rtl8150.c:478:
+	status = usb_submit_urb (urb, GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#1260: FILE: fs/afs/super.c:487:
+	vnode = (afs_vnode_t *) kmem_cache_alloc(afs_inode_cachep,GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1260: FILE: fs/afs/super.c:487:
+	vnode = (afs_vnode_t *) kmem_cache_alloc(afs_inode_cachep,GFP_KERNEL);
 	                                                         ^

CHECK:SPACING: No space is necessary after a cast
#1296: FILE: fs/block_dev.c:226:
+	 ((struct block_device *) kmem_cache_alloc(bdev_cachep, GFP_KERNEL))

CHECK:SPACING: No space is necessary after a cast
#1308: FILE: fs/char_dev.c:38:
+	 ((struct char_device *) kmem_cache_alloc(cdev_cachep, GFP_KERNEL))

CHECK:SPACING: No space is necessary after a cast
#1332: FILE: fs/cifs/misc.c:156:
+	    (struct smb_hdr *) kmem_cache_alloc(cifs_req_cachep, GFP_KERNEL);

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1368: FILE: fs/devfs/base.c:580:
+	       Use GFP_ATOMIC in <devfsd_notify_de> from <devfs_d_delete>.
 	                         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#1368: FILE: fs/devfs/base.c:580:
+	       Use GFP_ATOMIC in <devfsd_notify_de> from <devfs_d_delete>.
 	                                          ^

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#1368: FILE: fs/devfs/base.c:580:
+	       Use GFP_ATOMIC in <devfsd_notify_de> from <devfs_d_delete>.
 	                                                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#1368: FILE: fs/devfs/base.c:580:
+	       Use GFP_ATOMIC in <devfsd_notify_de> from <devfs_d_delete>.
 	                                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <Use>
#1368: FILE: fs/devfs/base.c:580:
+	       Use GFP_ATOMIC in <devfsd_notify_de> from <devfs_d_delete>.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1377: FILE: fs/devfs/base.c:1410:
+				     atomic ? GFP_ATOMIC : GFP_KERNEL) )

CHECK:SPACING: No space is necessary after a cast
#1425: FILE: fs/eventpoll.c:84:
+#define EPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(epi_cache, GFP_KERNEL)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1425: FILE: fs/eventpoll.c:84:
+#define EPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(epi_cache, GFP_KERNEL)

CHECK:SPACING: No space is necessary after a cast
#1432: FILE: fs/eventpoll.c:90:
+#define PWQ_MEM_ALLOC()	(struct eppoll_entry *) kmem_cache_alloc(pwq_cache, GFP_KERNEL)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1432: FILE: fs/eventpoll.c:90:
+#define PWQ_MEM_ALLOC()	(struct eppoll_entry *) kmem_cache_alloc(pwq_cache, GFP_KERNEL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1516: FILE: fs/freevxfs/vxfs_fshead.c:86:
+		if (!(fhp = kmalloc(sizeof(*fhp), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1528: FILE: fs/freevxfs/vxfs_inode.c:117:
+		if (!(vip = kmem_cache_alloc(vxfs_inode_cachep, GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1537: FILE: fs/freevxfs/vxfs_inode.c:159:
+		if (!(vip = kmem_cache_alloc(vxfs_inode_cachep, GFP_KERNEL)))

CHECK:SPACING: No space is necessary after a cast
#1573: FILE: fs/inode.c:100:
+		inode = (struct inode *) kmem_cache_alloc(inode_cachep, GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: fs/intermezzo/dcache.c:237:
+        dd = kmem_cache_alloc(presto_dentry_slab, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: fs/intermezzo/dcache.c:237:
+        dd = kmem_cache_alloc(presto_dentry_slab, GFP_KERNEL);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1768: FILE: fs/ntfs/unistr.c:264:
+		ucs = (uchar_t*)kmem_cache_alloc(ntfs_name_cache, GFP_NOFS);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#2024: FILE: mm/slab.c:907:
+	cachep = (kmem_cache_t *) kmem_cache_alloc(&cache_cache, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2042: FILE: mm/slab.c:1348:
+	if (flags & ~(GFP_DMA|SLAB_LEVEL_MASK|SLAB_NO_GROW))
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2042: FILE: mm/slab.c:1348:
+	if (flags & ~(GFP_DMA|SLAB_LEVEL_MASK|SLAB_NO_GROW))
 	                                     ^

WARNING:TYPO_SPELLING: 'fle' may be misspelled - perhaps 'file'?
#2138: FILE: net/ipv4/xfrm_policy.c:118:
+		fle = kmem_cache_alloc(flow_cachep, GFP_ATOMIC);
 		^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2150: FILE: net/ipv6/ip6_fib.c:214:
+	if ((fn = kmem_cache_alloc(fib6_node_kmem, GFP_ATOMIC)) != NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 80 warnings, 29 checks, 1500 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
