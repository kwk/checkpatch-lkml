WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: mm/percpu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#75: FILE: mm/percpu.c:2:
+ *  linux/mm/percpu.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#83: FILE: mm/percpu.c:10:
+ *  inside a module.  So to guarentee that the offset is the same for both,
                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inital' may be misspelled - perhaps 'initial'?
#87: FILE: mm/percpu.c:14:
+ *  inital setup must be done with bootmem, and thus vmalloc code can not be
     ^^^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#107: FILE: mm/percpu.c:34:
+#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'copys' may be misspelled - perhaps 'copies'?
#118: FILE: mm/percpu.c:45:
+ * It gets updated after the copys are made.
                              ^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: mm/percpu.c:53:
+	addr = PERCPU_START+(cpu*PERCPU_SIZE);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: mm/percpu.c:53:
+	addr = PERCPU_START+(cpu*PERCPU_SIZE);
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#127: FILE: mm/percpu.c:54:
+	BUG_ON(percpu_boot_alloc(addr, size, cpu));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#129: FILE: mm/percpu.c:56:
+	return (char*)addr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#131: FILE: mm/percpu.c:58:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#147: FILE: mm/percpu.c:74:
+	for (i = 0; i < NR_CPUS; i++, ptr += size) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#150: FILE: mm/percpu.c:77:
+		wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: mm/percpu.c:84:
+static __init int percpu_boot_pte_alloc(pmd_t *pmd, unsigned long addr,
+					  unsigned long end, int node)

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: mm/percpu.c:93:
+		void *page;
+		WARN_ON(!pte_none(*pte));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: mm/percpu.c:165:
+		void *page;
+		if (unlikely(!pte_none(*pte))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#239: FILE: mm/percpu.c:166:
+			printk("bad pte: %p->%p\n", pte, (void*)pte_val(*pte));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: mm/percpu.c:166:
+			printk("bad pte: %p->%p\n", pte, (void*)pte_val(*pte));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#240: FILE: mm/percpu.c:167:
+			BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#243: FILE: mm/percpu.c:170:
+		page = (void*)__get_free_page(GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#314: FILE: mm/percpu.c:241:
+		((pcpudst) + __PERCPU_OFFSET_ADDRESS(cpu)+size);
 		                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: mm/percpu.c:246:
+		unsigned long alloc = needed_address - allocated;
+		err = percpu_alloc(allocated, alloc, cpu);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#345: FILE: mm/percpu.c:272:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#350: FILE: mm/percpu.c:277:
+			memcpy((pcpudst)+__PERCPU_OFFSET_ADDRESS(i),
 			                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 15 warnings, 6 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
