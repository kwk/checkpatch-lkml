ERROR:SPACING: space prohibited before that close parenthesis ')'
#56: FILE: drivers/pci/probe.c:254:
+	base = (io_base_lo & (PCI_IO_RANGE_MASK | 0x0c) ) << 8;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#57: FILE: drivers/pci/probe.c:255:
+	limit = (io_limit_lo & (PCI_IO_RANGE_MASK | 0x0c) ) << 8;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#60: FILE: drivers/pci/probe.c:257:
PCI_IO_RANGE_TYPE_32) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: drivers/pci/probe.c:270:
+                /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/pci/probe.c:271:
+                ** See if the 1k granularity option is enabled on the$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#69: FILE: drivers/pci/probe.c:271:
+                /*
+                ** See if the 1k granularity option is enabled on the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: drivers/pci/probe.c:272:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/pci/probe.c:273:
+                if (dev->vendor == PCI_VENDOR_ID_INTEL && dev->device$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/pci/probe.c:273:
+                if (dev->vendor == PCI_VENDOR_ID_INTEL && dev->device$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#72: FILE: drivers/pci/probe.c:273:
+                if (dev->vendor == PCI_VENDOR_ID_INTEL && dev->device

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/pci/probe.c:274:
+                        u16 en1k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/pci/probe.c:274:
+                        u16 en1k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/pci/probe.c:275:
+                        pci_read_config_word(dev, 0x40, &en1k);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#75: FILE: drivers/pci/probe.c:275:
+                        u16 en1k;
+                        pci_read_config_word(dev, 0x40, &en1k);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/pci/probe.c:275:
+                        pci_read_config_word(dev, 0x40, &en1k);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/pci/probe.c:277:
+                        if(en1k & 0x200) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/pci/probe.c:277:
+                        if(en1k & 0x200) {$

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: drivers/pci/probe.c:277:
+                        if(en1k & 0x200) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/pci/probe.c:278:
+                                res->end = limit + 0x3ff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/pci/probe.c:278:
+                                res->end = limit + 0x3ff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/pci/probe.c:279:
+                                printk(KERN_INFO "PCI: Enable I/O Space$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/pci/probe.c:279:
+                                printk(KERN_INFO "PCI: Enable I/O Space$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#79: FILE: drivers/pci/probe.c:279:
+                                printk(KERN_INFO "PCI: Enable I/O Space

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/pci/probe.c:280:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/pci/probe.c:280:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/pci/probe.c:281:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/pci/probe.c:281:
+                }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 11 warnings, 0 checks, 34 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
