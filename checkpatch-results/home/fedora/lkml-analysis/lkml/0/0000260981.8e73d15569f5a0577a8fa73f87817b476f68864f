WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
Content-Disposition: attachment; filename="i386_exception_notifiers-268-rc4.patch"

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#100: FILE: arch/i386/kernel/i386_ksyms.c:35:
+#include <asm/kdebug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#108: FILE: arch/i386/kernel/i386_ksyms.c:181:
+EXPORT_SYMBOL(register_die_notifier);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#119: FILE: arch/i386/kernel/traps.c:51:
+#include <asm/kdebug.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: arch/i386/kernel/traps.c:103:
+	unsigned long flags;
+	spin_lock_irqsave(&die_notifier_lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#195: FILE: arch/i386/kernel/traps.c:481:
+		if (notify_die(DIE_GPF, "general protection fault", regs,
+				error_code, 13, SIGSEGV) == NOTIFY_OK);
+			return;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: arch/i386/kernel/traps.c:481:
+		if (notify_die(DIE_GPF, "general protection fault", regs,
+				error_code, 13, SIGSEGV) == NOTIFY_OK);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: arch/i386/kernel/traps.c:482:
+		if (notify_die(DIE_GPF, "general protection fault", regs,
+				error_code, 13, SIGSEGV) == NOTIFY_OK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/i386/kernel/traps.c:626:
+	if (notify_die(DIE_DEBUG, "debug", regs, condition, error_code,
+					SIGTRAP) == NOTIFY_OK)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#239: FILE: arch/i386/mm/fault.c:29:
+#include <asm/kdebug.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/i386/mm/fault.c:231:
+	if (notify_die(DIE_PAGE_FAULT, "page fault", regs, error_code, 14,
+					SIGSEGV) == NOTIFY_OK)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#257: FILE: include/asm-i386/kdebug.h:1:
+#ifndef _I386_KDEBUG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#277: FILE: include/asm-i386/kdebug.h:21:
+/* Note - you should never unregister because that can race with NMIs.
+   If you really want to do it first unregister - then synchronize_kernel - then free.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: include/asm-i386/kdebug.h:26:
+
+

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#300: FILE: include/asm-i386/kdebug.h:44:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: include/asm-i386/kdebug.h:44:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: include/asm-i386/kdebug.h:44:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: include/asm-i386/kdebug.h:44:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: include/asm-i386/kdebug.h:44:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#302: FILE: include/asm-i386/kdebug.h:46:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: include/asm-i386/kdebug.h:47:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
+	return notifier_call_chain(&i386die_chain, val, &args);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260981.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 8 warnings, 7 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260981.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
