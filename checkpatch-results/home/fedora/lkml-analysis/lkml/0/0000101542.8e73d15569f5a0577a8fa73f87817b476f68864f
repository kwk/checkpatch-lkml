WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#61: FILE: drivers/scsi/libata-acpi.c:50:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#61: FILE: drivers/scsi/libata-acpi.c:50:
+		printk(KERN_DEBUG "%s: " fmt, __FUNCTION__, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#73: FILE: drivers/scsi/libata-acpi.c:78:
+	printk(KERN_DEBUG "%s: SATA dev addr=0x%llx, handle=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/scsi/libata-acpi.c:79:
+	printk(KERN_DEBUG "%s: SATA dev addr=0x%llx, handle=0x%p\n",
+		__FUNCTION__, (unsigned long long)addr, *handle);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#74: FILE: drivers/scsi/libata-acpi.c:79:
+		__FUNCTION__, (unsigned long long)addr, *handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: drivers/scsi/libata-acpi.c:96:
+static int pata_get_dev_handle(struct device *dev, acpi_handle *handle,
+					acpi_integer *pcidevfn)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#103: FILE: drivers/scsi/libata-acpi.c:108:
+	printk(KERN_DEBUG "%s: ENTER: dev->bus_id='%s'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/scsi/libata-acpi.c:109:
+	printk(KERN_DEBUG "%s: ENTER: dev->bus_id='%s'\n",
+		__FUNCTION__, dev->bus_id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#104: FILE: drivers/scsi/libata-acpi.c:109:
+		__FUNCTION__, dev->bus_id);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#105: FILE: drivers/scsi/libata-acpi.c:110:
+	if ((scanned = sscanf(dev->bus_id, "%x:%x:%x.%x",

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/scsi/libata-acpi.c:111:
+	if ((scanned = sscanf(dev->bus_id, "%x:%x:%x.%x",
+			&domain, &bus, &devnum, &func)) != 4) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#107: FILE: drivers/scsi/libata-acpi.c:112:
+		printk(KERN_DEBUG "%s: sscanf ret. %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/scsi/libata-acpi.c:113:
+		printk(KERN_DEBUG "%s: sscanf ret. %d\n",
+			__FUNCTION__, scanned);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#108: FILE: drivers/scsi/libata-acpi.c:113:
+			__FUNCTION__, scanned);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#117: FILE: drivers/scsi/libata-acpi.c:122:
+		printk(KERN_DEBUG "%s: get_object_info for parent failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/scsi/libata-acpi.c:123:
+		printk(KERN_DEBUG "%s: get_object_info for parent failed\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#118: FILE: drivers/scsi/libata-acpi.c:123:
+			__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#129: FILE: drivers/scsi/libata-acpi.c:134:
+		printk(KERN_DEBUG "%s: get_object_info for parent has wrong "

WARNING:SPLIT_STRING: quoted string split across lines
#130: FILE: drivers/scsi/libata-acpi.c:135:
+		printk(KERN_DEBUG "%s: get_object_info for parent has wrong "
+			" bus: %llu, should be %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#131: FILE: drivers/scsi/libata-acpi.c:136:
+			__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#137: FILE: drivers/scsi/libata-acpi.c:142:
+	printk(KERN_DEBUG "%s: dev_handle: 0x%p, parent_handle: 0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/scsi/libata-acpi.c:143:
+	printk(KERN_DEBUG "%s: dev_handle: 0x%p, parent_handle: 0x%p\n",
+		__FUNCTION__, dev_handle, parent_handle);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#138: FILE: drivers/scsi/libata-acpi.c:143:
+		__FUNCTION__, dev_handle, parent_handle);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#139: FILE: drivers/scsi/libata-acpi.c:144:
+	printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#141: FILE: drivers/scsi/libata-acpi.c:146:
+		__FUNCTION__, devnum, func, (unsigned long long)addr,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#167: FILE: drivers/scsi/libata-acpi.c:307:
+		printk(KERN_DEBUG "%s: skipping for PATA mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/scsi/libata-acpi.c:308:
+		printk(KERN_DEBUG "%s: skipping for PATA mode\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#168: FILE: drivers/scsi/libata-acpi.c:308:
+			__FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/scsi/libata-acpi.c:401:
+int do_drive_get_GTF(struct ata_port *ap, int ix,
 			unsigned int *gtf_length, unsigned long *gtf_address,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#218: FILE: drivers/scsi/libata-acpi.c:423:
+		printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: drivers/scsi/libata-acpi.c:425:
+			__FUNCTION__, ap->id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#241: FILE: drivers/scsi/libata-acpi.c:444:
+				printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#243: FILE: drivers/scsi/libata-acpi.c:446:
+					__FUNCTION__, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#250: FILE: drivers/scsi/libata-acpi.c:453:
+				printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#252: FILE: drivers/scsi/libata-acpi.c:455:
+					__FUNCTION__, err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: drivers/scsi/libata-acpi.c:464:
+^I ^I^I * + _their_ children == drive objects */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: drivers/scsi/libata-acpi.c:464:
+^I ^I^I * + _their_ children == drive objects */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#264: FILE: drivers/scsi/libata-acpi.c:464:
+	 		 * + _their_ children == drive objects */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/scsi/libata-acpi.c:467:
+			chan_handle = acpi_get_child(dev_handle,
+						ap->hard_port_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#269: FILE: drivers/scsi/libata-acpi.c:469:
+				printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#271: FILE: drivers/scsi/libata-acpi.c:471:
+					__FUNCTION__, ap->hard_port_no,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#279: FILE: drivers/scsi/libata-acpi.c:479:
+			printk(KERN_DEBUG "%s:   drive w/ adr=%d: %c: 0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/scsi/libata-acpi.c:480:
+			printk(KERN_DEBUG "%s:   drive w/ adr=%d: %c: 0x%p\n",
+				__FUNCTION__, ix,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#280: FILE: drivers/scsi/libata-acpi.c:480:
+				__FUNCTION__, ix,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/scsi/libata-acpi.c:492:
+			err = get_sata_adr(dev, dev_handle, pcidevfn, 0,
+					ap, atadev, &dev_adr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#298: FILE: drivers/scsi/libata-acpi.c:497:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#308: FILE: drivers/scsi/libata-acpi.c:659:
+		printk(KERN_DEBUG "%s: skipping non-SATA drive\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/scsi/libata-acpi.c:660:
+		printk(KERN_DEBUG "%s: skipping non-SATA drive\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#309: FILE: drivers/scsi/libata-acpi.c:660:
+			__FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/scsi/libata-acpi.c:721:
+		ret = do_drive_get_GTF(ap, ix,
 				&gtf_length, &gtf_address, &obj_loc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#365: FILE: drivers/scsi/libata-acpi.c:770:
+^Iunion acpi_object ^I*out_obj;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#372: FILE: drivers/scsi/libata-acpi.c:777:
+		printk(KERN_DEBUG "%s: ENTER:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#372: FILE: drivers/scsi/libata-acpi.c:777:
+		printk(KERN_DEBUG "%s: ENTER:\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#376: FILE: drivers/scsi/libata-acpi.c:781:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#378: FILE: drivers/scsi/libata-acpi.c:783:
+				__FUNCTION__, dev->bus_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#385: FILE: drivers/scsi/libata-acpi.c:790:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#387: FILE: drivers/scsi/libata-acpi.c:792:
+				__FUNCTION__, err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#392: FILE: drivers/scsi/libata-acpi.c:797:
+	 * + _their_ children == drive objects */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#396: FILE: drivers/scsi/libata-acpi.c:801:
+		printk(KERN_DEBUG "%s: chan adr=%d: handle=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/scsi/libata-acpi.c:802:
+		printk(KERN_DEBUG "%s: chan adr=%d: handle=0x%p\n",
+			__FUNCTION__, ap->hard_port_no, chan_handle);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#397: FILE: drivers/scsi/libata-acpi.c:802:
+			__FUNCTION__, ap->hard_port_no, chan_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/scsi/libata-acpi.c:812:
+	status = acpi_evaluate_object(chan_handle, "_GTM",
+					NULL, &output);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#409: FILE: drivers/scsi/libata-acpi.c:814:
+		printk(KERN_DEBUG "%s: _GTM status: %d, outptr: 0x%p, outlen: 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/scsi/libata-acpi.c:815:
+		printk(KERN_DEBUG "%s: _GTM status: %d, outptr: 0x%p, outlen: 0x%llx\n",
+			__FUNCTION__, status, output.pointer,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#410: FILE: drivers/scsi/libata-acpi.c:815:
+			__FUNCTION__, status, output.pointer,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#414: FILE: drivers/scsi/libata-acpi.c:819:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#416: FILE: drivers/scsi/libata-acpi.c:821:
+				__FUNCTION__, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#422: FILE: drivers/scsi/libata-acpi.c:827:
+			printk(KERN_DEBUG "%s: Run _GTM: "

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: drivers/scsi/libata-acpi.c:828:
+			printk(KERN_DEBUG "%s: Run _GTM: "
+				"length or ptr is NULL (0x%llx, 0x%p)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#424: FILE: drivers/scsi/libata-acpi.c:829:
+				__FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#435: FILE: drivers/scsi/libata-acpi.c:840:
+			printk(KERN_DEBUG "%s: Run _GTM: error: "

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/scsi/libata-acpi.c:841:
+			printk(KERN_DEBUG "%s: Run _GTM: error: "
+				"expected object type of ACPI_TYPE_BUFFER, "

WARNING:SPLIT_STRING: quoted string split across lines
#437: FILE: drivers/scsi/libata-acpi.c:842:
+				"expected object type of ACPI_TYPE_BUFFER, "
+				"got 0x%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#438: FILE: drivers/scsi/libata-acpi.c:843:
+				__FUNCTION__, out_obj->type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#446: FILE: drivers/scsi/libata-acpi.c:851:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#448: FILE: drivers/scsi/libata-acpi.c:853:
+				__FUNCTION__, out_obj->buffer.length,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#455: FILE: drivers/scsi/libata-acpi.c:860:
+		printk(KERN_DEBUG "%s: _GTM info: ptr: 0x%p, len: 0x%x, exp.len: 0x%Zx\n",

WARNING:PRINTF_Z: %Zx is non-standard C, use %zx
#455: FILE: drivers/scsi/libata-acpi.c:860:
+		printk(KERN_DEBUG "%s: _GTM info: ptr: 0x%p, len: 0x%x, exp.len: 0x%Zx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: drivers/scsi/libata-acpi.c:861:
+		printk(KERN_DEBUG "%s: _GTM info: ptr: 0x%p, len: 0x%x, exp.len: 0x%Zx\n",
+			__FUNCTION__, out_obj->buffer.pointer,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#456: FILE: drivers/scsi/libata-acpi.c:861:
+			__FUNCTION__, out_obj->buffer.pointer,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#458: FILE: drivers/scsi/libata-acpi.c:863:
+		printk(KERN_DEBUG "%s: _GTM fields: 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: drivers/scsi/libata-acpi.c:864:
+		printk(KERN_DEBUG "%s: _GTM fields: 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\n",
+			__FUNCTION__, gtm->PIO_speed0, gtm->DMA_speed0,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#459: FILE: drivers/scsi/libata-acpi.c:864:
+			__FUNCTION__, gtm->PIO_speed0, gtm->DMA_speed0,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#493: FILE: drivers/scsi/libata-acpi.c:898:
+^Iunion acpi_object ^Iin_params[1];$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#499: FILE: drivers/scsi/libata-acpi.c:904:
+		printk(KERN_DEBUG "%s: ENTER:\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#499: FILE: drivers/scsi/libata-acpi.c:904:
+		printk(KERN_DEBUG "%s: ENTER:\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#503: FILE: drivers/scsi/libata-acpi.c:908:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#505: FILE: drivers/scsi/libata-acpi.c:910:
+				__FUNCTION__, dev->bus_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#511: FILE: drivers/scsi/libata-acpi.c:916:
+			printk(KERN_DEBUG "%s: drive(s) on channel %d: missing Identify data\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/scsi/libata-acpi.c:917:
+			printk(KERN_DEBUG "%s: drive(s) on channel %d: missing Identify data\n",
+				__FUNCTION__, ap->hard_port_no);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#512: FILE: drivers/scsi/libata-acpi.c:917:
+				__FUNCTION__, ap->hard_port_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#519: FILE: drivers/scsi/libata-acpi.c:924:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#521: FILE: drivers/scsi/libata-acpi.c:926:
+				__FUNCTION__, err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#526: FILE: drivers/scsi/libata-acpi.c:931:
+	 * + _their_ children == drive objects */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#530: FILE: drivers/scsi/libata-acpi.c:935:
+		printk(KERN_DEBUG "%s: chan adr=%d: handle=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/scsi/libata-acpi.c:936:
+		printk(KERN_DEBUG "%s: chan adr=%d: handle=0x%p\n",
+			__FUNCTION__, ap->hard_port_no, chan_handle);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/scsi/libata-acpi.c:936:
+			__FUNCTION__, ap->hard_port_no, chan_handle);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#536: FILE: drivers/scsi/libata-acpi.c:941:
+	 * _STM method: */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#557: FILE: drivers/scsi/libata-acpi.c:962:
+		printk(KERN_DEBUG "%s: _STM status: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/scsi/libata-acpi.c:963:
+		printk(KERN_DEBUG "%s: _STM status: %d\n",
+			__FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#558: FILE: drivers/scsi/libata-acpi.c:963:
+			__FUNCTION__, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#561: FILE: drivers/scsi/libata-acpi.c:966:
+			printk(KERN_DEBUG

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#563: FILE: drivers/scsi/libata-acpi.c:968:
+				__FUNCTION__, status);

WARNING:SPLIT_STRING: quoted string split across lines
#578: FILE: drivers/scsi/libata-core.c:1312:
 	printk(KERN_DEBUG "ata%u: dev %u cfg "
+	       "00:%04x 49:%04x 82:%04x 83:%04x 84:%04x 85:%04x 86:%04x 87:%04x 88:%04x 93:%04x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#636: FILE: drivers/scsi/libata-core.c:4912:
+	printk(KERN_DEBUG "%s: pci_dev class+intf: 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/scsi/libata-core.c:4913:
+	printk(KERN_DEBUG "%s: pci_dev class+intf: 0x%x\n",
+		__FUNCTION__, pdev->class);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#637: FILE: drivers/scsi/libata-core.c:4913:
+		__FUNCTION__, pdev->class);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#640: FILE: drivers/scsi/libata-core.c:4916:
+		printk(KERN_DEBUG "%s: NO_LEGACY == 0\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#640: FILE: drivers/scsi/libata-core.c:4916:
+		printk(KERN_DEBUG "%s: NO_LEGACY == 0\n", __FUNCTION__);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#649: FILE: drivers/scsi/libata-core.c:4925:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#650: FILE: drivers/scsi/libata-core.c:4926:
+		printk(KERN_DEBUG "%s: NO_LEGACY == 1\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#650: FILE: drivers/scsi/libata-core.c:4926:
+		printk(KERN_DEBUG "%s: NO_LEGACY == 1\n", __FUNCTION__);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#706: FILE: drivers/scsi/libata.h:66:
+extern int do_drive_get_GTF(struct ata_port *ap, int ix,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: drivers/scsi/libata.h:67:
+extern int do_drive_get_GTF(struct ata_port *ap, int ix,
 			unsigned int *gtf_length, unsigned long *gtf_address,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: drivers/scsi/libata.h:72:
+extern void ata_acpi_get_timing(struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#713: FILE: drivers/scsi/libata.h:73:
+extern void ata_acpi_push_timing(struct ata_port *ap);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#721: FILE: drivers/scsi/libata.h:79:
 }
+static inline int do_drive_get_GTF(struct ata_port *ap, int ix,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/scsi/libata.h:80:
+static inline int do_drive_get_GTF(struct ata_port *ap, int ix,
 			unsigned int *gtf_length, unsigned long *gtf_address,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#729: FILE: drivers/scsi/libata.h:95:
 }
+static void ata_acpi_get_timing(struct ata_port *ap)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#732: FILE: drivers/scsi/libata.h:98:
+}
+static void ata_acpi_push_timing(struct ata_port *ap)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 86 warnings, 31 checks, 662 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000101542.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
