ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: fs/buffer.c:447:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: fs/buffer.c:463:
+	struct file * file;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: fs/buffer.c:2119:
+^I$

CHECK:SPACING: No space is necessary after a cast
#167: FILE: fs/buffer.c:2130:
+		if (((loff_t) blocknr) * blocksize >= inode->i_size)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: fs/buffer.c:2134:
+		/* Only allow get_block to create new blocks if we are safely
+		   beyond EOF.  O_DIRECT is unsafe inside sparse files. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: fs/buffer.c:2134:
+		   beyond EOF.  O_DIRECT is unsafe inside sparse files. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: fs/buffer.c:2135:
+^I^Iretval = get_block(inode, blocknr, &bh, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: fs/buffer.c:2160:
+				 * fall back to buffered IO. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/fs.h:1272:
+extern int do_fdatasync(struct file *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#247: FILE: include/linux/fs.h:1272:
+extern int do_fdatasync(struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: mm/filemap.c:2968:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#366: FILE: mm/filemap.c:3002:
+	if ( pos + *count > MAX_NON_LFS && !(file->f_flags&O_LARGEFILE)) {
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#366: FILE: mm/filemap.c:3002:
+	if ( pos + *count > MAX_NON_LFS && !(file->f_flags&O_LARGEFILE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: mm/filemap.c:3059:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: mm/filemap.c:3065:
+ * Write to a file through the page cache. $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: mm/filemap.c:3080:
+do_generic_file_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: mm/filemap.c:3080:
+do_generic_file_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                                        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: mm/filemap.c:3089:
+	unsigned	bytes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: mm/filemap.c:3094:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: mm/filemap.c:3098:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: mm/filemap.c:3198:
+do_generic_direct_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: mm/filemap.c:3198:
+do_generic_direct_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: mm/filemap.c:3209:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: mm/filemap.c:3213:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: mm/filemap.c:3215:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: mm/filemap.c:3256:
+generic_file_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: mm/filemap.c:3256:
+generic_file_write(struct file *file,const char *buf,size_t count, loff_t *ppos)
                                                     ^

CHECK:SPACING: No space is necessary after a cast
#543: FILE: mm/filemap.c:3261:
+	if ((ssize_t) count < 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#551: FILE: mm/filemap.c:3269:
+		/* do_generic_direct_write may drop i_sem during the
+		   actual IO */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#551: FILE: mm/filemap.c:3269:
+		   actual IO */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 8 warnings, 4 checks, 447 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361394.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
