WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#	           ChangeSet	1.804   -> 1.805  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	 drivers/net/3c59x.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# 02/11/10	maz@hina.wild-wind.fr.eu.org	1.805

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# Ported to sysfs EISA intrastructure.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#53: 
--- a/drivers/net/3c59x.c	Sun Nov 10 22:49:33 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#105: FILE: drivers/net/3c59x.c:817:
+#define DEVICE_PCI(dev) (((dev)->bus == &pci_bus_type) ? to_pci_dev((dev)) : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vp' - possible side-effects?
#107: FILE: drivers/net/3c59x.c:819:
+#define VORTEX_PCI(vp) (((vp)->gendev) ? DEVICE_PCI((vp)->gendev) : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#110: FILE: drivers/net/3c59x.c:822:
+#define DEVICE_EISA(dev) (((dev)->bus == &eisa_bus_type) ? to_eisa_device((dev)) : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vp' - possible side-effects?
#115: FILE: drivers/net/3c59x.c:827:
+#define VORTEX_EISA(vp) (((vp)->gendev) ? DEVICE_EISA((vp)->gendev) : NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/net/3c59x.c:858:
+static int vortex_probe1(struct device *gendev, long ioaddr, int irq,
 				   int chip_idx, int card_idx);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: drivers/net/3c59x.c:939:
+static int vortex_eisa_probe (struct device *device);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: drivers/net/3c59x.c:940:
+static int vortex_eisa_remove (struct device *device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/net/3c59x.c:951:
+static int vortex_eisa_probe (struct device *device)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: drivers/net/3c59x.c:956:
+	edev = to_eisa_device (device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/net/3c59x.c:963:
+	if (vortex_probe1(device, ioaddr, inw(ioaddr + 0xC88) >> 12,
+					  EISA_TBL_OFFSET, vortex_cards_found)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: drivers/net/3c59x.c:964:
+		release_region (ioaddr, VORTEX_TOTAL_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: drivers/net/3c59x.c:973:
+static int vortex_eisa_remove (struct device *device)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: drivers/net/3c59x.c:980:
+	edev = to_eisa_device (device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: drivers/net/3c59x.c:981:
+	dev = eisa_get_drvdata (edev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: drivers/net/3c59x.c:984:
+		printk("vortex_eisa_remove called for Compaq device!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vortex_eisa_remove', this function's name, in a string
#226: FILE: drivers/net/3c59x.c:984:
+		printk("vortex_eisa_remove called for Compaq device!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: drivers/net/3c59x.c:985:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: drivers/net/3c59x.c:990:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: drivers/net/3c59x.c:991:
+	unregister_netdev (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: drivers/net/3c59x.c:992:
+	outw (TotalReset|0x14, ioaddr + EL3_CMD);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#234: FILE: drivers/net/3c59x.c:992:
+	outw (TotalReset|0x14, ioaddr + EL3_CMD);
 	                ^

CHECK:CAMELCASE: Avoid CamelCase: <TotalReset>
#234: FILE: drivers/net/3c59x.c:992:
+	outw (TotalReset|0x14, ioaddr + EL3_CMD);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: drivers/net/3c59x.c:993:
+	release_region (ioaddr, VORTEX_TOTAL_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: drivers/net/3c59x.c:995:
+	kfree (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: drivers/net/3c59x.c:1001:
+static int __init vortex_eisa_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: drivers/net/3c59x.c:1010:
+	if (eisa_driver_register (&vortex_eisa_driver) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&vortex_eisa_driver'
#252: FILE: drivers/net/3c59x.c:1010:
+	if (eisa_driver_register (&vortex_eisa_driver) < 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/net/3c59x.c:1011:
+		eisa_driver_unregister (&vortex_eisa_driver);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/net/3c59x.c:1014:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/net/3c59x.c:1034:
+		rc = vortex_probe1 (&pdev->dev, pci_resource_start (pdev, 0),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/net/3c59x.c:1034:
+		rc = vortex_probe1 (&pdev->dev, pci_resource_start (pdev, 0),

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#267: FILE: drivers/net/3c59x.c:1035:
+							pdev->irq, ent->driver_data, vortex_cards_found);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/net/3c59x.c:1035:
+		rc = vortex_probe1 (&pdev->dev, pci_resource_start (pdev, 0),
+							pdev->irq, ent->driver_data, vortex_cards_found);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#283: FILE: drivers/net/3c59x.c:1048:
+static int __devinit vortex_probe1(struct device *gendev,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#303: FILE: drivers/net/3c59x.c:1070:
+		if ((pdev = DEVICE_PCI(gendev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#303: FILE: drivers/net/3c59x.c:1070:
+		if ((pdev = DEVICE_PCI(gendev))) {
+			print_name = pdev->slot_name;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#307: FILE: drivers/net/3c59x.c:1074:
+		if ((edev = DEVICE_EISA(gendev))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#307: FILE: drivers/net/3c59x.c:1074:
+		if ((edev = DEVICE_EISA(gendev))) {
+			print_name = edev->dev.bus_id;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#323: FILE: drivers/net/3c59x.c:1131:
+	if (gendev == NULL) {
+		compaq_net_device = dev;
 	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gendev"
#323: FILE: drivers/net/3c59x.c:1131:
+	if (gendev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: drivers/net/3c59x.c:1184:
+		eisa_set_drvdata (edev, dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/net/3c59x.c:1437:
+ ^I^Ipci_save_state(VORTEX_PCI(vp), vp->power_state);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: drivers/net/3c59x.c:1437:
+ ^I^Ipci_save_state(VORTEX_PCI(vp), vp->power_state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/net/3c59x.c:1437:
+ ^I^Ipci_save_state(VORTEX_PCI(vp), vp->power_state);$

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#373: FILE: drivers/net/3c59x.c:1711:
+			vp->rx_ring[i].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->tail, PKT_BUF_SZ, PCI_DMA_FROMDEVICE));

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#382: FILE: drivers/net/3c59x.c:2048:
+		outl(	vp->tx_skb_dma = pci_map_single(VORTEX_PCI(vp), skb->data, len, PCI_DMA_TODEVICE),

ERROR:SPACING: space prohibited after that open parenthesis '('
#382: FILE: drivers/net/3c59x.c:2048:
+		outl(	vp->tx_skb_dma = pci_map_single(VORTEX_PCI(vp), skb->data, len, PCI_DMA_TODEVICE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/net/3c59x.c:2049:
+		outl(	vp->tx_skb_dma = pci_map_single(VORTEX_PCI(vp), skb->data, len, PCI_DMA_TODEVICE),
 				ioaddr + Wn7_MasterAddr);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#391: FILE: drivers/net/3c59x.c:2127:
+		vp->tx_ring[entry].frag[0].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/net/3c59x.c:2128:
+		vp->tx_ring[entry].frag[0].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->data,
 										skb->len, PCI_DMA_TODEVICE));

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#398: FILE: drivers/net/3c59x.c:2133:
+		vp->tx_ring[entry].frag[0].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/net/3c59x.c:2134:
+		vp->tx_ring[entry].frag[0].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->data,
 										skb->len-skb->data_len, PCI_DMA_TODEVICE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/net/3c59x.c:2142:
+					cpu_to_le32(pci_map_single(VORTEX_PCI(vp),
 											   (void*)page_address(frag->page) + frag->page_offset,

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#416: FILE: drivers/net/3c59x.c:2152:
+	vp->tx_ring[entry].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->data, skb->len, PCI_DMA_TODEVICE));

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#425: FILE: drivers/net/3c59x.c:2240:
+				pci_unmap_single(VORTEX_PCI(vp), vp->tx_skb_dma, (vp->tx_skb->len + 3) & ~3, PCI_DMA_TODEVICE);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 56)
#432: FILE: drivers/net/3c59x.c:2360:
 					for (i=0; i<=skb_shinfo(skb)->nr_frags; i++)
+							pci_unmap_single(VORTEX_PCI(vp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: drivers/net/3c59x.c:2362:
+							pci_unmap_single(VORTEX_PCI(vp),
 											 le32_to_cpu(vp->tx_ring[entry].frag[i].addr),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/net/3c59x.c:2367:
+					pci_unmap_single(VORTEX_PCI(vp),
 						le32_to_cpu(vp->tx_ring[entry].addr), skb->len, PCI_DMA_TODEVICE);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#449: FILE: drivers/net/3c59x.c:2453:
+					dma_addr_t dma = pci_map_single(VORTEX_PCI(vp), skb_put(skb, pkt_len),

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#457: FILE: drivers/net/3c59x.c:2460:
+					pci_unmap_single(VORTEX_PCI(vp), dma, pkt_len, PCI_DMA_FROMDEVICE);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#466: FILE: drivers/net/3c59x.c:2526:
+				pci_dma_sync_single(VORTEX_PCI(vp), dma, PKT_BUF_SZ, PCI_DMA_FROMDEVICE);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#475: FILE: drivers/net/3c59x.c:2537:
+				pci_unmap_single(VORTEX_PCI(vp), dma, PKT_BUF_SZ, PCI_DMA_FROMDEVICE);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#484: FILE: drivers/net/3c59x.c:2574:
+			vp->rx_ring[entry].addr = cpu_to_le32(pci_map_single(VORTEX_PCI(vp), skb->tail, PKT_BUF_SZ, PCI_DMA_FROMDEVICE));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#504: FILE: drivers/net/3c59x.c:2670:
+				pci_unmap_single(	VORTEX_PCI(vp), le32_to_cpu(vp->rx_ring[i].addr),

ERROR:SPACING: space prohibited after that open parenthesis '('
#504: FILE: drivers/net/3c59x.c:2670:
+				pci_unmap_single(	VORTEX_PCI(vp), le32_to_cpu(vp->rx_ring[i].addr),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/net/3c59x.c:2671:
+				pci_unmap_single(	VORTEX_PCI(vp), le32_to_cpu(vp->rx_ring[i].addr),
 									PKT_BUF_SZ, PCI_DMA_FROMDEVICE);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#511: FILE: drivers/net/3c59x.c:2683:
 				for (k=0; k<=skb_shinfo(skb)->nr_frags; k++)
+						pci_unmap_single(VORTEX_PCI(vp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/net/3c59x.c:2685:
+						pci_unmap_single(VORTEX_PCI(vp),
 										 le32_to_cpu(vp->tx_ring[i].frag[k].addr),

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#519: FILE: drivers/net/3c59x.c:2689:
+				pci_unmap_single(VORTEX_PCI(vp), le32_to_cpu(vp->tx_ring[i].addr), skb->len, PCI_DMA_TODEVICE);

CHECK:BRACES: braces {} should be used on all arms of this statement
#532: FILE: drivers/net/3c59x.c:2808:
+		if (VORTEX_PCI(vp))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#534: FILE: drivers/net/3c59x.c:2810:
+		else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#536: FILE: drivers/net/3c59x.c:2812:
+				sprintf (info.bus_info, vp->gendev->bus_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/net/3c59x.c:2815:
+				sprintf(info.bus_info, "EISA 0x%lx %d",
+						dev->base_addr, dev->irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#560: FILE: drivers/net/3c59x.c:3009:
+		printk("vortex_remove_one called for Compaq device!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#593: FILE: drivers/net/3c59x.c:3079:
+	eisa_driver_unregister (&vortex_eisa_driver);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: drivers/net/3c59x.c:3081:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#601: FILE: drivers/net/3c59x.c:3086:
+		unregister_netdev (compaq_net_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: drivers/net/3c59x.c:3090:
+		kfree (compaq_net_device);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 62 warnings, 22 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
