WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#109: FILE: fs/ext3/resize.c:288:
+static unsigned ext3_list_backups(struct super_block *sb, unsigned *three,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#109: FILE: fs/ext3/resize.c:288:
+static unsigned ext3_list_backups(struct super_block *sb, unsigned *three,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#110: FILE: fs/ext3/resize.c:289:
+				  unsigned *five, unsigned *seven)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#110: FILE: fs/ext3/resize.c:289:
+				  unsigned *five, unsigned *seven)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: fs/ext3/super.c:53:
+static const char *ext3_decode_error(struct super_block * sb, int errno,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/ext3/super.c:55:
+static int ext3_remount (struct super_block * sb, int * flags, char * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/ext3/super.c:55:
+static int ext3_remount (struct super_block * sb, int * flags, char * data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/ext3/super.c:55:
+static int ext3_remount (struct super_block * sb, int * flags, char * data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: fs/ext3/super.c:55:
+static int ext3_remount (struct super_block * sb, int * flags, char * data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/ext3/super.c:56:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/ext3/super.c:56:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: fs/ext3/super.c:56:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/ext3/super.c:58:
+static void ext3_write_super (struct super_block * sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: fs/ext3/super.c:58:
+static void ext3_write_super (struct super_block * sb);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: fs/ext3/super.c:188:
+static const char *ext3_decode_error(struct super_block * sb, int errno,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#203: FILE: fs/ext3/super.c:374:
+static void ext3_put_super (struct super_block * sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: fs/ext3/super.c:374:
+static void ext3_put_super (struct super_block * sb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: fs/ext3/super.c:2006:
+static void ext3_write_super (struct super_block * sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: fs/ext3/super.c:2006:
+static void ext3_write_super (struct super_block * sb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: fs/ext3/super.c:2062:
+static int ext3_remount (struct super_block * sb, int * flags, char * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: fs/ext3/super.c:2062:
+static int ext3_remount (struct super_block * sb, int * flags, char * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: fs/ext3/super.c:2062:
+static int ext3_remount (struct super_block * sb, int * flags, char * data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: fs/ext3/super.c:2062:
+static int ext3_remount (struct super_block * sb, int * flags, char * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: fs/ext3/super.c:2134:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: fs/ext3/super.c:2134:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: fs/ext3/super.c:2134:
+static int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: fs/ext3/xattr.c:1121:
+ext3_xattr_set_handle(handle_t *handle, struct inode *inode, int name_index,
+		const char *name, const void *value, size_t value_len,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!value"
#530: FILE: fs/ext3/xattr.c:1135:
+	if (value == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#532: FILE: fs/ext3/xattr.c:1137:
+	if (name == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#544: FILE: fs/ext3/xattr.c:1149:
+	if (err == 0) {
[...]
+	} else if (err == -ENOENT) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#558: FILE: fs/ext3/xattr.c:1163:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: fs/ext3/xattr.c:1189:
+		ext3_xattr_ibody_set(handle, inode, name_index, name,
+					NULL, 0, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: fs/ext3/xattr.c:1192:
+		ext3_xattr_block_set(handle, inode, name_index,
+					name, NULL, 0, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: fs/ext3/xattr.c:1196:
+	err = ext3_xattr_ibody_set(handle, inode, name_index, name,
+					value, value_len, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: fs/ext3/xattr.c:1200:
+		err = ext3_xattr_block_set(handle, inode, name_index, name,
+						value, value_len, flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 11 warnings, 9 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
