WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#70: FILE: arch/ppc/Kconfig:1202:
+config MPC83xx_PCI2
+	bool "  Supprt for 2nd PCI host controller"
+	depends on PCI && MPC834x
+	default y if MPC834x_SYS
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'Supprt' may be misspelled - perhaps 'Support'?
#71: FILE: arch/ppc/Kconfig:1203:
+	bool "  Supprt for 2nd PCI host controller"
 	        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#197: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#201: FILE: arch/ppc/syslib/ppc83xx_pci.h:1:
+/* Created by Tony Li <tony.li@freescale.com>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#216: FILE: arch/ppc/syslib/ppc83xx_pci.h:16:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#222: FILE: arch/ppc/syslib/ppc83xx_pci.h:22:
+typedef struct immr_clk {

CHECK:CAMELCASE: Avoid CamelCase: <xF4>
#226: FILE: arch/ppc/syslib/ppc83xx_pci.h:26:
+	u8 res0[0xF4];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:NEW_TYPEDEFS: do not add new typedefs
#232: FILE: arch/ppc/syslib/ppc83xx_pci.h:32:
+typedef struct immr_ios {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#286: FILE: arch/ppc/syslib/ppc83xx_pci.h:86:
+typedef struct immr_pcictrl {

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#367: FILE: arch/ppc/syslib/ppc83xx_setup.c:22:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#378: FILE: arch/ppc/syslib/ppc83xx_setup.c:46:
+#include <asm/delay.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#394: FILE: arch/ppc/syslib/ppc83xx_setup.c:185:
+	volatile immr_pcictrl_t * pci_ctrl;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#394: FILE: arch/ppc/syslib/ppc83xx_setup.c:185:
+	volatile immr_pcictrl_t * pci_ctrl;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: arch/ppc/syslib/ppc83xx_setup.c:186:
+	volatile immr_ios_t * ios;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#395: FILE: arch/ppc/syslib/ppc83xx_setup.c:186:
+	volatile immr_ios_t * ios;

CHECK:SPACING: No space is necessary after a cast
#396: FILE: arch/ppc/syslib/ppc83xx_setup.c:187:
+	bd_t *binfo = (bd_t *) __res;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#429: FILE: arch/ppc/syslib/ppc83xx_setup.c:220:
+	udelay(2000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#431: FILE: arch/ppc/syslib/ppc83xx_setup.c:222:
+	udelay(2000);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#452: FILE: arch/ppc/syslib/ppc83xx_setup.c:243:
+	volatile immr_pcictrl_t * pci_ctrl;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#452: FILE: arch/ppc/syslib/ppc83xx_setup.c:243:
+	volatile immr_pcictrl_t * pci_ctrl;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#453: FILE: arch/ppc/syslib/ppc83xx_setup.c:244:
+	volatile immr_ios_t * ios;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#453: FILE: arch/ppc/syslib/ppc83xx_setup.c:244:
+	volatile immr_ios_t * ios;

CHECK:SPACING: No space is necessary after a cast
#454: FILE: arch/ppc/syslib/ppc83xx_setup.c:245:
+	bd_t *binfo = (bd_t *) __res;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#487: FILE: arch/ppc/syslib/ppc83xx_setup.c:278:
+	udelay(2000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#489: FILE: arch/ppc/syslib/ppc83xx_setup.c:280:
+	udelay(2000);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#516: FILE: arch/ppc/syslib/ppc83xx_setup.c:307:
+extern int mpc83xx_map_irq(struct pci_dev *dev, unsigned char idsel,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: arch/ppc/syslib/ppc83xx_setup.c:308:
+extern int mpc83xx_map_irq(struct pci_dev *dev, unsigned char idsel,
+		unsigned char pin);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#522: FILE: arch/ppc/syslib/ppc83xx_setup.c:313:
+	volatile immr_clk_t * clk;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#522: FILE: arch/ppc/syslib/ppc83xx_setup.c:313:
+	volatile immr_clk_t * clk;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#523: FILE: arch/ppc/syslib/ppc83xx_setup.c:314:
+	struct pci_controller * hose1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: arch/ppc/syslib/ppc83xx_setup.c:316:
+	struct pci_controller * hose2;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#527: FILE: arch/ppc/syslib/ppc83xx_setup.c:318:
+	bd_t * binfo = (bd_t *)__res;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: arch/ppc/syslib/ppc83xx_setup.c:321:
+	clk = ioremap(binfo->bi_immr_base + 0xA00,
+			sizeof(immr_clk_t));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#536: FILE: arch/ppc/syslib/ppc83xx_setup.c:327:
+	udelay(2000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#538: FILE: arch/ppc/syslib/ppc83xx_setup.c:329:
+	udelay(2000);

ERROR:SPACING: space required before the open parenthesis '('
#543: FILE: arch/ppc/syslib/ppc83xx_setup.c:334:
+	if(!hose1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: arch/ppc/syslib/ppc83xx_setup.c:345:
+	setup_indirect_pci(hose1, binfo->bi_immr_base + PCI1_CFG_ADDR_OFFSET,
+			binfo->bi_immr_base + PCI1_CFG_DATA_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: arch/ppc/syslib/ppc83xx_setup.c:367:
+	pci_init_resource(&hose1->io_resource,
+			MPC83xx_PCI1_LOWER_IO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: arch/ppc/syslib/ppc83xx_setup.c:371:
+	pci_init_resource(&hose1->mem_resources[0],
+			MPC83xx_PCI1_LOWER_MEM,

ERROR:SPACING: space required before the open parenthesis '('
#589: FILE: arch/ppc/syslib/ppc83xx_setup.c:380:
+	if(!hose2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: arch/ppc/syslib/ppc83xx_setup.c:387:
+	setup_indirect_pci(hose2, binfo->bi_immr_base + PCI2_CFG_ADDR_OFFSET,
+			binfo->bi_immr_base + PCI2_CFG_DATA_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: arch/ppc/syslib/ppc83xx_setup.c:402:
+	pci_init_resource(&hose2->io_resource,
+			MPC83xx_PCI2_LOWER_IO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: arch/ppc/syslib/ppc83xx_setup.c:406:
+	pci_init_resource(&hose2->mem_resources[0],
+			MPC83xx_PCI2_LOWER_MEM,

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#637: FILE: arch/ppc/syslib/ppc83xx_setup.h:22:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 13 warnings, 18 checks, 584 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
