WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
> It clashes significantly with your waitid syscall patch.  Which one do you

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#430: FILE: kernel/exit.c:1147:
+				/*FALLTHROUGH*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: kernel/ptrace.c:301:
+	BUG_ON(child->last_siginfo == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!child->last_siginfo"
#516: FILE: kernel/ptrace.c:301:
+	BUG_ON(child->last_siginfo == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: kernel/ptrace.c:307:
+	BUG_ON(child->last_siginfo == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!child->last_siginfo"
#524: FILE: kernel/ptrace.c:307:
+	BUG_ON(child->last_siginfo == NULL);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#570: FILE: kernel/sched.c:3673:
+	static const char *stat_nam[] = { "R", "S", "D", "T", "t", "Z", "X" };

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#710: FILE: kernel/signal.c:1454:
+	BUG_ON(tsk->state & (TASK_STOPPED|TASK_TRACED));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#710: FILE: kernel/signal.c:1454:
+	BUG_ON(tsk->state & (TASK_STOPPED|TASK_TRACED));
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#712: FILE: kernel/signal.c:1456:
+	BUG_ON(!tsk->ptrace &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#743: FILE: kernel/signal.c:1469:
+	if (tsk->exit_code & 0x80)
[...]
+	else if (tsk->exit_code & 0x7f)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#747: FILE: kernel/signal.c:1473:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#808: FILE: kernel/signal.c:1537:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#827: FILE: kernel/signal.c:1562:
+	BUG_ON(!(current->ptrace & PT_PTRACED));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#866: FILE: kernel/signal.c:1601:
+	BUG_ON((exit_code & (0x7f | ~0xffff)) != SIGTRAP);

WARNING:SIZEOF_PARENTHESIS: sizeof info should be sizeof(info)
#868: FILE: kernel/signal.c:1603:
+	memset(&info, 0, sizeof info);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#905: FILE: kernel/signal.c:1674:
+		current->exit_code = current->signal->group_exit_code = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 6 checks, 721 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254987.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
