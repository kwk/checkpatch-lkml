WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#70: FILE: drivers/s390/block/dasd_3990_erp.c:8:
+ * $Revision: 1.38 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: drivers/s390/block/dasd.c:2031:
+		struct dasd_eer_trigger temp;
+		temp.id = id;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: drivers/s390/block/dasd.c:2049:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#218: FILE: drivers/s390/block/dasd.c:2131:
+EXPORT_SYMBOL(dasd_register_eer_notifier);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#219: FILE: drivers/s390/block/dasd.c:2132:
+EXPORT_SYMBOL(dasd_unregister_eer_notifier);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#220: FILE: drivers/s390/block/dasd.c:2133:
+EXPORT_SYMBOL(dasd_write_eer_trigger);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: drivers/s390/block/dasd.c:2135:
+
+

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#234: FILE: drivers/s390/block/dasd_eckd.h:8:
+ * $Revision: 1.11 $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#250: FILE: drivers/s390/block/dasd_eer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#258: FILE: drivers/s390/block/dasd_eer.c:9:
+ *      $Revision: 1.4 $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#272: FILE: drivers/s390/block/dasd_eer.c:23:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#274: FILE: drivers/s390/block/dasd_eer.c:25:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: drivers/s390/block/dasd_eer.c:31:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#286: FILE: drivers/s390/block/dasd_eer.c:37:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: drivers/s390/block/dasd_eer.c:43:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: drivers/s390/block/dasd_eer.c:45:
+
+

WARNING:TYPO_SPELLING: 'themselfes' may be misspelled - perhaps 'themselves'?
#305: FILE: drivers/s390/block/dasd_eer.c:56:
+ * contains the size of the following data, and the data bytes themselfes.
                                                                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#329: FILE: drivers/s390/block/dasd_eer.c:80:
+
+

WARNING:TYPO_SPELLING: 'Alle' may be misspelled - perhaps 'All'?
#331: FILE: drivers/s390/block/dasd_eer.c:82:
+ * Alle information necessary to keep track of an internal buffer is kept in
    ^^^^

WARNING:TYPO_SPELLING: 'strored' may be misspelled - perhaps 'stored'?
#332: FILE: drivers/s390/block/dasd_eer.c:83:
+ * a struct eerbuffer. The buffer specific to a file pointer is strored in
                                                                 ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/s390/block/dasd_eer.c:102:
+        int tail;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/s390/block/dasd_eer.c:102:
+        int tail;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#368: FILE: drivers/s390/block/dasd_eer.c:119:
+	if (eerb->head < eerb->tail) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#370: FILE: drivers/s390/block/dasd_eer.c:121:
+	} else

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#371: FILE: drivers/s390/block/dasd_eer.c:122:
+		return eerb->buffersize - eerb->head + eerb->tail -1;
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#381: FILE: drivers/s390/block/dasd_eer.c:132:
+{
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#382: FILE: drivers/s390/block/dasd_eer.c:133:
+	if (eerb->head >= eerb->tail) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#384: FILE: drivers/s390/block/dasd_eer.c:135:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#397: FILE: drivers/s390/block/dasd_eer.c:148:
+{
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#398: FILE: drivers/s390/block/dasd_eer.c:149:
+	unsigned long headindex,localhead;
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/s390/block/dasd_eer.c:156:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: drivers/s390/block/dasd_eer.c:156:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/s390/block/dasd_eer.c:156:
+ ^I^Iheadindex = eerb->head / PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/s390/block/dasd_eer.c:157:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#406: FILE: drivers/s390/block/dasd_eer.c:157:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/s390/block/dasd_eer.c:157:
+ ^I^Ilocalhead = eerb->head % PAGE_SIZE;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#408: FILE: drivers/s390/block/dasd_eer.c:159:
+		memcpy(eerb->buffer[headindex]+localhead, nextdata, len);
 		                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#412: FILE: drivers/s390/block/dasd_eer.c:163:
+		if ( eerb->head == eerb->buffersize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#412: FILE: drivers/s390/block/dasd_eer.c:163:
+		if ( eerb->head == eerb->buffersize )

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#416: FILE: drivers/s390/block/dasd_eer.c:167:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#427: FILE: drivers/s390/block/dasd_eer.c:178:
+{
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#428: FILE: drivers/s390/block/dasd_eer.c:179:
+	unsigned long tailindex,localtail;
 	                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: drivers/s390/block/dasd_eer.c:187:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: drivers/s390/block/dasd_eer.c:187:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/s390/block/dasd_eer.c:187:
+ ^I^Itailindex = eerb->tail / PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/s390/block/dasd_eer.c:188:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#437: FILE: drivers/s390/block/dasd_eer.c:188:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/s390/block/dasd_eer.c:188:
+ ^I^Ilocaltail = eerb->tail % PAGE_SIZE;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: drivers/s390/block/dasd_eer.c:190:
+		memcpy(nextdata, eerb->buffer[tailindex]+localtail, len);
 		                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#443: FILE: drivers/s390/block/dasd_eer.c:194:
+		if ( eerb->tail == eerb->buffersize )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#443: FILE: drivers/s390/block/dasd_eer.c:194:
+		if ( eerb->tail == eerb->buffersize )

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#447: FILE: drivers/s390/block/dasd_eer.c:198:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: drivers/s390/block/dasd_eer.c:215:
+	int tailcount;
+	if (count + sizeof(count) > eerb->buffersize)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#474: FILE: drivers/s390/block/dasd_eer.c:225:
+				     (char*)(&tailcount));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#479: FILE: drivers/s390/block/dasd_eer.c:230:
+	dasd_eer_write_buffer(eerb, sizeof(count), (char*)(&count));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#492: FILE: drivers/s390/block/dasd_eer.c:243:
+	for (i = 0; i < no_pages; ++i) {
+		free_page((unsigned long)buf[i]);
+	}

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/s390/block/dasd_eer.c:257:
+		buf[i] = (char *) get_zeroed_page(GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#528: FILE: drivers/s390/block/dasd_eer.c:279:
+	eerb->tail=0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#529: FILE: drivers/s390/block/dasd_eer.c:280:
+	eerb->head=0;
 	          ^

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#549: FILE: drivers/s390/block/dasd_eer.c:300:
+		/* documented behaviour is that any successfull invocation
 		                                    ^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/s390/block/dasd_eer.c:301:
+                 * will purge all records */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: drivers/s390/block/dasd_eer.c:301:
+                 * will purge all records */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#554: FILE: drivers/s390/block/dasd_eer.c:305:
+	new = kmalloc(newsize*sizeof(char*), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#554: FILE: drivers/s390/block/dasd_eer.c:305:
+	new = kmalloc(newsize*sizeof(char*), GFP_KERNEL);
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: drivers/s390/block/dasd_eer.c:309:
+	reuse=min(eerb->buffer_page_count, newsize);
 	     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#559: FILE: drivers/s390/block/dasd_eer.c:310:
+	for (i = 0; i < reuse; ++i) {
+		new[i] = eerb->buffer[i];
+	}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#563: FILE: drivers/s390/block/dasd_eer.c:314:
+		if (dasd_eer_allocate_buffer_pages(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#583: FILE: drivers/s390/block/dasd_eer.c:334:
+		for (i = newsize; i < oldcount; ++i) {
+			free_page((unsigned long)old[i]);
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#592: FILE: drivers/s390/block/dasd_eer.c:343:
+
+

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#614: FILE: drivers/s390/block/dasd_eer.c:365:
+ * the necessary SNSS (sense subsystem status) request immediatly, since we
                                                        ^^^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#665: FILE: drivers/s390/block/dasd_eer.c:416:
+} __attribute__ ((packed));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#688: FILE: drivers/s390/block/dasd_eer.c:439:
+	if (!(device && device->discipline
+	      && !strcmp(device->discipline->name, "ECKD"))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#692: FILE: drivers/s390/block/dasd_eer.c:443:
+	private = (struct dasd_eer_private *)kmalloc(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#692: FILE: drivers/s390/block/dasd_eer.c:443:
+	private = (struct dasd_eer_private *)kmalloc(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#694: FILE: drivers/s390/block/dasd_eer.c:445:
+	if (!private) {
+		return ERR_PTR(-ENOMEM);
+	}

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#700: FILE: drivers/s390/block/dasd_eer.c:451:
+					    1 /* SNSS */ ,
 					                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#701: FILE: drivers/s390/block/dasd_eer.c:452:
+					    SNSS_DATA_SIZE ,
 					                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#737: FILE: drivers/s390/block/dasd_eer.c:488:
+                        /* cal the erp_postaction to clean it up  */$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#739: FILE: drivers/s390/block/dasd_eer.c:490:
+			while (erpcqr->refers) {
+				erpcqr = erpcqr->refers;
+			}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#743: FILE: drivers/s390/block/dasd_eer.c:494:
+				erp_fn = device->discipline->erp_postaction(

WARNING:LINE_SPACING: Missing a blank line after declarations
#776: FILE: drivers/s390/block/dasd_eer.c:527:
+	void *eer;
+	if (!device)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#780: FILE: drivers/s390/block/dasd_eer.c:531:
+	if (!try_module_get(THIS_MODULE)) {
+		return -EINVAL;
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: drivers/s390/block/dasd_eer.c:556:
+	dasd_eer_destroy(device,eer);
 	                       ^

CHECK:SPACING: No space is necessary after a cast
#826: FILE: drivers/s390/block/dasd_eer.c:577:
+	if (get_user(intval, (int __user *) args))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#829: FILE: drivers/s390/block/dasd_eer.c:580:
+	if (device == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#833: FILE: drivers/s390/block/dasd_eer.c:584:
+	DEV_MESSAGE (KERN_DEBUG, device,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#851: FILE: drivers/s390/block/dasd_eer.c:602:
+	if (device == NULL)

CHECK:SPACING: No space is necessary after a cast
#853: FILE: drivers/s390/block/dasd_eer.c:604:
+	return put_user((device->eer != NULL), (int __user *) args);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "device->eer"
#853: FILE: drivers/s390/block/dasd_eer.c:604:
+	return put_user((device->eer != NULL), (int __user *) args);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#893: FILE: drivers/s390/block/dasd_eer.c:644:
+		dasd_eer_write_buffer(eerb, sizeof(header), (char*)(&header));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#900: FILE: drivers/s390/block/dasd_eer.c:651:
+		dasd_eer_write_buffer(eerb, 4,"EOR");
 		                             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#939: FILE: drivers/s390/block/dasd_eer.c:690:
+		dasd_eer_write_buffer(eerb, sizeof(header),(char*)(&header));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#939: FILE: drivers/s390/block/dasd_eer.c:690:
+		dasd_eer_write_buffer(eerb, sizeof(header),(char*)(&header));
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#942: FILE: drivers/s390/block/dasd_eer.c:693:
+		dasd_eer_write_buffer(eerb, 4,"EOR");
 		                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: drivers/s390/block/dasd_eer.c:706:
+        struct dasd_device *device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/s390/block/dasd_eer.c:706:
+        struct dasd_device *device;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: drivers/s390/block/dasd_eer.c:710:
+        device = (struct dasd_device *)data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/s390/block/dasd_eer.c:710:
+        device = (struct dasd_device *)data;$

ERROR:SPACING: space required before the open parenthesis '('
#963: FILE: drivers/s390/block/dasd_eer.c:714:
+	if(!test_and_clear_bit(SNSS_REQUESTED, &private->flags)) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#972: FILE: drivers/s390/block/dasd_eer.c:723:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#988: FILE: drivers/s390/block/dasd_eer.c:739:
+	strncpy((char *) &cqr->magic, "ECKD", 4);

CHECK:SPACING: No space is necessary after a cast
#989: FILE: drivers/s390/block/dasd_eer.c:740:
+	ASCEBC((char *) &cqr->magic, 4);

ERROR:SPACING: space required before the open parenthesis '('
#1013: FILE: drivers/s390/block/dasd_eer.c:764:
+	if(test_and_set_bit(CQR_IN_USE, &private->flags)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: drivers/s390/block/dasd_eer.c:785:
+        dasd_add_request_head(cqr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: drivers/s390/block/dasd_eer.c:785:
+        dasd_add_request_head(cqr);$

WARNING:RETURN_VOID: void function return statements are not generally useful
#1037: FILE: drivers/s390/block/dasd_eer.c:788:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1052: FILE: drivers/s390/block/dasd_eer.c:803:
+		rc = dasd_eer_write_standard_trigger(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1056: FILE: drivers/s390/block/dasd_eer.c:807:
+		rc = dasd_eer_write_standard_trigger(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: drivers/s390/block/dasd_eer.c:811:
+                if (queue_work(dasd_eer_workqueue, &private->worker)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: drivers/s390/block/dasd_eer.c:811:
+                if (queue_work(dasd_eer_workqueue, &private->worker)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: drivers/s390/block/dasd_eer.c:812:
+                        rc=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: drivers/s390/block/dasd_eer.c:812:
+                        rc=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1061: FILE: drivers/s390/block/dasd_eer.c:812:
+                        rc=0;
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: drivers/s390/block/dasd_eer.c:813:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: drivers/s390/block/dasd_eer.c:813:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1063: FILE: drivers/s390/block/dasd_eer.c:814:
+                        /* If the work_struct was already queued, it can't$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: drivers/s390/block/dasd_eer.c:815:
+                         * be queued again. But this is OK since we don't$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: drivers/s390/block/dasd_eer.c:816:
+                         * need to have it queued twice.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: drivers/s390/block/dasd_eer.c:817:
+                         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: drivers/s390/block/dasd_eer.c:818:
+                        rc = -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: drivers/s390/block/dasd_eer.c:818:
+                        rc = -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1068: FILE: drivers/s390/block/dasd_eer.c:819:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: drivers/s390/block/dasd_eer.c:819:
+                }$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1071: FILE: drivers/s390/block/dasd_eer.c:822:
+		rc = dasd_eer_write_standard_trigger(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: drivers/s390/block/dasd_eer.c:834:
+static int dasd_eer_notify(struct notifier_block *self,
+			    unsigned long action, void *data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1096: FILE: drivers/s390/block/dasd_eer.c:847:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1109: FILE: drivers/s390/block/dasd_eer.c:860:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1111: FILE: drivers/s390/block/dasd_eer.c:862:
+dasd_eer_open(struct inode *inp, struct file *filp)
                                               ^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*eerb)...) over kmalloc(sizeof(struct eerbuffer)...)
#1116: FILE: drivers/s390/block/dasd_eer.c:867:
+	eerb = kmalloc(sizeof(struct eerbuffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: drivers/s390/block/dasd_eer.c:873:
+        eerb->buffer = kmalloc(eerb->buffer_page_count*sizeof(char*),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: drivers/s390/block/dasd_eer.c:873:
+        eerb->buffer = kmalloc(eerb->buffer_page_count*sizeof(char*),$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1122: FILE: drivers/s390/block/dasd_eer.c:873:
+        eerb->buffer = kmalloc(eerb->buffer_page_count*sizeof(char*),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1122: FILE: drivers/s390/block/dasd_eer.c:873:
+        eerb->buffer = kmalloc(eerb->buffer_page_count*sizeof(char*),
                                                       ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1122: FILE: drivers/s390/block/dasd_eer.c:873:
+        eerb->buffer = kmalloc(eerb->buffer_page_count*sizeof(char*),
+			       GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: drivers/s390/block/dasd_eer.c:875:
+        if (!eerb->buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: drivers/s390/block/dasd_eer.c:875:
+        if (!eerb->buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: drivers/s390/block/dasd_eer.c:876:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: drivers/s390/block/dasd_eer.c:876:
+                return -ENOMEM;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1136: FILE: drivers/s390/block/dasd_eer.c:887:
+	return nonseekable_open(inp,filp);
 	                            ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: drivers/s390/block/dasd_eer.c:887:
+	return nonseekable_open(inp,filp);
 	                           ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1140: FILE: drivers/s390/block/dasd_eer.c:891:
+dasd_eer_close(struct inode *inp, struct file *filp)
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1157: FILE: drivers/s390/block/dasd_eer.c:908:
+dasd_eer_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1177: FILE: drivers/s390/block/dasd_eer.c:928:
+dasd_eer_read(struct file *filp, char __user *buf, size_t count, loff_t *ppos)
                            ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1179: FILE: drivers/s390/block/dasd_eer.c:930:
+	int tc,rc;
 	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1180: FILE: drivers/s390/block/dasd_eer.c:931:
+	int tailcount,effective_count;
 	             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1181: FILE: drivers/s390/block/dasd_eer.c:932:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: drivers/s390/block/dasd_eer.c:932:
+        unsigned long flags;$

ERROR:SPACING: space required before the open parenthesis '('
#1185: FILE: drivers/s390/block/dasd_eer.c:936:
+	if(down_interruptible(&readbuffer_mutex))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: drivers/s390/block/dasd_eer.c:942:
+^I^I                  /* has been deleted             */$

WARNING:MINMAX: min() should probably be min_t(int, eerb->residual, count)
#1198: FILE: drivers/s390/block/dasd_eer.c:949:
+		effective_count = min(eerb->residual, (int)count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: drivers/s390/block/dasd_eer.c:955:
+			tc = dasd_eer_read_buffer(eerb,
+				sizeof(tailcount), (char*)(&tailcount));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1204: FILE: drivers/s390/block/dasd_eer.c:955:
+				sizeof(tailcount), (char*)(&tailcount));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1211: FILE: drivers/s390/block/dasd_eer.c:962:
+				rc = wait_event_interruptible(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1214: FILE: drivers/s390/block/dasd_eer.c:965:
+				if (rc) {
+					return rc;
+				}

ERROR:SPACING: space required before the open parenthesis '('
#1217: FILE: drivers/s390/block/dasd_eer.c:968:
+				if(down_interruptible(&readbuffer_mutex))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1223: FILE: drivers/s390/block/dasd_eer.c:974:
+		effective_count = min(tailcount,(int)count);
 		                               ^

WARNING:MINMAX: min() should probably be min_t(int, tailcount, count)
#1223: FILE: drivers/s390/block/dasd_eer.c:974:
+		effective_count = min(tailcount,(int)count);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1242: FILE: drivers/s390/block/dasd_eer.c:993:
+dasd_eer_poll (struct file *filp, poll_table *ptable)
                             ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1242: FILE: drivers/s390/block/dasd_eer.c:993:
+dasd_eer_poll (struct file *filp, poll_table *ptable)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1249: FILE: drivers/s390/block/dasd_eer.c:1000:
+	poll_wait(filp, &dasd_eer_read_wait_queue, ptable);
 	          ^^^^

WARNING:SPACING: space prohibited before semicolon
#1252: FILE: drivers/s390/block/dasd_eer.c:1003:
+		mask = POLLIN | POLLRDNORM ;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1259: FILE: drivers/s390/block/dasd_eer.c:1010:
+static struct file_operations dasd_eer_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1275: FILE: drivers/s390/block/dasd_eer.c:1026:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1287: FILE: drivers/s390/block/dasd_eer.c:1038:
+		MESSAGE(KERN_ERR , "%s", "dasd_eer_init could not "
 		                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#1288: FILE: drivers/s390/block/dasd_eer.c:1039:
+		MESSAGE(KERN_ERR , "%s", "dasd_eer_init could not "
+		       "create workqueue \n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1288: FILE: drivers/s390/block/dasd_eer.c:1039:
+		       "create workqueue \n");

WARNING:SPLIT_STRING: quoted string split across lines
#1296: FILE: drivers/s390/block/dasd_eer.c:1047:
+		MESSAGE(KERN_ERR, "%s", "dasd_eer_init could not "
+		       "register error reporting");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1304: FILE: drivers/s390/block/dasd_eer.c:1055:
+	 * so we just register as misc device */

WARNING:SPLIT_STRING: quoted string split across lines
#1308: FILE: drivers/s390/block/dasd_eer.c:1059:
+		MESSAGE(KERN_ERR, "%s", "dasd_eer_init could not "
+		       "register misc device");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1325: FILE: drivers/s390/block/dasd_eer.c:1076:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1348: FILE: drivers/s390/block/dasd_int.h:279:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1375: FILE: drivers/s390/block/dasd_int.h:306:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#1393: FILE: drivers/s390/block/dasd_int.h:523:
+int dasd_register_eer_notifier(struct notifier_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#1394: FILE: drivers/s390/block/dasd_int.h:524:
+int dasd_unregister_eer_notifier(struct notifier_block *);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1395: FILE: drivers/s390/block/dasd_int.h:525:
+void dasd_write_eer_trigger(unsigned int , struct dasd_device *,
                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1395: FILE: drivers/s390/block/dasd_int.h:525:
+void dasd_write_eer_trigger(unsigned int , struct dasd_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#1395: FILE: drivers/s390/block/dasd_int.h:525:
+void dasd_write_eer_trigger(unsigned int , struct dasd_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_ccw_req *' should also have an identifier name
#1395: FILE: drivers/s390/block/dasd_int.h:525:
+void dasd_write_eer_trigger(unsigned int , struct dasd_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1396: FILE: drivers/s390/block/dasd_int.h:526:
+void dasd_write_eer_trigger(unsigned int , struct dasd_device *,
+			struct dasd_ccw_req *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1398: FILE: drivers/s390/block/dasd_int.h:528:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1409: FILE: drivers/s390/block/Kconfig:58:
+config DASD_EER
+	tristate "Extended error reporting (EER)"
+	depends on DASD
+	help
+	  This driver provides a character device interface to the
+          DASD extended error reporting. This is only needed if you want to
+          use applications written for the EER facility.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1456: FILE: include/asm-s390/dasd.h:11:
+ * $Revision: 1.7 $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1475: FILE: include/asm-s390/dasd.h:243:
+#define BIODASDEERGET  _IOR(DASD_IOCTL_LETTER,6,int)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1475: FILE: include/asm-s390/dasd.h:243:
+#define BIODASDEERGET  _IOR(DASD_IOCTL_LETTER,6,int)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1483: FILE: include/asm-s390/dasd.h:251:
+#define BIODASDEERSET  _IOW(DASD_IOCTL_LETTER,3,int)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1483: FILE: include/asm-s390/dasd.h:251:
+#define BIODASDEERSET  _IOW(DASD_IOCTL_LETTER,3,int)
                                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1485: FILE: include/asm-s390/dasd.h:253:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1487: FILE: include/asm-s390/dasd.h:255:
+#define DASD_EER_PURGE       _IO(DASD_IOCTL_LETTER,230)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1489: FILE: include/asm-s390/dasd.h:257:
+#define DASD_EER_SETBUFSIZE  _IOW(DASD_IOCTL_LETTER,230,int)
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1489: FILE: include/asm-s390/dasd.h:257:
+#define DASD_EER_SETBUFSIZE  _IOW(DASD_IOCTL_LETTER,230,int)
                                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 80 warnings, 46 checks, 1392 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124710.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
