WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#61: 
 fs/ocfs2/uptodate.c                                   |   12 
          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#62: 
 fs/ocfs2/uptodate.h                                   |    2 
          ^^^^^^^^

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#137: FILE: MAINTAINERS:560:
 P:	Joel Becker
+M:	joel.becker@oracle.com

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#163: FILE: fs/configfs/configfs_internal.h:39:
+	struct iattr		* s_iattr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/configfs/configfs_internal.h:56:
+extern struct inode * configfs_new_inode(mode_t mode, struct configfs_dirent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: fs/configfs/configfs_internal.h:56:
+extern struct inode * configfs_new_inode(mode_t mode, struct configfs_dirent *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct configfs_dirent *' should also have an identifier name
#176: FILE: fs/configfs/configfs_internal.h:56:
+extern struct inode * configfs_new_inode(mode_t mode, struct configfs_dirent *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: fs/configfs/configfs_internal.h:68:
+extern int configfs_setattr(struct dentry *dentry, struct iattr *iattr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: fs/configfs/dir.c:148:
+			struct configfs_dirent *sd = d->d_fsdata;
+			if (sd) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: fs/configfs/dir.c:197:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: fs/configfs/dir.c:199:
+			struct configfs_dirent *sd = dentry->d_fsdata;
+			if (sd) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#359: FILE: fs/configfs/inode.c:52:
+static struct inode_operations configfs_inode_operations ={
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#359: FILE: fs/configfs/inode.c:52:
+static struct inode_operations configfs_inode_operations ={

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: fs/configfs/inode.c:56:
+int configfs_setattr(struct dentry * dentry, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: fs/configfs/inode.c:56:
+int configfs_setattr(struct dentry * dentry, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#365: FILE: fs/configfs/inode.c:58:
+	struct inode * inode = dentry->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: fs/configfs/inode.c:59:
+	struct configfs_dirent * sd = dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: fs/configfs/inode.c:60:
+	struct iattr * sd_iattr;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sd_iattr)...) over kmalloc(sizeof(struct iattr)...)
#386: FILE: fs/configfs/inode.c:79:
+		sd_iattr = kmalloc(sizeof(struct iattr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#394: FILE: fs/configfs/inode.c:87:
+		sd_iattr->ia_atime = sd_iattr->ia_mtime = sd_iattr->ia_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#398: FILE: fs/configfs/inode.c:91:
+	/* attributes were changed atleast once in past */
 	                           ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: fs/configfs/inode.c:99:
+		sd_iattr->ia_atime = timespec_trunc(iattr->ia_atime,
+						inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: fs/configfs/inode.c:102:
+		sd_iattr->ia_mtime = timespec_trunc(iattr->ia_mtime,
+						inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: fs/configfs/inode.c:105:
+		sd_iattr->ia_ctime = timespec_trunc(iattr->ia_ctime,
+						inode->i_sb->s_time_gran);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#418: FILE: fs/configfs/inode.c:111:
+		sd_iattr->ia_mode = sd->s_mode = mode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#424: FILE: fs/configfs/inode.c:117:
+static inline void set_default_inode_attr(struct inode * inode, mode_t mode)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#429: FILE: fs/configfs/inode.c:122:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: fs/configfs/inode.c:125:
+static inline void set_inode_attr(struct inode * inode, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#432: FILE: fs/configfs/inode.c:125:
+static inline void set_inode_attr(struct inode * inode, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: fs/configfs/inode.c:135:
+struct inode * configfs_new_inode(mode_t mode, struct configfs_dirent * sd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: fs/configfs/inode.c:135:
+struct inode * configfs_new_inode(mode_t mode, struct configfs_dirent * sd)

CHECK:BRACES: braces {} should be used on all arms of this statement
#456: FILE: fs/configfs/inode.c:145:
+		if (sd->s_iattr) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: fs/configfs/inode.c:151:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: fs/configfs/inode.c:164:
+			struct configfs_dirent *sd = dentry->d_fsdata;
+			if ((inode = configfs_new_inode(mode, sd))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#473: FILE: fs/configfs/inode.c:164:
+			if ((inode = configfs_new_inode(mode, sd))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#486: FILE: fs/configfs/inode.c:199:
+	BUG_ON(!sd || !sd->s_element);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dir->d_inode"
#522: FILE: fs/configfs/inode.c:242:
+	if (dir->d_inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0755'.
#557: FILE: fs/configfs/mount.c:81:
+	inode = configfs_new_inode(S_IFDIR | S_IRWXU | S_IRUGO | S_IXUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#622: FILE: fs/configfs/symlink.c:165:
+	BUG_ON(dentry->d_parent == configfs_sb->s_root);

CHECK:SPACING: No space is necessary after a cast
#690: FILE: fs/ocfs2/cluster/heartbeat.c:920:
+		     before_hb.tv_sec, (unsigned long) before_hb.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#691: FILE: fs/ocfs2/cluster/heartbeat.c:921:
+		     after_hb.tv_sec, (unsigned long) after_hb.tv_usec,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: fs/ocfs2/cluster/tcp.c:1288:
+^I     sc->sc_tv_timer.tv_sec, (long) sc->sc_tv_timer.tv_usec, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#709: FILE: fs/ocfs2/cluster/tcp.c:1288:
+	     sc->sc_tv_timer.tv_sec, (long) sc->sc_tv_timer.tv_usec, 

CHECK:SPACING: No space is necessary after a cast
#710: FILE: fs/ocfs2/cluster/tcp.c:1289:
+	     now.tv_sec, (long) now.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#711: FILE: fs/ocfs2/cluster/tcp.c:1290:
+	     sc->sc_tv_data_ready.tv_sec, (long) sc->sc_tv_data_ready.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#713: FILE: fs/ocfs2/cluster/tcp.c:1292:
+	     (long) sc->sc_tv_advance_start.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#715: FILE: fs/ocfs2/cluster/tcp.c:1294:
+	     (long) sc->sc_tv_advance_stop.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#719: FILE: fs/ocfs2/cluster/tcp.c:1296:
+	     sc->sc_tv_func_start.tv_sec, (long) sc->sc_tv_func_start.tv_usec,

CHECK:SPACING: No space is necessary after a cast
#720: FILE: fs/ocfs2/cluster/tcp.c:1297:
+	     sc->sc_tv_func_stop.tv_sec, (long) sc->sc_tv_func_stop.tv_usec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: fs/ocfs2/dlm/dlmdomain.c:576:
+^I * to be put in someone's domain map. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#747: FILE: fs/ocfs2/dlm/dlmdomain.c:578:
+	 * times (ie. during recovery). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#759: FILE: fs/ocfs2/dlm/dlmdomain.c:594:
+			mlog(ML_NOTICE, "node %u trying to join, but recovery "
+			     "is ongoing.\n", bit);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#763: FILE: fs/ocfs2/dlm/dlmdomain.c:598:
+			mlog(ML_NOTICE, "node %u trying to join, but it "
+			     "still needs recovery.\n", bit);

WARNING:SPLIT_STRING: quoted string split across lines
#767: FILE: fs/ocfs2/dlm/dlmdomain.c:602:
+			mlog(ML_NOTICE, "node %u trying to join, but it "
+			     "is still in the domain! needs recovery?\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#794: FILE: fs/ocfs2/dlm/dlmmaster.c:1055:
+			 * then restart the mastery. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: fs/ocfs2/dlm/dlmmaster.c:2001:
+^I^I^I/* avoid hang during shutdown when migrating lockres $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#804: FILE: fs/ocfs2/dlm/dlmmaster.c:2002:
+			 * to a node which also goes down */

WARNING:SPLIT_STRING: quoted string split across lines
#807: FILE: fs/ocfs2/dlm/dlmmaster.c:2005:
+				mlog(0, "%s:%.*s: expected migration target %u "
+				     "is no longer up.  restarting.\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#835: FILE: fs/ocfs2/dlm/dlmrecovery.c:264:
+	int ready;
+	spin_lock(&dlm->spinlock);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#842: FILE: fs/ocfs2/dlm/dlmrecovery.c:271:
+ * could be dead or just not joined */

WARNING:LINE_SPACING: Missing a blank line after declarations
#846: FILE: fs/ocfs2/dlm/dlmrecovery.c:275:
+	int dead;
+	spin_lock(&dlm->spinlock);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#872: FILE: fs/ocfs2/dlm/dlmrecovery.c:372:
+		 * or recovery completes entirely. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#885: FILE: fs/ocfs2/dlm/dlmrecovery.c:401:
+		 * to get handled on remaining nodes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#911: FILE: fs/ocfs2/dlm/dlmrecovery.c:523:
+					 * the node is really seen as dead. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: fs/ocfs2/dlm/dlmrecovery.c:526:
+							   dlm_is_node_dead(dlm,
+								ndata->node_num),

WARNING:SPLIT_STRING: quoted string split across lines
#917: FILE: fs/ocfs2/dlm/dlmrecovery.c:529:
+					mlog(0, "waited 1 sec for %u, "
+					     "dead? %s\n", ndata->node_num,

WARNING:SPLIT_STRING: quoted string split across lines
#933: FILE: fs/ocfs2/dlm/dlmrecovery.c:731:
+		mlog(ML_ERROR, "%s: bad reco state: reco(dead=%u, master=%u), "
+		     "request(dead=%u, master=%u)\n",

CHECK:CAMELCASE: Avoid CamelCase: <MLFu64>
#937: FILE: fs/ocfs2/dlm/dlmrecovery.c:735:
+		     "entry[0]={c=%"MLFu64",l=%u,f=%u,t=%d,ct=%d,hb=%d,n=%u}\n",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: fs/ocfs2/dlm/dlmrecovery.c:735:
+		mlog(ML_ERROR, "%s: name=%.*s master=%u locks=%u/%u flags=%u "
+		     "entry[0]={c=%"MLFu64",l=%u,f=%u,t=%d,ct=%d,hb=%d,n=%u}\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#937: FILE: fs/ocfs2/dlm/dlmrecovery.c:735:
+		     "entry[0]={c=%"MLFu64",l=%u,f=%u,t=%d,ct=%d,hb=%d,n=%u}\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#943: FILE: fs/ocfs2/dlm/dlmrecovery.c:741:
+		BUG();

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#956: FILE: fs/ocfs2/dlm/dlmrecovery.c:819:
 		switch (ndata->state) {
[...]
+			case DLM_RECO_NODE_DATA_DONE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#968: FILE: fs/ocfs2/dlm/dlmrecovery.c:830:
+			 * the line of recovery */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#983: FILE: fs/ocfs2/dlm/dlmrecovery.c:871:
+		 * otherwise hangs can occur during later recovery */

WARNING:SPLIT_STRING: quoted string split across lines
#991: FILE: fs/ocfs2/dlm/dlmrecovery.c:878:
+					mlog(0, "AHA! there was "
+					     "a $RECOVERY lock for dead "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#992: FILE: fs/ocfs2/dlm/dlmrecovery.c:879:
+^I^I^I^I^I     "node %u (%s)!\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#992: FILE: fs/ocfs2/dlm/dlmrecovery.c:879:
+					     "a $RECOVERY lock for dead "
+					     "node %u (%s)!\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1012: FILE: fs/ocfs2/dlm/dlmrecovery.c:1264:
+			mlog(0, "dlm_lockres_master_requery ret=%d\n",
 				  ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: fs/ocfs2/dlm/dlmrecovery.c:1865:
+ ^I^I^I/* always prune any $RECOVERY entries for dead nodes,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1027: FILE: fs/ocfs2/dlm/dlmrecovery.c:1865:
+ ^I^I^I/* always prune any $RECOVERY entries for dead nodes,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: fs/ocfs2/dlm/dlmrecovery.c:1865:
+ ^I^I^I/* always prune any $RECOVERY entries for dead nodes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: fs/ocfs2/dlm/dlmrecovery.c:1866:
+ ^I^I^I * otherwise hangs can occur during later recovery */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1028: FILE: fs/ocfs2/dlm/dlmrecovery.c:1866:
+ ^I^I^I * otherwise hangs can occur during later recovery */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1028: FILE: fs/ocfs2/dlm/dlmrecovery.c:1866:
+ 			 * otherwise hangs can occur during later recovery */

WARNING:SPLIT_STRING: quoted string split across lines
#1036: FILE: fs/ocfs2/dlm/dlmrecovery.c:1873:
+						mlog(0, "AHA! there was "
+						     "a $RECOVERY lock for dead "

WARNING:SPLIT_STRING: quoted string split across lines
#1037: FILE: fs/ocfs2/dlm/dlmrecovery.c:1874:
+						     "a $RECOVERY lock for dead "
+						     "node %u (%s)!\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: fs/ocfs2/dlm/dlmrecovery.c:1883:
+^I^I^I}^I^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1062: FILE: fs/ocfs2/dlm/dlmrecovery.c:1971:
+	 * new nodes are not interesting in mastery until joined. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: fs/ocfs2/dlm/dlmrecovery.c:2001:
+ * or b) dlm->reco.new_master gets set to some nodenum $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: fs/ocfs2/dlm/dlmrecovery.c:2005:
+ * be detected in dlm_do_recovery */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: fs/ocfs2/dlm/dlmrecovery.c:2014:
+again:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1107: FILE: fs/ocfs2/dlm/dlmrecovery.c:2026:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: fs/ocfs2/dlm/dlmrecovery.c:2027:
+^I^I/* got the EX lock.  check to see if another node $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1109: FILE: fs/ocfs2/dlm/dlmrecovery.c:2028:
+		 * just became the reco master */

WARNING:SPLIT_STRING: quoted string split across lines
#1112: FILE: fs/ocfs2/dlm/dlmrecovery.c:2031:
+			mlog(0, "%s: got reco EX lock, but %u will "
+			     "do the recovery\n", dlm->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: fs/ocfs2/dlm/dlmrecovery.c:2036:
+			status = dlm_send_begin_reco_message(dlm,
+				      dlm->reco.dead_node);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1119: FILE: fs/ocfs2/dlm/dlmrecovery.c:2038:
+			BUG_ON(status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: fs/ocfs2/dlm/dlmrecovery.c:2066:
+^I^I * reco.new_master != O2NM_INVALID_NODE_NUM $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1156: FILE: fs/ocfs2/dlm/dlmrecovery.c:2067:
+		 * for at most one second */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: fs/ocfs2/dlm/dlmrecovery.c:2069:
+		wait_event_timeout(dlm->dlm_reco_thread_wq,
+					 dlm_reco_master_ready(dlm),

WARNING:SPLIT_STRING: quoted string split across lines
#1174: FILE: fs/ocfs2/dlm/dlmrecovery.c:2085:
+		mlog(ML_ERROR, "%s: got %s from dlmlock($RECOVERY), "
+		     "lksb.status=%s\n", dlm->name, dlm_errname(ret),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1184: FILE: fs/ocfs2/dlm/dlmrecovery.c:2095:
+		BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1203: FILE: fs/ocfs2/dlm/dlmrecovery.c:2145:
+			 * so just keep going */

WARNING:SPLIT_STRING: quoted string split across lines
#1205: FILE: fs/ocfs2/dlm/dlmrecovery.c:2147:
+			mlog(0, "%s: node %u was down when sending "
+			     "begin reco msg (%d)\n", dlm->name, nodenum, ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: fs/ocfs2/dlm/dlmrecovery.c:2152:
+^I^I^I/* this is now a serious problem, possibly ENOMEM $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1211: FILE: fs/ocfs2/dlm/dlmrecovery.c:2153:
+			 * in the network stack.  must retry */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1220: FILE: fs/ocfs2/dlm/dlmrecovery.c:2165:
+^I^I^I/* sleep for a bit in hopes that we can avoid $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1221: FILE: fs/ocfs2/dlm/dlmrecovery.c:2166:
+			 * another ENOMEM */

WARNING:SPLIT_STRING: quoted string split across lines
#1235: FILE: fs/ocfs2/dlm/dlmrecovery.c:2193:
+			mlog(0, "%s: new_master %u died, changing "
+			     "to %u\n", dlm->name, dlm->reco.new_master,

WARNING:SPLIT_STRING: quoted string split across lines
#1239: FILE: fs/ocfs2/dlm/dlmrecovery.c:2197:
+			mlog(0, "%s: new_master %u NOT DEAD, changing "
+			     "to %u\n", dlm->name, dlm->reco.new_master,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: fs/ocfs2/dlm/dlmrecovery.c:2204:
+^I^I     "node %u changing it to %u\n", dlm->name, $

WARNING:SPLIT_STRING: quoted string split across lines
#1248: FILE: fs/ocfs2/dlm/dlmrecovery.c:2204:
+		mlog(ML_NOTICE, "%s: dead_node previously set to %u, "
+		     "node %u changing it to %u\n", dlm->name, 

WARNING:SPLIT_STRING: quoted string split across lines
#1261: FILE: fs/ocfs2/dlm/dlmrecovery.c:2216:
+			mlog(0, "%u not in domain/live_nodes map "
+			     "so setting it in reco map manually\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: fs/ocfs2/dlm/dlmunlock.c:191:
+^I^I} else if (status == DLM_RECOVERING || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: fs/ocfs2/dlm/dlmunlock.c:192:
+^I^I^I   status == DLM_MIGRATING || $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1280: FILE: fs/ocfs2/dlm/dlmunlock.c:196:
+			 * any list manipulation. */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1284: FILE: fs/ocfs2/dlm/dlmunlock.c:200:
+			     status==DLM_RECOVERING?"recovering":
 			           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1284: FILE: fs/ocfs2/dlm/dlmunlock.c:200:
+			     status==DLM_RECOVERING?"recovering":
 			                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1284: FILE: fs/ocfs2/dlm/dlmunlock.c:200:
+			     status==DLM_RECOVERING?"recovering":
 			                                        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1285: FILE: fs/ocfs2/dlm/dlmunlock.c:201:
+			     (status==DLM_MIGRATING?"migrating":
 			            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1285: FILE: fs/ocfs2/dlm/dlmunlock.c:201:
+			     (status==DLM_MIGRATING?"migrating":
 			                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1285: FILE: fs/ocfs2/dlm/dlmunlock.c:201:
+			     (status==DLM_MIGRATING?"migrating":
 			                                       ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1314: FILE: fs/ocfs2/extent_map.c:265:
+	BUG_ON(el->l_tree_depth);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1325: FILE: fs/ocfs2/extent_map.c:367:
+	BUG_ON(ent->e_tree_depth);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1335: FILE: fs/ocfs2/extent_map.c:425:
+	BUG_ON(!old_ent);

CHECK:SPACING: No space is necessary after a cast
#1359: FILE: fs/ocfs2/file.c:1026:
+		     (long long) saved_pos, (long long) newsize,

CHECK:SPACING: No space is necessary after a cast
#1360: FILE: fs/ocfs2/file.c:1027:
+		     (long long) i_size_read(inode));

WARNING:SPLIT_STRING: quoted string split across lines
#1370: FILE: fs/ocfs2/file.c:1046:
 		mlog(0, "Writing at EOF, may need more allocation: "
+		     "i_size = %lld, newsize = %lld, need %u clusters\n",

CHECK:SPACING: No space is necessary after a cast
#1371: FILE: fs/ocfs2/file.c:1047:
+		     (long long) i_size_read(inode), (long long) newsize,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1387: FILE: fs/ocfs2/inode.c:907:
+			"Clear inode of %"MLFu64", io_mutex is locked\n",

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1403: FILE: fs/ocfs2/inode.h:49:
+	struct mutex			ip_io_mutex;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1421: FILE: fs/ocfs2/journal.c:150:
+	BUG_ON(!osb || !osb->journal->j_journal);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1450: FILE: fs/ocfs2/journal.c:565:
+	 * exception to the rule. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1462: FILE: fs/ocfs2/journal.c:678:
+	BUG_ON(!osb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1472: FILE: fs/ocfs2/journal.c:810:
+	BUG_ON(!journal);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1522: FILE: fs/ocfs2/journal.c:1275:
+	BUG_ON(osb->node_num == node_num);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1543: FILE: fs/ocfs2/ocfs2.h:237:
+	struct mutex recovery_lock;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1578: FILE: fs/ocfs2/super.c:1257:
+	BUG_ON(!osb->s_sectsize_bits);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1601: FILE: fs/ocfs2/sysfile.c:80:
+		BUG_ON(!inode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1611: FILE: fs/ocfs2/sysfile.c:91:
+		BUG_ON(!*arr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1633: FILE: fs/ocfs2/uptodate.c:421:
+	 * ip_io_mutex */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1642: FILE: fs/ocfs2/uptodate.c:443:
+ * allocated, but this is careful to take ip_io_mutex anyway. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 70 warnings, 36 checks, 1377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000108217.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
