ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Pete Zaitcev'
#43: 
Signed-off-by: Pete Zaitcev

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#52: FILE: drivers/usb/core/hcd.c:89:
+EXPORT_SYMBOL_GPL (usb_bus_list);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#60: FILE: drivers/usb/core/hcd.c:100:
+EXPORT_SYMBOL_GPL (usb_bus_list_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: drivers/usb/core/hcd.c:751:
+	usbmon_notify_bus_add (bus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#76: FILE: drivers/usb/core/hcd.c:779:
+	usbmon_notify_bus_remove (bus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/usb/core/hcd.c:1469:
+	urb_unlink (urb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: drivers/usb/core/hcd.c:1488:
+	usbmon_urb_complete (&hcd->self, urb);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#150: FILE: drivers/usb/core/hcd.c:1599:
+#if defined(CONFIG_USB_MON) || defined(CONFIG_USB_MON_MODULE)

WARNING:CONST_STRUCT: struct usb_mon_operations should normally be const
#152: FILE: drivers/usb/core/hcd.c:1601:
+struct usb_mon_operations *mon_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/usb/core/hcd.c:1610:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/usb/core/hcd.c:1610:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/usb/core/hcd.c:1611:
+int usb_mon_register (struct usb_mon_operations *ops)

WARNING:CONST_STRUCT: struct usb_mon_operations should normally be const
#162: FILE: drivers/usb/core/hcd.c:1611:
+int usb_mon_register (struct usb_mon_operations *ops)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#164: FILE: drivers/usb/core/hcd.c:1613:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#169: FILE: drivers/usb/core/hcd.c:1618:
+	mb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: drivers/usb/core/hcd.c:1621:
+EXPORT_SYMBOL_GPL (usb_mon_register);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: drivers/usb/core/hcd.c:1623:
+void usb_mon_deregister (void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#176: FILE: drivers/usb/core/hcd.c:1625:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mon_ops"
#177: FILE: drivers/usb/core/hcd.c:1626:
+	if (mon_ops == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: drivers/usb/core/hcd.c:1627:
+		printk(KERN_ERR "USB: monitor was not registered\n");

WARNING:MEMORY_BARRIER: memory barrier without comment
#182: FILE: drivers/usb/core/hcd.c:1631:
+	mb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: drivers/usb/core/hcd.c:1633:
+EXPORT_SYMBOL_GPL (usb_mon_deregister);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#194: FILE: drivers/usb/core/hcd.h:414:
+#if defined(CONFIG_USB_MON) || defined(CONFIG_USB_MON_MODULE)

WARNING:CONST_STRUCT: struct usb_mon_operations should normally be const
#205: FILE: drivers/usb/core/hcd.h:425:
+extern struct usb_mon_operations *mon_ops;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/usb/core/hcd.h:434:
+static inline void usbmon_urb_submit_error(struct usb_bus *bus, struct urb *urb,
+    int error)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/usb/core/hcd.h:434:
+    int error)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/usb/core/hcd.h:445:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/usb/core/hcd.h:445:
+ $

WARNING:CONST_STRUCT: struct usb_mon_operations should normally be const
#238: FILE: drivers/usb/core/hcd.h:458:
+int usb_mon_register(struct usb_mon_operations *ops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/usb/core/hcd.h:465:
+static inline void usbmon_urb_submit_error(struct usb_bus *bus, struct urb *urb,
+    int error) {}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/usb/core/hcd.h:465:
+    int error) {}$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: drivers/usb/mon/mon_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#367: FILE: drivers/usb/mon/mon_main.c:46:
+			printk(KERN_ERR TAG ": bus %d is already monitored\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/usb/mon/mon_main.c:47:
+			printk(KERN_ERR TAG ": bus %d is already monitored\n",
+			    ubus->busnum);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mbus"
#410: FILE: drivers/usb/mon/mon_main.c:89:
+	if (mbus == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: drivers/usb/mon/mon_main.c:96:
+	list_for_each (pos, &mbus->r_list) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mbus"
#438: FILE: drivers/usb/mon/mon_main.c:117:
+	if (mbus == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mbus"
#461: FILE: drivers/usb/mon/mon_main.c:140:
+	if (mbus == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#466: FILE: drivers/usb/mon/mon_main.c:145:
+		printk(KERN_ERR TAG ": Null mon bus in URB, pipe 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/usb/mon/mon_main.c:146:
+		printk(KERN_ERR TAG ": Null mon bus in URB, pipe 0x%x\n",
+		    urb->pipe);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#472: FILE: drivers/usb/mon/mon_main.c:151:
+	list_for_each (pos, &mbus->r_list) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubus"
#493: FILE: drivers/usb/mon/mon_main.c:172:
+	if (ubus != NULL) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#495: FILE: drivers/usb/mon/mon_main.c:174:
+		mb();

WARNING:CONST_STRUCT: struct usb_mon_operations should normally be const
#530: FILE: drivers/usb/mon/mon_main.c:209:
+static struct usb_mon_operations mon_ops_0 = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#543: FILE: drivers/usb/mon/mon_main.c:222:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#548: FILE: drivers/usb/mon/mon_main.c:227:
+		printk(KERN_ERR TAG ": bus %d is dissolved while monitored\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/usb/mon/mon_main.c:228:
+		printk(KERN_ERR TAG ": bus %d is dissolved while monitored\n",
+		    ubus->busnum);

WARNING:MEMORY_BARRIER: memory barrier without comment
#551: FILE: drivers/usb/mon/mon_main.c:230:
+		mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: drivers/usb/mon/mon_main.c:244:
+	struct mon_bus *mbus = container_of(r, struct mon_bus, ref);
+	kfree(mbus);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#582: FILE: drivers/usb/mon/mon_main.c:261:
+	if ((mbus = kmalloc(sizeof(struct mon_bus), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mbus)...) over kmalloc(sizeof(struct mon_bus)...)
#582: FILE: drivers/usb/mon/mon_main.c:261:
+	if ((mbus = kmalloc(sizeof(struct mon_bus), GFP_KERNEL)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#601: FILE: drivers/usb/mon/mon_main.c:280:
+	if (d == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#609: FILE: drivers/usb/mon/mon_main.c:288:
+	if (d == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#635: FILE: drivers/usb/mon/mon_main.c:314:
+		printk(KERN_NOTICE TAG ": debugs is not available\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mondir"
#638: FILE: drivers/usb/mon/mon_main.c:317:
+	if (mondir == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#639: FILE: drivers/usb/mon/mon_main.c:318:
+		printk(KERN_NOTICE TAG ": unable to create usbmon directory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#645: FILE: drivers/usb/mon/mon_main.c:324:
+		printk(KERN_NOTICE TAG ": unable to register with the core\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: drivers/usb/mon/mon_main.c:331:
+	list_for_each_entry (ubus, &usb_bus_list, bus_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#681: FILE: drivers/usb/mon/mon_main.c:360:
+			printk(KERN_ERR TAG

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#703: FILE: drivers/usb/mon/mon_stat.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#714: FILE: drivers/usb/mon/mon_stat.c:12:
+#include <asm/uaccess.h>

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#730: FILE: drivers/usb/mon/mon_stat.c:28:
+	if ((sp = kmalloc(sizeof(struct snap), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sp)...) over kmalloc(sizeof(struct snap)...)
#730: FILE: drivers/usb/mon/mon_stat.c:28:
+	if ((sp = kmalloc(sizeof(struct snap), GFP_KERNEL)) == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/usb/mon/mon_stat.c:34:
+	sp->slen = snprintf(sp->str, STAT_BUF_SIZE,
+	    "nreaders %d text_lost %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/usb/mon/mon_stat.c:42:
+static ssize_t mon_stat_read(struct file *file, char __user *buf,
+				size_t nbytes, loff_t *ppos)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#754: FILE: drivers/usb/mon/mon_stat.c:52:
+	if ((cnt = sp->slen - pos) > nbytes)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#767: FILE: drivers/usb/mon/mon_stat.c:65:
+struct file_operations mon_fops_stat = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#781: FILE: drivers/usb/mon/mon_text.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#791: FILE: drivers/usb/mon/mon_text.c:11:
+#include <asm/uaccess.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/usb/mon/mon_text.c:68:
+static inline char mon_text_get_data(struct mon_event_text *ep, struct urb *urb,
+    int len, char ev_type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: drivers/usb/mon/mon_text.c:68:
+    int len, char ev_type)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#868: FILE: drivers/usb/mon/mon_text.c:88:
+	if ((data = urb->transfer_buffer) == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: drivers/usb/mon/mon_text.c:92:
+^I * Bulk is easy to shortcut reliably. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: drivers/usb/mon/mon_text.c:125:
+static void mon_text_event(struct mon_reader_text *rp, struct urb *urb,
+    char ev_type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/usb/mon/mon_text.c:125:
+    char ev_type)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#912: FILE: drivers/usb/mon/mon_text.c:132:
+	if (rp->nevents >= EVENT_MAX ||

CHECK:SPACING: No space is necessary after a cast
#920: FILE: drivers/usb/mon/mon_text.c:140:
+	ep->id = (unsigned long) urb;

WARNING:LINE_SPACING: Missing a blank line after declarations
#937: FILE: drivers/usb/mon/mon_text.c:157:
+	struct mon_reader_text *rp = data;
+	mon_text_event(rp, urb, 'S');

WARNING:LINE_SPACING: Missing a blank line after declarations
#943: FILE: drivers/usb/mon/mon_text.c:163:
+	struct mon_reader_text *rp = data;
+	mon_text_event(rp, urb, 'C');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: drivers/usb/mon/mon_text.c:170:
+static struct mon_event_text *mon_text_fetch(struct mon_reader_text *rp,
+    struct mon_bus *mbus)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/usb/mon/mon_text.c:170:
+    struct mon_bus *mbus)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rp)...) over kmalloc(sizeof(struct mon_reader_text)...)
#980: FILE: drivers/usb/mon/mon_text.c:200:
+	rp = kmalloc(sizeof(struct mon_reader_text), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp"
#981: FILE: drivers/usb/mon/mon_text.c:201:
+	if (rp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->printf_buf"
#992: FILE: drivers/usb/mon/mon_text.c:212:
+	if (rp->printf_buf == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/usb/mon/mon_text.c:223:
+	snprintf(rp->slab_name, SLAB_NAME_SZ, "mon%dt_%lx", ubus->busnum,
+	    (long)rp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1005: FILE: drivers/usb/mon/mon_text.c:225:
+	rp->e_slab = kmem_cache_create(rp->slab_name,
+	    sizeof(struct mon_event_text), sizeof(long), 0,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->e_slab"
#1007: FILE: drivers/usb/mon/mon_text.c:227:
+	if (rp->e_slab == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1036: FILE: drivers/usb/mon/mon_text.c:256:
+static ssize_t mon_text_read(struct file *file, char __user *buf,
+				size_t nbytes, loff_t *ppos)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1077: FILE: drivers/usb/mon/mon_text.c:297:
+	if ((data_len = ep->length) > 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1118: FILE: drivers/usb/mon/mon_text.c:338:
+		printk(KERN_ERR TAG ": consistency error on close\n");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1149: FILE: drivers/usb/mon/mon_text.c:369:
+struct file_operations mon_fops_text = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1180: FILE: drivers/usb/mon/usb_mon.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1196: FILE: drivers/usb/mon/usb_mon.h:17:
+	spinlock_t lock;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1227: FILE: drivers/usb/mon/usb_mon.h:48:
+extern struct file_operations mon_fops_text;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1228: FILE: drivers/usb/mon/usb_mon.h:49:
+extern struct file_operations mon_fops_stat;

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1238: FILE: include/linux/usb.h:288:
+#if defined(CONFIG_USB_MON) || defined(CONFIG_USB_MON_MODULE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 54 warnings, 32 checks, 1146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210043.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
