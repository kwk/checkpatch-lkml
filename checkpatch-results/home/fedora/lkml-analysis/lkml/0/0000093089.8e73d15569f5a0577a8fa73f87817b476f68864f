CHECK:CAMELCASE: Avoid CamelCase: <Host>
#447: FILE: drivers/char/rio/func.h:52:
+void rio_fill_host_slot(int, int, unsigned int, struct Host *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#447: FILE: drivers/char/rio/func.h:52:
+void rio_fill_host_slot(int, int, unsigned int, struct Host *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#447: FILE: drivers/char/rio/func.h:52:
+void rio_fill_host_slot(int, int, unsigned int, struct Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#447: FILE: drivers/char/rio/func.h:52:
+void rio_fill_host_slot(int, int, unsigned int, struct Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Host *' should also have an identifier name
#447: FILE: drivers/char/rio/func.h:52:
+void rio_fill_host_slot(int, int, unsigned int, struct Host *);

CHECK:CAMELCASE: Avoid CamelCase: <RIOBoardTest>
#464: FILE: drivers/char/rio/func.h:81:
+int RIOBoardTest(unsigned long, caddr_t, unsigned char, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#464: FILE: drivers/char/rio/func.h:81:
+int RIOBoardTest(unsigned long, caddr_t, unsigned char, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'caddr_t' should also have an identifier name
#464: FILE: drivers/char/rio/func.h:81:
+int RIOBoardTest(unsigned long, caddr_t, unsigned char, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#464: FILE: drivers/char/rio/func.h:81:
+int RIOBoardTest(unsigned long, caddr_t, unsigned char, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#464: FILE: drivers/char/rio/func.h:81:
+int RIOBoardTest(unsigned long, caddr_t, unsigned char, int);

CHECK:CAMELCASE: Avoid CamelCase: <PaddrP>
#482: FILE: drivers/char/rio/host.h:59:
+	unsigned long PaddrP;		/* Phys. address of DPRAM */

CHECK:CAMELCASE: Avoid CamelCase: <HostUniqueNum>
#605: FILE: drivers/char/rio/map.h:50:
+	unsigned int HostUniqueNum;	/* Supporting hosts unique number */

CHECK:CAMELCASE: Avoid CamelCase: <RtaUniqueNum>
#606: FILE: drivers/char/rio/map.h:51:
+	unsigned int RtaUniqueNum;	/* Unique number */

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#618: FILE: drivers/char/rio/map.h:59:
+	unsigned long Flags;		/* Booted, ID Given, Disconnected */

CHECK:CAMELCASE: Avoid CamelCase: <SysPort>
#619: FILE: drivers/char/rio/map.h:60:
+	unsigned long SysPort;		/* First tty mapped to this port */

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#642: FILE: drivers/char/rio/param.h:46:
+	u8 Cmd;			/* It is very important that these line up */

CHECK:CAMELCASE: Avoid CamelCase: <Cor1>
#643: FILE: drivers/char/rio/param.h:47:
+	u8 Cor1;		/* with what is expected at the other end. */

CHECK:CAMELCASE: Avoid CamelCase: <Cor2>
#644: FILE: drivers/char/rio/param.h:48:
+	u8 Cor2;		/* to confirm that you've got it right,    */

CHECK:CAMELCASE: Avoid CamelCase: <Cor4>
#645: FILE: drivers/char/rio/param.h:49:
+	u8 Cor4;		/* check with cirrus/cirrus.h              */

CHECK:CAMELCASE: Avoid CamelCase: <Cor5>
#646: FILE: drivers/char/rio/param.h:50:
+	u8 Cor5;

CHECK:CAMELCASE: Avoid CamelCase: <TxXon>
#647: FILE: drivers/char/rio/param.h:51:
+	u8 TxXon;		/* Transmit X-On character */

CHECK:CAMELCASE: Avoid CamelCase: <TxXoff>
#648: FILE: drivers/char/rio/param.h:52:
+	u8 TxXoff;		/* Transmit X-Off character */

CHECK:CAMELCASE: Avoid CamelCase: <RxXon>
#649: FILE: drivers/char/rio/param.h:53:
+	u8 RxXon;		/* Receive X-On character */

CHECK:CAMELCASE: Avoid CamelCase: <RxXoff>
#650: FILE: drivers/char/rio/param.h:54:
+	u8 RxXoff;		/* Receive X-Off character */

CHECK:CAMELCASE: Avoid CamelCase: <LNext>
#651: FILE: drivers/char/rio/param.h:55:
+	u8 LNext;		/* Literal-next character */

CHECK:CAMELCASE: Avoid CamelCase: <TxBaud>
#652: FILE: drivers/char/rio/param.h:56:
+	u8 TxBaud;		/* Transmit baudrate */

CHECK:CAMELCASE: Avoid CamelCase: <RxBaud>
#653: FILE: drivers/char/rio/param.h:57:
+	u8 RxBaud;		/* Receive baudrate */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 19 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093089.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
