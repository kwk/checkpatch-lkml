WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urN v2.5.2-pre11/arch/arm/kernel/init_task.c v2.5.2-pre11-file.h/arch/arm/kernel/init_task.c

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: fs/fcntl.c:26:
+	struct files_struct *files = current->files;
+	write_lock(&files->file_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: fs/fcntl.c:38:
+	int res;
+	read_lock(&files->file_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: fs/fcntl.c:44:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: include/linux/file.h:25:
+        atomic_t count;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: include/linux/file.h:25:
+        atomic_t count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: include/linux/file.h:26:
+        rwlock_t file_lock;     /* Protects all the below members.  Nests inside tsk->alloc_lock */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/linux/file.h:26:
+        rwlock_t file_lock;     /* Protects all the below members.  Nests inside tsk->alloc_lock */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/linux/file.h:27:
+        int max_fds;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/linux/file.h:27:
+        int max_fds;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/linux/file.h:28:
+        int max_fdset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/linux/file.h:28:
+        int max_fdset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/linux/file.h:29:
+        int next_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/linux/file.h:29:
+        int next_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: include/linux/file.h:30:
+        struct file ** fd;      /* current fd array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/linux/file.h:30:
+        struct file ** fd;      /* current fd array */$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#246: FILE: include/linux/file.h:30:
+        struct file ** fd;      /* current fd array */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/linux/file.h:31:
+        fd_set *close_on_exec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/linux/file.h:31:
+        fd_set *close_on_exec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: include/linux/file.h:32:
+        fd_set *open_fds;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: include/linux/file.h:32:
+        fd_set *open_fds;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: include/linux/file.h:33:
+        fd_set close_on_exec_init;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: include/linux/file.h:33:
+        fd_set close_on_exec_init;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: include/linux/file.h:34:
+        fd_set open_fds_init;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: include/linux/file.h:34:
+        fd_set open_fds_init;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: include/linux/file.h:35:
+        struct file * fd_array[NR_OPEN_DEFAULT];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: include/linux/file.h:35:
+        struct file * fd_array[NR_OPEN_DEFAULT];$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: include/linux/file.h:35:
+        struct file * fd_array[NR_OPEN_DEFAULT];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/file.h:40:
+extern void FASTCALL(set_close_on_exec(unsigned int fd, int flag));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#317: FILE: include/linux/file.h:73:
 }
+#define put_unused_fd(fd) put_unused_fd_files(current->files, fd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: include/linux/file.h:88:
+static inline void fd_install_files(struct files_struct *files, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: include/linux/file.h:89:
+				    unsigned int fd, struct file * file)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "files->fd[fd]"
#333: FILE: include/linux/file.h:92:
+	if (unlikely(files->fd[fd] != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#338: FILE: include/linux/file.h:97:
 }
+#define fd_install(fd, file)	fd_install_files(current->files, fd, file)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#346: FILE: include/linux/init_task.h:1:
+#ifndef _LINUX__INIT_TASK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: include/linux/init_task.h:9:
+{ ^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: include/linux/init_task.h:10:
+^Icount:^I^IATOMIC_INIT(1), ^I^I\$

WARNING:INDENTED_LABEL: labels should not be indented
#355: FILE: include/linux/init_task.h:10:
+	count:		ATOMIC_INIT(1), 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#356: FILE: include/linux/init_task.h:11:
+^Ifile_lock:^IRW_LOCK_UNLOCKED, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#356: FILE: include/linux/init_task.h:11:
+	file_lock:	RW_LOCK_UNLOCKED, 		\
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#356: FILE: include/linux/init_task.h:11:
+	file_lock:	RW_LOCK_UNLOCKED, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#357: FILE: include/linux/init_task.h:12:
+^Imax_fds:^INR_OPEN_DEFAULT, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#357: FILE: include/linux/init_task.h:12:
+	max_fds:	NR_OPEN_DEFAULT, 		\
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#357: FILE: include/linux/init_task.h:12:
+	max_fds:	NR_OPEN_DEFAULT, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: include/linux/init_task.h:13:
+^Imax_fdset:^I__FD_SETSIZE, ^I^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#358: FILE: include/linux/init_task.h:13:
+	max_fdset:	__FD_SETSIZE, 			\
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#358: FILE: include/linux/init_task.h:13:
+	max_fdset:	__FD_SETSIZE, 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: include/linux/init_task.h:14:
+^Inext_fd:^I0, ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: include/linux/init_task.h:15:
+^Ifd:^I^I&init_files.fd_array[0], ^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#360: FILE: include/linux/init_task.h:15:
+	fd:		&init_files.fd_array[0], 	\
 	  ^

WARNING:INDENTED_LABEL: labels should not be indented
#360: FILE: include/linux/init_task.h:15:
+	fd:		&init_files.fd_array[0], 	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#361: FILE: include/linux/init_task.h:16:
+	close_on_exec:	&init_files.close_on_exec_init, \
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#361: FILE: include/linux/init_task.h:16:
+	close_on_exec:	&init_files.close_on_exec_init, \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#362: FILE: include/linux/init_task.h:17:
+^Iopen_fds:^I&init_files.open_fds_init, ^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#362: FILE: include/linux/init_task.h:17:
+	open_fds:	&init_files.open_fds_init, 	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#362: FILE: include/linux/init_task.h:17:
+	open_fds:	&init_files.open_fds_init, 	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: include/linux/init_task.h:18:
+^Iclose_on_exec_init: { { 0, } }, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#363: FILE: include/linux/init_task.h:18:
+	close_on_exec_init: { { 0, } }, 		\
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#363: FILE: include/linux/init_task.h:18:
+	close_on_exec_init: { { 0, } }, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: include/linux/init_task.h:19:
+^Iopen_fds_init:^I{ { 0, } }, ^I^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#364: FILE: include/linux/init_task.h:19:
+	open_fds_init:	{ { 0, } }, 			\
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#364: FILE: include/linux/init_task.h:19:
+	open_fds_init:	{ { 0, } }, 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#365: FILE: include/linux/init_task.h:20:
+^Ifd_array:^I{ NULL, } ^I^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#365: FILE: include/linux/init_task.h:20:
+	fd_array:	{ NULL, } 			\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#365: FILE: include/linux/init_task.h:20:
+	fd_array:	{ NULL, } 			\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#368: FILE: include/linux/init_task.h:23:
+#define INIT_MM(name) \
+{			 				\
+	mm_rb:		RB_ROOT,			\
+	pgd:		swapper_pg_dir, 		\
+	mm_users:	ATOMIC_INIT(2), 		\
+	mm_count:	ATOMIC_INIT(1), 		\
+	mmap_sem:	__RWSEM_INITIALIZER(name.mmap_sem), \
+	page_table_lock: SPIN_LOCK_UNLOCKED, 		\
+	mmlist:		LIST_HEAD_INIT(name.mmlist),	\
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#369: FILE: include/linux/init_task.h:24:
+{^I^I^I ^I^I^I^I\$

WARNING:INDENTED_LABEL: labels should not be indented
#370: FILE: include/linux/init_task.h:25:
+	mm_rb:		RB_ROOT,			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: include/linux/init_task.h:26:
+^Ipgd:^I^Iswapper_pg_dir, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#371: FILE: include/linux/init_task.h:26:
+	pgd:		swapper_pg_dir, 		\
 	   ^

WARNING:INDENTED_LABEL: labels should not be indented
#371: FILE: include/linux/init_task.h:26:
+	pgd:		swapper_pg_dir, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: include/linux/init_task.h:27:
+^Imm_users:^IATOMIC_INIT(2), ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#372: FILE: include/linux/init_task.h:27:
+	mm_users:	ATOMIC_INIT(2), 		\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#372: FILE: include/linux/init_task.h:27:
+	mm_users:	ATOMIC_INIT(2), 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#373: FILE: include/linux/init_task.h:28:
+^Imm_count:^IATOMIC_INIT(1), ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#373: FILE: include/linux/init_task.h:28:
+	mm_count:	ATOMIC_INIT(1), 		\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#373: FILE: include/linux/init_task.h:28:
+	mm_count:	ATOMIC_INIT(1), 		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#374: FILE: include/linux/init_task.h:29:
+	mmap_sem:	__RWSEM_INITIALIZER(name.mmap_sem), \
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#374: FILE: include/linux/init_task.h:29:
+	mmap_sem:	__RWSEM_INITIALIZER(name.mmap_sem), \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#375: FILE: include/linux/init_task.h:30:
+^Ipage_table_lock: SPIN_LOCK_UNLOCKED, ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#375: FILE: include/linux/init_task.h:30:
+	page_table_lock: SPIN_LOCK_UNLOCKED, 		\
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#375: FILE: include/linux/init_task.h:30:
+	page_table_lock: SPIN_LOCK_UNLOCKED, 		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#376: FILE: include/linux/init_task.h:31:
+	mmlist:		LIST_HEAD_INIT(name.mmlist),	\
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#376: FILE: include/linux/init_task.h:31:
+	mmlist:		LIST_HEAD_INIT(name.mmlist),	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: include/linux/init_task.h:35:
+^Icount:^I^IATOMIC_INIT(1), ^I^I\$

WARNING:INDENTED_LABEL: labels should not be indented
#380: FILE: include/linux/init_task.h:35:
+	count:		ATOMIC_INIT(1), 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: include/linux/init_task.h:36:
+^Iaction:^I^I{ {{0,}}, }, ^I^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#381: FILE: include/linux/init_task.h:36:
+	action:		{ {{0,}}, }, 			\
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#381: FILE: include/linux/init_task.h:36:
+	action:		{ {{0,}}, }, 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: include/linux/init_task.h:37:
+^Isiglock:^ISPIN_LOCK_UNLOCKED ^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#382: FILE: include/linux/init_task.h:37:
+	siglock:	SPIN_LOCK_UNLOCKED 		\
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#382: FILE: include/linux/init_task.h:37:
+	siglock:	SPIN_LOCK_UNLOCKED 		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tsk' - possible side-effects?
#389: FILE: include/linux/init_task.h:44:
+#define INIT_TASK(tsk)	\
+{									\
+    state:		0,						\
+    flags:		0,						\
+    sigpending:		0,						\
+    addr_limit:		KERNEL_DS,					\
+    exec_domain:	&default_exec_domain,				\
+    lock_depth:		-1,						\
+    __nice:		DEF_USER_NICE,					\
+    policy:		SCHED_OTHER,					\
+    cpus_allowed:	-1,						\
+    mm:			NULL,						\
+    active_mm:		&init_mm,					\
+    run_list:		LIST_HEAD_INIT(tsk.run_list),			\
+    time_slice:		PRIO_TO_TIMESLICE(DEF_PRIO),			\
+    next_task:		&tsk,						\
+    prev_task:		&tsk,						\
+    p_opptr:		&tsk,						\
+    p_pptr:		&tsk,						\
+    thread_group:	LIST_HEAD_INIT(tsk.thread_group),		\
+    wait_chldexit:	__WAIT_QUEUE_HEAD_INITIALIZER(tsk.wait_chldexit),\
+    real_timer:		{						\
+	function:		it_real_fn				\
+    },									\
+    cap_effective:	CAP_INIT_EFF_SET,				\
+    cap_inheritable:	CAP_INIT_INH_SET,				\
+    cap_permitted:	CAP_FULL_SET,					\
+    keep_capabilities:	0,						\
+    rlim:		INIT_RLIMITS,					\
+    user:		INIT_USER,					\
+    comm:		"swapper",					\
+    thread:		INIT_THREAD,					\
+    fs:			&init_fs,					\
+    files:		&init_files,					\
+    sigmask_lock:	SPIN_LOCK_UNLOCKED,				\
+    sig:		&init_signals,					\
+    pending:		{ NULL, &tsk.pending.head, {{0}}},		\
+    blocked:		{{0}},						\
+    alloc_lock:		SPIN_LOCK_UNLOCKED,				\
+    journal_info:	NULL,						\
+}

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#394: FILE: include/linux/init_task.h:49:
+    addr_limit:		KERNEL_DS,					\
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#394: FILE: include/linux/init_task.h:49:
+    addr_limit:		KERNEL_DS,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#395: FILE: include/linux/init_task.h:50:
+    exec_domain:	&default_exec_domain,				\
                ^

WARNING:INDENTED_LABEL: labels should not be indented
#395: FILE: include/linux/init_task.h:50:
+    exec_domain:	&default_exec_domain,				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#396: FILE: include/linux/init_task.h:51:
+    lock_depth:		-1,						\
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#396: FILE: include/linux/init_task.h:51:
+    lock_depth:		-1,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#397: FILE: include/linux/init_task.h:52:
+    __nice:		DEF_USER_NICE,					\
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#397: FILE: include/linux/init_task.h:52:
+    __nice:		DEF_USER_NICE,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#398: FILE: include/linux/init_task.h:53:
+    policy:		SCHED_OTHER,					\
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#398: FILE: include/linux/init_task.h:53:
+    policy:		SCHED_OTHER,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#399: FILE: include/linux/init_task.h:54:
+    cpus_allowed:	-1,						\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#399: FILE: include/linux/init_task.h:54:
+    cpus_allowed:	-1,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#400: FILE: include/linux/init_task.h:55:
+    mm:			NULL,						\
       ^

WARNING:INDENTED_LABEL: labels should not be indented
#400: FILE: include/linux/init_task.h:55:
+    mm:			NULL,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#401: FILE: include/linux/init_task.h:56:
+    active_mm:		&init_mm,					\
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#401: FILE: include/linux/init_task.h:56:
+    active_mm:		&init_mm,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#402: FILE: include/linux/init_task.h:57:
+    run_list:		LIST_HEAD_INIT(tsk.run_list),			\
             ^

WARNING:INDENTED_LABEL: labels should not be indented
#402: FILE: include/linux/init_task.h:57:
+    run_list:		LIST_HEAD_INIT(tsk.run_list),			\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#403: FILE: include/linux/init_task.h:58:
+    time_slice:		PRIO_TO_TIMESLICE(DEF_PRIO),			\
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#403: FILE: include/linux/init_task.h:58:
+    time_slice:		PRIO_TO_TIMESLICE(DEF_PRIO),			\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#404: FILE: include/linux/init_task.h:59:
+    next_task:		&tsk,						\
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#404: FILE: include/linux/init_task.h:59:
+    next_task:		&tsk,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#405: FILE: include/linux/init_task.h:60:
+    prev_task:		&tsk,						\
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#405: FILE: include/linux/init_task.h:60:
+    prev_task:		&tsk,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#406: FILE: include/linux/init_task.h:61:
+    p_opptr:		&tsk,						\
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#406: FILE: include/linux/init_task.h:61:
+    p_opptr:		&tsk,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#407: FILE: include/linux/init_task.h:62:
+    p_pptr:		&tsk,						\
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#407: FILE: include/linux/init_task.h:62:
+    p_pptr:		&tsk,						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#408: FILE: include/linux/init_task.h:63:
+    thread_group:	LIST_HEAD_INIT(tsk.thread_group),		\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#408: FILE: include/linux/init_task.h:63:
+    thread_group:	LIST_HEAD_INIT(tsk.thread_group),		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#409: FILE: include/linux/init_task.h:64:
+    wait_chldexit:	__WAIT_QUEUE_HEAD_INITIALIZER(tsk.wait_chldexit),\
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#409: FILE: include/linux/init_task.h:64:
+    wait_chldexit:	__WAIT_QUEUE_HEAD_INITIALIZER(tsk.wait_chldexit),\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#410: FILE: include/linux/init_task.h:65:
+    real_timer:		{						\
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#410: FILE: include/linux/init_task.h:65:
+    real_timer:		{						\

WARNING:INDENTED_LABEL: labels should not be indented
#411: FILE: include/linux/init_task.h:66:
+	function:		it_real_fn				\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: include/linux/init_task.h:67:
+    },^I^I^I^I^I^I^I^I^I\$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#413: FILE: include/linux/init_task.h:68:
+    cap_effective:	CAP_INIT_EFF_SET,				\
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#413: FILE: include/linux/init_task.h:68:
+    cap_effective:	CAP_INIT_EFF_SET,				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#414: FILE: include/linux/init_task.h:69:
+    cap_inheritable:	CAP_INIT_INH_SET,				\
                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#414: FILE: include/linux/init_task.h:69:
+    cap_inheritable:	CAP_INIT_INH_SET,				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#415: FILE: include/linux/init_task.h:70:
+    cap_permitted:	CAP_FULL_SET,					\
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#415: FILE: include/linux/init_task.h:70:
+    cap_permitted:	CAP_FULL_SET,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#417: FILE: include/linux/init_task.h:72:
+    rlim:		INIT_RLIMITS,					\
         ^

WARNING:INDENTED_LABEL: labels should not be indented
#417: FILE: include/linux/init_task.h:72:
+    rlim:		INIT_RLIMITS,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#418: FILE: include/linux/init_task.h:73:
+    user:		INIT_USER,					\
         ^

WARNING:INDENTED_LABEL: labels should not be indented
#418: FILE: include/linux/init_task.h:73:
+    user:		INIT_USER,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#419: FILE: include/linux/init_task.h:74:
+    comm:		"swapper",					\
         ^

WARNING:INDENTED_LABEL: labels should not be indented
#419: FILE: include/linux/init_task.h:74:
+    comm:		"swapper",					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#420: FILE: include/linux/init_task.h:75:
+    thread:		INIT_THREAD,					\
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#420: FILE: include/linux/init_task.h:75:
+    thread:		INIT_THREAD,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#421: FILE: include/linux/init_task.h:76:
+    fs:			&init_fs,					\
       ^

WARNING:INDENTED_LABEL: labels should not be indented
#421: FILE: include/linux/init_task.h:76:
+    fs:			&init_fs,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#422: FILE: include/linux/init_task.h:77:
+    files:		&init_files,					\
          ^

WARNING:INDENTED_LABEL: labels should not be indented
#422: FILE: include/linux/init_task.h:77:
+    files:		&init_files,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#423: FILE: include/linux/init_task.h:78:
+    sigmask_lock:	SPIN_LOCK_UNLOCKED,				\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#423: FILE: include/linux/init_task.h:78:
+    sigmask_lock:	SPIN_LOCK_UNLOCKED,				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#424: FILE: include/linux/init_task.h:79:
+    sig:		&init_signals,					\
        ^

WARNING:INDENTED_LABEL: labels should not be indented
#424: FILE: include/linux/init_task.h:79:
+    sig:		&init_signals,					\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#425: FILE: include/linux/init_task.h:80:
+    pending:		{ NULL, &tsk.pending.head, {{0}}},		\
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#425: FILE: include/linux/init_task.h:80:
+    pending:		{ NULL, &tsk.pending.head, {{0}}},		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#426: FILE: include/linux/init_task.h:81:
+    blocked:		{{0}},						\
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#426: FILE: include/linux/init_task.h:81:
+    blocked:		{{0}},						\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#427: FILE: include/linux/init_task.h:82:
+    alloc_lock:		SPIN_LOCK_UNLOCKED,				\
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#427: FILE: include/linux/init_task.h:82:
+    alloc_lock:		SPIN_LOCK_UNLOCKED,				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#428: FILE: include/linux/init_task.h:83:
+    journal_info:	NULL,						\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#428: FILE: include/linux/init_task.h:83:
+    journal_info:	NULL,						\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: include/linux/init_task.h:86:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 88 warnings, 8 checks, 478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
