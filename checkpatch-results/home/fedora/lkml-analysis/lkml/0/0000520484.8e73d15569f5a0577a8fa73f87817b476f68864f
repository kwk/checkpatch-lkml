Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
%<num>s. E.g. "uid=%u" or "iocharset=%20s". NULL is a catch-all - everything

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uid>
#87: FILE: fs/adfs/super.c:168:
+enum {Opt_uid, Opt_gid, Opt_ownmask, Opt_othmask, Opt_err};

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_gid>
#87: FILE: fs/adfs/super.c:168:
+enum {Opt_uid, Opt_gid, Opt_ownmask, Opt_othmask, Opt_err};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_ownmask>
#87: FILE: fs/adfs/super.c:168:
+enum {Opt_uid, Opt_gid, Opt_ownmask, Opt_othmask, Opt_err};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_othmask>
#87: FILE: fs/adfs/super.c:168:
+enum {Opt_uid, Opt_gid, Opt_ownmask, Opt_othmask, Opt_err};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#87: FILE: fs/adfs/super.c:168:
+enum {Opt_uid, Opt_gid, Opt_ownmask, Opt_othmask, Opt_err};

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: fs/adfs/super.c:177:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#136: FILE: fs/adfs/super.c:185:
+	for (p = strtok(options, ","); p != NULL; p = strtok(NULL, ",")) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#140: FILE: fs/adfs/super.c:189:
+		switch (token) {
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_ownmask:
[...]
+			case Opt_othmask:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: fs/adfs/super.c:203:
+				printk("ADFS-fs: unrecognised mount option %s\n", p);

CHECK:CAMELCASE: Avoid CamelCase: <Opt_fd>
#177: FILE: fs/autofs/inode.c:51:
+enum {Opt_err, Opt_fd, Opt_uid, Opt_gid, Opt_pgrp, Opt_minproto, Opt_maxproto};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_pgrp>
#177: FILE: fs/autofs/inode.c:51:
+enum {Opt_err, Opt_fd, Opt_uid, Opt_gid, Opt_pgrp, Opt_minproto, Opt_maxproto};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_minproto>
#177: FILE: fs/autofs/inode.c:51:
+enum {Opt_err, Opt_fd, Opt_uid, Opt_gid, Opt_pgrp, Opt_minproto, Opt_maxproto};

CHECK:CAMELCASE: Avoid CamelCase: <Opt_maxproto>
#177: FILE: fs/autofs/inode.c:51:
+enum {Opt_err, Opt_fd, Opt_uid, Opt_gid, Opt_pgrp, Opt_minproto, Opt_maxproto};

ERROR:SPACING: space prohibited after that open parenthesis '('
#244: FILE: fs/autofs/inode.c:75:
+	if ( !options )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#244: FILE: fs/autofs/inode.c:75:
+	if ( !options )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: fs/autofs/inode.c:77:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: fs/autofs/inode.c:77:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: fs/autofs/inode.c:79:
+		int token = match_token(p, autofs_tokens, args);
+		switch (token) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#248: FILE: fs/autofs/inode.c:79:
+		switch (token) {
+			case Opt_fd:
[...]
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_pgrp:
[...]
+			case Opt_minproto:
[...]
+			case Opt_maxproto:
[...]
+			default:

CHECK:CAMELCASE: Avoid CamelCase: <Opt_mode>
#289: FILE: fs/devpts/inode.c:61:
+enum {Opt_uid, Opt_gid, Opt_mode, Opt_err};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: fs/devpts/inode.c:80:
+		p = strtok(options,",");
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: fs/devpts/inode.c:81:
+	for ( ; p; p = strtok(NULL,",")) {
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#339: FILE: fs/devpts/inode.c:84:
+		int token = match_token(p, tokens, args);
+		switch(token) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#339: FILE: fs/devpts/inode.c:84:
+		switch(token) {
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_mode:
[...]
+			default:

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: fs/devpts/inode.c:84:
+		switch(token) {

CHECK:CAMELCASE: Avoid CamelCase: <Opt_bsd_df>
#378: FILE: fs/ext2/super.c:159:
+	Opt_bsd_df, Opt_minix_df, Opt_grpid, Opt_nogrpid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_minix_df>
#378: FILE: fs/ext2/super.c:159:
+	Opt_bsd_df, Opt_minix_df, Opt_grpid, Opt_nogrpid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_grpid>
#378: FILE: fs/ext2/super.c:159:
+	Opt_bsd_df, Opt_minix_df, Opt_grpid, Opt_nogrpid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nogrpid>
#378: FILE: fs/ext2/super.c:159:
+	Opt_bsd_df, Opt_minix_df, Opt_grpid, Opt_nogrpid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_resgid>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_resuid>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_sb>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_cont>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_panic>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_ro>
#379: FILE: fs/ext2/super.c:160:
+	Opt_resgid, Opt_resuid, Opt_sb, Opt_err_cont, Opt_err_panic, Opt_err_ro,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nouid32>
#380: FILE: fs/ext2/super.c:161:
+	Opt_nouid32, Opt_check, Opt_nocheck, Opt_debug, Opt_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check>
#380: FILE: fs/ext2/super.c:161:
+	Opt_nouid32, Opt_check, Opt_nocheck, Opt_debug, Opt_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nocheck>
#380: FILE: fs/ext2/super.c:161:
+	Opt_nouid32, Opt_check, Opt_nocheck, Opt_debug, Opt_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_debug>
#380: FILE: fs/ext2/super.c:161:
+	Opt_nouid32, Opt_check, Opt_nocheck, Opt_debug, Opt_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_ignore>
#380: FILE: fs/ext2/super.c:161:
+	Opt_nouid32, Opt_check, Opt_nocheck, Opt_debug, Opt_ignore, Opt_err,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#382: FILE: fs/ext2/super.c:163:
+};
+static match_table_t tokens = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#413: FILE: fs/ext2/super.c:192:
+	char * p;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: fs/ext2/super.c:198:
+	for (p = strtok (options, ","); p; p = strtok (NULL, ",")) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: fs/ext2/super.c:198:
+	for (p = strtok (options, ","); p; p = strtok (NULL, ",")) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#435: FILE: fs/ext2/super.c:200:
+		int token = match_token(p, tokens, args);
+		switch (token) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#435: FILE: fs/ext2/super.c:200:
+		switch (token) {
+			case Opt_bsd_df:
[...]
+			case Opt_minix_df:
[...]
+			case Opt_grpid:
[...]
+			case Opt_nogrpid:
[...]
+			case Opt_resuid:
[...]
+			case Opt_resgid:
[...]
+			case Opt_sb:
[...]
+			case Opt_err_panic:
[...]
+			case Opt_err_ro:
[...]
+			case Opt_err_cont:
[...]
+			case Opt_nouid32:
[...]
+			case Opt_check:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: fs/ext2/super.c:202:
+				clear_opt (*mount_options, MINIX_DF);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: fs/ext2/super.c:205:
+				set_opt (*mount_options, MINIX_DF);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: fs/ext2/super.c:208:
+				set_opt (*mount_options, GRPID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: fs/ext2/super.c:211:
+				clear_opt (*mount_options, GRPID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: fs/ext2/super.c:232:
+				set_opt (*mount_options, NO_UID32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: fs/ext2/super.c:242:
+				clear_opt (*mount_options, CHECK);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#556: FILE: fs/ext2/super.c:245:
+				set_opt (*mount_options, DEBUG);

CHECK:CAMELCASE: Avoid CamelCase: <Opt_bits>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_blocksize>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_charset>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_n>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_r>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_s>
#595: FILE: fs/fat/inode.c:206:
+Opt_bits, Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_codepage>
#596: FILE: fs/fat/inode.c:207:
+Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t, Opt_cvf_format,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_a>
#596: FILE: fs/fat/inode.c:207:
+Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t, Opt_cvf_format,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_b>
#596: FILE: fs/fat/inode.c:207:
+Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t, Opt_cvf_format,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_t>
#596: FILE: fs/fat/inode.c:207:
+Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t, Opt_cvf_format,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cvf_format>
#596: FILE: fs/fat/inode.c:207:
+Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t, Opt_cvf_format,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cvf_options>
#597: FILE: fs/fat/inode.c:208:
+Opt_cvf_options, Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_dots>
#597: FILE: fs/fat/inode.c:208:
+Opt_cvf_options, Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_immutable>
#597: FILE: fs/fat/inode.c:208:
+Opt_cvf_options, Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nocase>
#598: FILE: fs/fat/inode.c:209:
+Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid, Opt_umask,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nodots>
#598: FILE: fs/fat/inode.c:209:
+Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid, Opt_umask,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_quiet>
#598: FILE: fs/fat/inode.c:209:
+Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid, Opt_umask,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_showexec>
#598: FILE: fs/fat/inode.c:209:
+Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid, Opt_umask,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_umask>
#598: FILE: fs/fat/inode.c:209:
+Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid, Opt_umask,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: fs/fat/inode.c:268:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#666: FILE: fs/fat/inode.c:268:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#668: FILE: fs/fat/inode.c:270:
+		int token = match_token(p, FAT_tokens, args);
+		switch (token) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#668: FILE: fs/fat/inode.c:270:
+		switch (token) {
+			case Opt_check_s:
[...]
+			case Opt_check_r:
[...]
+			case Opt_check_n:
[...]
+			case Opt_conv_b:
[...]
+			case Opt_conv_t:
[...]
+			case Opt_conv_a:
[...]
+			case Opt_dots:
[...]
+			case Opt_nodots:
[...]
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_umask:
[...]
+			case Opt_bits:
[...]
+			case Opt_codepage:
[...]
+			case Opt_charset:
[...]
+			case Opt_cvf_format:
[...]
+			case Opt_cvf_options:
[...]
+			case Opt_blocksize:
[...]
+			case Opt_nocase:
[...]
+			case Opt_quiet:
[...]
+			case Opt_showexec:
[...]
+			case Opt_debug:
[...]
+			case Opt_immutable:

CHECK:CAMELCASE: Avoid CamelCase: <dotsOK>
#771: FILE: fs/fat/inode.c:290:
+				opts->dotsOK = 1;

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#792: FILE: fs/fat/inode.c:311:
+				printk("MSDOS FS: Using codepage %d\n",
 				        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#792: FILE: fs/fat/inode.c:311:
+				printk("MSDOS FS: Using codepage %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: fs/fat/inode.c:312:
+				printk("MSDOS FS: Using codepage %d\n",
 					opts->codepage);

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#799: FILE: fs/fat/inode.c:318:
+				printk("MSDOS FS: IO charset %s\n",
 				        ^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#799: FILE: fs/fat/inode.c:318:
+				printk("MSDOS FS: IO charset %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: fs/fat/inode.c:319:
+				printk("MSDOS FS: IO charset %s\n",
+					opts->iocharset);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#809: FILE: fs/fat/inode.c:328:
+				printk("FAT: blocksize option is obsolete, "

WARNING:SPLIT_STRING: quoted string split across lines
#810: FILE: fs/fat/inode.c:329:
+				printk("FAT: blocksize option is obsolete, "
+				       "not supported now\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <Opt_block>
#882: FILE: fs/isofs/inode.c:273:
+Opt_block, Opt_check_r, Opt_check_s, Opt_cruft, Opt_gid, Opt_ignore,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cruft>
#882: FILE: fs/isofs/inode.c:273:
+Opt_block, Opt_check_r, Opt_check_s, Opt_cruft, Opt_gid, Opt_ignore,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_iocharset>
#883: FILE: fs/isofs/inode.c:274:
+Opt_iocharset, Opt_map_a, Opt_map_n, Opt_map_o, Opt_mode, Opt_nojoliet,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_map_a>
#883: FILE: fs/isofs/inode.c:274:
+Opt_iocharset, Opt_map_a, Opt_map_n, Opt_map_o, Opt_mode, Opt_nojoliet,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_map_n>
#883: FILE: fs/isofs/inode.c:274:
+Opt_iocharset, Opt_map_a, Opt_map_n, Opt_map_o, Opt_mode, Opt_nojoliet,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_map_o>
#883: FILE: fs/isofs/inode.c:274:
+Opt_iocharset, Opt_map_a, Opt_map_n, Opt_map_o, Opt_mode, Opt_nojoliet,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nojoliet>
#883: FILE: fs/isofs/inode.c:274:
+Opt_iocharset, Opt_map_a, Opt_map_n, Opt_map_o, Opt_mode, Opt_nojoliet,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_norock>
#884: FILE: fs/isofs/inode.c:275:
+Opt_norock, Opt_sb, Opt_session, Opt_uid, Opt_unhide, Opt_utf8, Opt_err

CHECK:CAMELCASE: Avoid CamelCase: <Opt_session>
#884: FILE: fs/isofs/inode.c:275:
+Opt_norock, Opt_sb, Opt_session, Opt_uid, Opt_unhide, Opt_utf8, Opt_err

CHECK:CAMELCASE: Avoid CamelCase: <Opt_unhide>
#884: FILE: fs/isofs/inode.c:275:
+Opt_norock, Opt_sb, Opt_session, Opt_uid, Opt_unhide, Opt_utf8, Opt_err

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8>
#884: FILE: fs/isofs/inode.c:275:
+Opt_norock, Opt_sb, Opt_session, Opt_uid, Opt_unhide, Opt_utf8, Opt_err

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#886: FILE: fs/isofs/inode.c:277:
+};
+static match_table_t tokens = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#958: FILE: fs/isofs/inode.c:335:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#958: FILE: fs/isofs/inode.c:335:
+	for (p = strtok(options,","); p; p = strtok(NULL,",")) {
 	                                                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#961: FILE: fs/isofs/inode.c:338:
+		unsigned n;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#963: FILE: fs/isofs/inode.c:340:
+		switch (token) {
+			case Opt_norock:
[...]
+			case Opt_nojoliet:
[...]
+			case Opt_unhide:
[...]
+			case Opt_cruft:
[...]
+			case Opt_utf8:
[...]
+			case Opt_iocharset:
[...]
+			case Opt_map_a:
[...]
+			case Opt_map_o:
[...]
+			case Opt_map_n:
[...]
+			case Opt_session:
[...]
+			case Opt_sb:
[...]
+			case Opt_check_r:
[...]
+			case Opt_check_s:
[...]
+			case Opt_ignore:
[...]
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_mode:
[...]
+			case Opt_block:
[...]
+			default:

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1111: FILE: fs/isofs/inode.c:834:
+	if (opt.iocharset)
+		kfree(opt.iocharset);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1121: FILE: fs/isofs/inode.c:879:
+	if (opt.iocharset)
+		kfree(opt.iocharset);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1129: FILE: include/linux/parser.h:1:
+struct match_token {

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1134: FILE: include/linux/parser.h:6:
+typedef struct match_token match_table_t[];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1136: FILE: include/linux/parser.h:8:
+enum { MAX_OPT_ARGS=3 };
                    ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1138: FILE: include/linux/parser.h:10:
+typedef struct {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'substring_t *' should also have an identifier name
#1145: FILE: include/linux/parser.h:17:
+int match_int(substring_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'substring_t *' should also have an identifier name
#1146: FILE: include/linux/parser.h:18:
+int match_octal(substring_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'substring_t *' should also have an identifier name
#1147: FILE: include/linux/parser.h:19:
+int match_hex(substring_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1148: FILE: include/linux/parser.h:20:
+void match_strcpy(char *, substring_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'substring_t *' should also have an identifier name
#1148: FILE: include/linux/parser.h:20:
+void match_strcpy(char *, substring_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'substring_t *' should also have an identifier name
#1149: FILE: include/linux/parser.h:21:
+char *match_strdup(substring_t *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1169: FILE: lib/parser.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1170: FILE: lib/parser.c:2:
+ * lib/parser.c - simple parser for mount, etc. options.

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: space required before the open parenthesis '('
#1190: FILE: lib/parser.c:22:
+	while(1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1192: FILE: lib/parser.c:24:
+		int len = -1;
+		meta = strchr(p, '%');

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1196: FILE: lib/parser.c:28:
+		if (strncmp(p, s, meta-p))
 		                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1202: FILE: lib/parser.c:34:
+		if (isdigit(*p))
[...]
+		else if (*p == '%') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1203: FILE: lib/parser.c:35:
+			len = simple_strtoul(p, &p, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1214: FILE: lib/parser.c:46:
+		switch (*p++) {
+			case 's':
[...]
+			case 'd':
[...]
+			case 'u':
[...]
+			case 'o':
[...]
+			case 'x':
[...]
+			default:

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1221: FILE: lib/parser.c:53:
+				simple_strtol(s, &args[argc].to, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1224: FILE: lib/parser.c:56:
+				simple_strtoul(s, &args[argc].to, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1227: FILE: lib/parser.c:59:
+				simple_strtoul(s, &args[argc].to, 8);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1230: FILE: lib/parser.c:62:
+				simple_strtoul(s, &args[argc].to, 16);

WARNING:INDENTED_LABEL: labels should not be indented
#1231: FILE: lib/parser.c:63:
+			num:

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1259: FILE: lib/parser.c:91:
+	return simple_strtol(buf, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1268: FILE: lib/parser.c:100:
+	return simple_strtoul(buf, NULL, 8);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1277: FILE: lib/parser.c:109:
+	return simple_strtoul(buf, NULL, 16);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1289: FILE: lib/parser.c:121:
+	char *p = kmalloc(s->to - s->from + 1, GFP_KERNEL);
+	if (p)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1294: FILE: lib/parser.c:126:
+EXPORT_SYMBOL(match_token);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1295: FILE: lib/parser.c:127:
+EXPORT_SYMBOL(match_int);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1296: FILE: lib/parser.c:128:
+EXPORT_SYMBOL(match_octal);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1297: FILE: lib/parser.c:129:
+EXPORT_SYMBOL(match_hex);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1298: FILE: lib/parser.c:130:
+EXPORT_SYMBOL(match_strcpy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1299: FILE: lib/parser.c:131:
+EXPORT_SYMBOL(match_strdup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 52 warnings, 63 checks, 1180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520484.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
