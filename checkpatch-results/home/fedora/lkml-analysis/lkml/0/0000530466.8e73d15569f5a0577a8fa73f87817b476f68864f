WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
    I have attached patches against the following sound drivers to fix the locking issues mentioned in Alan's release notes for 2.4.5-ac9 . Please CC me on your comments to the code (I can address the issues quicker). Thanks.

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#72: FILE: sound/cmpci.c:1670:
+	if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#83: FILE: sound/cmpci.c:1688:
+			if (file->f_flags & O_NONBLOCK)a
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#83: FILE: sound/cmpci.c:1688:
+			if (file->f_flags & O_NONBLOCK)a

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#85: FILE: sound/cmpci.c:1690:
+				if(!ret) ret = -EAGAIN;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#85: FILE: sound/cmpci.c:1690:
+				if(!ret) ret = -EAGAIN;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: sound/cmpci.c:1706:
+^I^I^Iif (signal_pending(current)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#98: FILE: sound/cmpci.c:1706:
+			if (signal_pending(current)) 
+			{

ERROR:SPACING: space required before the open parenthesis '('
#100: FILE: sound/cmpci.c:1708:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#100: FILE: sound/cmpci.c:1708:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#104: FILE: sound/cmpci.c:1712:
+			if (s->dma_adc.mapped)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#111: FILE: sound/cmpci.c:1719:
 		if (copy_to_user(buffer, s->dma_adc.rawbuf + swptr, cnt))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#114: FILE: sound/cmpci.c:1721:
+			if(!ret) ret = -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#114: FILE: sound/cmpci.c:1721:
+			if(!ret) ret = -EFAULT;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#145: FILE: sound/cmpci.c:1760:
+	if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))
+			goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#145: FILE: sound/cmpci.c:1760:
+	if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#149: FILE: sound/cmpci.c:1764:
+	if (!s->dma_dac.ready && (ret = prog_dmabuf(s, 0)))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#157: FILE: sound/cmpci.c:1799:
 			if (file->f_flags & O_NONBLOCK)
+			{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#157: FILE: sound/cmpci.c:1799:
 			if (file->f_flags & O_NONBLOCK)
+			{

WARNING:TABSTOP: Statements should start on a tabstop
#160: FILE: sound/cmpci.c:1801:
+				 if(!ret) ret = -EAGAIN;

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: sound/cmpci.c:1801:
+				 if(!ret) ret = -EAGAIN;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#160: FILE: sound/cmpci.c:1801:
+				 if(!ret) ret = -EAGAIN;

WARNING:TABSTOP: Statements should start on a tabstop
#161: FILE: sound/cmpci.c:1802:
+				 goto out;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#170: FILE: sound/cmpci.c:1821:
 			if (signal_pending(current))
+			{

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: sound/cmpci.c:1823:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: sound/cmpci.c:1823:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#177: FILE: sound/cmpci.c:1827:
+			if (s->dma_dac.mapped)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#188: FILE: sound/cmpci.c:1854:
 			if (copy_from_user(s->dma_dac.rawbuf + swptr, buffer, cnt))
+			{

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: sound/cmpci.c:1856:
+				if(!ret) ret = -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#191: FILE: sound/cmpci.c:1856:
+				if(!ret) ret = -EFAULT;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#227: FILE: sound/cmpci.c:1938:
 	if (size > (PAGE_SIZE << db->buforder))
+	{

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: sound/maestro.c:2262:
+^Issize_t ret = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: sound/maestro.c:2277:
+^Idown(&s->sem);^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#288: FILE: sound/maestro.c:2278:
+	if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: sound/maestro.c:2302:
+				if(!ret) ret = -EAGAIN;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#298: FILE: sound/maestro.c:2302:
+				if(!ret) ret = -EAGAIN;

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: sound/maestro.c:2322:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#310: FILE: sound/maestro.c:2322:
+				if(!ret) ret = -ERESTARTSYS;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#314: FILE: sound/maestro.c:2326:
+			if (s->dma_adc.mapped)
+			{

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: sound/maestro.c:2338:
+				if(!ret) ret = -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: sound/maestro.c:2338:
+				if(!ret) ret = -EFAULT;

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: sound/maestro.c:2343:
+				if(!ret) ret = -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#331: FILE: sound/maestro.c:2343:
+				if(!ret) ret = -EFAULT;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#352: FILE: sound/maestro.c:2382:
+	if (!s->dma_dac.ready && (ret = prog_dmabuf(s, 0)))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#370: FILE: sound/maestro.c:2433:
+			if (s->dma_dac.mapped)
+			{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: sound/maestro.c:2519:
+^I} else { $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#411: FILE: sound/maestro.c:2535:
 	if (size > (PAGE_SIZE << db->buforder))
+	{

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: sound/maestro3.c:1332:
+    ssize_t ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: sound/maestro3.c:1344:
+    down(&s->sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: sound/maestro3.c:1345:
+    if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: sound/maestro3.c:1345:
+    if (!s->dma_adc.ready && (ret = prog_dmabuf(s, 1)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: sound/maestro3.c:1346:
+        goto out;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: sound/maestro3.c:1346:
+        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: sound/maestro3.c:1364:
+                if(!ret) ret = -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: sound/maestro3.c:1364:
+                if(!ret) ret = -EAGAIN;$

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: sound/maestro3.c:1364:
+                if(!ret) ret = -EAGAIN;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#481: FILE: sound/maestro3.c:1364:
+                if(!ret) ret = -EAGAIN;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: sound/maestro3.c:1367:
+^I    up(&s->sem);^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: sound/maestro3.c:1382:
+                if(!ret) ret = -ERESTARTSYS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: sound/maestro3.c:1382:
+                if(!ret) ret = -ERESTARTSYS;$

ERROR:SPACING: space required before the open parenthesis '('
#494: FILE: sound/maestro3.c:1382:
+                if(!ret) ret = -ERESTARTSYS;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#494: FILE: sound/maestro3.c:1382:
+                if(!ret) ret = -ERESTARTSYS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: sound/maestro3.c:1386:
+    ^I^Iif (s->dma_adc.mapped)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#498: FILE: sound/maestro3.c:1386:
+    ^I^Iif (s->dma_adc.mapped)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: sound/maestro3.c:1386:
+    ^I^Iif (s->dma_adc.mapped)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#498: FILE: sound/maestro3.c:1386:
+    		if (s->dma_adc.mapped)
+		{

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: sound/maestro3.c:1388:
+        ^I^Iret = -ENXIO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: sound/maestro3.c:1388:
+        ^I^Iret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: sound/maestro3.c:1388:
+        ^I^Iret = -ENXIO;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#507: FILE: sound/maestro3.c:1395:
         if (copy_to_user(buffer, s->dma_adc.rawbuf + swptr, cnt)) {
+            if(!ret) ret = -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: sound/maestro3.c:1396:
+            if(!ret) ret = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: sound/maestro3.c:1396:
+            if(!ret) ret = -EFAULT;$

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: sound/maestro3.c:1396:
+            if(!ret) ret = -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#510: FILE: sound/maestro3.c:1396:
+            if(!ret) ret = -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: sound/maestro3.c:1397:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: sound/maestro3.c:1397:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: sound/maestro3.c:1411:
+    up(&s->sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: sound/maestro3.c:1431:
+    down(&s->sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: sound/maestro3.c:1432:
+    if (!s->dma_dac.ready && (ret = prog_dmabuf(s, 0)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#532: FILE: sound/maestro3.c:1432:
+    if (!s->dma_dac.ready && (ret = prog_dmabuf(s, 0)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: sound/maestro3.c:1433:
+        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: sound/maestro3.c:1433:
+        goto out;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: sound/maestro3.c:1478:
+^Idown(&s->sem);^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: sound/maestro3.c:1479:
+    ^Iif (s->dma_dac.mapped)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: sound/maestro3.c:1479:
+    ^Iif (s->dma_dac.mapped)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: sound/maestro3.c:1479:
+    ^Iif (s->dma_dac.mapped)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#550: FILE: sound/maestro3.c:1479:
+    	if (s->dma_dac.mapped)
+	{

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: sound/maestro3.c:1481:
+        ^Iret = -ENXIO;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#552: FILE: sound/maestro3.c:1481:
+        ^Iret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: sound/maestro3.c:1481:
+        ^Iret = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: sound/maestro3.c:1489:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: sound/maestro3.c:1489:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: sound/maestro3.c:1507:
+    up(&s->sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: sound/maestro3.c:1553:
+    down(&s->sem);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#579: FILE: sound/maestro3.c:1555:
         if ((ret = prog_dmabuf(s, 0)) != 0)
+            goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: sound/maestro3.c:1556:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: sound/maestro3.c:1556:
+            goto out;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#585: FILE: sound/maestro3.c:1560:
         if ((ret = prog_dmabuf(s, 1)) != 0)
+            goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: sound/maestro3.c:1561:
+            goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: sound/maestro3.c:1561:
+            goto out;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: sound/maestro3.c:1563:
+    } else { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: sound/maestro3.c:1563:
+    } else { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: sound/maestro3.c:1564:
+        ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: sound/maestro3.c:1564:
+        ret = -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: sound/maestro3.c:1576:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: sound/maestro3.c:1576:
+    $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#603: FILE: sound/maestro3.c:1577:
     if(offset > max_size - size)
+    {	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: sound/maestro3.c:1578:
+    {^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: sound/maestro3.c:1578:
+    {^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: sound/maestro3.c:1579:
+    ^Iret = -EAGAIN;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: sound/maestro3.c:1579:
+    ^Iret = -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: sound/maestro3.c:1579:
+    ^Iret = -EAGAIN;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: sound/maestro3.c:1581:
+    }^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: sound/maestro3.c:1581:
+    }^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: sound/maestro3.c:1594:
+    up(&s->sem);$

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: sound/esssolo1.c:1027:
+^Idown(&s->sem);^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#670: FILE: sound/esssolo1.c:1028:
+	if (!s->dma_adc.ready && (ret = prog_dmabuf_adc(s)))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#695: FILE: sound/esssolo1.c:1083:
+			if (s->dma_adc.mapped)
+			{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: sound/esssolo1.c:1085:
+^I^I^I^Iret = -ENXIO;^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#728: FILE: sound/esssolo1.c:1134:
+	if (!s->dma_dac.ready && (ret = prog_dmabuf_dac(s)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: sound/esssolo1.c:1175:
+^I^I^I^Igoto out;^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#750: FILE: sound/esssolo1.c:1178:
+			if (s->dma_dac.mapped)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#787: FILE: sound/esssolo1.c:1276:
 	if (size > (PAGE_SIZE << db->buforder))
+	{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530466.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 82 errors, 45 warnings, 0 checks, 679 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530466.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
