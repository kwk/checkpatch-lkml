WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This patch introduces compatibility functions for some ip_tables matches and 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#75: FILE: include/linux/netfilter/xt_conntrack.h:67:
+struct compat_xt_conntrack_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#84: FILE: include/linux/netfilter/xt_conntrack.h:76:
+	u_int8_t flags;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#86: FILE: include/linux/netfilter/xt_conntrack.h:78:
+	u_int8_t invflags;

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#128: FILE: include/linux/netfilter/xt_limit.h:26:
+	u_int32_t avg;    /* Average secs between packets * scale */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#129: FILE: include/linux/netfilter/xt_limit.h:27:
+	u_int32_t burst;  /* Period multiplier for upper limit. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#133: FILE: include/linux/netfilter/xt_limit.h:31:
+	u_int32_t credit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#134: FILE: include/linux/netfilter/xt_limit.h:32:
+	u_int32_t credit_cap, cost;

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#159: FILE: include/linux/netfilter/xt_state.h:18:
+struct compat_xt_state_info
+{

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#182: FILE: include/linux/netfilter_ipv4/ip_nat.h:85:
+struct compat_ip_nat_range
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#184: FILE: include/linux/netfilter_ipv4/ip_nat.h:87:
+	u_int32_t min_ip, max_ip;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#189: FILE: include/linux/netfilter_ipv4/ip_nat.h:92:
+struct compat_ip_nat_multi_range
+{

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: net/ipv4/netfilter/ip_nat_rule.c:240:
+static int compat_to_user(void *target, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#210: FILE: net/ipv4/netfilter/ip_nat_rule.c:245:
+	u_int16_t tsize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: net/ipv4/netfilter/ip_nat_rule.c:260:
+	if (__copy_to_user(*dstptr + sizeof(struct ipt_entry_target),
+				&info, sizeof(struct compat_ip_nat_multi_range)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: net/ipv4/netfilter/ip_nat_rule.c:271:
+static int compat_from_user(void *target, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#242: FILE: net/ipv4/netfilter/ip_nat_rule.c:277:
+	u_int16_t tsize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: net/ipv4/netfilter/ip_nat_rule.c:292:
+	memcpy(*dstptr + sizeof(struct compat_ipt_entry_target),
+			&info, sizeof(struct ip_nat_multi_range_compat));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#271: FILE: net/ipv4/netfilter/ip_nat_rule.c:306:
+	switch (convert) {
+		case COMPAT_TO_USER:
[...]
+		case COMPAT_FROM_USER:
[...]
+		case COMPAT_CALC_SIZE:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: net/ipv4/netfilter/ipt_LOG.c:463:
+static int ipt_log_compat(void *target,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: net/ipv4/netfilter/ipt_REJECT.c:327:
+static int compat(void *target,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: net/ipv4/netfilter/ipt_TCPMSS.c:247:
+static int ipt_tcpmss_compat(void *target,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: net/ipv4/netfilter/ipt_TOS.c:88:
+static int compat(void *target,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: net/ipv4/netfilter/ipt_multiport.c:179:
+static int compat(void *match,
+		void **dstptr, int *size, int convert)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: net/ipv4/netfilter/ipt_multiport.c:189:
+static int compat_v1(void *match,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: net/ipv4/netfilter/ipt_tos.c:49:
+static int compat(void *match,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: net/ipv4/netfilter/ipt_ttl.c:62:
+static int compat(void *match,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: net/netfilter/xt_conntrack.c:219:
+static int compat_to_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#550: FILE: net/netfilter/xt_conntrack.c:224:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: net/netfilter/xt_conntrack.c:237:
+	memcpy(info.sipmsk, pinfo->sipmsk,
+			IP_CT_DIR_MAX * sizeof(struct in_addr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: net/netfilter/xt_conntrack.c:239:
+	memcpy(info.dipmsk, pinfo->dipmsk,
+			IP_CT_DIR_MAX * sizeof(struct in_addr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: net/netfilter/xt_conntrack.c:245:
+	if (__copy_to_user(*dstptr + sizeof(struct ipt_entry_match),
+				&info, sizeof(struct compat_xt_conntrack_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: net/netfilter/xt_conntrack.c:256:
+static int compat_from_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#588: FILE: net/netfilter/xt_conntrack.c:262:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: net/netfilter/xt_conntrack.c:275:
+	memcpy(info.sipmsk, pinfo->sipmsk,
+			IP_CT_DIR_MAX * sizeof(struct in_addr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: net/netfilter/xt_conntrack.c:277:
+	memcpy(info.dipmsk, pinfo->dipmsk,
+			IP_CT_DIR_MAX * sizeof(struct in_addr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: net/netfilter/xt_conntrack.c:283:
+	memcpy(*dstptr + sizeof(struct compat_ipt_entry_match),
+				&info, sizeof(struct xt_conntrack_info));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#623: FILE: net/netfilter/xt_conntrack.c:297:
+	switch (convert) {
+		case COMPAT_TO_USER:
[...]
+		case COMPAT_FROM_USER:
[...]
+		case COMPAT_CALC_SIZE:
[...]
+		default:

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: net/netfilter/xt_helper.c:154:
+static int compat_to_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#673: FILE: net/netfilter/xt_helper.c:159:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: net/netfilter/xt_helper.c:170:
+	if (__copy_to_user(*dstptr + sizeof(struct ipt_entry_match),
+				&info, sizeof(struct compat_xt_helper_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: net/netfilter/xt_helper.c:181:
+static int compat_from_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#701: FILE: net/netfilter/xt_helper.c:187:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: net/netfilter/xt_helper.c:198:
+	memcpy(*dstptr + sizeof(struct compat_ipt_entry_match),
+				&info, sizeof(struct xt_helper_info));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#726: FILE: net/netfilter/xt_helper.c:212:
+	switch (convert) {
+		case COMPAT_TO_USER:
[...]
+		case COMPAT_FROM_USER:
[...]
+		case COMPAT_CALC_SIZE:
[...]
+		default:

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: net/netfilter/xt_length.c:68:
+static int compat(void *match,
+		void **dstptr, int *size, int convert)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: net/netfilter/xt_limit.c:143:
+static int ipt_limit_compat_to_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#822: FILE: net/netfilter/xt_limit.c:148:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: net/netfilter/xt_limit.c:159:
+	if (__copy_to_user(*dstptr + sizeof(struct ipt_entry_match),
+				&rinfo, sizeof(struct compat_xt_rateinfo)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: net/netfilter/xt_limit.c:170:
+static int ipt_limit_compat_from_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#850: FILE: net/netfilter/xt_limit.c:176:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: net/netfilter/xt_limit.c:187:
+	memcpy(*dstptr + sizeof(struct compat_ipt_entry_match),
+				&rinfo, sizeof(struct xt_rateinfo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: net/netfilter/xt_limit.c:196:
+static int ipt_limit_compat(void *match, void **dstptr,
+		int *size, int convert)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#876: FILE: net/netfilter/xt_limit.c:202:
+	switch (convert) {
+		case COMPAT_TO_USER:
[...]
+		case COMPAT_FROM_USER:
[...]
+		case COMPAT_CALC_SIZE:
[...]
+		default:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: net/netfilter/xt_limit.c:205:
+			ret = ipt_limit_compat_to_user(match,
+					dstptr, size, off);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: net/netfilter/xt_limit.c:209:
+			ret = ipt_limit_compat_from_user(match,
+					dstptr, size, off);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: net/netfilter/xt_state.c:61:
+static int compat_to_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#937: FILE: net/netfilter/xt_state.c:66:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: net/netfilter/xt_state.c:76:
+	if (__copy_to_user(*dstptr + sizeof(struct ipt_entry_match),
+				&info, sizeof(struct compat_xt_state_info)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: net/netfilter/xt_state.c:87:
+static int compat_from_user(void *match, void **dstptr,
+		int *size, int off)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#964: FILE: net/netfilter/xt_state.c:93:
+	u_int16_t msize;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#974: FILE: net/netfilter/xt_state.c:103:
+	memcpy(*dstptr + sizeof(struct compat_ipt_entry_match),
+				&info, sizeof(struct xt_state_info));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#988: FILE: net/netfilter/xt_state.c:117:
+	switch (convert) {
+		case COMPAT_TO_USER:
[...]
+		case COMPAT_FROM_USER:
[...]
+		case COMPAT_CALC_SIZE:
[...]
+		default:

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: net/netfilter/xt_tcpmss.c:138:
+static int compat(void *match,
+		void **dstptr, int *size, int convert)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102679.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 20 warnings, 54 checks, 938 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102679.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
