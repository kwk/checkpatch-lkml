WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
newly added PHB is assigned using the same simple counter that assigns it at

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#72: FILE: arch/ppc64/kernel/pSeries_pci.c:193:
+unsigned long __devinit get_phb_buid (struct device_node *phb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: arch/ppc64/kernel/pSeries_pci.c:193:
+unsigned long __devinit get_phb_buid (struct device_node *phb)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#97: FILE: arch/ppc64/kernel/pSeries_pci.c:231:
+		printk(KERN_ERR "%s: phb has no model property\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: arch/ppc64/kernel/pSeries_pci.c:232:
+		printk(KERN_ERR "%s: phb has no model property\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#98: FILE: arch/ppc64/kernel/pSeries_pci.c:232:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#109: FILE: arch/ppc64/kernel/pSeries_pci.c:243:
+		printk(KERN_ERR "%s: unknown PHB %s\n", __FUNCTION__, model);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#109: FILE: arch/ppc64/kernel/pSeries_pci.c:243:
+		printk(KERN_ERR "%s: unknown PHB %s\n", __FUNCTION__, model);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: arch/ppc64/kernel/pSeries_pci.c:251:
+int get_phb_reg_prop(struct device_node *dev, unsigned int addr_size_words,
+		struct reg_property64 *reg)

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/ppc64/kernel/pSeries_pci.c:277:
+	bus_range = (int *) get_property(dev, "bus-range", &len);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#158: FILE: arch/ppc64/kernel/pSeries_pci.c:278:
+	if (bus_range == NULL || len < 2 * sizeof(int)) {
+		return 1;
+ 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus_range"
#158: FILE: arch/ppc64/kernel/pSeries_pci.c:278:
+	if (bus_range == NULL || len < 2 * sizeof(int)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/ppc64/kernel/pSeries_pci.c:280:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: arch/ppc64/kernel/pSeries_pci.c:280:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/ppc64/kernel/pSeries_pci.c:280:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: arch/ppc64/kernel/pSeries_pci.c:281:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/ppc64/kernel/pSeries_pci.c:281:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: arch/ppc64/kernel/pSeries_pci.c:289:
+static struct pci_controller *alloc_phb(struct device_node *dev,
+				 unsigned int addr_size_words)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#213: FILE: arch/ppc64/kernel/pSeries_pci.c:337:
+static struct pci_controller * __devinit alloc_phb_dynamic(struct device_node *dev, unsigned int addr_size_words)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#213: FILE: arch/ppc64/kernel/pSeries_pci.c:337:
+static struct pci_controller * __devinit alloc_phb_dynamic(struct device_node *dev, unsigned int addr_size_words)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phb"
#227: FILE: arch/ppc64/kernel/pSeries_pci.c:351:
+	if (phb == NULL)

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#242: FILE: arch/ppc64/kernel/pSeries_pci.c:366:
+	phb->buid = get_phb_buid(dev);
 	     ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/ppc64/kernel/pSeries_pci.c:368:
+ ^Ireturn phb;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: arch/ppc64/kernel/pSeries_pci.c:368:
+ ^Ireturn phb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/ppc64/kernel/pSeries_pci.c:368:
+ ^Ireturn phb;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#264: FILE: arch/ppc64/kernel/pSeries_pci.c:416:
+struct pci_controller * __devinit init_phb_dynamic(struct device_node *dn)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: arch/ppc64/kernel/pci.c:182:
+static void phb_set_model(struct pci_controller *hose, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: arch/ppc64/kernel/pci.c:215:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#379: FILE: arch/ppc64/kernel/pci.c:224:
+	hose = (struct pci_controller *)kmalloc(sizeof(struct pci_controller),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hose)...) over kmalloc(sizeof(struct pci_controller)...)
#379: FILE: arch/ppc64/kernel/pci.c:224:
+	hose = (struct pci_controller *)kmalloc(sizeof(struct pci_controller),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#384: FILE: arch/ppc64/kernel/pci.c:229:
+	if (hose == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#385: FILE: arch/ppc64/kernel/pci.c:230:
+		printk(KERN_ERR "PCI: Allocate pci_controller failed.\n");

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#409: FILE: arch/ppc64/kernel/pci.c:254:
+	hose = (struct pci_controller *)kmalloc(sizeof(struct pci_controller),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hose)...) over kmalloc(sizeof(struct pci_controller)...)
#409: FILE: arch/ppc64/kernel/pci.c:254:
+	hose = (struct pci_controller *)kmalloc(sizeof(struct pci_controller),

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: arch/ppc64/kernel/pci.c:256:
+	if(hose == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#411: FILE: arch/ppc64/kernel/pci.c:256:
+	if(hose == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: arch/ppc64/kernel/pci.c:257:
+		printk(KERN_ERR "PCI: Allocate pci_controller failed.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#412: FILE: arch/ppc64/kernel/pci.c:257:
+	if(hose == NULL) {
+		printk(KERN_ERR "PCI: Allocate pci_controller failed.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#435: FILE: arch/ppc64/kernel/pci.c:570:
+static void __devinit pci_process_ISA_OF_ranges(struct device_node *isa_node,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: arch/ppc64/kernel/pci.c:571:
+static void __devinit pci_process_ISA_OF_ranges(struct device_node *isa_node,
 				      unsigned long phb_io_base_phys,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#445: FILE: arch/ppc64/kernel/pci.c:615:
+void __devinit pci_process_bridge_OF_ranges(struct pci_controller *hose,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: arch/ppc64/kernel/pci.c:616:
+void __devinit pci_process_bridge_OF_ranges(struct pci_controller *hose,
+					struct device_node *dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: arch/ppc64/kernel/pci.c:692:
+	PPCDBG(PPCDBG_PHBINIT, "phb%d io_base_phys 0x%lx io_base_virt 0x%lx\n",
+		hose->global_number, hose->io_base_phys,

CHECK:SPACING: No space is necessary after a cast
#507: FILE: arch/ppc64/kernel/pci.c:693:
+		(unsigned long) hose->io_base_virt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: arch/ppc64/kernel/pci.c:701:
+			pci_process_ISA_OF_ranges(isa_dn, hose->io_base_phys,
+						hose->io_base_virt);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#528: FILE: arch/ppc64/kernel/pci.c:714:
+void __devinit pci_setup_phb_io_dynamic(struct pci_controller *hose)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: arch/ppc64/kernel/pci.c:721:
+	hose->io_base_virt = __ioremap(hose->io_base_phys, size,
+					_PAGE_NO_CACHE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: arch/ppc64/kernel/pci.c:723:
+	PPCDBG(PPCDBG_PHBINIT, "phb%d io_base_phys 0x%lx io_base_virt 0x%lx\n",
+		hose->global_number, hose->io_base_phys,

CHECK:SPACING: No space is necessary after a cast
#538: FILE: arch/ppc64/kernel/pci.c:724:
+		(unsigned long) hose->io_base_virt);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#554: FILE: arch/ppc64/kernel/pci.h:18:
+extern struct pci_controller* pci_alloc_phb_dynamic(enum phb_types controller_type);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#554: FILE: arch/ppc64/kernel/pci.h:18:
+extern struct pci_controller* pci_alloc_phb_dynamic(enum phb_types controller_type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: arch/ppc64/kernel/pci.h:19:
+extern void pci_setup_phb_io(struct pci_controller *hose, int primary);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: arch/ppc64/kernel/pci.h:22:
+extern void pci_setup_phb_io_dynamic(struct pci_controller *hose);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#579: FILE: arch/ppc64/kernel/pci_dn.c:45:
+static void * __devinit update_dn_pci_info(struct device_node *dn, void *data)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#587: FILE: arch/ppc64/kernel/pci_dn.c:142:
+void __devinit pci_devs_phb_init_dynamic(struct pci_controller *phb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: arch/ppc64/kernel/pci_dn.c:146:
+	traverse_pci_devices((struct device_node *)phb->arch_data,
+			update_dn_pci_info, phb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#631: FILE: include/asm-ppc64/pci.h:232:
+extern struct pci_controller *init_phb_dynamic(struct device_node *dn);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 27 warnings, 24 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
