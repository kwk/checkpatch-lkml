ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: fs/compat.c:1591:
+static void flush_all_old_files(struct files_struct * files)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/compat.c:1596:
+int compat_do_execns(int unshare_flags, char * filename,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: fs/compat.c:1599:
+		     struct pt_regs * regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/compat.c:1601:
+       int err = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/compat.c:1602:
+       struct nsproxy *new_nsproxy = NULL, *old_nsproxy = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/compat.c:1603:
+       struct uts_namespace *uts, *new_uts = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/compat.c:1604:
+       struct ipc_namespace *ipc, *new_ipc = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/compat.c:1606:
+       err = unshare_utsname(unshare_flags, &new_uts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/compat.c:1607:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#107: FILE: fs/compat.c:1607:
+       if (err)
+               goto bad_execns_out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/compat.c:1608:
+               goto bad_execns_out;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/compat.c:1608:
+               goto bad_execns_out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/compat.c:1609:
+       err = unshare_ipcs(unshare_flags, &new_ipc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/compat.c:1610:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#110: FILE: fs/compat.c:1610:
+       if (err)
+               goto bad_execns_cleanup_uts;

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/compat.c:1611:
+               goto bad_execns_cleanup_uts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/compat.c:1611:
+               goto bad_execns_cleanup_uts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/compat.c:1613:
+       if (new_uts || new_ipc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#113: FILE: fs/compat.c:1613:
+       if (new_uts || new_ipc) {
+               old_nsproxy = current->nsproxy;

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: fs/compat.c:1614:
+               old_nsproxy = current->nsproxy;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/compat.c:1614:
+               old_nsproxy = current->nsproxy;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: fs/compat.c:1615:
+               new_nsproxy = dup_namespaces(old_nsproxy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/compat.c:1615:
+               new_nsproxy = dup_namespaces(old_nsproxy);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: fs/compat.c:1616:
+               if (!new_nsproxy) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/compat.c:1616:
+               if (!new_nsproxy) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#116: FILE: fs/compat.c:1616:
+               if (!new_nsproxy) {
+                       err = -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/compat.c:1617:
+                       err = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/compat.c:1617:
+                       err = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: fs/compat.c:1618:
+                       goto bad_execns_cleanup_ipc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/compat.c:1618:
+                       goto bad_execns_cleanup_ipc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/compat.c:1619:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/compat.c:1619:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/compat.c:1620:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/compat.c:1622:
+       err = compat_do_execve(filename, argv, envp, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/compat.c:1623:
+       if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#123: FILE: fs/compat.c:1623:
+       if (err)
+               goto bad_execns_cleanup_ipc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: fs/compat.c:1624:
+               goto bad_execns_cleanup_ipc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/compat.c:1624:
+               goto bad_execns_cleanup_ipc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/compat.c:1627:
+       flush_all_old_files(current->files);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/compat.c:1629:
+       if (new_uts || new_ipc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#129: FILE: fs/compat.c:1629:
+       if (new_uts || new_ipc) {
[...]
+               task_lock(current);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#130: FILE: fs/compat.c:1630:
+       if (new_uts || new_ipc) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/compat.c:1631:
+               task_lock(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/compat.c:1631:
+               task_lock(current);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/compat.c:1633:
+               if (new_nsproxy) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/compat.c:1633:
+               if (new_nsproxy) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#133: FILE: fs/compat.c:1633:
+               if (new_nsproxy) {
+                       current->nsproxy = new_nsproxy;

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/compat.c:1634:
+                       current->nsproxy = new_nsproxy;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/compat.c:1634:
+                       current->nsproxy = new_nsproxy;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/compat.c:1635:
+                       new_nsproxy = old_nsproxy;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/compat.c:1635:
+                       new_nsproxy = old_nsproxy;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/compat.c:1636:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/compat.c:1636:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: fs/compat.c:1638:
+               if (new_uts) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/compat.c:1638:
+               if (new_uts) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#138: FILE: fs/compat.c:1638:
+               if (new_uts) {
+                       uts = current->nsproxy->uts_ns;

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: fs/compat.c:1639:
+                       uts = current->nsproxy->uts_ns;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/compat.c:1639:
+                       uts = current->nsproxy->uts_ns;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: fs/compat.c:1640:
+                       current->nsproxy->uts_ns = new_uts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: fs/compat.c:1640:
+                       current->nsproxy->uts_ns = new_uts;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/compat.c:1641:
+                       new_uts = uts;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/compat.c:1641:
+                       new_uts = uts;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: fs/compat.c:1642:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/compat.c:1642:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/compat.c:1644:
+               if (new_ipc) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/compat.c:1644:
+               if (new_ipc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#144: FILE: fs/compat.c:1644:
+               if (new_ipc) {
+                       ipc = current->nsproxy->ipc_ns;

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/compat.c:1645:
+                       ipc = current->nsproxy->ipc_ns;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/compat.c:1645:
+                       ipc = current->nsproxy->ipc_ns;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: fs/compat.c:1646:
+                       current->nsproxy->ipc_ns = new_ipc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/compat.c:1646:
+                       current->nsproxy->ipc_ns = new_ipc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/compat.c:1647:
+                       new_ipc = ipc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/compat.c:1647:
+                       new_ipc = ipc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/compat.c:1648:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/compat.c:1648:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/compat.c:1650:
+               task_unlock(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/compat.c:1650:
+               task_unlock(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/compat.c:1651:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/compat.c:1653:
+       if (new_nsproxy)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#153: FILE: fs/compat.c:1653:
+       if (new_nsproxy)
+               put_nsproxy(new_nsproxy);

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/compat.c:1654:
+               put_nsproxy(new_nsproxy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/compat.c:1654:
+               put_nsproxy(new_nsproxy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/compat.c:1657:
+       if (new_ipc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#157: FILE: fs/compat.c:1657:
+       if (new_ipc)
+               put_ipc_ns(new_ipc);

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: fs/compat.c:1658:
+               put_ipc_ns(new_ipc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/compat.c:1658:
+               put_ipc_ns(new_ipc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/compat.c:1661:
+       if (new_uts)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#161: FILE: fs/compat.c:1661:
+       if (new_uts)
+               put_uts_ns(new_uts);

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: fs/compat.c:1662:
+               put_uts_ns(new_uts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/compat.c:1662:
+               put_uts_ns(new_uts);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/compat.c:1665:
+       return err;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: include/linux/compat.h:188:
+int compat_do_execns(int flags, char * filename, compat_uptr_t __user *argv,

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: include/linux/compat.h:189:
+^I        compat_uptr_t __user *envp, struct pt_regs * regs);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/linux/compat.h:189:
+int compat_do_execns(int flags, char * filename, compat_uptr_t __user *argv,
+	        compat_uptr_t __user *envp, struct pt_regs * regs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: include/linux/compat.h:189:
+	        compat_uptr_t __user *envp, struct pt_regs * regs);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000058409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 59 warnings, 2 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000058409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
