WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#66: 
    cat /proc/ocfs2hash | hexdump -v -e'"%1.1d\n"' | awk '{sum += $1} END {print "Total: ", sum;}'

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: fs/ocfs2/dlm/dlmcommon.h:39:
+#define DLM_HASH_SIZE		(1 << 18)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#165: FILE: fs/ocfs2/dlm/dlmdomain.c:83:
+static struct seq_operations hashdump_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: fs/ocfs2/dlm/dlmdomain.c:93:
+	int err = seq_open(file, &hashdump_ops);
+	if (!err) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#178: FILE: fs/ocfs2/dlm/dlmdomain.c:96:
+		int size = DLM_HASH_BUCKETS * sizeof(int), *vec = vmalloc(size);
+		if (vec) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#201: FILE: fs/ocfs2/dlm/dlmdomain.c:119:
+static struct file_operations hashdump_file_ops = {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#234: FILE: fs/ocfs2/dlm/dlmdomain.c:1270:
+	dlm->lockres_hash = (struct hlist_head *)vmalloc(DLM_HASH_SIZE);

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: fs/ocfs2/dlm/dlmdomain.c:1284:
+	struct proc_dir_entry *entry = create_proc_entry("ocfs2hash", 0, NULL);
+	if (entry) {

CHECK:CAMELCASE: Avoid CamelCase: <Errstop>
#277: FILE: fs/seq_file.c:115:
+		goto Errstop;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#310: FILE: fs/seq_file.c:177:
+	goto Done;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 3 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
