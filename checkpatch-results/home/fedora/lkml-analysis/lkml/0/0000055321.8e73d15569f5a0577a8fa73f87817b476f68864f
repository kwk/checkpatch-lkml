WARNING:TYPO_SPELLING: 'alway' may be misspelled - perhaps 'always'?
#48: 
root can alway see you, and in turn you can see root.  If root is shy he
         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#133: FILE: fs/proc/base.c:101:
+                                     struct nameidata *nd)
                                                        ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/proc/base.c:101:
+                                     struct nameidata *nd)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/proc/base.c:101:
+                                     struct nameidata *nd)$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#135: FILE: fs/proc/base.c:103:
+	if (((mask & (MAY_READ|MAY_EXEC)) == mask) && in_group_p(proc_gid))
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#149: FILE: fs/proc/base.c:1320:
+		return S_IFDIR|S_IRUGO|S_IXUGO;
 		              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#149: FILE: fs/proc/base.c:1320:
+		return S_IFDIR|S_IRUGO|S_IXUGO;
 		                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IXUGO' are not preferred. Consider using octal permissions '0555'.
#149: FILE: fs/proc/base.c:1320:
+		return S_IFDIR|S_IRUGO|S_IXUGO;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#151: FILE: fs/proc/base.c:1322:
+		return S_IFDIR|S_IRUSR|S_IXUSR;
 		              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#151: FILE: fs/proc/base.c:1322:
+		return S_IFDIR|S_IRUSR|S_IXUSR;
 		                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IXUSR' are not preferred. Consider using octal permissions '0500'.
#151: FILE: fs/proc/base.c:1322:
+		return S_IFDIR|S_IRUSR|S_IXUSR;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#154: FILE: fs/proc/base.c:1325:
+static struct inode_operations proc_tgid_base_privacy_inode_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#190: FILE: fs/proc/base.c:1916:
+static struct inode_operations proc_tgid_base_privacy_inode_operations = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 5 checks, 116 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000055321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
