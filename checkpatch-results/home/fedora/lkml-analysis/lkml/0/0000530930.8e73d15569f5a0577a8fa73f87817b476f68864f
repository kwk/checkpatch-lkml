ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: drivers/net/natsemi.c:357:
+	struct netdev_desc* rx_ring;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#132: FILE: drivers/net/natsemi.c:358:
+	struct netdev_desc* tx_ring;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#226: FILE: drivers/net/natsemi.c:505:
+			printk(KERN_INFO "%s: ignoring user supplied media type %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/net/natsemi.c:506:
+			printk(KERN_INFO "%s: ignoring user supplied media type %d",
+				dev->name, option & 15);

CHECK:CAMELCASE: Avoid CamelCase: <ChipReset>
#246: FILE: drivers/net/natsemi.c:628:
+	writel(ChipReset, dev->base_addr + ChipCmd);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#246: FILE: drivers/net/natsemi.c:628:
+	writel(ChipReset, dev->base_addr + ChipCmd);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: drivers/net/natsemi.c:629:
+	for (i=0;i<NATSEMI_HW_TIMEOUT;i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#247: FILE: drivers/net/natsemi.c:629:
+	for (i=0;i<NATSEMI_HW_TIMEOUT;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#247: FILE: drivers/net/natsemi.c:629:
+	for (i=0;i<NATSEMI_HW_TIMEOUT;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#247: FILE: drivers/net/natsemi.c:629:
+	for (i=0;i<NATSEMI_HW_TIMEOUT;i++) {
 	                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#252: FILE: drivers/net/natsemi.c:634:
+	if (i==NATSEMI_HW_TIMEOUT && debug) {
 	     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#253: FILE: drivers/net/natsemi.c:635:
+		printk(KERN_INFO "%s: reset did not complete in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/net/natsemi.c:636:
+		printk(KERN_INFO "%s: reset did not complete in %d usec.\n",
+		   dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#254: FILE: drivers/net/natsemi.c:636:
+		   dev->name, i*5);
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#256: FILE: drivers/net/natsemi.c:638:
+		printk(KERN_DEBUG "%s: reset completed in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/net/natsemi.c:639:
+		printk(KERN_DEBUG "%s: reset completed in %d usec.\n",
+		   dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#257: FILE: drivers/net/natsemi.c:639:
+		   dev->name, i*5);
 		               ^

CHECK:CAMELCASE: Avoid CamelCase: <ChipConfig>
#364: FILE: drivers/net/natsemi.c:688:
+	int chipcfg = readl(ioaddr + ChipConfig);

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: drivers/net/natsemi.c:690:
+	if(!(chipcfg & 0x80000000)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#370: FILE: drivers/net/natsemi.c:693:
+				printk(KERN_INFO "%s: no link. Disabling watchdog.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/net/natsemi.c:694:
+				printk(KERN_INFO "%s: no link. Disabling watchdog.\n",
+					dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#381: FILE: drivers/net/natsemi.c:701:
+			printk(KERN_INFO "%s: link is back. Enabling watchdog.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/net/natsemi.c:702:
+			printk(KERN_INFO "%s: link is back. Enabling watchdog.\n",
+					dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#404: FILE: drivers/net/natsemi.c:733:
+		printk(KERN_DEBUG "%s: found silicon revision %xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/net/natsemi.c:734:
+		printk(KERN_DEBUG "%s: found silicon revision %xh.\n",
+				dev->name, readl(ioaddr + SiliconRev));

CHECK:CAMELCASE: Avoid CamelCase: <SiliconRev>
#405: FILE: drivers/net/natsemi.c:734:
+				dev->name, readl(ioaddr + SiliconRev));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#407: FILE: drivers/net/natsemi.c:736:
+	/* On page 78 of the spec, they recommend some settings for "optimum
+	   performance" to be done in sequence.  These settings optimize some

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'regsiters' may be misspelled - perhaps 'registers'?
#413: FILE: drivers/net/natsemi.c:742:
+	   SiliconRev regsiters says "DP83815CVNG: 00000302h"
 	              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#424: FILE: drivers/net/natsemi.c:753:
+	/* Enable PHY Specific event based interrupts.  Link state change
+	   and Auto-Negotiation Completion are among the affected.

CHECK:CAMELCASE: Avoid CamelCase: <MIntrCtrl>
#426: FILE: drivers/net/natsemi.c:755:
+	writew(0x0002, ioaddr + MIntrCtrl);

CHECK:CAMELCASE: Avoid CamelCase: <RxRingPtr>
#428: FILE: drivers/net/natsemi.c:757:
+	writel(np->ring_dma, ioaddr + RxRingPtr);

CHECK:CAMELCASE: Avoid CamelCase: <TxRingPtr>
#429: FILE: drivers/net/natsemi.c:758:
+	writel(np->ring_dma + RX_RING_SIZE * sizeof(struct netdev_desc), ioaddr + TxRingPtr);

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterAddr>
#432: FILE: drivers/net/natsemi.c:761:
+		writel(i, ioaddr + RxFilterAddr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#433: FILE: drivers/net/natsemi.c:762:
+		writew(dev->dev_addr[i] + (dev->dev_addr[i+1] << 8),
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/net/natsemi.c:763:
+		writew(dev->dev_addr[i] + (dev->dev_addr[i+1] << 8),
+			   ioaddr + RxFilterData);

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterData>
#434: FILE: drivers/net/natsemi.c:763:
+			   ioaddr + RxFilterData);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/net/natsemi.c:770:
+^I * to the correct settings. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: drivers/net/natsemi.c:776:
+^I * ^IMXDMA must be <= FLTH$

CHECK:CAMELCASE: Avoid CamelCase: <TxConfig>
#456: FILE: drivers/net/natsemi.c:785:
+	writel(np->tx_config, ioaddr + TxConfig);

CHECK:CAMELCASE: Avoid CamelCase: <RxConfig>
#457: FILE: drivers/net/natsemi.c:786:
+	writel(np->rx_config, ioaddr + RxConfig);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: drivers/net/natsemi.c:791:
+^I * implementations may have PME set to enable WakeOnLan. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#464: FILE: drivers/net/natsemi.c:793:
+	 * nothing will be written to memory. */

CHECK:CAMELCASE: Avoid CamelCase: <SavedClkRun>
#465: FILE: drivers/net/natsemi.c:794:
+	np->SavedClkRun = readl(ioaddr + ClkRun);

CHECK:CAMELCASE: Avoid CamelCase: <ClkRun>
#465: FILE: drivers/net/natsemi.c:794:
+	np->SavedClkRun = readl(ioaddr + ClkRun);

CHECK:CAMELCASE: Avoid CamelCase: <IntrNormalSummary>
#472: FILE: drivers/net/natsemi.c:801:
+	writel(IntrNormalSummary | IntrAbnormalSummary | 0x1f, ioaddr + IntrMask);

CHECK:CAMELCASE: Avoid CamelCase: <IntrAbnormalSummary>
#472: FILE: drivers/net/natsemi.c:801:
+	writel(IntrNormalSummary | IntrAbnormalSummary | 0x1f, ioaddr + IntrMask);

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#472: FILE: drivers/net/natsemi.c:801:
+	writel(IntrNormalSummary | IntrAbnormalSummary | 0x1f, ioaddr + IntrMask);

CHECK:CAMELCASE: Avoid CamelCase: <IntrEnable>
#473: FILE: drivers/net/natsemi.c:802:
+	writel(1, ioaddr + IntrEnable);

CHECK:CAMELCASE: Avoid CamelCase: <RxOn>
#475: FILE: drivers/net/natsemi.c:804:
+	writel(RxOn | TxOn, ioaddr + ChipCmd);

CHECK:CAMELCASE: Avoid CamelCase: <TxOn>
#475: FILE: drivers/net/natsemi.c:804:
+	writel(RxOn | TxOn, ioaddr + ChipCmd);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#476: FILE: drivers/net/natsemi.c:805:
+^Iwritel(4, ioaddr + StatsCtrl); ^I^I^I^I^I/* Clear Stats */$

CHECK:CAMELCASE: Avoid CamelCase: <StatsCtrl>
#476: FILE: drivers/net/natsemi.c:805:
+	writel(4, ioaddr + StatsCtrl); 					/* Clear Stats */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: drivers/net/natsemi.c:815:
+^I^I/* DO NOT read the IntrStatus register, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#494: FILE: drivers/net/natsemi.c:818:
+		printk(KERN_DEBUG "%s: Media selection timer tick.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/net/natsemi.c:819:
+		printk(KERN_DEBUG "%s: Media selection timer tick.\n",
+			   dev->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#528: FILE: drivers/net/natsemi.c:863:
+	struct netdev_private *np = dev->priv;
+	np->rx_ring = pci_alloc_consistent(np->pci_dev,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/net/natsemi.c:864:
+	np->rx_ring = pci_alloc_consistent(np->pci_dev,
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#529: FILE: drivers/net/natsemi.c:864:
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),
 				                                          ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#546: FILE: drivers/net/natsemi.c:886:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/net/natsemi.c:886:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#546: FILE: drivers/net/natsemi.c:886:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#546: FILE: drivers/net/natsemi.c:886:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <DescOwn>
#547: FILE: drivers/net/natsemi.c:887:
+		np->rx_ring[i].cmd_status = cpu_to_le32(DescOwn);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#552: FILE: drivers/net/natsemi.c:891:
+	np->rx_ring[i-1].next_desc = cpu_to_le32(np->ring_dma);
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/net/natsemi.c:901:
+		np->rx_dma[i] = pci_map_single(np->pci_dev,
+						skb->data, skb->len, PCI_DMA_FROMDEVICE);

CHECK:CAMELCASE: Avoid CamelCase: <DescIntr>
#566: FILE: drivers/net/natsemi.c:903:
+		np->rx_ring[i].cmd_status = cpu_to_le32(DescIntr | np->rx_buf_sz);

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#575: FILE: drivers/net/natsemi.c:910:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#575: FILE: drivers/net/natsemi.c:910:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#575: FILE: drivers/net/natsemi.c:910:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#575: FILE: drivers/net/natsemi.c:910:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#580: FILE: drivers/net/natsemi.c:913:
+	np->tx_ring[i-1].next_desc = cpu_to_le32(np->ring_dma
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#581: FILE: drivers/net/natsemi.c:914:
+					+sizeof(struct netdev_desc)*(RX_RING_SIZE));
 					^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#581: FILE: drivers/net/natsemi.c:914:
+					+sizeof(struct netdev_desc)*(RX_RING_SIZE));
 					                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/net/natsemi.c:928:
+			pci_unmap_single(np->pci_dev,
+						np->rx_dma[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: drivers/net/natsemi.c:938:
+			pci_unmap_single(np->pci_dev,
+						np->rx_dma[i],

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/net/natsemi.c:950:
+	struct netdev_private *np = dev->priv;
+	pci_free_consistent(np->pci_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: drivers/net/natsemi.c:951:
+	pci_free_consistent(np->pci_dev,
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#618: FILE: drivers/net/natsemi.c:951:
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),
 				                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: drivers/net/natsemi.c:968:
+	np->tx_dma[entry] = pci_map_single(np->pci_dev,
+				skb->data,skb->len, PCI_DMA_TODEVICE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#628: FILE: drivers/net/natsemi.c:968:
+				skb->data,skb->len, PCI_DMA_TODEVICE);
 				         ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#637: FILE: drivers/net/natsemi.c:974:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: drivers/net/natsemi.c:1007:
+		int entry = np->dirty_tx % TX_RING_SIZE;
+		if (np->tx_ring[entry].cmd_status & cpu_to_le32(DescOwn)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#669: FILE: drivers/net/natsemi.c:1009:
+				printk(KERN_DEBUG "%s: tx frame #%d is busy.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/net/natsemi.c:1010:
+				printk(KERN_DEBUG "%s: tx frame #%d is busy.\n",
+						dev->name, np->dirty_tx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#674: FILE: drivers/net/natsemi.c:1014:
+			printk(KERN_DEBUG "%s: tx frame #%d finished with status %8.8xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/net/natsemi.c:1015:
+			printk(KERN_DEBUG "%s: tx frame #%d finished with status %8.8xh.\n",
+					dev->name, np->dirty_tx,

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: drivers/net/natsemi.c:1022:
+			int tx_status = le32_to_cpu(np->tx_ring[entry].cmd_status);
+			if (tx_status & 0x04010000) np->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#682: FILE: drivers/net/natsemi.c:1022:
+			if (tx_status & 0x04010000) np->stats.tx_aborted_errors++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#683: FILE: drivers/net/natsemi.c:1023:
+			if (tx_status & 0x02000000) np->stats.tx_fifo_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#684: FILE: drivers/net/natsemi.c:1024:
+			if (tx_status & 0x01000000) np->stats.tx_carrier_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#685: FILE: drivers/net/natsemi.c:1025:
+			if (tx_status & 0x00200000) np->stats.tx_window_errors++;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#688: FILE: drivers/net/natsemi.c:1028:
+		pci_unmap_single(np->pci_dev,np->tx_dma[entry],
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/net/natsemi.c:1029:
+		pci_unmap_single(np->pci_dev,np->tx_dma[entry],
+					np->tx_skbuff[entry]->len,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#696: FILE: drivers/net/natsemi.c:1036:
+	if (netif_queue_stopped(dev)
+		&& np->cur_tx - np->dirty_tx < TX_QUEUE_LEN - 4) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#702: FILE: drivers/net/natsemi.c:1042:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#748: FILE: drivers/net/natsemi.c:1069:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxDone>
#748: FILE: drivers/net/natsemi.c:1069:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxIntr>
#748: FILE: drivers/net/natsemi.c:1069:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxIdle>
#748: FILE: drivers/net/natsemi.c:1069:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxErr>
#748: FILE: drivers/net/natsemi.c:1069:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#765: FILE: drivers/net/natsemi.c:1088:
+		printk(KERN_DEBUG "%s: exiting interrupt.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: drivers/net/natsemi.c:1089:
+		printk(KERN_DEBUG "%s: exiting interrupt.\n",
+			   dev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/net/natsemi.c:1135:
+				pci_dma_sync_single(np->pci_dev, np->rx_dma[entry],
+							np->rx_skbuff[entry]->len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: drivers/net/natsemi.c:1146:
+				pci_unmap_single(np->pci_dev, np->rx_dma[entry],
+							np->rx_skbuff[entry]->len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/net/natsemi.c:1174:
+			np->rx_dma[entry] = pci_map_single(np->pci_dev,
+							skb->data, skb->len, PCI_DMA_FROMDEVICE);

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#848: FILE: drivers/net/natsemi.c:1206:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",
 			                                      ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#848: FILE: drivers/net/natsemi.c:1206:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/net/natsemi.c:1207:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",
+					dev->name, np->tx_config);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#893: FILE: drivers/net/natsemi.c:1256:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#904: FILE: drivers/net/natsemi.c:1277:
+static unsigned ether_crc_le(int length, unsigned char *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: drivers/net/natsemi.c:1279:
+    u32 crc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: drivers/net/natsemi.c:1280:
+    u8 cur_byte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/net/natsemi.c:1281:
+    u8 msb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: drivers/net/natsemi.c:1282:
+    u8 byte, bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/net/natsemi.c:1284:
+    crc = ~0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: drivers/net/natsemi.c:1285:
+    for (byte=0; byte<length; byte++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#912: FILE: drivers/net/natsemi.c:1285:
+    for (byte=0; byte<length; byte++) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#912: FILE: drivers/net/natsemi.c:1285:
+    for (byte=0; byte<length; byte++) {
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: drivers/net/natsemi.c:1286:
+        cur_byte = *data++;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/net/natsemi.c:1286:
+        cur_byte = *data++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: drivers/net/natsemi.c:1287:
+        for (bit=0; bit<8; bit++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: drivers/net/natsemi.c:1287:
+        for (bit=0; bit<8; bit++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#914: FILE: drivers/net/natsemi.c:1287:
+        for (bit=0; bit<8; bit++) {
+            msb = crc >> 31;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#914: FILE: drivers/net/natsemi.c:1287:
+        for (bit=0; bit<8; bit++) {
                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#914: FILE: drivers/net/natsemi.c:1287:
+        for (bit=0; bit<8; bit++) {
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: drivers/net/natsemi.c:1288:
+            msb = crc >> 31;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/net/natsemi.c:1288:
+            msb = crc >> 31;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: drivers/net/natsemi.c:1289:
+            crc <<= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: drivers/net/natsemi.c:1289:
+            crc <<= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/net/natsemi.c:1290:
+            if (msb ^ (cur_byte & 1)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/net/natsemi.c:1290:
+            if (msb ^ (cur_byte & 1)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/net/natsemi.c:1291:
+                crc ^= DP_POLYNOMIAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/net/natsemi.c:1291:
+                crc ^= DP_POLYNOMIAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: drivers/net/natsemi.c:1292:
+                crc |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/net/natsemi.c:1292:
+                crc |= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/net/natsemi.c:1293:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/net/natsemi.c:1293:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/net/natsemi.c:1294:
+            cur_byte >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/net/natsemi.c:1294:
+            cur_byte >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: drivers/net/natsemi.c:1295:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/net/natsemi.c:1295:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: drivers/net/natsemi.c:1296:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: drivers/net/natsemi.c:1297:
+    crc >>= 23;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: drivers/net/natsemi.c:1299:
+    return (crc);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#927: FILE: drivers/net/natsemi.c:1299:
+    return (crc);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#931: FILE: drivers/net/natsemi.c:1303:
+void set_bit_le(int offset, unsigned char * data)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#935: FILE: drivers/net/natsemi.c:1307:
+}
+#define HASH_TABLE	0x200

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#946: FILE: drivers/net/natsemi.c:1330:
+			set_bit_le(ether_crc_le(ETH_ALEN, mclist->dmi_addr) & 0x1ff,
 					mc_filter);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#959: FILE: drivers/net/natsemi.c:1342:
+}
+static void set_rx_mode(struct net_device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#962: FILE: drivers/net/natsemi.c:1345:
+	struct netdev_private *np = dev->priv;
+	spin_lock_irq(&np->lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#994: FILE: drivers/net/natsemi.c:1413:
+		printk(KERN_DEBUG "%s: Shutting down ethercard, status was %4.4x.",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#995: FILE: drivers/net/natsemi.c:1414:
+		printk(KERN_DEBUG "%s: Shutting down ethercard, status was %4.4x.",
+			   dev->name, (int)readl(ioaddr + ChipCmd));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1044: FILE: drivers/net/natsemi.c:1471:
+static void natsemi_suspend (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1046: FILE: drivers/net/natsemi.c:1473:
+	struct net_device *dev = pci_get_drvdata (pdev);

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#1054: FILE: drivers/net/natsemi.c:1481:
+	/* noone within ->open */
 	   ^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1055: FILE: drivers/net/natsemi.c:1482:
+	if (netif_running (dev)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1057: FILE: drivers/net/natsemi.c:1484:
+		int i;
+		del_timer_sync(&np->timer);

CHECK:CAMELCASE: Avoid CamelCase: <RxOff>
#1060: FILE: drivers/net/natsemi.c:1487:
+		writel(RxOff | TxOff, ioaddr + ChipCmd);

CHECK:CAMELCASE: Avoid CamelCase: <TxOff>
#1060: FILE: drivers/net/natsemi.c:1487:
+		writel(RxOff | TxOff, ioaddr + ChipCmd);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1061: FILE: drivers/net/natsemi.c:1488:
+		for(i=0;i< NATSEMI_HW_TIMEOUT;i++) {
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1061: FILE: drivers/net/natsemi.c:1488:
+		for(i=0;i< NATSEMI_HW_TIMEOUT;i++) {
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1061: FILE: drivers/net/natsemi.c:1488:
+		for(i=0;i< NATSEMI_HW_TIMEOUT;i++) {
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1061: FILE: drivers/net/natsemi.c:1488:
+		for(i=0;i< NATSEMI_HW_TIMEOUT;i++) {
 		                             ^

ERROR:SPACING: space required before the open parenthesis '('
#1061: FILE: drivers/net/natsemi.c:1488:
+		for(i=0;i< NATSEMI_HW_TIMEOUT;i++) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1062: FILE: drivers/net/natsemi.c:1489:
+			if ((readl(ioaddr + ChipCmd) & (TxOn|RxOn)) == 0)
 			                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1066: FILE: drivers/net/natsemi.c:1493:
+		if (i==NATSEMI_HW_TIMEOUT && debug) {
 		     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1067: FILE: drivers/net/natsemi.c:1494:
+			printk(KERN_INFO "%s: Tx/Rx process did not stop in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: drivers/net/natsemi.c:1495:
+			printk(KERN_INFO "%s: Tx/Rx process did not stop in %d usec.\n",
+					dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1068: FILE: drivers/net/natsemi.c:1495:
+					dev->name, i*5);
 					            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1070: FILE: drivers/net/natsemi.c:1497:
+			printk(KERN_DEBUG "%s: Tx/Rx process stopped in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/net/natsemi.c:1498:
+			printk(KERN_DEBUG "%s: Tx/Rx process stopped in %d usec.\n",
+					dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1071: FILE: drivers/net/natsemi.c:1498:
+					dev->name, i*5);
 					            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1089: FILE: drivers/net/natsemi.c:1516:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1090: FILE: drivers/net/natsemi.c:1517:
+static void natsemi_resume (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1092: FILE: drivers/net/natsemi.c:1519:
+	struct net_device *dev = pci_get_drvdata (pdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1095: FILE: drivers/net/natsemi.c:1522:
+	if (netif_running (dev)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: drivers/net/natsemi.c:1525:
+^I^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1103: FILE: drivers/net/natsemi.c:1530:
+		np->timer.expires = jiffies + 1*HZ;
 		                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1111: FILE: drivers/net/natsemi.c:1538:
+	suspend:	natsemi_suspend,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1111: FILE: drivers/net/natsemi.c:1538:
+	suspend:	natsemi_suspend,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1112: FILE: drivers/net/natsemi.c:1539:
+	resume:		natsemi_resume,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1112: FILE: drivers/net/natsemi.c:1539:
+	resume:		natsemi_resume,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 60 warnings, 79 checks, 1025 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
