WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
message address of the device's MSI/MSI-X capability structure to bypass the

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: arch/i386/Kconfig:1061:
+        This provides PCI MSI support. Enabling PCI MSI support requires $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: arch/i386/Kconfig:1062:
+        users to set this parameter. Once this is set, the PCI subsystem $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#104: FILE: arch/i386/Kconfig:1063:
indexing

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/Kconfig:1066:
+        If you don't know what MSI is or enabling MSI does not serve you $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: arch/i386/kernel/i386_ksyms.c:177:
+EXPORT_SYMBOL(msi_free_vectors);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#127: FILE: arch/i386/kernel/i386_ksyms.c:178:
+EXPORT_SYMBOL(remove_hotplug_vectors);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/i386/kernel/i8259.c:419:
+     for (i = 0; i < (NR_VECTORS - FIRST_EXTERNAL_VECTOR); i++) {$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#162: FILE: arch/i386/kernel/io_apic.c:120:
+int vector_irq[NR_IRQS] = { [0 ... NR_IRQS -1] = -1};
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: arch/i386/kernel/io_apic.c:122:
+static int platform_irq(int vector)       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/i386/kernel/io_apic.c:123:
+{    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/i386/kernel/io_apic.c:124:
+     if (platform_legacy_irq(vector))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#166: FILE: arch/i386/kernel/io_apic.c:124:
+     if (platform_legacy_irq(vector))
+           return vector;

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/i386/kernel/io_apic.c:125:
+           return vector;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/i386/kernel/io_apic.c:125:
+           return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/i386/kernel/io_apic.c:126:
+     else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#168: FILE: arch/i386/kernel/io_apic.c:126:
+     else
+           return vector_irq[vector];

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/i386/kernel/io_apic.c:127:
+           return vector_irq[vector];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/i386/kernel/io_apic.c:127:
+           return vector_irq[vector];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/i386/kernel/io_apic.c:131:
+#endif $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/i386/kernel/io_apic.c:137:
+     struct irq_pin_list *entry = irq_2_pin + platform_irq(irq);      \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: arch/i386/kernel/io_apic.c:364:
+                 /* Is this an active MSI? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: arch/i386/kernel/io_apic.c:365:
+                 if (msi_desc[j])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/i386/kernel/io_apic.c:365:
+                 if (msi_desc[j])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#190: FILE: arch/i386/kernel/io_apic.c:365:
+                 if (msi_desc[j])
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/i386/kernel/io_apic.c:366:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/i386/kernel/io_apic.c:366:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/io_apic.c:1079:
+     if (!platform_legacy_irq(irq)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#223: FILE: arch/i386/kernel/io_apic.c:1079:
+     if (!platform_legacy_irq(irq)) {
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/i386/kernel/io_apic.c:1080:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/io_apic.c:1080:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#224: FILE: arch/i386/kernel/io_apic.c:1080:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||
[...]
+                 irq_desc[vector].handler = &ioapic_level_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/i386/kernel/io_apic.c:1081:
+               trigger == IOAPIC_LEVEL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/io_apic.c:1081:
+               trigger == IOAPIC_LEVEL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/i386/kernel/io_apic.c:1082:
+                 irq_desc[vector].handler = &ioapic_level_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/i386/kernel/io_apic.c:1082:
+                 irq_desc[vector].handler = &ioapic_level_irq_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/i386/kernel/io_apic.c:1083:
+           else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/i386/kernel/io_apic.c:1083:
+           else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#227: FILE: arch/i386/kernel/io_apic.c:1083:
+           else
+                 irq_desc[vector].handler = &ioapic_edge_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/i386/kernel/io_apic.c:1084:
+                 irq_desc[vector].handler = &ioapic_edge_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/i386/kernel/io_apic.c:1084:
+                 irq_desc[vector].handler = &ioapic_edge_irq_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/i386/kernel/io_apic.c:1085:
+           set_intr_gate(vector, interrupt[vector]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/i386/kernel/io_apic.c:1085:
+           set_intr_gate(vector, interrupt[vector]);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: arch/i386/kernel/io_apic.c:1086:
+     } else $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/i386/kernel/io_apic.c:1086:
+     } else $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 5)
#230: FILE: arch/i386/kernel/io_apic.c:1086:
+     } else 
[...]
+     {

CHECK:BRACES: Unbalanced braces around else statement
#230: FILE: arch/i386/kernel/io_apic.c:1086:
+     } else 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/i386/kernel/io_apic.c:1088:
+     {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/i386/kernel/io_apic.c:1089:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/i386/kernel/io_apic.c:1089:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#233: FILE: arch/i386/kernel/io_apic.c:1089:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||
[...]
+                 irq_desc[irq].handler = &ioapic_level_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/i386/kernel/io_apic.c:1090:
+                 trigger == IOAPIC_LEVEL)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: arch/i386/kernel/io_apic.c:1090:
+           if ((trigger == IOAPIC_AUTO && IO_APIC_irq_trigger(irq)) ||
+                 trigger == IOAPIC_LEVEL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/kernel/io_apic.c:1090:
+                 trigger == IOAPIC_LEVEL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/i386/kernel/io_apic.c:1091:
+                 irq_desc[irq].handler = &ioapic_level_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/kernel/io_apic.c:1091:
+                 irq_desc[irq].handler = &ioapic_level_irq_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/i386/kernel/io_apic.c:1092:
+           else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/i386/kernel/io_apic.c:1092:
+           else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#236: FILE: arch/i386/kernel/io_apic.c:1092:
+           else
+                 irq_desc[irq].handler = &ioapic_edge_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/i386/kernel/io_apic.c:1093:
+                 irq_desc[irq].handler = &ioapic_edge_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/i386/kernel/io_apic.c:1093:
+                 irq_desc[irq].handler = &ioapic_edge_irq_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/i386/kernel/io_apic.c:1094:
+           set_intr_gate(vector, interrupt[irq]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/i386/kernel/io_apic.c:1094:
+           set_intr_gate(vector, interrupt[irq]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/i386/kernel/io_apic.c:1095:
+     }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/i386/kernel/io_apic.c:1153:
+                 ioapic_register_intr(irq, vector, IOAPIC_AUTO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/i386/kernel/io_apic.c:1153:
+                 ioapic_register_intr(irq, vector, IOAPIC_AUTO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/i386/kernel/io_apic.c:1758:
+     if (!platform_legacy_irq(irq))         /* it's already the vector */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#265: FILE: arch/i386/kernel/io_apic.c:1758:
+     if (!platform_legacy_irq(irq))         /* it's already the vector */
+           i = IO_APIC_VECTOR(vector_irq[irq]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/i386/kernel/io_apic.c:1759:
+           i = IO_APIC_VECTOR(vector_irq[irq]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/i386/kernel/io_apic.c:1759:
+           i = IO_APIC_VECTOR(vector_irq[irq]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/i386/kernel/io_apic.c:1760:
+     else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 5)
#267: FILE: arch/i386/kernel/io_apic.c:1760:
+     else
[...]
      i = IO_APIC_VECTOR(irq);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#277: FILE: arch/i386/kernel/io_apic.c:1846:
      for (irq = 0; irq < NR_IRQS ; irq++) {
[...]
+           int tmp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/i386/kernel/io_apic.c:1848:
+           int tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/i386/kernel/io_apic.c:1848:
+           int tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/i386/kernel/io_apic.c:1849:
+           tmp = platform_irq(irq);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: arch/i386/kernel/io_apic.c:1849:
+           int tmp;
+           tmp = platform_irq(irq);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/i386/kernel/io_apic.c:1849:
+           tmp = platform_irq(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/i386/kernel/io_apic.c:1850:
+           if (tmp == -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/i386/kernel/io_apic.c:1850:
+           if (tmp == -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#281: FILE: arch/i386/kernel/io_apic.c:1850:
+           if (tmp == -1)
+                 continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: arch/i386/kernel/io_apic.c:1851:
+                 continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/i386/kernel/io_apic.c:1851:
+                 continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: arch/i386/kernel/io_apic.c:1852:
+           if (IO_APIC_IRQ(tmp) && !IO_APIC_VECTOR(tmp)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/i386/kernel/io_apic.c:1852:
+           if (IO_APIC_IRQ(tmp) && !IO_APIC_VECTOR(tmp)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/i386/kernel/io_apic.c:2136:
+      spin_lock(&irq_desc[irq].lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/i386/kernel/io_apic.c:2137:
+     if (IO_APIC_irq_trigger(irq))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#297: FILE: arch/i386/kernel/io_apic.c:2137:
+     if (IO_APIC_irq_trigger(irq))
+           irq_desc[irq].handler = &ioapic_level_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: arch/i386/kernel/io_apic.c:2138:
+           irq_desc[irq].handler = &ioapic_level_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/i386/kernel/io_apic.c:2138:
+           irq_desc[irq].handler = &ioapic_level_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/i386/kernel/io_apic.c:2139:
+     else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#299: FILE: arch/i386/kernel/io_apic.c:2139:
+     else
+           irq_desc[irq].handler = &ioapic_edge_irq_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/i386/kernel/io_apic.c:2140:
+           irq_desc[irq].handler = &ioapic_edge_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/i386/kernel/io_apic.c:2140:
+           irq_desc[irq].handler = &ioapic_edge_irq_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/i386/kernel/io_apic.c:2141:
+      spin_unlock(&irq_desc[irq].lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/i386/kernel/io_apic.c:2296:
+      ioapic_register_intr(irq, entry.vector, IOAPIC_LEVEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/i386/kernel/mpparse.c:1103:
+                 if (!platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/i386/kernel/mpparse.c:1103:
+                 if (!platform_legacy_irq(irq))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#343: FILE: arch/i386/kernel/mpparse.c:1103:
+                 if (!platform_legacy_irq(irq))
+                       entry->irq = IO_APIC_VECTOR(irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/i386/kernel/mpparse.c:1104:
+                       entry->irq = IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/i386/kernel/mpparse.c:1104:
+                       entry->irq = IO_APIC_VECTOR(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/i386/kernel/mpparse.c:1105:
+                 else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/i386/kernel/mpparse.c:1105:
+                 else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 17)
#345: FILE: arch/i386/kernel/mpparse.c:1105:
+                 else
[...]
                  entry->irq = irq;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#353: FILE: arch/i386/kernel/mpparse.c:1113:
            if (!io_apic_set_pci_routing(ioapic, ioapic_pin, irq))
[...]
+                 if (!platform_legacy_irq(irq))

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/i386/kernel/mpparse.c:1115:
+                 if (!platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/i386/kernel/mpparse.c:1115:
+                 if (!platform_legacy_irq(irq))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#355: FILE: arch/i386/kernel/mpparse.c:1115:
+                 if (!platform_legacy_irq(irq))
+                       entry->irq = IO_APIC_VECTOR(irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/i386/kernel/mpparse.c:1116:
+                       entry->irq = IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/i386/kernel/mpparse.c:1116:
+                       entry->irq = IO_APIC_VECTOR(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/i386/kernel/mpparse.c:1117:
+                 else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/i386/kernel/mpparse.c:1117:
+                 else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 17)
#357: FILE: arch/i386/kernel/mpparse.c:1117:
+                 else
[...]
                  entry->irq = irq;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#369: FILE: arch/i386/kernel/pci_msi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#370: FILE: arch/i386/kernel/pci_msi.c:2:
+ * linux/arch/i386/kernel/pci_msi.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: arch/i386/kernel/pci_msi.c:6:
+#include <linux/irq.h>           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: arch/i386/kernel/pci_msi.c:8:
+#include <linux/init.h>          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/i386/kernel/pci_msi.c:9:
+#include <linux/config.h>        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: arch/i386/kernel/pci_msi.c:10:
+#include <linux/ioport.h>       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: arch/i386/kernel/pci_msi.c:17:
+#include <asm/io.h>        $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#385: FILE: arch/i386/kernel/pci_msi.c:17:
+#include <asm/io.h>        

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#386: FILE: arch/i386/kernel/pci_msi.c:18:
+#include <asm/smp.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/i386/kernel/pci_msi.c:19:
+#include <asm/desc.h>            $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#395: FILE: arch/i386/kernel/pci_msi.c:27:
+struct msi_desc_t* msi_desc[NR_IRQS] = { [0 ... NR_IRQS-1] = NULL };

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#395: FILE: arch/i386/kernel/pci_msi.c:27:
+struct msi_desc_t* msi_desc[NR_IRQS] = { [0 ... NR_IRQS-1] = NULL };
                                                        ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#398: FILE: arch/i386/kernel/pci_msi.c:30:
+static int nr_alloc_vectors = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#399: FILE: arch/i386/kernel/pci_msi.c:31:
+static int nr_released_vectors = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/i386/kernel/pci_msi.c:35:
+      pci_msi_enable = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: arch/i386/kernel/pci_msi.c:36:
+     return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#406: FILE: arch/i386/kernel/pci_msi.c:38:
+__setup("pci_nomsi", pci_msi_clear);

WARNING:TYPO_SPELLING: 'temperary' may be misspelled - perhaps 'temporary'?
#412: FILE: arch/i386/kernel/pci_msi.c:44:
+ * description: provide a temperary workaround for a PCI/PCI-X/PCI Express 
                           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/i386/kernel/pci_msi.c:44:
+ * description: provide a temperary workaround for a PCI/PCI-X/PCI Express $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: arch/i386/kernel/pci_msi.c:46:
+ * It would be a good idea not to force MSI at device level, unless $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: arch/i386/kernel/pci_msi.c:47:
+ * system-wide boot parameter CONFIG_MSI_USE_VECTOR is disabled. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/i386/kernel/pci_msi.c:55:
+     int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: arch/i386/kernel/pci_msi.c:56:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/i386/kernel/pci_msi.c:56:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/i386/kernel/pci_msi.c:57:
+     str =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/i386/kernel/pci_msi.c:58:
+     if (!device_nomsi_list[0])  /* first item contains number of entries$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 0)
#428: FILE: arch/i386/kernel/pci_msi.c:58:
+     if (!device_nomsi_list[0])  /* first item contains number of entries
*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: arch/i386/kernel/pci_msi.c:59:
+           return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#430: FILE: arch/i386/kernel/pci_msi.c:59:
+     if (!device_nomsi_list[0])  /* first item contains number of entries
+           return 0;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: arch/i386/kernel/pci_msi.c:61:
+     for (i = 1;i < device_nomsi_list[0]; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: arch/i386/kernel/pci_msi.c:62:
+           printk(KERN_INFO "User requests no MSI for dev (D%04x-V%04x)\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/i386/kernel/pci_msi.c:63:
+           (device_nomsi_list[i] >> 16), device_nomsi_list[i] & 0xffff);$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#438: FILE: arch/i386/kernel/pci_msi.c:67:
+__setup("device_nomsi=", create_device_nomsi_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: arch/i386/kernel/pci_msi.c:71:
+     int         i, enabling_msi = 1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: arch/i386/kernel/pci_msi.c:75:
+           return (enabling_msi);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#447: FILE: arch/i386/kernel/pci_msi.c:75:
+     if (!device_nomsi_list[0]) /* number of drivers requested for no MSI
+           return (enabling_msi);

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: arch/i386/kernel/pci_msi.c:80:
+           if (device_nomsi_list[i] == did_vid) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: arch/i386/kernel/pci_msi.c:81:
+                 enabling_msi = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: arch/i386/kernel/pci_msi.c:81:
+                 enabling_msi = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: arch/i386/kernel/pci_msi.c:82:
+                 break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: arch/i386/kernel/pci_msi.c:83:
+           }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: arch/i386/kernel/pci_msi.c:92:
+     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/i386/kernel/pci_msi.c:95:
+           return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/i386/kernel/pci_msi.c:99:
+           int         pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: arch/i386/kernel/pci_msi.c:100:
+           unsigned int      mask_bits;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: arch/i386/kernel/pci_msi.c:101:
+           pos = *(int *)entry->mask_entry_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: arch/i386/kernel/pci_msi.c:102:
+             entry->dev->bus->ops->read(entry->dev->bus, entry->dev->devfn,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/i386/kernel/pci_msi.c:104:
+                       pos, 4, &mask_bits);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: arch/i386/kernel/pci_msi.c:105:
+           mask_bits &= ~(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: arch/i386/kernel/pci_msi.c:106:
+           mask_bits |= flag;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: arch/i386/kernel/pci_msi.c:107:
+             entry->dev->bus->ops->write(entry->dev->bus,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/i386/kernel/pci_msi.c:108:
+                       pos, 4, mask_bits);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/i386/kernel/pci_msi.c:109:
+           break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: arch/i386/kernel/pci_msi.c:113:
+           int dw_off = entry->msi_attrib.entry_nr*PCI_MSIX_ENTRY_SIZE - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: arch/i386/kernel/pci_msi.c:114:
+           *(u32*)(entry->mask_entry_addr + dw_off) = flag;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: arch/i386/kernel/pci_msi.c:115:
+           break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: arch/i386/kernel/pci_msi.c:118:
+           break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: arch/i386/kernel/pci_msi.c:119:
+     } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: arch/i386/kernel/pci_msi.c:132:
+static unsigned int startup_msi_irq_wo_maskbit(unsigned int irq) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#509: FILE: arch/i386/kernel/pci_msi.c:136:
+}
+static void shutdown_msi_irq_wo_maskbit(unsigned int irq) {}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: arch/i386/kernel/pci_msi.c:140:
+static void end_msi_irq_wo_maskbit(unsigned int irq) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: arch/i386/kernel/pci_msi.c:142:
+      ack_APIC_irq();   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/i386/kernel/pci_msi.c:142:
+      ack_APIC_irq();   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: arch/i386/kernel/pci_msi.c:146:
+{ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/i386/kernel/pci_msi.c:147:
+      unmask_MSI_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/i386/kernel/pci_msi.c:148:
+     return 0;    /* never anything pending */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: arch/i386/kernel/pci_msi.c:155:
+static void end_msi_irq_w_maskbit(unsigned int irq) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: arch/i386/kernel/pci_msi.c:157:
+      unmask_MSI_irq(irq);    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/i386/kernel/pci_msi.c:157:
+      unmask_MSI_irq(irq);    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/i386/kernel/pci_msi.c:158:
+      ack_APIC_irq();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/i386/kernel/pci_msi.c:162:
+     "PCI MSI",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/i386/kernel/pci_msi.c:163:
+      startup_msi_irq_w_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/i386/kernel/pci_msi.c:164:
+      shutdown_msi_irq_w_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/i386/kernel/pci_msi.c:165:
+      enable_msi_irq_w_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/i386/kernel/pci_msi.c:166:
+      disable_msi_irq_w_maskbit,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: arch/i386/kernel/pci_msi.c:167:
+      act_msi_irq_w_maskbit,        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/i386/kernel/pci_msi.c:167:
+      act_msi_irq_w_maskbit,        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: arch/i386/kernel/pci_msi.c:168:
+      end_msi_irq_w_maskbit,  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: arch/i386/kernel/pci_msi.c:168:
+      end_msi_irq_w_maskbit,  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: arch/i386/kernel/pci_msi.c:169:
+     NULL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: arch/i386/kernel/pci_msi.c:173:
+     "PCI MSI",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/i386/kernel/pci_msi.c:174:
+      startup_msi_irq_wo_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: arch/i386/kernel/pci_msi.c:175:
+      shutdown_msi_irq_wo_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/i386/kernel/pci_msi.c:176:
+      enable_msi_irq_wo_maskbit,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/i386/kernel/pci_msi.c:177:
+      disable_msi_irq_wo_maskbit,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: arch/i386/kernel/pci_msi.c:178:
+      act_msi_irq_wo_maskbit,       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/i386/kernel/pci_msi.c:178:
+      act_msi_irq_wo_maskbit,       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: arch/i386/kernel/pci_msi.c:179:
+      end_msi_irq_wo_maskbit, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: arch/i386/kernel/pci_msi.c:179:
+      end_msi_irq_wo_maskbit, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/i386/kernel/pci_msi.c:180:
+     NULL$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: arch/i386/kernel/pci_msi.c:183:
+static void msi_data_init(struct msg_data *msi_data, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/i386/kernel/pci_msi.c:184:
+                   unsigned int vector)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: arch/i386/kernel/pci_msi.c:184:
+static void msi_data_init(struct msg_data *msi_data, 
+                   unsigned int vector)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/i386/kernel/pci_msi.c:184:
+                   unsigned int vector)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/i386/kernel/pci_msi.c:186:
+      memset(msi_data, 0, sizeof(struct msg_data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/i386/kernel/pci_msi.c:187:
+      msi_data->vector = (u8)vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/i386/kernel/pci_msi.c:188:
+      msi_data->delivery_mode = INT_DELIVERY_MODE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: arch/i386/kernel/pci_msi.c:189:
+      msi_data->dest_mode = INT_DEST_MODE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: arch/i386/kernel/pci_msi.c:190:
+      msi_data->trigger = 0;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/i386/kernel/pci_msi.c:190:
+      msi_data->trigger = 0;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: arch/i386/kernel/pci_msi.c:191:
+      msi_data->delivery_status = 0;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/i386/kernel/pci_msi.c:191:
+      msi_data->delivery_status = 0;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/i386/kernel/pci_msi.c:196:
+      memset(msi_address, 0, sizeof(struct msg_address));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/i386/kernel/pci_msi.c:197:
+      msi_address->hi_address = (u32)0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/i386/kernel/pci_msi.c:198:
+      msi_address->lo_address.value = (u32)mp_lapic_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: arch/i386/kernel/pci_msi.c:199:
+      msi_address->lo_address.u.dest_mode = INT_DEST_MODE;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: arch/i386/kernel/pci_msi.c:200:
+      msi_address->lo_address.u.redirection_hint = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/i386/kernel/pci_msi.c:200:
+      msi_address->lo_address.u.redirection_hint = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/i386/kernel/pci_msi.c:201:
+      msi_address->lo_address.u.ext_dest_id = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/i386/kernel/pci_msi.c:202:
+      msi_address->lo_address.u.dest_id = TARGET_CPUS;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: arch/i386/kernel/pci_msi.c:205:
+static int pci_vector_resources(void)                            $

CHECK:SPACING: No space is necessary after a cast
#578: FILE: arch/i386/kernel/pci_msi.c:205:
+static int pci_vector_resources(void)                            

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: arch/i386/kernel/pci_msi.c:206:
+{    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: arch/i386/kernel/pci_msi.c:207:
+     static int res = -EINVAL;     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/i386/kernel/pci_msi.c:207:
+     static int res = -EINVAL;     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: arch/i386/kernel/pci_msi.c:208:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/i386/kernel/pci_msi.c:208:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/i386/kernel/pci_msi.c:209:
+     if (res == -EINVAL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#582: FILE: arch/i386/kernel/pci_msi.c:209:
+     if (res == -EINVAL) {
+           int i, repeat;

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: arch/i386/kernel/pci_msi.c:210:
+           int i, repeat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: arch/i386/kernel/pci_msi.c:210:
+           int i, repeat;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: arch/i386/kernel/pci_msi.c:211:
+           for (i = NR_REPEATS; i > 0; i--) {                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: arch/i386/kernel/pci_msi.c:211:
+           for (i = NR_REPEATS; i > 0; i--) {                       $

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: arch/i386/kernel/pci_msi.c:211:
+           int i, repeat;
+           for (i = NR_REPEATS; i > 0; i--) {                       

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: arch/i386/kernel/pci_msi.c:211:
+           for (i = NR_REPEATS; i > 0; i--) {                       $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#584: FILE: arch/i386/kernel/pci_msi.c:211:
+           for (i = NR_REPEATS; i > 0; i--) {                       
+                 if ((FIRST_DEVICE_VECTOR + i*8) > FIRST_SYSTEM_VECTOR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: arch/i386/kernel/pci_msi.c:212:
+                 if ((FIRST_DEVICE_VECTOR + i*8) > FIRST_SYSTEM_VECTOR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: arch/i386/kernel/pci_msi.c:212:
+                 if ((FIRST_DEVICE_VECTOR + i*8) > FIRST_SYSTEM_VECTOR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#585: FILE: arch/i386/kernel/pci_msi.c:212:
+                 if ((FIRST_DEVICE_VECTOR + i*8) > FIRST_SYSTEM_VECTOR)
+                       continue;                           

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#585: FILE: arch/i386/kernel/pci_msi.c:212:
+                 if ((FIRST_DEVICE_VECTOR + i*8) > FIRST_SYSTEM_VECTOR)
                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: arch/i386/kernel/pci_msi.c:213:
+                       continue;                           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: arch/i386/kernel/pci_msi.c:213:
+                       continue;                           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/i386/kernel/pci_msi.c:213:
+                       continue;                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: arch/i386/kernel/pci_msi.c:214:
+                 break;                                           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: arch/i386/kernel/pci_msi.c:214:
+                 break;                                           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: arch/i386/kernel/pci_msi.c:214:
+                 break;                                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: arch/i386/kernel/pci_msi.c:215:
+           }                                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: arch/i386/kernel/pci_msi.c:215:
+           }                                               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: arch/i386/kernel/pci_msi.c:215:
+           }                                               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: arch/i386/kernel/pci_msi.c:216:
+           i++;                                           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: arch/i386/kernel/pci_msi.c:216:
+           i++;                                           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/i386/kernel/pci_msi.c:216:
+           i++;                                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/i386/kernel/pci_msi.c:217:
+           repeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i;       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: arch/i386/kernel/pci_msi.c:217:
+           repeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/i386/kernel/pci_msi.c:217:
+           repeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i;       $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#590: FILE: arch/i386/kernel/pci_msi.c:217:
+           repeat = (FIRST_SYSTEM_VECTOR - FIRST_DEVICE_VECTOR)/i;       
                                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: arch/i386/kernel/pci_msi.c:218:
+           res = i*repeat - NR_RESERVED_VECTORS; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/i386/kernel/pci_msi.c:218:
+           res = i*repeat - NR_RESERVED_VECTORS; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/i386/kernel/pci_msi.c:218:
+           res = i*repeat - NR_RESERVED_VECTORS; $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#591: FILE: arch/i386/kernel/pci_msi.c:218:
+           res = i*repeat - NR_RESERVED_VECTORS; 
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/i386/kernel/pci_msi.c:219:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: arch/i386/kernel/pci_msi.c:221:
+     return (res + nr_released_vectors - nr_alloc_vectors);      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/i386/kernel/pci_msi.c:221:
+     return (res + nr_released_vectors - nr_alloc_vectors);      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/i386/kernel/pci_msi.c:226:
+     static int current_vector = FIRST_DEVICE_VECTOR, offset = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#599: FILE: arch/i386/kernel/pci_msi.c:226:
+     static int current_vector = FIRST_DEVICE_VECTOR, offset = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: arch/i386/kernel/pci_msi.c:227:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/i386/kernel/pci_msi.c:227:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/i386/kernel/pci_msi.c:228:
+     if (irq != MSI_AUTO && IO_APIC_VECTOR(irq) > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#601: FILE: arch/i386/kernel/pci_msi.c:228:
+     if (irq != MSI_AUTO && IO_APIC_VECTOR(irq) > 0)
+           return IO_APIC_VECTOR(irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: arch/i386/kernel/pci_msi.c:229:
+           return IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/i386/kernel/pci_msi.c:229:
+           return IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/i386/kernel/pci_msi.c:231:
+      current_vector += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/i386/kernel/pci_msi.c:232:
+     if (current_vector == SYSCALL_VECTOR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#605: FILE: arch/i386/kernel/pci_msi.c:232:
+     if (current_vector == SYSCALL_VECTOR)
+           goto next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: arch/i386/kernel/pci_msi.c:233:
+           goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: arch/i386/kernel/pci_msi.c:233:
+           goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/i386/kernel/pci_msi.c:235:
+     if (current_vector > FIRST_SYSTEM_VECTOR) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#608: FILE: arch/i386/kernel/pci_msi.c:235:
+     if (current_vector > FIRST_SYSTEM_VECTOR) {
+           offset++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: arch/i386/kernel/pci_msi.c:236:
+           offset++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/i386/kernel/pci_msi.c:236:
+           offset++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: arch/i386/kernel/pci_msi.c:237:
+           current_vector = FIRST_DEVICE_VECTOR + offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/i386/kernel/pci_msi.c:237:
+           current_vector = FIRST_DEVICE_VECTOR + offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/i386/kernel/pci_msi.c:238:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: arch/i386/kernel/pci_msi.c:240:
+     if (current_vector == FIRST_SYSTEM_VECTOR) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/i386/kernel/pci_msi.c:240:
+     if (current_vector == FIRST_SYSTEM_VECTOR) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#613: FILE: arch/i386/kernel/pci_msi.c:240:
+     if (current_vector == FIRST_SYSTEM_VECTOR) 
+           panic("ran out of interrupt sources!");

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: arch/i386/kernel/pci_msi.c:241:
+           panic("ran out of interrupt sources!");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/i386/kernel/pci_msi.c:241:
+           panic("ran out of interrupt sources!");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: arch/i386/kernel/pci_msi.c:242:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/i386/kernel/pci_msi.c:242:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/i386/kernel/pci_msi.c:243:
+      vector_irq[current_vector] = irq;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: arch/i386/kernel/pci_msi.c:244:
+     if (irq != MSI_AUTO)   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: arch/i386/kernel/pci_msi.c:244:
+     if (irq != MSI_AUTO)   $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#617: FILE: arch/i386/kernel/pci_msi.c:244:
+     if (irq != MSI_AUTO)   
+           IO_APIC_VECTOR(irq) = current_vector;

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: arch/i386/kernel/pci_msi.c:245:
+           IO_APIC_VECTOR(irq) = current_vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: arch/i386/kernel/pci_msi.c:245:
+           IO_APIC_VECTOR(irq) = current_vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: arch/i386/kernel/pci_msi.c:247:
+      nr_alloc_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/i386/kernel/pci_msi.c:249:
+     return current_vector;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: arch/i386/kernel/pci_msi.c:254:
+     static int new_vector_avail = 1;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/i386/kernel/pci_msi.c:254:
+     static int new_vector_avail = 1;   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/i386/kernel/pci_msi.c:255:
+     int vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/i386/kernel/pci_msi.c:256:
+      unsigned int flags;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: arch/i386/kernel/pci_msi.c:257:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/i386/kernel/pci_msi.c:257:
+     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: arch/i386/kernel/pci_msi.c:258:
+     /* $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#632: FILE: arch/i386/kernel/pci_msi.c:259:
+     /* 
+     * msi_lock is provided to ensure that successful allocation of MSI

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/i386/kernel/pci_msi.c:262:
+      spin_lock_irqsave(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: arch/i386/kernel/pci_msi.c:263:
+     if (!(pci_vector_resources() > 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#636: FILE: arch/i386/kernel/pci_msi.c:263:
+     if (!(pci_vector_resources() > 0)) {
+           spin_unlock_irqrestore(&msi_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: arch/i386/kernel/pci_msi.c:264:
+           spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/i386/kernel/pci_msi.c:264:
+           spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: arch/i386/kernel/pci_msi.c:265:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/i386/kernel/pci_msi.c:265:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/i386/kernel/pci_msi.c:266:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/i386/kernel/pci_msi.c:268:
+     if (!new_vector_avail) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#641: FILE: arch/i386/kernel/pci_msi.c:268:
+     if (!new_vector_avail) {
[...]
+           for (vector = 0; vector < NR_IRQS; vector++) { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: arch/i386/kernel/pci_msi.c:269:
+           /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: arch/i386/kernel/pci_msi.c:270:
+           * vector_irq[] = -1 indicates that this specific vector is:$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#643: FILE: arch/i386/kernel/pci_msi.c:270:
+           /*
+           * vector_irq[] = -1 indicates that this specific vector is:

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: arch/i386/kernel/pci_msi.c:271:
+           * - assigned for MSI (since MSI have no associated IRQ) or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: arch/i386/kernel/pci_msi.c:272:
+           * - assigned for legacy if less than 16, or$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: arch/i386/kernel/pci_msi.c:273:
+           * - having no corresponding 1:1 vector-to-IOxAPIC IRQ mapping$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/i386/kernel/pci_msi.c:274:
+           * vector_irq[] = 0 indicates that this vector, previously $

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: arch/i386/kernel/pci_msi.c:274:
+           * vector_irq[] = 0 indicates that this vector, previously $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: arch/i386/kernel/pci_msi.c:275:
+           * assigned for MSI, is freed by hotplug removed operations. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: arch/i386/kernel/pci_msi.c:275:
+           * assigned for MSI, is freed by hotplug removed operations. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: arch/i386/kernel/pci_msi.c:276:
+           * This vector will be reused for any subsequent hotplug added $

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: arch/i386/kernel/pci_msi.c:276:
+           * This vector will be reused for any subsequent hotplug added $

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: arch/i386/kernel/pci_msi.c:277:
+           * operations.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: arch/i386/kernel/pci_msi.c:278:
+           * vector_irq[] > 0 indicates that this vector is assigned for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: arch/i386/kernel/pci_msi.c:278:
+           * vector_irq[] > 0 indicates that this vector is assigned for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: arch/i386/kernel/pci_msi.c:279:
+           * IOxAPIC IRQs. This vector and its value provides a 1-to-1 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: arch/i386/kernel/pci_msi.c:279:
+           * IOxAPIC IRQs. This vector and its value provides a 1-to-1 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: arch/i386/kernel/pci_msi.c:280:
+           * vector-to-IOxAPIC IRQ mapping.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: arch/i386/kernel/pci_msi.c:281:
+           */   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#654: FILE: arch/i386/kernel/pci_msi.c:281:
+           */   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: arch/i386/kernel/pci_msi.c:282:
+           for (vector = 0; vector < NR_IRQS; vector++) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: arch/i386/kernel/pci_msi.c:282:
+           for (vector = 0; vector < NR_IRQS; vector++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: arch/i386/kernel/pci_msi.c:282:
+           for (vector = 0; vector < NR_IRQS; vector++) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#655: FILE: arch/i386/kernel/pci_msi.c:282:
+           for (vector = 0; vector < NR_IRQS; vector++) { 
+                 if (vector_irq[vector] != 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: arch/i386/kernel/pci_msi.c:283:
+                 if (vector_irq[vector] != 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: arch/i386/kernel/pci_msi.c:283:
+                 if (vector_irq[vector] != 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: arch/i386/kernel/pci_msi.c:283:
+                 if (vector_irq[vector] != 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#656: FILE: arch/i386/kernel/pci_msi.c:283:
+                 if (vector_irq[vector] != 0) 
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: arch/i386/kernel/pci_msi.c:284:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: arch/i386/kernel/pci_msi.c:284:
+                       continue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: arch/i386/kernel/pci_msi.c:285:
+                 vector_irq[vector] = -1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: arch/i386/kernel/pci_msi.c:285:
+                 vector_irq[vector] = -1; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/i386/kernel/pci_msi.c:285:
+                 vector_irq[vector] = -1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: arch/i386/kernel/pci_msi.c:286:
+                 nr_released_vectors--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: arch/i386/kernel/pci_msi.c:286:
+                 nr_released_vectors--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: arch/i386/kernel/pci_msi.c:287:
+                 spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: arch/i386/kernel/pci_msi.c:287:
+                 spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: arch/i386/kernel/pci_msi.c:288:
+                 return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: arch/i386/kernel/pci_msi.c:288:
+                 return vector;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: arch/i386/kernel/pci_msi.c:289:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: arch/i386/kernel/pci_msi.c:289:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: arch/i386/kernel/pci_msi.c:290:
+           spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: arch/i386/kernel/pci_msi.c:290:
+           spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: arch/i386/kernel/pci_msi.c:291:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: arch/i386/kernel/pci_msi.c:291:
+           return -EBUSY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: arch/i386/kernel/pci_msi.c:292:
+     }     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: arch/i386/kernel/pci_msi.c:292:
+     }     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: arch/i386/kernel/pci_msi.c:294:
+     vector = assign_irq_vector(MSI_AUTO);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: arch/i386/kernel/pci_msi.c:295:
+     if (vector  == (FIRST_SYSTEM_VECTOR - 8))  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: arch/i386/kernel/pci_msi.c:295:
+     if (vector  == (FIRST_SYSTEM_VECTOR - 8))  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#668: FILE: arch/i386/kernel/pci_msi.c:295:
+     if (vector  == (FIRST_SYSTEM_VECTOR - 8))  
+           new_vector_avail = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: arch/i386/kernel/pci_msi.c:296:
+           new_vector_avail = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: arch/i386/kernel/pci_msi.c:296:
+           new_vector_avail = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: arch/i386/kernel/pci_msi.c:298:
+      spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/i386/kernel/pci_msi.c:299:
+     return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: arch/i386/kernel/pci_msi.c:304:
+     int vector;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: arch/i386/kernel/pci_msi.c:305:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: arch/i386/kernel/pci_msi.c:305:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: arch/i386/kernel/pci_msi.c:306:
+     if ((vector = assign_msi_vector()) > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#679: FILE: arch/i386/kernel/pci_msi.c:306:
+     if ((vector = assign_msi_vector()) > 0)
+           set_intr_gate(vector, interrupt[vector]);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#679: FILE: arch/i386/kernel/pci_msi.c:306:
+     if ((vector = assign_msi_vector()) > 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: arch/i386/kernel/pci_msi.c:307:
+           set_intr_gate(vector, interrupt[vector]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/i386/kernel/pci_msi.c:307:
+           set_intr_gate(vector, interrupt[vector]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: arch/i386/kernel/pci_msi.c:309:
+     return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: arch/i386/kernel/pci_msi.c:315:
+     struct list_head *node = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: arch/i386/kernel/pci_msi.c:316:
+     struct acpi_prt_entry *entry = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/i386/kernel/pci_msi.c:317:
+     u32 pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: arch/i386/kernel/pci_msi.c:318:
+     int shares = 0, vector = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/i386/kernel/pci_msi.c:319:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/i386/kernel/pci_msi.c:319:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: arch/i386/kernel/pci_msi.c:320:
+     dev->bus->ops->read(dev->bus, dev->devfn, PCI_INTERRUPT_PIN, 1, &pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: arch/i386/kernel/pci_msi.c:321:
+     pin--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/i386/kernel/pci_msi.c:322:
+     vector = acpi_pci_irq_lookup(0, dev->bus->number,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: arch/i386/kernel/pci_msi.c:323:
+           pin);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: arch/i386/kernel/pci_msi.c:323:
+     vector = acpi_pci_irq_lookup(0, dev->bus->number,
+           pin);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: arch/i386/kernel/pci_msi.c:323:
+           pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: arch/i386/kernel/pci_msi.c:324:
+     if (vector_irq[vector] == -1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#698: FILE: arch/i386/kernel/pci_msi.c:324:
+     if (vector_irq[vector] == -1)
+           return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: arch/i386/kernel/pci_msi.c:325:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/i386/kernel/pci_msi.c:325:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: arch/i386/kernel/pci_msi.c:327:
+      list_for_each(node, &acpi_prt.entries) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: arch/i386/kernel/pci_msi.c:328:
+           entry = list_entry(node, struct acpi_prt_entry, node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: arch/i386/kernel/pci_msi.c:328:
+           entry = list_entry(node, struct acpi_prt_entry, node);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: arch/i386/kernel/pci_msi.c:329:
+           if (entry->link.handle)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: arch/i386/kernel/pci_msi.c:329:
+           if (entry->link.handle)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#703: FILE: arch/i386/kernel/pci_msi.c:329:
+           if (entry->link.handle)
+                 continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: arch/i386/kernel/pci_msi.c:330:
+                 continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: arch/i386/kernel/pci_msi.c:330:
+                 continue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: arch/i386/kernel/pci_msi.c:331:
+           if (entry->id.segment == 0 && entry->irq == vector) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: arch/i386/kernel/pci_msi.c:331:
+           if (entry->id.segment == 0 && entry->irq == vector) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: arch/i386/kernel/pci_msi.c:331:
+           if (entry->id.segment == 0 && entry->irq == vector) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#705: FILE: arch/i386/kernel/pci_msi.c:331:
+           if (entry->id.segment == 0 && entry->irq == vector) 
+                 shares++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: arch/i386/kernel/pci_msi.c:332:
+                 shares++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: arch/i386/kernel/pci_msi.c:332:
+                 shares++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: arch/i386/kernel/pci_msi.c:333:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: arch/i386/kernel/pci_msi.c:334:
+     if (shares != 1) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: arch/i386/kernel/pci_msi.c:334:
+     if (shares != 1) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#708: FILE: arch/i386/kernel/pci_msi.c:334:
+     if (shares != 1) 
+           return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: arch/i386/kernel/pci_msi.c:335:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: arch/i386/kernel/pci_msi.c:335:
+           return -EBUSY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: arch/i386/kernel/pci_msi.c:336:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: arch/i386/kernel/pci_msi.c:336:
+     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: arch/i386/kernel/pci_msi.c:337:
+     return vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: arch/i386/kernel/pci_msi.c:337:
+     return vector; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#713: FILE: arch/i386/kernel/pci_msi.c:339:
+}
+#define get_ioapic_vector      find_prt_ioapic_vector

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: arch/i386/kernel/pci_msi.c:343:
+     int         irq = -1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: arch/i386/kernel/pci_msi.c:345:
+     if (io_apic_assign_pci_irqs && IO_APIC_DEFINED) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: arch/i386/kernel/pci_msi.c:345:
+     if (io_apic_assign_pci_irqs && IO_APIC_DEFINED) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#719: FILE: arch/i386/kernel/pci_msi.c:345:
+     if (io_apic_assign_pci_irqs && IO_APIC_DEFINED) 
+     {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#719: FILE: arch/i386/kernel/pci_msi.c:345:
+     if (io_apic_assign_pci_irqs && IO_APIC_DEFINED) 
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: arch/i386/kernel/pci_msi.c:346:
+     {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: arch/i386/kernel/pci_msi.c:347:
+           u32         pin = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: arch/i386/kernel/pci_msi.c:347:
+           u32         pin = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: arch/i386/kernel/pci_msi.c:348:
+           unsigned int       apic, intin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/i386/kernel/pci_msi.c:348:
+           unsigned int       apic, intin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: arch/i386/kernel/pci_msi.c:349:
+           int         i = 0, shares = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: arch/i386/kernel/pci_msi.c:349:
+           int         i = 0, shares = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: arch/i386/kernel/pci_msi.c:350:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: arch/i386/kernel/pci_msi.c:350:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/i386/kernel/pci_msi.c:350:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: arch/i386/kernel/pci_msi.c:351:
+           dev->bus->ops->read(dev->bus, dev->devfn, PCI_INTERRUPT_PIN, 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/i386/kernel/pci_msi.c:351:
+           dev->bus->ops->read(dev->bus, dev->devfn, PCI_INTERRUPT_PIN, 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: arch/i386/kernel/pci_msi.c:352:
+                 &pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: arch/i386/kernel/pci_msi.c:352:
+                 &pin);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: arch/i386/kernel/pci_msi.c:353:
+           if (pin) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: arch/i386/kernel/pci_msi.c:353:
+           if (pin) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#727: FILE: arch/i386/kernel/pci_msi.c:353:
+           if (pin) {
+                 pin--;       

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: arch/i386/kernel/pci_msi.c:354:
+                 pin--;       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: arch/i386/kernel/pci_msi.c:354:
+                 pin--;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: arch/i386/kernel/pci_msi.c:354:
+                 pin--;       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: arch/i386/kernel/pci_msi.c:355:
+                 irq = IO_APIC_get_PCI_irq_vector($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: arch/i386/kernel/pci_msi.c:355:
+                 irq = IO_APIC_get_PCI_irq_vector($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#729: FILE: arch/i386/kernel/pci_msi.c:355:
+                 irq = IO_APIC_get_PCI_irq_vector(

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: arch/i386/kernel/pci_msi.c:356:
+                       dev->bus->number, PCI_SLOT(dev->devfn), pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: arch/i386/kernel/pci_msi.c:356:
+                       dev->bus->number, PCI_SLOT(dev->devfn), pin);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: arch/i386/kernel/pci_msi.c:357:
+                 for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: arch/i386/kernel/pci_msi.c:357:
+                 for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#731: FILE: arch/i386/kernel/pci_msi.c:357:
+                 for (apic = 0; apic < nr_ioapics; apic++) {
+                       i += nr_ioapic_registers[apic];

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: arch/i386/kernel/pci_msi.c:358:
+                       i += nr_ioapic_registers[apic];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/i386/kernel/pci_msi.c:358:
+                       i += nr_ioapic_registers[apic];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: arch/i386/kernel/pci_msi.c:359:
+                       if (i > irq) break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: arch/i386/kernel/pci_msi.c:359:
+                       if (i > irq) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#733: FILE: arch/i386/kernel/pci_msi.c:359:
+                       if (i > irq) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: arch/i386/kernel/pci_msi.c:360:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: arch/i386/kernel/pci_msi.c:360:
+                 }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: arch/i386/kernel/pci_msi.c:361:
+                 intin = irq - (i - nr_ioapic_registers[apic]);   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: arch/i386/kernel/pci_msi.c:361:
+                 intin = irq - (i - nr_ioapic_registers[apic]);   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: arch/i386/kernel/pci_msi.c:361:
+                 intin = irq - (i - nr_ioapic_registers[apic]);   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: arch/i386/kernel/pci_msi.c:362:
+                   for (i = 0; i < mp_irq_entries; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: arch/i386/kernel/pci_msi.c:362:
+                   for (i = 0; i < mp_irq_entries; i++) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: arch/i386/kernel/pci_msi.c:362:
+                   for (i = 0; i < mp_irq_entries; i++) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 23)
#736: FILE: arch/i386/kernel/pci_msi.c:362:
+                   for (i = 0; i < mp_irq_entries; i++) 
+                       if ((mp_ioapics[apic].mpc_apicid == 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == $

ERROR:CODE_INDENT: code indent should use tabs where possible
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 29)
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == 
[...]
+                             shares++; 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_ioapics[apic].mpc_apicid == 
                            mp_irqs[i].mpc_dstapic'
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == 
+                           mp_irqs[i].mpc_dstapic) && /*MATCH APIC & */
+                          (mp_irqs[i].mpc_dstirq == intin)) /* INTIN */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mpc_dstirq == intin'
#737: FILE: arch/i386/kernel/pci_msi.c:363:
+                       if ((mp_ioapics[apic].mpc_apicid == 
+                           mp_irqs[i].mpc_dstapic) && /*MATCH APIC & */
+                          (mp_irqs[i].mpc_dstirq == intin)) /* INTIN */

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: arch/i386/kernel/pci_msi.c:364:
+                           mp_irqs[i].mpc_dstapic) && /*MATCH APIC & */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: arch/i386/kernel/pci_msi.c:364:
+                           mp_irqs[i].mpc_dstapic) && /*MATCH APIC & */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: arch/i386/kernel/pci_msi.c:365:
+                          (mp_irqs[i].mpc_dstirq == intin)) /* INTIN */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: arch/i386/kernel/pci_msi.c:365:
+                          (mp_irqs[i].mpc_dstirq == intin)) /* INTIN */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: arch/i386/kernel/pci_msi.c:366:
+                             shares++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: arch/i386/kernel/pci_msi.c:366:
+                             shares++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: arch/i386/kernel/pci_msi.c:366:
+                             shares++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: arch/i386/kernel/pci_msi.c:367:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: arch/i386/kernel/pci_msi.c:367:
+           }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: arch/i386/kernel/pci_msi.c:368:
+           if (shares != 1) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: arch/i386/kernel/pci_msi.c:368:
+           if (shares != 1) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: arch/i386/kernel/pci_msi.c:368:
+           if (shares != 1) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#742: FILE: arch/i386/kernel/pci_msi.c:368:
+           if (shares != 1) 
+                 return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: arch/i386/kernel/pci_msi.c:369:
+                 return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: arch/i386/kernel/pci_msi.c:369:
+                 return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: arch/i386/kernel/pci_msi.c:370:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: arch/i386/kernel/pci_msi.c:371:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/i386/kernel/pci_msi.c:371:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: arch/i386/kernel/pci_msi.c:372:
+     return IO_APIC_VECTOR(irq);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#748: FILE: arch/i386/kernel/pci_msi.c:374:
+}
+#define get_ioapic_vector      find_ioapic_vector

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: arch/i386/kernel/pci_msi.c:379:
+     int vector;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: arch/i386/kernel/pci_msi.c:381:
+     if ((vector = get_ioapic_vector(dev)) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/i386/kernel/pci_msi.c:381:
+     if ((vector = get_ioapic_vector(dev)) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#755: FILE: arch/i386/kernel/pci_msi.c:381:
+     if ((vector = get_ioapic_vector(dev)) < 0) 
+           vector = get_new_vector();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#755: FILE: arch/i386/kernel/pci_msi.c:381:
+     if ((vector = get_ioapic_vector(dev)) < 0) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: arch/i386/kernel/pci_msi.c:382:
+           vector = get_new_vector();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: arch/i386/kernel/pci_msi.c:382:
+           vector = get_new_vector();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: arch/i386/kernel/pci_msi.c:383:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: arch/i386/kernel/pci_msi.c:383:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: arch/i386/kernel/pci_msi.c:384:
+     return vector;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#761: FILE: arch/i386/kernel/pci_msi.c:387:
+static struct msi_desc_t* alloc_msi_entry(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: arch/i386/kernel/pci_msi.c:389:
+     struct msi_desc_t *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: arch/i386/kernel/pci_msi.c:391:
+      entry=(struct msi_desc_t*)kmalloc(sizeof(struct$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#765: FILE: arch/i386/kernel/pci_msi.c:391:
+      entry=(struct msi_desc_t*)kmalloc(sizeof(struct

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#765: FILE: arch/i386/kernel/pci_msi.c:391:
+      entry=(struct msi_desc_t*)kmalloc(sizeof(struct
            ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#765: FILE: arch/i386/kernel/pci_msi.c:391:
+      entry=(struct msi_desc_t*)kmalloc(sizeof(struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: arch/i386/kernel/pci_msi.c:392:
+     if (!entry)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#767: FILE: arch/i386/kernel/pci_msi.c:392:
+     if (!entry)
+           return NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: arch/i386/kernel/pci_msi.c:393:
+           return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: arch/i386/kernel/pci_msi.c:393:
+           return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: arch/i386/kernel/pci_msi.c:394:
+     entry->mask_entry_addr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: arch/i386/kernel/pci_msi.c:395:
+     entry->dev = NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: arch/i386/kernel/pci_msi.c:396:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: arch/i386/kernel/pci_msi.c:396:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: arch/i386/kernel/pci_msi.c:397:
+     return entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/i386/kernel/pci_msi.c:402:
+      spin_lock(&irq_desc[pos].lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: arch/i386/kernel/pci_msi.c:403:
+     if (!mask)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#778: FILE: arch/i386/kernel/pci_msi.c:403:
+     if (!mask)
+           irq_desc[pos].handler = &msi_irq_wo_maskbit_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: arch/i386/kernel/pci_msi.c:404:
+           irq_desc[pos].handler = &msi_irq_wo_maskbit_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: arch/i386/kernel/pci_msi.c:404:
+           irq_desc[pos].handler = &msi_irq_wo_maskbit_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: arch/i386/kernel/pci_msi.c:405:
+     else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#780: FILE: arch/i386/kernel/pci_msi.c:405:
+     else
+           irq_desc[pos].handler = &msi_irq_w_maskbit_type;

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: arch/i386/kernel/pci_msi.c:406:
+           irq_desc[pos].handler = &msi_irq_w_maskbit_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: arch/i386/kernel/pci_msi.c:406:
+           irq_desc[pos].handler = &msi_irq_w_maskbit_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/i386/kernel/pci_msi.c:407:
+      spin_unlock(&irq_desc[pos].lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/i386/kernel/pci_msi.c:412:
+     u32 control;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: arch/i386/kernel/pci_msi.c:413:
+                 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: arch/i386/kernel/pci_msi.c:413:
+                 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: arch/i386/kernel/pci_msi.c:413:
+                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: arch/i386/kernel/pci_msi.c:414:
+     dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: arch/i386/kernel/pci_msi.c:414:
+     dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#790: FILE: arch/i386/kernel/pci_msi.c:415:
+           msi_control_reg(pos), 2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: arch/i386/kernel/pci_msi.c:415:
+           msi_control_reg(pos), 2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: arch/i386/kernel/pci_msi.c:416:
+     if (type == PCI_CAP_ID_MSI) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#791: FILE: arch/i386/kernel/pci_msi.c:416:
+     if (type == PCI_CAP_ID_MSI) {
[...]
+           msi_enable(control, 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: arch/i386/kernel/pci_msi.c:417:
+           /* Set enabled bits to single MSI & enable MSI_enable bit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: arch/i386/kernel/pci_msi.c:418:
+           msi_enable(control, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: arch/i386/kernel/pci_msi.c:418:
+           msi_enable(control, 1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: arch/i386/kernel/pci_msi.c:419:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: arch/i386/kernel/pci_msi.c:419:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: arch/i386/kernel/pci_msi.c:419:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: arch/i386/kernel/pci_msi.c:420:
+                 msi_control_reg(pos), 2, control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: arch/i386/kernel/pci_msi.c:420:
+                 msi_control_reg(pos), 2, control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: arch/i386/kernel/pci_msi.c:421:
+     } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#796: FILE: arch/i386/kernel/pci_msi.c:421:
+     } else {
+           msix_enable(control);

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: arch/i386/kernel/pci_msi.c:422:
+           msix_enable(control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: arch/i386/kernel/pci_msi.c:422:
+           msix_enable(control);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: arch/i386/kernel/pci_msi.c:423:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: arch/i386/kernel/pci_msi.c:423:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: arch/i386/kernel/pci_msi.c:423:
+             dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: arch/i386/kernel/pci_msi.c:424:
+                 msi_control_reg(pos), 2, control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: arch/i386/kernel/pci_msi.c:424:
+                 msi_control_reg(pos), 2, control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: arch/i386/kernel/pci_msi.c:425:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: arch/i386/kernel/pci_msi.c:426:
+    if (pci_find_capability(dev, PCI_CAP_ID_PCI_EXPRESS)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 11)
#801: FILE: arch/i386/kernel/pci_msi.c:426:
+    if (pci_find_capability(dev, PCI_CAP_ID_PCI_EXPRESS)) {
[...]
+           u32 cmd;

ERROR:CODE_INDENT: code indent should use tabs where possible
#802: FILE: arch/i386/kernel/pci_msi.c:427:
+           /* PCI Express Endpoint device detected */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#803: FILE: arch/i386/kernel/pci_msi.c:428:
+           u32 cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: arch/i386/kernel/pci_msi.c:428:
+           u32 cmd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#804: FILE: arch/i386/kernel/pci_msi.c:429:
+             dev->bus->ops->read(dev->bus, dev->devfn, PCI_COMMAND, 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: arch/i386/kernel/pci_msi.c:429:
+             dev->bus->ops->read(dev->bus, dev->devfn, PCI_COMMAND, 2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: arch/i386/kernel/pci_msi.c:430:
+           cmd |= PCI_COMMAND_INTX_DISABLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: arch/i386/kernel/pci_msi.c:430:
+           cmd |= PCI_COMMAND_INTX_DISABLE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: arch/i386/kernel/pci_msi.c:431:
+             dev->bus->ops->write(dev->bus, dev->devfn, PCI_COMMAND, 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: arch/i386/kernel/pci_msi.c:431:
+             dev->bus->ops->write(dev->bus, dev->devfn, PCI_COMMAND, 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/i386/kernel/pci_msi.c:432:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: arch/i386/kernel/pci_msi.c:438:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: arch/i386/kernel/pci_msi.c:445:
+ * -EBUSY      : No MSI resource $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: arch/i386/kernel/pci_msi.c:448:
+static int msi_capability_init(struct pci_dev *dev) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: arch/i386/kernel/pci_msi.c:450:
+     struct msi_desc_t *entry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: arch/i386/kernel/pci_msi.c:451:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: arch/i386/kernel/pci_msi.c:451:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: arch/i386/kernel/pci_msi.c:452:
+     struct msg_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/i386/kernel/pci_msi.c:453:
+     int pos, vector, *mask_reg = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: arch/i386/kernel/pci_msi.c:454:
+     u32 control;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: arch/i386/kernel/pci_msi.c:455:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: arch/i386/kernel/pci_msi.c:455:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: arch/i386/kernel/pci_msi.c:456:
+     pos = pci_find_capability(dev, PCI_CAP_ID_MSI);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: arch/i386/kernel/pci_msi.c:457:
+     if (!pos)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#836: FILE: arch/i386/kernel/pci_msi.c:457:
+     if (!pos)
+           return -EINVAL; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: arch/i386/kernel/pci_msi.c:458:
+           return -EINVAL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: arch/i386/kernel/pci_msi.c:458:
+           return -EINVAL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: arch/i386/kernel/pci_msi.c:458:
+           return -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: arch/i386/kernel/pci_msi.c:460:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: arch/i386/kernel/pci_msi.c:460:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: arch/i386/kernel/pci_msi.c:461:
+           2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: arch/i386/kernel/pci_msi.c:461:
+           2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: arch/i386/kernel/pci_msi.c:462:
+     if (control & PCI_MSI_FLAGS_ENABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#841: FILE: arch/i386/kernel/pci_msi.c:462:
+     if (control & PCI_MSI_FLAGS_ENABLE)
+           return dev->irq;

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: arch/i386/kernel/pci_msi.c:463:
+           return dev->irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: arch/i386/kernel/pci_msi.c:463:
+           return dev->irq;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: arch/i386/kernel/pci_msi.c:464:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/i386/kernel/pci_msi.c:464:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: arch/i386/kernel/pci_msi.c:465:
+     if (is_mask_bit_support(control)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#844: FILE: arch/i386/kernel/pci_msi.c:465:
+     if (is_mask_bit_support(control)) {
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: arch/i386/kernel/pci_msi.c:466:
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);$

CHECK:SPACING: No space is necessary after a cast
#845: FILE: arch/i386/kernel/pci_msi.c:466:
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: arch/i386/kernel/pci_msi.c:466:
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#845: FILE: arch/i386/kernel/pci_msi.c:466:
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#845: FILE: arch/i386/kernel/pci_msi.c:466:
+           mask_reg = (int*) kmalloc(sizeof(int), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: arch/i386/kernel/pci_msi.c:467:
+           if (!mask_reg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: arch/i386/kernel/pci_msi.c:467:
+           if (!mask_reg)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#846: FILE: arch/i386/kernel/pci_msi.c:467:
+           if (!mask_reg)
+                 return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: arch/i386/kernel/pci_msi.c:468:
+                 return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: arch/i386/kernel/pci_msi.c:468:
+                 return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#848: FILE: arch/i386/kernel/pci_msi.c:469:
+           *mask_reg = msi_mask_bits_reg(pos, is_64bit_address(control));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: arch/i386/kernel/pci_msi.c:469:
+           *mask_reg = msi_mask_bits_reg(pos, is_64bit_address(control));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/i386/kernel/pci_msi.c:470:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: arch/i386/kernel/pci_msi.c:472:
+     entry = alloc_msi_entry();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: arch/i386/kernel/pci_msi.c:473:
+     if (!entry) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#852: FILE: arch/i386/kernel/pci_msi.c:473:
+     if (!entry) {
+           kfree(mask_reg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: arch/i386/kernel/pci_msi.c:474:
+           kfree(mask_reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: arch/i386/kernel/pci_msi.c:474:
+           kfree(mask_reg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: arch/i386/kernel/pci_msi.c:475:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: arch/i386/kernel/pci_msi.c:475:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: arch/i386/kernel/pci_msi.c:476:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: arch/i386/kernel/pci_msi.c:477:
+     if ((vector = get_msi_vector(dev)) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#856: FILE: arch/i386/kernel/pci_msi.c:477:
+     if ((vector = get_msi_vector(dev)) < 0) {
+           kfree(entry);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#856: FILE: arch/i386/kernel/pci_msi.c:477:
+     if ((vector = get_msi_vector(dev)) < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: arch/i386/kernel/pci_msi.c:478:
+           kfree(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: arch/i386/kernel/pci_msi.c:478:
+           kfree(entry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: arch/i386/kernel/pci_msi.c:479:
+           kfree(mask_reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: arch/i386/kernel/pci_msi.c:479:
+           kfree(mask_reg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: arch/i386/kernel/pci_msi.c:480:
+           return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: arch/i386/kernel/pci_msi.c:480:
+           return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: arch/i386/kernel/pci_msi.c:481:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: arch/i386/kernel/pci_msi.c:482:
+     entry->msi_attrib.type = PCI_CAP_ID_MSI;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: arch/i386/kernel/pci_msi.c:483:
+     entry->msi_attrib.entry_nr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: arch/i386/kernel/pci_msi.c:484:
+     entry->msi_attrib.maskbit = is_mask_bit_support(control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: arch/i386/kernel/pci_msi.c:485:
+     entry->dev = dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: arch/i386/kernel/pci_msi.c:486:
+     entry->mask_entry_addr = mask_reg; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: arch/i386/kernel/pci_msi.c:486:
+     entry->mask_entry_addr = mask_reg; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: arch/i386/kernel/pci_msi.c:487:
+      irq_handler_init(vector, entry->msi_attrib.maskbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: arch/i386/kernel/pci_msi.c:488:
+      msi_desc[vector] = entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: arch/i386/kernel/pci_msi.c:490:
+      msi_address_init(&address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: arch/i386/kernel/pci_msi.c:491:
+      msi_data_init(&data, vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: arch/i386/kernel/pci_msi.c:492:
+     entry->msi_attrib.current_cpu = address.lo_address.u.dest_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: arch/i386/kernel/pci_msi.c:493:
+     dev->bus->ops->write(dev->bus, dev->devfn, msi_lower_address_reg(pos),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: arch/i386/kernel/pci_msi.c:495:
+                       4, address.lo_address.value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: arch/i386/kernel/pci_msi.c:495:
+                       4, address.lo_address.value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: arch/i386/kernel/pci_msi.c:496:
+     if (is_64bit_address(control)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#875: FILE: arch/i386/kernel/pci_msi.c:496:
+     if (is_64bit_address(control)) {
+           dev->bus->ops->write(dev->bus, dev->devfn, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: arch/i386/kernel/pci_msi.c:497:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: arch/i386/kernel/pci_msi.c:497:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: arch/i386/kernel/pci_msi.c:497:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: arch/i386/kernel/pci_msi.c:498:
+                 msi_upper_address_reg(pos), 4, address.hi_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: arch/i386/kernel/pci_msi.c:498:
+                 msi_upper_address_reg(pos), 4, address.hi_address);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: arch/i386/kernel/pci_msi.c:499:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: arch/i386/kernel/pci_msi.c:499:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: arch/i386/kernel/pci_msi.c:499:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: arch/i386/kernel/pci_msi.c:500:
+                 msi_data_reg(pos, 1), 2, *((u32*)&data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: arch/i386/kernel/pci_msi.c:500:
+                 msi_data_reg(pos, 1), 2, *((u32*)&data));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#879: FILE: arch/i386/kernel/pci_msi.c:500:
+                 msi_data_reg(pos, 1), 2, *((u32*)&data));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: arch/i386/kernel/pci_msi.c:501:
+     } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#880: FILE: arch/i386/kernel/pci_msi.c:501:
+     } else
+           dev->bus->ops->write(dev->bus, dev->devfn, 

CHECK:BRACES: Unbalanced braces around else statement
#880: FILE: arch/i386/kernel/pci_msi.c:501:
+     } else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: arch/i386/kernel/pci_msi.c:502:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: arch/i386/kernel/pci_msi.c:502:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: arch/i386/kernel/pci_msi.c:502:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: arch/i386/kernel/pci_msi.c:503:
+                 msi_data_reg(pos, 0), 2, *((u32*)&data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: arch/i386/kernel/pci_msi.c:503:
+                 msi_data_reg(pos, 0), 2, *((u32*)&data));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#882: FILE: arch/i386/kernel/pci_msi.c:503:
+                 msi_data_reg(pos, 0), 2, *((u32*)&data));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: arch/i386/kernel/pci_msi.c:504:
+     if (entry->msi_attrib.maskbit) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#883: FILE: arch/i386/kernel/pci_msi.c:504:
+     if (entry->msi_attrib.maskbit) {
+           unsigned int maskbits, temp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: arch/i386/kernel/pci_msi.c:505:
+           unsigned int maskbits, temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: arch/i386/kernel/pci_msi.c:505:
+           unsigned int maskbits, temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: arch/i386/kernel/pci_msi.c:506:
+           /* All MSIs are unmasked by default, Mask them all */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: arch/i386/kernel/pci_msi.c:507:
+             dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: arch/i386/kernel/pci_msi.c:507:
+             dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: arch/i386/kernel/pci_msi.c:507:
+             dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: arch/i386/kernel/pci_msi.c:508:
+                 msi_mask_bits_reg(pos, is_64bit_address(control)), 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: arch/i386/kernel/pci_msi.c:508:
+                 msi_mask_bits_reg(pos, is_64bit_address(control)), 4,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: arch/i386/kernel/pci_msi.c:509:
+                 &maskbits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: arch/i386/kernel/pci_msi.c:509:
+                 &maskbits);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: arch/i386/kernel/pci_msi.c:510:
+           temp = (1 << multi_msi_capable(control));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: arch/i386/kernel/pci_msi.c:510:
+           temp = (1 << multi_msi_capable(control));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: arch/i386/kernel/pci_msi.c:511:
+           temp = ((temp - 1) & ~temp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: arch/i386/kernel/pci_msi.c:511:
+           temp = ((temp - 1) & ~temp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: arch/i386/kernel/pci_msi.c:512:
+           maskbits |= temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: arch/i386/kernel/pci_msi.c:512:
+           maskbits |= temp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#892: FILE: arch/i386/kernel/pci_msi.c:513:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: arch/i386/kernel/pci_msi.c:513:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: arch/i386/kernel/pci_msi.c:513:
+           dev->bus->ops->write(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: arch/i386/kernel/pci_msi.c:514:
+                 msi_mask_bits_reg(pos, is_64bit_address(control)), 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: arch/i386/kernel/pci_msi.c:514:
+                 msi_mask_bits_reg(pos, is_64bit_address(control)), 4,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: arch/i386/kernel/pci_msi.c:515:
+                 maskbits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: arch/i386/kernel/pci_msi.c:515:
+                 maskbits);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: arch/i386/kernel/pci_msi.c:516:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: arch/i386/kernel/pci_msi.c:518:
+      enable_msi_mode(dev, pos, PCI_CAP_ID_MSI);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: arch/i386/kernel/pci_msi.c:519:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: arch/i386/kernel/pci_msi.c:519:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: arch/i386/kernel/pci_msi.c:520:
+     return vector;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: arch/i386/kernel/pci_msi.c:526:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: arch/i386/kernel/pci_msi.c:537:
+ * -EBUSY      : No MSI resource $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: arch/i386/kernel/pci_msi.c:540:
+static int msix_capability_init(struct pci_dev      *dev) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: arch/i386/kernel/pci_msi.c:542:
+     struct msi_desc_t *entry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: arch/i386/kernel/pci_msi.c:543:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: arch/i386/kernel/pci_msi.c:543:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: arch/i386/kernel/pci_msi.c:544:
+     struct msg_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: arch/i386/kernel/pci_msi.c:545:
+     int vector = 0, pos, dev_msi_cap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: arch/i386/kernel/pci_msi.c:546:
+     u32 phys_addr, table_offset, *base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: arch/i386/kernel/pci_msi.c:547:
+     u32 control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: arch/i386/kernel/pci_msi.c:548:
+     u8 bir;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: arch/i386/kernel/pci_msi.c:549:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: arch/i386/kernel/pci_msi.c:549:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: arch/i386/kernel/pci_msi.c:550:
+     pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: arch/i386/kernel/pci_msi.c:551:
+     if (!pos)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#932: FILE: arch/i386/kernel/pci_msi.c:551:
+     if (!pos)
+           return -EINVAL;  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: arch/i386/kernel/pci_msi.c:552:
+           return -EINVAL;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: arch/i386/kernel/pci_msi.c:552:
+           return -EINVAL;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: arch/i386/kernel/pci_msi.c:552:
+           return -EINVAL;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: arch/i386/kernel/pci_msi.c:555:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), 2, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: arch/i386/kernel/pci_msi.c:555:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), 2, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: arch/i386/kernel/pci_msi.c:556:
+           &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: arch/i386/kernel/pci_msi.c:556:
+           &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: arch/i386/kernel/pci_msi.c:557:
+     if (control & PCI_MSIX_FLAGS_ENABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#938: FILE: arch/i386/kernel/pci_msi.c:557:
+     if (control & PCI_MSIX_FLAGS_ENABLE)
+           return dev->irq;

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: arch/i386/kernel/pci_msi.c:558:
+           return dev->irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: arch/i386/kernel/pci_msi.c:558:
+           return dev->irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: arch/i386/kernel/pci_msi.c:560:
+      dev_msi_cap = multi_msix_capable(control);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: arch/i386/kernel/pci_msi.c:561:
+     dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: arch/i386/kernel/pci_msi.c:561:
+     dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: arch/i386/kernel/pci_msi.c:562:
+           msix_table_offset_reg(pos), 4, &table_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: arch/i386/kernel/pci_msi.c:562:
+           msix_table_offset_reg(pos), 4, &table_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: arch/i386/kernel/pci_msi.c:563:
+     bir = (u8)(table_offset & PCI_MSIX_FLAGS_BIRMASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: arch/i386/kernel/pci_msi.c:564:
+      phys_addr = pci_resource_start (dev, bir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: arch/i386/kernel/pci_msi.c:564:
+      phys_addr = pci_resource_start (dev, bir);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: arch/i386/kernel/pci_msi.c:565:
+      phys_addr += (u32)(table_offset & ~PCI_MSIX_FLAGS_BIRMASK);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: arch/i386/kernel/pci_msi.c:566:
+     if (!request_mem_region(phys_addr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: arch/i386/kernel/pci_msi.c:566:
+     if (!request_mem_region(phys_addr, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#947: FILE: arch/i386/kernel/pci_msi.c:566:
+     if (!request_mem_region(phys_addr, 
[...]
+           return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: arch/i386/kernel/pci_msi.c:567:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: arch/i386/kernel/pci_msi.c:567:
+     if (!request_mem_region(phys_addr, 
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: arch/i386/kernel/pci_msi.c:567:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32),$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#948: FILE: arch/i386/kernel/pci_msi.c:567:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32),
                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#948: FILE: arch/i386/kernel/pci_msi.c:567:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32),
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: arch/i386/kernel/pci_msi.c:568:
+           "MSI-X iomap Failure"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: arch/i386/kernel/pci_msi.c:568:
+           "MSI-X iomap Failure"))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: arch/i386/kernel/pci_msi.c:569:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: arch/i386/kernel/pci_msi.c:569:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: arch/i386/kernel/pci_msi.c:570:
+     base = (u32*)ioremap_nocache(phys_addr,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#951: FILE: arch/i386/kernel/pci_msi.c:570:
+     base = (u32*)ioremap_nocache(phys_addr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: arch/i386/kernel/pci_msi.c:571:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: arch/i386/kernel/pci_msi.c:571:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#952: FILE: arch/i386/kernel/pci_msi.c:571:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));
                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#952: FILE: arch/i386/kernel/pci_msi.c:571:
+           dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));
                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: arch/i386/kernel/pci_msi.c:572:
+     if (base == NULL) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: arch/i386/kernel/pci_msi.c:572:
+     if (base == NULL) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#953: FILE: arch/i386/kernel/pci_msi.c:572:
+     if (base == NULL) 
+           goto free_region; 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#953: FILE: arch/i386/kernel/pci_msi.c:572:
+     if (base == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: arch/i386/kernel/pci_msi.c:573:
+           goto free_region; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: arch/i386/kernel/pci_msi.c:573:
+           goto free_region; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: arch/i386/kernel/pci_msi.c:573:
+           goto free_region; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: arch/i386/kernel/pci_msi.c:575:
+     entry = alloc_msi_entry();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: arch/i386/kernel/pci_msi.c:576:
+     if (!entry) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: arch/i386/kernel/pci_msi.c:576:
+     if (!entry) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#957: FILE: arch/i386/kernel/pci_msi.c:576:
+     if (!entry) 
+           goto free_iomap; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: arch/i386/kernel/pci_msi.c:577:
+           goto free_iomap; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: arch/i386/kernel/pci_msi.c:577:
+           goto free_iomap; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: arch/i386/kernel/pci_msi.c:577:
+           goto free_iomap; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: arch/i386/kernel/pci_msi.c:578:
+     if ((vector = get_msi_vector(dev)) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#959: FILE: arch/i386/kernel/pci_msi.c:578:
+     if ((vector = get_msi_vector(dev)) < 0)
+           goto free_entry;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#959: FILE: arch/i386/kernel/pci_msi.c:578:
+     if ((vector = get_msi_vector(dev)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: arch/i386/kernel/pci_msi.c:579:
+           goto free_entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: arch/i386/kernel/pci_msi.c:579:
+           goto free_entry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: arch/i386/kernel/pci_msi.c:580:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: arch/i386/kernel/pci_msi.c:580:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: arch/i386/kernel/pci_msi.c:580:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: arch/i386/kernel/pci_msi.c:581:
+     entry->msi_attrib.type = PCI_CAP_ID_MSIX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: arch/i386/kernel/pci_msi.c:582:
+     entry->msi_attrib.entry_nr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: arch/i386/kernel/pci_msi.c:583:
+     entry->msi_attrib.maskbit = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: arch/i386/kernel/pci_msi.c:584:
+     entry->dev = dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: arch/i386/kernel/pci_msi.c:585:
+     entry->mask_entry_addr = base; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: arch/i386/kernel/pci_msi.c:585:
+     entry->mask_entry_addr = base; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: arch/i386/kernel/pci_msi.c:586:
+      irq_handler_init(vector, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: arch/i386/kernel/pci_msi.c:587:
+      msi_desc[vector] = entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: arch/i386/kernel/pci_msi.c:589:
+      msi_address_init(&address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: arch/i386/kernel/pci_msi.c:590:
+      msi_data_init(&data, vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: arch/i386/kernel/pci_msi.c:591:
+     entry->msi_attrib.current_cpu = address.lo_address.u.dest_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: arch/i386/kernel/pci_msi.c:592:
+     *base = address.lo_address.value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: arch/i386/kernel/pci_msi.c:593:
+     *(base + 1) = address.hi_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: arch/i386/kernel/pci_msi.c:594:
+     *(base + 2) = *((u32*)&data);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#975: FILE: arch/i386/kernel/pci_msi.c:594:
+     *(base + 2) = *((u32*)&data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: arch/i386/kernel/pci_msi.c:596:
+      enable_msi_mode(dev, pos, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: arch/i386/kernel/pci_msi.c:597:
+     return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: arch/i386/kernel/pci_msi.c:600:
+      kfree(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: arch/i386/kernel/pci_msi.c:602:
+      iounmap((void *)base);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: arch/i386/kernel/pci_msi.c:603:
+free_region: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: arch/i386/kernel/pci_msi.c:604:
+      release_mem_region(phys_addr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: arch/i386/kernel/pci_msi.c:604:
+      release_mem_region(phys_addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: arch/i386/kernel/pci_msi.c:605:
+      release_mem_region(phys_addr, 
+      dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: arch/i386/kernel/pci_msi.c:605:
+      dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#986: FILE: arch/i386/kernel/pci_msi.c:605:
+      dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));
                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#986: FILE: arch/i386/kernel/pci_msi.c:605:
+      dev_msi_cap*PCI_MSIX_ENTRY_SIZE*sizeof(u32));
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: arch/i386/kernel/pci_msi.c:607:
+     return ((vector < 0) ? -EBUSY : -ENOMEM);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#991: FILE: arch/i386/kernel/pci_msi.c:610:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: arch/i386/kernel/pci_msi.c:612:
+ * argument: unsigned int irq $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#994: FILE: arch/i386/kernel/pci_msi.c:613:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: arch/i386/kernel/pci_msi.c:614:
+ * description: called by PCI bus driver during PCI bus enumeration. The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: arch/i386/kernel/pci_msi.c:615:
+ * decision of enabling MSI vector(s) to the function requires that all of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: arch/i386/kernel/pci_msi.c:617:
+ * - The system-wide-level boot parameter CONFIG_MSI_USE_VECTOR is enabled $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: arch/i386/kernel/pci_msi.c:622:
+ * - The function is not listed in the boot parameter "device_nomsi=". PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1008: FILE: arch/i386/kernel/pci_msi.c:624:
+ *   have PCI subsystem forcing the function to override its default irq $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: arch/i386/kernel/pci_msi.c:631:
+ * -EBUSY      : No MSI resource $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1018: FILE: arch/i386/kernel/pci_msi.c:634:
+int msi_get_pci_irq_vector(void* dev_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: arch/i386/kernel/pci_msi.c:636:
+     struct pci_dev *dev = (struct pci_dev*)dev_id;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1020: FILE: arch/i386/kernel/pci_msi.c:636:
+     struct pci_dev *dev = (struct pci_dev*)dev_id;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: arch/i386/kernel/pci_msi.c:637:
+     int vector = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: arch/i386/kernel/pci_msi.c:639:
+     if (!pci_msi_enable)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1023: FILE: arch/i386/kernel/pci_msi.c:639:
+     if (!pci_msi_enable)
+           return vector;     

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: arch/i386/kernel/pci_msi.c:640:
+           return vector;     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: arch/i386/kernel/pci_msi.c:640:
+           return vector;     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: arch/i386/kernel/pci_msi.c:640:
+           return vector;     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: arch/i386/kernel/pci_msi.c:641:
+     if (!is_msi_support_for_this_device(dev))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1025: FILE: arch/i386/kernel/pci_msi.c:641:
+     if (!is_msi_support_for_this_device(dev))
+           return vector;     

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: arch/i386/kernel/pci_msi.c:642:
+           return vector;     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: arch/i386/kernel/pci_msi.c:642:
+           return vector;     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: arch/i386/kernel/pci_msi.c:642:
+           return vector;     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: arch/i386/kernel/pci_msi.c:643:
+     if ((vector = msix_capability_init(dev)) == -EINVAL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1027: FILE: arch/i386/kernel/pci_msi.c:643:
+     if ((vector = msix_capability_init(dev)) == -EINVAL)
+           return (msi_capability_init(dev));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1027: FILE: arch/i386/kernel/pci_msi.c:643:
+     if ((vector = msix_capability_init(dev)) == -EINVAL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: arch/i386/kernel/pci_msi.c:644:
+           return (msi_capability_init(dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: arch/i386/kernel/pci_msi.c:644:
+           return (msi_capability_init(dev));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: arch/i386/kernel/pci_msi.c:645:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: arch/i386/kernel/pci_msi.c:645:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: arch/i386/kernel/pci_msi.c:646:
+     return vector;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1033: FILE: arch/i386/kernel/pci_msi.c:649:
+static int msi_alloc_vector(void* dev_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: arch/i386/kernel/pci_msi.c:651:
+     struct msi_desc_t *entry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: arch/i386/kernel/pci_msi.c:652:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: arch/i386/kernel/pci_msi.c:652:
+     struct msg_address address; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: arch/i386/kernel/pci_msi.c:653:
+     struct msg_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: arch/i386/kernel/pci_msi.c:654:
+     struct pci_dev *dev = (struct pci_dev *)dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: arch/i386/kernel/pci_msi.c:655:
+     int i, pos, dev_msi_cap, vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: arch/i386/kernel/pci_msi.c:656:
+     u32 control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: arch/i386/kernel/pci_msi.c:657:
+     u32 *base = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: arch/i386/kernel/pci_msi.c:658:
+      unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: arch/i386/kernel/pci_msi.c:660:
+     vector = get_new_vector();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: arch/i386/kernel/pci_msi.c:661:
+     if (vector < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1045: FILE: arch/i386/kernel/pci_msi.c:661:
+     if (vector < 0)
+           return vector;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: arch/i386/kernel/pci_msi.c:662:
+           return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: arch/i386/kernel/pci_msi.c:662:
+           return vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: arch/i386/kernel/pci_msi.c:664:
+     entry = msi_desc[dev->irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: arch/i386/kernel/pci_msi.c:665:
+     base = (u32*)entry->mask_entry_addr;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1049: FILE: arch/i386/kernel/pci_msi.c:665:
+     base = (u32*)entry->mask_entry_addr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: arch/i386/kernel/pci_msi.c:666:
+     pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: arch/i386/kernel/pci_msi.c:667:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: arch/i386/kernel/pci_msi.c:667:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: arch/i386/kernel/pci_msi.c:668:
+           2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: arch/i386/kernel/pci_msi.c:668:
+           2, &control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: arch/i386/kernel/pci_msi.c:669:
+      dev_msi_cap = multi_msix_capable(control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: arch/i386/kernel/pci_msi.c:670:
+     for (i = 1; i < dev_msi_cap; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1054: FILE: arch/i386/kernel/pci_msi.c:670:
+     for (i = 1; i < dev_msi_cap; i++)
+           if (*(base + i*PCI_MSIX_ENTRY_SIZE) == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: arch/i386/kernel/pci_msi.c:671:
+           if (*(base + i*PCI_MSIX_ENTRY_SIZE) == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: arch/i386/kernel/pci_msi.c:671:
+           if (*(base + i*PCI_MSIX_ENTRY_SIZE) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#1055: FILE: arch/i386/kernel/pci_msi.c:671:
+           if (*(base + i*PCI_MSIX_ENTRY_SIZE) == 0)
+                 break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1055: FILE: arch/i386/kernel/pci_msi.c:671:
+           if (*(base + i*PCI_MSIX_ENTRY_SIZE) == 0)
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: arch/i386/kernel/pci_msi.c:672:
+                 break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: arch/i386/kernel/pci_msi.c:672:
+                 break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: arch/i386/kernel/pci_msi.c:673:
+     if (i >= dev_msi_cap) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1057: FILE: arch/i386/kernel/pci_msi.c:673:
+     if (i >= dev_msi_cap) {
+           spin_lock_irqsave(&msi_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: arch/i386/kernel/pci_msi.c:674:
+           spin_lock_irqsave(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: arch/i386/kernel/pci_msi.c:674:
+           spin_lock_irqsave(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: arch/i386/kernel/pci_msi.c:675:
+           vector_irq[vector] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: arch/i386/kernel/pci_msi.c:675:
+           vector_irq[vector] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: arch/i386/kernel/pci_msi.c:676:
+           nr_released_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: arch/i386/kernel/pci_msi.c:676:
+           nr_released_vectors++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: arch/i386/kernel/pci_msi.c:677:
+           spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: arch/i386/kernel/pci_msi.c:677:
+           spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: arch/i386/kernel/pci_msi.c:678:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: arch/i386/kernel/pci_msi.c:678:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: arch/i386/kernel/pci_msi.c:679:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: arch/i386/kernel/pci_msi.c:681:
+     entry = alloc_msi_entry();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: arch/i386/kernel/pci_msi.c:682:
+     if (!entry) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1066: FILE: arch/i386/kernel/pci_msi.c:682:
+     if (!entry) {
+           spin_lock_irqsave(&msi_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: arch/i386/kernel/pci_msi.c:683:
+           spin_lock_irqsave(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: arch/i386/kernel/pci_msi.c:683:
+           spin_lock_irqsave(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1068: FILE: arch/i386/kernel/pci_msi.c:684:
+           vector_irq[vector] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: arch/i386/kernel/pci_msi.c:684:
+           vector_irq[vector] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: arch/i386/kernel/pci_msi.c:685:
+           nr_released_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: arch/i386/kernel/pci_msi.c:685:
+           nr_released_vectors++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: arch/i386/kernel/pci_msi.c:686:
+           spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: arch/i386/kernel/pci_msi.c:686:
+           spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: arch/i386/kernel/pci_msi.c:687:
+           return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: arch/i386/kernel/pci_msi.c:687:
+           return -ENOMEM;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1072: FILE: arch/i386/kernel/pci_msi.c:688:
+     }     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: arch/i386/kernel/pci_msi.c:688:
+     }     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: arch/i386/kernel/pci_msi.c:689:
+     entry->msi_attrib.type = PCI_CAP_ID_MSIX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: arch/i386/kernel/pci_msi.c:690:
+     entry->msi_attrib.entry_nr = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: arch/i386/kernel/pci_msi.c:691:
+     entry->msi_attrib.maskbit = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: arch/i386/kernel/pci_msi.c:692:
+     entry->dev = dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: arch/i386/kernel/pci_msi.c:693:
+     entry->mask_entry_addr = base; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: arch/i386/kernel/pci_msi.c:693:
+     entry->mask_entry_addr = base; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: arch/i386/kernel/pci_msi.c:694:
+      irq_handler_init(vector, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: arch/i386/kernel/pci_msi.c:695:
+      msi_desc[vector] = entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: arch/i386/kernel/pci_msi.c:697:
+      msi_address_init(&address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: arch/i386/kernel/pci_msi.c:698:
+      msi_data_init(&data, vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: arch/i386/kernel/pci_msi.c:699:
+     entry->msi_attrib.current_cpu = address.lo_address.u.dest_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: arch/i386/kernel/pci_msi.c:700:
+     base += i*PCI_MSIX_ENTRY_SIZE;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1084: FILE: arch/i386/kernel/pci_msi.c:700:
+     base += i*PCI_MSIX_ENTRY_SIZE;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: arch/i386/kernel/pci_msi.c:701:
+     *base = address.lo_address.value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: arch/i386/kernel/pci_msi.c:702:
+     *(base + 1) = address.hi_address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: arch/i386/kernel/pci_msi.c:703:
+     *(base + 2) = *((u32*)&data);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1087: FILE: arch/i386/kernel/pci_msi.c:703:
+     *(base + 2) = *((u32*)&data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: arch/i386/kernel/pci_msi.c:704:
+     *(base + 3) = 1; /* ensure to mask it */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: arch/i386/kernel/pci_msi.c:705:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: arch/i386/kernel/pci_msi.c:705:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1090: FILE: arch/i386/kernel/pci_msi.c:706:
+     return vector;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1093: FILE: arch/i386/kernel/pci_msi.c:709:
+int msi_alloc_vectors(void* dev_id, int *vector, int nvec)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: arch/i386/kernel/pci_msi.c:711:
+     struct msi_desc_t *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: arch/i386/kernel/pci_msi.c:712:
+     struct pci_dev *dev = (struct pci_dev *)dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: arch/i386/kernel/pci_msi.c:713:
+     int i, pos, vec, alloc_vectors = 0, *vectors = (int *)vector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: arch/i386/kernel/pci_msi.c:714:
+     u32 control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: arch/i386/kernel/pci_msi.c:715:
+      unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: arch/i386/kernel/pci_msi.c:717:
+     if (!pci_msi_enable)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1101: FILE: arch/i386/kernel/pci_msi.c:717:
+     if (!pci_msi_enable)
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: arch/i386/kernel/pci_msi.c:718:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: arch/i386/kernel/pci_msi.c:718:
+           return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: arch/i386/kernel/pci_msi.c:719:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: arch/i386/kernel/pci_msi.c:719:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: arch/i386/kernel/pci_msi.c:720:
+     entry = msi_desc[dev->irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: arch/i386/kernel/pci_msi.c:721:
+     if (!entry || entry->dev != dev ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1105: FILE: arch/i386/kernel/pci_msi.c:721:
+     if (!entry || entry->dev != dev ||
[...]
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: arch/i386/kernel/pci_msi.c:722:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: arch/i386/kernel/pci_msi.c:722:
+     if (!entry || entry->dev != dev ||
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: arch/i386/kernel/pci_msi.c:722:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: arch/i386/kernel/pci_msi.c:723:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: arch/i386/kernel/pci_msi.c:723:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: arch/i386/kernel/pci_msi.c:725:
+     pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: arch/i386/kernel/pci_msi.c:726:
+     dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: arch/i386/kernel/pci_msi.c:727:
+     if (nvec > multi_msix_capable(control))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1112: FILE: arch/i386/kernel/pci_msi.c:727:
+     if (nvec > multi_msix_capable(control))
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: arch/i386/kernel/pci_msi.c:728:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: arch/i386/kernel/pci_msi.c:728:
+           return -EINVAL;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1115: FILE: arch/i386/kernel/pci_msi.c:730:
+     /*
+     * msi_lock is provided to ensure that enough vectors resources are

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: arch/i386/kernel/pci_msi.c:732:
+     */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: arch/i386/kernel/pci_msi.c:733:
+      spin_lock_irqsave(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: arch/i386/kernel/pci_msi.c:734:
+     if (nvec > pci_vector_resources()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1119: FILE: arch/i386/kernel/pci_msi.c:734:
+     if (nvec > pci_vector_resources()) {
+           spin_unlock_irqrestore(&msi_lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: arch/i386/kernel/pci_msi.c:735:
+           spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: arch/i386/kernel/pci_msi.c:735:
+           spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: arch/i386/kernel/pci_msi.c:736:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: arch/i386/kernel/pci_msi.c:736:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: arch/i386/kernel/pci_msi.c:737:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: arch/i386/kernel/pci_msi.c:738:
+      spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: arch/i386/kernel/pci_msi.c:739:
+     for (i = 0; i < nvec; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1124: FILE: arch/i386/kernel/pci_msi.c:739:
+     for (i = 0; i < nvec; i++) {
+           if ((vec = msi_alloc_vector(dev)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: arch/i386/kernel/pci_msi.c:740:
+           if ((vec = msi_alloc_vector(dev)) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: arch/i386/kernel/pci_msi.c:740:
+           if ((vec = msi_alloc_vector(dev)) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#1125: FILE: arch/i386/kernel/pci_msi.c:740:
+           if ((vec = msi_alloc_vector(dev)) < 0)
+                 break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1125: FILE: arch/i386/kernel/pci_msi.c:740:
+           if ((vec = msi_alloc_vector(dev)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: arch/i386/kernel/pci_msi.c:741:
+                 break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: arch/i386/kernel/pci_msi.c:741:
+                 break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: arch/i386/kernel/pci_msi.c:742:
+           *(vectors + i) = vec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: arch/i386/kernel/pci_msi.c:742:
+           *(vectors + i) = vec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1128: FILE: arch/i386/kernel/pci_msi.c:743:
+           alloc_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: arch/i386/kernel/pci_msi.c:743:
+           alloc_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: arch/i386/kernel/pci_msi.c:744:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: arch/i386/kernel/pci_msi.c:745:
+     if (alloc_vectors != nvec) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1130: FILE: arch/i386/kernel/pci_msi.c:745:
+     if (alloc_vectors != nvec) {
+           for (i = 0; i < alloc_vectors; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1131: FILE: arch/i386/kernel/pci_msi.c:746:
+           for (i = 0; i < alloc_vectors; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: arch/i386/kernel/pci_msi.c:746:
+           for (i = 0; i < alloc_vectors; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#1131: FILE: arch/i386/kernel/pci_msi.c:746:
+           for (i = 0; i < alloc_vectors; i++) {
+                 vec = *(vectors + i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: arch/i386/kernel/pci_msi.c:747:
+                 vec = *(vectors + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: arch/i386/kernel/pci_msi.c:747:
+                 vec = *(vectors + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: arch/i386/kernel/pci_msi.c:748:
+                 spin_lock_irqsave(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: arch/i386/kernel/pci_msi.c:748:
+                 spin_lock_irqsave(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: arch/i386/kernel/pci_msi.c:749:
+                 vector_irq[vec] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: arch/i386/kernel/pci_msi.c:749:
+                 vector_irq[vec] = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1135: FILE: arch/i386/kernel/pci_msi.c:750:
+                 nr_released_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: arch/i386/kernel/pci_msi.c:750:
+                 nr_released_vectors++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: arch/i386/kernel/pci_msi.c:751:
+                 spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1136: FILE: arch/i386/kernel/pci_msi.c:751:
+                 spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: arch/i386/kernel/pci_msi.c:752:
+                 if (msi_desc[vec] != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: arch/i386/kernel/pci_msi.c:752:
+                 if (msi_desc[vec] != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#1137: FILE: arch/i386/kernel/pci_msi.c:752:
+                 if (msi_desc[vec] != NULL) {
+                       msi_desc[vec]->dev = NULL; 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msi_desc[vec]"
#1137: FILE: arch/i386/kernel/pci_msi.c:752:
+                 if (msi_desc[vec] != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: arch/i386/kernel/pci_msi.c:753:
+                       msi_desc[vec]->dev = NULL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: arch/i386/kernel/pci_msi.c:753:
+                       msi_desc[vec]->dev = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: arch/i386/kernel/pci_msi.c:753:
+                       msi_desc[vec]->dev = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: arch/i386/kernel/pci_msi.c:754:
+                       msi_desc[vec]->mask_entry_addr = NULL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1139: FILE: arch/i386/kernel/pci_msi.c:754:
+                       msi_desc[vec]->mask_entry_addr = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: arch/i386/kernel/pci_msi.c:754:
+                       msi_desc[vec]->mask_entry_addr = NULL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: arch/i386/kernel/pci_msi.c:755:
+                       kfree(msi_desc[vec]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: arch/i386/kernel/pci_msi.c:755:
+                       kfree(msi_desc[vec]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1141: FILE: arch/i386/kernel/pci_msi.c:756:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: arch/i386/kernel/pci_msi.c:756:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: arch/i386/kernel/pci_msi.c:757:
+           }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: arch/i386/kernel/pci_msi.c:757:
+           }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1143: FILE: arch/i386/kernel/pci_msi.c:758:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: arch/i386/kernel/pci_msi.c:758:
+           return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: arch/i386/kernel/pci_msi.c:759:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: arch/i386/kernel/pci_msi.c:761:
+     return alloc_vectors;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1149: FILE: arch/i386/kernel/pci_msi.c:764:
+static int msi_free_vector(void* dev_id, int vector)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: arch/i386/kernel/pci_msi.c:766:
+     struct msi_desc_t *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: arch/i386/kernel/pci_msi.c:767:
+     struct pci_dev *dev = (struct pci_dev *)dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: arch/i386/kernel/pci_msi.c:768:
+     int offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: arch/i386/kernel/pci_msi.c:769:
+     u32 *tbl_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: arch/i386/kernel/pci_msi.c:770:
+      unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: arch/i386/kernel/pci_msi.c:772:
+     entry = msi_desc[vector];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: arch/i386/kernel/pci_msi.c:773:
+     if (!entry || entry->dev != dev || $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: arch/i386/kernel/pci_msi.c:773:
+     if (!entry || entry->dev != dev || $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1158: FILE: arch/i386/kernel/pci_msi.c:773:
+     if (!entry || entry->dev != dev || 
[...]
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1159: FILE: arch/i386/kernel/pci_msi.c:774:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: arch/i386/kernel/pci_msi.c:774:
+     if (!entry || entry->dev != dev || 
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: arch/i386/kernel/pci_msi.c:774:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1160: FILE: arch/i386/kernel/pci_msi.c:775:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: arch/i386/kernel/pci_msi.c:775:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: arch/i386/kernel/pci_msi.c:777:
+      tbl_addr = (u32*)entry->mask_entry_addr;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1162: FILE: arch/i386/kernel/pci_msi.c:777:
+      tbl_addr = (u32*)entry->mask_entry_addr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1163: FILE: arch/i386/kernel/pci_msi.c:778:
+     offset = entry->msi_attrib.entry_nr*PCI_MSIX_ENTRY_SIZE - 1;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1163: FILE: arch/i386/kernel/pci_msi.c:778:
+     offset = entry->msi_attrib.entry_nr*PCI_MSIX_ENTRY_SIZE - 1;
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: arch/i386/kernel/pci_msi.c:779:
+      *(tbl_addr + offset) = 1;      /* mask this entry */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: arch/i386/kernel/pci_msi.c:780:
+     entry->mask_entry_addr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: arch/i386/kernel/pci_msi.c:781:
+     entry->dev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: arch/i386/kernel/pci_msi.c:782:
+      kfree(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: arch/i386/kernel/pci_msi.c:783:
+      msi_desc[vector] = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: arch/i386/kernel/pci_msi.c:784:
+      spin_lock_irqsave(&msi_lock, flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: arch/i386/kernel/pci_msi.c:785:
+      vector_irq[vector] = 0;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: arch/i386/kernel/pci_msi.c:785:
+      vector_irq[vector] = 0;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: arch/i386/kernel/pci_msi.c:786:
+      nr_released_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: arch/i386/kernel/pci_msi.c:787:
+      spin_unlock_irqrestore(&msi_lock, flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1173: FILE: arch/i386/kernel/pci_msi.c:788:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1173: FILE: arch/i386/kernel/pci_msi.c:788:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: arch/i386/kernel/pci_msi.c:789:
+     return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1177: FILE: arch/i386/kernel/pci_msi.c:792:
+int msi_free_vectors(void* dev_id, int *vector, int nvec)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: arch/i386/kernel/pci_msi.c:794:
+     struct msi_desc_t *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: arch/i386/kernel/pci_msi.c:795:
+     struct pci_dev *dev = (struct pci_dev *)dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: arch/i386/kernel/pci_msi.c:796:
+     int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: arch/i386/kernel/pci_msi.c:798:
+     if (!pci_msi_enable)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1183: FILE: arch/i386/kernel/pci_msi.c:798:
+     if (!pci_msi_enable)
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: arch/i386/kernel/pci_msi.c:799:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: arch/i386/kernel/pci_msi.c:799:
+           return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1185: FILE: arch/i386/kernel/pci_msi.c:800:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: arch/i386/kernel/pci_msi.c:800:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: arch/i386/kernel/pci_msi.c:801:
+     entry = msi_desc[dev->irq];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1187: FILE: arch/i386/kernel/pci_msi.c:802:
+     if (!entry || entry->dev != dev || $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: arch/i386/kernel/pci_msi.c:802:
+     if (!entry || entry->dev != dev || $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1187: FILE: arch/i386/kernel/pci_msi.c:802:
+     if (!entry || entry->dev != dev || 
[...]
+           return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: arch/i386/kernel/pci_msi.c:803:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1188: FILE: arch/i386/kernel/pci_msi.c:803:
+     if (!entry || entry->dev != dev || 
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: arch/i386/kernel/pci_msi.c:803:
+        entry->msi_attrib.type != PCI_CAP_ID_MSIX)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: arch/i386/kernel/pci_msi.c:804:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: arch/i386/kernel/pci_msi.c:804:
+           return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: arch/i386/kernel/pci_msi.c:806:
+     for (i = 0; i < nvec; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1191: FILE: arch/i386/kernel/pci_msi.c:806:
+     for (i = 0; i < nvec; i++) {
+           msi_free_vector(dev, *(vector + i)); 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1191: FILE: arch/i386/kernel/pci_msi.c:806:
+     for (i = 0; i < nvec; i++) {
+           msi_free_vector(dev, *(vector + i)); 
+     }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1192: FILE: arch/i386/kernel/pci_msi.c:807:
+           msi_free_vector(dev, *(vector + i)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1192: FILE: arch/i386/kernel/pci_msi.c:807:
+           msi_free_vector(dev, *(vector + i)); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: arch/i386/kernel/pci_msi.c:807:
+           msi_free_vector(dev, *(vector + i)); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: arch/i386/kernel/pci_msi.c:808:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: arch/i386/kernel/pci_msi.c:810:
+     return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1200: FILE: arch/i386/kernel/pci_msi.c:815:
+ * argument: device pointer of type struct pci_dev $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: arch/i386/kernel/pci_msi.c:821:
+ **/ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1208: FILE: arch/i386/kernel/pci_msi.c:822:
+void remove_hotplug_vectors(void* dev_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: arch/i386/kernel/pci_msi.c:824:
+     struct msi_desc_t *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: arch/i386/kernel/pci_msi.c:825:
+     struct pci_dev *dev = (struct pci_dev *)dev_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: arch/i386/kernel/pci_msi.c:826:
+     int type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: arch/i386/kernel/pci_msi.c:827:
+     void *mask_entry_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: arch/i386/kernel/pci_msi.c:828:
+      unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: arch/i386/kernel/pci_msi.c:830:
+     if (!pci_msi_enable)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1216: FILE: arch/i386/kernel/pci_msi.c:830:
+     if (!pci_msi_enable)
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: arch/i386/kernel/pci_msi.c:831:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: arch/i386/kernel/pci_msi.c:831:
+           return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1218: FILE: arch/i386/kernel/pci_msi.c:832:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: arch/i386/kernel/pci_msi.c:832:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: arch/i386/kernel/pci_msi.c:833:
+     entry = msi_desc[dev->irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: arch/i386/kernel/pci_msi.c:834:
+     if (!entry || entry->dev != dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1220: FILE: arch/i386/kernel/pci_msi.c:834:
+     if (!entry || entry->dev != dev)
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1221: FILE: arch/i386/kernel/pci_msi.c:835:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: arch/i386/kernel/pci_msi.c:835:
+           return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: arch/i386/kernel/pci_msi.c:836:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1222: FILE: arch/i386/kernel/pci_msi.c:836:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: arch/i386/kernel/pci_msi.c:836:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: arch/i386/kernel/pci_msi.c:837:
+     if (get_ioapic_vector(dev) > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1223: FILE: arch/i386/kernel/pci_msi.c:837:
+     if (get_ioapic_vector(dev) > 0)
+           restore_ioapic_irq_handler(dev->irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1224: FILE: arch/i386/kernel/pci_msi.c:838:
+           restore_ioapic_irq_handler(dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: arch/i386/kernel/pci_msi.c:838:
+           restore_ioapic_irq_handler(dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: arch/i386/kernel/pci_msi.c:839:
+     type = entry->msi_attrib.type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: arch/i386/kernel/pci_msi.c:840:
+      mask_entry_addr = entry->mask_entry_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: arch/i386/kernel/pci_msi.c:841:
+     entry->mask_entry_addr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: arch/i386/kernel/pci_msi.c:842:
+     entry->dev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: arch/i386/kernel/pci_msi.c:843:
+      kfree(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: arch/i386/kernel/pci_msi.c:844:
+      msi_desc[dev->irq] = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: arch/i386/kernel/pci_msi.c:845:
+      spin_lock_irqsave(&msi_lock, flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: arch/i386/kernel/pci_msi.c:846:
+      vector_irq[dev->irq] = 0;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: arch/i386/kernel/pci_msi.c:846:
+      vector_irq[dev->irq] = 0;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: arch/i386/kernel/pci_msi.c:847:
+      nr_released_vectors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: arch/i386/kernel/pci_msi.c:848:
+      spin_unlock_irqrestore(&msi_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: arch/i386/kernel/pci_msi.c:849:
+     if (type == PCI_CAP_ID_MSIX) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 11)
#1235: FILE: arch/i386/kernel/pci_msi.c:849:
+     if (type == PCI_CAP_ID_MSIX) {
+           int i, pos, dev_msi_cap;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1236: FILE: arch/i386/kernel/pci_msi.c:850:
+           int i, pos, dev_msi_cap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: arch/i386/kernel/pci_msi.c:850:
+           int i, pos, dev_msi_cap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1237: FILE: arch/i386/kernel/pci_msi.c:851:
+           u32 phys_addr, table_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: arch/i386/kernel/pci_msi.c:851:
+           u32 phys_addr, table_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: arch/i386/kernel/pci_msi.c:852:
+           u32 control;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: arch/i386/kernel/pci_msi.c:852:
+           u32 control;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: arch/i386/kernel/pci_msi.c:853:
+           u8 bir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: arch/i386/kernel/pci_msi.c:853:
+           u8 bir;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1241: FILE: arch/i386/kernel/pci_msi.c:855:
+           pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: arch/i386/kernel/pci_msi.c:855:
+           pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1242: FILE: arch/i386/kernel/pci_msi.c:856:
+           dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1242: FILE: arch/i386/kernel/pci_msi.c:856:
+           dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1244: FILE: arch/i386/kernel/pci_msi.c:857:
+           dev_msi_cap = multi_msix_capable(control);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1244: FILE: arch/i386/kernel/pci_msi.c:857:
+           dev_msi_cap = multi_msix_capable(control);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: arch/i386/kernel/pci_msi.c:858:
+           dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: arch/i386/kernel/pci_msi.c:858:
+           dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1245: FILE: arch/i386/kernel/pci_msi.c:858:
+           dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1246: FILE: arch/i386/kernel/pci_msi.c:859:
+                 msix_table_offset_reg(pos), 4, &table_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1246: FILE: arch/i386/kernel/pci_msi.c:859:
+                 msix_table_offset_reg(pos), 4, &table_offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: arch/i386/kernel/pci_msi.c:860:
+           bir = (u8)(table_offset & PCI_MSIX_FLAGS_BIRMASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: arch/i386/kernel/pci_msi.c:860:
+           bir = (u8)(table_offset & PCI_MSIX_FLAGS_BIRMASK);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: arch/i386/kernel/pci_msi.c:861:
+           phys_addr = pci_resource_start (dev, bir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: arch/i386/kernel/pci_msi.c:861:
+           phys_addr = pci_resource_start (dev, bir);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1248: FILE: arch/i386/kernel/pci_msi.c:861:
+           phys_addr = pci_resource_start (dev, bir);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1249: FILE: arch/i386/kernel/pci_msi.c:862:
+           phys_addr += (u32)(table_offset & ~PCI_MSIX_FLAGS_BIRMASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1249: FILE: arch/i386/kernel/pci_msi.c:862:
+           phys_addr += (u32)(table_offset & ~PCI_MSIX_FLAGS_BIRMASK);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: arch/i386/kernel/pci_msi.c:863:
+           for (i = 0; i < NR_IRQS; i++) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1250: FILE: arch/i386/kernel/pci_msi.c:863:
+           for (i = 0; i < NR_IRQS; i++) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: arch/i386/kernel/pci_msi.c:863:
+           for (i = 0; i < NR_IRQS; i++) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 17)
#1250: FILE: arch/i386/kernel/pci_msi.c:863:
+           for (i = 0; i < NR_IRQS; i++) 
+                 if (msi_desc[i]->dev == dev)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1251: FILE: arch/i386/kernel/pci_msi.c:864:
+                 if (msi_desc[i]->dev == dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: arch/i386/kernel/pci_msi.c:864:
+                 if (msi_desc[i]->dev == dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 23)
#1251: FILE: arch/i386/kernel/pci_msi.c:864:
+                 if (msi_desc[i]->dev == dev)
+                       msi_free_vector(dev, i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: arch/i386/kernel/pci_msi.c:865:
+                       msi_free_vector(dev, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: arch/i386/kernel/pci_msi.c:865:
+                       msi_free_vector(dev, i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: arch/i386/kernel/pci_msi.c:866:
+           *(u32*)(mask_entry_addr + 3) = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: arch/i386/kernel/pci_msi.c:866:
+           *(u32*)(mask_entry_addr + 3) = 1;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1253: FILE: arch/i386/kernel/pci_msi.c:866:
+           *(u32*)(mask_entry_addr + 3) = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: arch/i386/kernel/pci_msi.c:867:
+           iounmap(mask_entry_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: arch/i386/kernel/pci_msi.c:867:
+           iounmap(mask_entry_addr);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: arch/i386/kernel/pci_msi.c:868:
+           release_mem_region(phys_addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1255: FILE: arch/i386/kernel/pci_msi.c:868:
+           release_mem_region(phys_addr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: arch/i386/kernel/pci_msi.c:868:
+           release_mem_region(phys_addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1269: FILE: arch/i386/pci/irq.c:715:
+           int irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: arch/i386/pci/irq.c:718:
+           if ((irq = msi_get_pci_irq_vector(dev)) > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: arch/i386/pci/irq.c:719:
+                     dev->irq = irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1279: FILE: arch/i386/pci/irq.c:720:
+                     printk(KERN_INFO "PCI->MSI$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: arch/i386/pci/irq.c:721:
+                 dev->bus->number, PCI_SLOT(dev->devfn), pin-1, irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: arch/i386/pci/irq.c:722:
+           } else$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1283: FILE: arch/i386/pci/irq.c:723:
+#endif     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: arch/i386/pci/irq.c:726:
+                 /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: arch/i386/pci/irq.c:727:
+                  * Recalculate IRQ numbers if we use the I/O APIC.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1295: FILE: arch/i386/pci/irq.c:728:
+                  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: arch/i386/pci/irq.c:729:
+                     if (io_apic_assign_pci_irqs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: arch/i386/pci/irq.c:729:
+                     if (io_apic_assign_pci_irqs)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1296: FILE: arch/i386/pci/irq.c:729:
+                     if (io_apic_assign_pci_irqs)
+                     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (21, 23)
#1296: FILE: arch/i386/pci/irq.c:729:
+                     if (io_apic_assign_pci_irqs)
+                     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1297: FILE: arch/i386/pci/irq.c:730:
+                     {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: arch/i386/pci/irq.c:730:
+                     {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1298: FILE: arch/i386/pci/irq.c:731:
+                       if (pin) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: arch/i386/pci/irq.c:731:
+                       if (pin) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 29)
#1298: FILE: arch/i386/pci/irq.c:731:
+                       if (pin) {
+                             pin--;      /* interrupt pins are numbered

ERROR:CODE_INDENT: code indent should use tabs where possible
#1299: FILE: arch/i386/pci/irq.c:732:
+                             pin--;      /* interrupt pins are numbered$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: arch/i386/pci/irq.c:732:
+                             pin--;      /* interrupt pins are numbered$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: arch/i386/pci/irq.c:733:
+                             irq = IO_APIC_get_PCI_irq_vector($

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1301: FILE: arch/i386/pci/irq.c:733:
+                             pin--;      /* interrupt pins are numbered
+                             irq = IO_APIC_get_PCI_irq_vector(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1302: FILE: arch/i386/pci/irq.c:734:
+                                   dev->bus->number, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1302: FILE: arch/i386/pci/irq.c:734:
+                                   dev->bus->number, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1303: FILE: arch/i386/pci/irq.c:735:
+                                   PCI_SLOT(dev->devfn), pin);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: arch/i386/pci/irq.c:742:
+                             if (irq < 0 && dev->bus->parent) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1313: FILE: arch/i386/pci/irq.c:742:
+                             if (irq < 0 && dev->bus->parent) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: arch/i386/pci/irq.c:742:
+                             if (irq < 0 && dev->bus->parent) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (29, 35)
#1313: FILE: arch/i386/pci/irq.c:742:
+                             if (irq < 0 && dev->bus->parent) { 
[...]
+                                   struct pci_dev * bridge = 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: arch/i386/pci/irq.c:743:
+                                   /* go back to the bridge */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: arch/i386/pci/irq.c:744:
+                                   struct pci_dev * bridge = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: arch/i386/pci/irq.c:744:
+                                   struct pci_dev * bridge = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: arch/i386/pci/irq.c:744:
+                                   struct pci_dev * bridge = $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1315: FILE: arch/i386/pci/irq.c:744:
+                                   struct pci_dev * bridge = 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1316: FILE: arch/i386/pci/irq.c:745:
+                                               dev->bus->self;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1316: FILE: arch/i386/pci/irq.c:745:
+                                               dev->bus->self;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: arch/i386/pci/irq.c:747:
+                                   pin = (pin + PCI_SLOT($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: arch/i386/pci/irq.c:747:
+                                   pin = (pin + PCI_SLOT($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1318: FILE: arch/i386/pci/irq.c:747:
+                                   pin = (pin + PCI_SLOT(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: arch/i386/pci/irq.c:748:
+                                         dev->devfn)) % 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: arch/i386/pci/irq.c:748:
+                                         dev->devfn)) % 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: arch/i386/pci/irq.c:749:
+                                   irq = IO_APIC_get_PCI_irq_vector$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: arch/i386/pci/irq.c:749:
+                                   irq = IO_APIC_get_PCI_irq_vector$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: arch/i386/pci/irq.c:750:
+                                         PCI_SLOT(bridge->devfn),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: arch/i386/pci/irq.c:750:
+                                         PCI_SLOT(bridge->devfn),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: arch/i386/pci/irq.c:751:
+                                         pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: arch/i386/pci/irq.c:751:
+                                         pin);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: arch/i386/pci/irq.c:752:
+                                   if (irq >= 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: arch/i386/pci/irq.c:752:
+                                   if (irq >= 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (35, 41)
#1324: FILE: arch/i386/pci/irq.c:752:
+                                   if (irq >= 0)
+                                         printk(KERN_WARNING "PCI: using

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: arch/i386/pci/irq.c:753:
+                                         printk(KERN_WARNING "PCI: using$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: arch/i386/pci/irq.c:753:
+                                         printk(KERN_WARNING "PCI: using$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1325: FILE: arch/i386/pci/irq.c:753:
+                                         printk(KERN_WARNING "PCI: using

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: arch/i386/pci/irq.c:754:
+                                         bridge->bus->number, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: arch/i386/pci/irq.c:754:
+                                         bridge->bus->number, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: arch/i386/pci/irq.c:754:
+                                         bridge->bus->number, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: arch/i386/pci/irq.c:755:
+                                         PCI_SLOT(bridge->devfn),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: arch/i386/pci/irq.c:755:
+                                         PCI_SLOT(bridge->devfn),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: arch/i386/pci/irq.c:756:
+                                                pin, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: arch/i386/pci/irq.c:756:
+                                                pin, irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1330: FILE: arch/i386/pci/irq.c:757:
+                             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: arch/i386/pci/irq.c:757:
+                             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1331: FILE: arch/i386/pci/irq.c:758:
+                             if (irq >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: arch/i386/pci/irq.c:758:
+                             if (irq >= 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: arch/i386/pci/irq.c:760:
+                                   if (!platform_legacy_irq(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: arch/i386/pci/irq.c:760:
+                                   if (!platform_legacy_irq(irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: arch/i386/pci/irq.c:761:
+                                         irq = IO_APIC_VECTOR(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: arch/i386/pci/irq.c:761:
+                                         irq = IO_APIC_VECTOR(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1350: FILE: arch/i386/pci/irq.c:764:
+                                   printk(KERN_INFO "PCI->APIC IRQ$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: arch/i386/pci/irq.c:764:
+                                   printk(KERN_INFO "PCI->APIC IRQ$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1355: FILE: arch/i386/pci/irq.c:766:
+                                   dev->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: arch/i386/pci/irq.c:766:
+                                   dev->irq = irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1356: FILE: arch/i386/pci/irq.c:767:
+                             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: arch/i386/pci/irq.c:767:
+                             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1359: FILE: arch/i386/pci/irq.c:769:
+                     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: arch/i386/pci/irq.c:769:
+                     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: Documentation/kernel-parameters.txt:263:
+                 option does not provide any benefits if a configured $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1396: FILE: Documentation/kernel-parameters.txt:691:
+                 during kernel built, then he/she can use this append $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1397: FILE: Documentation/kernel-parameters.txt:692:
+                 option to disable MSI system-wide support from PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1412: FILE: drivers/acpi/pci_irq.c:330:
+#ifdef CONFIG_MSI_USE_VECTOR   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1413: FILE: drivers/acpi/pci_irq.c:331:
+     if ((irq = msi_get_pci_irq_vector(dev)) > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 15)
#1413: FILE: drivers/acpi/pci_irq.c:331:
+     if ((irq = msi_get_pci_irq_vector(dev)) > 0) {
+               dev->irq = irq;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1413: FILE: drivers/acpi/pci_irq.c:331:
+     if ((irq = msi_get_pci_irq_vector(dev)) > 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1414: FILE: drivers/acpi/pci_irq.c:332:
+               dev->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: drivers/acpi/pci_irq.c:332:
+               dev->irq = irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1415: FILE: drivers/acpi/pci_irq.c:333:
+               printk(KERN_INFO "PCI->MSI VEC$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1415: FILE: drivers/acpi/pci_irq.c:333:
+               printk(KERN_INFO "PCI->MSI VEC$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1415: FILE: drivers/acpi/pci_irq.c:333:
+               printk(KERN_INFO "PCI->MSI VEC

ERROR:CODE_INDENT: code indent should use tabs where possible
#1417: FILE: drivers/acpi/pci_irq.c:334:
+                 dev->bus->number, PCI_SLOT(dev->devfn), pin, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: drivers/acpi/pci_irq.c:334:
+                 dev->bus->number, PCI_SLOT(dev->devfn), pin, irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1418: FILE: drivers/acpi/pci_irq.c:335:
+           return_VALUE(dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: drivers/acpi/pci_irq.c:335:
+           return_VALUE(dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: drivers/acpi/pci_irq.c:336:
+     }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1421: FILE: drivers/acpi/pci_irq.c:338:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: drivers/acpi/pci_irq.c:338:
+     $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1445: FILE: include/asm-i386/hw_irq.h:63:
+extern struct msi_desc_t* msi_desc[NR_IRQS];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1446: FILE: include/asm-i386/hw_irq.h:64:
+extern int msi_get_pci_irq_vector(void *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1447: FILE: include/asm-i386/hw_irq.h:65:
+extern int msi_alloc_vectors(void *dev, int *vector, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1448: FILE: include/asm-i386/hw_irq.h:66:
+extern int msi_free_vectors(void *dev, int *vector, int nvec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1449: FILE: include/asm-i386/hw_irq.h:67:
+extern void remove_hotplug_vectors(void *dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1528: FILE: include/linux/pci_msi.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1544: FILE: include/linux/pci_msi.h:16:
+extern void restore_ioapic_irq_handler(int irq);

CHECK:BIT_MACRO: Prefer using the BIT macro
#1569: FILE: include/linux/pci_msi.h:41:
+#define PCI_MSIX_FLAGS_ENABLE         (1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1571: FILE: include/linux/pci_msi.h:43:
+#define PCI_MSIX_FLAGS_BITMASK        (1 << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1575: FILE: include/linux/pci_msi.h:47:
+#define msi_control_reg(base)         (base + PCI_MSI_FLAGS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1576: FILE: include/linux/pci_msi.h:48:
+#define msi_lower_address_reg(base)   (base + PCI_MSI_ADDRESS_LO)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1577: FILE: include/linux/pci_msi.h:49:
+#define msi_upper_address_reg(base)   (base + PCI_MSI_ADDRESS_HI)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#1578: FILE: include/linux/pci_msi.h:50:
+#define msi_data_reg(base, is64bit)      \
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1578: FILE: include/linux/pci_msi.h:50:
+#define msi_data_reg(base, is64bit)      \
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'is64bit' may be better as '(is64bit)' to avoid precedence issues
#1578: FILE: include/linux/pci_msi.h:50:
+#define msi_data_reg(base, is64bit)      \
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1579: FILE: include/linux/pci_msi.h:51:
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1579: FILE: include/linux/pci_msi.h:51:
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1579: FILE: include/linux/pci_msi.h:51:
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )
                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1579: FILE: include/linux/pci_msi.h:51:
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1579: FILE: include/linux/pci_msi.h:51:
+     ( (is64bit == 1) ? base+PCI_MSI_DATA_64 : base+PCI_MSI_DATA_32 )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#1580: FILE: include/linux/pci_msi.h:52:
+#define msi_mask_bits_reg(base, is64bit) \
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1580: FILE: include/linux/pci_msi.h:52:
+#define msi_mask_bits_reg(base, is64bit) \
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'is64bit' may be better as '(is64bit)' to avoid precedence issues
#1580: FILE: include/linux/pci_msi.h:52:
+#define msi_mask_bits_reg(base, is64bit) \
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: include/linux/pci_msi.h:53:
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1581: FILE: include/linux/pci_msi.h:53:
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1581: FILE: include/linux/pci_msi.h:53:
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1581: FILE: include/linux/pci_msi.h:53:
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)
                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1581: FILE: include/linux/pci_msi.h:53:
+     ( (is64bit == 1) ? base+PCI_MSI_MASK_BIT : base+PCI_MSI_MASK_BIT-4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1582: FILE: include/linux/pci_msi.h:54:
+#define msi_disable(control)          (control & ~PCI_MSI_FLAGS_ENABLE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1583: FILE: include/linux/pci_msi.h:55:
+#define multi_msi_capable(control) \
+     (1 << ((control & PCI_MSI_FLAGS_QMASK) >> 1))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: include/linux/pci_msi.h:56:
+     (1 << ((control & PCI_MSI_FLAGS_QMASK) >> 1))$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1585: FILE: include/linux/pci_msi.h:57:
+#define multi_msi_enable(control, num) \
+      control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1585: FILE: include/linux/pci_msi.h:57:
+#define multi_msi_enable(control, num) \
+      control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'num' may be better as '(num)' to avoid precedence issues
#1585: FILE: include/linux/pci_msi.h:57:
+#define multi_msi_enable(control, num) \
+      control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1585: FILE: include/linux/pci_msi.h:57:
+#define multi_msi_enable(control, num) \
+      control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: include/linux/pci_msi.h:58:
+      control |= (((num >> 1) << 4) & PCI_MSI_FLAGS_QSIZE);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: include/linux/pci_msi.h:59:
+#define is_64bit_address(control)      (control & PCI_MSI_FLAGS_64BIT)    $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1587: FILE: include/linux/pci_msi.h:59:
+#define is_64bit_address(control)      (control & PCI_MSI_FLAGS_64BIT)    

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1588: FILE: include/linux/pci_msi.h:60:
+#define is_mask_bit_support(control)      (control & PCI_MSI_FLAGS_MASKBIT)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1589: FILE: include/linux/pci_msi.h:61:
+#define msi_enable(control, num) multi_msi_enable(control, num); \
+      control |= PCI_MSI_FLAGS_ENABLE

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'control' - possible side-effects?
#1589: FILE: include/linux/pci_msi.h:61:
+#define msi_enable(control, num) multi_msi_enable(control, num); \
+      control |= PCI_MSI_FLAGS_ENABLE

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: include/linux/pci_msi.h:62:
+      control |= PCI_MSI_FLAGS_ENABLE$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1591: FILE: include/linux/pci_msi.h:63:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: include/linux/pci_msi.h:63:
+ $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1593: FILE: include/linux/pci_msi.h:65:
+#define msix_table_offset_reg(base)   (base + 0x04)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#1594: FILE: include/linux/pci_msi.h:66:
+#define msix_pba_offset_reg(base)     (base + 0x08)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1595: FILE: include/linux/pci_msi.h:67:
+#define msix_enable(control)          control |= PCI_MSIX_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1595: FILE: include/linux/pci_msi.h:67:
+#define msix_enable(control)          control |= PCI_MSIX_FLAGS_ENABLE

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1596: FILE: include/linux/pci_msi.h:68:
+#define msix_disable(control)         (control & ~PCI_MSIX_FLAGS_ENABLE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1597: FILE: include/linux/pci_msi.h:69:
+#define msix_table_size(control)       ((control & PCI_MSIX_FLAGS_QSIZE)+1)
                                                                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'control' may be better as '(control)' to avoid precedence issues
#1597: FILE: include/linux/pci_msi.h:69:
+#define msix_table_size(control)       ((control & PCI_MSIX_FLAGS_QSIZE)+1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#1599: FILE: include/linux/pci_msi.h:71:
+#define msix_unmask(address)          (address & ~PCI_MSIX_FLAGS_BITMASK)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: include/linux/pci_msi.h:72:
+#define msix_mask(address)            (address | PCI_MSIX_FLAGS_BITMASK)  $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#1600: FILE: include/linux/pci_msi.h:72:
+#define msix_mask(address)            (address | PCI_MSIX_FLAGS_BITMASK)  

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'address' may be better as '(address)' to avoid precedence issues
#1601: FILE: include/linux/pci_msi.h:73:
+#define msix_is_pending(address)       (address & PCI_MSIX_FLAGS_PENDMASK)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1603: FILE: include/linux/pci_msi.h:75:
+#define _DEFINE_DBG_BUFFER      char __dbg_str_buf[256];

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000001' could be '0x00000001U'
#1604: FILE: include/linux/pci_msi.h:76:
+#define _DBG_K_TRACE_ENTRY      ((unsigned int)0x00000001)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000002' could be '0x00000002U'
#1605: FILE: include/linux/pci_msi.h:77:
+#define _DBG_K_TRACE_EXIT      ((unsigned int)0x00000002)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000004' could be '0x00000004U'
#1606: FILE: include/linux/pci_msi.h:78:
+#define _DBG_K_INFO       ((unsigned int)0x00000004)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)0x00000008' could be '0x00000008U'
#1607: FILE: include/linux/pci_msi.h:79:
+#define _DBG_K_ERROR            ((unsigned int)0x00000008)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1611: FILE: include/linux/pci_msi.h:83:
+#define _DBG_PRINT( dbg_flags, args... )         \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1611: FILE: include/linux/pci_msi.h:83:
+#define _DBG_PRINT( dbg_flags, args... )         \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1611: FILE: include/linux/pci_msi.h:83:
+#define _DBG_PRINT( dbg_flags, args... )         \
+if ( _DEBUG_LEVEL & (dbg_flags) )                 \
+{                                        \
+     int len;                          \
+     len = sprintf(__dbg_str_buf, "%s:%d: %s ",    \
+           __FILE__, __LINE__, __FUNCTION__ );    \
+      sprintf(__dbg_str_buf + len, args);            \
+      printk(KERN_INFO "%s\n", __dbg_str_buf);   \
+}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1612: FILE: include/linux/pci_msi.h:84:
+if ( _DEBUG_LEVEL & (dbg_flags) )                 \
+{                                        \

ERROR:SPACING: space prohibited after that open parenthesis '('
#1612: FILE: include/linux/pci_msi.h:84:
+if ( _DEBUG_LEVEL & (dbg_flags) )                 \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1612: FILE: include/linux/pci_msi.h:84:
+if ( _DEBUG_LEVEL & (dbg_flags) )                 \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: include/linux/pci_msi.h:86:
+     int len;                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1615: FILE: include/linux/pci_msi.h:87:
+     len = sprintf(__dbg_str_buf, "%s:%d: %s ",    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1616: FILE: include/linux/pci_msi.h:88:
+           __FILE__, __LINE__, __FUNCTION__ );    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: include/linux/pci_msi.h:88:
+           __FILE__, __LINE__, __FUNCTION__ );    \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1616: FILE: include/linux/pci_msi.h:88:
+           __FILE__, __LINE__, __FUNCTION__ );    \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1616: FILE: include/linux/pci_msi.h:88:
+           __FILE__, __LINE__, __FUNCTION__ );    \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: include/linux/pci_msi.h:89:
+      sprintf(__dbg_str_buf + len, args);            \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: include/linux/pci_msi.h:90:
+      printk(KERN_INFO "%s\n", __dbg_str_buf);   \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1618: FILE: include/linux/pci_msi.h:90:
+      printk(KERN_INFO "%s\n", __dbg_str_buf);   \

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1621: FILE: include/linux/pci_msi.h:93:
+#define MSI_FUNCTION_TRACE_ENTER      \
+      _DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1621: FILE: include/linux/pci_msi.h:93:
+#define MSI_FUNCTION_TRACE_ENTER      \
+      _DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: include/linux/pci_msi.h:94:
+      _DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1622: FILE: include/linux/pci_msi.h:94:
+      _DBG_PRINT (_DBG_K_TRACE_ENTRY, "%s", "[Entry]");

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1623: FILE: include/linux/pci_msi.h:95:
+#define MSI_FUNCTION_TRACE_EXIT       \
+      _DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1623: FILE: include/linux/pci_msi.h:95:
+#define MSI_FUNCTION_TRACE_EXIT       \
+      _DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: include/linux/pci_msi.h:96:
+      _DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: include/linux/pci_msi.h:96:
+      _DBG_PRINT (_DBG_K_TRACE_EXIT, "%s", "[Entry]");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1625: FILE: include/linux/pci_msi.h:97:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1625: FILE: include/linux/pci_msi.h:97:
+     $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1626: FILE: include/linux/pci_msi.h:98:
+     
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1634: FILE: include/linux/pci_msi.h:106:
+struct msg_data {  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1635: FILE: include/linux/pci_msi.h:107:
+     __u32      vector      :  8,       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: include/linux/pci_msi.h:107:
+     __u32      vector      :  8,       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1636: FILE: include/linux/pci_msi.h:108:
+      delivery_mode      :  3,      /*      000b: FIXED$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: include/linux/pci_msi.h:109:
+                            001b: lowest priority$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1637: FILE: include/linux/pci_msi.h:109:
+      delivery_mode      :  3,      /*      000b: FIXED
+                            001b: lowest priority

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#1638: FILE: include/linux/pci_msi.h:110:
+                             111b: ExtINT */   
                                    ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1638: FILE: include/linux/pci_msi.h:110:
+                             111b: ExtINT */   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: include/linux/pci_msi.h:110:
+                             111b: ExtINT */   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1638: FILE: include/linux/pci_msi.h:110:
+                             111b: ExtINT */   

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: include/linux/pci_msi.h:111:
+      dest_mode   :  1,      /* 0: physical, 1: logical */  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: include/linux/pci_msi.h:111:
+      dest_mode   :  1,      /* 0: physical, 1: logical */  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: include/linux/pci_msi.h:112:
+      reserved_1  :  2,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1641: FILE: include/linux/pci_msi.h:113:
+      trigger           :  1,      /* 0: edge, 1: level */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: include/linux/pci_msi.h:113:
+      trigger           :  1,      /* 0: edge, 1: level */    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1642: FILE: include/linux/pci_msi.h:114:
+      delivery_status      :  1,      /* 0: idle, 1: pending */  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: include/linux/pci_msi.h:114:
+      delivery_status      :  1,      /* 0: idle, 1: pending */  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: include/linux/pci_msi.h:115:
+      reserved_2  : 16;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1644: FILE: include/linux/pci_msi.h:116:
+} __attribute__ ((packed));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: include/linux/pci_msi.h:119:
+     union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1648: FILE: include/linux/pci_msi.h:120:
+           struct { __u32$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1648: FILE: include/linux/pci_msi.h:120:
+           struct { __u32$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1649: FILE: include/linux/pci_msi.h:121:
+                 reserved_1        :  2,       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1649: FILE: include/linux/pci_msi.h:121:
+                 reserved_1        :  2,       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: include/linux/pci_msi.h:121:
+                 reserved_1        :  2,       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: include/linux/pci_msi.h:122:
+                 dest_mode         :  1,      /* 0: physical, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: include/linux/pci_msi.h:122:
+                 dest_mode         :  1,      /* 0: physical, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: include/linux/pci_msi.h:122:
+                 dest_mode         :  1,      /* 0: physical, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: include/linux/pci_msi.h:123:
+                                            1: logical */  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: include/linux/pci_msi.h:123:
+                                            1: logical */  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1651: FILE: include/linux/pci_msi.h:123:
+                 dest_mode         :  1,      /* 0: physical, 
+                                            1: logical */  

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1651: FILE: include/linux/pci_msi.h:123:
+                                            1: logical */  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: include/linux/pci_msi.h:124:
+                 redirection_hint        :  1,        /* 0: to FSB, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: include/linux/pci_msi.h:124:
+                 redirection_hint        :  1,        /* 0: to FSB, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: include/linux/pci_msi.h:124:
+                 redirection_hint        :  1,        /* 0: to FSB, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1653: FILE: include/linux/pci_msi.h:125:
+                                            1: redirection */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1653: FILE: include/linux/pci_msi.h:125:
+                                            1: redirection */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1653: FILE: include/linux/pci_msi.h:125:
+                 redirection_hint        :  1,        /* 0: to FSB, 
+                                            1: redirection */ 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1653: FILE: include/linux/pci_msi.h:125:
+                                            1: redirection */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1654: FILE: include/linux/pci_msi.h:126:
+                 ext_dest_id       :  8,   /* Extended Dest. ID */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: include/linux/pci_msi.h:126:
+                 ext_dest_id       :  8,   /* Extended Dest. ID */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: include/linux/pci_msi.h:126:
+                 ext_dest_id       :  8,   /* Extended Dest. ID */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1655: FILE: include/linux/pci_msi.h:127:
+                 dest_id                 :  8,      /* Destination ID */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1655: FILE: include/linux/pci_msi.h:127:
+                 dest_id                 :  8,      /* Destination ID */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: include/linux/pci_msi.h:127:
+                 dest_id                 :  8,      /* Destination ID */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1656: FILE: include/linux/pci_msi.h:128:
+                 reserved_2        : 12;      /* 0xFEE */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1656: FILE: include/linux/pci_msi.h:128:
+                 reserved_2        : 12;      /* 0xFEE */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1657: FILE: include/linux/pci_msi.h:129:
+            }u;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1657: FILE: include/linux/pci_msi.h:129:
+            }u;$

ERROR:SPACING: space required after that close brace '}'
#1657: FILE: include/linux/pci_msi.h:129:
+            }u;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1658: FILE: include/linux/pci_msi.h:130:
+             __u32  value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: include/linux/pci_msi.h:130:
+             __u32  value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1659: FILE: include/linux/pci_msi.h:131:
+      }lo_address;$

ERROR:SPACING: space required after that close brace '}'
#1659: FILE: include/linux/pci_msi.h:131:
+      }lo_address;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: include/linux/pci_msi.h:132:
+     __u32       hi_address;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1661: FILE: include/linux/pci_msi.h:133:
+} __attribute__ ((packed));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: include/linux/pci_msi.h:136:
+     struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: include/linux/pci_msi.h:137:
+           __u32      type      : 5, /* {0: unused, 5h:MSI, 11h:MSI-X}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: include/linux/pci_msi.h:137:
+           __u32      type      : 5, /* {0: unused, 5h:MSI, 11h:MSI-X}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: include/linux/pci_msi.h:138:
+                 maskbit     : 1, /* mask-pending bit supported ?    */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1667: FILE: include/linux/pci_msi.h:138:
+           __u32      type      : 5, /* {0: unused, 5h:MSI, 11h:MSI-X}
+                 maskbit     : 1, /* mask-pending bit supported ?    */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: include/linux/pci_msi.h:139:
+                 reserved: 2, /* reserved                */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1668: FILE: include/linux/pci_msi.h:139:
+                 reserved: 2, /* reserved                */
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: include/linux/pci_msi.h:140:
+                 entry_nr: 8, /* specific enabled entry             */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: include/linux/pci_msi.h:141:
+                 current_cpu: 16;/* current destination cpu   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1671: FILE: include/linux/pci_msi.h:142:
+      }msi_attrib;$

ERROR:SPACING: space required after that close brace '}'
#1671: FILE: include/linux/pci_msi.h:142:
+      }msi_attrib;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1672: FILE: include/linux/pci_msi.h:143:
+     void *mask_entry_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1673: FILE: include/linux/pci_msi.h:144:
+     struct pci_dev *dev;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 555 errors, 758 warnings, 77 checks, 1480 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
