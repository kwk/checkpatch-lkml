WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The watch64 system allows the programmer to specify the approximate interval

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: include/linux/watch64.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'inclue' may be misspelled - perhaps 'include'?
#96: FILE: include/linux/watch64.h:2:
+ *  inclue/linux/watch64.h
     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#115: FILE: include/linux/watch64.h:21:
+#define WATCH64_INTERVAL (HZ/10)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#116: FILE: include/linux/watch64.h:22:
+#define WATCH64_MINIMUM  (HZ/20)
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/linux/watch64.h:33:
+ struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: include/linux/watch64.h:34:
+ unsigned long *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: include/linux/watch64.h:35:
+ unsigned long oldval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/linux/watch64.h:36:
+ u_int64_t total;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#130: FILE: include/linux/watch64.h:36:
+ u_int64_t total;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/watch64.h:37:
+ unsigned int interval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: include/linux/watch64.h:38:
+ int active;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: include/linux/watch64.h:39:
+ seqlock_t lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/linux/watch64.h:40:
+ struct rcu_head rcuhead;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: include/linux/watch64.h:51:
+int watch64_register(unsigned long* ptr, unsigned int interval);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#146: FILE: include/linux/watch64.h:52:
+int watch64_unregister(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#146: FILE: include/linux/watch64.h:52:
+int watch64_unregister(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: include/linux/watch64.h:53:
+void watch64_rcufree(struct rcu_head* p);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#148: FILE: include/linux/watch64.h:54:
+struct watch64* watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#148: FILE: include/linux/watch64.h:54:
+struct watch64* watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#149: FILE: include/linux/watch64.h:55:
+inline struct watch64* __watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#149: FILE: include/linux/watch64.h:55:
+inline struct watch64* __watch64_find(unsigned long* ptr);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#150: FILE: include/linux/watch64.h:56:
+int watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#150: FILE: include/linux/watch64.h:56:
+int watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: include/linux/watch64.h:57:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: include/linux/watch64.h:57:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#152: FILE: include/linux/watch64.h:58:
+int watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#152: FILE: include/linux/watch64.h:58:
+int watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#153: FILE: include/linux/watch64.h:59:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#153: FILE: include/linux/watch64.h:59:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#154: FILE: include/linux/watch64.h:60:
+int watch64_toggle(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#154: FILE: include/linux/watch64.h:60:
+int watch64_toggle(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#155: FILE: include/linux/watch64.h:61:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#155: FILE: include/linux/watch64.h:61:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#174: FILE: kernel/watch64.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#175: FILE: kernel/watch64.c:2:
+ *  kernel/watch64.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: kernel/watch64.c:11:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: kernel/watch64.c:11:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#217: FILE: kernel/watch64.c:44:
+int watch64_register(unsigned long* ptr, unsigned int interval)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/watch64.c:46:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#222: FILE: kernel/watch64.c:49:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#222: FILE: kernel/watch64.c:49:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/watch64.c:51:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#227: FILE: kernel/watch64.c:54:
+void watch64_rcufree(void* p)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#231: FILE: kernel/watch64.c:58:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#231: FILE: kernel/watch64.c:58:
+struct watch64* watch64_find(unsigned long* ptr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: kernel/watch64.c:60:
+ return NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#236: FILE: kernel/watch64.c:63:
+struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#236: FILE: kernel/watch64.c:63:
+struct watch64* __watch64_find(unsigned long* ptr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/watch64.c:65:
+ return NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#241: FILE: kernel/watch64.c:68:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#241: FILE: kernel/watch64.c:68:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/watch64.c:70:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#246: FILE: kernel/watch64.c:73:
+int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#246: FILE: kernel/watch64.c:73:
+int __watch64_disable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: kernel/watch64.c:75:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#251: FILE: kernel/watch64.c:78:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#251: FILE: kernel/watch64.c:78:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/watch64.c:80:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#256: FILE: kernel/watch64.c:83:
+int __watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#256: FILE: kernel/watch64.c:83:
+int __watch64_enable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: kernel/watch64.c:85:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#261: FILE: kernel/watch64.c:88:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#261: FILE: kernel/watch64.c:88:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/watch64.c:90:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#266: FILE: kernel/watch64.c:93:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#266: FILE: kernel/watch64.c:93:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

CHECK:SPACING: No space is necessary after a cast
#268: FILE: kernel/watch64.c:95:
+ return (u_int64_t) *ptr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: kernel/watch64.c:95:
+ return (u_int64_t) *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/watch64.c:106:
+ spin_lock(&watch64_biglock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: kernel/watch64.c:107:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: kernel/watch64.c:107:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: kernel/watch64.c:108:
+ if (watch64_setup==WATCH64_MAGIC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#281: FILE: kernel/watch64.c:108:
+ if (watch64_setup==WATCH64_MAGIC) {
+  spin_unlock(&watch64_biglock);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#281: FILE: kernel/watch64.c:108:
+ if (watch64_setup==WATCH64_MAGIC) {
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: kernel/watch64.c:109:
+  spin_unlock(&watch64_biglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: kernel/watch64.c:110:
+  return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: kernel/watch64.c:111:
+ }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: kernel/watch64.c:112:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: kernel/watch64.c:112:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/watch64.c:113:
+ printk(KERN_WARNING "watch64: 2003/08/22 Josef 'Jeff' Sipek <jeffpc@optonline.net>\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#286: FILE: kernel/watch64.c:113:
+ printk(KERN_WARNING "watch64: 2003/08/22 Josef 'Jeff' Sipek <jeffpc@optonline.net>\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: kernel/watch64.c:114:
+ printk(KERN_WARNING "watch64: Enabling Watch64 extensions...");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#287: FILE: kernel/watch64.c:114:
+ printk(KERN_WARNING "watch64: Enabling Watch64 extensions...");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: kernel/watch64.c:116:
+ init_timer(&watch64_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: kernel/watch64.c:117:
+ watch64_timer.function = watch64_run;$

CHECK:SPACING: No space is necessary after a cast
#291: FILE: kernel/watch64.c:118:
+ watch64_timer.data = (unsigned long) NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: kernel/watch64.c:118:
+ watch64_timer.data = (unsigned long) NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: kernel/watch64.c:119:
+ watch64_timer.expires = jiffies + WATCH64_MINIMUM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: kernel/watch64.c:120:
+ add_timer(&watch64_timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/watch64.c:122:
+ printk("done.\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#295: FILE: kernel/watch64.c:122:
+ printk("done.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: kernel/watch64.c:123:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/watch64.c:123:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/watch64.c:124:
+ watch64_setup = WATCH64_MAGIC;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: kernel/watch64.c:125:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/watch64.c:125:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/watch64.c:126:
+ spin_unlock(&watch64_biglock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: kernel/watch64.c:135:
+ struct list_head* entry;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#308: FILE: kernel/watch64.c:135:
+ struct list_head* entry;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/watch64.c:136:
+ struct watch64* watch_struct;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#309: FILE: kernel/watch64.c:136:
+ struct watch64* watch_struct;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: kernel/watch64.c:137:
+ unsigned long tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: kernel/watch64.c:139:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: kernel/watch64.c:140:
+ list_for_each_rcu(entry, &watch64_head) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#313: FILE: kernel/watch64.c:140:
+ list_for_each_rcu(entry, &watch64_head) {
+  watch_struct = list_entry(entry, struct watch64, list);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/watch64.c:141:
+  watch_struct = list_entry(entry, struct watch64, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: kernel/watch64.c:142:
+  if (*watch_struct->ptr != watch_struct->oldval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#315: FILE: kernel/watch64.c:142:
+  if (*watch_struct->ptr != watch_struct->oldval) {
+   tmp = *watch_struct->ptr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: kernel/watch64.c:143:
+   tmp = *watch_struct->ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: kernel/watch64.c:144:
+   if (tmp > watch_struct->oldval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#317: FILE: kernel/watch64.c:144:
+   if (tmp > watch_struct->oldval) {
+    write_seqlock(&watch_struct->lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: kernel/watch64.c:145:
+    write_seqlock(&watch_struct->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: kernel/watch64.c:146:
+    watch_struct->total += tmp - watch_struct->oldval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: kernel/watch64.c:147:
+    write_sequnlock(&watch_struct->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: kernel/watch64.c:148:
+   } else if (tmp < watch_struct->oldval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#321: FILE: kernel/watch64.c:148:
+   } else if (tmp < watch_struct->oldval) {
+    write_seqlock(&watch_struct->lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: kernel/watch64.c:149:
+    write_seqlock(&watch_struct->lock);$

CHECK:SPACING: No space is necessary after a cast
#323: FILE: kernel/watch64.c:150:
+    watch_struct->total += ((u_int64_t) 1<<BITS_PER_LONG) - watch_struct->oldval + tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: kernel/watch64.c:150:
+    watch_struct->total += ((u_int64_t) 1<<BITS_PER_LONG) - watch_struct->oldval + tmp;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#323: FILE: kernel/watch64.c:150:
+    watch_struct->total += ((u_int64_t) 1<<BITS_PER_LONG) - watch_struct->oldval + tmp;
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: kernel/watch64.c:151:
+    write_sequnlock(&watch_struct->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: kernel/watch64.c:152:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: kernel/watch64.c:153:
+   watch_struct->oldval = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: kernel/watch64.c:154:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: kernel/watch64.c:155:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: kernel/watch64.c:156:
+ rcu_read_unlock();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: kernel/watch64.c:157:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/watch64.c:157:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/watch64.c:158:
+ mod_timer(&watch64_timer, jiffies + WATCH64_MINIMUM);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#338: FILE: kernel/watch64.c:165:
+int watch64_register(unsigned long* ptr, unsigned int interval)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: kernel/watch64.c:167:
+ struct watch64* temp;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#340: FILE: kernel/watch64.c:167:
+ struct watch64* temp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: kernel/watch64.c:168:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: kernel/watch64.c:168:
+ $

CHECK:SPACING: No space is necessary after a cast
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);
                                                         ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*temp)...) over kmalloc(sizeof(struct watch64)...)
#342: FILE: kernel/watch64.c:169:
+ temp = (struct watch64*) kmalloc(sizeof(struct watch64),GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/watch64.c:171:
+ if (!temp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#344: FILE: kernel/watch64.c:171:
+ if (!temp)
+  return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: kernel/watch64.c:172:
+  return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/watch64.c:174:
+ if (watch64_setup!=WATCH64_MAGIC)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#347: FILE: kernel/watch64.c:174:
+ if (watch64_setup!=WATCH64_MAGIC)
+  watch64_init();

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#347: FILE: kernel/watch64.c:174:
+ if (watch64_setup!=WATCH64_MAGIC)
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: kernel/watch64.c:175:
+  watch64_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: kernel/watch64.c:177:
+ temp->ptr = ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: kernel/watch64.c:178:
+ temp->oldval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/watch64.c:179:
+ temp->total = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: kernel/watch64.c:180:
+ if (interval==0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#353: FILE: kernel/watch64.c:180:
+ if (interval==0)
+  temp->interval = WATCH64_INTERVAL;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#353: FILE: kernel/watch64.c:180:
+ if (interval==0)
              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#353: FILE: kernel/watch64.c:180:
+ if (interval==0)
[...]
+ else if (interval<WATCH64_MINIMUM) {
[...]
+ } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/watch64.c:181:
+  temp->interval = WATCH64_INTERVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: kernel/watch64.c:182:
+ else if (interval<WATCH64_MINIMUM) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#355: FILE: kernel/watch64.c:182:
+ else if (interval<WATCH64_MINIMUM) {
+  temp->interval = WATCH64_MINIMUM;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#355: FILE: kernel/watch64.c:182:
+ else if (interval<WATCH64_MINIMUM) {
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: kernel/watch64.c:183:
+  temp->interval = WATCH64_MINIMUM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: kernel/watch64.c:184:
+  printk("watch64: attempted to add new watch with interval below %d jiffies",WATCH64_MINIMUM);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: kernel/watch64.c:184:
+  printk("watch64: attempted to add new watch with interval below %d jiffies",WATCH64_MINIMUM);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: kernel/watch64.c:184:
+  printk("watch64: attempted to add new watch with interval below %d jiffies",WATCH64_MINIMUM);
                                                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: kernel/watch64.c:185:
+ } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#358: FILE: kernel/watch64.c:185:
+ } else
+  temp->interval = interval;

CHECK:BRACES: Unbalanced braces around else statement
#358: FILE: kernel/watch64.c:185:
+ } else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: kernel/watch64.c:186:
+  temp->interval = interval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: kernel/watch64.c:188:
+ temp->active = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: kernel/watch64.c:189:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/watch64.c:189:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: kernel/watch64.c:190:
+ seqlock_init(&temp->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: kernel/watch64.c:192:
+ list_add_rcu(&temp->list, &watch64_head);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: kernel/watch64.c:194:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#374: FILE: kernel/watch64.c:201:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#374: FILE: kernel/watch64.c:201:
+int watch64_unregister(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: kernel/watch64.c:203:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: kernel/watch64.c:204:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#377: FILE: kernel/watch64.c:204:
+ if (!st)
+  st = __watch64_find(ptr); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: kernel/watch64.c:205:
+  st = __watch64_find(ptr); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: kernel/watch64.c:205:
+  st = __watch64_find(ptr); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: kernel/watch64.c:207:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#380: FILE: kernel/watch64.c:207:
+ if (!st)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: kernel/watch64.c:208:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: kernel/watch64.c:210:
+ __watch64_disable(ptr, st);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: kernel/watch64.c:211:
+ list_del_rcu(&st->list);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: kernel/watch64.c:212:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: kernel/watch64.c:212:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: kernel/watch64.c:213:
+ call_rcu(&st->rcuhead, watch64_rcufree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: kernel/watch64.c:214:
+ rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: kernel/watch64.c:216:
+ return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: kernel/watch64.c:222:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: kernel/watch64.c:222:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#396: FILE: kernel/watch64.c:223:
+void watch64_rcufree(struct rcu_head* p)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: kernel/watch64.c:225:
+ kfree(container_of(p, struct watch64, rcuhead));$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#405: FILE: kernel/watch64.c:232:
+struct watch64* watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#405: FILE: kernel/watch64.c:232:
+struct watch64* watch64_find(unsigned long* ptr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: kernel/watch64.c:234:
+ struct watch64* tmp;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#407: FILE: kernel/watch64.c:234:
+ struct watch64* tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: kernel/watch64.c:235:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/watch64.c:235:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: kernel/watch64.c:236:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: kernel/watch64.c:237:
+ tmp = __watch64_find(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: kernel/watch64.c:238:
+ rcu_read_unlock();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: kernel/watch64.c:239:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: kernel/watch64.c:239:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: kernel/watch64.c:240:
+ return tmp;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#420: FILE: kernel/watch64.c:247:
+inline struct watch64* __watch64_find(unsigned long* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#420: FILE: kernel/watch64.c:247:
+inline struct watch64* __watch64_find(unsigned long* ptr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: kernel/watch64.c:249:
+ struct list_head* tmp;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#422: FILE: kernel/watch64.c:249:
+ struct list_head* tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: kernel/watch64.c:250:
+ struct watch64* watch64_struct;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#423: FILE: kernel/watch64.c:250:
+ struct watch64* watch64_struct;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: kernel/watch64.c:252:
+ list_for_each_rcu(tmp, &watch64_head) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#425: FILE: kernel/watch64.c:252:
+ list_for_each_rcu(tmp, &watch64_head) {
+  watch64_struct = list_entry(tmp, struct watch64, list);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: kernel/watch64.c:253:
+  watch64_struct = list_entry(tmp, struct watch64, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/watch64.c:254:
+  if (watch64_struct->ptr==ptr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#427: FILE: kernel/watch64.c:254:
+  if (watch64_struct->ptr==ptr)
+   return watch64_struct;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#427: FILE: kernel/watch64.c:254:
+  if (watch64_struct->ptr==ptr)
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/watch64.c:255:
+   return watch64_struct;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: kernel/watch64.c:256:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: kernel/watch64.c:258:
+ return NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#438: FILE: kernel/watch64.c:265:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#438: FILE: kernel/watch64.c:265:
+int watch64_disable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: kernel/watch64.c:267:
+ int tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: kernel/watch64.c:268:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: kernel/watch64.c:268:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: kernel/watch64.c:269:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: kernel/watch64.c:270:
+ tmp = __watch64_disable(ptr,st);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#443: FILE: kernel/watch64.c:270:
+ tmp = __watch64_disable(ptr,st);
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: kernel/watch64.c:271:
+ rcu_read_unlock();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: kernel/watch64.c:272:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: kernel/watch64.c:272:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: kernel/watch64.c:273:
+ return tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: kernel/watch64.c:275:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: kernel/watch64.c:275:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#453: FILE: kernel/watch64.c:280:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#453: FILE: kernel/watch64.c:280:
+inline int __watch64_disable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: kernel/watch64.c:282:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#455: FILE: kernel/watch64.c:282:
+ if (!st)
+  st = watch64_find(ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: kernel/watch64.c:283:
+  st = watch64_find(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: kernel/watch64.c:285:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#458: FILE: kernel/watch64.c:285:
+ if (!st)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/watch64.c:286:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: kernel/watch64.c:288:
+ st->active = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: kernel/watch64.c:290:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#470: FILE: kernel/watch64.c:297:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#470: FILE: kernel/watch64.c:297:
+int watch64_enable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/watch64.c:299:
+ int tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: kernel/watch64.c:300:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: kernel/watch64.c:300:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/watch64.c:301:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: kernel/watch64.c:302:
+ tmp = __watch64_enable(ptr,st);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#475: FILE: kernel/watch64.c:302:
+ tmp = __watch64_enable(ptr,st);
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: kernel/watch64.c:303:
+ rcu_read_unlock();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: kernel/watch64.c:304:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: kernel/watch64.c:304:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: kernel/watch64.c:305:
+ return tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: kernel/watch64.c:307:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: kernel/watch64.c:307:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#485: FILE: kernel/watch64.c:312:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#485: FILE: kernel/watch64.c:312:
+inline int __watch64_enable(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: kernel/watch64.c:314:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#487: FILE: kernel/watch64.c:314:
+ if (!st)
+  st = __watch64_find(ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: kernel/watch64.c:315:
+  st = __watch64_find(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/watch64.c:317:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#490: FILE: kernel/watch64.c:317:
+ if (!st)
+  return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/watch64.c:318:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: kernel/watch64.c:320:
+ st->oldval = *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: kernel/watch64.c:321:
+ write_seqlock(&st->lock);$

CHECK:SPACING: No space is necessary after a cast
#495: FILE: kernel/watch64.c:322:
+ st->total  = (u_int64_t) st->oldval;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/watch64.c:322:
+ st->total  = (u_int64_t) st->oldval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/watch64.c:323:
+ write_sequnlock(&st->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/watch64.c:324:
+ st->active = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: kernel/watch64.c:326:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#506: FILE: kernel/watch64.c:333:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#506: FILE: kernel/watch64.c:333:
+int watch64_toggle(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: kernel/watch64.c:335:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: kernel/watch64.c:336:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#509: FILE: kernel/watch64.c:336:
+ if (!st)
+  st = __watch64_find(ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: kernel/watch64.c:337:
+  st = __watch64_find(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: kernel/watch64.c:339:
+ if (!st) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#512: FILE: kernel/watch64.c:339:
+ if (!st) {
+  rcu_read_unlock();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: kernel/watch64.c:340:
+  rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: kernel/watch64.c:341:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: kernel/watch64.c:342:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: kernel/watch64.c:344:
+ if (st->active)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#517: FILE: kernel/watch64.c:344:
+ if (st->active)
+  __watch64_disable(ptr,st);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: kernel/watch64.c:345:
+  __watch64_disable(ptr,st);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: kernel/watch64.c:345:
+  __watch64_disable(ptr,st);
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: kernel/watch64.c:346:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#519: FILE: kernel/watch64.c:346:
+ else
+  __watch64_enable(ptr,st);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: kernel/watch64.c:347:
+  __watch64_enable(ptr,st);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#520: FILE: kernel/watch64.c:347:
+  __watch64_enable(ptr,st);
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: kernel/watch64.c:348:
+ rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: kernel/watch64.c:350:
+ return 0;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#530: FILE: kernel/watch64.c:357:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#530: FILE: kernel/watch64.c:357:
+inline u_int64_t watch64_getval(unsigned long* ptr, struct watch64* st)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/watch64.c:359:
+ unsigned int seq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/watch64.c:360:
+ u_int64_t total;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#533: FILE: kernel/watch64.c:360:
+ u_int64_t total;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: kernel/watch64.c:362:
+ rcu_read_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: kernel/watch64.c:363:
+ if (!st)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#536: FILE: kernel/watch64.c:363:
+ if (!st)
+  st = __watch64_find(ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: kernel/watch64.c:364:
+  st = __watch64_find(ptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: kernel/watch64.c:366:
+ if (!st) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#539: FILE: kernel/watch64.c:366:
+ if (!st) {
+  rcu_read_unlock();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: kernel/watch64.c:367:
+  rcu_read_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/watch64.c:368:
+  return *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/watch64.c:369:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: kernel/watch64.c:371:
+ do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#544: FILE: kernel/watch64.c:371:
+ do {
+  seq = read_seqbegin(&st->lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/watch64.c:372:
+  seq = read_seqbegin(&st->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: kernel/watch64.c:373:
+  total = st->total;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: kernel/watch64.c:374:
+ } while (read_seqretry(&st->lock, seq));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: kernel/watch64.c:375:
+ rcu_read_unlock();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: kernel/watch64.c:376:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/watch64.c:376:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: kernel/watch64.c:377:
+ return total;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#559: FILE: kernel/watch64.c:386:
+EXPORT_SYMBOL(watch64_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#560: FILE: kernel/watch64.c:387:
+EXPORT_SYMBOL(watch64_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#561: FILE: kernel/watch64.c:388:
+EXPORT_SYMBOL(watch64_find);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#562: FILE: kernel/watch64.c:389:
+EXPORT_SYMBOL(watch64_disable);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#563: FILE: kernel/watch64.c:390:
+EXPORT_SYMBOL(watch64_enable);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#564: FILE: kernel/watch64.c:391:
+EXPORT_SYMBOL(watch64_toggle);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#565: FILE: kernel/watch64.c:392:
+EXPORT_SYMBOL(watch64_getval);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253426.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 98 errors, 214 warnings, 13 checks, 506 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253426.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
