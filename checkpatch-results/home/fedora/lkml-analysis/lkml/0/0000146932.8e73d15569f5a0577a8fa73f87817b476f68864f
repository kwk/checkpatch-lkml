ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/scsi/sata_mv.c:91:
+^IMV_6XXX_FLAGS^I^I= (MV_FLAG_IRQ_COALESCE | $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#255: FILE: drivers/scsi/sata_mv.c:249:
+	unsigned		req_producer;		/* cp of req_in_ptr */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: drivers/scsi/sata_mv.c:250:
+	unsigned		rsp_consumer;		/* cp of rsp_out_ptr */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/scsi/sata_mv.c:345:
+^I^I.host_flags^I= (MV_COMMON_FLAGS | MV_6XXX_FLAGS | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: drivers/scsi/sata_mv.c:415:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: drivers/scsi/sata_mv.c:431:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/scsi/sata_mv.c:443:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#453: FILE: drivers/scsi/sata_mv.c:447:
+		if (!(EDMA_EN & reg)) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#456: FILE: drivers/scsi/sata_mv.c:450:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BRACES: braces {} are not necessary for single statement blocks
#463: FILE: drivers/scsi/sata_mv.c:457:
+	if (EDMA_EN & reg) {
+		printk(KERN_ERR "ata%u: Unable to stop eDMA\n", ap->id);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#464: FILE: drivers/scsi/sata_mv.c:458:
+		printk(KERN_ERR "ata%u: Unable to stop eDMA\n", ap->id);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#468: FILE: drivers/scsi/sata_mv.c:462:
+static void mv_dump_mem(void __iomem *start, unsigned bytes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#472: FILE: drivers/scsi/sata_mv.c:466:
+	int b, w;
+	for (b = 0; b < bytes; ) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#475: FILE: drivers/scsi/sata_mv.c:469:
+			printk("%08x ",readl(start + b));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#475: FILE: drivers/scsi/sata_mv.c:469:
+			printk("%08x ",readl(start + b));
 			              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#478: FILE: drivers/scsi/sata_mv.c:472:
+		printk("\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#482: FILE: drivers/scsi/sata_mv.c:476:
+}
+static void mv_dump_pci_cfg(struct pci_dev *pdev, unsigned bytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#482: FILE: drivers/scsi/sata_mv.c:476:
+static void mv_dump_pci_cfg(struct pci_dev *pdev, unsigned bytes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: drivers/scsi/sata_mv.c:481:
+	u32 dw;
+	for (b = 0; b < bytes; ) {

CHECK:SPACING: No space is necessary after a cast
#490: FILE: drivers/scsi/sata_mv.c:484:
+			(void) pci_read_config_dword(pdev,b,&dw);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#490: FILE: drivers/scsi/sata_mv.c:484:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#490: FILE: drivers/scsi/sata_mv.c:484:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#490: FILE: drivers/scsi/sata_mv.c:484:
+			(void) pci_read_config_dword(pdev,b,&dw);
 			                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#491: FILE: drivers/scsi/sata_mv.c:485:
+			printk("%08x ",dw);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#491: FILE: drivers/scsi/sata_mv.c:485:
+			printk("%08x ",dw);
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: drivers/scsi/sata_mv.c:488:
+		printk("\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#498: FILE: drivers/scsi/sata_mv.c:492:
+}
+static void mv_dump_all_regs(void __iomem *mmio_base, int port,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/scsi/sata_mv.c:496:
+^Ivoid __iomem *hc_base = mv_hc_base(mmio_base, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#507: FILE: drivers/scsi/sata_mv.c:501:
+	if (0 > port) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#508: FILE: drivers/scsi/sata_mv.c:502:
+		start_hc = start_port = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#514: FILE: drivers/scsi/sata_mv.c:508:
+		num_ports = num_hcs = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: drivers/scsi/sata_mv.c:510:
+^IDPRINTK("All registers for port(s) %u-%u:\n", start_port, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#519: FILE: drivers/scsi/sata_mv.c:513:
+	if (NULL != pdev) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#524: FILE: drivers/scsi/sata_mv.c:518:
+	mv_dump_mem(mmio_base+0xc00, 0x3c);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#525: FILE: drivers/scsi/sata_mv.c:519:
+	mv_dump_mem(mmio_base+0xd00, 0x34);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#526: FILE: drivers/scsi/sata_mv.c:520:
+	mv_dump_mem(mmio_base+0xf00, 0x4);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#527: FILE: drivers/scsi/sata_mv.c:521:
+	mv_dump_mem(mmio_base+0x1d00, 0x6c);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: drivers/scsi/sata_mv.c:529:
+		DPRINTK("EDMA regs (port %i):\n",p);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: drivers/scsi/sata_mv.c:531:
+		DPRINTK("SATA regs (port %i):\n",p);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#538: FILE: drivers/scsi/sata_mv.c:532:
+		mv_dump_mem(port_base+0x300, 0x60);
 		                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#576: FILE: drivers/scsi/sata_mv.c:598:
+		printk(KERN_ERR DRV_NAME ": PCI master won't flush\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#587: FILE: drivers/scsi/sata_mv.c:612:
+		printk(KERN_ERR DRV_NAME ": can't set global reset\n");

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#593: FILE: drivers/scsi/sata_mv.c:617:
+	/* clear reset and *reenable the PCI master* (not mentioned in spec) */
 	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#605: FILE: drivers/scsi/sata_mv.c:626:
+		printk(KERN_ERR DRV_NAME ": can't clear global reset\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#623: FILE: drivers/scsi/sata_mv.c:638:
+	if (hpriv->hp_flags & MV_HP_FLAG_MSI) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#641: FILE: drivers/scsi/sata_mv.c:656:
+	if (!pp) {
+		return -ENOMEM;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: drivers/scsi/sata_mv.c:661:
+^Imem = dma_alloc_coherent(dev, MV_PORT_PRIV_DMA_SZ, &mem_dma, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/scsi/sata_mv.c:669:
+^I/* First item in chunk of DMA memory: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: drivers/scsi/sata_mv.c:677:
+^I/* Second item: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: drivers/scsi/sata_mv.c:691:
+^Iwritelfl(EDMA_CFG_Q_DEPTH | EDMA_CFG_RD_BRST_EXT | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/scsi/sata_mv.c:695:
+^Iwritelfl(pp->crqb_dma & EDMA_REQ_Q_BASE_LO_MASK, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: drivers/scsi/sata_mv.c:702:
+^Iwritelfl(pp->crpb_dma & EDMA_RSP_Q_BASE_LO_MASK, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#694: FILE: drivers/scsi/sata_mv.c:705:
+	pp->req_producer = pp->rsp_consumer = 0;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#733: FILE: drivers/scsi/sata_mv.c:744:
+	if (0 < qc->n_elem) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#733: FILE: drivers/scsi/sata_mv.c:744:
+	if (0 < qc->n_elem) {
+		pp->sg_tbl[qc->n_elem - 1].flags_size |= EPRD_FLAG_END_OF_TBL;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#738: FILE: drivers/scsi/sata_mv.c:749:
+static inline unsigned mv_inc_q_index(unsigned *index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#738: FILE: drivers/scsi/sata_mv.c:749:
+static inline unsigned mv_inc_q_index(unsigned *index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#744: FILE: drivers/scsi/sata_mv.c:755:
+static inline void mv_crqb_pack_cmd(u16 *cmdw, u8 data, u8 addr, unsigned last)

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: drivers/scsi/sata_mv.c:769:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#758: FILE: drivers/scsi/sata_mv.c:769:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: drivers/scsi/sata_mv.c:769:
+ ^Iif (ATA_PROT_DMA != qc->tf.protocol) {$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#758: FILE: drivers/scsi/sata_mv.c:769:
+ 	if (ATA_PROT_DMA != qc->tf.protocol) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#758: FILE: drivers/scsi/sata_mv.c:769:
+ 	if (ATA_PROT_DMA != qc->tf.protocol) {
+		return;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: drivers/scsi/sata_mv.c:774:
+^Iassert(((readl(mv_ap_base(qc->ap) + EDMA_REQ_Q_IN_PTR_OFS) >> $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#769: FILE: drivers/scsi/sata_mv.c:780:
+	if (!(qc->tf.flags & ATA_TFLAG_WRITE)) {
+		flags |= CRQB_FLAG_READ;
+	}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#772: FILE: drivers/scsi/sata_mv.c:783:
+	assert(MV_MAX_Q_DEPTH > qc->tag);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: drivers/scsi/sata_mv.c:786:
+^Ipp->crqb[pp->req_producer].sg_addr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: drivers/scsi/sata_mv.c:788:
+^Ipp->crqb[pp->req_producer].sg_addr_hi = $

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#784: FILE: drivers/scsi/sata_mv.c:795:
+	/* Sadly, the CRQB cannot accomodate all registers--there are
 	                          ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: drivers/scsi/sata_mv.c:811:
+^I^Imv_crqb_pack_cmd(cw++, tf->hob_feature, ATA_REG_FEATURE, 0); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#813: FILE: drivers/scsi/sata_mv.c:824:
+		BUG_ON(tf->command);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for single statement blocks
#826: FILE: drivers/scsi/sata_mv.c:837:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP)) {
+		return;
+	}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#838: FILE: drivers/scsi/sata_mv.c:849:
+	if (ATA_PROT_DMA != qc->tf.protocol) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: drivers/scsi/sata_mv.c:865:
+^I       ((readl(port_mmio + EDMA_REQ_Q_OUT_PTR_OFS) >> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: drivers/scsi/sata_mv.c:893:
+^Iassert(((out_ptr >> EDMA_RSP_Q_PTR_SHIFT) & MV_MAX_Q_DEPTH_MASK) == $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: drivers/scsi/sata_mv.c:898:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#889: FILE: drivers/scsi/sata_mv.c:900:
+^Iassert(((readl(port_mmio + EDMA_RSP_Q_IN_PTR_OFS) >> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#890: FILE: drivers/scsi/sata_mv.c:901:
+^I^I EDMA_RSP_Q_PTR_SHIFT) & MV_MAX_Q_DEPTH_MASK) == $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1022: FILE: drivers/scsi/sata_mv.c:1034:
+		printk(KERN_ERR DRV_NAME ": PCI ERROR; PCI IRQ cause=0x%08x\n",

CHECK:SPACING: No space is necessary after a cast
#1039: FILE: drivers/scsi/sata_mv.c:1051:
+	return readb((void __iomem *) ap->ioaddr.error_addr);

WARNING:SPLIT_STRING: quoted string split across lines
#1080: FILE: drivers/scsi/sata_mv.c:1077:
+	VPRINTK("S-regs after ATA_RST: SStat 0x%08x SErr 0x%08x "
+		"SCtrl 0x%08x\n", mv_scr_read(ap, SCR_STATUS),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1096: FILE: drivers/scsi/sata_mv.c:1092:
+	VPRINTK("S-regs after PHY wake: SStat 0x%08x SErr 0x%08x "
+		"SCtrl 0x%08x\n", mv_scr_read(ap, SCR_STATUS),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1104: FILE: drivers/scsi/sata_mv.c:1098:
+		printk(KERN_INFO "ata%u: no device found (phy stat %08x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1134: FILE: drivers/scsi/sata_mv.c:1123:
+	printk(KERN_ERR "ata%u: Entering mv_eng_timeout\n",ap->id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1134: FILE: drivers/scsi/sata_mv.c:1123:
+	printk(KERN_ERR "ata%u: Entering mv_eng_timeout\n",ap->id);
 	                                                  ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mv_eng_timeout', this function's name, in a string
#1134: FILE: drivers/scsi/sata_mv.c:1123:
+	printk(KERN_ERR "ata%u: Entering mv_eng_timeout\n",ap->id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/scsi/sata_mv.c:1125:
+^Imv_dump_all_regs(ap->host_set->mmio_base, ap->port_no, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: drivers/scsi/sata_mv.c:1129:
+        printk(KERN_ERR "mmio_base %p ap %p qc %p scsi_cmnd %p &cmnd %p\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: drivers/scsi/sata_mv.c:1129:
+        printk(KERN_ERR "mmio_base %p ap %p qc %p scsi_cmnd %p &cmnd %p\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1140: FILE: drivers/scsi/sata_mv.c:1129:
+        printk(KERN_ERR "mmio_base %p ap %p qc %p scsi_cmnd %p &cmnd %p\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/scsi/sata_mv.c:1130:
+^I       ap->host_set->mmio_base, ap, qc, qc->scsicmd, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1148: FILE: drivers/scsi/sata_mv.c:1137:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: drivers/scsi/sata_mv.c:1141:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1152: FILE: drivers/scsi/sata_mv.c:1141:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: drivers/scsi/sata_mv.c:1142:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1153: FILE: drivers/scsi/sata_mv.c:1142:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1154: FILE: drivers/scsi/sata_mv.c:1143:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1154: FILE: drivers/scsi/sata_mv.c:1143:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1155: FILE: drivers/scsi/sata_mv.c:1144:
+^I ^I * not being called from the SCSI EH.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1155: FILE: drivers/scsi/sata_mv.c:1144:
+^I ^I * not being called from the SCSI EH.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1156: FILE: drivers/scsi/sata_mv.c:1145:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1156: FILE: drivers/scsi/sata_mv.c:1145:
+^I ^I */$

CHECK:SPACING: No space is necessary after a cast
#1166: FILE: drivers/scsi/sata_mv.c:1155:
+	unsigned long shd_base = (unsigned long) port_mmio + SHD_BLK_OFS;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1167: FILE: drivers/scsi/sata_mv.c:1156:
+	unsigned serr_ofs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: drivers/scsi/sata_mv.c:1158:
+^I/* PIO related setup $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/scsi/sata_mv.c:1161:
+^Iport->error_addr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1179: FILE: drivers/scsi/sata_mv.c:1168:
+^Iport->status_addr = $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1182: FILE: drivers/scsi/sata_mv.c:1171:
+	port->altstatus_addr = port->ctl_addr = shd_base + SHD_CTL_AST_OFS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/scsi/sata_mv.c:1196:
+^Iif ((MV_FLAG_GLBL_SFT_RST & probe_ent->host_flags) && $

WARNING:SPLIT_STRING: quoted string split across lines
#1231: FILE: drivers/scsi/sata_mv.c:1214:
+		VPRINTK("HC%i: HC config=0x%08x HC IRQ cause "
+			"(before clear)=0x%08x\n", hc,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1281: FILE: drivers/scsi/sata_mv.c:1260:
+^Iprintk(KERN_INFO DRV_NAME $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1281: FILE: drivers/scsi/sata_mv.c:1260:
+	printk(KERN_INFO DRV_NAME 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1283: FILE: drivers/scsi/sata_mv.c:1262:
+^I       pci_name(pdev), (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1283: FILE: drivers/scsi/sata_mv.c:1262:
+	       pci_name(pdev), (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1300: FILE: drivers/scsi/sata_mv.c:1276:
+		printk(KERN_INFO DRV_NAME " version " DRV_VERSION "\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1347: FILE: drivers/scsi/sata_mv.c:1331:
+	if (pci_enable_msi(pdev) == 0) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1369: FILE: drivers/scsi/sata_mv.c:1349:
+	if (MV_HP_FLAG_MSI & hpriv->hp_flags) {
[...]
+	} else {
[...]

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 57 warnings, 15 checks, 1291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
