WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#82: FILE: drivers/pnp/pnpbios/core.c:540:
+		printk(KERN_INFO "PnPBIOS: Disabled by pnpacpi\n");

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#123: FILE: drivers/pnp/Makefile:5:
interface.o quirks.o system.o

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: drivers/pnp/pnpacpi/core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/pnp/pnpacpi/core.c:6:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#151: FILE: drivers/pnp/pnpacpi/core.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/pnp/pnpacpi/core.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#152: FILE: drivers/pnp/pnpacpi/core.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/pnp/pnpacpi/core.c:21:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/pnp/pnpacpi/core.c:21:
+ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#161: FILE: drivers/pnp/pnpacpi/core.c:27:
+static int num = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: drivers/pnp/pnpacpi/core.c:47:
+	void *p = kmalloc(size, f);
+	if (p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#189: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#189: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#189: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#192: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#192: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#192: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: drivers/pnp/pnpacpi/core.c:87:
+static int pnpacpi_get_resources(struct pnp_dev * dev, struct

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/pnp/pnpacpi/core.c:90:
+^Istatus = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: drivers/pnp/pnpacpi/core.c:90:
+	acpi_status status;
+	status = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/pnp/pnpacpi/core.c:91:
+	status = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, 
+		&dev->res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#230: FILE: drivers/pnp/pnpacpi/core.c:95:
+static int pnpacpi_set_resources(struct pnp_dev * dev, struct

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/pnp/pnpacpi/core.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/pnp/pnpacpi/core.c:122:
+^Istatus = acpi_evaluate_object((acpi_handle)dev->data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/pnp/pnpacpi/core.c:123:
+	status = acpi_evaluate_object((acpi_handle)dev->data, 
+		"_DIS", NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/pnp/pnpacpi/core.c:170:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: drivers/pnp/pnpacpi/core.c:178:
+	if(dev->active) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != AE_NOT_FOUND'
#317: FILE: drivers/pnp/pnpacpi/core.c:181:
+		if (ACPI_FAILURE(status) && (status != AE_NOT_FOUND)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: drivers/pnp/pnpacpi/core.c:187:
+	if(dev->capabilities & PNP_CONFIGURABLE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/pnp/pnpacpi/core.c:188:
+^I^Istatus = pnpacpi_parse_resource_option_data(device->handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/pnp/pnpacpi/core.c:189:
+		status = pnpacpi_parse_resource_option_data(device->handle, 
+			dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != AE_NOT_FOUND'
#326: FILE: drivers/pnp/pnpacpi/core.c:190:
+		if (ACPI_FAILURE(status) && (status != AE_NOT_FOUND)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/pnp/pnpacpi/core.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/pnp/pnpacpi/core.c:204:
+^I^I^Idev_id = pnpacpi_kmalloc(sizeof(struct pnp_id), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: drivers/pnp/pnpacpi/core.c:205:
+			dev_id = pnpacpi_kmalloc(sizeof(struct pnp_id), 
+				GFP_KERNEL);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#354: FILE: drivers/pnp/pnpacpi/core.c:218:
+	num ++;
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: drivers/pnp/pnpacpi/core.c:229:
+static int acpi_pnp_remove (struct acpi_device *device, int type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: drivers/pnp/pnpacpi/core.c:232:
+	struct pnp_dev *dev = acpi_driver_data(device);
+	if (!dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/pnp/pnpacpi/core.c:240:
+static int acpi_pnp_match(struct acpi_device *device,
+	struct acpi_driver	*driver)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#408: FILE: drivers/pnp/pnpacpi/core.c:272:
+EXPORT_SYMBOL(pnpacpi_protocol);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#416: FILE: drivers/pnp/pnpacpi/Kconfig:4:
+config PNPACPI
+	bool "Plug and Play ACPI support (EXPERIMENTAL)"
+	depends on PNP && ACPI_BUS && EXPERIMENTAL
+	default y
+	---help---
+	  Linux uses the PNPACPI to autodetect built-in
+	  mainboard resources (e.g. parallel port resources).
+
+          Some features (e.g. real hotplug) are not currently
+          implemented.
+
+          If you would like the kernel to detect and allocate resources

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#438: FILE: drivers/pnp/pnpacpi/pnpacpi.h:1:
+#ifndef ACPI_PNP_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#446: FILE: drivers/pnp/pnpacpi/pnpacpi.h:9:
+acpi_status pnpacpi_parse_allocated_resource(acpi_handle, struct

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct
 np_resource_table*' should also have an identifier name
#446: FILE: drivers/pnp/pnpacpi/pnpacpi.h:9:
+acpi_status pnpacpi_parse_allocated_resource(acpi_handle, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#448: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct
 np_dev*' should also have an identifier name
#448: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_resource_table *' should also have an identifier name
#450: FILE: drivers/pnp/pnpacpi/pnpacpi.h:11:
+int pnpacpi_encode_resources(struct pnp_resource_table *, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct
 cpi_buffer *' should also have an identifier name
#450: FILE: drivers/pnp/pnpacpi/pnpacpi.h:11:
+int pnpacpi_encode_resources(struct pnp_resource_table *, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#452: FILE: drivers/pnp/pnpacpi/pnpacpi.h:12:
+int pnpacpi_build_resource_template(acpi_handle, struct acpi_buffer*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_buffer*' should also have an identifier name
#452: FILE: drivers/pnp/pnpacpi/pnpacpi.h:12:
+int pnpacpi_build_resource_template(acpi_handle, struct acpi_buffer*);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#468: FILE: drivers/pnp/pnpacpi/rsparser.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/pnp/pnpacpi/rsparser.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#487: FILE: drivers/pnp/pnpacpi/rsparser.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: drivers/pnp/pnpacpi/rsparser.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#488: FILE: drivers/pnp/pnpacpi/rsparser.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#499: FILE: drivers/pnp/pnpacpi/rsparser.c:29:
+#define valid_IRQ(i) (((i) != 0) && ((i) != 2))

WARNING:LINE_SPACING: Missing a blank line after declarations
#508: FILE: drivers/pnp/pnpacpi/rsparser.c:38:
+	int flag;
+	if (edge_level == ACPI_LEVEL_SENSITIVE) {

ERROR:SPACING: space required before the open parenthesis '('
#509: FILE: drivers/pnp/pnpacpi/rsparser.c:39:
+		if(active_high_low == ACPI_ACTIVE_LOW)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#514: FILE: drivers/pnp/pnpacpi/rsparser.c:44:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#514: FILE: drivers/pnp/pnpacpi/rsparser.c:44:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#515: FILE: drivers/pnp/pnpacpi/rsparser.c:45:
+		if(active_high_low == ACPI_ACTIVE_LOW)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: drivers/pnp/pnpacpi/rsparser.c:60:
+^Icase IORESOURCE_IRQ_HIGHLEVEL:^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#547: FILE: drivers/pnp/pnpacpi/rsparser.c:76:
+pnpacpi_parse_allocated_irqresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/pnp/pnpacpi/rsparser.c:77:
+pnpacpi_parse_allocated_irqresource(struct pnp_resource_table * res,
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: drivers/pnp/pnpacpi/rsparser.c:79:
+	int i = 0;
+	while (!(res->irq_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/pnp/pnpacpi/rsparser.c:80:
+	while (!(res->irq_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_IRQ)

CHECK:SPACING: No space is necessary after a cast
#561: FILE: drivers/pnp/pnpacpi/rsparser.c:88:
+		res->irq_resource[i].start =(unsigned long) irq;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#561: FILE: drivers/pnp/pnpacpi/rsparser.c:88:
+		res->irq_resource[i].start =(unsigned long) irq;
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/pnp/pnpacpi/rsparser.c:89:
+		res->irq_resource[i].end = (unsigned long) irq;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#567: FILE: drivers/pnp/pnpacpi/rsparser.c:94:
+pnpacpi_parse_allocated_dmaresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/pnp/pnpacpi/rsparser.c:95:
+pnpacpi_parse_allocated_dmaresource(struct pnp_resource_table * res,
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#571: FILE: drivers/pnp/pnpacpi/rsparser.c:97:
+	int i = 0;
+	while (!(res->dma_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/pnp/pnpacpi/rsparser.c:98:
+	while (!(res->dma_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_DMA)

CHECK:SPACING: No space is necessary after a cast
#581: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		res->dma_resource[i].start =(unsigned long) dma;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#581: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		res->dma_resource[i].start =(unsigned long) dma;
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#582: FILE: drivers/pnp/pnpacpi/rsparser.c:107:
+		res->dma_resource[i].end = (unsigned long) dma;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: drivers/pnp/pnpacpi/rsparser.c:112:
+pnpacpi_parse_allocated_ioresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/pnp/pnpacpi/rsparser.c:113:
+pnpacpi_parse_allocated_ioresource(struct pnp_resource_table * res,
+	int io, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#591: FILE: drivers/pnp/pnpacpi/rsparser.c:116:
+	int i = 0;
+	while (!(res->port_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/pnp/pnpacpi/rsparser.c:117:
+	while (!(res->port_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_PORT)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#597: FILE: drivers/pnp/pnpacpi/rsparser.c:121:
+		if (len <= 0 || (io + len -1) >= 0x10003) {
 		                          ^

CHECK:SPACING: No space is necessary after a cast
#601: FILE: drivers/pnp/pnpacpi/rsparser.c:125:
+		res->port_resource[i].start = (unsigned long) io;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#607: FILE: drivers/pnp/pnpacpi/rsparser.c:131:
+pnpacpi_parse_allocated_memresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: drivers/pnp/pnpacpi/rsparser.c:132:
+pnpacpi_parse_allocated_memresource(struct pnp_resource_table * res,
+	int mem, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#611: FILE: drivers/pnp/pnpacpi/rsparser.c:135:
+	int i = 0;
+	while (!(res->mem_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: drivers/pnp/pnpacpi/rsparser.c:136:
+	while (!(res->mem_resource[i].flags & IORESOURCE_UNSET) &&
+			(i < PNP_MAX_MEM))

CHECK:SPACING: No space is necessary after a cast
#621: FILE: drivers/pnp/pnpacpi/rsparser.c:144:
+		res->mem_resource[i].start = (unsigned long) mem;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/pnp/pnpacpi/rsparser.c:149:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#631: FILE: drivers/pnp/pnpacpi/rsparser.c:153:
+	struct pnp_resource_table * res_table = (struct pnp_resource_table

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->data.irq.number_of_interrupts > 0'
#636: FILE: drivers/pnp/pnpacpi/rsparser.c:157:
+		if ((res->data.irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.irq.interrupts[0])) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/pnp/pnpacpi/rsparser.c:158:
+		if ((res->data.irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.irq.interrupts[0])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#638: FILE: drivers/pnp/pnpacpi/rsparser.c:159:
+^I^I^Ipnpacpi_parse_allocated_irqresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: drivers/pnp/pnpacpi/rsparser.c:160:
+			pnpacpi_parse_allocated_irqresource(res_table, 
+				acpi_register_gsi(res->data.irq.interrupts[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: drivers/pnp/pnpacpi/rsparser.c:161:
+				acpi_register_gsi(res->data.irq.interrupts[0],
+					res->data.irq.edge_level,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->data.extended_irq.number_of_interrupts > 0'
#647: FILE: drivers/pnp/pnpacpi/rsparser.c:168:
+		if ((res->data.extended_irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.extended_irq.interrupts[0])) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: drivers/pnp/pnpacpi/rsparser.c:169:
+		if ((res->data.extended_irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.extended_irq.interrupts[0])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: drivers/pnp/pnpacpi/rsparser.c:170:
+^I^I^Ipnpacpi_parse_allocated_irqresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/pnp/pnpacpi/rsparser.c:171:
+			pnpacpi_parse_allocated_irqresource(res_table, 
+				acpi_register_gsi(res->data.extended_irq.interrupts[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#651: FILE: drivers/pnp/pnpacpi/rsparser.c:172:
+				acpi_register_gsi(res->data.extended_irq.interrupts[0],
+					res->data.extended_irq.edge_level,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: drivers/pnp/pnpacpi/rsparser.c:179:
+^I^I^Ipnpacpi_parse_allocated_dmaresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/pnp/pnpacpi/rsparser.c:180:
+			pnpacpi_parse_allocated_dmaresource(res_table, 
+					res->data.dma.channels[0]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: drivers/pnp/pnpacpi/rsparser.c:183:
+^I^Ipnpacpi_parse_allocated_ioresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#663: FILE: drivers/pnp/pnpacpi/rsparser.c:184:
+^I^I^I^Ires->data.io.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: drivers/pnp/pnpacpi/rsparser.c:184:
+		pnpacpi_parse_allocated_ioresource(res_table, 
+				res->data.io.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#667: FILE: drivers/pnp/pnpacpi/rsparser.c:188:
+^I^Ipnpacpi_parse_allocated_ioresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: drivers/pnp/pnpacpi/rsparser.c:189:
+^I^I^I^Ires->data.fixed_io.base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: drivers/pnp/pnpacpi/rsparser.c:189:
+		pnpacpi_parse_allocated_ioresource(res_table, 
+				res->data.fixed_io.base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/pnp/pnpacpi/rsparser.c:193:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/pnp/pnpacpi/rsparser.c:194:
+^I^I^I^Ires->data.memory24.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: drivers/pnp/pnpacpi/rsparser.c:194:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.memory24.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: drivers/pnp/pnpacpi/rsparser.c:198:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/pnp/pnpacpi/rsparser.c:199:
+^I^I^I^Ires->data.memory32.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/pnp/pnpacpi/rsparser.c:199:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.memory32.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: drivers/pnp/pnpacpi/rsparser.c:203:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/pnp/pnpacpi/rsparser.c:204:
+^I^I^I^Ires->data.fixed_memory32.range_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: drivers/pnp/pnpacpi/rsparser.c:204:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.fixed_memory32.range_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: drivers/pnp/pnpacpi/rsparser.c:208:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/pnp/pnpacpi/rsparser.c:209:
+^I^I^I^Ires->data.address16.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/pnp/pnpacpi/rsparser.c:209:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.address16.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: drivers/pnp/pnpacpi/rsparser.c:213:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/pnp/pnpacpi/rsparser.c:214:
+^I^I^I^Ires->data.address32.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/pnp/pnpacpi/rsparser.c:214:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.address32.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: drivers/pnp/pnpacpi/rsparser.c:218:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: drivers/pnp/pnpacpi/rsparser.c:219:
+^I^Ires->data.address64.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/pnp/pnpacpi/rsparser.c:219:
+		pnpacpi_parse_allocated_memresource(res_table, 
+		res->data.address64.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#702: FILE: drivers/pnp/pnpacpi/rsparser.c:223:
+^I^Ipnp_warn("PnPACPI: Alloc type : %d not handle", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: drivers/pnp/pnpacpi/rsparser.c:224:
+		pnp_warn("PnPACPI: Alloc type : %d not handle", 
+				res->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#706: FILE: drivers/pnp/pnpacpi/rsparser.c:227:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#724: FILE: drivers/pnp/pnpacpi/rsparser.c:242:
+	struct pnp_dma * dma;

ERROR:SPACING: space required before the open parenthesis '('
#732: FILE: drivers/pnp/pnpacpi/rsparser.c:250:
+	for(i = 0; i < p->number_of_channels; i++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#771: FILE: drivers/pnp/pnpacpi/rsparser.c:289:
+	pnp_register_dma_resource(option,dma);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#773: FILE: drivers/pnp/pnpacpi/rsparser.c:291:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: drivers/pnp/pnpacpi/rsparser.c:293:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#775: FILE: drivers/pnp/pnpacpi/rsparser.c:293:
+
+	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: drivers/pnp/pnpacpi/rsparser.c:295:
+static void pnpacpi_parse_irq_option(struct pnp_option *option,
+	struct acpi_resource_irq *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#780: FILE: drivers/pnp/pnpacpi/rsparser.c:298:
+	struct pnp_irq * irq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/pnp/pnpacpi/rsparser.c:299:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#788: FILE: drivers/pnp/pnpacpi/rsparser.c:306:
+	for(i = 0; i < p->number_of_interrupts; i++)

WARNING:RETURN_VOID: void function return statements are not generally useful
#794: FILE: drivers/pnp/pnpacpi/rsparser.c:312:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: drivers/pnp/pnpacpi/rsparser.c:315:
+static void pnpacpi_parse_ext_irq_option(struct pnp_option *option,
+	struct acpi_resource_ext_irq *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#800: FILE: drivers/pnp/pnpacpi/rsparser.c:318:
+	struct pnp_irq * irq;

ERROR:SPACING: space required before the open parenthesis '('
#808: FILE: drivers/pnp/pnpacpi/rsparser.c:326:
+	for(i = 0; i < p->number_of_interrupts; i++)

WARNING:RETURN_VOID: void function return statements are not generally useful
#814: FILE: drivers/pnp/pnpacpi/rsparser.c:332:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/pnp/pnpacpi/rsparser.c:336:
+pnpacpi_parse_port_option(struct pnp_option *option,
+	struct acpi_resource_io *io)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#820: FILE: drivers/pnp/pnpacpi/rsparser.c:338:
+	struct pnp_port * port;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: drivers/pnp/pnpacpi/rsparser.c:349:
+^Iport->flags = ACPI_DECODE_16 == io->io_decode ? $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#831: FILE: drivers/pnp/pnpacpi/rsparser.c:349:
+	port->flags = ACPI_DECODE_16 == io->io_decode ? 

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#833: FILE: drivers/pnp/pnpacpi/rsparser.c:351:
+	pnp_register_port_resource(option,port);
 	                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#835: FILE: drivers/pnp/pnpacpi/rsparser.c:353:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: drivers/pnp/pnpacpi/rsparser.c:357:
+pnpacpi_parse_fixed_port_option(struct pnp_option *option,
+	struct acpi_resource_fixed_io *io)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: drivers/pnp/pnpacpi/rsparser.c:359:
+	struct pnp_port * port;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#848: FILE: drivers/pnp/pnpacpi/rsparser.c:366:
+	port->min = port->max = io->base_address;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: drivers/pnp/pnpacpi/rsparser.c:370:
+	pnp_register_port_resource(option,port);
 	                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#854: FILE: drivers/pnp/pnpacpi/rsparser.c:372:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/pnp/pnpacpi/rsparser.c:376:
+pnpacpi_parse_mem24_option(struct pnp_option *option,
+	struct acpi_resource_mem24 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#860: FILE: drivers/pnp/pnpacpi/rsparser.c:378:
+	struct pnp_mem * mem;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#872: FILE: drivers/pnp/pnpacpi/rsparser.c:390:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: drivers/pnp/pnpacpi/rsparser.c:393:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#877: FILE: drivers/pnp/pnpacpi/rsparser.c:395:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/pnp/pnpacpi/rsparser.c:399:
+pnpacpi_parse_mem32_option(struct pnp_option *option,
+	struct acpi_resource_mem32 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#883: FILE: drivers/pnp/pnpacpi/rsparser.c:401:
+	struct pnp_mem * mem;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#895: FILE: drivers/pnp/pnpacpi/rsparser.c:413:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#898: FILE: drivers/pnp/pnpacpi/rsparser.c:416:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#900: FILE: drivers/pnp/pnpacpi/rsparser.c:418:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: drivers/pnp/pnpacpi/rsparser.c:422:
+pnpacpi_parse_fixed_mem32_option(struct pnp_option *option,
+	struct acpi_resource_fixed_mem32 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#906: FILE: drivers/pnp/pnpacpi/rsparser.c:424:
+	struct pnp_mem * mem;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#913: FILE: drivers/pnp/pnpacpi/rsparser.c:431:
+	mem->min = mem->max = p->range_base_address;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#917: FILE: drivers/pnp/pnpacpi/rsparser.c:435:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#920: FILE: drivers/pnp/pnpacpi/rsparser.c:438:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#922: FILE: drivers/pnp/pnpacpi/rsparser.c:440:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: drivers/pnp/pnpacpi/rsparser.c:447:
+static acpi_status pnpacpi_option_resource(struct acpi_resource *res, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/pnp/pnpacpi/rsparser.c:448:
+static acpi_status pnpacpi_option_resource(struct acpi_resource *res, 
+	void *data)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#938: FILE: drivers/pnp/pnpacpi/rsparser.c:455:
+	switch (res->id) {
+		case ACPI_RSTYPE_IRQ:
[...]
+		case ACPI_RSTYPE_EXT_IRQ:
[...]
+		case ACPI_RSTYPE_DMA:
[...]
+		case ACPI_RSTYPE_IO:
[...]
+		case ACPI_RSTYPE_FIXED_IO:
[...]
+		case ACPI_RSTYPE_MEM24:
[...]
+		case ACPI_RSTYPE_MEM32:
[...]
+		case ACPI_RSTYPE_FIXED_MEM32:
[...]
+		case ACPI_RSTYPE_START_DPF:
[...]
+		case ACPI_RSTYPE_END_DPF:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: drivers/pnp/pnpacpi/rsparser.c:461:
+			pnpacpi_parse_ext_irq_option(option,
+				&res->data.extended_irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/pnp/pnpacpi/rsparser.c:464:
+^I^I^Ipnpacpi_parse_dma_option(option, &res->data.dma);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: drivers/pnp/pnpacpi/rsparser.c:471:
+			pnpacpi_parse_fixed_port_option(option,
+				&res->data.fixed_io);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: drivers/pnp/pnpacpi/rsparser.c:481:
+			pnpacpi_parse_fixed_mem32_option(option,
+				&res->data.fixed_memory32);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#967: FILE: drivers/pnp/pnpacpi/rsparser.c:484:
+			switch (res->data.start_dpf.compatibility_priority) {
+				case ACPI_GOOD_CONFIGURATION:
[...]
+				case ACPI_ACCEPTABLE_CONFIGURATION:
[...]
+				case ACPI_SUB_OPTIMAL_CONFIGURATION:
[...]
+				default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#971: FILE: drivers/pnp/pnpacpi/rsparser.c:488:
+^I^I^I^I^I$

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#983: FILE: drivers/pnp/pnpacpi/rsparser.c:500:
+			/* TBD: Considering performace/robustness bits */
 			                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: drivers/pnp/pnpacpi/rsparser.c:504:
+^I^I^Iparse_data->option = option;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: drivers/pnp/pnpacpi/rsparser.c:512:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#999: FILE: drivers/pnp/pnpacpi/rsparser.c:516:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/pnp/pnpacpi/rsparser.c:517:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle handle, 
+	struct pnp_dev *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1009: FILE: drivers/pnp/pnpacpi/rsparser.c:526:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__PRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/pnp/pnpacpi/rsparser.c:527:
+	status = acpi_walk_resources(handle, METHOD_NAME__PRS, 
+		pnpacpi_option_resource, &parse_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: drivers/pnp/pnpacpi/rsparser.c:536:
+static acpi_status pnpacpi_count_resources(struct acpi_resource *res,
+	void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1022: FILE: drivers/pnp/pnpacpi/rsparser.c:539:
+	int *res_cnt = (int *)data;
+	switch (res->id) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1031: FILE: drivers/pnp/pnpacpi/rsparser.c:548:
+#if 0

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1036: FILE: drivers/pnp/pnpacpi/rsparser.c:553:
+		(*res_cnt) ++;
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: drivers/pnp/pnpacpi/rsparser.c:561:
+static acpi_status pnpacpi_type_resources(struct acpi_resource *res,
+	void *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: drivers/pnp/pnpacpi/rsparser.c:563:
+^Istruct acpi_resource **resource = (struct acpi_resource **)data;^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1047: FILE: drivers/pnp/pnpacpi/rsparser.c:564:
+	struct acpi_resource **resource = (struct acpi_resource **)data;	
+	switch (res->id) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1056: FILE: drivers/pnp/pnpacpi/rsparser.c:573:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1070: FILE: drivers/pnp/pnpacpi/rsparser.c:587:
+int pnpacpi_build_resource_template(acpi_handle handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/pnp/pnpacpi/rsparser.c:588:
+int pnpacpi_build_resource_template(acpi_handle handle, 
+	struct acpi_buffer *buffer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/pnp/pnpacpi/rsparser.c:594:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__CRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1078: FILE: drivers/pnp/pnpacpi/rsparser.c:595:
+	status = acpi_walk_resources(handle, METHOD_NAME__CRS, 
+		pnpacpi_count_resources, &res_cnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: drivers/pnp/pnpacpi/rsparser.c:608:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__CRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1092: FILE: drivers/pnp/pnpacpi/rsparser.c:609:
+	status = acpi_walk_resources(handle, METHOD_NAME__CRS, 
+		pnpacpi_type_resources, &resource);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: drivers/pnp/pnpacpi/rsparser.c:621:
+static void pnpacpi_encode_irq(struct acpi_resource *resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1105: FILE: drivers/pnp/pnpacpi/rsparser.c:622:
+static void pnpacpi_encode_irq(struct acpi_resource *resource, 
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/pnp/pnpacpi/rsparser.c:625:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: drivers/pnp/pnpacpi/rsparser.c:626:
+^Idecode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1110: FILE: drivers/pnp/pnpacpi/rsparser.c:627:
+	decode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, 
+		&active_high_low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1124: FILE: drivers/pnp/pnpacpi/rsparser.c:641:
+static void pnpacpi_encode_ext_irq(struct acpi_resource *resource,
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1127: FILE: drivers/pnp/pnpacpi/rsparser.c:644:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: drivers/pnp/pnpacpi/rsparser.c:645:
+^Idecode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1129: FILE: drivers/pnp/pnpacpi/rsparser.c:646:
+	decode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, 
+		&active_high_low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1144: FILE: drivers/pnp/pnpacpi/rsparser.c:661:
+static void pnpacpi_encode_dma(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: drivers/pnp/pnpacpi/rsparser.c:686:
+static void pnpacpi_encode_io(struct acpi_resource *resource,
+	struct resource *p)

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1174: FILE: drivers/pnp/pnpacpi/rsparser.c:691:
+	resource->data.io.io_decode = (p->flags & PNP_PORT_FLAG_16BITADDR)?
 	                                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: drivers/pnp/pnpacpi/rsparser.c:692:
+^I^IACPI_DECODE_16 : ACPI_DECODE_10; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1183: FILE: drivers/pnp/pnpacpi/rsparser.c:700:
+static void pnpacpi_encode_fixed_io(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1192: FILE: drivers/pnp/pnpacpi/rsparser.c:709:
+static void pnpacpi_encode_mem24(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1207: FILE: drivers/pnp/pnpacpi/rsparser.c:724:
+static void pnpacpi_encode_mem32(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1221: FILE: drivers/pnp/pnpacpi/rsparser.c:738:
+static void pnpacpi_encode_fixed_mem32(struct acpi_resource *resource,
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/pnp/pnpacpi/rsparser.c:749:
+int pnpacpi_encode_resources(struct pnp_resource_table *res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/pnp/pnpacpi/rsparser.c:750:
+int pnpacpi_encode_resources(struct pnp_resource_table *res_table, 
+	struct acpi_buffer *buffer)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1237: FILE: drivers/pnp/pnpacpi/rsparser.c:754:
+	int res_cnt = (buffer->length - 1)/sizeof(struct acpi_resource) - 1;
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1244: FILE: drivers/pnp/pnpacpi/rsparser.c:760:
+		switch(resource->id) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/pnp/pnpacpi/rsparser.c:763:
+^I^I^Ipnpacpi_encode_irq(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: drivers/pnp/pnpacpi/rsparser.c:764:
+			pnpacpi_encode_irq(resource, 
+				&res_table->irq_resource[irq]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1254: FILE: drivers/pnp/pnpacpi/rsparser.c:770:
+^I^I^Ipnpacpi_encode_ext_irq(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/pnp/pnpacpi/rsparser.c:771:
+			pnpacpi_encode_ext_irq(resource, 
+				&res_table->irq_resource[irq]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1260: FILE: drivers/pnp/pnpacpi/rsparser.c:776:
+^I^I^Ipnpacpi_encode_dma(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: drivers/pnp/pnpacpi/rsparser.c:777:
+			pnpacpi_encode_dma(resource, 
+				&res_table->dma_resource[dma]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1262: FILE: drivers/pnp/pnpacpi/rsparser.c:778:
+			dma ++;
 			    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: drivers/pnp/pnpacpi/rsparser.c:782:
+^I^I^Ipnpacpi_encode_io(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/pnp/pnpacpi/rsparser.c:783:
+			pnpacpi_encode_io(resource, 
+				&res_table->port_resource[port]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1268: FILE: drivers/pnp/pnpacpi/rsparser.c:784:
+			port ++;
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: drivers/pnp/pnpacpi/rsparser.c:789:
+			pnpacpi_encode_fixed_io(resource,
+				&res_table->port_resource[port]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1274: FILE: drivers/pnp/pnpacpi/rsparser.c:790:
+			port ++;
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1279: FILE: drivers/pnp/pnpacpi/rsparser.c:795:
+			pnpacpi_encode_mem24(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1280: FILE: drivers/pnp/pnpacpi/rsparser.c:796:
+			mem ++;
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: drivers/pnp/pnpacpi/rsparser.c:801:
+			pnpacpi_encode_mem32(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1286: FILE: drivers/pnp/pnpacpi/rsparser.c:802:
+			mem ++;
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/pnp/pnpacpi/rsparser.c:807:
+			pnpacpi_encode_fixed_mem32(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1292: FILE: drivers/pnp/pnpacpi/rsparser.c:808:
+			mem ++;
 			    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1298: FILE: drivers/pnp/pnpacpi/rsparser.c:814:
+		resource ++;
 		         ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1299: FILE: drivers/pnp/pnpacpi/rsparser.c:815:
+		i ++;
 		  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1374: FILE: drivers/pnp/pnpbios/core.c:540:
+		printk(KERN_INFO "PnPBIOS: Disabled by pnpacpi\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1422: FILE: drivers/pnp/pnpacpi/core.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1427: FILE: drivers/pnp/pnpacpi/core.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1439: FILE: drivers/pnp/pnpacpi/core.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1440: FILE: drivers/pnp/pnpacpi/core.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1442: FILE: drivers/pnp/pnpacpi/core.c:21:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: drivers/pnp/pnpacpi/core.c:21:
+ $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1448: FILE: drivers/pnp/pnpacpi/core.c:27:
+static int num = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1468: FILE: drivers/pnp/pnpacpi/core.c:47:
+	void *p = kmalloc(size, f);
+	if (p)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1476: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#1476: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1476: FILE: drivers/pnp/pnpacpi/core.c:55:
+#define TEST_HEX(c) \
+	if (!(('0' <= (c) && (c) <= '9') || ('A' <= (c) && (c) <= 'F'))) \
+		return 0

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1479: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#1479: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1479: FILE: drivers/pnp/pnpacpi/core.c:58:
+#define TEST_ALPHA(c) \
+	if (!('@' <= (c) || (c) <= 'Z')) \
+		return 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1508: FILE: drivers/pnp/pnpacpi/core.c:87:
+static int pnpacpi_get_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1508: FILE: drivers/pnp/pnpacpi/core.c:87:
+static int pnpacpi_get_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1511: FILE: drivers/pnp/pnpacpi/core.c:90:
+^Istatus = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1511: FILE: drivers/pnp/pnpacpi/core.c:90:
+	acpi_status status;
+	status = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1512: FILE: drivers/pnp/pnpacpi/core.c:91:
+	status = pnpacpi_parse_allocated_resource((acpi_handle)dev->data, 
+		&dev->res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1516: FILE: drivers/pnp/pnpacpi/core.c:95:
+static int pnpacpi_set_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1516: FILE: drivers/pnp/pnpacpi/core.c:95:
+static int pnpacpi_set_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1541: FILE: drivers/pnp/pnpacpi/core.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1543: FILE: drivers/pnp/pnpacpi/core.c:122:
+^Istatus = acpi_evaluate_object((acpi_handle)dev->data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1544: FILE: drivers/pnp/pnpacpi/core.c:123:
+	status = acpi_evaluate_object((acpi_handle)dev->data, 
+		"_DIS", NULL, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1591: FILE: drivers/pnp/pnpacpi/core.c:170:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#1599: FILE: drivers/pnp/pnpacpi/core.c:178:
+	if(dev->active) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != AE_NOT_FOUND'
#1602: FILE: drivers/pnp/pnpacpi/core.c:181:
+		if (ACPI_FAILURE(status) && (status != AE_NOT_FOUND)) {

ERROR:SPACING: space required before the open parenthesis '('
#1608: FILE: drivers/pnp/pnpacpi/core.c:187:
+	if(dev->capabilities & PNP_CONFIGURABLE) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1609: FILE: drivers/pnp/pnpacpi/core.c:188:
+^I^Istatus = pnpacpi_parse_resource_option_data(device->handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1610: FILE: drivers/pnp/pnpacpi/core.c:189:
+		status = pnpacpi_parse_resource_option_data(device->handle, 
+			dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != AE_NOT_FOUND'
#1611: FILE: drivers/pnp/pnpacpi/core.c:190:
+		if (ACPI_FAILURE(status) && (status != AE_NOT_FOUND)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1616: FILE: drivers/pnp/pnpacpi/core.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1625: FILE: drivers/pnp/pnpacpi/core.c:204:
+^I^I^Idev_id = pnpacpi_kmalloc(sizeof(struct pnp_id), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1626: FILE: drivers/pnp/pnpacpi/core.c:205:
+			dev_id = pnpacpi_kmalloc(sizeof(struct pnp_id), 
+				GFP_KERNEL);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1639: FILE: drivers/pnp/pnpacpi/core.c:218:
+	num ++;
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1650: FILE: drivers/pnp/pnpacpi/core.c:229:
+static int acpi_pnp_remove (struct acpi_device *device, int type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1653: FILE: drivers/pnp/pnpacpi/core.c:232:
+	struct pnp_dev *dev = acpi_driver_data(device);
+	if (!dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1661: FILE: drivers/pnp/pnpacpi/core.c:240:
+static int acpi_pnp_match(struct acpi_device *device,
+	struct acpi_driver	*driver)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1693: FILE: drivers/pnp/pnpacpi/core.c:272:
+EXPORT_SYMBOL(pnpacpi_protocol);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1700: FILE: drivers/pnp/pnpacpi/Kconfig:4:
+config PNPACPI
+	bool "Plug and Play ACPI support (EXPERIMENTAL)"
+	depends on PNP && ACPI_BUS && EXPERIMENTAL
+	default y
+	---help---
+	  Linux uses the PNPACPI to autodetect built-in
+	  mainboard resources (e.g. parallel port resources).
+
+          Some features (e.g. real hotplug) are not currently
+          implemented.
+
+          If you would like the kernel to detect and allocate resources to
+          your mainboard devices (on some systems they are disabled by the
+          BIOS) say Y here.  Also the PNPACPI can help prevent resource
+          conflicts between mainboard devices and other bus devices.
+++ 2.6/drivers/pnp/pnpacpi/pnpacpi.h	2004-10-18 17:42:28.023155128 +0800
+++ 2.6/drivers/pnp/pnpacpi/pnpacpi.h	2004-10-18 17:42:28.023155128 +0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1718: FILE: drivers/pnp/pnpacpi/pnpacpi.h:1:
+#ifndef ACPI_PNP_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#1726: FILE: drivers/pnp/pnpacpi/pnpacpi.h:9:
+acpi_status pnpacpi_parse_allocated_resource(acpi_handle, struct pnp_resource_table*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_resource_table*' should also have an identifier name
#1726: FILE: drivers/pnp/pnpacpi/pnpacpi.h:9:
+acpi_status pnpacpi_parse_allocated_resource(acpi_handle, struct pnp_resource_table*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#1727: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle, struct pnp_dev*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_dev*' should also have an identifier name
#1727: FILE: drivers/pnp/pnpacpi/pnpacpi.h:10:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle, struct pnp_dev*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pnp_resource_table *' should also have an identifier name
#1728: FILE: drivers/pnp/pnpacpi/pnpacpi.h:11:
+int pnpacpi_encode_resources(struct pnp_resource_table *, struct acpi_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_buffer *' should also have an identifier name
#1728: FILE: drivers/pnp/pnpacpi/pnpacpi.h:11:
+int pnpacpi_encode_resources(struct pnp_resource_table *, struct acpi_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#1729: FILE: drivers/pnp/pnpacpi/pnpacpi.h:12:
+int pnpacpi_build_resource_template(acpi_handle, struct acpi_buffer*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_buffer*' should also have an identifier name
#1729: FILE: drivers/pnp/pnpacpi/pnpacpi.h:12:
+int pnpacpi_build_resource_template(acpi_handle, struct acpi_buffer*);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1742: FILE: drivers/pnp/pnpacpi/rsparser.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1747: FILE: drivers/pnp/pnpacpi/rsparser.c:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1759: FILE: drivers/pnp/pnpacpi/rsparser.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1760: FILE: drivers/pnp/pnpacpi/rsparser.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#1770: FILE: drivers/pnp/pnpacpi/rsparser.c:29:
+#define valid_IRQ(i) (((i) != 0) && ((i) != 2))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1779: FILE: drivers/pnp/pnpacpi/rsparser.c:38:
+	int flag;
+	if (edge_level == ACPI_LEVEL_SENSITIVE) {

ERROR:SPACING: space required before the open parenthesis '('
#1780: FILE: drivers/pnp/pnpacpi/rsparser.c:39:
+		if(active_high_low == ACPI_ACTIVE_LOW)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1785: FILE: drivers/pnp/pnpacpi/rsparser.c:44:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1785: FILE: drivers/pnp/pnpacpi/rsparser.c:44:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#1786: FILE: drivers/pnp/pnpacpi/rsparser.c:45:
+		if(active_high_low == ACPI_ACTIVE_LOW)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1801: FILE: drivers/pnp/pnpacpi/rsparser.c:60:
+^Icase IORESOURCE_IRQ_HIGHLEVEL:^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1817: FILE: drivers/pnp/pnpacpi/rsparser.c:76:
+pnpacpi_parse_allocated_irqresource(struct pnp_resource_table * res, int irq)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1820: FILE: drivers/pnp/pnpacpi/rsparser.c:79:
+	int i = 0;
+	while (!(res->irq_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1821: FILE: drivers/pnp/pnpacpi/rsparser.c:80:
+	while (!(res->irq_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_IRQ)

CHECK:SPACING: No space is necessary after a cast
#1829: FILE: drivers/pnp/pnpacpi/rsparser.c:88:
+		res->irq_resource[i].start =(unsigned long) irq;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1829: FILE: drivers/pnp/pnpacpi/rsparser.c:88:
+		res->irq_resource[i].start =(unsigned long) irq;
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#1830: FILE: drivers/pnp/pnpacpi/rsparser.c:89:
+		res->irq_resource[i].end = (unsigned long) irq;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1835: FILE: drivers/pnp/pnpacpi/rsparser.c:94:
+pnpacpi_parse_allocated_dmaresource(struct pnp_resource_table * res, int dma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1838: FILE: drivers/pnp/pnpacpi/rsparser.c:97:
+	int i = 0;
+	while (!(res->dma_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1839: FILE: drivers/pnp/pnpacpi/rsparser.c:98:
+	while (!(res->dma_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_DMA)

CHECK:SPACING: No space is necessary after a cast
#1847: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		res->dma_resource[i].start =(unsigned long) dma;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1847: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		res->dma_resource[i].start =(unsigned long) dma;
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#1848: FILE: drivers/pnp/pnpacpi/rsparser.c:107:
+		res->dma_resource[i].end = (unsigned long) dma;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1853: FILE: drivers/pnp/pnpacpi/rsparser.c:112:
+pnpacpi_parse_allocated_ioresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1854: FILE: drivers/pnp/pnpacpi/rsparser.c:113:
+pnpacpi_parse_allocated_ioresource(struct pnp_resource_table * res,
+	int io, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1857: FILE: drivers/pnp/pnpacpi/rsparser.c:116:
+	int i = 0;
+	while (!(res->port_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1858: FILE: drivers/pnp/pnpacpi/rsparser.c:117:
+	while (!(res->port_resource[i].flags & IORESOURCE_UNSET) &&
+			i < PNP_MAX_PORT)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1862: FILE: drivers/pnp/pnpacpi/rsparser.c:121:
+		if (len <= 0 || (io + len -1) >= 0x10003) {
 		                          ^

CHECK:SPACING: No space is necessary after a cast
#1866: FILE: drivers/pnp/pnpacpi/rsparser.c:125:
+		res->port_resource[i].start = (unsigned long) io;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1872: FILE: drivers/pnp/pnpacpi/rsparser.c:131:
+pnpacpi_parse_allocated_memresource(struct pnp_resource_table * res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1873: FILE: drivers/pnp/pnpacpi/rsparser.c:132:
+pnpacpi_parse_allocated_memresource(struct pnp_resource_table * res,
+	int mem, int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1876: FILE: drivers/pnp/pnpacpi/rsparser.c:135:
+	int i = 0;
+	while (!(res->mem_resource[i].flags & IORESOURCE_UNSET) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1877: FILE: drivers/pnp/pnpacpi/rsparser.c:136:
+	while (!(res->mem_resource[i].flags & IORESOURCE_UNSET) &&
+			(i < PNP_MAX_MEM))

CHECK:SPACING: No space is necessary after a cast
#1885: FILE: drivers/pnp/pnpacpi/rsparser.c:144:
+		res->mem_resource[i].start = (unsigned long) mem;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1890: FILE: drivers/pnp/pnpacpi/rsparser.c:149:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: drivers/pnp/pnpacpi/rsparser.c:151:
+static acpi_status pnpacpi_allocated_resource(struct acpi_resource *res,
+	void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1894: FILE: drivers/pnp/pnpacpi/rsparser.c:153:
+	struct pnp_resource_table * res_table = (struct pnp_resource_table *)data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->data.irq.number_of_interrupts > 0'
#1898: FILE: drivers/pnp/pnpacpi/rsparser.c:157:
+		if ((res->data.irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.irq.interrupts[0])) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1899: FILE: drivers/pnp/pnpacpi/rsparser.c:158:
+		if ((res->data.irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.irq.interrupts[0])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1900: FILE: drivers/pnp/pnpacpi/rsparser.c:159:
+^I^I^Ipnpacpi_parse_allocated_irqresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1901: FILE: drivers/pnp/pnpacpi/rsparser.c:160:
+			pnpacpi_parse_allocated_irqresource(res_table, 
+				acpi_register_gsi(res->data.irq.interrupts[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1902: FILE: drivers/pnp/pnpacpi/rsparser.c:161:
+				acpi_register_gsi(res->data.irq.interrupts[0],
+					res->data.irq.edge_level,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->data.extended_irq.number_of_interrupts > 0'
#1909: FILE: drivers/pnp/pnpacpi/rsparser.c:168:
+		if ((res->data.extended_irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.extended_irq.interrupts[0])) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1910: FILE: drivers/pnp/pnpacpi/rsparser.c:169:
+		if ((res->data.extended_irq.number_of_interrupts > 0) &&
+			valid_IRQ(res->data.extended_irq.interrupts[0])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1911: FILE: drivers/pnp/pnpacpi/rsparser.c:170:
+^I^I^Ipnpacpi_parse_allocated_irqresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1912: FILE: drivers/pnp/pnpacpi/rsparser.c:171:
+			pnpacpi_parse_allocated_irqresource(res_table, 
+				acpi_register_gsi(res->data.extended_irq.interrupts[0],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1913: FILE: drivers/pnp/pnpacpi/rsparser.c:172:
+				acpi_register_gsi(res->data.extended_irq.interrupts[0],
+					res->data.extended_irq.edge_level,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1920: FILE: drivers/pnp/pnpacpi/rsparser.c:179:
+^I^I^Ipnpacpi_parse_allocated_dmaresource(res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1921: FILE: drivers/pnp/pnpacpi/rsparser.c:180:
+			pnpacpi_parse_allocated_dmaresource(res_table, 
+					res->data.dma.channels[0]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1924: FILE: drivers/pnp/pnpacpi/rsparser.c:183:
+^I^Ipnpacpi_parse_allocated_ioresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1925: FILE: drivers/pnp/pnpacpi/rsparser.c:184:
+^I^I^I^Ires->data.io.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1925: FILE: drivers/pnp/pnpacpi/rsparser.c:184:
+		pnpacpi_parse_allocated_ioresource(res_table, 
+				res->data.io.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1929: FILE: drivers/pnp/pnpacpi/rsparser.c:188:
+^I^Ipnpacpi_parse_allocated_ioresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1930: FILE: drivers/pnp/pnpacpi/rsparser.c:189:
+^I^I^I^Ires->data.fixed_io.base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1930: FILE: drivers/pnp/pnpacpi/rsparser.c:189:
+		pnpacpi_parse_allocated_ioresource(res_table, 
+				res->data.fixed_io.base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1934: FILE: drivers/pnp/pnpacpi/rsparser.c:193:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1935: FILE: drivers/pnp/pnpacpi/rsparser.c:194:
+^I^I^I^Ires->data.memory24.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1935: FILE: drivers/pnp/pnpacpi/rsparser.c:194:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.memory24.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1939: FILE: drivers/pnp/pnpacpi/rsparser.c:198:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1940: FILE: drivers/pnp/pnpacpi/rsparser.c:199:
+^I^I^I^Ires->data.memory32.min_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1940: FILE: drivers/pnp/pnpacpi/rsparser.c:199:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.memory32.min_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1944: FILE: drivers/pnp/pnpacpi/rsparser.c:203:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1945: FILE: drivers/pnp/pnpacpi/rsparser.c:204:
+^I^I^I^Ires->data.fixed_memory32.range_base_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1945: FILE: drivers/pnp/pnpacpi/rsparser.c:204:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.fixed_memory32.range_base_address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1949: FILE: drivers/pnp/pnpacpi/rsparser.c:208:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1950: FILE: drivers/pnp/pnpacpi/rsparser.c:209:
+^I^I^I^Ires->data.address16.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1950: FILE: drivers/pnp/pnpacpi/rsparser.c:209:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.address16.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1954: FILE: drivers/pnp/pnpacpi/rsparser.c:213:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1955: FILE: drivers/pnp/pnpacpi/rsparser.c:214:
+^I^I^I^Ires->data.address32.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1955: FILE: drivers/pnp/pnpacpi/rsparser.c:214:
+		pnpacpi_parse_allocated_memresource(res_table, 
+				res->data.address32.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1959: FILE: drivers/pnp/pnpacpi/rsparser.c:218:
+^I^Ipnpacpi_parse_allocated_memresource(res_table, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1960: FILE: drivers/pnp/pnpacpi/rsparser.c:219:
+^I^Ires->data.address64.min_address_range, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1960: FILE: drivers/pnp/pnpacpi/rsparser.c:219:
+		pnpacpi_parse_allocated_memresource(res_table, 
+		res->data.address64.min_address_range, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1964: FILE: drivers/pnp/pnpacpi/rsparser.c:223:
+^I^Ipnp_warn("PnPACPI: Alloc type : %d not handle", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1965: FILE: drivers/pnp/pnpacpi/rsparser.c:224:
+		pnp_warn("PnPACPI: Alloc type : %d not handle", 
+				res->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1968: FILE: drivers/pnp/pnpacpi/rsparser.c:227:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1972: FILE: drivers/pnp/pnpacpi/rsparser.c:231:
+acpi_status pnpacpi_parse_allocated_resource(acpi_handle handle, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1983: FILE: drivers/pnp/pnpacpi/rsparser.c:242:
+	struct pnp_dma * dma;

ERROR:SPACING: space required before the open parenthesis '('
#1991: FILE: drivers/pnp/pnpacpi/rsparser.c:250:
+	for(i = 0; i < p->number_of_channels; i++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2030: FILE: drivers/pnp/pnpacpi/rsparser.c:289:
+	pnp_register_dma_resource(option,dma);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2032: FILE: drivers/pnp/pnpacpi/rsparser.c:291:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2034: FILE: drivers/pnp/pnpacpi/rsparser.c:293:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2034: FILE: drivers/pnp/pnpacpi/rsparser.c:293:
+
+	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2036: FILE: drivers/pnp/pnpacpi/rsparser.c:295:
+static void pnpacpi_parse_irq_option(struct pnp_option *option,
+	struct acpi_resource_irq *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2039: FILE: drivers/pnp/pnpacpi/rsparser.c:298:
+	struct pnp_irq * irq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2040: FILE: drivers/pnp/pnpacpi/rsparser.c:299:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#2047: FILE: drivers/pnp/pnpacpi/rsparser.c:306:
+	for(i = 0; i < p->number_of_interrupts; i++)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2053: FILE: drivers/pnp/pnpacpi/rsparser.c:312:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2056: FILE: drivers/pnp/pnpacpi/rsparser.c:315:
+static void pnpacpi_parse_ext_irq_option(struct pnp_option *option,
+	struct acpi_resource_ext_irq *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2059: FILE: drivers/pnp/pnpacpi/rsparser.c:318:
+	struct pnp_irq * irq;

ERROR:SPACING: space required before the open parenthesis '('
#2067: FILE: drivers/pnp/pnpacpi/rsparser.c:326:
+	for(i = 0; i < p->number_of_interrupts; i++)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2073: FILE: drivers/pnp/pnpacpi/rsparser.c:332:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2077: FILE: drivers/pnp/pnpacpi/rsparser.c:336:
+pnpacpi_parse_port_option(struct pnp_option *option,
+	struct acpi_resource_io *io)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2079: FILE: drivers/pnp/pnpacpi/rsparser.c:338:
+	struct pnp_port * port;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2090: FILE: drivers/pnp/pnpacpi/rsparser.c:349:
+^Iport->flags = ACPI_DECODE_16 == io->io_decode ? $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2090: FILE: drivers/pnp/pnpacpi/rsparser.c:349:
+	port->flags = ACPI_DECODE_16 == io->io_decode ? 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2092: FILE: drivers/pnp/pnpacpi/rsparser.c:351:
+	pnp_register_port_resource(option,port);
 	                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2094: FILE: drivers/pnp/pnpacpi/rsparser.c:353:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2098: FILE: drivers/pnp/pnpacpi/rsparser.c:357:
+pnpacpi_parse_fixed_port_option(struct pnp_option *option,
+	struct acpi_resource_fixed_io *io)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2100: FILE: drivers/pnp/pnpacpi/rsparser.c:359:
+	struct pnp_port * port;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2107: FILE: drivers/pnp/pnpacpi/rsparser.c:366:
+	port->min = port->max = io->base_address;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2111: FILE: drivers/pnp/pnpacpi/rsparser.c:370:
+	pnp_register_port_resource(option,port);
 	                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2113: FILE: drivers/pnp/pnpacpi/rsparser.c:372:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2117: FILE: drivers/pnp/pnpacpi/rsparser.c:376:
+pnpacpi_parse_mem24_option(struct pnp_option *option,
+	struct acpi_resource_mem24 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2119: FILE: drivers/pnp/pnpacpi/rsparser.c:378:
+	struct pnp_mem * mem;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2131: FILE: drivers/pnp/pnpacpi/rsparser.c:390:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2134: FILE: drivers/pnp/pnpacpi/rsparser.c:393:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2136: FILE: drivers/pnp/pnpacpi/rsparser.c:395:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2140: FILE: drivers/pnp/pnpacpi/rsparser.c:399:
+pnpacpi_parse_mem32_option(struct pnp_option *option,
+	struct acpi_resource_mem32 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2142: FILE: drivers/pnp/pnpacpi/rsparser.c:401:
+	struct pnp_mem * mem;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2154: FILE: drivers/pnp/pnpacpi/rsparser.c:413:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2157: FILE: drivers/pnp/pnpacpi/rsparser.c:416:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2159: FILE: drivers/pnp/pnpacpi/rsparser.c:418:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2163: FILE: drivers/pnp/pnpacpi/rsparser.c:422:
+pnpacpi_parse_fixed_mem32_option(struct pnp_option *option,
+	struct acpi_resource_fixed_mem32 *p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2165: FILE: drivers/pnp/pnpacpi/rsparser.c:424:
+	struct pnp_mem * mem;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2172: FILE: drivers/pnp/pnpacpi/rsparser.c:431:
+	mem->min = mem->max = p->range_base_address;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2176: FILE: drivers/pnp/pnpacpi/rsparser.c:435:
+	mem->flags = (ACPI_READ_WRITE_MEMORY == p->read_write_attribute) ?

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2179: FILE: drivers/pnp/pnpacpi/rsparser.c:438:
+	pnp_register_mem_resource(option,mem);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2181: FILE: drivers/pnp/pnpacpi/rsparser.c:440:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2188: FILE: drivers/pnp/pnpacpi/rsparser.c:447:
+static acpi_status pnpacpi_option_resource(struct acpi_resource *res, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2189: FILE: drivers/pnp/pnpacpi/rsparser.c:448:
+static acpi_status pnpacpi_option_resource(struct acpi_resource *res, 
+	void *data)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2196: FILE: drivers/pnp/pnpacpi/rsparser.c:455:
+	switch (res->id) {
+		case ACPI_RSTYPE_IRQ:
[...]
+		case ACPI_RSTYPE_EXT_IRQ:
[...]
+		case ACPI_RSTYPE_DMA:
[...]
+		case ACPI_RSTYPE_IO:
[...]
+		case ACPI_RSTYPE_FIXED_IO:
[...]
+		case ACPI_RSTYPE_MEM24:
[...]
+		case ACPI_RSTYPE_MEM32:
[...]
+		case ACPI_RSTYPE_FIXED_MEM32:
[...]
+		case ACPI_RSTYPE_START_DPF:
[...]
+		case ACPI_RSTYPE_END_DPF:
[...]
+		default:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2202: FILE: drivers/pnp/pnpacpi/rsparser.c:461:
+			pnpacpi_parse_ext_irq_option(option,
+				&res->data.extended_irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2205: FILE: drivers/pnp/pnpacpi/rsparser.c:464:
+^I^I^Ipnpacpi_parse_dma_option(option, &res->data.dma);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2212: FILE: drivers/pnp/pnpacpi/rsparser.c:471:
+			pnpacpi_parse_fixed_port_option(option,
+				&res->data.fixed_io);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2222: FILE: drivers/pnp/pnpacpi/rsparser.c:481:
+			pnpacpi_parse_fixed_mem32_option(option,
+				&res->data.fixed_memory32);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2225: FILE: drivers/pnp/pnpacpi/rsparser.c:484:
+			switch (res->data.start_dpf.compatibility_priority) {
+				case ACPI_GOOD_CONFIGURATION:
[...]
+				case ACPI_ACCEPTABLE_CONFIGURATION:
[...]
+				case ACPI_SUB_OPTIMAL_CONFIGURATION:
[...]
+				default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2229: FILE: drivers/pnp/pnpacpi/rsparser.c:488:
+^I^I^I^I^I$

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#2241: FILE: drivers/pnp/pnpacpi/rsparser.c:500:
+			/* TBD: Considering performace/robustness bits */
 			                    ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2245: FILE: drivers/pnp/pnpacpi/rsparser.c:504:
+^I^I^Iparse_data->option = option;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2253: FILE: drivers/pnp/pnpacpi/rsparser.c:512:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2257: FILE: drivers/pnp/pnpacpi/rsparser.c:516:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2258: FILE: drivers/pnp/pnpacpi/rsparser.c:517:
+acpi_status pnpacpi_parse_resource_option_data(acpi_handle handle, 
+	struct pnp_dev *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2267: FILE: drivers/pnp/pnpacpi/rsparser.c:526:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__PRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2268: FILE: drivers/pnp/pnpacpi/rsparser.c:527:
+	status = acpi_walk_resources(handle, METHOD_NAME__PRS, 
+		pnpacpi_option_resource, &parse_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2277: FILE: drivers/pnp/pnpacpi/rsparser.c:536:
+static acpi_status pnpacpi_count_resources(struct acpi_resource *res,
+	void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2280: FILE: drivers/pnp/pnpacpi/rsparser.c:539:
+	int *res_cnt = (int *)data;
+	switch (res->id) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2289: FILE: drivers/pnp/pnpacpi/rsparser.c:548:
+#if 0

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2294: FILE: drivers/pnp/pnpacpi/rsparser.c:553:
+		(*res_cnt) ++;
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2302: FILE: drivers/pnp/pnpacpi/rsparser.c:561:
+static acpi_status pnpacpi_type_resources(struct acpi_resource *res,
+	void *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2304: FILE: drivers/pnp/pnpacpi/rsparser.c:563:
+^Istruct acpi_resource **resource = (struct acpi_resource **)data;^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2305: FILE: drivers/pnp/pnpacpi/rsparser.c:564:
+	struct acpi_resource **resource = (struct acpi_resource **)data;	
+	switch (res->id) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2314: FILE: drivers/pnp/pnpacpi/rsparser.c:573:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2328: FILE: drivers/pnp/pnpacpi/rsparser.c:587:
+int pnpacpi_build_resource_template(acpi_handle handle, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2329: FILE: drivers/pnp/pnpacpi/rsparser.c:588:
+int pnpacpi_build_resource_template(acpi_handle handle, 
+	struct acpi_buffer *buffer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2335: FILE: drivers/pnp/pnpacpi/rsparser.c:594:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__CRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2336: FILE: drivers/pnp/pnpacpi/rsparser.c:595:
+	status = acpi_walk_resources(handle, METHOD_NAME__CRS, 
+		pnpacpi_count_resources, &res_cnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2349: FILE: drivers/pnp/pnpacpi/rsparser.c:608:
+^Istatus = acpi_walk_resources(handle, METHOD_NAME__CRS, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2350: FILE: drivers/pnp/pnpacpi/rsparser.c:609:
+	status = acpi_walk_resources(handle, METHOD_NAME__CRS, 
+		pnpacpi_type_resources, &resource);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2362: FILE: drivers/pnp/pnpacpi/rsparser.c:621:
+static void pnpacpi_encode_irq(struct acpi_resource *resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2363: FILE: drivers/pnp/pnpacpi/rsparser.c:622:
+static void pnpacpi_encode_irq(struct acpi_resource *resource, 
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2366: FILE: drivers/pnp/pnpacpi/rsparser.c:625:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2367: FILE: drivers/pnp/pnpacpi/rsparser.c:626:
+^Idecode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2368: FILE: drivers/pnp/pnpacpi/rsparser.c:627:
+	decode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, 
+		&active_high_low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2382: FILE: drivers/pnp/pnpacpi/rsparser.c:641:
+static void pnpacpi_encode_ext_irq(struct acpi_resource *resource,
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2385: FILE: drivers/pnp/pnpacpi/rsparser.c:644:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2386: FILE: drivers/pnp/pnpacpi/rsparser.c:645:
+^Idecode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2387: FILE: drivers/pnp/pnpacpi/rsparser.c:646:
+	decode_irq_flags(p->flags & IORESOURCE_BITS, &edge_level, 
+		&active_high_low);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2402: FILE: drivers/pnp/pnpacpi/rsparser.c:661:
+static void pnpacpi_encode_dma(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2427: FILE: drivers/pnp/pnpacpi/rsparser.c:686:
+static void pnpacpi_encode_io(struct acpi_resource *resource,
+	struct resource *p)

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#2432: FILE: drivers/pnp/pnpacpi/rsparser.c:691:
+	resource->data.io.io_decode = (p->flags & PNP_PORT_FLAG_16BITADDR)?
 	                                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2433: FILE: drivers/pnp/pnpacpi/rsparser.c:692:
+^I^IACPI_DECODE_16 : ACPI_DECODE_10; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2441: FILE: drivers/pnp/pnpacpi/rsparser.c:700:
+static void pnpacpi_encode_fixed_io(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2450: FILE: drivers/pnp/pnpacpi/rsparser.c:709:
+static void pnpacpi_encode_mem24(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2465: FILE: drivers/pnp/pnpacpi/rsparser.c:724:
+static void pnpacpi_encode_mem32(struct acpi_resource *resource,
+	struct resource *p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2479: FILE: drivers/pnp/pnpacpi/rsparser.c:738:
+static void pnpacpi_encode_fixed_mem32(struct acpi_resource *resource,
+	struct resource *p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2490: FILE: drivers/pnp/pnpacpi/rsparser.c:749:
+int pnpacpi_encode_resources(struct pnp_resource_table *res_table, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2491: FILE: drivers/pnp/pnpacpi/rsparser.c:750:
+int pnpacpi_encode_resources(struct pnp_resource_table *res_table, 
+	struct acpi_buffer *buffer)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2495: FILE: drivers/pnp/pnpacpi/rsparser.c:754:
+	int res_cnt = (buffer->length - 1)/sizeof(struct acpi_resource) - 1;
 	                                  ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2496: FILE: drivers/pnp/pnpacpi/rsparser.c:755:
+	struct acpi_resource *resource = (struct acpi_resource*)buffer->pointer;

ERROR:SPACING: space required before the open parenthesis '('
#2501: FILE: drivers/pnp/pnpacpi/rsparser.c:760:
+		switch(resource->id) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2504: FILE: drivers/pnp/pnpacpi/rsparser.c:763:
+^I^I^Ipnpacpi_encode_irq(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2505: FILE: drivers/pnp/pnpacpi/rsparser.c:764:
+			pnpacpi_encode_irq(resource, 
+				&res_table->irq_resource[irq]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2511: FILE: drivers/pnp/pnpacpi/rsparser.c:770:
+^I^I^Ipnpacpi_encode_ext_irq(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2512: FILE: drivers/pnp/pnpacpi/rsparser.c:771:
+			pnpacpi_encode_ext_irq(resource, 
+				&res_table->irq_resource[irq]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2517: FILE: drivers/pnp/pnpacpi/rsparser.c:776:
+^I^I^Ipnpacpi_encode_dma(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2518: FILE: drivers/pnp/pnpacpi/rsparser.c:777:
+			pnpacpi_encode_dma(resource, 
+				&res_table->dma_resource[dma]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2519: FILE: drivers/pnp/pnpacpi/rsparser.c:778:
+			dma ++;
 			    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2523: FILE: drivers/pnp/pnpacpi/rsparser.c:782:
+^I^I^Ipnpacpi_encode_io(resource, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2524: FILE: drivers/pnp/pnpacpi/rsparser.c:783:
+			pnpacpi_encode_io(resource, 
+				&res_table->port_resource[port]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2525: FILE: drivers/pnp/pnpacpi/rsparser.c:784:
+			port ++;
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2530: FILE: drivers/pnp/pnpacpi/rsparser.c:789:
+			pnpacpi_encode_fixed_io(resource,
+				&res_table->port_resource[port]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2531: FILE: drivers/pnp/pnpacpi/rsparser.c:790:
+			port ++;
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2536: FILE: drivers/pnp/pnpacpi/rsparser.c:795:
+			pnpacpi_encode_mem24(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2537: FILE: drivers/pnp/pnpacpi/rsparser.c:796:
+			mem ++;
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2542: FILE: drivers/pnp/pnpacpi/rsparser.c:801:
+			pnpacpi_encode_mem32(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2543: FILE: drivers/pnp/pnpacpi/rsparser.c:802:
+			mem ++;
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2548: FILE: drivers/pnp/pnpacpi/rsparser.c:807:
+			pnpacpi_encode_fixed_mem32(resource,
+				&res_table->mem_resource[mem]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2549: FILE: drivers/pnp/pnpacpi/rsparser.c:808:
+			mem ++;
 			    ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2555: FILE: drivers/pnp/pnpacpi/rsparser.c:814:
+		resource ++;
 		         ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2556: FILE: drivers/pnp/pnpacpi/rsparser.c:815:
+		i ++;
 		  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239611.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 225 errors, 86 warnings, 171 checks, 2450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239611.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
