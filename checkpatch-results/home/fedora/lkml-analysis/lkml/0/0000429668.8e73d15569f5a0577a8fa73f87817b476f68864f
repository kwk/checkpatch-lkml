WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Does this looks any better than the last version?   I have moved the shrinking

WARNING:TYPO_SPELLING: 'implimented' may be misspelled - perhaps 'implemented'?
#36: 
As it stands now I have not implimented a delete function.   It would be pretty
                            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	           ChangeSet	1.549   -> 1.554  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	  include/linux/mm.h	1.81    -> 1.83   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	         fs/dcache.c	1.30    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	         mm/vmscan.c	1.107   -> 1.111  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	include/linux/slab.h	1.13    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	          fs/dquot.c	1.45    -> 1.47   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	           mm/slab.c	1.28    -> 1.31   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	          fs/inode.c	1.69    -> 1.71   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# 02/09/18	ed@oscar.et.ca	1.550

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# slab_callbacks_A2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# 02/09/18	ed@oscar.et.ca	1.551

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# convert ageable slab shrinking to use callbacks.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# 02/09/19	ed@oscar.et.ca	1.552

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# move the shrink functions to vmscan which is where the really do belong

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 02/09/20	ed@oscar.et.ca	1.553

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# small improvements

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# 02/09/20	ed@oscar.et.ca	1.554

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# cleanup

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#75: 
--- a/fs/dcache.c	Fri Sep 20 10:35:51 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/dcache.c:1332:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: include/linux/mm.h:399:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: include/linux/mm.h:404:
+ * when nr > 0 and we can age return 0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: include/linux/mm.h:405:
+ * when nr > 0 and we cannot age return nr $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/mm.h:418:
+extern void set_shrinker(int, shrinker_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#217: FILE: include/linux/mm.h:418:
+extern void set_shrinker(int, shrinker_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'shrinker_t' should also have an identifier name
#217: FILE: include/linux/mm.h:418:
+extern void set_shrinker(int, shrinker_t);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: include/linux/mm.h:420:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: mm/vmscan.c:95:
+        struct shrinker_s *shrinkerp;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: mm/vmscan.c:95:
+        struct shrinker_s *shrinkerp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: mm/vmscan.c:96:
+        shrinkerp = kmalloc(sizeof(struct shrinker_s),GFP_KERNEL);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: mm/vmscan.c:96:
+        struct shrinker_s *shrinkerp;
+        shrinkerp = kmalloc(sizeof(struct shrinker_s),GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: mm/vmscan.c:96:
+        shrinkerp = kmalloc(sizeof(struct shrinker_s),GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: mm/vmscan.c:96:
+        shrinkerp = kmalloc(sizeof(struct shrinker_s),GFP_KERNEL);
                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*shrinkerp)...) over kmalloc(sizeof(struct shrinker_s)...)
#254: FILE: mm/vmscan.c:96:
+        shrinkerp = kmalloc(sizeof(struct shrinker_s),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: mm/vmscan.c:97:
+        BUG_ON(!shrinkerp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: mm/vmscan.c:97:
+        BUG_ON(!shrinkerp);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: mm/vmscan.c:97:
+        BUG_ON(!shrinkerp);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: mm/vmscan.c:98:
+        shrinkerp->shrinker = theshrinker;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: mm/vmscan.c:98:
+        shrinkerp->shrinker = theshrinker;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: mm/vmscan.c:99:
+        shrinkerp->seeks = seeks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: mm/vmscan.c:99:
+        shrinkerp->seeks = seeks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: mm/vmscan.c:100:
+        shrinkerp->nr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: mm/vmscan.c:100:
+        shrinkerp->nr = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: mm/vmscan.c:101:
+        spin_lock(&shrinker_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: mm/vmscan.c:101:
+        spin_lock(&shrinker_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: mm/vmscan.c:102:
+        list_add(&shrinkerp->next, &shrinker_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: mm/vmscan.c:102:
+        list_add(&shrinkerp->next, &shrinker_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: mm/vmscan.c:103:
+        spin_unlock(&shrinker_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: mm/vmscan.c:103:
+        spin_unlock(&shrinker_lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: mm/vmscan.c:105:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: mm/vmscan.c:105:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: mm/vmscan.c:642:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: mm/vmscan.c:642:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: mm/vmscan.c:643:
+ 
+

WARNING:TYPO_SPELLING: 'encounted' may be misspelled - perhaps 'encountered'?
#316: FILE: mm/vmscan.c:653:
+ * If the vm encounted mapped pages on the LRU it increase the pressure on
              ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: mm/vmscan.c:668:
+		int entries = (*shrinkerp->shrinker)(0, gfp_mask);
+		if (!entries)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#333: FILE: mm/vmscan.c:670:
+		shrinkerp->nr += ((unsigned long)scanned*shrinkerp->seeks*entries) / pages + 1;
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#333: FILE: mm/vmscan.c:670:
+		shrinkerp->nr += ((unsigned long)scanned*shrinkerp->seeks*entries) / pages + 1;
 		                                                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429668.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 50 warnings, 6 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429668.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
