WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#117: FILE: arch/i386/pci/fixup.c:361:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/pci/fixup.c:377:
+^I^I^I * From information provided by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/i386/pci/fixup.c:384:
+			pci_read_config_byte(bridge, PCI_HEADER_TYPE,
+						&config_header);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: arch/i386/pci/fixup.c:385:
+^I^I^Iif ((config_header == PCI_HEADER_TYPE_BRIDGE) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config_header == PCI_HEADER_TYPE_BRIDGE'
#141: FILE: arch/i386/pci/fixup.c:385:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config_header == PCI_HEADER_TYPE_CARDBUS'
#141: FILE: arch/i386/pci/fixup.c:385:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#142: FILE: arch/i386/pci/fixup.c:386:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#142: FILE: arch/i386/pci/fixup.c:386:
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#142: FILE: arch/i386/pci/fixup.c:386:
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: arch/i386/pci/fixup.c:388:
+				pci_read_config_word(bridge, PCI_BRIDGE_CONTROL,
+							&config);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#154: FILE: arch/i386/pci/fixup.c:398:
+		printk(KERN_DEBUG "Boot video device is %s\n", pci_name(pdev));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#167: FILE: arch/ia64/pci/fixup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#193: FILE: arch/ia64/pci/fixup.c:27:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#201: FILE: arch/ia64/pci/fixup.c:35:
+	if ((strcmp(platform_name, "dig") != 0)
+	    && (strcmp(platform_name, "hpzx1")  != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: arch/ia64/pci/fixup.c:48:
+^I^I^I * From information provided by $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: arch/ia64/pci/fixup.c:55:
+			pci_read_config_byte(bridge, PCI_HEADER_TYPE,
+						&config_header);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/ia64/pci/fixup.c:56:
+^I^I^Iif ((config_header == PCI_HEADER_TYPE_BRIDGE) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config_header == PCI_HEADER_TYPE_BRIDGE'
#222: FILE: arch/ia64/pci/fixup.c:56:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config_header == PCI_HEADER_TYPE_CARDBUS'
#222: FILE: arch/ia64/pci/fixup.c:56:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#223: FILE: arch/ia64/pci/fixup.c:57:
+			if ((config_header == PCI_HEADER_TYPE_BRIDGE) 
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#223: FILE: arch/ia64/pci/fixup.c:57:
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){
 			    ^

ERROR:SPACING: space required before the open brace '{'
#223: FILE: arch/ia64/pci/fixup.c:57:
+			    ||(config_header == PCI_HEADER_TYPE_CARDBUS)){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: arch/ia64/pci/fixup.c:59:
+				pci_read_config_word(bridge, PCI_BRIDGE_CONTROL,
+							&config);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#235: FILE: arch/ia64/pci/fixup.c:69:
+		printk(KERN_DEBUG "Boot video device is %s\n", pci_name(pdev));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000026060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 5 warnings, 11 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000026060.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
