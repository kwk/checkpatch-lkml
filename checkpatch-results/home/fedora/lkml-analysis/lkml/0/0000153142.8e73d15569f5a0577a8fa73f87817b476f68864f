WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#19: 
Subject: [PATCH 17/25] NTFS: Fixup handling of sparse, compressed, and

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
[PATCH 17/25] NTFS: Fixup handling of sparse, compressed, and encrypted attributes in

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetCompressed>
#70: FILE: fs/ntfs/inode.c:1018:
+				NInoSetCompressed(ni);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#94: FILE: fs/ntfs/inode.c:1032:
+					ntfs_error(vi->i_sb, "Found unknown "
+							"compression method "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#95: FILE: fs/ntfs/inode.c:1033:
+							"compression method "
+							"or corrupt file.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetSparse>
#102: FILE: fs/ntfs/inode.c:1038:
+				NInoSetSparse(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoCompressed>
#105: FILE: fs/ntfs/inode.c:1041:
+			if (NInoCompressed(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#107: FILE: fs/ntfs/inode.c:1043:
+				ntfs_error(vi->i_sb, "Found encrypted and "
+						"compressed data.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetEncrypted>
#110: FILE: fs/ntfs/inode.c:1046:
+			NInoSetEncrypted(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSetNonResident>
#113: FILE: fs/ntfs/inode.c:1049:
+			NInoSetNonResident(ni);

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparse>
#114: FILE: fs/ntfs/inode.c:1050:
+			if (NInoCompressed(ni) || NInoSparse(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: fs/ntfs/inode.c:1054:
 					ntfs_error(vi->i_sb, "Found "
+							"nonstandard "

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: fs/ntfs/inode.c:1055:
+							"nonstandard "
+							"compression unit (%u "

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: fs/ntfs/inode.c:1056:
+							"compression unit (%u "
+							"instead of 4).  "

WARNING:SPLIT_STRING: quoted string split across lines
#126: FILE: fs/ntfs/inode.c:1057:
+							"instead of 4).  "
+							"Cannot handle this.",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'a->data.non_resident.compression_unit'
#128: FILE: fs/ntfs/inode.c:1059:
+							a->data.non_resident.
+							compression_unit);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ni->type != AT_DATA'
#154: FILE: fs/ntfs/inode.c:1219:
+			if ((ni->type != AT_DATA) || (ni->type == AT_DATA &&
+					ni->name_len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: fs/ntfs/inode.c:1220:
+			if ((ni->type != AT_DATA) || (ni->type == AT_DATA &&
+					ni->name_len)) {

WARNING:SPLIT_STRING: quoted string split across lines
#157: FILE: fs/ntfs/inode.c:1222:
+				ntfs_error(vi->i_sb, "Found compressed "
+						"non-data or named data "

WARNING:SPLIT_STRING: quoted string split across lines
#158: FILE: fs/ntfs/inode.c:1223:
+						"non-data or named data "
+						"attribute.  Please report "

WARNING:SPLIT_STRING: quoted string split across lines
#159: FILE: fs/ntfs/inode.c:1224:
+						"attribute.  Please report "
+						"you saw this message to "

WARNING:SPLIT_STRING: quoted string split across lines
#160: FILE: fs/ntfs/inode.c:1225:
+						"you saw this message to "
+						"linux-ntfs-dev@lists."

WARNING:SPLIT_STRING: quoted string split across lines
#161: FILE: fs/ntfs/inode.c:1226:
+						"linux-ntfs-dev@lists."
+						"sourceforge.net");

WARNING:SPLIT_STRING: quoted string split across lines
#166: FILE: fs/ntfs/inode.c:1231:
+				ntfs_error(vi->i_sb, "Found compressed "
+						"attribute but compression is "

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: fs/ntfs/inode.c:1232:
+						"attribute but compression is "
+						"disabled due to cluster size "

WARNING:SPLIT_STRING: quoted string split across lines
#168: FILE: fs/ntfs/inode.c:1233:
+						"disabled due to cluster size "
+						"(%i) > 4kiB.",

WARNING:SPLIT_STRING: quoted string split across lines
#175: FILE: fs/ntfs/inode.c:1240:
+				ntfs_error(vi->i_sb, "Found unknown "
+						"compression method.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoMstProtected>
#183: FILE: fs/ntfs/inode.c:1248:
+		if (NInoMstProtected(ni) && ni->type != AT_INDEX_ROOT) {

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: fs/ntfs/inode.c:1250:
+			ntfs_error(vi->i_sb, "Found mst protected attribute "
+					"but the attribute is %s.  Please "

WARNING:SPLIT_STRING: quoted string split across lines
#186: FILE: fs/ntfs/inode.c:1251:
+					"but the attribute is %s.  Please "
+					"report you saw this message to "

WARNING:SPLIT_STRING: quoted string split across lines
#187: FILE: fs/ntfs/inode.c:1252:
+					"report you saw this message to "
+					"linux-ntfs-dev@lists.sourceforge.net",

WARNING:SPLIT_STRING: quoted string split across lines
#198: FILE: fs/ntfs/inode.c:1263:
+			ntfs_error(vi->i_sb, "Found encrypted and compressed "
+					"data.");

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: fs/ntfs/inode.c:1272:
+			ntfs_error(vi->i_sb, "Found mst protected attribute "
+					"but the attribute is encrypted.  "

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: fs/ntfs/inode.c:1273:
+					"but the attribute is encrypted.  "
+					"Please report you saw this message "

WARNING:SPLIT_STRING: quoted string split across lines
#209: FILE: fs/ntfs/inode.c:1274:
+					"Please report you saw this message "
+					"to linux-ntfs-dev@lists.sourceforge."

WARNING:SPLIT_STRING: quoted string split across lines
#210: FILE: fs/ntfs/inode.c:1275:
+					"to linux-ntfs-dev@lists.sourceforge."
+					"net");

WARNING:SPLIT_STRING: quoted string split across lines
#215: FILE: fs/ntfs/inode.c:1280:
+			ntfs_error(vi->i_sb, "Found encrypted non-data "
+					"attribute.");

WARNING:SPLIT_STRING: quoted string split across lines
#233: FILE: fs/ntfs/inode.c:1295:
 			ntfs_error(vi->i_sb, "Found mst protected attribute "
+					"but the attribute is resident.  "

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: fs/ntfs/inode.c:1296:
+					"but the attribute is resident.  "
+					"Please report you saw this message to "

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: fs/ntfs/inode.c:1323:
+		if ((NInoCompressed(ni) || NInoSparse(ni)) &&
+				ni->type != AT_INDEX_ROOT) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153142.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 30 warnings, 10 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153142.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
