WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- Push poll_timeout down from the hwgroup to the channel. We are resetting the

WARNING:REPEATED_WORD: Possible repeated word: 'Crap'
#47: 
   (OK it was masked by reportig too early that it finished...  Crap Crap utter

WARNING:TYPO_SPELLING: 'Milion' may be misspelled - perhaps 'Million'?
#51: 
   And now the 1 Milion EUR question for everybody who loves to put driver
                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'blah'
#54: 
   How the hell could echo > /proc/ide/ide0/settings blah blah blah blah handle

WARNING:REPEATED_WORD: Possible repeated word: 'blah'
#54: 
   How the hell could echo > /proc/ide/ide0/settings blah blah blah blah handle

WARNING:REPEATED_WORD: Possible repeated word: 'blah'
#54: 
   How the hell could echo > /proc/ide/ide0/settings blah blah blah blah handle

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: drivers/ide/ide.c:205:
+		drive->select.all	= (unit<<4)|0xa0;
 		                 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#130: FILE: drivers/ide/ide.c:205:
+		drive->select.all	= (unit<<4)|0xa0;
 		                 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: drivers/ide/ide.c:430:
+	SELECT_DRIVE(ch,drive);
 	               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/ide/ide.c:464:
+		printk("%s: reset timed-out, status=0x%02x\n", ch->name, stat);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: drivers/ide/ide.c:467:
+		printk("%s: reset: ", ch->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch->resetproc"
#314: FILE: drivers/ide/ide.c:577:
+	if (ch->resetproc != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#337: FILE: drivers/ide/ide.c:770:
+	printk(KERN_INFO "%s: recalibrating!\n", drive->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!handler"
#430: FILE: drivers/ide/ide.c:1588:
+	if (handler == NULL || ch->poll_timeout != 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drive->channel->tuneproc"
#486: FILE: drivers/ide/ide.c:2411:
+	if (drive->channel->tuneproc != NULL)

CHECK:SPACING: No space is necessary after a cast
#487: FILE: drivers/ide/ide.c:2412:
+		drive->channel->tuneproc(drive, (u8) arg);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#511: FILE: drivers/ide/ide-disk.c:307:
+		extern ide_startstop_t promise_do_request(struct ata_device *, struct request *, sector_t);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#511: FILE: drivers/ide/ide-disk.c:307:
+		extern ide_startstop_t promise_do_request(struct ata_device *, struct request *, sector_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#511: FILE: drivers/ide/ide-disk.c:307:
+		extern ide_startstop_t promise_do_request(struct ata_device *, struct request *, sector_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#511: FILE: drivers/ide/ide-disk.c:307:
+		extern ide_startstop_t promise_do_request(struct ata_device *, struct request *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#511: FILE: drivers/ide/ide-disk.c:307:
+		extern ide_startstop_t promise_do_request(struct ata_device *, struct request *, sector_t);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#536: FILE: drivers/ide/ide-disk.c:389:
+static void idedisk_release(struct inode *inode, struct file *filp, struct ata_device *drive)
                                                               ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#663: FILE: drivers/ide/ide-disk.c:518:
+	if (!ide_raw_taskfile(drive, &args)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#668: FILE: drivers/ide/ide-disk.c:523:
+		return 0;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#668: FILE: drivers/ide/ide-disk.c:523:
+	} else

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#686: FILE: drivers/ide/ide-disk.c:539:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: drivers/ide/ide-disk.c:747:
+        ide_raw_taskfile(drive, &args);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: drivers/ide/ide-disk.c:747:
+        ide_raw_taskfile(drive, &args);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#777: FILE: drivers/ide/ide-disk.c:1036:
+#if 0

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#779: FILE: drivers/ide/ide-disk.c:1038:
 	if (id->max_multsect) {
+

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#780: FILE: drivers/ide/ide-disk.c:1039:
+		/* FIXME: reenable this again after making it to use
 		          ^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#922: FILE: drivers/ide/ide-taskfile.c:870:
+#if 0

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1061: FILE: drivers/ide/pdc4030.c:546:
+ide_startstop_t do_pdc4030_io(struct ata_device *drive, struct ata_taskfile *args, struct request *rq)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around args->taskfile
#1064: FILE: drivers/ide/pdc4030.c:548:
+	struct hd_drive_task_hdr *taskfile = &(args->taskfile);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1085: FILE: drivers/ide/pdc4030.c:653:
+	/* We can't call ide_cmd_type_parser here, since it won't understand
+	   our command, but that doesn't matter, since we don't use the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1087: FILE: drivers/ide/pdc4030.c:655:
+	   will need. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1229: FILE: include/linux/ide.h:829:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1229: FILE: include/linux/ide.h:829:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_taskfile *' should also have an identifier name
#1229: FILE: include/linux/ide.h:829:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 26 warnings, 11 checks, 1036 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000460164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
