WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch converts kcalloc(1, ...) calls to use the new kzalloc() function.

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#47: FILE: drivers/usb/atm/usbatm.c:963:
+	instance = kzalloc(sizeof(*instance) + sizeof(struct urb *) * (num_rcv_urbs + num_snd_urbs), GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SIZEOF_PARENTHESIS: sizeof *stream should be sizeof(*stream)
#73: FILE: drivers/usb/host/ehci-sched.c:640:
+	stream = kzalloc(sizeof *stream, mem_flags);

WARNING:SIZEOF_PARENTHESIS: sizeof *ep should be sizeof(*ep)
#86: FILE: drivers/usb/host/isp116x-hcd.c:718:
+		ep = kzalloc(sizeof *ep, mem_flags);

WARNING:SIZEOF_PARENTHESIS: sizeof *ep should be sizeof(*ep)
#99: FILE: drivers/usb/host/sl811-hcd.c:838:
+		ep = kzalloc(sizeof *ep, mem_flags);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*acecad)...) over kzalloc(sizeof(struct usb_acecad)...)
#112: FILE: drivers/usb/input/acecad.c:155:
+	acecad = kzalloc(sizeof(struct usb_acecad), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: drivers/usb/input/itmtouch.c:169:
+	if (!(itmtouch = kzalloc(sizeof(struct itmtouch_dev), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*itmtouch)...) over kzalloc(sizeof(struct itmtouch_dev)...)
#125: FILE: drivers/usb/input/itmtouch.c:169:
+	if (!(itmtouch = kzalloc(sizeof(struct itmtouch_dev), GFP_KERNEL))) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#138: FILE: drivers/usb/input/pid.c:266:
+	private = hid->ff_private = kzalloc(sizeof(struct hid_ff_pid), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hid->ff_private)...) over kzalloc(sizeof(struct hid_ff_pid)...)
#138: FILE: drivers/usb/input/pid.c:266:
+	private = hid->ff_private = kzalloc(sizeof(struct hid_ff_pid), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162204.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 4 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162204.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
