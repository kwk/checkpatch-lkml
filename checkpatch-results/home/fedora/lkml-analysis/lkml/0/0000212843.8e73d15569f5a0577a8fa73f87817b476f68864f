WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#46: FILE: include/linux/posix-timers.h:130:
+void set_process_cpu_timer(struct task_struct *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#46: FILE: include/linux/posix-timers.h:130:
+void set_process_cpu_timer(struct task_struct *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cputime_t *' should also have an identifier name
#46: FILE: include/linux/posix-timers.h:130:
+void set_process_cpu_timer(struct task_struct *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cputime_t *' should also have an identifier name
#46: FILE: include/linux/posix-timers.h:130:
+void set_process_cpu_timer(struct task_struct *, unsigned int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/linux/signal.h:215:
+extern int __group_send_sig_info(int, struct siginfo *, struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#78: FILE: include/linux/signal.h:215:
+extern int __group_send_sig_info(int, struct siginfo *, struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct siginfo *' should also have an identifier name
#78: FILE: include/linux/signal.h:215:
+extern int __group_send_sig_info(int, struct siginfo *, struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#78: FILE: include/linux/signal.h:215:
+extern int __group_send_sig_info(int, struct siginfo *, struct task_struct *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: kernel/itimer.c:54:
+			cputime_t utime = tsk->signal->utime;
+			do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#279: FILE: kernel/itimer.c:155:
+		if (val) {
+			del_timer_sync(&tsk->signal->real_timer);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: kernel/posix-cpu-timers.c:200:
+ ^Iswitch (clock_idx) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: kernel/posix-cpu-timers.c:200:
+ ^Iswitch (clock_idx) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: kernel/posix-cpu-timers.c:200:
+ ^Iswitch (clock_idx) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#409: FILE: kernel/posix-cpu-timers.c:250:
+	unsigned long flags;
+	spin_lock_irqsave(&p->sighand->siglock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/posix-cpu-timers.c:474:
+ ^Istruct task_struct *t = p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#433: FILE: kernel/posix-cpu-timers.c:474:
+ ^Istruct task_struct *t = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: kernel/posix-cpu-timers.c:474:
+ ^Istruct task_struct *t = p;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: kernel/posix-cpu-timers.c:608:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:INDENTED_LABEL: labels should not be indented
#488: FILE: kernel/posix-cpu-timers.c:624:
+			rebalance:

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#489: FILE: kernel/posix-cpu-timers.c:625:
+				process_timer_rebalance(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#520: FILE: kernel/posix-cpu-timers.c:1062:
+				sig->it_prof_expires = cputime_add(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#536: FILE: kernel/posix-cpu-timers.c:1078:
+				sig->it_virt_expires = cputime_add(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#565: FILE: kernel/posix-cpu-timers.c:1285:
+	BUG_ON(clock_idx == CPUCLOCK_SCHED);

WARNING:LINE_SPACING: Missing a blank line after declarations
#594: FILE: kernel/posix-cpu-timers.c:1314:
+		union cpu_time_count expires = { .sched = 0 };
+		expires.cpu = *newval;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 18 warnings, 4 checks, 604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
