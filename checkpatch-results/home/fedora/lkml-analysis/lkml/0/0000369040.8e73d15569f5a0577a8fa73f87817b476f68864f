ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: drivers/net/e100/e100_main.c:177:
+        static int X[E100_MAX_NIC + 1] = E100_PARAM_INIT; \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: drivers/net/e100/e100_main.c:177:
+        static int X[E100_MAX_NIC + 1] = E100_PARAM_INIT; \$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#64: FILE: drivers/net/e100/e100_main.c:380:
+static int next_e100_setup = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#66: FILE: drivers/net/e100/e100_main.c:382:
+#define E100_BOOT_PARAM(parm, strparm) \
                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#66: FILE: drivers/net/e100/e100_main.c:382:
+#define E100_BOOT_PARAM(parm, strparm) \
+	if (strcmp(strparm, name) == 0) {				\
+		int val;						\
+		char *end;						\
+		val = simple_strtoul(strval, &end, 0);			\
+		if (*end != '\0') {					\
+			printk("Invalid value for parm num %d, name"	\
+			       " %s, parm ignored\n", count, name);	\
+			continue;					\
+		}							\
+		printk("  Setting %s to %d\n", strparm, val);		\
+		parm[i] = val;						\
+		continue;						\
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'strparm' - possible side-effects?
#66: FILE: drivers/net/e100/e100_main.c:382:
+#define E100_BOOT_PARAM(parm, strparm) \
+	if (strcmp(strparm, name) == 0) {				\
+		int val;						\
+		char *end;						\
+		val = simple_strtoul(strval, &end, 0);			\
+		if (*end != '\0') {					\
+			printk("Invalid value for parm num %d, name"	\
+			       " %s, parm ignored\n", count, name);	\
+			continue;					\
+		}							\
+		printk("  Setting %s to %d\n", strparm, val);		\
+		parm[i] = val;						\
+		continue;						\
+	}

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#70: FILE: drivers/net/e100/e100_main.c:386:
+		val = simple_strtoul(strval, &end, 0);			\

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#72: FILE: drivers/net/e100/e100_main.c:388:
+			printk("Invalid value for parm num %d, name"	\
 			                          ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: drivers/net/e100/e100_main.c:388:
+			printk("Invalid value for parm num %d, name"	\

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#73: FILE: drivers/net/e100/e100_main.c:389:
+			       " %s, parm ignored\n", count, name);	\
 			             ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#76: FILE: drivers/net/e100/e100_main.c:392:
+		printk("  Setting %s to %d\n", strparm, val);		\

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#77: FILE: drivers/net/e100/e100_main.c:393:
+		parm[i] = val;						\
 		^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/net/e100/e100_main.c:396:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: drivers/net/e100/e100_main.c:407:
+		printk("Attempted to configure too many e100 devices\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#95: FILE: drivers/net/e100/e100_main.c:411:
+	printk("e100 boot setup for device %d\n", i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#99: FILE: drivers/net/e100/e100_main.c:415:
+	for (p=strsep(&str, ":,"); p; p=strsep(&str, ":,")) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#99: FILE: drivers/net/e100/e100_main.c:415:
+	for (p=strsep(&str, ":,"); p; p=strsep(&str, ":,")) {
 	                               ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#104: FILE: drivers/net/e100/e100_main.c:420:
+			printk("  error: Empty parm %d, ignored\n", count);
 			                       ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#104: FILE: drivers/net/e100/e100_main.c:420:
+			printk("  error: Empty parm %d, ignored\n", count);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#109: FILE: drivers/net/e100/e100_main.c:425:
+			printk("  error: No value for parm %d, ignored\n",
 			                              ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: drivers/net/e100/e100_main.c:425:
+			printk("  error: No value for parm %d, ignored\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/net/e100/e100_main.c:429:
+^I^I$

CHECK:CAMELCASE: Avoid CamelCase: <TxDescriptors>
#114: FILE: drivers/net/e100/e100_main.c:430:
+		E100_BOOT_PARAM(TxDescriptors, "TxDescriptors");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RxDescriptors>
#115: FILE: drivers/net/e100/e100_main.c:431:
+		E100_BOOT_PARAM(RxDescriptors, "RxDescriptors");

CHECK:CAMELCASE: Avoid CamelCase: <XsumRX>
#116: FILE: drivers/net/e100/e100_main.c:432:
+		E100_BOOT_PARAM(XsumRX, "XsumRX");

CHECK:CAMELCASE: Avoid CamelCase: <IntDelay>
#121: FILE: drivers/net/e100/e100_main.c:437:
+		E100_BOOT_PARAM(IntDelay, "IntDelay");

CHECK:CAMELCASE: Avoid CamelCase: <BundleSmallFr>
#122: FILE: drivers/net/e100/e100_main.c:438:
+		E100_BOOT_PARAM(BundleSmallFr, "BundleSmallFr");

CHECK:CAMELCASE: Avoid CamelCase: <BundleMax>
#123: FILE: drivers/net/e100/e100_main.c:439:
+		E100_BOOT_PARAM(BundleMax, "BundleMax");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/net/e100/e100_main.c:441:
+		printk("  Invalid parameter name %s, ignored\n", name);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#131: FILE: drivers/net/e100/e100_main.c:447:
+__setup("e100=", e100_boot_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 15 warnings, 8 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000369040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
