WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	           ChangeSet	1.423   -> 1.424  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	           mm/rmap.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#	include/linux/mmzone.h	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	     mm/page_alloc.c	1.47    -> 1.48   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# 02/05/21	wli@tisifone.holomorphy.com	1.424

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# per-cpu pte_chain freelists

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#47: 
--- a/include/linux/mmzone.h	Tue May 21 15:55:48 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#55: FILE: include/linux/mmzone.h:34:
+^Istruct pte_chain ^I*list;$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#84: FILE: mm/page_alloc.c:914:
+		for (i = 0; i < NR_CPUS; ++i) {

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#109: FILE: mm/rmap.c:338:
+static inline void pte_chain_push(struct pte_chain ** list, struct pte_chain * pte_chain)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: mm/rmap.c:338:
+static inline void pte_chain_push(struct pte_chain ** list, struct pte_chain * pte_chain)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: mm/rmap.c:345:
+static inline struct pte_chain * pte_chain_pop(struct pte_chain ** list)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#119: FILE: mm/rmap.c:345:
+static inline struct pte_chain * pte_chain_pop(struct pte_chain ** list)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#132: FILE: mm/rmap.c:356:
+static inline void add_to_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu, struct pte_chain * pte_chain)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: mm/rmap.c:356:
+static inline void add_to_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu, struct pte_chain * pte_chain)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: mm/rmap.c:356:
+static inline void add_to_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu, struct pte_chain * pte_chain)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#138: FILE: mm/rmap.c:362:
+static inline struct pte_chain * del_from_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: mm/rmap.c:362:
+static inline struct pte_chain * del_from_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: mm/rmap.c:362:
+static inline struct pte_chain * del_from_pte_chain_freelist(struct pte_chain_freelist * freelists, int cpu)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#210: FILE: mm/rmap.c:439:
+#define PTE_CHAINS_PER_PAGE (PAGE_SIZE/sizeof(struct pte_chain))
                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: mm/rmap.c:443:
+	struct pte_chain * pte_chain;

CHECK:SPACING: No space is necessary after a cast
#230: FILE: mm/rmap.c:452:
+	pte_chain = (void *) get_zeroed_page(GFP_ATOMIC);

WARNING:REPEATED_WORD: Possible repeated word: 'Yeah'
#232: FILE: mm/rmap.c:454:
+	/* Yeah yeah, I'll fix the pte_chain allocation ... */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 21 warnings, 2 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457302.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
