WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
new writers while LVM creates a snapshot.  This way, the snapshot is actually 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#48: 
--- a/drivers/md/lvm.c	Thu Aug  9 14:28:30 2001

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: fs/buffer.c:375:
+^I/* note, the FS might need to start transactions to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#72: FILE: fs/buffer.c:376:
+	/* note, the FS might need to start transactions to 
+	** sync the inodes, or the quota, no locking until

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#78: FILE: fs/buffer.c:382:
+	/* if inodes or quotas could be dirtied during the
+	** sync_supers_lockfs call, the FS is responsible for getting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: fs/buffer.c:385:
+^I** we call sync_supers first so that $

WARNING:SPACING: space prohibited before semicolon
#86: FILE: fs/buffer.c:390:
+	sync_supers(dev) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#87: FILE: fs/buffer.c:391:
+	sync_supers_lockfs(dev) ;

WARNING:SPACING: space prohibited before semicolon
#90: FILE: fs/buffer.c:394:
+	return sync_buffers(dev, 1) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/reiserfs/super.c:83:
+    journal_end_sync(&th, s, 1) ;$

WARNING:SPACING: space prohibited before semicolon
#104: FILE: fs/reiserfs/super.c:83:
+    journal_end_sync(&th, s, 1) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: fs/super.c:681:
+	struct super_block * sb;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: fs/super.c:684:
+^I     sb != sb_entry(&super_blocks); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: fs/super.c:700:
+	struct super_block * sb;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: fs/super.c:703:
+^I     sb != sb_entry(&super_blocks); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/fs.h:1163:
+extern int fsync_dev_lockfs(kdev_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#165: FILE: include/linux/fs.h:1163:
+extern int fsync_dev_lockfs(kdev_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/linux/fs.h:1172:
+extern void sync_supers_lockfs(kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#173: FILE: include/linux/fs.h:1172:
+extern void sync_supers_lockfs(kdev_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/fs.h:1173:
+extern void unlockfs(kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#174: FILE: include/linux/fs.h:1173:
+extern void unlockfs(kdev_t);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#186: FILE: kernel/ksyms.c:180:
+EXPORT_SYMBOL(unlockfs);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520026.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 3 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520026.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
