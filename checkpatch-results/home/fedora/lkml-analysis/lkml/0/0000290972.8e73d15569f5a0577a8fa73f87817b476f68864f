WARNING:TYPO_SPELLING: 'Tha' may be misspelled - perhaps 'Than'?
#66: 
Tha adjustment is done per process via /proc/$PID/oom_adj
^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#104: FILE: fs/proc/base.c:103:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUSR),
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#110: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUSR),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#110: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUSR),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: fs/proc/base.c:142:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUSR|S_IWUSR),
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: fs/proc/base.c:142:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: fs/proc/base.c:142:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#111: FILE: fs/proc/base.c:142:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUSR|S_IWUSR),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#119: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUSR),
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#119: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUSR),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#119: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUSR),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#120: FILE: fs/proc/base.c:169:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUSR|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#120: FILE: fs/proc/base.c:169:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUSR|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#120: FILE: fs/proc/base.c:169:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUSR|S_IWUSR),

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: fs/proc/base.c:430:
+	int points =3D badness(task);
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#133: FILE: fs/proc/base.c:431:
+	int points =3D badness(task);
+	return sprintf(buffer, "%i\n", points);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: fs/proc/base.c:771:
+static ssize_t oom_adjust_read(struct file * file, char * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: fs/proc/base.c:771:
+static ssize_t oom_adjust_read(struct file * file, char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: fs/proc/base.c:772:
+static ssize_t oom_adjust_read(struct file * file, char * buf,
+				size_t count, loff_t *ppos)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#146: FILE: fs/proc/base.c:774:
+	struct task_struct *task =3D proc_task(file->f_dentry->d_inode);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#149: FILE: fs/proc/base.c:777:
+	int oom_adjust =3D task->oomkilladj;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: fs/proc/base.c:779:
+	len =3D sprintf(buffer, "%i\n", oom_adjust) + 1;
 	    ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#152: FILE: fs/proc/base.c:780:
+	if (*ppos >=3D len)
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#154: FILE: fs/proc/base.c:782:
+	if (count > len-*ppos)
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#155: FILE: fs/proc/base.c:783:
+		count =3D len-*ppos;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#155: FILE: fs/proc/base.c:783:
+		count =3D len-*ppos;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: fs/proc/base.c:784:
+	if (copy_to_user(buf, buffer + *ppos, count))=20
 	                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#156: FILE: fs/proc/base.c:784:
+	if (copy_to_user(buf, buffer + *ppos, count))=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#158: FILE: fs/proc/base.c:786:
+	*ppos +=3D count;
 	      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: fs/proc/base.c:790:
+static ssize_t oom_adjust_write(struct file * file, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: fs/proc/base.c:790:
+static ssize_t oom_adjust_write(struct file * file, const char * buf,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: fs/proc/base.c:793:
+	struct task_struct *task =3D proc_task(file->f_dentry->d_inode);
 	                         ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#171: FILE: fs/proc/base.c:799:
+	memset(buffer, 0, 8);=09
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#171: FILE: fs/proc/base.c:799:
+	memset(buffer, 0, 8);=09
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: fs/proc/base.c:801:
+		count =3D 6;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#174: FILE: fs/proc/base.c:802:
+	if (copy_from_user(buffer, buf, count))=20
 	                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#174: FILE: fs/proc/base.c:802:
+	if (copy_from_user(buffer, buf, count))=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#176: FILE: fs/proc/base.c:804:
+	oom_adjust =3D simple_strtol(buffer, &end, 0);
 	           ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#176: FILE: fs/proc/base.c:804:
+	oom_adjust =3D simple_strtol(buffer, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#179: FILE: fs/proc/base.c:807:
+	if (*end =3D=3D '\n')
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: fs/proc/base.c:807:
+	if (*end =3D=3D '\n')
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: fs/proc/base.c:807:
+	if (*end =3D=3D '\n')

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#181: FILE: fs/proc/base.c:809:
+	task->oomkilladj =3D oom_adjust;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#182: FILE: fs/proc/base.c:810:
+	if (end - buffer =3D=3D 0)=20
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: fs/proc/base.c:810:
+	if (end - buffer =3D=3D 0)=20
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: fs/proc/base.c:810:
+	if (end - buffer =3D=3D 0)=20
 	                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: fs/proc/base.c:810:
+	if (end - buffer =3D=3D 0)=20

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: fs/proc/base.c:810:
+	if (end - buffer =3D=3D 0)=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: fs/proc/base.c:815:
+static struct file_operations proc_oom_adjust_operations =3D {
                                                          ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#187: FILE: fs/proc/base.c:815:
+static struct file_operations proc_oom_adjust_operations =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#188: FILE: fs/proc/base.c:816:
+	read:		oom_adjust_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#189: FILE: fs/proc/base.c:817:
+	write:		oom_adjust_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#189: FILE: fs/proc/base.c:817:
+	write:		oom_adjust_write,

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#199: FILE: fs/proc/base.c:1535:
+		case PROC_TID_OOM_SCORE:=09
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#199: FILE: fs/proc/base.c:1535:
+		case PROC_TID_OOM_SCORE:=09

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#201: FILE: fs/proc/base.c:1537:
+			inode->i_fop =3D &proc_info_file_operations;
 			             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#201: FILE: fs/proc/base.c:1537:
+			inode->i_fop =3D &proc_info_file_operations;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#202: FILE: fs/proc/base.c:1538:
+			ei->op.proc_read =3D proc_oom_score;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#206: FILE: fs/proc/base.c:1542:
+			inode->i_fop =3D &proc_oom_adjust_operations;
 			             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#206: FILE: fs/proc/base.c:1542:
+			inode->i_fop =3D &proc_oom_adjust_operations;
 			                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#224: FILE: include/linux/sched.h:447:
+	unsigned short rcvd_sigterm:1;	/* Received SIGTERM by oom killer already =
+	short oomkilladj:5;		/* OOM kill score adjustment (bit shift) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '<<=' (ctx:WxV)
#250: FILE: mm/oom_kill.c:102:
+			points <<=3D p->oomkilladj;
 			       ^

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#252: FILE: mm/oom_kill.c:104:
+			points >>=3D -(p->oomkilladj);
 			       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#252: FILE: mm/oom_kill.c:104:
+			points >>=3D -(p->oomkilladj);
 			             ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#256: FILE: mm/oom_kill.c:108:
+	points +=3D p->rcvd_sigterm;
 	       ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#257: FILE: mm/oom_kill.c:109:
+	points +=3D p->rcvd_sigterm;
+	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#257: FILE: mm/oom_kill.c:109:
+	=09
 	^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 11 warnings, 13 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
