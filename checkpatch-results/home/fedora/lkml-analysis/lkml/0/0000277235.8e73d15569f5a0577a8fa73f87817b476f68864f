WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -urN linux-2.6.1-1.138.2.1/fs/hugetlbfs/inode.c linux-2.6.1-1.138.2.1custom/fs/hugetlbfs/inode.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: include/asm-alpha/resource.h:42:
+    {PAGE_SIZE,PAGE_SIZE},^I^I^I/* RLIMIT_MEMLOCK */^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#52: FILE: include/asm-alpha/resource.h:42:
+    {PAGE_SIZE,PAGE_SIZE},			/* RLIMIT_MEMLOCK */	\
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: include/asm-sparc/resource.h:45:
+    {PAGE_SIZE, PAGE_SIZE},^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/asm-sparc64/resource.h:44:
+    {PAGE_SIZE,     PAGE_SIZE    },^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#244: FILE: include/asm-x86_64/resource.h:40:
+	{ PAGE_SIZE , PAGE_SIZE  },		\
 	            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#293: FILE: ipc/util.c:381:
+		if (!can_do_mlock())  {
+			return -1;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: ipc/util.c:384:
+^I}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: mm/mmap.c:529:
+		unsigned long locked, lock_limit;
+		locked = mm->locked_vm << PAGE_SHIFT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#351: FILE: mm/mmap.c:1366:
+		unsigned long locked, lock_limit;
+		locked = mm->locked_vm << PAGE_SHIFT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: mm/mremap.c:381:
+		unsigned long locked, lock_limit;
+		locked = current->mm->locked_vm << PAGE_SHIFT;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'locked > lock_limit'
#399: FILE: mm/shmem.c:1178:
+		if ((locked > lock_limit) && !capable(CAP_IPC_LOCK))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: include/linux/mm.h:498:
+int shmem_lock(struct file * file, int lock);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#437: FILE: include/linux/mm.h:510:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000277235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 2 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000277235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
