WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -uNr linux-2.5.69/arch/i386/kernel/entry.S linux-2.5.69-pag/arch/i386/kernel/entry.S

WARNING:NEW_TYPEDEFS: do not add new typedefs
#85: FILE: include/asm-i386/posix_types.h:16:
+typedef int		__kernel_pag_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: include/linux/cred.h:1:
+#ifndef _LINUX_CRED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#117: FILE: include/linux/cred.h:10:
+#include <asm/atomic.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: include/linux/cred.h:45:
+extern pag_t vfs_join_pag(pag_t pag);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/cred.h:46:
+extern pag_t vfs_leave_pag(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/cred.h:47:
+extern pag_t vfs_new_pag(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: include/linux/cred.h:48:
+extern long sys_setpag(pag_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pag_t' should also have an identifier name
#155: FILE: include/linux/cred.h:48:
+extern long sys_setpag(pag_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: include/linux/cred.h:49:
+extern long sys_getpag(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/cred.h:50:
+extern void vfs_unpag(const char *fsname);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: include/linux/cred.h:52:
+extern void vfs_pag_put(struct vfs_pag *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_pag *' should also have an identifier name
#159: FILE: include/linux/cred.h:52:
+extern void vfs_pag_put(struct vfs_pag *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/linux/cred.h:65:
+extern int vfs_pag_add_token(const char *fsname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/cred.h:72:
+extern struct vfs_token *vfs_pag_find_token(const char *fsname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/cred.h:76:
+extern void vfs_pag_withdraw_token(struct vfs_token *vtoken);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/linux/cred.h:84:
+extern void vfs_token_put(struct vfs_token *vtoken);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#232: FILE: include/linux/types.h:27:
+typedef __kernel_pag_t		pag_t;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#243: FILE: init/main.c:83:
+extern void credentials_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#259: FILE: kernel/cred.c:1:
+/* cred.c: authentication credentials management

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#286: FILE: kernel/cred.c:28:
+static void vfs_pag_init_once(void *_vfspag, kmem_cache_t * cachep,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: kernel/cred.c:41:
+static void vfs_token_init_once(void *_vtoken, kmem_cache_t * cachep,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#411: FILE: kernel/cred.c:153:
+	 * looking for the next unused PAG */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#453: FILE: kernel/cred.c:195:
+	if (pag > 0)		return vfs_join_pag(pag);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#454: FILE: kernel/cred.c:196:
+	else if (pag == 0)	return vfs_leave_pag();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#455: FILE: kernel/cred.c:197:
+	else if (pag == -1)	return vfs_new_pag();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#456: FILE: kernel/cred.c:198:
+	else			return -EINVAL;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#549: FILE: kernel/cred.c:291:
+EXPORT_SYMBOL(vfs_pag_add_token);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#582: FILE: kernel/cred.c:324:
+EXPORT_SYMBOL(vfs_pag_find_token);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#601: FILE: kernel/cred.c:343:
+EXPORT_SYMBOL(vfs_pag_withdraw_token);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 13 warnings, 11 checks, 564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
