WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urpN -X dontdiff linux-2.6.0-test6/fs/Kconfig linux-2.6.0-test6.cur/fs/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#32: FILE: fs/Kconfig:895:
+config RELAYFS_FS
+	tristate "Relayfs file system support"
+	---help---
+	  Relayfs is a high-speed data relay filesystem designed to provide
+	  an efficient mechanism for tools and facilities to relay large
+	  amounts of data from kernel space to user space.  It's not useful
+	  on its own, and should only be enabled if other facilities that
+	  need it are enabled, such as for example dynamic printk or the
+	  Linux Trace Toolkit.
+
+	  See <file:Documentation/filesystems/relayfs.txt> for further
+	  information.
+
+	  This file system is also available as a module ( = code which can be
+	  inserted in and removed from the running kernel whenever you want).
+	  The module is called relayfs.  If you want to compile it as a
+	  module, say M here and read <file:Documentation/modules.txt>.
+
+	  If unsure, say N.
+
 endmenu
 
 menu "Miscellaneous filesystems"

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: fs/relayfs/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#103: FILE: fs/relayfs/inode.c:23:
+#include <asm/uaccess.h>

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#109: FILE: fs/relayfs/inode.c:29:
+static struct address_space_operations	relayfs_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#110: FILE: fs/relayfs/inode.c:30:
+static struct inode_operations		relayfs_file_inode_operations;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#111: FILE: fs/relayfs/inode.c:31:
+static struct file_operations		relayfs_file_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#112: FILE: fs/relayfs/inode.c:32:
+static struct inode_operations		relayfs_dir_inode_operations;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#114: FILE: fs/relayfs/inode.c:34:
+static struct vfsmount *		relayfs_mount;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: fs/relayfs/inode.c:45:
+	struct inode * inode = new_inode(sb);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#135: FILE: fs/relayfs/inode.c:55:
+		inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: fs/relayfs/inode.c:83:
+static int $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: fs/relayfs/inode.c:86:
+	struct inode * inode = relayfs_get_inode(dir->i_sb, mode, dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: fs/relayfs/inode.c:97:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: fs/relayfs/inode.c:98:
+relayfs_mkdir(struct inode * dir, struct dentry * dentry, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: fs/relayfs/inode.c:98:
+relayfs_mkdir(struct inode * dir, struct dentry * dentry, int mode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: fs/relayfs/inode.c:107:
+static int $

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#188: FILE: fs/relayfs/inode.c:108:
+relayfs_create(struct inode *dir, struct dentry *dentry, int mode, struct nameidata *nd)
                                                                                      ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#190: FILE: fs/relayfs/inode.c:110:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: fs/relayfs/inode.c:114:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: fs/relayfs/inode.c:115:
+relayfs_symlink(struct inode * dir, struct dentry *dentry, const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: fs/relayfs/inode.c:115:
+relayfs_symlink(struct inode * dir, struct dentry *dentry, const char * symname)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#200: FILE: fs/relayfs/inode.c:120:
+	inode = relayfs_get_inode(dir->i_sb, S_IFLNK|S_IRWXUGO, 0);
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#200: FILE: fs/relayfs/inode.c:120:
+	inode = relayfs_get_inode(dir->i_sb, S_IFLNK|S_IRWXUGO, 0);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: fs/relayfs/inode.c:123:
+		int l = strlen(symname)+1;
 		                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: fs/relayfs/inode.c:124:
+		int l = strlen(symname)+1;
+		error = page_symlink(inode, symname, l);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: fs/relayfs/inode.c:125:
+		if (!error) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#208: FILE: fs/relayfs/inode.c:128:
+		} else

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#209: FILE: fs/relayfs/inode.c:129:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#223: FILE: fs/relayfs/inode.c:143:
+ *	Creates a file or directory with the specifed permissions.
   	                                     ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: fs/relayfs/inode.c:145:
+static int $

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#226: FILE: fs/relayfs/inode.c:146:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/relayfs/inode.c:146:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/relayfs/inode.c:146:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/relayfs/inode.c:146:
+relayfs_create_entry(const char * name, struct dentry * parent, struct dentry **dentry, int entry_type, int mode, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: fs/relayfs/inode.c:149:
+	struct dentry * d;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: fs/relayfs/inode.c:150:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: fs/relayfs/inode.c:155:
+		printk(KERN_ERR "Couldn't mount relayfs: errcode %d\n", error);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#243: FILE: fs/relayfs/inode.c:163:
+	if (parent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#247: FILE: fs/relayfs/inode.c:167:
+	if (parent == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: fs/relayfs/inode.c:169:
+ ^I^Ireturn -EINVAL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: fs/relayfs/inode.c:169:
+ ^I^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/relayfs/inode.c:169:
+ ^I^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/relayfs/inode.c:179:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry_type == S_IFREG'
#273: FILE: fs/relayfs/inode.c:193:
+	if ((entry_type == S_IFREG) && data) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: fs/relayfs/inode.c:201:
+exit:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: fs/relayfs/inode.c:218:
+int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: fs/relayfs/inode.c:219:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: fs/relayfs/inode.c:219:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#299: FILE: fs/relayfs/inode.c:219:
+relayfs_create_file(const char * name, struct dentry * parent, struct dentry **dentry, void * data)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#302: FILE: fs/relayfs/inode.c:222:
+				    S_IRUSR | S_IWUSR, data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: fs/relayfs/inode.c:233:
+int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: fs/relayfs/inode.c:234:
+relayfs_create_dir(const char * name, struct dentry * parent, struct dentry **dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: fs/relayfs/inode.c:234:
+relayfs_create_dir(const char * name, struct dentry * parent, struct dentry **dentry)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0755'.
#317: FILE: fs/relayfs/inode.c:237:
+				    S_IRWXU | S_IRUGO | S_IXUGO, NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: fs/relayfs/inode.c:246:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: fs/relayfs/inode.c:251:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
#333: FILE: fs/relayfs/inode.c:253:
+	if (parent == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: fs/relayfs/inode.c:268:
+	if(is_reg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: fs/relayfs/inode.c:270:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#357: FILE: fs/relayfs/inode.c:277:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#364: FILE: fs/relayfs/inode.c:284:
+relayfs_open(struct inode *inode, struct file *filp)
                                                ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#371: FILE: fs/relayfs/inode.c:291:
+		if(filp->f_flags & O_EXCL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#374: FILE: fs/relayfs/inode.c:294:
+		reader = __add_rchan_reader(rchan, filp, auto_consume);
 		                                   ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reader"
#375: FILE: fs/relayfs/inode.c:295:
+		if (reader == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#387: FILE: fs/relayfs/inode.c:307:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: fs/relayfs/inode.c:312:
+int $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#393: FILE: fs/relayfs/inode.c:313:
+relayfs_mmap(struct file *filp, struct vm_area_struct *vma)
                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: fs/relayfs/inode.c:316:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#408: FILE: fs/relayfs/inode.c:328:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: fs/relayfs/inode.c:346:
+ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#427: FILE: fs/relayfs/inode.c:347:
+relayfs_file_read(struct file *filp, char * buf, size_t count, loff_t *offset)
                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: fs/relayfs/inode.c:347:
+relayfs_file_read(struct file *filp, char * buf, size_t count, loff_t *offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: fs/relayfs/inode.c:360:
+	read_count = relay_read(reader, buf, count,
+			filp->f_flags & (O_NDELAY | O_NONBLOCK) ? 0 : 1);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#447: FILE: fs/relayfs/inode.c:367:
+ *	@filp: the file
   	 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: fs/relayfs/inode.c:376:
+ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#457: FILE: fs/relayfs/inode.c:377:
+relayfs_file_write(struct file *filp, const char *buf, size_t count, loff_t *offset)
                                 ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: fs/relayfs/inode.c:380:
+	char * write_buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: fs/relayfs/inode.c:395:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!write_buf"
#477: FILE: fs/relayfs/inode.c:397:
+	if (write_buf == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/relayfs/inode.c:409:
+^I         (write_count = relay_write(rchan->id, write_buf, count, -1)));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: fs/relayfs/inode.c:409:
+		err = wait_event_interruptible(rchan->write_wait,
+	         (write_count = relay_write(rchan->id, write_buf, count, -1)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: fs/relayfs/inode.c:413:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: fs/relayfs/inode.c:416:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: fs/relayfs/inode.c:418:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#504: FILE: fs/relayfs/inode.c:424:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#507: FILE: fs/relayfs/inode.c:427:
+ *	Poll implemention.
   	     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#510: FILE: fs/relayfs/inode.c:430:
+relayfs_poll(struct file *filp, poll_table *wait)
                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: fs/relayfs/inode.c:434:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#521: FILE: fs/relayfs/inode.c:441:
+		poll_wait(filp, &reader->rchan->read_wait, wait);
 		          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: fs/relayfs/inode.c:445:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#527: FILE: fs/relayfs/inode.c:447:
+		poll_wait(filp, &reader->rchan->write_wait, wait);
 		          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: fs/relayfs/inode.c:451:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#538: FILE: fs/relayfs/inode.c:458:
+ *	@filp: the file
   	 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#544: FILE: fs/relayfs/inode.c:464:
+relayfs_release(struct inode *inode, struct file *filp)
                                                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: fs/relayfs/inode.c:468:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: fs/relayfs/inode.c:474:
+^I$

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#558: FILE: fs/relayfs/inode.c:478:
+static struct address_space_operations relayfs_aops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#564: FILE: fs/relayfs/inode.c:484:
+static struct file_operations relayfs_file_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#574: FILE: fs/relayfs/inode.c:494:
+static struct inode_operations relayfs_file_inode_operations = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#578: FILE: fs/relayfs/inode.c:498:
+static struct inode_operations relayfs_dir_inode_operations = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: fs/relayfs/inode.c:515:
+static int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: fs/relayfs/inode.c:516:
+relayfs_fill_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: fs/relayfs/inode.c:516:
+relayfs_fill_super(struct super_block * sb, void * data, int silent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#598: FILE: fs/relayfs/inode.c:518:
+	struct inode * inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#599: FILE: fs/relayfs/inode.c:519:
+	struct dentry * root;

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#612: FILE: fs/relayfs/inode.c:532:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: fs/relayfs/inode.c:542:
+relayfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: fs/relayfs/inode.c:554:
+static int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: fs/relayfs/inode.c:560:
+static void __exit $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#657: FILE: fs/relayfs/relay_locking.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: fs/relayfs/relay_locking.c:18:
+ *^I@finalizing: if true, don't start a new buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: fs/relayfs/relay_locking.c:22:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: fs/relayfs/relay_locking.c:29:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: fs/relayfs/relay_locking.c:31:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: fs/relayfs/relay_locking.c:36:
+^I^Irchan->unused_bytes[rchan->buf_idx % rchan->n_bufs] = $

ERROR:SPACING: space required before the open parenthesis '('
#696: FILE: fs/relayfs/relay_locking.c:40:
+	if(write_buf(rchan) + rchan->buf_size >= chan_buf_end)

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#714: FILE: fs/relayfs/relay_locking.c:58:
+		bytes_written = rchan->callbacks->buffer_start(rchan->id, cur_write_pos(rchan), rchan->buf_id, cur_time, cur_tsc, using_tsc(rchan));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: fs/relayfs/relay_locking.c:70:
+ *^I@interrupting: if this write is interrupting another, set to non-zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: fs/relayfs/relay_locking.c:74:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: fs/relayfs/relay_locking.c:103:
+^I^Iget_timestamp(&rchan->buf_start_time, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#762: FILE: fs/relayfs/relay_locking.c:106:
+		bytes_written = rchan->callbacks->buffer_start(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: fs/relayfs/relay_locking.c:107:
+^I^I^Irchan->id, cur_write_pos(rchan), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: fs/relayfs/relay_locking.c:108:
+^I^I^Irchan->buf_id, rchan->buf_start_time, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: fs/relayfs/relay_locking.c:119:
+^I^Icur_write_pos(rchan) = in_progress_event_pos(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: fs/relayfs/relay_locking.c:120:
+^I^I^I+ in_progress_event_size(rchan) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: fs/relayfs/relay_locking.c:166:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: fs/relayfs/relay_locking.c:167:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: fs/relayfs/relay_locking.c:171:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: fs/relayfs/relay_locking.c:193:
+inline void $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#852: FILE: fs/relayfs/relay_locking.c:196:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: fs/relayfs/relay_locking.c:213:
+u32 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#898: FILE: fs/relayfs/relay_locking.c:242:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#900: FILE: fs/relayfs/relay_locking.c:244:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#902: FILE: fs/relayfs/relay_locking.c:246:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#904: FILE: fs/relayfs/relay_locking.c:248:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#909: FILE: fs/relayfs/relay_locking.h:1:
+#ifndef _RELAY_LOCKING_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: fs/relayfs/relay_locking.h:6:
+^I^Iu32 slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: fs/relayfs/relay_locking.h:12:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#923: FILE: fs/relayfs/relay_locking.h:15:
+^I       u32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: fs/relayfs/relay_locking.h:16:
+^I       int deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: fs/relayfs/relay_locking.h:19:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: fs/relayfs/relay_locking.h:22:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: fs/relayfs/relay_locking.h:25:
+extern u32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: fs/relayfs/relay_locking.h:28:
+extern void $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#945: FILE: fs/relayfs/relay_lockless.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#964: FILE: fs/relayfs/relay_lockless.c:20:
+inline int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: fs/relayfs/relay_lockless.c:21:
+compare_and_store_volatile(volatile u32 *ptr, $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#965: FILE: fs/relayfs/relay_lockless.c:21:
+compare_and_store_volatile(volatile u32 *ptr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: fs/relayfs/relay_lockless.c:39:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: fs/relayfs/relay_lockless.c:53:
+inline void $

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1006: FILE: fs/relayfs/relay_lockless.c:62:
+ *	atomic_sub_volatile - atomically substract val from the value at ptr.
   	                                 ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1010: FILE: fs/relayfs/relay_lockless.c:66:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: fs/relayfs/relay_lockless.c:84:
+inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: fs/relayfs/relay_lockless.c:87:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: fs/relayfs/relay_lockless.c:88:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: fs/relayfs/relay_lockless.c:92:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: fs/relayfs/relay_lockless.c:107:
+ *^Iget_buffer_end - get the address of the end of buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: fs/relayfs/relay_lockless.c:111:
+static inline char * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: fs/relayfs/relay_lockless.c:129:
+static inline void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1075: FILE: fs/relayfs/relay_lockless.c:131:
+^I^Iu32 size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: fs/relayfs/relay_lockless.c:133:
+^I^Iu32 *tsc, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1080: FILE: fs/relayfs/relay_lockless.c:136:
+	char* cur_write_pos;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1081: FILE: fs/relayfs/relay_lockless.c:137:
+	char* write_buf_end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1088: FILE: fs/relayfs/relay_lockless.c:144:
+^Ibytes_written = rchan->callbacks->buffer_end(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: fs/relayfs/relay_lockless.c:147:
+^I   point the unused_bytes value will be needed. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1091: FILE: fs/relayfs/relay_lockless.c:147:
+	/* We assume that since the client didn't write anything, at some
+	   point the unused_bytes value will be needed. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1091: FILE: fs/relayfs/relay_lockless.c:147:
+	   point the unused_bytes value will be needed. */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: fs/relayfs/relay_lockless.c:150:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1095: FILE: fs/relayfs/relay_lockless.c:151:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: fs/relayfs/relay_lockless.c:151:
+        bufno = RELAY_BUFNO_GET(end_idx, offset_bits(rchan));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1096: FILE: fs/relayfs/relay_lockless.c:152:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: fs/relayfs/relay_lockless.c:152:
+        atomic_add_volatile(&fill_count(rchan, bufno), size_lost);$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1109: FILE: fs/relayfs/relay_lockless.c:165:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1118: FILE: fs/relayfs/relay_lockless.c:174:
+^Ifinalize_buffer(idx(rchan) & idx_mask(rchan), size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: fs/relayfs/relay_lockless.c:187:
+ *^IThe return value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: fs/relayfs/relay_lockless.c:198:
+^I      u32 write_len, $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1151: FILE: fs/relayfs/relay_lockless.c:207:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: fs/relayfs/relay_lockless.c:214:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: fs/relayfs/relay_lockless.c:227:
+^I^Ifinalize_buffer(old_idx & idx_mask, size_lost, $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1204: FILE: fs/relayfs/relay_lockless.c:260:
+	unsigned long int flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: fs/relayfs/relay_lockless.c:266:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1217: FILE: fs/relayfs/relay_lockless.c:273:
+^Ifinalize_buffer(old_idx & idx_mask, size_lost, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: fs/relayfs/relay_lockless.c:287:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: fs/relayfs/relay_lockless.c:288:
+^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1241: FILE: fs/relayfs/relay_lockless.c:297:
+^I^Iatomic_set_volatile(&fill_count(rchan, new_buf_no), $

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#1267: FILE: fs/relayfs/relay_lockless.c:323:
+	unsigned long int flags;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1287: FILE: fs/relayfs/relay_lockless.c:343:
+		rchan->initialized = initializing = 1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset < slot_len'
#1299: FILE: fs/relayfs/relay_lockless.c:355:
+		if ((offset < slot_len) && (offset > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset > 0'
#1299: FILE: fs/relayfs/relay_lockless.c:355:
+		if ((offset < slot_len) && (offset > 0)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1299: FILE: fs/relayfs/relay_lockless.c:355:
+		if ((offset < slot_len) && (offset > 0)) {
[...]
+		} else if (offset < slot_len) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: fs/relayfs/relay_lockless.c:356:
+^I^I^Ireserved_idx = RELAY_BUF_OFFSET_CLEAR(new_idx $

CHECK:BRACES: Unbalanced braces around else statement
#1307: FILE: fs/relayfs/relay_lockless.c:363:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: fs/relayfs/relay_lockless.c:372:
+^I^Icur_write_pos = rchan->buf $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: fs/relayfs/relay_lockless.c:379:
+^I^Irchan->callbacks->buffer_start(rchan->id, cur_write_pos, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1350: FILE: fs/relayfs/relay_lockless.c:406:
+ *^IThe err value contains the result flags and is an ORed combination $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1359: FILE: fs/relayfs/relay_lockless.c:415:
+inline char * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: fs/relayfs/relay_lockless.c:430:
+^I^Ioffset = RELAY_BUF_OFFSET_GET(new_idx + rchan->end_reserve, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: fs/relayfs/relay_lockless.c:434:
+^I^I^Ireturn lockless_reserve_slow(rchan, slot_len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1399: FILE: fs/relayfs/relay_lockless.c:455:
+u32 $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1401: FILE: fs/relayfs/relay_lockless.c:457:
+lockless_get_offset(struct rchan *rchan,
+			u32 *max_offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: fs/relayfs/relay_lockless.c:473:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1420: FILE: fs/relayfs/relay_lockless.c:476:
+	/* Start first buffer at 0 - (end_reserve + 1) so that it
+	   gets initialized via buffer_start callback as well. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1420: FILE: fs/relayfs/relay_lockless.c:476:
+	   gets initialized via buffer_start callback as well. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1424: FILE: fs/relayfs/relay_lockless.c:480:
+^Iatomic_set(&fill_count(rchan, 0), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1425: FILE: fs/relayfs/relay_lockless.c:481:
+^I^I   (int)rchan->start_reserve + $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1432: FILE: fs/relayfs/relay_lockless.c:488:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1434: FILE: fs/relayfs/relay_lockless.c:490:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1436: FILE: fs/relayfs/relay_lockless.c:492:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1438: FILE: fs/relayfs/relay_lockless.c:494:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1440: FILE: fs/relayfs/relay_lockless.c:496:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1442: FILE: fs/relayfs/relay_lockless.c:498:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1448: FILE: fs/relayfs/relay_lockless.h:1:
+#ifndef _RELAY_LOCKLESS_H

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1456: FILE: fs/relayfs/relay_lockless.h:9:
+		 int * interrupting,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1457: FILE: fs/relayfs/relay_lockless.h:10:
+		 int * errcode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1459: FILE: fs/relayfs/relay_lockless.h:12:
+extern void $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1461: FILE: fs/relayfs/relay_lockless.h:14:
+		char * from,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1462: FILE: fs/relayfs/relay_lockless.h:15:
+^I^Iu32 len, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: fs/relayfs/relay_lockless.h:16:
+^I^Iint deliver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1466: FILE: fs/relayfs/relay_lockless.h:19:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1469: FILE: fs/relayfs/relay_lockless.h:22:
+extern void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: fs/relayfs/relay_lockless.h:25:
+extern u32 $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 132 errors, 58 warnings, 32 checks, 1423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
