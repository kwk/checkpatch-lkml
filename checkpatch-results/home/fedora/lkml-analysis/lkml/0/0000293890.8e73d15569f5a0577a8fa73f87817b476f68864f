WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
--- linux-2.6.4-rcu/include/linux/rcupdate.h~rcu-low-lat	2004-03-23 15:20:11.000000000 +0530

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: include/linux/rcupdate.h:100:
+        struct list_head  rcudlist;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: include/linux/rcupdate.h:100:
+        struct list_head  rcudlist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: include/linux/rcupdate.h:108:
+#define RCU_krcud(cpu) ^I^I(per_cpu(rcu_data, (cpu)).krcud)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: include/linux/rcupdate.h:112:
+#define RCU_rcudlist(cpu) ^I(per_cpu(rcu_data, (cpu)).rcudlist)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/linux/sched.h:555:
+extern int rq_has_rt_task(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: kernel/rcupdate.c:60:
+#else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#142: FILE: kernel/rcupdate.c:61:
+static int bhlimit = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: kernel/rcupdate.c:223:
+static int krcud(void * __bind_cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#190: FILE: kernel/rcupdate.c:225:
+	int cpu = (int) (long) __bind_cpu;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'krcud', this function's name, in a string
#192: FILE: kernel/rcupdate.c:227:
+	daemonize("krcud/%d", cpu);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: kernel/rcupdate.c:233:
+	BUG_ON(smp_processor_id() != cpu);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#201: FILE: kernel/rcupdate.c:236:
+	mb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: kernel/rcupdate.c:267:
+			printk("krcud for %i failed\n", cpu);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#237: FILE: kernel/rcupdate.c:272:
+			yield();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#242: FILE: kernel/rcupdate.c:277:
 static void __devinit rcu_online_cpu(int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#251: FILE: kernel/rcupdate.c:286:
 static int __devinit rcu_cpu_notify(struct notifier_block *self, 

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#279: FILE: kernel/rcupdate.c:327:
+__initcall(rcu_late_init);

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: kernel/sched.c:346:
+        runqueue_t *rq = cpu_rq(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/sched.c:346:
+        runqueue_t *rq = cpu_rq(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: kernel/sched.c:347:
+        return (sched_find_first_bit(rq->active->bitmap) < MAX_RT_PRIO);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: kernel/sched.c:347:
+        runqueue_t *rq = cpu_rq(cpu);
+        return (sched_find_first_bit(rq->active->bitmap) < MAX_RT_PRIO);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/sched.c:347:
+        return (sched_find_first_bit(rq->active->bitmap) < MAX_RT_PRIO);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 15 warnings, 2 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
