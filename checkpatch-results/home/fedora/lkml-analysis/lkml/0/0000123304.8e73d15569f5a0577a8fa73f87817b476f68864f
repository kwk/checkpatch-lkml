WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#32: 
Signed-Off-By: Lee Revell <rlrevell@joe-job.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#41: FILE: linux/module.h:570:
+extern void inter_module_register(const char *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#41: FILE: linux/module.h:570:
+extern void inter_module_register(const char *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#41: FILE: linux/module.h:570:
+extern void inter_module_register(const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#41: FILE: linux/module.h:570:
+extern void inter_module_register(const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#42: FILE: linux/module.h:571:
+extern void inter_module_register(const char *,
 		struct module *, const void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#45: FILE: linux/module.h:572:
+extern void inter_module_unregister(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#45: FILE: linux/module.h:572:
+extern void inter_module_unregister(const char *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#46: FILE: linux/module.h:573:
+extern const void * inter_module_get_request(const char *,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#46: FILE: linux/module.h:573:
+extern const void * inter_module_get_request(const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#46: FILE: linux/module.h:573:
+extern const void * inter_module_get_request(const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#46: FILE: linux/module.h:573:
+extern const void * inter_module_get_request(const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#47: FILE: linux/module.h:574:
+extern const void * inter_module_get_request(const char *,
 		const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#49: FILE: linux/module.h:575:
+extern void inter_module_put(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#49: FILE: linux/module.h:575:
+extern void inter_module_put(const char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 6 checks, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000123304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
