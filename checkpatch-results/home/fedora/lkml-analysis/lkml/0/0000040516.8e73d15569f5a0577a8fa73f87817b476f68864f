CHECK:SPACING: No space is necessary after a cast
#72: FILE: arch/ia64/sn/kernel/xpc_channel.c:282:
+	bte_ret = xp_bte_copy((u64) src, (u64) dst, (u64) cnt,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: arch/ia64/sn/kernel/xpc_channel.c:283:
+	bte_ret = xp_bte_copy((u64) src, (u64) dst, (u64) cnt,
+					(BTE_NORMAL | BTE_WACQUIRE), NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: arch/ia64/sn/kernel/xpc_main.c:1224:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/ia64/sn/kernel/xpc_main.c:1226:
+	buf_size = max(XPC_RP_VARS_SIZE,
+				XPC_RP_HEADER_SIZE + XP_NASID_MASK_BYTES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: arch/ia64/sn/kernel/xpc_main.c:1228:
+	xpc_remote_copy_buffer = xpc_kmalloc_cacheline_aligned(buf_size,
+				     GFP_KERNEL, &xpc_remote_copy_buffer_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpc_remote_copy_buffer"
#116: FILE: arch/ia64/sn/kernel/xpc_main.c:1229:
+	if (xpc_remote_copy_buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: arch/ia64/sn/kernel/xpc_partition.c:148:
+		bte_res = xp_bte_copy(rp_pa, buf, buf_len,
 					(BTE_NOTIFY | BTE_WACQUIRE), NULL);

CHECK:SPACING: No space is necessary after a cast
#187: FILE: arch/ia64/sn/kernel/xpc_partition.c:446:
+					(u64) remote_vars,

CHECK:SPACING: No space is necessary after a cast
#197: FILE: arch/ia64/sn/kernel/xpc_partition.c:497:
+	bres = xp_bte_copy(*remote_rp_pa, (u64) remote_rp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: arch/ia64/sn/kernel/xpc_partition.c:498:
+	bres = xp_bte_copy(*remote_rp_pa, (u64) remote_rp,
 				XPC_RP_HEADER_SIZE + xp_nasid_mask_bytes,

CHECK:SPACING: No space is necessary after a cast
#210: FILE: arch/ia64/sn/kernel/xpc_partition.c:553:
+	bres = xp_bte_copy(remote_vars_pa, (u64) remote_vars, XPC_RP_VARS_SIZE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/ia64/sn/kernel/xpc_partition.c:554:
+	bres = xp_bte_copy(remote_vars_pa, (u64) remote_vars, XPC_RP_VARS_SIZE,
 				(BTE_NOTIFY | BTE_WACQUIRE), NULL);

CHECK:SPACING: No space is necessary after a cast
#219: FILE: arch/ia64/sn/kernel/xpc_partition.c:1234:
+	bte_res = xp_bte_copy(part_nasid_pa, (u64) nasid_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/ia64/sn/kernel/xpc_partition.c:1235:
+	bte_res = xp_bte_copy(part_nasid_pa, (u64) nasid_mask,
 			xp_nasid_mask_bytes, (BTE_NOTIFY | BTE_WACQUIRE), NULL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: include/asm-ia64/sn/xp.h:63:
+ * ^Isrc - physical address of the source of the transfer.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: include/asm-ia64/sn/xp.h:86:
+	BUG_ON(REGION_NUMBER(vdst) != RGN_KERNEL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#276: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#276: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#276: FILE: include/asm-ia64/sn/xpc.h:689:
+extern void *xpc_kmalloc_cacheline_aligned(size_t, gfp_t, void **);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 15 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040516.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
