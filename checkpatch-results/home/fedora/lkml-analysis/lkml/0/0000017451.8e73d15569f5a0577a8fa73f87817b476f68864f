ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Carlos Eduardo Aguiar <carlos.aguiar <at> indt.org.br>'
#41: 
Signed-off-by: Carlos Eduardo Aguiar <carlos.aguiar <at> indt.org.br>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Anderson Lizardo <anderson.lizardo <at> indt.org.br>'
#42: 
Signed-off-by: Anderson Lizardo <anderson.lizardo <at> indt.org.br>

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Anderson Briglia <anderson.briglia <at> indt.org.br>'
#43: 
Signed-off-by: Anderson Briglia <anderson.briglia <at> indt.org.br>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/mmc/mmc.c:107:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#116: FILE: drivers/mmc/mmc.c:1202:
+	if (err != MMC_ERR_NONE) {
+		goto out;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#126: FILE: drivers/mmc/mmc.c:1212:
+	if (err != MMC_ERR_NONE) {
+		goto error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#154: FILE: drivers/mmc/mmc.c:1240:
+	if (err != MMC_ERR_NONE) {
+		goto error;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: drivers/mmc/mmc.c:1255:
+		 * the status register, hiding the error condition */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: drivers/mmc/mmc.h:32:
+extern int mmc_lock_unlock(struct mmc_card *card, struct key *key, int mode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#232: FILE: include/linux/mmc/protocol.h:250:
+#define MMC_LOCK_MODE_ERASE	(1<<3)
                            	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#232: FILE: include/linux/mmc/protocol.h:250:
+#define MMC_LOCK_MODE_ERASE	(1<<3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#233: FILE: include/linux/mmc/protocol.h:251:
+#define MMC_LOCK_MODE_UNLOCK	(0<<2)
                             	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#234: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#234: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#235: FILE: include/linux/mmc/protocol.h:253:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#235: FILE: include/linux/mmc/protocol.h:253:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Carlos Eduardo Aguiar <carlos.aguiar <at> indt.org.br>'
#248: 
Signed-off-by: Carlos Eduardo Aguiar <carlos.aguiar <at> indt.org.br>

WARNING:BAD_SIGN_OFF: Duplicate signature
#248: 
Signed-off-by: Carlos Eduardo Aguiar <carlos.aguiar <at> indt.org.br>

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Anderson Lizardo <anderson.lizardo <at> indt.org.br>'
#249: 
Signed-off-by: Anderson Lizardo <anderson.lizardo <at> indt.org.br>

WARNING:BAD_SIGN_OFF: Duplicate signature
#249: 
Signed-off-by: Anderson Lizardo <anderson.lizardo <at> indt.org.br>

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Anderson Briglia <anderson.briglia <at> indt.org.br>'
#250: 
Signed-off-by: Anderson Briglia <anderson.briglia <at> indt.org.br>

WARNING:BAD_SIGN_OFF: Duplicate signature
#250: 
Signed-off-by: Anderson Briglia <anderson.briglia <at> indt.org.br>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/mmc/mmc.c:107:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#323: FILE: drivers/mmc/mmc.c:1202:
+	if (err != MMC_ERR_NONE) {
+		goto out;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#333: FILE: drivers/mmc/mmc.c:1212:
+	if (err != MMC_ERR_NONE) {
+		goto error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#361: FILE: drivers/mmc/mmc.c:1240:
+	if (err != MMC_ERR_NONE) {
+		goto error;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: drivers/mmc/mmc.c:1255:
+		 * the status register, hiding the error condition */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: drivers/mmc/mmc.h:32:
+extern int mmc_lock_unlock(struct mmc_card *card, struct key *key, int mode);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#439: FILE: include/linux/mmc/protocol.h:250:
+#define MMC_LOCK_MODE_ERASE	(1<<3)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#439: FILE: include/linux/mmc/protocol.h:250:
+#define MMC_LOCK_MODE_ERASE	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#440: FILE: include/linux/mmc/protocol.h:251:
+#define MMC_LOCK_MODE_UNLOCK	(0<<2)
                             	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#441: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#441: FILE: include/linux/mmc/protocol.h:252:
+#define MMC_LOCK_MODE_CLR_PWD	(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#442: FILE: include/linux/mmc/protocol.h:253:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)
                              	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#442: FILE: include/linux/mmc/protocol.h:253:
+#define MMC_LOCK_MODE_SET_PWD	(1<<0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017451.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 16 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017451.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
