WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- mm3-2.6.9-rc2.orig/include/linux/mm.h	2004-09-24 19:17:00.863688360 -0700

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#47: FILE: include/linux/mm.h:859:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#47: FILE: include/linux/mm.h:859:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#47: FILE: include/linux/mm.h:859:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#47: FILE: include/linux/mm.h:859:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgprot_t' should also have an identifier name
#47: FILE: include/linux/mm.h:859:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: include/linux/mm.h:860:
+int remap_pfn_range(struct vm_area_struct *, unsigned long,
+		unsigned long, unsigned long, pgprot_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: include/linux/mm.h:864:
+int remap_page_range(struct vm_area_struct *vma, unsigned long uvaddr,
+			unsigned long paddr, unsigned long size, pgprot_t prot)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#101: FILE: mm/memory.c:981:
+		remap_pte_range(pte, base + address, end - address, pfn + (address >> PAGE_SHIFT), prot);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#110: FILE: mm/memory.c:990:
+int remap_pfn_range(struct vm_area_struct *vma, unsigned long from, unsigned long pfn, unsigned long size, pgprot_t prot)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#128: FILE: mm/memory.c:1010:
+		error = remap_pmd_range(mm, pmd, from, end - from, pfn + (from >> PAGE_SHIFT), prot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: mm/nommu.c:564:
+int remap_pfn_range(struct vm_area_struct *vma, unsigned long from,
 		unsigned long to, unsigned long size, pgprot_t prot)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246845.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 3 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246845.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
