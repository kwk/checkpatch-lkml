WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#122: 
diff -puN arch/ppc64/kernel/iSeries_iommu.c~watch_merging arch/ppc64/kernel/iSeries_iommu.c

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#139: FILE: arch/ppc64/kernel/iommu.c:237:
+	seq_printf(m, "size\tcount in\tcount out\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#142: FILE: arch/ppc64/kernel/iommu.c:240:
+		in = out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#148: FILE: arch/ppc64/kernel/iommu.c:246:
+			seq_printf(m, "%d\t%ld\t%ld\n", i+1, in, out);
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/ppc64/kernel/iommu.c:249:
+        return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/ppc64/kernel/iommu.c:249:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/ppc64/kernel/iommu.c:254:
+        return single_open(file, proc_iommu_show, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/ppc64/kernel/iommu.c:254:
+        return single_open(file, proc_iommu_show, NULL);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#159: FILE: arch/ppc64/kernel/iommu.c:257:
+static struct file_operations proc_iommu_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/ppc64/kernel/iommu.c:258:
+        .open           = proc_iommu_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/ppc64/kernel/iommu.c:258:
+        .open           = proc_iommu_open,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/ppc64/kernel/iommu.c:259:
+        .read           = seq_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/ppc64/kernel/iommu.c:259:
+        .read           = seq_read,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/ppc64/kernel/iommu.c:260:
+        .llseek         = seq_lseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/ppc64/kernel/iommu.c:260:
+        .llseek         = seq_lseek,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/ppc64/kernel/iommu.c:261:
+        .release        = single_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/ppc64/kernel/iommu.c:261:
+        .release        = single_release,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/ppc64/kernel/iommu.c:266:
+        struct proc_dir_entry *e;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/ppc64/kernel/iommu.c:266:
+        struct proc_dir_entry *e;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/ppc64/kernel/iommu.c:267:
+                              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/ppc64/kernel/iommu.c:267:
+                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/ppc64/kernel/iommu.c:267:
+                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/ppc64/kernel/iommu.c:268:
+        e = create_proc_entry("ppc64/iommu", 0, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/ppc64/kernel/iommu.c:268:
+        e = create_proc_entry("ppc64/iommu", 0, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/ppc64/kernel/iommu.c:269:
+        if (e)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/ppc64/kernel/iommu.c:269:
+        if (e)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/ppc64/kernel/iommu.c:270:
+                e->proc_fops = &proc_iommu_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/ppc64/kernel/iommu.c:270:
+                e->proc_fops = &proc_iommu_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/ppc64/kernel/iommu.c:272:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/ppc64/kernel/iommu.c:272:
+        return 0;$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#176: FILE: arch/ppc64/kernel/iommu.c:274:
+__initcall(proc_iommu_init);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#196: FILE: arch/ppc64/kernel/iommu.c:306:
+	__get_cpu_var(sglist_in[tmp-1])++;
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#208: FILE: arch/ppc64/kernel/iommu.c:381:
+	__get_cpu_var(sglist_out[tmp-1])++;
 	                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 16 warnings, 4 checks, 83 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264108.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
