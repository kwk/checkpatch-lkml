ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: drivers/char/scx200.c:1:
+/* linux/drivers/char/scx200.c $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/char/scx200.c:1:
+/* linux/drivers/char/scx200.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#62: FILE: drivers/char/scx200.c:1:
+/* linux/drivers/char/scx200.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#63: FILE: drivers/char/scx200.c:2:
+/* linux/drivers/char/scx200.c 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#66: FILE: drivers/char/scx200.c:5:
+   National Semiconductor SCx200 support. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#84: FILE: drivers/char/scx200.c:23:
+unsigned scx200_gpio_base = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#84: FILE: drivers/char/scx200.c:23:
+unsigned scx200_gpio_base = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: drivers/char/scx200.c:47:
+void scx200_gpio_dump(unsigned index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#111: FILE: drivers/char/scx200.c:50:
+	u32 config = scx200_gpio_configure(index, ~0, 0);
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#111: FILE: drivers/char/scx200.c:50:
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: drivers/char/scx200.c:51:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/char/scx200.c:52:
+^Iif (config & 1) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#114: FILE: drivers/char/scx200.c:53:
+		printk(" OE"); /* output enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: drivers/char/scx200.c:55:
+		printk(" TS"); /* tristate */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/char/scx200.c:56:
+^Iif (config & 2) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: drivers/char/scx200.c:57:
+		printk(" PP"); /* push pull */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: drivers/char/scx200.c:59:
+		printk(" OD"); /* open drain */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/char/scx200.c:60:
+^Iif (config & 4) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: drivers/char/scx200.c:61:
+		printk(" PUE"); /* pull up enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#124: FILE: drivers/char/scx200.c:63:
+		printk(" PUD"); /* pull up disabled */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/char/scx200.c:64:
+^Iif (config & 8) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: drivers/char/scx200.c:65:
+		printk(" LOCKED"); /* locked */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/char/scx200.c:66:
+^Iif (config & 16) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: drivers/char/scx200.c:67:
+		printk(" LEVEL"); /* level input */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/char/scx200.c:69:
+		printk(" EDGE"); /* edge input */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/char/scx200.c:70:
+^Iif (config & 32) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: drivers/char/scx200.c:71:
+		printk(" HI"); /* trigger on rising edge */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#134: FILE: drivers/char/scx200.c:73:
+		printk(" LO"); /* trigger on falling edge */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/char/scx200.c:74:
+^Iif (config & 64) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: drivers/char/scx200.c:75:
+		printk(" DEBOUNCE"); /* debounce */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: drivers/char/scx200.c:76:
+	printk("\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: drivers/char/scx200.c:83:
+	unsigned base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#146: FILE: drivers/char/scx200.c:85:
+	printk(KERN_INFO NAME ": NatSemi SCx200 Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/char/scx200.c:87:
+^Iif ((bridge = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#148: FILE: drivers/char/scx200.c:87:
+	if ((bridge = pci_find_device(PCI_VENDOR_ID_NS, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#154: FILE: drivers/char/scx200.c:93:
+	printk(KERN_INFO NAME ": GPIO base 0x%x\n", base);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_GPIO_SIZE>
#156: FILE: drivers/char/scx200.c:95:
+	if (request_region(base, SCx200_GPIO_SIZE, "NatSemi SCx200 GPIO") == 0) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#157: FILE: drivers/char/scx200.c:96:
+		printk(KERN_ERR NAME ": can't allocate I/O for GPIOs\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#178: FILE: drivers/char/scx200.c:117:
+EXPORT_SYMBOL(scx200_gpio_base);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#179: FILE: drivers/char/scx200.c:118:
+EXPORT_SYMBOL(scx200_gpio_shadow);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#180: FILE: drivers/char/scx200.c:119:
+EXPORT_SYMBOL(scx200_gpio_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#181: FILE: drivers/char/scx200.c:120:
+EXPORT_SYMBOL(scx200_gpio_configure);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#182: FILE: drivers/char/scx200.c:121:
+EXPORT_SYMBOL(scx200_gpio_dump);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#185: FILE: drivers/char/scx200.c:124:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/char/scx200.c:125:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel modules"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/char/scx200.c:126:
+        c-basic-offset: 8$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 31 warnings, 1 checks, 136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000405675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
