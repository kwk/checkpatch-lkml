WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: drivers/isdn/gigaset/usb-gigaset.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#84: FILE: drivers/isdn/gigaset/usb-gigaset.c:36:
+module_param(startmode, int, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#85: FILE: drivers/isdn/gigaset/usb-gigaset.c:37:
+module_param(cidmode, int, S_IRUGO);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#102: FILE: drivers/isdn/gigaset/usb-gigaset.c:54:
+static struct usb_device_id gigaset_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:REPEATED_WORD: Possible repeated word: 'll'
#116: FILE: drivers/isdn/gigaset/usb-gigaset.c:68:
+ *       C1 0F             ll ll

WARNING:REPEATED_WORD: Possible repeated word: 'xx'
#133: FILE: drivers/isdn/gigaset/usb-gigaset.c:85:
+ *       41 01 xx xx

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#160: FILE: drivers/isdn/gigaset/usb-gigaset.c:112:
+static struct gigaset_driver *driver = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#161: FILE: drivers/isdn/gigaset/usb-gigaset.c:113:
+static struct cardstate *cardstate = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddr>
#179: FILE: drivers/isdn/gigaset/usb-gigaset.c:131:
+	__u8			bulk_out_endpointAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <int_in_endpointAddr>
#185: FILE: drivers/isdn/gigaset/usb-gigaset.c:137:
+	__u8			int_in_endpointAddr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#192: FILE: drivers/isdn/gigaset/usb-gigaset.c:144:
+static inline unsigned tiocm_to_gigaset(unsigned state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#192: FILE: drivers/isdn/gigaset/usb-gigaset.c:144:
+static inline unsigned tiocm_to_gigaset(unsigned state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: drivers/isdn/gigaset/usb-gigaset.c:151:
+static int gigaset_set_modem_ctrl(struct cardstate *cs, unsigned old_state,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: drivers/isdn/gigaset/usb-gigaset.c:152:
+				  unsigned new_state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#203: FILE: drivers/isdn/gigaset/usb-gigaset.c:155:
+	unsigned mask, val;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: drivers/isdn/gigaset/usb-gigaset.c:178:
+		(unsigned)req, (unsigned)val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: drivers/isdn/gigaset/usb-gigaset.c:178:
+		(unsigned)req, (unsigned)val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: drivers/isdn/gigaset/usb-gigaset.c:191:
+			-r, (unsigned)req);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#251: FILE: drivers/isdn/gigaset/usb-gigaset.c:203:
+static int gigaset_baud_rate(struct cardstate *cs, unsigned cflag)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: drivers/isdn/gigaset/usb-gigaset.c:212:
+	case    B300: rate =     300; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#261: FILE: drivers/isdn/gigaset/usb-gigaset.c:213:
+	case    B600: rate =     600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#262: FILE: drivers/isdn/gigaset/usb-gigaset.c:214:
+	case   B1200: rate =    1200; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#263: FILE: drivers/isdn/gigaset/usb-gigaset.c:215:
+	case   B2400: rate =    2400; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#264: FILE: drivers/isdn/gigaset/usb-gigaset.c:216:
+	case   B4800: rate =    4800; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#265: FILE: drivers/isdn/gigaset/usb-gigaset.c:217:
+	case   B9600: rate =    9600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: drivers/isdn/gigaset/usb-gigaset.c:218:
+	case  B19200: rate =   19200; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: drivers/isdn/gigaset/usb-gigaset.c:219:
+	case  B38400: rate =   38400; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: drivers/isdn/gigaset/usb-gigaset.c:220:
+	case  B57600: rate =   57600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#269: FILE: drivers/isdn/gigaset/usb-gigaset.c:221:
+	case B115200: rate =  115200; break;

WARNING:SPLIT_STRING: quoted string split across lines
#273: FILE: drivers/isdn/gigaset/usb-gigaset.c:225:
+		dev_err(cs->dev, "unsupported baudrate request 0x%x,"
+			" using default of B9600\n", cflag);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: drivers/isdn/gigaset/usb-gigaset.c:235:
+static int gigaset_set_line_ctrl(struct cardstate *cs, unsigned cflag)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#311: FILE: drivers/isdn/gigaset/usb-gigaset.c:263:
+			val |= 1; /* 1.5 stop bits */ //FIXME is this okay?
+		else

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#319: FILE: drivers/isdn/gigaset/usb-gigaset.c:271:
+static int gigaset_set_modem_ctrl(struct cardstate *cs, unsigned old_state,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#320: FILE: drivers/isdn/gigaset/usb-gigaset.c:272:
+				  unsigned new_state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#325: FILE: drivers/isdn/gigaset/usb-gigaset.c:277:
+static int gigaset_set_line_ctrl(struct cardstate *cs, unsigned cflag)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: drivers/isdn/gigaset/usb-gigaset.c:282:
+static int gigaset_baud_rate(struct cardstate *cs, unsigned cflag)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: drivers/isdn/gigaset/usb-gigaset.c:288:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#337: FILE: drivers/isdn/gigaset/usb-gigaset.c:289:
+ /*================================================================================================================*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#355: FILE: drivers/isdn/gigaset/usb-gigaset.c:307:
+
+

CHECK:SPACING: No space is necessary after a cast
#361: FILE: drivers/isdn/gigaset/usb-gigaset.c:313:
+	struct cardstate *cs = (struct cardstate *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#386: FILE: drivers/isdn/gigaset/usb-gigaset.c:338:
+					again = 1; /* no callback will be
+						      called! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#386: FILE: drivers/isdn/gigaset/usb-gigaset.c:338:
+						      called! */

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/isdn/gigaset/usb-gigaset.c:345:
+						(unsigned long) bcs->tx_skb);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: drivers/isdn/gigaset/usb-gigaset.c:371:
+	unsigned numbytes;

CHECK:SPACING: No space is necessary after a cast
#424: FILE: drivers/isdn/gigaset/usb-gigaset.c:376:
+	inbuf = (struct inbuf_t *) urb->context;

CHECK:BRACES: braces {} should be used on all arms of this statement
#437: FILE: drivers/isdn/gigaset/usb-gigaset.c:389:
+		if (numbytes) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/isdn/gigaset/usb-gigaset.c:393:
+				dev_warn(cs->dev,
+				    "%s: There was no leading 0, but 0x%02x!\n",

CHECK:SPACING: No space is necessary after a cast
#442: FILE: drivers/isdn/gigaset/usb-gigaset.c:394:
+					 __func__, (unsigned) *src);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#442: FILE: drivers/isdn/gigaset/usb-gigaset.c:394:
+					 __func__, (unsigned) *src);

CHECK:BRACES: Unbalanced braces around else statement
#449: FILE: drivers/isdn/gigaset/usb-gigaset.c:401:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#468: FILE: drivers/isdn/gigaset/usb-gigaset.c:420:
+
+

CHECK:SPACING: No space is necessary after a cast
#472: FILE: drivers/isdn/gigaset/usb-gigaset.c:424:
+	struct cardstate *cs = (struct cardstate *) urb->context;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#485: FILE: drivers/isdn/gigaset/usb-gigaset.c:437:
+		/* That's all we can do. Communication problems
+		   are handled by timeouts or network protocols. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#485: FILE: drivers/isdn/gigaset/usb-gigaset.c:437:
+		   are handled by timeouts or network protocols. */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cb', this function's name, in a string
#505: FILE: drivers/isdn/gigaset/usb-gigaset.c:457:
+			gig_dbg(DEBUG_OUTPUT, "send_cb: sent %u bytes, %u left",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#507: FILE: drivers/isdn/gigaset/usb-gigaset.c:459:
+			cs->cmdbuf = cb = cb->next;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/isdn/gigaset/usb-gigaset.c:477:
+					  usb_sndbulkpipe(ucs->udev,
+					     ucs->bulk_out_endpointAddr & 0x0f),

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cb', this function's name, in a string
#532: FILE: drivers/isdn/gigaset/usb-gigaset.c:484:
+			gig_dbg(DEBUG_OUTPUT, "send_cb: send %d bytes", count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#541: FILE: drivers/isdn/gigaset/usb-gigaset.c:493:
+				cb->len = 0; /* skip urb => remove cb+wakeup
+						in next loop cycle */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#541: FILE: drivers/isdn/gigaset/usb-gigaset.c:493:
+						in next loop cycle */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#568: FILE: drivers/isdn/gigaset/usb-gigaset.c:520:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cb)...) over kmalloc(sizeof(struct cmdbuf_t)...)
#568: FILE: drivers/isdn/gigaset/usb-gigaset.c:520:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#581: FILE: drivers/isdn/gigaset/usb-gigaset.c:533:
+	if (cs->lastcmdbuf)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#583: FILE: drivers/isdn/gigaset/usb-gigaset.c:535:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#598: FILE: drivers/isdn/gigaset/usb-gigaset.c:550:
+	unsigned bytes;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bcs->hw.usb)...) over kmalloc(sizeof(struct usb_bc_state)...)
#638: FILE: drivers/isdn/gigaset/usb-gigaset.c:590:
+	bcs->hw.usb = kmalloc(sizeof(struct usb_bc_state), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#659: FILE: drivers/isdn/gigaset/usb-gigaset.c:611:
+	cs->hw.usb = ucs =

CHECK:SPACING: No space is necessary after a cast
#675: FILE: drivers/isdn/gigaset/usb-gigaset.c:627:
+		     &gigaset_modem_fill, (unsigned long) cs);

CHECK:SPACING: No space is necessary after a cast
#706: FILE: drivers/isdn/gigaset/usb-gigaset.c:658:
+	count = min(bcs->tx_skb->len, (unsigned) ucs->bulk_out_size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#706: FILE: drivers/isdn/gigaset/usb-gigaset.c:658:
+	count = min(bcs->tx_skb->len, (unsigned) ucs->bulk_out_size);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_modem', this function's name, in a string
#716: FILE: drivers/isdn/gigaset/usb-gigaset.c:668:
+	gig_dbg(DEBUG_OUTPUT, "write_modem: send %d bytes", count);

CHECK:SPACING: No space is necessary after a cast
#728: FILE: drivers/isdn/gigaset/usb-gigaset.c:680:
+			(unsigned long) bcs->tx_skb);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#739: FILE: drivers/isdn/gigaset/usb-gigaset.c:691:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#756: FILE: drivers/isdn/gigaset/usb-gigaset.c:708:
+		__func__, le16_to_cpu(udev->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#757: FILE: drivers/isdn/gigaset/usb-gigaset.c:709:
+		le16_to_cpu(udev->descriptor.idProduct));

CHECK:CAMELCASE: Avoid CamelCase: <bAlternateSetting>
#768: FILE: drivers/isdn/gigaset/usb-gigaset.c:720:
+	alt = hostif->desc.bAlternateSetting;

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#769: FILE: drivers/isdn/gigaset/usb-gigaset.c:721:
+	ifnum = hostif->desc.bInterfaceNumber; // FIXME ?

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#779: FILE: drivers/isdn/gigaset/usb-gigaset.c:731:
+	if (hostif->desc.bInterfaceClass != 255) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/isdn/gigaset/usb-gigaset.c:733:
+		dev_info(&udev->dev,
+		"%s: Device matched but iface_desc[%d]->bInterfaceClass==%d!\n",

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#803: FILE: drivers/isdn/gigaset/usb-gigaset.c:755:
+	buffer_size = le16_to_cpu(endpoint->wMaxPacketSize);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#805: FILE: drivers/isdn/gigaset/usb-gigaset.c:757:
+	ucs->bulk_out_endpointAddr = endpoint->bEndpointAddress;

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#845: FILE: drivers/isdn/gigaset/usb-gigaset.c:797:
+			 cs->inbuf + 0, endpoint->bInterval);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->bulk_out_urb"
#870: FILE: drivers/isdn/gigaset/usb-gigaset.c:822:
+	if (ucs->bulk_out_urb != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->read_urb"
#873: FILE: drivers/isdn/gigaset/usb-gigaset.c:825:
+	if (ucs->read_urb != NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#875: FILE: drivers/isdn/gigaset/usb-gigaset.c:827:
+	ucs->read_urb = ucs->bulk_out_urb = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#876: FILE: drivers/isdn/gigaset/usb-gigaset.c:828:
+	cs->inbuf[0].rcvbuf = ucs->bulk_out_buffer = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->bulk_out_urb"
#905: FILE: drivers/isdn/gigaset/usb-gigaset.c:857:
+	if (ucs->bulk_out_urb != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->read_urb"
#908: FILE: drivers/isdn/gigaset/usb-gigaset.c:860:
+	if (ucs->read_urb != NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#910: FILE: drivers/isdn/gigaset/usb-gigaset.c:862:
+	ucs->read_urb = ucs->bulk_out_urb = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#911: FILE: drivers/isdn/gigaset/usb-gigaset.c:863:
+	cs->inbuf[0].rcvbuf = ucs->bulk_out_buffer = NULL;

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#947: FILE: drivers/isdn/gigaset/usb-gigaset.c:899:
+	/* allocate memory for our driver state and intialize it */
 	                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#948: FILE: drivers/isdn/gigaset/usb-gigaset.c:900:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#949: FILE: drivers/isdn/gigaset/usb-gigaset.c:901:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,
+				       GIGASET_MODULENAME, GIGASET_DEVNAME,

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#954: FILE: drivers/isdn/gigaset/usb-gigaset.c:906:
+	/* allocate memory for our device state and intialize it */
 	                                            ^^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#971: FILE: drivers/isdn/gigaset/usb-gigaset.c:923:
+error:	if (cardstate)
+		gigaset_freecs(cardstate);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#980: FILE: drivers/isdn/gigaset/usb-gigaset.c:932:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1005: FILE: drivers/isdn/gigaset/usb-gigaset.c:957:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1016: FILE: drivers/isdn/gigaset/asyncdata.c:1:
+/*

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1043: FILE: drivers/isdn/gigaset/asyncdata.c:28:
+	if (c < PPP_TRANS) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1044: FILE: drivers/isdn/gigaset/asyncdata.c:29:
+	if (c == PPP_FLAG) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1045: FILE: drivers/isdn/gigaset/asyncdata.c:30:
+	if (c == PPP_ESCAPE) return 1;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1062: FILE: drivers/isdn/gigaset/asyncdata.c:47:
+	unsigned cbytes      = cs->cbytes;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1073: FILE: drivers/isdn/gigaset/asyncdata.c:58:
+			gigaset_handle_modem_response(cs); /* can change
+							      cs->dle */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: drivers/isdn/gigaset/asyncdata.c:58:
+							      cs->dle */

CHECK:BRACES: Unbalanced braces around else statement
#1180: FILE: drivers/isdn/gigaset/asyncdata.c:165:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1182: FILE: drivers/isdn/gigaset/asyncdata.c:167:
+					gig_dbg(DEBUG_HDLC,
+					    "7e----------------------------");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1192: FILE: drivers/isdn/gigaset/asyncdata.c:177:
+				break;
+			} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/isdn/gigaset/asyncdata.c:186:
+					dev_err(cs->dev,
+					    "Packet checksum at %lu failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1202: FILE: drivers/isdn/gigaset/asyncdata.c:187:
+					    "Packet checksum at %lu failed, "
+					    "packet is corrupted (%u bytes)!\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1208: FILE: drivers/isdn/gigaset/asyncdata.c:193:
+					if (likely((l = skb->len) > 2)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1215: FILE: drivers/isdn/gigaset/asyncdata.c:200:
+						if (l == 1) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1217: FILE: drivers/isdn/gigaset/asyncdata.c:202:
+							dev_err(cs->dev,
+						  "invalid packet size (1)!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: drivers/isdn/gigaset/asyncdata.c:205:
+							gigaset_rcv_error(NULL,
+								cs, bcs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1240: FILE: drivers/isdn/gigaset/asyncdata.c:225:
+			} else if (likely((skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1349: FILE: drivers/isdn/gigaset/asyncdata.c:334:
+		if (likely(!(inputstate & INS_skip_frame))) {
+			gigaset_rcv_skb(skb, cs, bcs);
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1356: FILE: drivers/isdn/gigaset/asyncdata.c:341:
+		} else if (likely((skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1375: FILE: drivers/isdn/gigaset/asyncdata.c:360:
+	unsigned tail, head, numbytes;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1398: FILE: drivers/isdn/gigaset/asyncdata.c:383:
+				if (c == DLE_FLAG && (cs->dle ||
+				    inbuf->inputstate & INS_DLE_command)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1408: FILE: drivers/isdn/gigaset/asyncdata.c:393:
+				if (!(inbuf->inputstate & INS_DLE_char)) {
+

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1424: FILE: drivers/isdn/gigaset/asyncdata.c:409:
+						if (inbuf->inputstate & INS_command)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1426: FILE: drivers/isdn/gigaset/asyncdata.c:411:
+							dev_err(cs->dev,
+					"received <DLE> 'X' in command mode\n");

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1433: FILE: drivers/isdn/gigaset/asyncdata.c:418:
+						if (!(inbuf->inputstate & INS_command))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: drivers/isdn/gigaset/asyncdata.c:420:
+							dev_err(cs->dev,
+					"received <DLE> '.' in hdlc mode\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1438: FILE: drivers/isdn/gigaset/asyncdata.c:423:
+							~(INS_DLE_command|INS_command)
 							                 ^

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1441: FILE: drivers/isdn/gigaset/asyncdata.c:426:
+					//case DLE_FLAG: /*DLE_FLAG in data stream*/ /* schon oben behandelt! */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1444: FILE: drivers/isdn/gigaset/asyncdata.c:429:
+						dev_err(cs->dev,
+						      "received 0x10 0x%02x!\n",

CHECK:SPACING: No space is necessary after a cast
#1445: FILE: drivers/isdn/gigaset/asyncdata.c:430:
+							(int) c);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1469: FILE: drivers/isdn/gigaset/asyncdata.c:454:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1519: FILE: drivers/isdn/gigaset/asyncdata.c:504:
+		if (muststuff(*skb->data)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1522: FILE: drivers/isdn/gigaset/asyncdata.c:507:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1563: FILE: drivers/isdn/gigaset/asyncdata.c:548:
+	iraw_skb = dev_alloc_skb(2*skb->len + tail + head);
 	                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1595: FILE: drivers/isdn/gigaset/asyncdata.c:580:
+	unsigned len;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 51 warnings, 60 checks, 1564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
