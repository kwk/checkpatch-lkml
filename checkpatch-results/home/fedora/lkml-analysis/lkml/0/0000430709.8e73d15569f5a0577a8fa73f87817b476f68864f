WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
doesn't blow up the patch; please let me know if it does and I'll try to create

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/arch/alpha/kernel/time.c  Sun Sep 22 08:01:47 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: arch/alpha/kernel/time.c:134:
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#60: FILE: arch/alpha/kernel/time.c:134:
            && xtime.tv_sec > state.last_rtc_update + 660
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2

CHECK:SPACING: No space is necessary after a cast
#60: FILE: arch/alpha/kernel/time.c:134:
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: arch/alpha/kernel/time.c:134:
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#60: FILE: arch/alpha/kernel/time.c:134:
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: arch/alpha/kernel/time.c:135:
+           && xtime.tv_nsec <= 500000 + ((unsigned) TICK_SIZE) / 2) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#61: FILE: arch/alpha/kernel/time.c:135:
+           && xtime.tv_nsec >= 500000 - ((unsigned) TICK_SIZE) / 2
+           && xtime.tv_nsec <= 500000 + ((unsigned) TICK_SIZE) / 2) {

CHECK:SPACING: No space is necessary after a cast
#61: FILE: arch/alpha/kernel/time.c:135:
+           && xtime.tv_nsec <= 500000 + ((unsigned) TICK_SIZE) / 2) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: arch/alpha/kernel/time.c:135:
+           && xtime.tv_nsec <= 500000 + ((unsigned) TICK_SIZE) / 2) {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#61: FILE: arch/alpha/kernel/time.c:135:
+           && xtime.tv_nsec <= 500000 + ((unsigned) TICK_SIZE) / 2) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: arch/alpha/kernel/time.c:370:
+       xtime.tv_nsec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/alpha/kernel/time.c:419:
+       usec = (xtime.tv_nsec / 1000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: arch/alpha/kernel/time.c:490:
+       xtime.tv_nsec = (usec / 1000);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: include/asm-alpha/hardirq.h:77:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#101: FILE: include/asm-alpha/hardirq.h:79:
+#define in_atomic()    (preempt_count() != kernel_locked())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#104: FILE: include/asm-alpha/hardirq.h:82:
+#define in_atomic()    (preempt_count() != 0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#115: FILE: include/asm-alpha/spinlock.h:103:
+#define rwlock_is_locked(x)    (*(volatile int *)(x) != 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 5 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
