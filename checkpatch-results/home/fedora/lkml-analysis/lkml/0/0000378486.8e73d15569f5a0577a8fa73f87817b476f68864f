WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> > >I agree too.  Having /sbin/hotplug send events to a pipe where a daemon

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#113: FILE: char/kue-test.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#119: FILE: char/kue-test.c:7:
+struct msg
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: char/kue-test.c:32:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: char/kue-test.c:32:
+
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: char/kue-test.c:34:
+int __init kue_test_init (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: char/kue-test.c:37:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: char/kue-test.c:38:
+	kue_send_event (&m3.kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: char/kue-test.c:39:
+	kue_send_event (&m2.kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: char/kue-test.c:40:
+	kue_send_event (&m1.kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: char/kue-test.c:42:
+	_m4 = kmalloc (sizeof (*_m4), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: char/kue-test.c:42:
+	_m4 = kmalloc (sizeof (*_m4), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: char/kue-test.c:43:
+	memcpy (_m4, &m4, sizeof (m4));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: char/kue-test.c:43:
+	memcpy (_m4, &m4, sizeof (m4));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: char/kue-test.c:45:
+	kue_send_event (&_m4->kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: char/kue-test.c:50:
+void __exit kue_test_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: char/kue-test.c:52:
+	kue_recall_event (&m3.kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: char/kue-test.c:53:
+	kue_recall_event (&m2.kue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: char/kue-test.c:54:
+^Ikue_recall_event (&m1.kue);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: char/kue-test.c:54:
+	kue_recall_event (&m1.kue);	

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: char/kue-test.c:57:
+
+

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#178: FILE: char/kue.c:1:
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: char/kue.c:12:
+ *         struct kue kue; // FIRST MEMBER!! $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#192: FILE: char/kue.c:14:
};

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: char/kue.c:19:
+ * delivered. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: char/kue.c:32:
+ * bigger. $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#223: FILE: char/kue.c:45:
+#include <asm/uaccess.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: char/kue.c:49:
+#define debug(a...) printk (KERN_ERR a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: char/kue.c:49:
+#define debug(a...) printk (KERN_ERR a)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#227: FILE: char/kue.c:49:
+#define debug(a...) printk (KERN_ERR a)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: char/kue.c:55:
+static struct list_head kue_list = LIST_HEAD_INIT (kue_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: char/kue.c:56:
+static struct list_head kue_fd_list = LIST_HEAD_INIT (kue_fd_list);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#235: FILE: char/kue.c:57:
+static unsigned kue_fds = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#235: FILE: char/kue.c:57:
+static unsigned kue_fds = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#237: FILE: char/kue.c:59:
+struct kue_fd
+{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: char/kue.c:68:
+void __kue_queue (struct kue *kue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: char/kue.c:70:
+	debug ("Queuing %p\n", kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: char/kue.c:72:
+	list_add_tail (&kue->list, &kue_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: char/kue.c:76:
+void __kue_dequeue (struct kue *kue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: char/kue.c:78:
+	debug ("Dequeuing %p%s\n", kue,

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#257: FILE: char/kue.c:79:
+	       kue->flags & KUE_KFREE? " (kfree()d)" : "");
 	                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: char/kue.c:80:
+	list_del (&kue->list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: char/kue.c:82:
+		kfree (kue);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#264: FILE: char/kue.c:86:
+struct kue * __kue_locate_event (const struct kue *kue)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: char/kue.c:86:
+struct kue * __kue_locate_event (const struct kue *kue)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: char/kue.c:90:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: char/kue.c:91:
+	list_for_each (itr, &kue_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: char/kue.c:92:
+		kue_itr = container_of (itr, struct kue, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: char/kue.c:102:
+void __kue_recall_event (struct kue *kue)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: char/kue.c:106:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: char/kue.c:107:
+	debug ("__Recalling %p\n", kue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: char/kue.c:108:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: char/kue.c:110:
+	list_for_each (itr, &kue_fd_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: char/kue.c:111:
+		kue_fd = container_of (itr, struct kue_fd, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: char/kue.c:115:
+	__kue_dequeue (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: char/kue.c:120:
+void kue_send_event (struct kue *kue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: char/kue.c:122:
+	debug ("Sending %p\n", kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: char/kue.c:123:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: char/kue.c:124:
+	__kue_queue (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: char/kue.c:125:
+	up (&kue_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: char/kue.c:128:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: char/kue.c:129:
+int kue_recall_event (struct kue *kue)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: char/kue.c:132:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: char/kue.c:133:
+	debug ("Recalling %p\n", kue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: char/kue.c:134:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: char/kue.c:135:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: char/kue.c:136:
+	if (__kue_locate_event (kue) != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "__kue_locate_event"
#314: FILE: char/kue.c:136:
+	if (__kue_locate_event (kue) != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: char/kue.c:137:
+		__kue_recall_event (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: char/kue.c:140:
+	up (&kue_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: char/kue.c:144:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#323: FILE: char/kue.c:145:
+unsigned kue_delivered_event (const struct kue *kue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: char/kue.c:145:
+unsigned kue_delivered_event (const struct kue *kue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: char/kue.c:147:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: char/kue.c:148:
+	kue = __kue_locate_event (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: char/kue.c:149:
+	up (&kue_lock);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kue"
#328: FILE: char/kue.c:150:
+	return kue == NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: char/kue.c:153:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: char/kue.c:157:
+int kue_open (struct inode *inode, struct file *file)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: char/kue.c:159:
+	struct kue_fd *kue_fd = kmalloc (sizeof (*kue_fd), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: char/kue.c:159:
+	struct kue_fd *kue_fd = kmalloc (sizeof (*kue_fd), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: char/kue.c:160:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kue_fd"
#339: FILE: char/kue.c:161:
+	if (kue_fd == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: char/kue.c:165:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: char/kue.c:166:
+	list_add_tail (&kue_fd->list, &kue_fd_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: char/kue.c:168:
+	up (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: char/kue.c:170:
+	debug ("Open kue_fd %p kue_fds %d\n", kue_fd, kue_fds);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: char/kue.c:175:
+ssize_t kue_read (struct file *file, char *dest, size_t size,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kue_fd"
#361: FILE: char/kue.c:183:
+	if (kue_fd == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: char/kue.c:185:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: char/kue.c:186:
+	debug ("Read kue_fd %p kue_itr %p\n", kue_fd, kue_fd->itr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: char/kue.c:187:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: char/kue.c:188:
+	down (&kue_lock);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#368: FILE: char/kue.c:190:
+	while (1)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#374: FILE: char/kue.c:196:
+		kue = container_of (itr->next, struct kue, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: char/kue.c:199:
+		debug ("Read kue_fd %p kue_itr %p dest %p size %u kue %p\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: char/kue.c:202:
+		result = copy_to_user (dest, &kue->kue_user,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: char/kue.c:203:
+		result = copy_to_user (dest, &kue->kue_user,
+		if (result != 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: char/kue.c:214:
+			__kue_dequeue (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: char/kue.c:219:
+	debug ("Read-finish kue_fd %p kue_itr %p dest %p size %u\n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: char/kue.c:222:
+^I       dest, size, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: char/kue.c:224:
+	up (&kue_lock);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#404: FILE: char/kue.c:225:
+	return total_copied == 0? result : total_copied;
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#408: FILE: char/kue.c:229:
+unsigned int kue_poll (struct file *file, struct poll_table_struct *pt)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#411: FILE: char/kue.c:232:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: char/kue.c:236:
+int kue_release (struct inode *inode, struct file *file)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: char/kue.c:241:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#421: FILE: char/kue.c:242:
+	debug ("Release kue_fd %p\n", kue_fd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: char/kue.c:243:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kue_fd"
#423: FILE: char/kue.c:244:
+	if (kue_fd == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: char/kue.c:246:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: char/kue.c:247:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: char/kue.c:248:
+	list_del (&kue_fd->list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: char/kue.c:250:
+	kfree (kue_fd);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#431: FILE: char/kue.c:252:
+	 * guy */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: char/kue.c:253:
+	list_for_each_safe (itr, next, &kue_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: char/kue.c:254:
+		kue = container_of (itr, struct kue, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: char/kue.c:256:
+			__kue_recall_event (kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: char/kue.c:258:
+	up (&kue_lock);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#441: FILE: char/kue.c:262:
+static struct file_operations kue_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: char/kue.c:277:
+int __init kue_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: char/kue.c:279:
+	return misc_register (&kue_misc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: char/kue.c:283:
+void __exit kue_exit (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: char/kue.c:288:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: char/kue.c:290:
+	down (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: char/kue.c:291:
+	list_for_each (itr, &kue_fd_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: char/kue.c:292:
+		kue_fd = container_of (itr, struct kue_fd, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#472: FILE: char/kue.c:293:
+		debug ("Exit kue_fd %p\n", kue_fd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: char/kue.c:295:
+		kfree (kue_fd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: char/kue.c:297:
+	list_del_init (&kue_fd_list); /* call me pedantic */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#478: FILE: char/kue.c:299:
+	list_for_each_safe (itr, next, &kue_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#479: FILE: char/kue.c:300:
+		kue = container_of (itr, struct kue, list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: char/kue.c:301:
+		debug ("Exit kue %p\n", kue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#481: FILE: char/kue.c:302:
+		__kue_dequeue (kue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: char/kue.c:303:
+^I}^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: char/kue.c:304:
+	up (&kue_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: char/kue.c:305:
+	misc_deregister (&kue_misc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: char/kue.c:308:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#488: FILE: char/kue.c:309:
+EXPORT_SYMBOL(kue_send_event);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#489: FILE: char/kue.c:310:
+EXPORT_SYMBOL(kue_recall_event);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#490: FILE: char/kue.c:311:
+EXPORT_SYMBOL(kue_delivered_event);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#499: FILE: linux/kue.h:1:
+#ifndef _LINUX_EVENTS_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: linux/kue.h:8:
+^Isize_t size; /* size of data + sizeof (struct kue_user) */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: linux/kue.h:18:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: linux/kue.h:19:
+^Istruct list_head list; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: linux/kue.h:21:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: linux/kue.h:23:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: linux/kue.h:34:
+	.list = LIST_HEAD_INIT ((_kue).list),				\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: linux/kue.h:36:
+	.kue_user = { .size = ((_size) + sizeof (struct kue_user)) }	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#537: FILE: linux/kue.h:39:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: linux/kue.h:51:
+extern void kue_send_event (struct kue *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: linux/kue.h:51:
+extern void kue_send_event (struct kue *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kue *' should also have an identifier name
#549: FILE: linux/kue.h:51:
+extern void kue_send_event (struct kue *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: linux/kue.h:65:
+extern int kue_recall_event (struct kue *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#563: FILE: linux/kue.h:65:
+extern int kue_recall_event (struct kue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kue *' should also have an identifier name
#563: FILE: linux/kue.h:65:
+extern int kue_recall_event (struct kue *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#570: FILE: linux/kue.h:72:
+extern unsigned kue_delivered_event (const struct kue *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: linux/kue.h:72:
+extern unsigned kue_delivered_event (const struct kue *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#570: FILE: linux/kue.h:72:
+extern unsigned kue_delivered_event (const struct kue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct kue *' should also have an identifier name
#570: FILE: linux/kue.h:72:
+extern unsigned kue_delivered_event (const struct kue *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 114 warnings, 16 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
