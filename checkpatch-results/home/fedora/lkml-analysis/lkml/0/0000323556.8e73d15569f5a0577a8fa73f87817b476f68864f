WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
--On Thursday, November 20, 2003 11:55:04 PM +0100 Pavel Machek <pavel@ucw.cz> wrote:

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#54: FILE: Makefile:4:
+EXTRAVERSION = -test5ic
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#117: FILE: drivers/input/evdev.c:94:
+printk(KERN_WARNING "in evdev_free\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#126: FILE: drivers/input/evdev.c:103:
+printk(KERN_WARNING "in evdev_release \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#126: FILE: drivers/input/evdev.c:103:
+printk(KERN_WARNING "in evdev_release \n");

ERROR:SPACING: space required before the open brace '{'
#141: FILE: drivers/input/evdev.c:116:
+		else{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#141: FILE: drivers/input/evdev.c:116:
+		else{

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/input/evdev.c:416:
+^I.name = ^I"input/event%d",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: drivers/input/evdev.c:417:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#198: FILE: drivers/input/evdev.c:417:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: drivers/input/evdev.c:418:
+^I.minor_base = ^IEVDEV_MINOR_BASE,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#206: FILE: drivers/input/evdev.c:425:
+printk(KERN_WARNING "in evdev_connect\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: drivers/input/evdev.c:437:
+	if (!(evdev->handle = kmalloc(sizeof(struct input_handle), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*evdev->handle)...) over kmalloc(sizeof(struct input_handle)...)
#214: FILE: drivers/input/evdev.c:437:
+	if (!(evdev->handle = kmalloc(sizeof(struct input_handle), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#247: FILE: drivers/input/evdev.c:463:
+printk(KERN_WARNING "in evdev_disconnect\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#266: FILE: drivers/input/evdev.c:495:
+printk(KERN_WARNING "in evdev_init\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#274: FILE: drivers/input/evdev.c:503:
+printk(KERN_WARNING "in evdev_exit \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#274: FILE: drivers/input/evdev.c:503:
+printk(KERN_WARNING "in evdev_exit \n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#288: FILE: drivers/input/input.c:37:
+EXPORT_SYMBOL(input_unregister_class_dev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#289: FILE: drivers/input/input.c:38:
+EXPORT_SYMBOL(input_dev_get);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#290: FILE: drivers/input/input.c:39:
+EXPORT_SYMBOL(input_dev_put);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#298: FILE: drivers/input/input.c:224:
+printk(KERN_WARNING "in input_release_device\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: drivers/input/input.c:688:
+static ssize_t show_dev (struct class_device *class_dev, char *buf)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#314: FILE: drivers/input/input.c:694:
+	return sprintf(buf, "%04x\n", base + 32 );

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#316: FILE: drivers/input/input.c:696:
+static CLASS_DEVICE_ATTR(dev, S_IRUGO, show_dev, NULL);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#320: FILE: drivers/input/input.c:700:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#322: FILE: drivers/input/input.c:702:
+printk(KERN_WARNING "in release_class_dev\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'release_class_dev', this function's name, in a string
#322: FILE: drivers/input/input.c:702:
+printk(KERN_WARNING "in release_class_dev\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: drivers/input/input.c:703:
+	if(dev)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#324: FILE: drivers/input/input.c:704:
+	if(dev)
+		kfree(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: drivers/input/input.c:712:
+struct input_dev * input_dev_get(struct input_dev *dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: drivers/input/input.c:716:
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#340: FILE: drivers/input/input.c:720:
+	if(tmp)

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: drivers/input/input.c:728:
+	if(dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#358: FILE: drivers/input/input.c:738:
+printk(KERN_WARNING "in input_register_class_dev\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'input_register_class_dev', this function's name, in a string
#358: FILE: drivers/input/input.c:738:
+printk(KERN_WARNING "in input_register_class_dev\n");

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#360: FILE: drivers/input/input.c:740:
+	devfs_mk_cdev(MKDEV(INPUT_MAJOR, intf->minor_base + intf->minor), intf->mode, intf->name, intf->minor);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: drivers/input/input.c:745:
+	if(input_name)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#367: FILE: drivers/input/input.c:747:
+	else
+	input_name = sysfs_name;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/input/input.c:754:
+^Iif (err)^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#378: FILE: drivers/input/input.c:758:
+printk(KERN_WARNING "in input_register_class_dev setting minor to: %d\n",dev->minor);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: drivers/input/input.c:758:
+printk(KERN_WARNING "in input_register_class_dev setting minor to: %d\n",dev->minor);
                                                                         ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'input_register_class_dev', this function's name, in a string
#378: FILE: drivers/input/input.c:758:
+printk(KERN_WARNING "in input_register_class_dev setting minor to: %d\n",dev->minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#382: FILE: drivers/input/input.c:762:
+printk(KERN_WARNING "in input_register_class_dev error registering class dev: \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'input_register_class_dev', this function's name, in a string
#382: FILE: drivers/input/input.c:762:
+printk(KERN_WARNING "in input_register_class_dev error registering class dev: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#382: FILE: drivers/input/input.c:762:
+printk(KERN_WARNING "in input_register_class_dev error registering class dev: \n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#385: FILE: drivers/input/input.c:765:
+	return;
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#387: FILE: drivers/input/input.c:767:
+void input_unregister_class_dev(char *name, unsigned minor)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#397: FILE: drivers/input/input.c:777:
+printk(KERN_WARNING "in input_unregister_class_dev \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'input_unregister_class_dev', this function's name, in a string
#397: FILE: drivers/input/input.c:777:
+printk(KERN_WARNING "in input_unregister_class_dev \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#397: FILE: drivers/input/input.c:777:
+printk(KERN_WARNING "in input_unregister_class_dev \n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: drivers/input/input.c:779:
+	list_for_each (tmp, &input_dev_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#400: FILE: drivers/input/input.c:780:
+	list_for_each (tmp, &input_dev_list) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#402: FILE: drivers/input/input.c:782:
+printk(KERN_WARNING "dev name in unregister is: %s\n",dev->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#402: FILE: drivers/input/input.c:782:
+printk(KERN_WARNING "dev name in unregister is: %s\n",dev->name);
                                                      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#407: FILE: drivers/input/input.c:787:
+		else{
+printk(KERN_WARNING "given minor: %d dne dev->minor: %d\n",minor,dev->minor);

ERROR:SPACING: space required before the open brace '{'
#407: FILE: drivers/input/input.c:787:
+		else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#407: FILE: drivers/input/input.c:787:
+		}
+		else{

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: drivers/input/input.c:787:
+		else{

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#408: FILE: drivers/input/input.c:788:
+printk(KERN_WARNING "given minor: %d dne dev->minor: %d\n",minor,dev->minor);
                                      ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#408: FILE: drivers/input/input.c:788:
+printk(KERN_WARNING "given minor: %d dne dev->minor: %d\n",minor,dev->minor);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: drivers/input/input.c:788:
+printk(KERN_WARNING "given minor: %d dne dev->minor: %d\n",minor,dev->minor);
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: drivers/input/input.c:788:
+printk(KERN_WARNING "given minor: %d dne dev->minor: %d\n",minor,dev->minor);
                                                                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#411: FILE: drivers/input/input.c:791:
+	if(found) {
+printk(KERN_WARNING "found in input_dev_list minor is: %d \n",dev->minor);

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: drivers/input/input.c:791:
+	if(found) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#412: FILE: drivers/input/input.c:792:
+printk(KERN_WARNING "found in input_dev_list minor is: %d \n",dev->minor);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: drivers/input/input.c:792:
+printk(KERN_WARNING "found in input_dev_list minor is: %d \n",dev->minor);
                                                              ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#412: FILE: drivers/input/input.c:792:
+printk(KERN_WARNING "found in input_dev_list minor is: %d \n",dev->minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#427: FILE: drivers/input/input.c:848:
+printk(KERN_WARNING "in input_exit\n");

ERROR:SPACING: space required before the open brace '{'
#448: FILE: drivers/input/joydev.c:162:
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#448: FILE: drivers/input/joydev.c:162:
+		else{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#460: FILE: drivers/input/joydev.c:381:
+^I.name = ^I"js%d",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#461: FILE: drivers/input/joydev.c:382:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#461: FILE: drivers/input/joydev.c:382:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#462: FILE: drivers/input/joydev.c:383:
+^I.minor_base = ^IJOYDEV_MINOR_BASE,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/input/joydev.c:458:
+^I//input_register_class_dev(dev, &intf); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#477: FILE: drivers/input/joydev.c:458:
+^I//input_register_class_dev(dev, &intf); ^I$

ERROR:SPACING: space required before the open brace '{'
#486: FILE: drivers/input/joydev.c:471:
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#486: FILE: drivers/input/joydev.c:471:
+	else{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#619: FILE: drivers/input/mouse/psmouse-base.c:504:
+	if (!(psmouse->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*psmouse->dev)...) over kmalloc(sizeof(struct input_dev)...)
#619: FILE: drivers/input/mouse/psmouse-base.c:504:
+	if (!(psmouse->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#749: FILE: drivers/input/mousedev.c:176:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#749: FILE: drivers/input/mousedev.c:176:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#750: FILE: drivers/input/mousedev.c:177:
+^I.minor_base = ^IMOUSEDEV_MINOR_BASE,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#756: FILE: drivers/input/mousedev.c:182:
+printk(KERN_WARNING "in mousedev_free \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#756: FILE: drivers/input/mousedev.c:182:
+printk(KERN_WARNING "in mousedev_free \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#765: FILE: drivers/input/mousedev.c:191:
+printk(KERN_WARNING "in mixdev_release \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#765: FILE: drivers/input/mousedev.c:191:
+printk(KERN_WARNING "in mixdev_release \n");

CHECK:BRACES: Unbalanced braces around else statement
#775: FILE: drivers/input/mousedev.c:199:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#786: FILE: drivers/input/mousedev.c:212:
+printk(KERN_WARNING "in mousedev_release \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#786: FILE: drivers/input/mousedev.c:212:
+printk(KERN_WARNING "in mousedev_release \n");

ERROR:SPACING: space required before the open brace '{'
#794: FILE: drivers/input/mousedev.c:219:
+		if (list->mousedev->minor == MOUSEDEV_MIX){

ERROR:SPACING: space required before the open brace '{'
#804: FILE: drivers/input/mousedev.c:227:
+			else{

CHECK:BRACES: Unbalanced braces around else statement
#804: FILE: drivers/input/mousedev.c:227:
+			else{

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#824: FILE: drivers/input/mousedev.c:424:
+int seen = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#826: FILE: drivers/input/mousedev.c:426:
+printk(KERN_WARNING "in mousedev_connect \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#826: FILE: drivers/input/mousedev.c:426:
+printk(KERN_WARNING "in mousedev_connect \n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#834: FILE: drivers/input/mousedev.c:438:
+	if (!(mousedev->handle = kmalloc(sizeof(struct input_handle), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mousedev->handle)...) over kmalloc(sizeof(struct input_handle)...)
#834: FILE: drivers/input/mousedev.c:438:
+	if (!(mousedev->handle = kmalloc(sizeof(struct input_handle), GFP_KERNEL)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#862: FILE: drivers/input/mousedev.c:459:
+printk(KERN_WARNING "in mousedev connect minor before is: %d\n", intf.minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#865: FILE: drivers/input/mousedev.c:462:
+printk(KERN_WARNING "in mousedev connect minor after is: %d seen is %d\n", intf.minor, seen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#874: FILE: drivers/input/mousedev.c:470:
+printk(KERN_WARNING "in mousedev_disconnect \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#874: FILE: drivers/input/mousedev.c:470:
+printk(KERN_WARNING "in mousedev_disconnect \n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: drivers/input/mousedev.c:479:
+		input_unregister_class_dev(intf.name,mousedev->minor);
 		                                    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#892: FILE: drivers/input/mousedev.c:526:
+^I.mode = ^IS_IFCHR | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#892: FILE: drivers/input/mousedev.c:526:
+	.mode = 	S_IFCHR | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#893: FILE: drivers/input/mousedev.c:527:
+^I.minor_base = ^IMOUSEDEV_MINOR_BASE + MOUSEDEV_MIX,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#900: FILE: drivers/input/mousedev.c:534:
+printk(KERN_WARNING "in mousedev_init \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#900: FILE: drivers/input/mousedev.c:534:
+printk(KERN_WARNING "in mousedev_init \n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct input_dev)...)
#912: FILE: drivers/input/mousedev.c:545:
+	dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#913: FILE: drivers/input/mousedev.c:546:
+	if(!dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#924: FILE: drivers/input/mousedev.c:563:
+printk(KERN_WARNING "in mousedev_exit\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#932: FILE: drivers/input/mousedev.c:570:
+	input_unregister_class_dev(intf2.name,MOUSEDEV_MIX);
 	                                     ^

ERROR:SPACING: space required before the open brace '{'
#953: FILE: drivers/input/tsdev.c:136:
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#953: FILE: drivers/input/tsdev.c:136:
+		else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/input/tsdev.c:304:
+^I.name =^I^I"input/ts%d", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#966: FILE: drivers/input/tsdev.c:305:
+^I.mode = ^IS_IFCHRIS | S_IRUGO | S_IWUSR,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#966: FILE: drivers/input/tsdev.c:305:
+	.mode = 	S_IFCHRIS | S_IRUGO | S_IWUSR,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#967: FILE: drivers/input/tsdev.c:306:
+^I.minor_base = ^ITSDEV_MINOR_BASE,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: drivers/input/tsdev.c:343:
+^I//input_register_class_dev(dev, &intf);^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hidinput->input)...) over kmalloc(sizeof(struct input_dev)...)
#1041: FILE: drivers/usb/input/hid-input.c:580:
+				hidinput->input = kmalloc(sizeof(struct input_dev), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1071: FILE: drivers/usb/input/hid-input.c:598:
+				hidinput->input->id.vendor = dev->descriptor.idVendor;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1072: FILE: drivers/usb/input/hid-input.c:599:
+				hidinput->input->id.product = dev->descriptor.idProduct;

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#1073: FILE: drivers/usb/input/hid-input.c:600:
+				hidinput->input->id.version = dev->descriptor.bcdDevice;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1193: FILE: drivers/usb/input/kbtab.c:133:
+	if (!(kbtab->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*kbtab->dev)...) over kmalloc(sizeof(struct input_dev)...)
#1193: FILE: drivers/usb/input/kbtab.c:133:
+	if (!(kbtab->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: drivers/usb/input/pid.c:293:
+    hidinput->input->upload_effect = hid_pid_upload_effect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: drivers/usb/input/pid.c:294:
+    hidinput->input->flush = hid_pid_flush;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/usb/input/pid.c:295:
+    hidinput->input->ff_effects_max = 8;  // A random default$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: drivers/usb/input/pid.c:296:
+    set_bit(EV_FF, hidinput->input->evbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: drivers/usb/input/pid.c:297:
+    set_bit(EV_FF_STATUS, hidinput->input->evbit);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1325: FILE: drivers/usb/input/powermate.c:321:
+	if (!(pm->input = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pm->input)...) over kmalloc(sizeof(struct input_dev)...)
#1325: FILE: drivers/usb/input/powermate.c:321:
+	if (!(pm->input = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1347: FILE: drivers/usb/input/powermate.c:373:
+	case POWERMATE_PRODUCT_NEW: pm->input->name = pm_name_powermate; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1348: FILE: drivers/usb/input/powermate.c:374:
+	case POWERMATE_PRODUCT_OLD: pm->input->name = pm_name_soundknob; break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1382: FILE: drivers/usb/input/powermate.c:395:
+	printk(KERN_INFO "input: %s on %s\n", pm->input->name, pm->input->phys);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1447: FILE: drivers/usb/input/usbkbd.c:262:
+	if (!(kbd->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*kbd->dev)...) over kmalloc(sizeof(struct input_dev)...)
#1447: FILE: drivers/usb/input/usbkbd.c:262:
+	if (!(kbd->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL)))

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1461: FILE: drivers/usb/input/usbkbd.c:275:
+	kbd->dev->ledbit[0] = BIT(LED_NUML) | BIT(LED_CAPSL) | BIT(LED_SCROLLL) | BIT(LED_COMPOSE) | BIT(LED_KANA);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: drivers/usb/input/usbkbd.c:302:
+^Ikbd->dev->phys = kbd->phys;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1550: FILE: drivers/usb/input/usbmouse.c:152:
+^Iif (!(mouse->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL))) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1550: FILE: drivers/usb/input/usbmouse.c:152:
+	if (!(mouse->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL))) 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mouse->dev)...) over kmalloc(sizeof(struct input_dev)...)
#1550: FILE: drivers/usb/input/usbmouse.c:152:
+	if (!(mouse->dev = kmalloc(sizeof(struct input_dev), GFP_KERNEL))) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1642: FILE: drivers/usb/input/xpad.c:240:
+	if ((xpad->dev = kmalloc (sizeof(struct input_dev), GFP_KERNEL)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1642: FILE: drivers/usb/input/xpad.c:240:
+	if ((xpad->dev = kmalloc (sizeof(struct input_dev), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*xpad->dev)...) over kmalloc(sizeof(struct input_dev)...)
#1642: FILE: drivers/usb/input/xpad.c:240:
+	if ((xpad->dev = kmalloc (sizeof(struct input_dev), GFP_KERNEL)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1723: FILE: drivers/usb/input/xpad.c:321:
+	printk(KERN_INFO "input: %s on %s", xpad->dev->name, path);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1762: FILE: include/linux/input.h:820:
+	unsigned minor;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1771: FILE: include/linux/input.h:899:
+struct input_class_interface {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1774: FILE: include/linux/input.h:902:
+	unsigned minor;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1775: FILE: include/linux/input.h:903:
+^Iint minor_base; $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#1785: FILE: include/linux/input.h:920:
+void input_register_class_dev(struct input_dev *, struct input_class_interface *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_class_interface *' should also have an identifier name
#1785: FILE: include/linux/input.h:920:
+void input_register_class_dev(struct input_dev *, struct input_class_interface *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1786: FILE: include/linux/input.h:921:
+void input_unregister_class_dev(char *, unsigned );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1786: FILE: include/linux/input.h:921:
+void input_unregister_class_dev(char *, unsigned );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1786: FILE: include/linux/input.h:921:
+void input_unregister_class_dev(char *, unsigned );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#1786: FILE: include/linux/input.h:921:
+void input_unregister_class_dev(char *, unsigned );

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1788: FILE: include/linux/input.h:923:
+struct input_dev * input_dev_get(struct input_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#1788: FILE: include/linux/input.h:923:
+struct input_dev * input_dev_get(struct input_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#1789: FILE: include/linux/input.h:924:
+void input_dev_put(struct input_dev *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 93 warnings, 23 checks, 1581 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000323556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
