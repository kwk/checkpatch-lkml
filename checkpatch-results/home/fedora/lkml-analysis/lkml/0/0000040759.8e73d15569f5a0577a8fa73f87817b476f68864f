WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: Documentation/firmware_class/firmware_example.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: Documentation/firmware_class/firmware_example.c:19:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#62: FILE: Documentation/firmware_class/firmware_example.c:20:
+       u8 *buf = kmalloc(size + 1, GFP_KERNEL);
+       memcpy(buf, firmware, size);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: Documentation/firmware_class/firmware_example.c:20:
+       memcpy(buf, firmware, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: Documentation/firmware_class/firmware_example.c:21:
+       buf[size] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: Documentation/firmware_class/firmware_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#64: FILE: Documentation/firmware_class/firmware_example.c:22:
+       printk(KERN_INFO "firmware_example: Firmware: %s\n", buf);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: Documentation/firmware_class/firmware_example.c:23:
+       kfree(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: Documentation/firmware_class/firmware_example.c:29:
+       const struct firmware *fw_entry;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: Documentation/firmware_class/firmware_example.c:30:
+       const struct firmware *fw_entry;
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: Documentation/firmware_class/firmware_example.c:30:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#72: FILE: Documentation/firmware_class/firmware_example.c:30:
+       printk(KERN_INFO "firmware_example: ghost device inserted\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: Documentation/firmware_class/firmware_example.c:32:
+       if (request_firmware(&fw_entry, "sample_firware.bin", dev) !=  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: Documentation/firmware_class/firmware_example.c:32:
+       if (request_firmware(&fw_entry, "sample_firware.bin", dev) !=  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#74: FILE: Documentation/firmware_class/firmware_example.c:32:
+       if (request_firmware(&fw_entry, "sample_firware.bin", dev) !=  
[...]
+               printk(KERN_ERR "firmware_example: Firmware not  

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#75: FILE: Documentation/firmware_class/firmware_example.c:32:
0) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not  $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not  $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#76: FILE: Documentation/firmware_class/firmware_example.c:33:
+               printk(KERN_ERR "firmware_example: Firmware not  

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: Documentation/firmware_class/firmware_example.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: Documentation/firmware_class/firmware_example.c:34:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: Documentation/firmware_class/firmware_example.c:35:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: Documentation/firmware_class/firmware_example.c:37:
+       sample_firmware_load(fw_entry->data, fw_entry->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: Documentation/firmware_class/firmware_example.c:39:
+       release_firmware(fw_entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: Documentation/firmware_class/firmware_example.c:41:
+       /* finish setting up the device */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: Documentation/firmware_class/firmware_example.c:46:
+       printk(KERN_DEBUG "firmware_example : ghost device released\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: Documentation/firmware_class/firmware_example.c:50:
+       .bus_id = "ghost0",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: Documentation/firmware_class/firmware_example.c:51:
+       .release = ghost_release$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: Documentation/firmware_class/firmware_example.c:56:
+       device_register(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: Documentation/firmware_class/firmware_example.c:57:
+       sample_probe(&ghost_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: Documentation/firmware_class/firmware_example.c:58:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: Documentation/firmware_class/firmware_example.c:62:
+       device_unregister(&ghost_device);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: Documentation/firmware_class/:26:
+static void sample_probe_async_cont(const struct firmware *fw, void  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: Documentation/firmware_class/:30:
+                      "firmware_nowait_example: Firmware not  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: Documentation/firmware_class/:34:
+       printk(KERN_INFO "firmware_nowait_example: Device Pointer \"%s $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: Documentation/firmware_class/:47:
+       error = request_firmware_nowait(THIS_MODULE,  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: Documentation/firmware_class/:54:
+                      "firmware_nowait_example:  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: Documentation/firmware_class/:61:
+       printk(KERN_DEBUG "firmware_nowait_example: ghost device  $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040759.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 28 warnings, 0 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040759.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
