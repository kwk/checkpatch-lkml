ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/drivers/i2c/chips/adm1021.c	Wed Jun 18 11:19:25 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#48: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? (val-256)*1000 : val*1000)
                           	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#48: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? (val-256)*1000 : val*1000)
                           	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#48: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? (val-256)*1000 : val*1000)
                           	                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#48: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? (val-256)*1000 : val*1000)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#48: FILE: drivers/i2c/chips/adm1021.c:91:
+#define TEMP_FROM_REG(val)	(val > 127 ? (val-256)*1000 : val*1000)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))
                         	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))
                         	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))
                         	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))
                         	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))
                         	                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#49: FILE: drivers/i2c/chips/adm1021.c:92:
+#define TEMP_TO_REG(val)	(SENSORS_LIMIT((val < 0 ? (val/1000)+256 : val/1000),0,255))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#60: FILE: drivers/i2c/chips/adm1021.c:176:
+#define show2(value)	\
+static ssize_t show_##value(struct device *dev, char *buf)	\
+{								\
+	struct i2c_client *client = to_i2c_client(dev);		\
+	struct adm1021_data *data = i2c_get_clientdata(client);	\
+								\
+	adm1021_update_client(client);				\
+	return sprintf(buf, "%d\n", data->value);		\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#69: FILE: drivers/i2c/chips/adm1021.c:185:
+}
+show2(alarms);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 0 warnings, 12 checks, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361481.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
