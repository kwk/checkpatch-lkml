WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
- Follow iscsi rfc-3720 concerning datasn and r2tsn with bidirectional commands,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#63: FILE: drivers/infiniband/ulp/iser/iscsi_iser.c:143:
+		BUG_ON(iscsi_out_total_length(ctask) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iscsi_hdr_digest', this function's name, in a string
#81: FILE: drivers/scsi/iscsi_tcp.c:113:
+	debug_tcp("iscsi_hdr_digest: &crc %p crc 0x%02x%02x%02x%02x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/scsi/iscsi_tcp.c:114:
+^I          crc, crc[0], crc[1], crc[2], crc[3]);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/scsi/iscsi_tcp.c:236:
+^I^I          __FUNCTION__, tcp_ctask->exp_datasn, datasn);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#93: FILE: drivers/scsi/iscsi_tcp.c:236:
+		          __FUNCTION__, tcp_ctask->exp_datasn, datasn);

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/scsi/iscsi_tcp.c:245:
+^I^I          __FUNCTION__, tcp_ctask->data_offset,$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#104: FILE: drivers/scsi/iscsi_tcp.c:245:
+		          __FUNCTION__, tcp_ctask->data_offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/scsi/iscsi_tcp.c:246:
+^I^I          tcp_conn->in.datalen, iscsi_in_total_length(ctask));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#150: FILE: drivers/scsi/iscsi_tcp.c:351:
+			    (char*)scb.buffer + r2t->data_offset,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/scsi/iscsi_tcp.c:525:
+^I^I         tcp_conn->in.ctask->sc->sc_data_direction == DMA_BIDIRECTIONAL)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: drivers/scsi/iscsi_tcp.c:621:
+	BUG_ON(tcp_ctask->sent + size > iscsi_in_total_length(ctask));

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/scsi/iscsi_tcp.c:1156:
+^I          size, buf->sg.length, buf->sent, res);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#298: FILE: drivers/scsi/iscsi_tcp.c:1267:
+			    (char*)scb.buffer + new_offset,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#318: FILE: drivers/scsi/iscsi_tcp.c:1308:
+	BUG_ON(tcp_ctask->hdrext != (char *)ctask->hdr + sizeof(tcp_ctask->hdr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sc->request->varlen_cdb_len > MAX_COMMAND_SIZE'
#327: FILE: drivers/scsi/iscsi_tcp.c:1317:
+	if (sc->request->varlen_cdb && (sc->request->varlen_cdb_len > MAX_COMMAND_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#333: FILE: drivers/scsi/iscsi_tcp.c:1323:
+		BUG_ON(rlen > sizeof(ecdb_ahdr->ecdb));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: drivers/scsi/iscsi_tcp.c:1337:
+		memcpy(ecdb_ahdr->ecdb, sc->request->varlen_cdb+MAX_COMMAND_SIZE, rlen);
 		                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iscsi_tcp_cmd_init', this function's name, in a string
#352: FILE: drivers/scsi/iscsi_tcp.c:1341:
+		debug_scsi("iscsi_tcp_cmd_init: extended cdb:"

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: drivers/scsi/iscsi_tcp.c:1342:
+		debug_scsi("iscsi_tcp_cmd_init: extended cdb:"
+			" varlen_cdb_len %d rlen %d pad_len %d ahs_length %d total_ahs_length %Zd\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#353: FILE: drivers/scsi/iscsi_tcp.c:1342:
+			" varlen_cdb_len %d rlen %d pad_len %d ahs_length %d total_ahs_length %Zd\n",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#355: FILE: drivers/scsi/iscsi_tcp.c:1344:
+			((char *)tcp_ctask->hdrext - (char *)tcp_ctask->hdrextbuf) );

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: drivers/scsi/iscsi_tcp.c:1352:
+		BUG_ON(scb.buffer == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scb.buffer"
#363: FILE: drivers/scsi/iscsi_tcp.c:1352:
+		BUG_ON(scb.buffer == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#364: FILE: drivers/scsi/iscsi_tcp.c:1353:
+		BUG_ON(scb.bufflen == 0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#366: FILE: drivers/scsi/iscsi_tcp.c:1355:
+		rlen_ahdr = (struct iscsi_rlength_ahdr*)tcp_ctask->hdrext;

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/scsi/iscsi_tcp.c:1358:
+^I^I^I            sizeof(rlen_ahdr->reserved));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/scsi/iscsi_tcp.c:1364:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#377: FILE: drivers/scsi/iscsi_tcp.c:1366:
+			   be32_to_cpu(rlen_ahdr->read_length) ,be16_to_cpu(rlen_ahdr->ahslength)
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#377: FILE: drivers/scsi/iscsi_tcp.c:1366:
+			   be32_to_cpu(rlen_ahdr->read_length) ,be16_to_cpu(rlen_ahdr->ahslength)
 			                                       ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#380: FILE: drivers/scsi/iscsi_tcp.c:1369:
+	/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#385: FILE: drivers/scsi/iscsi_tcp.c:1372:
+		BUG_ON(iscsi_out_total_length(ctask) == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#390: FILE: drivers/scsi/iscsi_tcp.c:1375:
+		BUG_ON(scb.buffer == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scb.buffer"
#390: FILE: drivers/scsi/iscsi_tcp.c:1375:
+		BUG_ON(scb.buffer == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#391: FILE: drivers/scsi/iscsi_tcp.c:1376:
+		BUG_ON(scb.bufflen == 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/scsi/iscsi_tcp.c:1385:
+^I^I^I                   scb.buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/scsi/iscsi_tcp.c:1386:
+^I^I^I                   scb.bufflen);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/scsi/iscsi_tcp.c:1402:
+		BUG_ON(1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/scsi/iscsi_tcp.c:1407:
+^I            ((char *)&tcp_ctask->hdr + sizeof(tcp_ctask->hdr));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#430: FILE: drivers/scsi/iscsi_tcp.c:1409:
+	BUG_ON(hdrlength & (ISCSI_PAD_LEN-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#430: FILE: drivers/scsi/iscsi_tcp.c:1409:
+	BUG_ON(hdrlength & (ISCSI_PAD_LEN-1));
 	                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#433: FILE: drivers/scsi/iscsi_tcp.c:1412:
+	BUG_ON(hdrlength >= 256);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iscsi_tcp_cmd_init', this function's name, in a string
#436: FILE: drivers/scsi/iscsi_tcp.c:1415:
+	debug_scsi("iscsi_tcp_cmd_init: total_pdu_length %Zd "

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#436: FILE: drivers/scsi/iscsi_tcp.c:1415:
+	debug_scsi("iscsi_tcp_cmd_init: total_pdu_length %Zd "

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/scsi/iscsi_tcp.c:1416:
+^I           "hlength %d dlength %d data_length %d\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#437: FILE: drivers/scsi/iscsi_tcp.c:1416:
+	debug_scsi("iscsi_tcp_cmd_init: total_pdu_length %Zd "
+	           "hlength %d dlength %d data_length %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/scsi/iscsi_tcp.c:1417:
+^I           tcp_ctask->hdrext - (char *)&tcp_ctask->hdr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/scsi/iscsi_tcp.c:1418:
+^I           tcp_ctask->hdr.hlength, ntoh24(ctask->hdr->dlength),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: drivers/scsi/iscsi_tcp.c:1419:
+^I           be32_to_cpu(ctask->hdr->data_length));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#444: FILE: drivers/scsi/iscsi_tcp.c:1421:
+	iscsi_buf_init_iov(&tcp_ctask->headbuf, (char*)&tcp_ctask->hdr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: drivers/scsi/iscsi_tcp.c:1422:
+^I                   tcp_ctask->hdrext - (char *)&tcp_ctask->hdr);$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#480: FILE: drivers/scsi/iscsi_tcp.h:157:
+	uint32_t		exp_datasn;		/* expected target's R2TSN/DataSN */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#493: FILE: drivers/scsi/libiscsi.c:123:
+	if (sc->cmd_len < MAX_COMMAND_SIZE) {
+		memset(&hdr->cdb[sc->cmd_len], 0, MAX_COMMAND_SIZE - sc->cmd_len);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#502: FILE: drivers/scsi/libiscsi.c:131:
+		/* FALLTHROUGH */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/scsi/libiscsi.c:159:
+				ctask->imm_count = min(iscsi_out_total_length(ctask),
 							conn->max_xmit_dlength);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#538: FILE: drivers/scsi/libiscsi.c:176:
+		/* FALLTHROUGH */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#587: FILE: include/scsi/iscsi_proto.h:145:
+	uint8_t ahstype;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#588: FILE: include/scsi/iscsi_proto.h:146:
+	uint8_t reserved;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#589: FILE: include/scsi/iscsi_proto.h:147:
+	uint8_t ecdb[260 - 16];	/* 4-byte aligned extended CDB spillover */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#636: FILE: include/scsi/libiscsi.h:121:
+iscsi_out_total_length(struct iscsi_cmd_task* ctask)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#642: FILE: include/scsi/libiscsi.h:127:
+iscsi_in_total_length(struct iscsi_cmd_task* ctask)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 26 warnings, 10 checks, 540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
