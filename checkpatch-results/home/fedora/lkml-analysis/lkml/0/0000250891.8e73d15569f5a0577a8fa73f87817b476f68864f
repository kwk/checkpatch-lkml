WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#42: 
- cast on kmalloc is unecessary
                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'anyting' may be misspelled - perhaps 'anything'?
#43: 
- make anyting static that can be
       ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
- collapse 'n' and 'e' cases in digsig_key_store for raw_public_key allocation

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: digsig.c:237:
+	if (!ctx ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#201: FILE: digsig.c:257:
+	for (offset = 0; offset < i_size; offset += DIGSIG_ELF_READ_BLOCK_SIZE){

CHECK:SPACING: No space is necessary after a cast
#204: FILE: digsig.c:259:
+		retval = kernel_read(file, offset, (char *) read_blocks,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: digsig.c:260:
+		retval = kernel_read(file, offset, (char *) read_blocks,
 				   DIGSIG_ELF_READ_BLOCK_SIZE);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#217: FILE: digsig.c:264:
+				  __FUNCTION__, retval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: digsig.c:297:
+	retval = digsig_sign_verify_final(ctx, sig_result, DIGSIG_ELF_SIG_SIZE,
+					    sig_orig + DIGSIG_BSIGN_INFOS);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*elf_ex)...) over kmalloc(sizeof(struct elfhdr)...)
#283: FILE: digsig.c:406:
+	elf_ex = kmalloc(sizeof(struct elfhdr), DIGSIG_SAFE_ALLOC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: digsig.c:472:
+static int digsig_file_mmap(struct file * file, unsigned long prot, unsigned long flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: digsig.c:569:
+ ^Iif (allow_write_on_exit)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: digsig.c:569:
+ ^Iif (allow_write_on_exit)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: digsig.c:569:
+ ^Iif (allow_write_on_exit)$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#388: FILE: digsig.c:602:
+		DSM_ERROR("%s: Failure registering DigSig as primairy security module\n", __FUNCTION__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#388: FILE: digsig.c:602:
+		DSM_ERROR("%s: Failure registering DigSig as primairy security module\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#390: FILE: digsig.c:604:
+			DSM_ERROR("%s: Failure registering DigSig as secondary module\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#390: FILE: digsig.c:604:
+			DSM_ERROR("%s: Failure registering DigSig as secondary module\n", __FUNCTION__);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#449: FILE: digsig_cache.c:36:
+extern int digsig_max_cached_sigs;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#489: FILE: digsig_cache.c:323:
+	if (!sig_cache) {
 	  DSM_PRINT(DEBUG_ERROR, "No memory to initialize digsig cache.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: digsig_revocation.c:96:
+        list_add_tail(&sig->next, &digsig_revoked_sigs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: digsig_revocation.c:96:
+        list_add_tail(&sig->next, &digsig_revoked_sigs);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx"
#785: FILE: dsi_sig_verify.c:126:
+	if (ctx == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <gDigestLength>
#835: FILE: dsi_sig_verify.c:167:
+	if (siglen < gDigestLength[ctx->digestAlgo])

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <digestAlgo>
#835: FILE: dsi_sig_verify.c:167:
+	if (siglen < gDigestLength[ctx->digestAlgo])

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: dsi_sig_verify.c:246:
+static int digsig_rsa_bsign_verify(unsigned char *hash_format, int length,
 			 unsigned char *signed_hash)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: dsi_sig_verify.c:267:
+^Idata = mpi_read_from_buffer(signed_hash + DIGSIG_RSA_DATA_OFFSET, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sha1_tfm"
#926: FILE: dsi_sig_verify.c:351:
+	if (sha1_tfm == NULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1001: FILE: dsi_sysfs.c:59:
+struct digsig_attribute digsig_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1001: FILE: dsi_sysfs.c:59:
+struct digsig_attribute digsig_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1001: FILE: dsi_sysfs.c:59:
+struct digsig_attribute digsig_attr_##_name = __ATTR(_name,_mode,_show,_store)
                                                                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1038: FILE: dsi_sysfs.c:88:
+static ssize_t digsig_revoked_show (struct kobject *obj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: dsi_sysfs.c:89:
+static ssize_t digsig_revoked_show (struct kobject *obj,
 	struct attribute *attr, char *buff);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1041: FILE: dsi_sysfs.c:90:
+static ssize_t digsig_revoked_store (struct kobject *obj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: dsi_sysfs.c:91:
+static ssize_t digsig_revoked_store (struct kobject *obj,
 	struct attribute *attr, const char *buff, size_t count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: dsi_sysfs.c:163:
+	sysfs_remove_file (&digsig_kobject, &digsig_attr_key.attr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1116: FILE: dsi_sysfs.c:165:
+	kobject_unregister (&digsig_kobject);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1125: FILE: dsi_sysfs.c:172:
+	sysfs_remove_file (&digsig_kobject, &digsig_attr_key.attr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1126: FILE: dsi_sysfs.c:173:
+	sysfs_remove_file (&digsig_kobject, &digsig_attr_revoke.attr);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1152: FILE: dsi_sysfs.c:215:
+			DSM_ERROR("kmalloc fail for %c in %s\n", buff[0], __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: dsi_sysfs.c:248:
+digsig_revoked_store (struct kobject *obj, struct attribute *attr, const char *buff, size_t count)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1174: FILE: dsi_sysfs.c:250:
+        struct revoked_sig *sig;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: dsi_sysfs.c:250:
+        struct revoked_sig *sig;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: dsi_sysfs.c:262:
+        sig = kmalloc(sizeof(struct revoked_sig), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: dsi_sysfs.c:262:
+        sig = kmalloc(sizeof(struct revoked_sig), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sig)...) over kmalloc(sizeof(struct revoked_sig)...)
#1184: FILE: dsi_sysfs.c:262:
+        sig = kmalloc(sizeof(struct revoked_sig), GFP_KERNEL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: dsi_sysfs.c:263:
+        if (!sig)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: dsi_sysfs.c:263:
+        if (!sig)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: dsi_sysfs.c:265:
+        memset(sig, 0, sizeof(struct revoked_sig));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: dsi_sysfs.c:265:
+        memset(sig, 0, sizeof(struct revoked_sig));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1190: FILE: dsi_sysfs.c:266:
+        sig->sig = mpi_read_from_buffer($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: dsi_sysfs.c:266:
+        sig->sig = mpi_read_from_buffer($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1190: FILE: dsi_sysfs.c:266:
+        sig->sig = mpi_read_from_buffer(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: dsi_sysfs.c:277:
+digsig_revoked_show (struct kobject *obj, struct attribute *attr, char *buff)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1235: FILE: tools/extract_pkey.c:56:
+	module_file = open ("/sys/digsig/key", O_WRONLY);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250891.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 28 warnings, 13 checks, 1057 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250891.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
