WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
subsequently.  We were able to get CPU traces and now understand this issue.

WARNING:TYPO_SPELLING: 'unstalled' may be misspelled - perhaps 'installed'?
#77: 
7. CPU 0 finally gets unstalled and gets it's PTE from a cacheline which has
                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/i386/mm/init.c:337:
+^Iload_cr3(swapper_pg_dir);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#232: FILE: include/asm-i386/pgalloc.h:233:
end)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#249: FILE: include/asm-i386/processor.h:193:
+#define load_cr3(pgdir) \
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#249: FILE: include/asm-i386/processor.h:193:
+#define load_cr3(pgdir) \
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#250: FILE: include/asm-i386/processor.h:194:
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#250: FILE: include/asm-i386/processor.h:194:
+	asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)));
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: mm/memory.c:158:
+^I$

ERROR:SPACING: space required after that ';' (ctx:VxO)
#308: FILE: arch/i386/kernel/process.c:314:
+	load_cr3(swapper_pg_dir);=0A=
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#308: FILE: arch/i386/kernel/process.c:314:
+	load_cr3(swapper_pg_dir);=0A=
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#308: FILE: arch/i386/kernel/process.c:314:
+	load_cr3(swapper_pg_dir);=0A=
 	                            ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#329: FILE: arch/i386/kernel/smp.c:310:
+	load_cr3(swapper_pg_dir);=0A=
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#329: FILE: arch/i386/kernel/smp.c:310:
+	load_cr3(swapper_pg_dir);=0A=
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#329: FILE: arch/i386/kernel/smp.c:310:
+	load_cr3(swapper_pg_dir);=0A=
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: arch/i386/mm/init.c:337:
+	load_cr3(swapper_pg_dir);	=0A=
 	                         	^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#342: FILE: arch/i386/mm/init.c:337:
+	load_cr3(swapper_pg_dir);	=0A=
 	                         	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#357: FILE: include/asm-generic/tlb.h:58:
+			pte_t __pte =3D *(pte);\=0A=
 			            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#357: FILE: include/asm-generic/tlb.h:58:
+			pte_t __pte =3D *(pte);\=0A=
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#357: FILE: include/asm-generic/tlb.h:58:
+			pte_t __pte =3D *(pte);\=0A=
 			                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#357: FILE: include/asm-generic/tlb.h:58:
+			pte_t __pte =3D *(pte);\=0A=
 			                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#358: FILE: include/asm-generic/tlb.h:59:
+			pte_clear(pte);\=0A=
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#358: FILE: include/asm-generic/tlb.h:59:
+			pte_clear(pte);\=0A=
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#359: FILE: include/asm-generic/tlb.h:60:
+			__free_pte(__pte);\=0A=
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#359: FILE: include/asm-generic/tlb.h:60:
+			__free_pte(__pte);\=0A=
 			                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#374: FILE: include/asm-i386/mmu_context.h:45:
+		load_cr3(next->pgd);=0A=
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#374: FILE: include/asm-i386/mmu_context.h:45:
+		load_cr3(next->pgd);=0A=
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#374: FILE: include/asm-i386/mmu_context.h:45:
+		load_cr3(next->pgd);=0A=
 		                       ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#386: FILE: include/asm-i386/mmu_context.h:56:
+			load_cr3(next->pgd);=0A=
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#386: FILE: include/asm-i386/mmu_context.h:56:
+			load_cr3(next->pgd);=0A=
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#386: FILE: include/asm-i386/mmu_context.h:56:
+			load_cr3(next->pgd);=0A=
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#400: FILE: include/asm-i386/pgalloc.h:142:
+#define pte_free(pte)		pte_free_fast(pte)=0A=
                      		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#400: FILE: include/asm-i386/pgalloc.h:142:
+#define pte_free(pte)		pte_free_fast(pte)=0A=
                      		                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#400: FILE: include/asm-i386/pgalloc.h:142:
+#define pte_free(pte)		pte_free_fast(pte)=0A=

ERROR:SPACING: spaces required around that '=' (ctx:CxV)
#410: FILE: include/asm-i386/pgalloc.h:230:
+#endif /* CONFIG_SMP */=0A=
                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#410: FILE: include/asm-i386/pgalloc.h:230:
+#endif /* CONFIG_SMP */=0A=
                           ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#416: FILE: include/asm-i386/pgalloc.h:235:
+	flush_tlb_mm(mm);=0A=
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#416: FILE: include/asm-i386/pgalloc.h:235:
+	flush_tlb_mm(mm);=0A=
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#416: FILE: include/asm-i386/pgalloc.h:235:
+	flush_tlb_mm(mm);=0A=
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#446: FILE: mm/memory.c:147:
+	unsigned long	last =3D first + nr;=0A=
 	             	     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#446: FILE: mm/memory.c:147:
+	unsigned long	last =3D first + nr;=0A=
 	             	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#446: FILE: mm/memory.c:147:
+	unsigned long	last =3D first + nr;=0A=
 	             	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#446: FILE: mm/memory.c:147:
+	unsigned long	last =3D first + nr;=0A=
 	             	                       ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#454: FILE: mm/memory.c:157:
+	flush_tlb_pgtables(mm, first * PGDIR_SIZE, last * PGDIR_SIZE);=0A=
 	                                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#454: FILE: mm/memory.c:157:
+	flush_tlb_pgtables(mm, first * PGDIR_SIZE, last * PGDIR_SIZE);=0A=
 	                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#454: FILE: mm/memory.c:157:
+	flush_tlb_pgtables(mm, first * PGDIR_SIZE, last * PGDIR_SIZE);=0A=
 	                                                                 ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#455: FILE: mm/memory.c:158:
+	flush_tlb_pgtables(mm, first * PGDIR_SIZE, last * PGDIR_SIZE);=0A=
+	=0A=

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#455: FILE: mm/memory.c:158:
+	=0A=
 	^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#455: FILE: mm/memory.c:158:
+	=0A=
 	   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457076.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 3 warnings, 2 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457076.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
