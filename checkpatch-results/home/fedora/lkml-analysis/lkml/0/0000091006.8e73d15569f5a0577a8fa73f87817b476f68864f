CHECK:CAMELCASE: Avoid CamelCase: <mptbase_rstTask>
#60: FILE: drivers/message/fusion/mptbase.c:186:
+static struct work_struct	mptbase_rstTask;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/message/fusion/mptbase.c:193:
+#define CHIPREG_READ32HR(ioc,addr,val)	pciras_readl(ioc,val,addr,1)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/message/fusion/mptbase.c:193:
+#define CHIPREG_READ32HR(ioc,addr,val)	pciras_readl(ioc,val,addr,1)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/message/fusion/mptbase.c:193:
+#define CHIPREG_READ32HR(ioc,addr,val)	pciras_readl(ioc,val,addr,1)
                                       	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/message/fusion/mptbase.c:193:
+#define CHIPREG_READ32HR(ioc,addr,val)	pciras_readl(ioc,val,addr,1)
                                       	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: drivers/message/fusion/mptbase.c:193:
+#define CHIPREG_READ32HR(ioc,addr,val)	pciras_readl(ioc,val,addr,1)
                                       	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: drivers/message/fusion/mptbase.c:194:
+#define CHIPREG_WRITE32HR(ioc,addr,val)	pciras_writel(ioc,val,addr,1)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: drivers/message/fusion/mptbase.c:194:
+#define CHIPREG_WRITE32HR(ioc,addr,val)	pciras_writel(ioc,val,addr,1)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: drivers/message/fusion/mptbase.c:194:
+#define CHIPREG_WRITE32HR(ioc,addr,val)	pciras_writel(ioc,val,addr,1)
                                        	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: drivers/message/fusion/mptbase.c:194:
+#define CHIPREG_WRITE32HR(ioc,addr,val)	pciras_writel(ioc,val,addr,1)
                                        	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: drivers/message/fusion/mptbase.c:194:
+#define CHIPREG_WRITE32HR(ioc,addr,val)	pciras_writel(ioc,val,addr,1)
                                        	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/message/fusion/mptbase.c:195:
+#define CHIPREG_READ32(ioc,addr,val)	pciras_readl(ioc,val,addr,0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/message/fusion/mptbase.c:195:
+#define CHIPREG_READ32(ioc,addr,val)	pciras_readl(ioc,val,addr,0)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/message/fusion/mptbase.c:195:
+#define CHIPREG_READ32(ioc,addr,val)	pciras_readl(ioc,val,addr,0)
                                     	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/message/fusion/mptbase.c:195:
+#define CHIPREG_READ32(ioc,addr,val)	pciras_readl(ioc,val,addr,0)
                                     	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: drivers/message/fusion/mptbase.c:195:
+#define CHIPREG_READ32(ioc,addr,val)	pciras_readl(ioc,val,addr,0)
                                     	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/message/fusion/mptbase.c:196:
+#define CHIPREG_WRITE32(ioc,addr,val)	pciras_writel(ioc,val,addr,0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/message/fusion/mptbase.c:196:
+#define CHIPREG_WRITE32(ioc,addr,val)	pciras_writel(ioc,val,addr,0)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/message/fusion/mptbase.c:196:
+#define CHIPREG_WRITE32(ioc,addr,val)	pciras_writel(ioc,val,addr,0)
                                      	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/message/fusion/mptbase.c:196:
+#define CHIPREG_WRITE32(ioc,addr,val)	pciras_writel(ioc,val,addr,0)
                                      	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/message/fusion/mptbase.c:196:
+#define CHIPREG_WRITE32(ioc,addr,val)	pciras_writel(ioc,val,addr,0)
                                      	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#80: FILE: drivers/message/fusion/mptbase.c:203:
+pciras_readl(MPT_ADAPTER *ioc, u32 *regval, u32 *addr, int hres)
                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retries == PCI_ERR_RETRIES'
#91: FILE: drivers/message/fusion/mptbase.c:214:
+		if ((status) && (retries == PCI_ERR_RETRIES))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: drivers/message/fusion/mptbase.c:215:
+			printk(MYIOC_s_WARN_FMT  "pciras_readl(), "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pciras_readl', this function's name, in a string
#92: FILE: drivers/message/fusion/mptbase.c:215:
+			printk(MYIOC_s_WARN_FMT  "pciras_readl(), "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#93: FILE: drivers/message/fusion/mptbase.c:216:
+			printk(MYIOC_s_WARN_FMT  "pciras_readl(), "
+			"detects pci parity error, do retry.\n", ioc->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#94: FILE: drivers/message/fusion/mptbase.c:217:
+	} while(status && (--retries > 0));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: drivers/message/fusion/mptbase.c:220:
+		printk(MYIOC_s_WARN_FMT  "pciras_readl(), detects pci parity "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pciras_readl', this function's name, in a string
#97: FILE: drivers/message/fusion/mptbase.c:220:
+		printk(MYIOC_s_WARN_FMT  "pciras_readl(), detects pci parity "

WARNING:SPLIT_STRING: quoted string split across lines
#98: FILE: drivers/message/fusion/mptbase.c:221:
+		printk(MYIOC_s_WARN_FMT  "pciras_readl(), detects pci parity "
+			"error, retries exhausted.\n", ioc->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: drivers/message/fusion/mptbase.c:245:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pciras_writel', this function's name, in a string
#122: FILE: drivers/message/fusion/mptbase.c:245:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "

WARNING:SPLIT_STRING: quoted string split across lines
#123: FILE: drivers/message/fusion/mptbase.c:246:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "
+				"couldn't read pci register.\n", ioc->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: drivers/message/fusion/mptbase.c:249:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pciras_writel', this function's name, in a string
#126: FILE: drivers/message/fusion/mptbase.c:249:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: drivers/message/fusion/mptbase.c:250:
+				printk(MYIOC_s_WARN_FMT  "pciras_writel(), "
+					"detects pci parity error, do retry.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: drivers/message/fusion/mptbase.c:258:
+		printk(MYIOC_s_WARN_FMT  "pciras_writel(), detects pci "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pciras_writel', this function's name, in a string
#135: FILE: drivers/message/fusion/mptbase.c:258:
+		printk(MYIOC_s_WARN_FMT  "pciras_writel(), detects pci "

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: drivers/message/fusion/mptbase.c:259:
+		printk(MYIOC_s_WARN_FMT  "pciras_writel(), detects pci "
+			"parity error, retries exhausted.\n", ioc->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/message/fusion/mptbase.c:272:
+        MPT_ADAPTER *ioc = (MPT_ADAPTER *)arg;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/message/fusion/mptbase.c:272:
+        MPT_ADAPTER *ioc = (MPT_ADAPTER *)arg;$

CHECK:CAMELCASE: Avoid CamelCase: <mpt_HardResetHandler>
#151: FILE: drivers/message/fusion/mptbase.c:274:
+	mpt_HardResetHandler(ioc, CAN_SLEEP);

WARNING:RETURN_VOID: void function return statements are not generally useful
#154: FILE: drivers/message/fusion/mptbase.c:277:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <ReplyFifo>
#187: FILE: drivers/message/fusion/mptbase.c:453:
+	CHIPREG_WRITE32HR(ioc, &ioc->chip->ReplyFifo, pa);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#201: FILE: drivers/message/fusion/mptbase.c:490:
+		if (status & (PCI_STATUS_DETECTED_PARITY | PCI_STATUS_REC_MASTER_ABORT | PCI_STATUS_REC_TARGET_ABORT)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#202: FILE: drivers/message/fusion/mptbase.c:491:
+			printk(MYIOC_s_WARN_FMT "mpt_interrupt(), detects pci parity error.\n", ioc->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: drivers/message/fusion/mptbase.c:491:
+			printk(MYIOC_s_WARN_FMT "mpt_interrupt(), detects pci parity error.\n", ioc->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#216: FILE: drivers/message/fusion/mptbase.c:503:
+		u16 status;
+		status = CHIPREG_READ32HR(ioc, &ioc->chip->ReplyFifo, &pa);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pa == 0xFFFFFFFF'
#217: FILE: drivers/message/fusion/mptbase.c:504:
+		if (status || (pa == 0xFFFFFFFF))

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#225: FILE: drivers/message/fusion/mptbase.c:958:
ioc->RequestNB[req_idx]));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:CAMELCASE: Avoid CamelCase: <RequestFifo>
#227: FILE: drivers/message/fusion/mptbase.c:959:
+	CHIPREG_WRITE32HR(ioc, &ioc->chip->RequestFifo, mf_dma_addr);

CHECK:CAMELCASE: Avoid CamelCase: <IntStatus>
#240: FILE: drivers/message/fusion/mptbase.c:1059:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntStatus, 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#241: FILE: drivers/message/fusion/mptbase.c:1060:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntStatus, 0)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell,

CHECK:CAMELCASE: Avoid CamelCase: <Doorbell>
#241: FILE: drivers/message/fusion/mptbase.c:1060:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: drivers/message/fusion/mptbase.c:1061:
+		       ((MPI_FUNCTION_HANDSHAKE<<MPI_DOORBELL_FUNCTION_SHIFT) |
 		                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#243: FILE: drivers/message/fusion/mptbase.c:1062:
+			((reqBytes/4)<<MPI_DOORBELL_ADD_DWORDS_SHIFT))))
 			          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#243: FILE: drivers/message/fusion/mptbase.c:1062:
+			((reqBytes/4)<<MPI_DOORBELL_ADD_DWORDS_SHIFT))))
 			             ^

CHECK:CAMELCASE: Avoid CamelCase: <reqBytes>
#243: FILE: drivers/message/fusion/mptbase.c:1062:
+			((reqBytes/4)<<MPI_DOORBELL_ADD_DWORDS_SHIFT))))

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: drivers/message/fusion/mptbase.c:1074:
+		u16 status;
+		status = CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#259: FILE: drivers/message/fusion/mptbase.c:1075:
+		if (status || !(pa & MPI_DOORBELL_ACTIVE))
+			 return -5;

WARNING:TABSTOP: Statements should start on a tabstop
#260: FILE: drivers/message/fusion/mptbase.c:1076:
+			 return -5;

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: drivers/message/fusion/mptbase.c:1142:
+		u16 status;
+		status = CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#309: FILE: drivers/message/fusion/mptbase.c:1147:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntStatus, 0) ||
[...]
+			return -3;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/message/fusion/mptbase.c:1148:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntStatus, 0) ||
+		CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/message/fusion/mptbase.c:1149:
+		CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell,
  		((MPI_FUNCTION_HOST_PAGEBUF_ACCESS_CONTROL

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: drivers/message/fusion/mptbase.c:1151:
+		 (access_control_value<<12))))
 		                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/message/fusion/mptbase.c:1543:
+                /* set DPER(0001) for PCI-X command register */$

CHECK:CAMELCASE: Avoid CamelCase: <IntMask>
#363: FILE: drivers/message/fusion/mptbase.c:1593:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntMask, 0xFFFFFFFF))

WARNING:LINE_SPACING: Missing a blank line after declarations
#435: FILE: drivers/message/fusion/mptbase.c:1810:
+		u16 status;
+		pa = 0;

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#477: FILE: drivers/message/fusion/mptbase.c:1905:
+				if (CHIPREG_WRITE32(ioc->alt_ioc, &ioc->alt_ioc->chip->IntMask, MPI_HIM_DIM))

CHECK:CAMELCASE: Avoid CamelCase: <WriteSequence>
#541: FILE: drivers/message/fusion/mptbase.c:3147:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#542: FILE: drivers/message/fusion/mptbase.c:3148:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#543: FILE: drivers/message/fusion/mptbase.c:3149:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#544: FILE: drivers/message/fusion/mptbase.c:3150:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#545: FILE: drivers/message/fusion/mptbase.c:3151:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#546: FILE: drivers/message/fusion/mptbase.c:3152:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#547: FILE: drivers/message/fusion/mptbase.c:3153:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Diagnostic, (MPI_DIAG_PREVENT_IOC_BOOT | MPI_DIAG_DISABLE_ARM)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#547: FILE: drivers/message/fusion/mptbase.c:3153:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Diagnostic, (MPI_DIAG_PREVENT_IOC_BOOT | MPI_DIAG_DISABLE_ARM)))

CHECK:CAMELCASE: Avoid CamelCase: <Diagnostic>
#547: FILE: drivers/message/fusion/mptbase.c:3153:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Diagnostic, (MPI_DIAG_PREVENT_IOC_BOOT | MPI_DIAG_DISABLE_ARM)))

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EFAULT)
#548: FILE: drivers/message/fusion/mptbase.c:3154:
+		return EFAULT;

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/message/fusion/mptbase.c:3192:
+	if(CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/message/fusion/mptbase.c:3193:
+	if(CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: drivers/message/fusion/mptbase.c:3194:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#584: FILE: drivers/message/fusion/mptbase.c:3195:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#585: FILE: drivers/message/fusion/mptbase.c:3196:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#586: FILE: drivers/message/fusion/mptbase.c:3197:
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE))

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#591: FILE: drivers/message/fusion/mptbase.c:3201:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->Diagnostic, (MPI_DIAG_RW_ENABLE | MPI_DIAG_DISABLE_ARM)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#605: FILE: drivers/message/fusion/mptbase.c:3266:
+		if (CHIPREG_READ32(ioc, &ioc->chip->Diagnostic, &diag0val)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->Diagnostic,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#667: FILE: drivers/message/fusion/mptbase.c:3461:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#667: FILE: drivers/message/fusion/mptbase.c:3461:
+			if (CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#668: FILE: drivers/message/fusion/mptbase.c:3462:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#668: FILE: drivers/message/fusion/mptbase.c:3462:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#669: FILE: drivers/message/fusion/mptbase.c:3463:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#669: FILE: drivers/message/fusion/mptbase.c:3463:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#670: FILE: drivers/message/fusion/mptbase.c:3464:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#670: FILE: drivers/message/fusion/mptbase.c:3464:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#671: FILE: drivers/message/fusion/mptbase.c:3465:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#671: FILE: drivers/message/fusion/mptbase.c:3465:
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)
+				|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#691: FILE: drivers/message/fusion/mptbase.c:3492:
+			if (CHIPREG_READ32(ioc->alt_ioc, &ioc->alt_ioc->chip->Diagnostic, &diag1val))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 26)
#728: FILE: drivers/message/fusion/mptbase.c:3572:
  			for (count = 0; count < 60; count ++) {
+			  if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &doorbell))

WARNING:TABSTOP: Statements should start on a tabstop
#730: FILE: drivers/message/fusion/mptbase.c:3573:
+			  if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &doorbell))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (26, 40)
#730: FILE: drivers/message/fusion/mptbase.c:3573:
+			  if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &doorbell))
+					return -1;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#769: FILE: drivers/message/fusion/mptbase.c:3612:
+		if (CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, 0xFF)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#770: FILE: drivers/message/fusion/mptbase.c:3613:
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_1ST_KEY_VALUE)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#771: FILE: drivers/message/fusion/mptbase.c:3614:
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_2ND_KEY_VALUE)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#772: FILE: drivers/message/fusion/mptbase.c:3615:
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_3RD_KEY_VALUE)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#773: FILE: drivers/message/fusion/mptbase.c:3616:
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_4TH_KEY_VALUE)
+			|| CHIPREG_WRITE32(ioc, &ioc->chip->WriteSequence, MPI_WRSEQ_5TH_KEY_VALUE))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#828: FILE: drivers/message/fusion/mptbase.c:3700:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell, reset_type<<MPI_DOORBELL_FUNCTION_SHIFT))
 	                                                         ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#851: FILE: drivers/message/fusion/mptbase.c:4066:
+	if (CHIPREG_WRITE32(ioc, &ioc->chip->IntStatus, 0)
+		|| CHIPREG_WRITE32(ioc, &ioc->chip->Doorbell,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#854: FILE: drivers/message/fusion/mptbase.c:4068:
+			((reqBytes/4)<<MPI_DOORBELL_ADD_DWORDS_SHIFT))))
 			          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#854: FILE: drivers/message/fusion/mptbase.c:4068:
+			((reqBytes/4)<<MPI_DOORBELL_ADD_DWORDS_SHIFT))))
 			             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#867: FILE: drivers/message/fusion/mptbase.c:4084:
+		u16 status;
+		status = CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa);

WARNING:LINE_SPACING: Missing a blank line after declarations
#941: FILE: drivers/message/fusion/mptbase.c:4284:
+			u32 pa;
+			if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa))

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: drivers/message/fusion/mptbase.c:4296:
+				u32 pa;
+				if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa))

WARNING:LINE_SPACING: Missing a blank line after declarations
#972: FILE: drivers/message/fusion/mptbase.c:4319:
+			u32 pa;
+			if (CHIPREG_READ32(ioc, &ioc->chip->Doorbell, &pa))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091006.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 44 warnings, 46 checks, 885 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091006.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
