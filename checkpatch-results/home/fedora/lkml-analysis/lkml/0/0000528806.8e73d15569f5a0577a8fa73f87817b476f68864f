WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
     I posted about a week ago a first fixed and very stable version of the old

WARNING:REPEATED_WORD: Possible repeated word: 'very'
#33: 
I had a very very quick look at the code of the zisofs patch for 2.4.x: 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: mkzftree.c:1:
+/* $Id: mkzftree.c,v 1.9 2001/06/77 01:27:53 dicosmo Exp $ */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#93: FILE: mkzftree.c:1:
+/* $Id: mkzftree.c,v 1.9 2001/06/77 01:27:53 dicosmo Exp $ */

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#93: FILE: mkzftree.c:1:
+/* $Id: mkzftree.c,v 1.9 2001/06/77 01:27:53 dicosmo Exp $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: mkzftree.c:15:
+   R. Di Cosmo: added code to allow compressing and decompressing a single $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#102: FILE: mkzftree.c:15:
+/* ----------------------------------------------------------------------- *
+   R. Di Cosmo: added code to allow compressing and decompressing a single 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: mkzftree.c:16:
+                file instead of a full directory  (06/17/2001)                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: mkzftree.c:16:
+                file instead of a full directory  (06/17/2001)                        $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: mkzftree.c:17:
+ * ----------------------------------------------------------------------- */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#113: FILE: mkzftree.c:97:
+int onefile = 0;			/* One file only */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#114: FILE: mkzftree.c:98:
+int decompressing = 0;			/* Compression/decompression flag */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mkzftree.c:554:
+  FILE *in, *out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: mkzftree.c:555:
+  int err = 0, rv = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: mkzftree.c:556:
+  struct utimbuf ut;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: mkzftree.c:557:
+  struct stat st, sto;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: mkzftree.c:559:
+  message(vl_filename, "%s -> %s\n", in_path, out_path);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: mkzftree.c:561:
+    if ( lstat(in_path, &st) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#131: FILE: mkzftree.c:561:
+    if ( lstat(in_path, &st) ) {
+      message(vl_error, "%s: Failed to stat file %s: %s\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#131: FILE: mkzftree.c:561:
+    if ( lstat(in_path, &st) ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#131: FILE: mkzftree.c:561:
+    if ( lstat(in_path, &st) ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: mkzftree.c:562:
+      message(vl_error, "%s: Failed to stat file %s: %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: mkzftree.c:564:
+      err = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: mkzftree.c:565:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: mkzftree.c:566:
+    else if ( S_ISREG(st.st_mode) ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#136: FILE: mkzftree.c:566:
+    else if ( S_ISREG(st.st_mode) ) {
[...]
+            in = fopen(in_path, "rb");

ERROR:SPACING: space prohibited after that open parenthesis '('
#136: FILE: mkzftree.c:566:
+    else if ( S_ISREG(st.st_mode) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#136: FILE: mkzftree.c:566:
+    else if ( S_ISREG(st.st_mode) ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#136: FILE: mkzftree.c:566:
+    }
+    else if ( S_ISREG(st.st_mode) ) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: mkzftree.c:568:
+            /* open the input and output files */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: mkzftree.c:569:
+            /* check for preexisting output file and continue only if -f is in action */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: mkzftree.c:570:
+            in = fopen(in_path, "rb");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: mkzftree.c:570:
+            in = fopen(in_path, "rb");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: mkzftree.c:571:
+            if ( !in )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: mkzftree.c:571:
+            if ( !in )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#141: FILE: mkzftree.c:571:
+            if ( !in )
+              return -1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#141: FILE: mkzftree.c:571:
+            if ( !in )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#141: FILE: mkzftree.c:571:
+            if ( !in )

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: mkzftree.c:572:
+              return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: mkzftree.c:572:
+              return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: mkzftree.c:573:
+            if (! lstat(out_path, &sto) ) {  /* output file already exists! */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: mkzftree.c:573:
+            if (! lstat(out_path, &sto) ) {  /* output file already exists! */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#143: FILE: mkzftree.c:573:
+            if (! lstat(out_path, &sto) ) {  /* output file already exists! */
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#143: FILE: mkzftree.c:573:
+            if (! lstat(out_path, &sto) ) {  /* output file already exists! */
                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#143: FILE: mkzftree.c:573:
+            if (! lstat(out_path, &sto) ) {  /* output file already exists! */

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}$

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                                                                                                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                                                                                                                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}
                                                                                                                                      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#144: FILE: mkzftree.c:574:
+              if (force ==0) {message(vl_error,"Cannot act on %s because %s already exist!\n",in_path,out_path); fclose(in);return -1;}}

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: mkzftree.c:575:
+            out = fopen(out_path, "wb");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: mkzftree.c:575:
+            out = fopen(out_path, "wb");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: mkzftree.c:576:
+            if ( !out ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: mkzftree.c:576:
+            if ( !out ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#146: FILE: mkzftree.c:576:
+            if ( !out ) {
+              err = errno;

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: mkzftree.c:576:
+            if ( !out ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: mkzftree.c:576:
+            if ( !out ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: mkzftree.c:577:
+              err = errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: mkzftree.c:577:
+              err = errno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: mkzftree.c:578:
+              fclose(in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: mkzftree.c:578:
+              fclose(in);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: mkzftree.c:579:
+              errno = err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: mkzftree.c:579:
+              errno = err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: mkzftree.c:580:
+              return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: mkzftree.c:580:
+              return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: mkzftree.c:581:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: mkzftree.c:581:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: mkzftree.c:582:
+            /* do the actual work */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: mkzftree.c:583:
+              rv = munger(in, out, st.st_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: mkzftree.c:583:
+              rv = munger(in, out, st.st_size);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: mkzftree.c:584:
+              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: mkzftree.c:584:
+              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: mkzftree.c:584:
+              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: mkzftree.c:585:
+              err = rv ? errno : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: mkzftree.c:585:
+              err = rv ? errno : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: mkzftree.c:586:
+              fclose(in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: mkzftree.c:586:
+              fclose(in);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: mkzftree.c:587:
+              fclose(out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: mkzftree.c:587:
+              fclose(out);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: mkzftree.c:588:
+              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: mkzftree.c:588:
+              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: mkzftree.c:588:
+              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: mkzftree.c:590:
+                lchown(out_path, st.st_uid, st.st_gid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mkzftree.c:590:
+                lchown(out_path, st.st_uid, st.st_gid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mkzftree.c:593:
+                chown(out_path, st.st_uid, st.st_gid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mkzftree.c:593:
+                chown(out_path, st.st_uid, st.st_gid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: mkzftree.c:595:
+                chmod(out_path, st.st_mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mkzftree.c:595:
+                chmod(out_path, st.st_mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: mkzftree.c:596:
+                ut.actime  = st.st_atime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: mkzftree.c:596:
+                ut.actime  = st.st_atime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: mkzftree.c:597:
+                ut.modtime = st.st_mtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: mkzftree.c:597:
+                ut.modtime = st.st_mtime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: mkzftree.c:598:
+                utime(out_path, &ut);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: mkzftree.c:598:
+                utime(out_path, &ut);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mkzftree.c:599:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#169: FILE: mkzftree.c:599:
+    } else {
+      message(vl_error,"Skipping non regular file %s\n", in_path);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mkzftree.c:600:
+      message(vl_error,"Skipping non regular file %s\n", in_path);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#170: FILE: mkzftree.c:600:
+      message(vl_error,"Skipping non regular file %s\n", in_path);
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mkzftree.c:601:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mkzftree.c:602:
+  errno = err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: mkzftree.c:603:
+  return rv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: mkzftree.c:894:
+  while ( (opt = getopt(argc, argv, "vqfFz:p:hux")) != EOF ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#194: FILE: mkzftree.c:894:
+  while ( (opt = getopt(argc, argv, "vqfFz:p:hux")) != EOF ) {
     switch(opt) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#194: FILE: mkzftree.c:894:
+  while ( (opt = getopt(argc, argv, "vqfFz:p:hux")) != EOF ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#194: FILE: mkzftree.c:894:
+  while ( (opt = getopt(argc, argv, "vqfFz:p:hux")) != EOF ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: mkzftree.c:918:
+      decompressing=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#202: FILE: mkzftree.c:918:
+      decompressing=1;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: mkzftree.c:927:
+    case 'F':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: mkzftree.c:928:
+      onefile = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: mkzftree.c:929:
+      break;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: mkzftree.c:939:
+  if (onefile==1) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: mkzftree.c:939:
+  if (onefile==1) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#220: FILE: mkzftree.c:939:
+  if (onefile==1) { 
+    int l;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#220: FILE: mkzftree.c:939:
+  if (onefile==1) { 
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: mkzftree.c:940:
+    int l;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: mkzftree.c:941:
+    int l;
+    in = argv[optind];                         /* Input file  */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: mkzftree.c:941:
+    in = argv[optind];                         /* Input file  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: mkzftree.c:942:
+    out = argv[optind+1];                      /* Output file */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#223: FILE: mkzftree.c:942:
+    out = argv[optind+1];                      /* Output file */
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: mkzftree.c:943:
+    if (decompressing==1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#224: FILE: mkzftree.c:943:
+    if (decompressing==1) {
+      message(vl_filename, "Decompressing %s to %s\n", in,out);} 

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#224: FILE: mkzftree.c:943:
+    if (decompressing==1) {
                      ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#224: FILE: mkzftree.c:943:
+    if (decompressing==1) {
[...]
+    else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: mkzftree.c:944:
+      message(vl_filename, "Decompressing %s to %s\n", in,out);} $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: mkzftree.c:944:
+      message(vl_filename, "Decompressing %s to %s\n", in,out);} $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: mkzftree.c:944:
+      message(vl_filename, "Decompressing %s to %s\n", in,out);} 
                                                          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#225: FILE: mkzftree.c:944:
+      message(vl_filename, "Decompressing %s to %s\n", in,out);} 
                                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: mkzftree.c:945:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#226: FILE: mkzftree.c:945:
+    else
+      message(vl_filename, "Compressing %s to %s\n", in,out);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: mkzftree.c:946:
+      message(vl_filename, "Compressing %s to %s\n", in,out);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#227: FILE: mkzftree.c:946:
+      message(vl_filename, "Compressing %s to %s\n", in,out);
                                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: mkzftree.c:947:
+    munge_file(in,out,munger);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: mkzftree.c:947:
+    munge_file(in,out,munger);
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: mkzftree.c:947:
+    munge_file(in,out,munger);
                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: mkzftree.c:948:
+  } else $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: mkzftree.c:948:
+  } else $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#229: FILE: mkzftree.c:948:
+  } else 
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 2)
#229: FILE: mkzftree.c:948:
+  } else 
[...]
+

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: mkzftree.c:948:
+  } else 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: mkzftree.c:949:
+  {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#231: FILE: mkzftree.c:950:
+  {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: mkzftree.c:951:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: mkzftree.c:979:
+  }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000528806.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 77 warnings, 4 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000528806.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
