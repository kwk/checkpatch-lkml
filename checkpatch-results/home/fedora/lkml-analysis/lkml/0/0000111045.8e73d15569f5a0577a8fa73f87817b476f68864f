WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
containing two cores and with last level cache shared between cores with in a

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: arch/i386/Kconfig:242:
+^I  Multi-core scheduler support improves the CPU scheduler's decision $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: arch/i386/Kconfig:243:
+^I  making when dealing with multi-core CPU chips at a cost of slightly $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#81: FILE: arch/i386/kernel/cpu/common.c:244:
 void __devinit generic_identify(struct cpuinfo_x86 * c)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#132: FILE: arch/i386/kernel/cpu/intel_cacheinfo.c:200:
+					num_threads_sharing = 1 + this_leaf.eax.split.num_threads_sharing;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#138: FILE: arch/i386/kernel/cpu/intel_cacheinfo.c:206:
+					num_threads_sharing = 1 + this_leaf.eax.split.num_threads_sharing;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: arch/i386/kernel/smpboot.c:75:
+int cpu_llc_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: arch/x86_64/Kconfig:253:
+^I  Multi-core scheduler support improves the CPU scheduler's decision $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: arch/x86_64/Kconfig:254:
+^I  making when dealing with multi-core CPU chips at a cost of slightly $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#279: FILE: arch/x86_64/kernel/smpboot.c:70:
+u8 cpu_llc_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
                                                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: include/asm-i386/topology.h:106:
+extern cpumask_t cpu_coregroup_map(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/asm-x86_64/topology.h:62:
+extern cpumask_t cpu_coregroup_map(int cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#442: FILE: kernel/sched.c:5680:
+	cpumask_t mask = cpu_coregroup_map(cpu);
+	return first_cpu(mask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: kernel/sched.c:5819:
+		cpumask_t this_core_map = cpu_coregroup_map(i);
+		cpus_and(this_core_map, this_core_map, *cpu_map);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: kernel/sched.c:5827:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#491: FILE: kernel/sched.c:5926:
+		power = SCHED_LOAD_SCALE + (cpus_weight(sd->groups->cpumask)-1)
 		                                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: kernel/sched.c:5929:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: kernel/sched.c:5929:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/sched.c:5932:
+ ^I^I/*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: kernel/sched.c:5932:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/sched.c:5932:
+ ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: kernel/sched.c:5933:
+ ^I^I * This has to be < 2 * SCHED_LOAD_SCALE$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#498: FILE: kernel/sched.c:5933:
+ ^I^I * This has to be < 2 * SCHED_LOAD_SCALE$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: kernel/sched.c:5934:
+ ^I^I * Lets keep it SCHED_LOAD_SCALE, so that$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: kernel/sched.c:5934:
+ ^I^I * Lets keep it SCHED_LOAD_SCALE, so that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: kernel/sched.c:5935:
+ ^I^I * while calculating NUMA group's cpu_power$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: kernel/sched.c:5935:
+ ^I^I * while calculating NUMA group's cpu_power$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: kernel/sched.c:5936:
+ ^I^I * we can simply do$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#501: FILE: kernel/sched.c:5936:
+ ^I^I * we can simply do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: kernel/sched.c:5937:
+ ^I^I *  numa_group->cpu_power += phys_group->cpu_power;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#502: FILE: kernel/sched.c:5937:
+ ^I^I *  numa_group->cpu_power += phys_group->cpu_power;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: kernel/sched.c:5938:
+ ^I^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#503: FILE: kernel/sched.c:5938:
+ ^I^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/sched.c:5939:
+ ^I^I * See "only add power once for each physical pkg"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#504: FILE: kernel/sched.c:5939:
+ ^I^I * See "only add power once for each physical pkg"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: kernel/sched.c:5940:
+ ^I^I * comment below$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: kernel/sched.c:5940:
+ ^I^I * comment below$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: kernel/sched.c:5941:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: kernel/sched.c:5941:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: kernel/sched.c:5942:
+ ^I^Isd->groups->cpu_power = SCHED_LOAD_SCALE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#507: FILE: kernel/sched.c:5942:
+ ^I^Isd->groups->cpu_power = SCHED_LOAD_SCALE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: kernel/sched.c:5942:
+ ^I^Isd->groups->cpu_power = SCHED_LOAD_SCALE;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 20 warnings, 6 checks, 411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
