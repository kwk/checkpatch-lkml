WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
This patch applies on top of the recent series of patches I & sfr have sent.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#38: FILE: fs/locks.c:131:
+#define for_each_lock(inode, lockp) \
+	for (lockp = &inode->i_flock; *lockp != NULL; lockp = &(*lockp)->fl_next)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lockp' - possible side-effects?
#38: FILE: fs/locks.c:131:
+#define for_each_lock(inode, lockp) \
+	for (lockp = &inode->i_flock; *lockp != NULL; lockp = &(*lockp)->fl_next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lockp"
#39: FILE: fs/locks.c:132:
+	for (lockp = &inode->i_flock; *lockp != NULL; lockp = &(*lockp)->fl_next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#48: FILE: fs/locks.c:226:
+static inline int flock_translate_cmd(int cmd) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:WxO)
#51: FILE: fs/locks.c:229:
+	switch (cmd &~ LOCK_NB) {
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '~' (ctx:OxW)
#51: FILE: fs/locks.c:229:
+	switch (cmd &~ LOCK_NB) {
 	             ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#64: FILE: fs/locks.c:241:
+static int flock_make_lock(struct file *filp,
                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: fs/locks.c:242:
+static int flock_make_lock(struct file *filp,
+		struct file_lock **lock, unsigned int cmd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#70: FILE: fs/locks.c:246:
+	int type = flock_translate_cmd(cmd);
+	if (type < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: fs/locks.c:248:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#100: FILE: fs/locks.c:772:
+static int flock_lock_file(struct file *filp, struct file_lock *new_fl,
                                         ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: fs/locks.c:783:
+		struct file_lock *fl = *before;
+		if (IS_POSIX(fl))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#146: FILE: fs/locks.c:787:
+		if (filp != fl->fl_file)
 		    ^^^^

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#166: FILE: fs/locks.c:798:
+		yield();

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: fs/locks.c:807:
+		struct file_lock *fl = *before;
+		if (IS_POSIX(fl))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != LOCK_UN'
#234: FILE: fs/locks.c:1301:
+	if ((cmd != LOCK_UN) && !(cmd & LOCK_MAND) && !(filp->f_mode & 3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#240: FILE: fs/locks.c:1304:
+	error = flock_make_lock(filp, &lock, cmd);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#246: FILE: fs/locks.c:1308:
+	error = flock_lock_file(filp, lock,
 	                        ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 10 warnings, 6 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
