WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
   kernel is not compressed and the cramfs image is in RAM after the kernel.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#86: FILE: fs/cramfs/inode.c:126:
+extern unsigned int romfs_length;   /* dito */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#87: FILE: fs/cramfs/inode.c:127:
+void *(*cramfs_read)(struct super_block *, unsigned int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#87: FILE: fs/cramfs/inode.c:127:
+void *(*cramfs_read)(struct super_block *, unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#87: FILE: fs/cramfs/inode.c:127:
+void *(*cramfs_read)(struct super_block *, unsigned int, unsigned int);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: fs/cramfs/inode.c:268:
+			sb->CRAMFS_SB_FSTIME=super.fsid.edition;
 			                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#163: FILE: init/do_mounts.c:714:
+		extern void *(*cramfs_read)(struct super_block *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#163: FILE: init/do_mounts.c:714:
+		extern void *(*cramfs_read)(struct super_block *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#163: FILE: init/do_mounts.c:714:
+		extern void *(*cramfs_read)(struct super_block *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#163: FILE: init/do_mounts.c:714:
+		extern void *(*cramfs_read)(struct super_block *, unsigned int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: init/do_mounts.c:715:
+		extern void *(*cramfs_read)(struct super_block *, unsigned int,
+				     unsigned int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#165: FILE: init/do_mounts.c:716:
+		extern void *mem_cramfs_read(struct super_block *sb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: init/do_mounts.c:717:
+		extern void *mem_cramfs_read(struct super_block *sb,
+				      unsigned int offset, unsigned int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#167: FILE: init/do_mounts.c:718:
+		extern void *blk_cramfs_read(struct super_block *sb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: init/do_mounts.c:719:
+		extern void *blk_cramfs_read(struct super_block *sb,
+				      unsigned int offset, unsigned int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#169: FILE: init/do_mounts.c:720:
+		extern unsigned long romfs_in_flash; /* From head.S */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#170: FILE: init/do_mounts.c:721:
+		extern struct file_system_type cramfs_fs_type; /* fs/cramfs/inode.c */

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: init/do_mounts.c:730:
+			if(sys_mount("/dev/root", "/root", "cramfs", root_mountflags, 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#180: FILE: init/do_mounts.c:731:
+				printk(KERN_ERR "VFS: Unable to mount cramfs filesystem.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: init/do_mounts.c:736:
+			printk("VFS: Mounted root (cramfs filesystem).\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#187: FILE: init/do_mounts.c:738:
+			return;
+		} else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 16 warnings, 3 checks, 126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
