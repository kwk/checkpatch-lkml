ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/fs/ntfs/ChangeLog	2004-05-26 22:10:14 +01:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#143: FILE: fs/ntfs/inode.c:1767:
+	BUG_ON(NInoAttr(ni));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#143: FILE: fs/ntfs/inode.c:1767:
+	BUG_ON(NInoAttr(ni));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: fs/ntfs/inode.c:1768:
+	BUG_ON(ni->nr_extents != -1);

CHECK:CAMELCASE: Avoid CamelCase: <NInoDirty>
#147: FILE: fs/ntfs/inode.c:1771:
+	if (NInoDirty(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#150: FILE: fs/ntfs/inode.c:1774:
+			ntfs_error(ni->vol->sb, "Clearing dirty extent inode!  "
+					"Losing data!  This is a BUG!!!");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: fs/ntfs/inode.c:1808:
+			ntfs_error(vi->i_sb, "Failed to commit dirty inode "
+					"0x%lx.  Losing data!", vi->i_ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: fs/ntfs/inode.c:1968:
+	ntfs_debug("Entering for %sinode 0x%lx.", NInoAttr(ni) ? "attr " : "",
+			vi->i_ino);

CHECK:CAMELCASE: Avoid CamelCase: <NInoClearDirty>
#206: FILE: fs/ntfs/inode.c:1975:
+		NInoClearDirty(ni);

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: fs/ntfs/inode.c:1982:
+		ntfs_warning(vi->i_sb, "Cleaning dirty inode 0x%lx without "
+				"writing to disk as this is not yet "

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: fs/ntfs/inode.c:1983:
+				"writing to disk as this is not yet "
+				"implemented.", vi->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: fs/ntfs/inode.c:1998:
+				ntfs_warning(vi->i_sb, "Cleaning dirty extent "
+						"inode 0x%lx without writing "

WARNING:SPLIT_STRING: quoted string split across lines
#230: FILE: fs/ntfs/inode.c:1999:
+						"inode 0x%lx without writing "
+						"to disk as this is not yet "

WARNING:SPLIT_STRING: quoted string split across lines
#231: FILE: fs/ntfs/inode.c:2000:
+						"to disk as this is not yet "
+						"implemented.", tni->mft_no);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: fs/ntfs/inode.h:284:
+extern void ntfs_write_inode(struct inode *vi, int sync);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:RETURN_VOID: void function return statements are not generally useful
#254: FILE: fs/ntfs/inode.h:291:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 5 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
