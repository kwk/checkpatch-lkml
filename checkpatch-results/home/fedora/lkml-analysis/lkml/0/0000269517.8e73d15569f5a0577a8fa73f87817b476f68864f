WARNING:TYPO_SPELLING: 'synching' may be misspelled - perhaps 'syncing'?
#30: 
synching up my serio sysfs patches with Vojtech and the rest of my stuff
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#80: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/base/platform.c:160:
+        struct platform_device pdev;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/base/platform.c:160:
+        struct platform_device pdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/base/platform.c:161:
+        struct resource resources[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/base/platform.c:161:
+        struct resource resources[0];$

WARNING:TYPO_SPELLING: 'iwithout' may be misspelled - perhaps 'without'?
#143: FILE: drivers/base/platform.c:181:
+ *	to be unloaded iwithout waiting for the last reference to the device
   	               ^^^^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pobj)...) over kmalloc(sizeof(struct platform_object)...)
#152: FILE: drivers/base/platform.c:190:
+	pobj = kmalloc(sizeof(struct platform_object) + sizeof(struct resource) * num, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#198: FILE: include/linux/device.h:384:
+extern struct platform_device *platform_device_register_simple(char *, unsigned int, struct resource *, unsigned int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 10 warnings, 2 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
