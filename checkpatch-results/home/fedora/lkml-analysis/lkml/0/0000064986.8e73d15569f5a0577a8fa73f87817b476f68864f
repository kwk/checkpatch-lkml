WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#129: FILE: fs/ufs/truncate.c:379:
+	unsigned lastfrag, i, end;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/ufs/truncate.c:393:
+       if (IS_ERR(lastpage)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#143: FILE: fs/ufs/truncate.c:393:
+       if (IS_ERR(lastpage)) {
+               err = -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/ufs/truncate.c:394:
+               err = -EIO;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/ufs/truncate.c:394:
+               err = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/ufs/truncate.c:395:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/ufs/truncate.c:395:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/ufs/truncate.c:396:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/ufs/truncate.c:398:
+       end = lastfrag & ((1 << (PAGE_CACHE_SHIFT - inode->i_blkbits)) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/ufs/truncate.c:399:
+       bh = page_buffers(lastpage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/ufs/truncate.c:400:
+       for (i = 0; i < end; ++i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#150: FILE: fs/ufs/truncate.c:400:
+       for (i = 0; i < end; ++i)
+               bh = bh->b_this_page;

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: fs/ufs/truncate.c:401:
+               bh = bh->b_this_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/ufs/truncate.c:401:
+               bh = bh->b_this_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/ufs/truncate.c:403:
+       if (!buffer_mapped(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#153: FILE: fs/ufs/truncate.c:403:
+       if (!buffer_mapped(bh)) {
+               err = ufs_getfrag_block(inode, lastfrag, bh, 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/ufs/truncate.c:404:
+               err = ufs_getfrag_block(inode, lastfrag, bh, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/ufs/truncate.c:404:
+               err = ufs_getfrag_block(inode, lastfrag, bh, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/ufs/truncate.c:406:
+               if (unlikely(err))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/ufs/truncate.c:406:
+               if (unlikely(err))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#156: FILE: fs/ufs/truncate.c:406:
+               if (unlikely(err))
+                       goto out_unlock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/ufs/truncate.c:407:
+                       goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/ufs/truncate.c:407:
+                       goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: fs/ufs/truncate.c:409:
+               if (buffer_new(bh)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/ufs/truncate.c:409:
+               if (buffer_new(bh)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#159: FILE: fs/ufs/truncate.c:409:
+               if (buffer_new(bh)) {
+                       clear_buffer_new(bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: fs/ufs/truncate.c:410:
+                       clear_buffer_new(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/ufs/truncate.c:410:
+                       clear_buffer_new(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/ufs/truncate.c:411:
+                       unmap_underlying_metadata(bh->b_bdev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/ufs/truncate.c:411:
+                       unmap_underlying_metadata(bh->b_bdev,$

WARNING:TYPO_SPELLING: 'maped' may be misspelled - perhaps 'mapped'?
#165: FILE: fs/ufs/truncate.c:415:
+			* if it maped to hole, it already contains zeroes
 			        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/ufs/truncate.c:417:
+                       set_buffer_uptodate(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: fs/ufs/truncate.c:417:
+                       set_buffer_uptodate(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: fs/ufs/truncate.c:418:
+                       mark_buffer_dirty(bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/ufs/truncate.c:418:
+                       mark_buffer_dirty(bh);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: fs/ufs/truncate.c:419:
+                       set_page_dirty(lastpage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/ufs/truncate.c:419:
+                       set_page_dirty(lastpage);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: fs/ufs/truncate.c:420:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/ufs/truncate.c:420:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/ufs/truncate.c:421:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: fs/ufs/truncate.c:423:
+       ufs_put_locked_page(lastpage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: fs/ufs/truncate.c:425:
+       return err;$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#246: FILE: fs/ufs/truncate.c:499:
+		ufs_warning(sb, __FUNCTION__, "FAILED, error code: %d\n", err);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#279: FILE: fs/ufs/util.c:257:
+				       (filler_t*)mapping->a_ops->readpage,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#282: FILE: fs/ufs/util.c:260:
+			printk(KERN_ERR "ufs_change_blocknr: "

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: fs/ufs/util.c:261:
+			printk(KERN_ERR "ufs_change_blocknr: "
+			       "read_cache_page error: ino %lu, index: %lu\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#294: FILE: fs/ufs/util.c:272:
+			printk(KERN_ERR "ufs_change_blocknr: "

WARNING:SPLIT_STRING: quoted string split across lines
#295: FILE: fs/ufs/util.c:273:
+			printk(KERN_ERR "ufs_change_blocknr: "
+			       "can not read page: ino %lu, index: %lu\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: fs/ufs/util.h:255:
+extern struct page *ufs_get_locked_page(struct address_space *mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/ufs/util.h:259:
+       unlock_page(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: fs/ufs/util.h:260:
+       page_cache_release(page);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 36 warnings, 1 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
