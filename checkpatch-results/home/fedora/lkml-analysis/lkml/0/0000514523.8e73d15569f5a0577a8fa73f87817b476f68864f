WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
A while ago (14 May) you asked Richard Hirst and I to come to agreement over 

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: 2.4/drivers/scsi/53c700.c:223:
+	if((host = scsi_register(tpnt, 4)) == NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#132: FILE: 2.4/drivers/scsi/53c700.c:223:
+	if((host = scsi_register(tpnt, 4)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(SCRIPT)
#142: FILE: 2.4/drivers/scsi/53c700.c:246:
+	for(j = 0; j < sizeof(SCRIPT)/sizeof(SCRIPT[0]); j++) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#142: FILE: 2.4/drivers/scsi/53c700.c:246:
+	for(j = 0; j < sizeof(SCRIPT)/sizeof(SCRIPT[0]); j++) {
 	                             ^

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: 2.4/drivers/scsi/53c700.c:246:
+	for(j = 0; j < sizeof(SCRIPT)/sizeof(SCRIPT[0]); j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#142: FILE: 2.4/drivers/scsi/53c700.c:246:
+	for(j = 0; j < sizeof(SCRIPT)/sizeof(SCRIPT[0]); j++) {
+		script[j] = bS_to_host(SCRIPT[j]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <pScript>
#150: FILE: 2.4/drivers/scsi/53c700.c:253:
+		script[LABELPATCHES[j]] = bS_to_host(pScript + SCRIPT[LABELPATCHES[j]]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#174: FILE: 2.4/drivers/scsi/53c700.c:275:
+	hostdata->rev = (NCR_700_readb(host, CTEST7_REG)<<4) & 0x0f;
 	                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#184: FILE: 2.4/drivers/scsi/53c700.c:287:
+	NCR_700_writeb(ASYNC_OPERATION , host, SXFER_REG);
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#227: FILE: 2.4/drivers/scsi/53c700.c:419:
+		printk(KERN_ERR "53c700: SLOT %p is not MAGIC!!!\n", slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#231: FILE: 2.4/drivers/scsi/53c700.c:422:
+		printk(KERN_ERR "53c700: SLOT %p is FREE!!!\n", slot);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#240: FILE: 2.4/drivers/scsi/53c700.c:513:
+			printk(KERN_WARNING "53c700: WARNING: DUPLICATE tag %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: 2.4/drivers/scsi/53c700.c:527:
+ *       actually four times this period value */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#259: FILE: 2.4/drivers/scsi/53c700.c:534:
+	if(period*4 < NCR_700_MIN_PERIOD) {
 	         ^

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: 2.4/drivers/scsi/53c700.c:534:
+	if(period*4 < NCR_700_MIN_PERIOD) {

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#260: FILE: 2.4/drivers/scsi/53c700.c:535:
+		printk(KERN_WARNING "53c700: Period %dns is less than SCSI-2 minimum, setting to %d\n", period*4, NCR_700_MIN_PERIOD);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#260: FILE: 2.4/drivers/scsi/53c700.c:535:
+		printk(KERN_WARNING "53c700: Period %dns is less than SCSI-2 minimum, setting to %d\n", period*4, NCR_700_MIN_PERIOD);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#260: FILE: 2.4/drivers/scsi/53c700.c:535:
+		printk(KERN_WARNING "53c700: Period %dns is less than SCSI-2 minimum, setting to %d\n", period*4, NCR_700_MIN_PERIOD);
 		                                                                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#261: FILE: 2.4/drivers/scsi/53c700.c:536:
+		period = NCR_700_MIN_PERIOD/4;
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#263: FILE: 2.4/drivers/scsi/53c700.c:538:
+	XFERP = (period*4 * hostdata->sync_clock)/1000 - 4;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#263: FILE: 2.4/drivers/scsi/53c700.c:538:
+	XFERP = (period*4 * hostdata->sync_clock)/1000 - 4;
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#272: FILE: 2.4/drivers/scsi/53c700.c:585:
+		printk(KERN_ERR "53c700: SCSI DONE HAS NULL SCp\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#323: FILE: 2.4/drivers/scsi/53c700.c:616:
+	NCR_700_writeb(LAST_DIS_ENBL | ENABLE_ACTIVE_NEGATION|GENERATE_RECEIVE_PARITY,
 	                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: 2.4/drivers/scsi/53c700.c:617:
+	NCR_700_writeb(LAST_DIS_ENBL | ENABLE_ACTIVE_NEGATION|GENERATE_RECEIVE_PARITY,
+	     host, CTEST8_REG);

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: 2.4/drivers/scsi/53c700.c:619:
+	if(hostdata->clock > 75) {

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#327: FILE: 2.4/drivers/scsi/53c700.c:620:
+		printk(KERN_ERR "53c700: Clock speed %dMHz is too high: 75Mhz is the maximum this chip can be driven at\n", hostdata->clock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: 2.4/drivers/scsi/53c700.c:620:
+		printk(KERN_ERR "53c700: Clock speed %dMHz is too high: 75Mhz is the maximum this chip can be driven at\n", hostdata->clock);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#329: FILE: 2.4/drivers/scsi/53c700.c:622:
+		 * of spec: sync divider 2, async divider 3 */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#333: FILE: 2.4/drivers/scsi/53c700.c:626:
+		hostdata->sync_clock = hostdata->clock/2;
 		                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#334: FILE: 2.4/drivers/scsi/53c700.c:627:
+	} else	if(hostdata->clock > 50  && hostdata->clock <= 75) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#339: FILE: 2.4/drivers/scsi/53c700.c:632:
+		hostdata->sync_clock = hostdata->clock*2;
 		                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: 2.4/drivers/scsi/53c700.c:634:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: 2.4/drivers/scsi/53c700.c:635:
+	} else if(hostdata->clock > 37 && hostdata->clock <= 50) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#348: FILE: 2.4/drivers/scsi/53c700.c:641:
+	} else if(hostdata->clock > 25 && hostdata->clock <=37) {
 	                                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: 2.4/drivers/scsi/53c700.c:641:
+	} else if(hostdata->clock > 25 && hostdata->clock <=37) {

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#381: FILE: 2.4/drivers/scsi/53c700.c:712:
+			NCR_700_writeb(NCR_700_get_SXFER(SCp->device),

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#429: FILE: 2.4/drivers/scsi/53c700.c:790:
+		} else if(SCp != NULL && NCR_700_is_flag_set(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING)) {

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: 2.4/drivers/scsi/53c700.c:790:
+		} else if(SCp != NULL && NCR_700_is_flag_set(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "SCp"
#429: FILE: 2.4/drivers/scsi/53c700.c:790:
+		} else if(SCp != NULL && NCR_700_is_flag_set(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#431: FILE: 2.4/drivers/scsi/53c700.c:792:
+			printk(KERN_WARNING "scsi%d (%d:%d) Rejected first tag queue attempt, turning off tag queueing\n", host->host_no, pun, lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#431: FILE: 2.4/drivers/scsi/53c700.c:792:
+			printk(KERN_WARNING "scsi%d (%d:%d) Rejected first tag queue attempt, turning off tag queueing\n", host->host_no, pun, lun);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: 2.4/drivers/scsi/53c700.c:794:
+			hostdata->tag_negotiated &= ~(1<<SCp->target);
 			                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: 2.4/drivers/scsi/53c700.c:804:
+		printk(KERN_ERR "scsi%d (%d:%d) Parity Error!\n", host->host_no,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#448: FILE: 2.4/drivers/scsi/53c700.c:809:
+		printk(KERN_INFO "scsi%d (%d:%d) SIMPLE TAG %d %s\n", host->host_no,

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: 2.4/drivers/scsi/53c700.c:859:
+			if(SCp->cmnd[0] == REQUEST_SENSE) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#485: FILE: 2.4/drivers/scsi/53c700.c:861:
+				 * contingent allegiance condition */

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#486: FILE: 2.4/drivers/scsi/53c700.c:862:
+				printk(KERN_ERR "scsi%d (%d:%d) broken device is looping in contingent allegiance: ignoring\n", host->host_no, pun, lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#486: FILE: 2.4/drivers/scsi/53c700.c:862:
+				printk(KERN_ERR "scsi%d (%d:%d) broken device is looping in contingent allegiance: ignoring\n", host->host_no, pun, lun);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: 2.4/drivers/scsi/53c700.c:869:
+^I^I^I^I * contingent allegiance condition will cause a $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#524: FILE: 2.4/drivers/scsi/53c700.c:871:
+				 * saved data_cmnd */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#535: FILE: 2.4/drivers/scsi/53c700.c:882:
+				 * status at the end of the command */

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#538: FILE: 2.4/drivers/scsi/53c700.c:885:
+				slot->SG[0].ins = bS_to_host(SCRIPT_MOVE_DATA_IN | sizeof(SCp->sense_buffer));

CHECK:CAMELCASE: Avoid CamelCase: <pAddr>
#539: FILE: 2.4/drivers/scsi/53c700.c:886:
+				slot->SG[0].pAddr = bS_to_host(virt_to_bus(SCp->sense_buffer));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#543: FILE: 2.4/drivers/scsi/53c700.c:890:
+				dma_cache_wback((unsigned long)slot->SG, sizeof(slot->SG[0])*2);
 				                                                            ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#544: FILE: 2.4/drivers/scsi/53c700.c:891:
+				dma_cache_inv((unsigned long)SCp->sense_buffer, sizeof(SCp->sense_buffer));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: 2.4/drivers/scsi/53c700.c:892:
+^I^I^I^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#558: FILE: 2.4/drivers/scsi/53c700.c:906:
+					NCR_700_set_flag(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#560: FILE: 2.4/drivers/scsi/53c700.c:908:
+					NCR_700_clear_flag(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#571: FILE: 2.4/drivers/scsi/53c700.c:921:
+		printk(KERN_ERR "         len = %d, cmd =", SCp->cmd_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#614: FILE: 2.4/drivers/scsi/53c700.c:1025:
+		printk(KERN_INFO "scsi%d: (%d:%d) RESELECTION DURING SELECTION, dsp=%p[%04x] state=%d, count=%d\n",

WARNING:LONG_LINE: line length of 223 exceeds 100 columns
#623: FILE: 2.4/drivers/scsi/53c700.c:1038:
+			printk(KERN_INFO "IDENTIFIED SG segment as being %p in slot %p, cmd %p, slot->resume_offset=%p\n", (void *)SG, &hostdata->slots[i], hostdata->slots[i].cmnd, (void *)hostdata->slots[i].resume_offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#623: FILE: 2.4/drivers/scsi/53c700.c:1038:
+			printk(KERN_INFO "IDENTIFIED SG segment as being %p in slot %p, cmd %p, slot->resume_offset=%p\n", (void *)SG, &hostdata->slots[i], hostdata->slots[i].cmnd, (void *)hostdata->slots[i].resume_offset);

WARNING:LONG_LINE: line length of 289 exceeds 100 columns
#640: FILE: 2.4/drivers/scsi/53c700.c:1089:
+					printk(KERN_INFO " SG[%d].length = %d, move_insn=%08x, addr %08x\n", i, ((struct scatterlist *)SCp->buffer)[i].length, ((struct NCR_700_command_slot *)SCp->host_scribble)->SG[i].ins, ((struct NCR_700_command_slot *)SCp->host_scribble)->SG[i].pAddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#640: FILE: 2.4/drivers/scsi/53c700.c:1089:
+					printk(KERN_INFO " SG[%d].length = %d, move_insn=%08x, addr %08x\n", i, ((struct scatterlist *)SCp->buffer)[i].length, ((struct NCR_700_command_slot *)SCp->host_scribble)->SG[i].ins, ((struct NCR_700_command_slot *)SCp->host_scribble)->SG[i].pAddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#647: FILE: 2.4/drivers/scsi/53c700.c:1095:
+		printk(KERN_NOTICE "scsi%d (%d:%d) DEBUG INTERRUPT %d AT %p[%04x], continuing\n",

WARNING:LONG_LINE: line length of 193 exceeds 100 columns
#683: FILE: 2.4/drivers/scsi/53c700.c:1146:
+		DEBUG(("  ID %d WARNING: RESELECTION OF BUSY HOST, saving cmd %p, slot %p, addr %x [%04x], resume %x!\n", id, hostdata->cmd, slot, dsp, dsp - hostdata->pScript, resume_offset));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: 2.4/drivers/scsi/53c700.c:1268:
+	NCR_700_writeb(NCR_700_get_SXFER(SCp->device),
+	     SCp->host, SXFER_REG);

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: 2.4/drivers/scsi/53c700.c:1303:
+	if((istat = NCR_700_readb(host, ISTAT_REG))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#734: FILE: 2.4/drivers/scsi/53c700.c:1303:
+	if((istat = NCR_700_readb(host, ISTAT_REG))

WARNING:LONG_LINE: line length of 169 exceeds 100 columns
#773: FILE: 2.4/drivers/scsi/53c700.c:1395:
+				int count = (hostdata->script[Ent_SendMessage/4] & 0xffffff) - ((NCR_700_readl(host, DBC_REG) & 0xffffff) + NCR_700_data_residual(host));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#773: FILE: 2.4/drivers/scsi/53c700.c:1395:
+				int count = (hostdata->script[Ent_SendMessage/4] & 0xffffff) - ((NCR_700_readl(host, DBC_REG) & 0xffffff) + NCR_700_data_residual(host));
 				                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Ent_SendMessage>
#773: FILE: 2.4/drivers/scsi/53c700.c:1395:
+				int count = (hostdata->script[Ent_SendMessage/4] & 0xffffff) - ((NCR_700_readl(host, DBC_REG) & 0xffffff) + NCR_700_data_residual(host));

WARNING:LONG_LINE: line length of 246 exceeds 100 columns
#774: FILE: 2.4/drivers/scsi/53c700.c:1396:
+				printk("scsi%d (%d:%d) PHASE MISMATCH IN SEND MESSAGE %d remain, return %p[%04x], phase %s\n", host->host_no, pun, lun, count, (void *)temp, temp - hostdata->pScript, sbcl_to_string(NCR_700_readb(host, SBCL_REG)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#774: FILE: 2.4/drivers/scsi/53c700.c:1396:
+				int count = (hostdata->script[Ent_SendMessage/4] & 0xffffff) - ((NCR_700_readl(host, DBC_REG) & 0xffffff) + NCR_700_data_residual(host));
+				printk("scsi%d (%d:%d) PHASE MISMATCH IN SEND MESSAGE %d remain, return %p[%04x], phase %s\n", host->host_no, pun, lun, count, (void *)temp, temp - hostdata->pScript, sbcl_to_string(NCR_700_readb(host, SBCL_REG)));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#774: FILE: 2.4/drivers/scsi/53c700.c:1396:
+				printk("scsi%d (%d:%d) PHASE MISMATCH IN SEND MESSAGE %d remain, return %p[%04x], phase %s\n", host->host_no, pun, lun, count, (void *)temp, temp - hostdata->pScript, sbcl_to_string(NCR_700_readb(host, SBCL_REG)));

CHECK:CAMELCASE: Avoid CamelCase: <SGcount>
#793: FILE: 2.4/drivers/scsi/53c700.c:1424:
+					count = (bS_to_cpu(slot->SG[SGcount].ins) & 0x00ffffff);

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#836: FILE: 2.4/drivers/scsi/53c700.c:1566:
+		len += sprintf(&buf[len]," %2d:%2d   %4d    %4d      %4d\n", SDp->id, SDp->lun, SDp->queue_depth, NCR_700_get_depth(SDp), SDp->current_tag);
 		                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: 2.4/drivers/scsi/53c700.c:1753:
+^I^I^I       i, count, slot->SG[i].ins, $

CHECK:CAMELCASE: Avoid CamelCase: <vPtr>
#852: FILE: 2.4/drivers/scsi/53c700.c:1755:
+			dma_cache_wback_inv((unsigned long)vPtr, count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#869: FILE: 2.4/drivers/scsi/53c700.c:1777:
+	printk(KERN_INFO "scsi%d (%d:%d) New error handler wants to abort command\n\t",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#878: FILE: 2.4/drivers/scsi/53c700.c:1809:
+	printk(KERN_INFO "scsi%d (%d:%d) New error handler wants BUS reset, cmd %p\n\t",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#887: FILE: 2.4/drivers/scsi/53c700.c:1819:
+	printk(KERN_INFO "scsi%d (%d:%d) New error handler wants device reset\n\t",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#896: FILE: 2.4/drivers/scsi/53c700.c:1829:
+	printk(KERN_INFO "scsi%d (%d:%d) New error handler wants HOST reset\n\t",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#910: FILE: 2.4/drivers/scsi/53c700.h:38:
+ * set */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#915: FILE: 2.4/drivers/scsi/53c700.h:43:
 
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#924: FILE: 2.4/drivers/scsi/53c700.h:88:
+#define NCR_700_DEV_BEGIN_TAG_QUEUEING	(1<<18)
                                       	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#924: FILE: 2.4/drivers/scsi/53c700.h:88:
+#define NCR_700_DEV_BEGIN_TAG_QUEUEING	(1<<18)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#934: FILE: 2.4/drivers/scsi/53c700.h:192:
+	 * little endian on this platform (which is big endian) */

CHECK:CAMELCASE: Avoid CamelCase: <bSWAP>
#961: FILE: 2.4/drivers/scsi/53c700.h:242:
+#define	bSWAP	(hostdata->force_le_on_be)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#971: FILE: 2.4/drivers/scsi/53c700.h:252:
+#define bS_to_cpu(x)	(bSWAP ? le32_to_cpu(x) : (x))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#972: FILE: 2.4/drivers/scsi/53c700.h:253:
+#define bS_to_host(x)	(bSWAP ? cpu_to_le32(x) : (x))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#975: FILE: 2.4/drivers/scsi/53c700.h:256:
+ * swapping is done by the NCR_700_{read|write}[b] functions */

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#1066: FILE: 2.4/drivers/scsi/53c700.h:439:
+NCR_700_readb(struct Scsi_Host *host, __u32 reg)

CHECK:CAMELCASE: Avoid CamelCase: <NCR_700_Host_Parameters>
#1068: FILE: 2.4/drivers/scsi/53c700.h:441:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1068: FILE: 2.4/drivers/scsi/53c700.h:441:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1069: FILE: 2.4/drivers/scsi/53c700.h:442:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1071: FILE: 2.4/drivers/scsi/53c700.h:444:
+	return readb(host->base + (reg^bE));
 	                              ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1078: FILE: 2.4/drivers/scsi/53c700.h:451:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1079: FILE: 2.4/drivers/scsi/53c700.h:452:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1080: FILE: 2.4/drivers/scsi/53c700.h:453:
+#if 1

ERROR:SPACING: space required before the open parenthesis '('
#1082: FILE: 2.4/drivers/scsi/53c700.h:455:
+	if((reg & 0x3) != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1083: FILE: 2.4/drivers/scsi/53c700.h:456:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1092: FILE: 2.4/drivers/scsi/53c700.h:465:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1093: FILE: 2.4/drivers/scsi/53c700.h:466:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1095: FILE: 2.4/drivers/scsi/53c700.h:468:
+	writeb(value, host->base + (reg^bE));
 	                               ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1101: FILE: 2.4/drivers/scsi/53c700.h:474:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1102: FILE: 2.4/drivers/scsi/53c700.h:475:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1104: FILE: 2.4/drivers/scsi/53c700.h:477:
+#if 1

ERROR:SPACING: space required before the open parenthesis '('
#1106: FILE: 2.4/drivers/scsi/53c700.h:479:
+	if((reg & 0x3) != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1107: FILE: 2.4/drivers/scsi/53c700.h:480:
+		BUG();

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1116: FILE: 2.4/drivers/scsi/53c700.h:489:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1117: FILE: 2.4/drivers/scsi/53c700.h:490:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1119: FILE: 2.4/drivers/scsi/53c700.h:492:
+	return inb(host->base + (reg^bE));
 	                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1126: FILE: 2.4/drivers/scsi/53c700.h:499:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1127: FILE: 2.4/drivers/scsi/53c700.h:500:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1129: FILE: 2.4/drivers/scsi/53c700.h:502:
+#if 1

ERROR:SPACING: space required before the open parenthesis '('
#1131: FILE: 2.4/drivers/scsi/53c700.h:504:
+	if((reg & 0x3) != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1132: FILE: 2.4/drivers/scsi/53c700.h:505:
+		BUG();

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1141: FILE: 2.4/drivers/scsi/53c700.h:514:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1142: FILE: 2.4/drivers/scsi/53c700.h:515:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1144: FILE: 2.4/drivers/scsi/53c700.h:517:
+	outb(value, host->base + (reg^bE));
 	                             ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1150: FILE: 2.4/drivers/scsi/53c700.h:523:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1151: FILE: 2.4/drivers/scsi/53c700.h:524:
+	const struct NCR_700_Host_Parameters *hostdata __attribute__((unused))
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1153: FILE: 2.4/drivers/scsi/53c700.h:526:
+#if 1

ERROR:SPACING: space required before the open parenthesis '('
#1155: FILE: 2.4/drivers/scsi/53c700.h:528:
+	if((reg & 0x3) != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1156: FILE: 2.4/drivers/scsi/53c700.h:529:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#1244: FILE: 2.4/drivers/scsi/NCR_D700.c:274:
+			if(request_region(region, 64, "NCR_D700") == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_region"
#1244: FILE: 2.4/drivers/scsi/NCR_D700.c:274:
+			if(request_region(region, 64, "NCR_D700") == NULL) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1245: FILE: 2.4/drivers/scsi/NCR_D700.c:275:
+				printk(KERN_ERR "NCR D700: Failed to reserve IO region 0x%x\n", region);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1245: FILE: 2.4/drivers/scsi/NCR_D700.c:275:
+				printk(KERN_ERR "NCR D700: Failed to reserve IO region 0x%x\n", region);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1275: FILE: 2.4/drivers/scsi/lasi700.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1280: FILE: 2.4/drivers/scsi/lasi700.c:6:
+ * Copyright (C) 2001 by James.Bottomley@HansenPartnership.com
+**-----------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1281: FILE: 2.4/drivers/scsi/lasi700.c:7:
+**  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1293: FILE: 2.4/drivers/scsi/lasi700.c:19:
+**  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1294: FILE: 2.4/drivers/scsi/lasi700.c:20:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1297: FILE: 2.4/drivers/scsi/lasi700.c:23:
+**-----------------------------------------------------------------------------
+ */

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1324: FILE: 2.4/drivers/scsi/lasi700.c:50:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#1327: FILE: 2.4/drivers/scsi/lasi700.c:53:
+#include <asm/delay.h>

WARNING:MISPLACED_INIT: __initdata should be placed after opt_base
#1356: FILE: 2.4/drivers/scsi/lasi700.c:82:
+static unsigned long __initdata opt_base;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after opt_irq
#1357: FILE: 2.4/drivers/scsi/lasi700.c:83:
+static int __initdata opt_irq;

ERROR:SPACING: space required before the open parenthesis '('
#1364: FILE: 2.4/drivers/scsi/lasi700.c:90:
+	while(pos != NULL && (next = strchr(pos, ':')) != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#1364: FILE: 2.4/drivers/scsi/lasi700.c:90:
+	while(pos != NULL && (next = strchr(pos, ':')) != NULL) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1365: FILE: 2.4/drivers/scsi/lasi700.c:91:
+		int val = (int)simple_strtoul(++next, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1366: FILE: 2.4/drivers/scsi/lasi700.c:92:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1367: FILE: 2.4/drivers/scsi/lasi700.c:93:
+		if(!strncmp(pos, "addr:", 5))

ERROR:SPACING: space required before the open parenthesis '('
#1369: FILE: 2.4/drivers/scsi/lasi700.c:95:
+		else if(!strncmp(pos, "irq:", 4))

ERROR:SPACING: space required before the open parenthesis '('
#1372: FILE: 2.4/drivers/scsi/lasi700.c:98:
+		if((pos = strchr(pos, ARG_SEP)) != NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1372: FILE: 2.4/drivers/scsi/lasi700.c:98:
+		if((pos = strchr(pos, ARG_SEP)) != NULL)

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1379: FILE: 2.4/drivers/scsi/lasi700.c:105:
+__setup("lasi700=", param_setup);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1382: FILE: 2.4/drivers/scsi/lasi700.c:108:
+static Scsi_Host_Template __initdata *host_tpnt = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#1382: FILE: 2.4/drivers/scsi/lasi700.c:108:
+static Scsi_Host_Template __initdata *host_tpnt = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1383: FILE: 2.4/drivers/scsi/lasi700.c:109:
+static int __initdata host_count = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after host_count
#1383: FILE: 2.4/drivers/scsi/lasi700.c:109:
+static int __initdata host_count = 0;

ERROR:SPACING: space required before the open parenthesis '('
#1399: FILE: 2.4/drivers/scsi/lasi700.c:125:
+	if(lasi700)

ERROR:SPACING: space required before the open parenthesis '('
#1417: FILE: 2.4/drivers/scsi/lasi700.c:143:
+	if(hostdata == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata"
#1417: FILE: 2.4/drivers/scsi/lasi700.c:143:
+	if(hostdata == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1418: FILE: 2.4/drivers/scsi/lasi700.c:144:
+		printk(KERN_ERR "lasi700: Failed to allocate host data\n");

ERROR:SPACING: space required before the open parenthesis '('
#1422: FILE: 2.4/drivers/scsi/lasi700.c:148:
+	if(request_mem_region(base, 64, "lasi700") == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#1422: FILE: 2.4/drivers/scsi/lasi700.c:148:
+	if(request_mem_region(base, 64, "lasi700") == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1423: FILE: 2.4/drivers/scsi/lasi700.c:149:
+		printk(KERN_ERR "lasi700: Failed to claim memory region\n");

ERROR:SPACING: space required before the open parenthesis '('
#1431: FILE: 2.4/drivers/scsi/lasi700.c:157:
+	if((host = NCR_700_detect(host_tpnt, hostdata)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1431: FILE: 2.4/drivers/scsi/lasi700.c:157:
+	if((host = NCR_700_detect(host_tpnt, hostdata)) == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1437: FILE: 2.4/drivers/scsi/lasi700.c:163:
+	if(request_irq(irq, NCR_700_intr, SA_SHIRQ, "lasi700", host)) {

WARNING:TYPO_SPELLING: 'detatching' may be misspelled - perhaps 'detaching'?
#1438: FILE: 2.4/drivers/scsi/lasi700.c:164:
+		printk(KERN_ERR "lasi700: irq problem, detatching\n");
 		                                       ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1438: FILE: 2.4/drivers/scsi/lasi700.c:164:
+		printk(KERN_ERR "lasi700: irq problem, detatching\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: 2.4/drivers/scsi/lasi700.c:176:
+^Istruct D700_Host_Parameters *hostdata = $

CHECK:CAMELCASE: Avoid CamelCase: <D700_Host_Parameters>
#1450: FILE: 2.4/drivers/scsi/lasi700.c:176:
+	struct D700_Host_Parameters *hostdata = 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1468: FILE: 2.4/drivers/scsi/lasi700.h:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1473: FILE: 2.4/drivers/scsi/lasi700.h:6:
+ * Copyright (C) 2001 by James.Bottomley@HansenPartnership.com
+**-----------------------------------------------------------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1474: FILE: 2.4/drivers/scsi/lasi700.h:7:
+**  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1486: FILE: 2.4/drivers/scsi/lasi700.h:19:
+**  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1487: FILE: 2.4/drivers/scsi/lasi700.h:20:
+**  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1490: FILE: 2.4/drivers/scsi/lasi700.h:23:
+**-----------------------------------------------------------------------------
+ */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1499: FILE: 2.4/drivers/scsi/lasi700.h:32:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#1501: FILE: 2.4/drivers/scsi/lasi700.h:34:
+	name:		"LASI SCSI 53c700",	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1502: FILE: 2.4/drivers/scsi/lasi700.h:35:
+	proc_name:	"lasi700",		\
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#1502: FILE: 2.4/drivers/scsi/lasi700.h:35:
+	proc_name:	"lasi700",		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1503: FILE: 2.4/drivers/scsi/lasi700.h:36:
+	detect:		lasi700_detect,		\
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1503: FILE: 2.4/drivers/scsi/lasi700.h:36:
+	detect:		lasi700_detect,		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1504: FILE: 2.4/drivers/scsi/lasi700.h:37:
+	release:	lasi700_release,	\
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1504: FILE: 2.4/drivers/scsi/lasi700.h:37:
+	release:	lasi700_release,	\

WARNING:INDENTED_LABEL: labels should not be indented
#1509: FILE: 2.4/drivers/scsi/lasi700.h:42:
+	hw_type:	HPHW_FIO,		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1510: FILE: 2.4/drivers/scsi/lasi700.h:43:
+	sversion:	0x071,			\
 	        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1511: FILE: 2.4/drivers/scsi/lasi700.h:44:
+	hversion:	HVERSION_ANY_ID,	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1511: FILE: 2.4/drivers/scsi/lasi700.h:44:
+	hversion:	HVERSION_ANY_ID,	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1512: FILE: 2.4/drivers/scsi/lasi700.h:45:
+	hversion_rev:	HVERSION_REV_ANY_ID,	\
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#1512: FILE: 2.4/drivers/scsi/lasi700.h:45:
+	hversion_rev:	HVERSION_REV_ANY_ID,	\

WARNING:INDENTED_LABEL: labels should not be indented
#1516: FILE: 2.4/drivers/scsi/lasi700.h:49:
+	name:		"Lasi SCSI",		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1517: FILE: 2.4/drivers/scsi/lasi700.h:50:
+	id_table:	lasi700_scsi_tbl,	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1517: FILE: 2.4/drivers/scsi/lasi700.h:50:
+	id_table:	lasi700_scsi_tbl,	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1518: FILE: 2.4/drivers/scsi/lasi700.h:51:
+	probe:		lasi700_driver_callback,\
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1518: FILE: 2.4/drivers/scsi/lasi700.h:51:
+	probe:		lasi700_driver_callback,\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000514523.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 91 warnings, 55 checks, 1358 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000514523.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
