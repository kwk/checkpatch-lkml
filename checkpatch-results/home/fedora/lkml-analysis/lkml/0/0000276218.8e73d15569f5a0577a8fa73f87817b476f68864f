CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#55: FILE: arch/ppc64/kernel/vio.c:36:
+static const struct vio_device_id *vio_match_device(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: arch/ppc64/kernel/vio.c:141:
+static const struct vio_device_id * vio_match_device(const struct vio_device_id *ids,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: arch/ppc64/kernel/vio.c:142:
+static const struct vio_device_id * vio_match_device(const struct vio_device_id *ids,
 	const struct vio_dev *dev)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#74: FILE: arch/ppc64/kernel/vio.c:148:
+		if ((strncmp(((struct device_node *)dev->dev.platform_data)->type, ids->type, strlen(ids->type)) == 0) &&

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: arch/ppc64/kernel/vio.c:149:
+		if ((strncmp(((struct device_node *)dev->dev.platform_data)->type, ids->type, strlen(ids->type)) == 0) &&
+			device_is_compatible(dev->dev.platform_data, ids->compat))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#129: FILE: arch/ppc64/kernel/vio.c:383:
+	return get_property(vdev->dev.platform_data, (char*)which, length);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: arch/ppc64/kernel/vio.c:430:
+static struct iommu_table * vio_build_iommu_table(struct vio_dev *dev)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#147: FILE: arch/ppc64/kernel/vio.c:438:
+	dma_window = (unsigned int *) get_property(dev->dev.platform_data, "ibm,my-dma-window", &dma_window_property_size);

CHECK:SPACING: No space is necessary after a cast
#147: FILE: arch/ppc64/kernel/vio.c:438:
+	dma_window = (unsigned int *) get_property(dev->dev.platform_data, "ibm,my-dma-window", &dma_window_property_size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#165: FILE: drivers/net/ibmveth.c:972:
 static int __devexit ibmveth_remove(struct vio_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#182: FILE: include/asm-ppc64/vio.h:47:
 struct vio_dev * __devinit vio_register_device(struct device_node *node_vdev);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#183: FILE: include/asm-ppc64/vio.h:48:
 void __devinit vio_unregister_device(struct vio_dev *dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276218.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 4 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276218.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
