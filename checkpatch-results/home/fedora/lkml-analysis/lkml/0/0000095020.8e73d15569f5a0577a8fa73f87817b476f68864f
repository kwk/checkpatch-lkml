WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#ifdef ...

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#include ...

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#endif 

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
just need to include the header. and there is also some unnecessary extern declares in your code.

WARNING:TYPO_SPELLING: 'tigger' may be misspelled - perhaps 'trigger'?
#103: 
to tigger a crash.
   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#126: 
--- a/arch/ia64/Kconfig	2006-03-01 07:57:10.000000000 +0800

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'indepedent' may be misspelled - perhaps 'independent'?
#138: FILE: arch/ia64/Kconfig:383:
+         but it is indepedent of the system firmware.   And like a reboot
                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'similiarity' may be misspelled - perhaps 'similarity'?
#141: FILE: arch/ia64/Kconfig:386:
+         The name comes from the similiarity to the exec system call.
                                  ^^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#143: FILE: arch/ia64/Kconfig:388:
+config CRASH_DUMP
+        bool "kernel crash dumps (EXPERIMENTAL)"
+        depends on EXPERIMENTAL
+        help
+          Generate crash dump after being started by kexec.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: arch/ia64/kernel/crash.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#157: FILE: arch/ia64/kernel/crash.c:2:
+ *  arch/ia64/kernel/crash.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/ia64/kernel/crash.c:17:
+       struct pci_dev *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/ia64/kernel/crash.c:18:
+       irq_desc_t *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/ia64/kernel/crash.c:19:
+       u16 pci_command;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/ia64/kernel/crash.c:21:
+       list_for_each_entry(dev, &pci_devices, global_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#176: FILE: arch/ia64/kernel/crash.c:21:
+       list_for_each_entry(dev, &pci_devices, global_list) {
+	       desc = irq_descp(dev->irq);

WARNING:TABSTOP: Statements should start on a tabstop
#178: FILE: arch/ia64/kernel/crash.c:23:
+	       if (!desc->action)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#178: FILE: arch/ia64/kernel/crash.c:23:
+	       if (!desc->action)
+		       continue;

WARNING:TABSTOP: Statements should start on a tabstop
#179: FILE: arch/ia64/kernel/crash.c:24:
+		       continue;

WARNING:TABSTOP: Statements should start on a tabstop
#181: FILE: arch/ia64/kernel/crash.c:26:
+	       if (pci_command & PCI_COMMAND_MASTER) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#181: FILE: arch/ia64/kernel/crash.c:26:
+	       if (pci_command & PCI_COMMAND_MASTER) {
+		       pci_command &= ~PCI_COMMAND_MASTER;

WARNING:TABSTOP: Statements should start on a tabstop
#184: FILE: arch/ia64/kernel/crash.c:29:
+	       }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/ia64/kernel/crash.c:32:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: arch/ia64/kernel/crash.c:35:
+static Elf64_Word *append_elf_note(Elf64_Word *buf, char *name, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Word>
#190: FILE: arch/ia64/kernel/crash.c:35:
+static Elf64_Word *append_elf_note(Elf64_Word *buf, char *name, 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: arch/ia64/kernel/crash.c:36:
+static Elf64_Word *append_elf_note(Elf64_Word *buf, char *name, 
+		unsigned type, void *data,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: arch/ia64/kernel/crash.c:36:
+		unsigned type, void *data,

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/ia64/kernel/crash.c:39:
+        struct elf_note *note = (struct elf_note *)buf;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/ia64/kernel/crash.c:39:
+        struct elf_note *note = (struct elf_note *)buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: arch/ia64/kernel/crash.c:40:
+        note->n_namesz = strlen(name) + 1;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: arch/ia64/kernel/crash.c:40:
+        struct elf_note *note = (struct elf_note *)buf;
+        note->n_namesz = strlen(name) + 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/ia64/kernel/crash.c:40:
+        note->n_namesz = strlen(name) + 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/ia64/kernel/crash.c:41:
+        note->n_descsz = data_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/ia64/kernel/crash.c:41:
+        note->n_descsz = data_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/ia64/kernel/crash.c:42:
+        note->n_type   = type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/ia64/kernel/crash.c:42:
+        note->n_type   = type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/ia64/kernel/crash.c:43:
+        buf += (sizeof(*note) + 3)/4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/ia64/kernel/crash.c:43:
+        buf += (sizeof(*note) + 3)/4;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#198: FILE: arch/ia64/kernel/crash.c:43:
+        buf += (sizeof(*note) + 3)/4;
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/ia64/kernel/crash.c:44:
+        memcpy(buf, name, note->n_namesz);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/ia64/kernel/crash.c:44:
+        memcpy(buf, name, note->n_namesz);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/ia64/kernel/crash.c:45:
+        buf += (note->n_namesz + 3)/4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/ia64/kernel/crash.c:45:
+        buf += (note->n_namesz + 3)/4;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#200: FILE: arch/ia64/kernel/crash.c:45:
+        buf += (note->n_namesz + 3)/4;
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/ia64/kernel/crash.c:46:
+        memcpy(buf, data, data_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/ia64/kernel/crash.c:46:
+        memcpy(buf, data, data_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/ia64/kernel/crash.c:47:
+        buf += (data_len + 3)/4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/ia64/kernel/crash.c:47:
+        buf += (data_len + 3)/4;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#202: FILE: arch/ia64/kernel/crash.c:47:
+        buf += (data_len + 3)/4;
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/ia64/kernel/crash.c:48:
+        return buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/ia64/kernel/crash.c:48:
+        return buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/ia64/kernel/crash.c:66:
+    ^Idst[1] = ia64_getreg(_IA64_REG_GP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: arch/ia64/kernel/crash.c:66:
+    ^Idst[1] = ia64_getreg(_IA64_REG_GP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/ia64/kernel/crash.c:66:
+    ^Idst[1] = ia64_getreg(_IA64_REG_GP);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/ia64/kernel/crash.c:67:
+    ^Idst[12] = ia64_getreg(_IA64_REG_SP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: arch/ia64/kernel/crash.c:67:
+    ^Idst[12] = ia64_getreg(_IA64_REG_SP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/ia64/kernel/crash.c:67:
+    ^Idst[12] = ia64_getreg(_IA64_REG_SP);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/ia64/kernel/crash.c:68:
+    ^Idst[13] = ia64_getreg(_IA64_REG_TP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: arch/ia64/kernel/crash.c:68:
+    ^Idst[13] = ia64_getreg(_IA64_REG_TP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/ia64/kernel/crash.c:68:
+    ^Idst[13] = ia64_getreg(_IA64_REG_TP);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/ia64/kernel/crash.c:70:
+    ^Idst[42] = ia64_getreg(_IA64_REG_IP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: arch/ia64/kernel/crash.c:70:
+    ^Idst[42] = ia64_getreg(_IA64_REG_IP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/ia64/kernel/crash.c:70:
+    ^Idst[42] = ia64_getreg(_IA64_REG_IP);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/ia64/kernel/crash.c:71:
+    ^Idst[45] = ia64_getreg(_IA64_REG_AR_RSC);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: arch/ia64/kernel/crash.c:71:
+    ^Idst[45] = ia64_getreg(_IA64_REG_AR_RSC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/ia64/kernel/crash.c:71:
+    ^Idst[45] = ia64_getreg(_IA64_REG_AR_RSC);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/ia64/kernel/crash.c:73:
+^Iia64_setreg(_IA64_REG_AR_RSC, 0);^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/ia64/kernel/crash.c:76:
+    ^Idst[46] = ia64_getreg(_IA64_REG_AR_BSP);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: arch/ia64/kernel/crash.c:76:
+    ^Idst[46] = ia64_getreg(_IA64_REG_AR_BSP);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/ia64/kernel/crash.c:76:
+    ^Idst[46] = ia64_getreg(_IA64_REG_AR_BSP);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/ia64/kernel/crash.c:77:
+    ^Idst[47] = ia64_getreg(_IA64_REG_AR_BSPSTORE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: arch/ia64/kernel/crash.c:77:
+    ^Idst[47] = ia64_getreg(_IA64_REG_AR_BSPSTORE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/ia64/kernel/crash.c:77:
+    ^Idst[47] = ia64_getreg(_IA64_REG_AR_BSPSTORE);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: arch/ia64/kernel/crash.c:78:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/ia64/kernel/crash.c:79:
+    ^Idst[48] = ia64_getreg(_IA64_REG_AR_RNAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: arch/ia64/kernel/crash.c:79:
+    ^Idst[48] = ia64_getreg(_IA64_REG_AR_RNAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/ia64/kernel/crash.c:79:
+    ^Idst[48] = ia64_getreg(_IA64_REG_AR_RNAT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/ia64/kernel/crash.c:80:
+    ^Idst[49] = ia64_getreg(_IA64_REG_AR_CCV);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: arch/ia64/kernel/crash.c:80:
+    ^Idst[49] = ia64_getreg(_IA64_REG_AR_CCV);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/ia64/kernel/crash.c:80:
+    ^Idst[49] = ia64_getreg(_IA64_REG_AR_CCV);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/ia64/kernel/crash.c:81:
+    ^Idst[50] = ia64_getreg(_IA64_REG_AR_UNAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: arch/ia64/kernel/crash.c:81:
+    ^Idst[50] = ia64_getreg(_IA64_REG_AR_UNAT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/ia64/kernel/crash.c:81:
+    ^Idst[50] = ia64_getreg(_IA64_REG_AR_UNAT);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/ia64/kernel/crash.c:82:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/ia64/kernel/crash.c:83:
+    ^Idst[51] = ia64_getreg(_IA64_REG_AR_FPSR);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: arch/ia64/kernel/crash.c:83:
+    ^Idst[51] = ia64_getreg(_IA64_REG_AR_FPSR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/ia64/kernel/crash.c:83:
+    ^Idst[51] = ia64_getreg(_IA64_REG_AR_FPSR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/ia64/kernel/crash.c:84:
+    ^Idst[52] = ia64_getreg(_IA64_REG_AR_PFS);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: arch/ia64/kernel/crash.c:84:
+    ^Idst[52] = ia64_getreg(_IA64_REG_AR_PFS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/ia64/kernel/crash.c:84:
+    ^Idst[52] = ia64_getreg(_IA64_REG_AR_PFS);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/ia64/kernel/crash.c:85:
+    ^Idst[53] = ia64_getreg(_IA64_REG_AR_LC);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: arch/ia64/kernel/crash.c:85:
+    ^Idst[53] = ia64_getreg(_IA64_REG_AR_LC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/ia64/kernel/crash.c:85:
+    ^Idst[53] = ia64_getreg(_IA64_REG_AR_LC);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: arch/ia64/kernel/crash.c:86:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: arch/ia64/kernel/crash.c:87:
+    ^Idst[54] = ia64_getreg(_IA64_REG_AR_LC);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: arch/ia64/kernel/crash.c:87:
+    ^Idst[54] = ia64_getreg(_IA64_REG_AR_LC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/ia64/kernel/crash.c:87:
+    ^Idst[54] = ia64_getreg(_IA64_REG_AR_LC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/ia64/kernel/crash.c:88:
+    ^Idst[55] = ia64_getreg(_IA64_REG_AR_CSD);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: arch/ia64/kernel/crash.c:88:
+    ^Idst[55] = ia64_getreg(_IA64_REG_AR_CSD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/ia64/kernel/crash.c:88:
+    ^Idst[55] = ia64_getreg(_IA64_REG_AR_CSD);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/ia64/kernel/crash.c:89:
+    ^Idst[56] = ia64_getreg(_IA64_REG_AR_SSD);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: arch/ia64/kernel/crash.c:89:
+    ^Idst[56] = ia64_getreg(_IA64_REG_AR_SSD);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/ia64/kernel/crash.c:89:
+    ^Idst[56] = ia64_getreg(_IA64_REG_AR_SSD);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/ia64/kernel/crash.c:93:
+	buf = append_elf_note(buf, "CORE", NT_PRSTATUS, &prstatus,
+		sizeof(prstatus));

ERROR:INITIALISED_STATIC: do not initialise statics to 0UL
#276: FILE: arch/ia64/kernel/efi.c:44:
+static unsigned long mem_limit = ~0UL, max_addr = ~0UL, min_addr = 0UL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#316: FILE: arch/ia64/kernel/efi.c:409:
+		printk(KERN_INFO "Ignoring memory below %luMB\n", min_addr >> 20);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: arch/ia64/kernel/machine_kexec.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#383: FILE: arch/ia64/kernel/machine_kexec.c:13:
+#include <asm/delay.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#386: FILE: arch/ia64/kernel/machine_kexec.c:16:
+machine_kexec_prepare(struct kimage * image)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/ia64/kernel/machine_kexec.c:18:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: arch/ia64/kernel/machine_kexec.c:31:
+        for_each_online_cpu(cpu) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: arch/ia64/kernel/machine_kexec.c:31:
+        for_each_online_cpu(cpu) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: arch/ia64/kernel/machine_kexec.c:32:
+                if (cpu != smp_processor_id())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/ia64/kernel/machine_kexec.c:32:
+                if (cpu != smp_processor_id())$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: arch/ia64/kernel/machine_kexec.c:33:
+                        cpu_down(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/ia64/kernel/machine_kexec.c:33:
+                        cpu_down(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: arch/ia64/kernel/machine_kexec.c:34:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: arch/ia64/kernel/machine_kexec.c:34:
+        }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#406: FILE: arch/ia64/kernel/machine_kexec.c:36:
+	printk(KERN_INFO "kexec: machine_shutdown called\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'machine_shutdown', this function's name, in a string
#406: FILE: arch/ia64/kernel/machine_kexec.c:36:
+	printk(KERN_INFO "kexec: machine_shutdown called\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#414: FILE: arch/ia64/kernel/machine_kexec.c:44:
+extern void *efi_get_pal_addr(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: arch/ia64/kernel/machine_kexec.c:51:
+	void *pal_addr = efi_get_pal_addr();
+	unsigned long

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#424: FILE: arch/ia64/kernel/machine_kexec.c:54:
+	ia64_set_itv(1<<16);
 	              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: arch/ia64/kernel/machine_kexec.c:57:
+        memcpy((void *)code_addr, relocate_new_kernel,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/ia64/kernel/machine_kexec.c:57:
+        memcpy((void *)code_addr, relocate_new_kernel,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: arch/ia64/kernel/machine_kexec.c:58:
+        memcpy((void *)code_addr, relocate_new_kernel,
+			relocate_new_kernel_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: arch/ia64/kernel/machine_kexec.c:62:
+	(*relocator)(image->start, image->head, ia64_boot_param,
+			GRANULEROUNDDOWN((unsigned long) pal_addr));

CHECK:SPACING: No space is necessary after a cast
#432: FILE: arch/ia64/kernel/machine_kexec.c:62:
+			GRANULEROUNDDOWN((unsigned long) pal_addr));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#433: FILE: arch/ia64/kernel/machine_kexec.c:63:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#435: FILE: arch/ia64/kernel/machine_kexec.c:65:
+	for(;;);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#435: FILE: arch/ia64/kernel/machine_kexec.c:65:
+	for(;;);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#437: FILE: arch/ia64/kernel/machine_kexec.c:67:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#453: FILE: arch/ia64/kernel/relocate_kernel.S:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#454: FILE: arch/ia64/kernel/relocate_kernel.S:2:
+ *  arch/ia64/kernel/relocate_kernel.S

WARNING:LINE_SPACING: Missing a blank line after declarations
#665: FILE: arch/ia64/kernel/setup.c:261:
+		char *from = strstr(saved_command_line, "crashkernel=");
+		if (from) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: arch/ia64/kernel/setup.c:263:
+			unsigned long size, base;
+			size = memparse(from + 12, &from);

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: arch/ia64/kernel/setup.c:521:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/ia64/kernel/setup.c:521:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: arch/ia64/kernel/setup.c:522:
+                char *from = strstr(saved_command_line, "elfcorehdr=");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: arch/ia64/kernel/setup.c:522:
+                char *from = strstr(saved_command_line, "elfcorehdr=");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: arch/ia64/kernel/setup.c:523:
+                if (from)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#692: FILE: arch/ia64/kernel/setup.c:523:
+                char *from = strstr(saved_command_line, "elfcorehdr=");
+                if (from)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: arch/ia64/kernel/setup.c:523:
+                if (from)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: arch/ia64/kernel/setup.c:524:
+                        elfcorehdr_addr = memparse(from+11, &from);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: arch/ia64/kernel/setup.c:524:
+                        elfcorehdr_addr = memparse(from+11, &from);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#693: FILE: arch/ia64/kernel/setup.c:524:
+                        elfcorehdr_addr = memparse(from+11, &from);
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: arch/ia64/kernel/setup.c:526:
+                saved_max_pfn = (unsigned long) -1;$

CHECK:SPACING: No space is necessary after a cast
#695: FILE: arch/ia64/kernel/setup.c:526:
+                saved_max_pfn = (unsigned long) -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/ia64/kernel/setup.c:526:
+                saved_max_pfn = (unsigned long) -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: arch/ia64/kernel/setup.c:527:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/ia64/kernel/setup.c:527:
+        }$

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#704: +++ b/include/asm/kexec.h	2006-03-01 08:44:30.000000000 +0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#706: FILE: include/asm/kexec.h:1:
+#ifndef _IA64_KEXEC_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#726: FILE: include/asm/kexec.h:21:
+#define KEXEC_CONTROL_CODE_SIZE        (1UL << 14)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#732: FILE: include/asm/kexec.h:27:
+typedef u32 note_buf_t[MAX_NOTE_BYTES/4];
                                      ^

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#737: +++ b/include/asm/meminit.h	2006-03-01 08:44:30.000000000 +0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#756: FILE: include/asm-ia64/kexec.h:1:
+#ifndef _IA64_KEXEC_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#776: FILE: include/asm-ia64/kexec.h:21:
+#define KEXEC_CONTROL_CODE_SIZE        (1UL << 14)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#782: FILE: include/asm-ia64/kexec.h:27:
+typedef u32 note_buf_t[MAX_NOTE_BYTES/4];
                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 92 warnings, 18 checks, 629 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
