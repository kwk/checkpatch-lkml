ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#79: FILE: arch/i386/kernel/nmi.c:41:
+int unknown_nmi_panic = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#113: FILE: arch/i386/kernel/nmi.c:476:
registers:\n", cpu, regs->eip);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/i386/kernel/nmi.c:477:
+        if (alert_counter[cpu] == 5*nmi_hz)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/i386/kernel/nmi.c:477:
+        if (alert_counter[cpu] == 5*nmi_hz)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#121: FILE: arch/i386/kernel/nmi.c:477:
+        if (alert_counter[cpu] == 5*nmi_hz)
+            die_nmi(regs, "NMI Watchdog detected LOCKUP");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: arch/i386/kernel/nmi.c:477:
+        if (alert_counter[cpu] == 5*nmi_hz)
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/i386/kernel/nmi.c:478:
+            die_nmi(regs, "NMI Watchdog detected LOCKUP");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/i386/kernel/nmi.c:478:
+            die_nmi(regs, "NMI Watchdog detected LOCKUP");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/kernel/nmi.c:507:
+    unsigned char reason = get_nmi_reason();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/kernel/nmi.c:508:
+    char buf[64];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/nmi.c:510:
+    if (!(reason & 0xc0)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/i386/kernel/nmi.c:511:
+        sprintf(buf, "NMI received for unknown reason %02x\n", reason);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/nmi.c:511:
+        sprintf(buf, "NMI received for unknown reason %02x\n", reason);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/i386/kernel/nmi.c:512:
+        die_nmi(regs, buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/nmi.c:512:
+        die_nmi(regs, buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/i386/kernel/nmi.c:513:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/nmi.c:514:
+    return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/i386/kernel/nmi.c:521:
+                struct file *file, void __user *buffer, size_t *length)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/i386/kernel/nmi.c:521:
+int proc_unknown_nmi_panic(ctl_table *table, int write,
+                struct file *file, void __user *buffer, size_t *length)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/i386/kernel/nmi.c:521:
+                struct file *file, void __user *buffer, size_t *length)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/i386/kernel/nmi.c:523:
+    int old_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/nmi.c:525:
+    old_state = unknown_nmi_panic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/nmi.c:526:
+    proc_dointvec(table, write, file, buffer, length);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/nmi.c:527:
+    if (!old_state == !unknown_nmi_panic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/i386/kernel/nmi.c:528:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/i386/kernel/nmi.c:528:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/i386/kernel/nmi.c:530:
+    if (unknown_nmi_panic) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/i386/kernel/nmi.c:531:
+        if (reserve_lapic_nmi() < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/kernel/nmi.c:531:
+        if (reserve_lapic_nmi() < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#156: FILE: arch/i386/kernel/nmi.c:531:
+        if (reserve_lapic_nmi() < 0) {
+            unknown_nmi_panic = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/i386/kernel/nmi.c:532:
+            unknown_nmi_panic = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/kernel/nmi.c:532:
+            unknown_nmi_panic = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/i386/kernel/nmi.c:533:
+            return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/i386/kernel/nmi.c:533:
+            return -EBUSY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/i386/kernel/nmi.c:534:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/nmi.c:534:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#159: FILE: arch/i386/kernel/nmi.c:534:
+        } else {
+            set_nmi_callback(unknown_nmi_panic_callback);

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/i386/kernel/nmi.c:535:
+            set_nmi_callback(unknown_nmi_panic_callback);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/i386/kernel/nmi.c:535:
+            set_nmi_callback(unknown_nmi_panic_callback);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/i386/kernel/nmi.c:536:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/kernel/nmi.c:536:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/i386/kernel/nmi.c:537:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/i386/kernel/nmi.c:538:
+        release_lapic_nmi();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/i386/kernel/nmi.c:538:
+        release_lapic_nmi();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/i386/kernel/nmi.c:539:
+        unset_nmi_callback();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/i386/kernel/nmi.c:539:
+        unset_nmi_callback();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/i386/kernel/nmi.c:540:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/i386/kernel/nmi.c:541:
+    return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: arch/i386/kernel/traps.c:459:
+void die_nmi (struct pt_regs *regs, const char *msg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/i386/kernel/traps.c:461:
+    spin_lock(&nmi_print_lock);$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#188: FILE: arch/i386/kernel/traps.c:463:
+    /*
+    * We are in trouble anyway, lets at least try

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/i386/kernel/traps.c:466:
+    bust_spinlocks(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/i386/kernel/traps.c:467:
+    printk(msg);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: arch/i386/kernel/traps.c:467:
+    printk(msg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/i386/kernel/traps.c:468:
+    printk(" on CPU%d, eip %08lx, registers:\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: arch/i386/kernel/traps.c:468:
+    printk(" on CPU%d, eip %08lx, registers:\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/i386/kernel/traps.c:469:
+        smp_processor_id(), regs->eip);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: arch/i386/kernel/traps.c:469:
+    printk(" on CPU%d, eip %08lx, registers:\n",
+        smp_processor_id(), regs->eip);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/i386/kernel/traps.c:469:
+        smp_processor_id(), regs->eip);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/i386/kernel/traps.c:470:
+    show_registers(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/i386/kernel/traps.c:471:
+    printk("console shuts up ...\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#196: FILE: arch/i386/kernel/traps.c:471:
+    printk("console shuts up ...\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/i386/kernel/traps.c:472:
+    console_silent();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/i386/kernel/traps.c:473:
+    spin_unlock(&nmi_print_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/i386/kernel/traps.c:474:
+    bust_spinlocks(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/i386/kernel/traps.c:475:
+    do_exit(SIGSEGV);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: include/linux/sysctl.h:136:
+    KERN_UNKNOWN_NMI_PANIC=66, /* int: unknown nmi panic flag */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#216: FILE: include/linux/sysctl.h:136:
+    KERN_UNKNOWN_NMI_PANIC=66, /* int: unknown nmi panic flag */
                           ^

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#227: FILE: kernel/sysctl.c:68:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ctl_table *' should also have an identifier name
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#229: FILE: kernel/sysctl.c:70:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: kernel/sysctl.c:71:
+                  void __user *, size_t *);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: kernel/sysctl.c:71:
+extern int proc_unknown_nmi_panic(ctl_table *, int, struct file *,
+                  void __user *, size_t *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: kernel/sysctl.c:71:
+                  void __user *, size_t *);$

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#241: FILE: kernel/sysctl.c:645:
+#if defined(__i386__)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: kernel/sysctl.c:646:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: kernel/sysctl.c:647:
+        .ctl_name       = KERN_UNKNOWN_NMI_PANIC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: kernel/sysctl.c:647:
+        .ctl_name       = KERN_UNKNOWN_NMI_PANIC,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/sysctl.c:648:
+        .procname       = "unknown_nmi_panic",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/sysctl.c:648:
+        .procname       = "unknown_nmi_panic",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: kernel/sysctl.c:649:
+        .data           = &unknown_nmi_panic,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/sysctl.c:649:
+        .data           = &unknown_nmi_panic,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: kernel/sysctl.c:650:
+        .maxlen         = sizeof (int),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: kernel/sysctl.c:650:
+        .maxlen         = sizeof (int),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: kernel/sysctl.c:650:
+        .maxlen         = sizeof (int),

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: kernel/sysctl.c:651:
+        .mode           = 0644,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: kernel/sysctl.c:651:
+        .mode           = 0644,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: kernel/sysctl.c:652:
+        .proc_handler   = &proc_unknown_nmi_panic,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: kernel/sysctl.c:652:
+        .proc_handler   = &proc_unknown_nmi_panic,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: kernel/sysctl.c:653:
+    },$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 63 warnings, 6 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
