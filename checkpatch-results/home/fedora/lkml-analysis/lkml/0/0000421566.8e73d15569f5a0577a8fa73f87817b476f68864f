WARNING:TYPO_SPELLING: 'aproximation' may be misspelled - perhaps 'approximation'?
#44: 
	I'm  doing a first order aproximation for the exponential
	                         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#48: 
	than rewarding proceses that sleep.  The decaying average
	               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#92: FILE: kernel/sched.c:38:
+#define MAX_RUN_AVG	(4*HZ)
                    	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#109: FILE: kernel/sched.c:135:
+		return(((p)->prio - MAX_RT_PRIO)*4 + 1);
 		                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#111: FILE: kernel/sched.c:137:
+		return(((p)->prio - MAX_RT_PRIO)/2 + 1);
 		                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: kernel/sched.c:188:
+ * First processes which consume there timeslice are moved to a lower $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#140: FILE: kernel/sched.c:197:
+int rotate_rate = HZ/10;
                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#141: FILE: kernel/sched.c:198:
+unsigned int sched_hist[MAX_PRIO+1];
                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: kernel/sched.c:200:
+static inline int queue_prio(int prio, unsigned prio_ind)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: kernel/sched.c:202:
+^Iif (prio < MAX_RT_PRIO || prio == MAX_PRIO) $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#150: FILE: kernel/sched.c:207:
+	return(prio);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: kernel/sched.c:212:
+^Iif (prio < MAX_RT_PRIO || prio == MAX_PRIO) $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#160: FILE: kernel/sched.c:217:
+	return(prio);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#171: FILE: kernel/sched.c:278:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#193: FILE: kernel/sched.c:313:
+	prio =  p->static_prio + (10 * p->run_avg/MAX_RUN_AVG) - 5;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#194: FILE: kernel/sched.c:314:
+	prio = (p->prio*3 + prio)/4;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#194: FILE: kernel/sched.c:314:
+	prio = (p->prio*3 + prio)/4;
 	                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: kernel/sched.c:322:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/sched.c:325:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: kernel/sched.c:328:
+ * $

WARNING:LINE_SPACING: Missing a blank line after declarations
#217: FILE: kernel/sched.c:337:
+	unsigned long sleep_time = jiffies - p->sleep_timestamp;
+	p->sleep_timestamp = jiffies;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#226: FILE: kernel/sched.c:346:
+	if (sleep_time > 16*hl) {
 	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: kernel/sched.c:360:
+	j = 64*1024 + i + i*i/(2*64*1024);
 	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: kernel/sched.c:360:
+	j = 64*1024 + i + i*i/(2*64*1024);
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#240: FILE: kernel/sched.c:360:
+	j = 64*1024 + i + i*i/(2*64*1024);
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: kernel/sched.c:360:
+	j = 64*1024 + i + i*i/(2*64*1024);
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: kernel/sched.c:360:
+	j = 64*1024 + i + i*i/(2*64*1024);
 	                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: kernel/sched.c:528:
+^I ^I    real_prio(rq->curr->prio, task_rq(p)->prio_ind))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: kernel/sched.c:528:
+^I ^I    real_prio(rq->curr->prio, task_rq(p)->prio_ind))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: kernel/sched.c:988:
+	if (unlikely(list_empty(rq->active->queue+MAX_RT_PRIO+rq->prio_ind) &&
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: kernel/sched.c:988:
+	if (unlikely(list_empty(rq->active->queue+MAX_RT_PRIO+rq->prio_ind) &&
 	                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: kernel/sched.c:989:
+	if (unlikely(list_empty(rq->active->queue+MAX_RT_PRIO+rq->prio_ind) &&
+		--rq->rotate_cnt <= 0)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#331: FILE: kernel/sched.c:991:
+		if (rq->prio_ind < MAX_USER_PRIO-1)
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#354: FILE: kernel/sched.c:1028:
+		if (p->prio < MAX_PRIO-1)
 		                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: kernel/sched.c:1123:
+		int new_idx;
+		new_idx = find_next_bit(array->bitmap, MAX_PRIO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: kernel/sched.c:1124:
+		new_idx = find_next_bit(array->bitmap, MAX_PRIO,
+			MAX_RT_PRIO+rq->prio_ind);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#376: FILE: kernel/sched.c:1124:
+			MAX_RT_PRIO+rq->prio_ind);
 			           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#406: FILE: kernel/sched.c:1792:
+#if 0

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#407: FILE: kernel/sched.c:1793:
+		current->prio = MAX_PRIO-1;
 		                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#409: FILE: kernel/sched.c:1795:
+		if (current->prio < MAX_PRIO-1)
 		                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 25 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
