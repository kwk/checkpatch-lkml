CHECK:CAMELCASE: Avoid CamelCase: <HvLpIndex>
#124: FILE: arch/ppc64/kernel/mf.c:536:
+void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <targetLp>
#124: FILE: arch/ppc64/kernel/mf.c:536:
+void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,

CHECK:CAMELCASE: Avoid CamelCase: <HvLpEvent_Type>
#124: FILE: arch/ppc64/kernel/mf.c:536:
+void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/ppc64/kernel/mf.c:537:
+void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,
 		unsigned size, unsigned count, MFCompleteHandler hdlr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/ppc64/kernel/mf.c:570:
+void mf_deallocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,
 		unsigned count, MFCompleteHandler hdlr, void *userToken)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: arch/ppc64/kernel/mf.c:1000:
+int mf_set_rtc(struct rtc_time * tm)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#311: FILE: arch/ppc64/kernel/viopath.c:476:
+	mf_allocate_lp_events(remoteLp, HvLpEvent_Type_VirtualIo, 250,	/* It would be nice to put a real number here! */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <remoteLp>
#311: FILE: arch/ppc64/kernel/viopath.c:476:
+	mf_allocate_lp_events(remoteLp, HvLpEvent_Type_VirtualIo, 250,	/* It would be nice to put a real number here! */

CHECK:CAMELCASE: Avoid CamelCase: <HvLpEvent_Type_VirtualIo>
#311: FILE: arch/ppc64/kernel/viopath.c:476:
+	mf_allocate_lp_events(remoteLp, HvLpEvent_Type_VirtualIo, 250,	/* It would be nice to put a real number here! */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: arch/ppc64/kernel/viopath.c:586:
+	mf_deallocate_lp_events(remoteLp, HvLpEvent_Type_VirtualIo,
 			      numReq, &viopath_donealloc, &doneAllocParms);

CHECK:CAMELCASE: Avoid CamelCase: <HvLpEvent_Type_VirtualLan>
#332: FILE: drivers/net/iseries_veth.c:251:
+	mf_allocate_lp_events(rlp, HvLpEvent_Type_VirtualLan,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/net/iseries_veth.c:252:
+	mf_allocate_lp_events(rlp, HvLpEvent_Type_VirtualLan,
 			    sizeof(struct VethLpEvent), number,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/net/iseries_veth.c:666:
+		mf_deallocate_lp_events(cnx->remote_lp,
 				      HvLpEvent_Type_VirtualLan,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/net/iseries_veth.c:671:
+		mf_deallocate_lp_events(cnx->remote_lp,
 				      HvLpEvent_Type_VirtualLan,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: include/asm-ppc64/iSeries/mf.h:39:
+extern void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: include/asm-ppc64/iSeries/mf.h:40:
+extern void mf_allocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,
 		unsigned size, unsigned amount, MFCompleteHandler hdlr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/asm-ppc64/iSeries/mf.h:42:
+extern void mf_deallocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: include/asm-ppc64/iSeries/mf.h:43:
+extern void mf_deallocate_lp_events(HvLpIndex targetLp, HvLpEvent_Type type,
 		unsigned count, MFCompleteHandler hdlr, void *userToken);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: include/asm-ppc64/iSeries/mf.h:45:
+extern void mf_power_off(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#381: FILE: include/asm-ppc64/iSeries/mf.h:48:
+extern void mf_display_src(u32 word);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#382: FILE: include/asm-ppc64/iSeries/mf.h:49:
+extern void mf_display_progress(u16 value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: include/asm-ppc64/iSeries/mf.h:50:
+extern void mf_clear_src(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: include/asm-ppc64/iSeries/mf.h:66:
+extern int mf_get_rtc(struct rtc_time *tm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#396: FILE: include/asm-ppc64/iSeries/mf.h:67:
+extern int mf_set_rtc(struct rtc_time *tm);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 1 warnings, 22 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
