WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#34: 
Signed-off-by:  Shailabh Nagar <nagar@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#35: 
Signed-off-by:  Hubertus Franke <frankeh@us.ibm.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#36: 
Signed-off-by:  Chandra Seetharaman <sekharan@us.ibm.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#37: 
Signed-off-by:  Gerrit Huizenga <gh@us.ibm.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: include/linux/ckrm_events.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/ckrm_events.h:108:
+extern void ckrm_invoke_event_cb_chain(enum ckrm_event ev, void *arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: include/linux/ckrm_events.h:117:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_FORK, p);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: include/linux/ckrm_events.h:117:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_FORK, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: include/linux/ckrm_events.h:122:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_NEWTASK, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/linux/ckrm_events.h:122:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_NEWTASK, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: include/linux/ckrm_events.h:127:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_EXIT, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: include/linux/ckrm_events.h:127:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_EXIT, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: include/linux/ckrm_events.h:132:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_EXEC, c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: include/linux/ckrm_events.h:132:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_EXEC, c);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: include/linux/ckrm_events.h:137:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_UID, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: include/linux/ckrm_events.h:137:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_UID, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_GID, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_GID, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: include/linux/ckrm_events.h:147:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_APPTAG, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: include/linux/ckrm_events.h:147:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_APPTAG, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: include/linux/ckrm_events.h:152:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LOGIN, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/linux/ckrm_events.h:152:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LOGIN, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: include/linux/ckrm_events.h:157:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_USERADD, u);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: include/linux/ckrm_events.h:157:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_USERADD, u);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: include/linux/ckrm_events.h:162:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_USERDEL, u);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/ckrm_events.h:162:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_USERDEL, u);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: include/linux/ckrm_events.h:167:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LISTEN_START, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/linux/ckrm_events.h:167:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LISTEN_START, s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/linux/ckrm_events.h:172:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LISTEN_STOP, s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/linux/ckrm_events.h:172:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_LISTEN_STOP, s);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: kernel/ckrm/ckrm_events.c:1:
+/* ckrm_events.c - Class-based Kernel Resource Management (CKRM)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev < CKRM_LATCHABLE_EVENTS'
#335: FILE: kernel/ckrm/ckrm_events.c:36:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev >= CKRM_NONLATCHABLE_EVENTS'
#335: FILE: kernel/ckrm/ckrm_events.c:36:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cbptr"
#338: FILE: kernel/ckrm/ckrm_events.c:39:
+	while (*cbptr != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev < CKRM_LATCHABLE_EVENTS'
#348: FILE: kernel/ckrm/ckrm_events.c:49:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev >= CKRM_NONLATCHABLE_EVENTS'
#348: FILE: kernel/ckrm/ckrm_events.c:49:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cbptr"
#351: FILE: kernel/ckrm/ckrm_events.c:52:
+	while ((*cbptr != NULL) && (*cbptr != cb))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cbptr"
#355: FILE: kernel/ckrm/ckrm_events.c:56:
+	return (*cbptr == NULL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#380: FILE: kernel/ckrm/ckrm_events.c:81:
+	if ((anchor = ckrm_event_callbacks[ev]) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 18 warnings, 8 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
