ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: fs/dcache.c:664:
+ * creating a dentry for a given inode, often in the process of $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/dcache.c:679:
+struct dentry * d_alloc_anon(struct inode *inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#119: FILE: fs/dcache.c:702:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: fs/fat/inode.c:479:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: fs/nfsd/nfsfh.c:158:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/reiserfs/inode.c:1283:
+    result = d_alloc_anon(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/reiserfs/inode.c:1288:
+    result->d_vfs_flags |= DCACHE_REFERENCED;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: include/linux/dcache.h:168:
+extern struct dentry * d_alloc_anon(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/dcache.h:168:
+extern struct dentry * d_alloc_anon(struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#266: FILE: include/linux/dcache.h:168:
+extern struct dentry * d_alloc_anon(struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433466.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 3 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433466.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
