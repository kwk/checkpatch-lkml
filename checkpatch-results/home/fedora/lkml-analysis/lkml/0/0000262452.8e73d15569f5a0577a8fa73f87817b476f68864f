WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#56: 
That way sysfs won't get all wierd with PCI, and by the way
                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/pm.h:247:
+extern int device_suspend(enum system_state reason);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/pm.h:248:
+extern int device_power_down(enum system_state reason);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#153: FILE: kernel/power/swsusp.c:848:
+		if ((res = device_suspend(PM_SUSPEND_DISK))==0) {
 		                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#153: FILE: kernel/power/swsusp.c:848:
+		if ((res = device_suspend(PM_SUSPEND_DISK))==0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, enum system_state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#173: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, enum system_state);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, enum system_state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#181: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, enum system_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: drivers/base/power/power.h:91:
+static inline int dpm_runtime_suspend(struct device * dev, enum system_state state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#201: FILE: drivers/base/power/shutdown.c:32:
+	return dpm_runtime_suspend(dev, (enum system_state) dev->detach_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: drivers/base/power/suspend.c:38:
+int suspend_device(struct device * dev, enum system_state state)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 5 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
