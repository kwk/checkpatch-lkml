WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: arch/i386/Kconfig:1221:
+config HOTPLUG_CPU
+	bool "Support for hot-pluggable CPUs (EXPERIMENTAL)"
+	depends on SMP && HOTPLUG && EXPERIMENTAL
+	---help---
+	  Say Y here to experiment with turning CPUs off and on.  CPUs
+	  can be controlled through /sys/devices/system/cpu.
+
+	  Say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#115: FILE: arch/i386/kernel/apic.c:1059:
+void __devinit disable_APIC_timer(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: arch/i386/kernel/irq.c:232:
+			seq_printf(p, "CPU%d       ",j);
 			                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: arch/i386/kernel/irq.c:286:
+		cpumask_t mask;
+		if (irq == 2)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#219: FILE: arch/i386/kernel/irq.c:290:
+		if (any_online_cpu(mask) == NR_CPUS) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/i386/kernel/irq.c:291:
+			printk("Breaking affinity for irq %i\n", irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: arch/i386/kernel/irq.c:297:
+			printk("Cannot set affinity for irq %i\n", irq);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#229: FILE: arch/i386/kernel/irq.c:300:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#232: FILE: arch/i386/kernel/irq.c:303:
+	/* Ingo Molnar says: "after the IO-APIC masks have been redirected
+	   [note the nop - the interrupt-enable boundary on x86 is two

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#234: FILE: arch/i386/kernel/irq.c:305:
+	   IPIs. After this point nothing is supposed to reach this CPU." */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#258: FILE: arch/i386/kernel/msr.c:263:
+static int __devinit msr_class_simple_device_add(int i)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#292: FILE: arch/i386/kernel/process.c:140:
+#include <asm/nmi.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#301: FILE: arch/i386/kernel/process.c:149:
+	 * it "work" for testing purposes. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#315: FILE: arch/i386/kernel/process.c:163:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#400: FILE: arch/i386/kernel/smp.c:544:
+	cpus = num_online_cpus()-1;
 	                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#450: FILE: arch/i386/kernel/smpboot.c:1105:
+	mb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#462: FILE: arch/i386/kernel/smpboot.c:1118:
+static int __devinit cpu_enable(unsigned int cpu)

WARNING:MEMORY_BARRIER: memory barrier without comment
#470: FILE: arch/i386/kernel/smpboot.c:1122:
+	wmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: arch/i386/kernel/smpboot.c:1142:
+ ^I *$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: arch/i386/kernel/smpboot.c:1142:
+ ^I *$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#522: FILE: arch/i386/kernel/smpboot.c:1174:
+		schedule_timeout(HZ/10);
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: arch/i386/kernel/smpboot.c:1176:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#524: FILE: arch/i386/kernel/smpboot.c:1176:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/i386/kernel/smpboot.c:1176:
+ ^Iprintk(KERN_ERR "CPU %u didn't die...\n", cpu);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: arch/i386/kernel/smpboot.c:1176:
+ 	printk(KERN_ERR "CPU %u didn't die...\n", cpu);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#529: FILE: arch/i386/kernel/smpboot.c:1181:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#535: FILE: arch/i386/kernel/smpboot.c:1187:
+	BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#539: FILE: arch/i386/kernel/smpboot.c:1191:
+int __devinit __cpu_up(unsigned int cpu)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#543: FILE: arch/i386/kernel/smpboot.c:1195:
+		printk(KERN_DEBUG "skipping cpu%d, didn't come online\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#596: FILE: arch/ia64/kernel/smpboot.c:597:
+	printk("Disabled cpu %u\n", cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#679: FILE: include/asm-i386/irq.h:38:
+extern void fixup_irqs(cpumask_t map);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#695: FILE: include/asm-i386/smp.h:89:
+extern int __cpu_disable(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#696: FILE: include/asm-i386/smp.h:90:
+extern void __cpu_die(unsigned int cpu);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#726: FILE: kernel/cpu.c:71:
+	/* Force idle task to run as soon as we yield: it should
+	   immediately notice cpu is offline and die quickly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#726: FILE: kernel/cpu.c:71:
+	   immediately notice cpu is offline and die quickly. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 26 warnings, 6 checks, 515 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
