CHECK:CAMELCASE: Avoid CamelCase: <AscWriteEEPCmdReg>
#64: FILE: drivers/scsi/advansys.c:1999:
+static int       AscWriteEEPCmdReg(PortAddr iop_base, uchar cmd_reg);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PortAddr>
#64: FILE: drivers/scsi/advansys.c:1999:
+static int       AscWriteEEPCmdReg(PortAddr iop_base, uchar cmd_reg);

CHECK:CAMELCASE: Avoid CamelCase: <AscWriteEEPDataReg>
#65: FILE: drivers/scsi/advansys.c:2000:
+static int       AscWriteEEPDataReg(PortAddr iop_base, ushort data_reg);

CHECK:CAMELCASE: Avoid CamelCase: <AscWaitEEPRead>
#66: FILE: drivers/scsi/advansys.c:2001:
+static void      AscWaitEEPRead(void);

CHECK:CAMELCASE: Avoid CamelCase: <AscWaitEEPWrite>
#67: FILE: drivers/scsi/advansys.c:2002:
+static void      AscWaitEEPWrite(void);

CHECK:CAMELCASE: Avoid CamelCase: <AscReadEEPWord>
#68: FILE: drivers/scsi/advansys.c:2003:
+static ushort    AscReadEEPWord(PortAddr, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscWriteEEPWord>
#69: FILE: drivers/scsi/advansys.c:2004:
+static ushort    AscWriteEEPWord(PortAddr, uchar, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetEEPConfig>
#70: FILE: drivers/scsi/advansys.c:2005:
+static ushort    AscGetEEPConfig(PortAddr, ASCEEP_CONFIG *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetEEPConfigOnce>
#71: FILE: drivers/scsi/advansys.c:2006:
+static int       AscSetEEPConfigOnce(PortAddr, ASCEEP_CONFIG *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetEEPConfig>
#72: FILE: drivers/scsi/advansys.c:2007:
+static int       AscSetEEPConfig(PortAddr, ASCEEP_CONFIG *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscStartChip>
#73: FILE: drivers/scsi/advansys.c:2008:
+static int       AscStartChip(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscStopChip>
#74: FILE: drivers/scsi/advansys.c:2009:
+static int       AscStopChip(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetChipIH>
#75: FILE: drivers/scsi/advansys.c:2010:
+static void      AscSetChipIH(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscIsChipHalted>
#76: FILE: drivers/scsi/advansys.c:2011:
+static int       AscIsChipHalted(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscAckInterrupt>
#77: FILE: drivers/scsi/advansys.c:2012:
+static void      AscAckInterrupt(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscDisableInterrupt>
#78: FILE: drivers/scsi/advansys.c:2013:
+static void      AscDisableInterrupt(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscEnableInterrupt>
#79: FILE: drivers/scsi/advansys.c:2014:
+static void      AscEnableInterrupt(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetBank>
#80: FILE: drivers/scsi/advansys.c:2015:
+static void      AscSetBank(PortAddr, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscResetChipAndScsiBus>
#81: FILE: drivers/scsi/advansys.c:2016:
+static int       AscResetChipAndScsiBus(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetIsaDmaChannel>
#87: FILE: drivers/scsi/advansys.c:2018:
+static ushort    AscGetIsaDmaChannel(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetIsaDmaChannel>
#88: FILE: drivers/scsi/advansys.c:2019:
+static ushort    AscSetIsaDmaChannel(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetIsaDmaSpeed>
#89: FILE: drivers/scsi/advansys.c:2020:
+static uchar     AscSetIsaDmaSpeed(PortAddr, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetIsaDmaSpeed>
#90: FILE: drivers/scsi/advansys.c:2021:
+static uchar     AscGetIsaDmaSpeed(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscReadLramByte>
#94: FILE: drivers/scsi/advansys.c:2023:
+static uchar     AscReadLramByte(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscReadLramWord>
#95: FILE: drivers/scsi/advansys.c:2024:
+static ushort    AscReadLramWord(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscReadLramDWord>
#98: FILE: drivers/scsi/advansys.c:2026:
+static ASC_DCNT  AscReadLramDWord(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscWriteLramWord>
#121: FILE: drivers/scsi/advansys.c:2028:
+static void      AscWriteLramWord(PortAddr, ushort, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscWriteLramByte>
#122: FILE: drivers/scsi/advansys.c:2029:
+static void      AscWriteLramByte(PortAddr, ushort, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscMemSumLramWord>
#123: FILE: drivers/scsi/advansys.c:2030:
+static ASC_DCNT  AscMemSumLramWord(PortAddr, ushort, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscMemWordSetLram>
#124: FILE: drivers/scsi/advansys.c:2031:
+static void      AscMemWordSetLram(PortAddr, ushort, ushort, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscMemWordCopyPtrToLram>
#125: FILE: drivers/scsi/advansys.c:2032:
+static void      AscMemWordCopyPtrToLram(PortAddr, ushort, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscMemDWordCopyPtrToLram>
#126: FILE: drivers/scsi/advansys.c:2033:
+static void      AscMemDWordCopyPtrToLram(PortAddr, ushort, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscMemWordCopyPtrFromLram>
#127: FILE: drivers/scsi/advansys.c:2034:
+static void      AscMemWordCopyPtrFromLram(PortAddr, ushort, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitAscDvcVar>
#128: FILE: drivers/scsi/advansys.c:2035:
+static ushort    AscInitAscDvcVar(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitFromEEP>
#129: FILE: drivers/scsi/advansys.c:2036:
+static ushort    AscInitFromEEP(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitFromAscDvcVar>
#130: FILE: drivers/scsi/advansys.c:2037:
+static ushort    AscInitFromAscDvcVar(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitMicroCodeVar>
#131: FILE: drivers/scsi/advansys.c:2038:
+static ushort    AscInitMicroCodeVar(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscTestExternalLram>
#132: FILE: drivers/scsi/advansys.c:2039:
+static int       AscTestExternalLram(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscMsgOutSDTR>
#133: FILE: drivers/scsi/advansys.c:2040:
+static uchar     AscMsgOutSDTR(ASC_DVC_VAR *, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscCalSDTRData>
#134: FILE: drivers/scsi/advansys.c:2041:
+static uchar     AscCalSDTRData(ASC_DVC_VAR *, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetChipSDTR>
#135: FILE: drivers/scsi/advansys.c:2042:
+static void      AscSetChipSDTR(PortAddr, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetSynPeriodIndex>
#136: FILE: drivers/scsi/advansys.c:2043:
+static uchar     AscGetSynPeriodIndex(ASC_DVC_VAR *, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscAllocFreeQueue>
#137: FILE: drivers/scsi/advansys.c:2044:
+static uchar     AscAllocFreeQueue(PortAddr, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscAllocMultipleFreeQueue>
#138: FILE: drivers/scsi/advansys.c:2045:
+static uchar     AscAllocMultipleFreeQueue(PortAddr, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscHostReqRiscHalt>
#139: FILE: drivers/scsi/advansys.c:2046:
+static int       AscHostReqRiscHalt(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscStopQueueExe>
#140: FILE: drivers/scsi/advansys.c:2047:
+static int       AscStopQueueExe(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSendScsiQueue>
#141: FILE: drivers/scsi/advansys.c:2048:
+static int       AscSendScsiQueue(ASC_DVC_VAR *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/scsi/advansys.c:2049:
+static int       AscSendScsiQueue(ASC_DVC_VAR *,
                     ASC_SCSI_Q * scsiq,

CHECK:CAMELCASE: Avoid CamelCase: <AscPutReadyQueue>
#145: FILE: drivers/scsi/advansys.c:2051:
+static int       AscPutReadyQueue(ASC_DVC_VAR *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/scsi/advansys.c:2052:
+static int       AscPutReadyQueue(ASC_DVC_VAR *,
                     ASC_SCSI_Q *, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscPutReadySgListQueue>
#148: FILE: drivers/scsi/advansys.c:2053:
+static int       AscPutReadySgListQueue(ASC_DVC_VAR *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/scsi/advansys.c:2054:
+static int       AscPutReadySgListQueue(ASC_DVC_VAR *,
                     ASC_SCSI_Q *, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetChipSynRegAtID>
#157: FILE: drivers/scsi/advansys.c:2055:
+static int       AscSetChipSynRegAtID(PortAddr, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetRunChipSynRegAtID>
#158: FILE: drivers/scsi/advansys.c:2056:
+static int       AscSetRunChipSynRegAtID(PortAddr, uchar, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitLram>
#159: FILE: drivers/scsi/advansys.c:2057:
+static ushort    AscInitLram(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitQLinkVar>
#160: FILE: drivers/scsi/advansys.c:2058:
+static ushort    AscInitQLinkVar(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetLibErrorCode>
#161: FILE: drivers/scsi/advansys.c:2059:
+static int       AscSetLibErrorCode(ASC_DVC_VAR *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscIsrChipHalted>
#162: FILE: drivers/scsi/advansys.c:2060:
+static int       AscIsrChipHalted(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <_AscCopyLramScsiDoneQ>
#163: FILE: drivers/scsi/advansys.c:2061:
+static uchar     _AscCopyLramScsiDoneQ(PortAddr, ushort,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/scsi/advansys.c:2062:
+static uchar     _AscCopyLramScsiDoneQ(PortAddr, ushort,
                     ASC_QDONE_INFO *, ASC_DCNT);

CHECK:CAMELCASE: Avoid CamelCase: <AscIsrQDone>
#167: FILE: drivers/scsi/advansys.c:2063:
+static int       AscIsrQDone(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscCompareString>
#168: FILE: drivers/scsi/advansys.c:2064:
+static int       AscCompareString(uchar *, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetEisaChipCfg>
#176: FILE: drivers/scsi/advansys.c:2066:
+static ushort    AscGetEisaChipCfg(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetEisaProductID>
#177: FILE: drivers/scsi/advansys.c:2067:
+static ASC_DCNT  AscGetEisaProductID(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSearchIOPortAddrEISA>
#178: FILE: drivers/scsi/advansys.c:2068:
+static PortAddr  AscSearchIOPortAddrEISA(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSearchIOPortAddr11>
#179: FILE: drivers/scsi/advansys.c:2069:
+static PortAddr  AscSearchIOPortAddr11(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSearchIOPortAddr>
#180: FILE: drivers/scsi/advansys.c:2070:
+static PortAddr  AscSearchIOPortAddr(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetISAPNPWaitForKey>
#181: FILE: drivers/scsi/advansys.c:2071:
+static void      AscSetISAPNPWaitForKey(void);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetChipScsiCtrl>
#195: FILE: drivers/scsi/advansys.c:2073:
+static uchar     AscGetChipScsiCtrl(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetChipScsiID>
#196: FILE: drivers/scsi/advansys.c:2074:
+static uchar     AscSetChipScsiID(PortAddr, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetChipVersion>
#197: FILE: drivers/scsi/advansys.c:2075:
+static uchar     AscGetChipVersion(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetChipBusType>
#198: FILE: drivers/scsi/advansys.c:2076:
+static ushort    AscGetChipBusType(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscLoadMicroCode>
#199: FILE: drivers/scsi/advansys.c:2077:
+static ASC_DCNT  AscLoadMicroCode(PortAddr, ushort, uchar *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscFindSignature>
#200: FILE: drivers/scsi/advansys.c:2078:
+static int       AscFindSignature(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscToggleIRQAct>
#201: FILE: drivers/scsi/advansys.c:2079:
+static void      AscToggleIRQAct(PortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetChipIRQ>
#202: FILE: drivers/scsi/advansys.c:2080:
+static uchar     AscGetChipIRQ(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscSetChipIRQ>
#203: FILE: drivers/scsi/advansys.c:2081:
+static uchar     AscSetChipIRQ(PortAddr, uchar, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetChipBiosAddress>
#204: FILE: drivers/scsi/advansys.c:2082:
+static ushort    AscGetChipBiosAddress(PortAddr, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <DvcEnterCritical>
#205: FILE: drivers/scsi/advansys.c:2083:
+static inline ulong DvcEnterCritical(void);

CHECK:CAMELCASE: Avoid CamelCase: <DvcLeaveCritical>
#206: FILE: drivers/scsi/advansys.c:2084:
+static inline void DvcLeaveCritical(ulong);

CHECK:CAMELCASE: Avoid CamelCase: <DvcReadPCIConfigByte>
#210: FILE: drivers/scsi/advansys.c:2086:
+static uchar     DvcReadPCIConfigByte(ASC_DVC_VAR *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <DvcWritePCIConfigByte>
#211: FILE: drivers/scsi/advansys.c:2087:
+static void      DvcWritePCIConfigByte(ASC_DVC_VAR *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/scsi/advansys.c:2088:
+static void      DvcWritePCIConfigByte(ASC_DVC_VAR *,
                     ushort, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <DvcSleepMilliSecond>
#224: FILE: drivers/scsi/advansys.c:2091:
+static void      DvcSleepMilliSecond(ASC_DCNT);

CHECK:CAMELCASE: Avoid CamelCase: <DvcDelayNanoSecond>
#225: FILE: drivers/scsi/advansys.c:2092:
+static void      DvcDelayNanoSecond(ASC_DVC_VAR *, ASC_DCNT);

CHECK:CAMELCASE: Avoid CamelCase: <DvcPutScsiQ>
#226: FILE: drivers/scsi/advansys.c:2093:
+static void      DvcPutScsiQ(PortAddr, ushort, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <DvcGetQinfo>
#227: FILE: drivers/scsi/advansys.c:2094:
+static void      DvcGetQinfo(PortAddr, ushort, uchar *, int);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitGetConfig>
#228: FILE: drivers/scsi/advansys.c:2095:
+static ushort    AscInitGetConfig(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitSetConfig>
#229: FILE: drivers/scsi/advansys.c:2096:
+static ushort    AscInitSetConfig(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInitAsc1000Driver>
#230: FILE: drivers/scsi/advansys.c:2097:
+static ushort    AscInitAsc1000Driver(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscAsyncFix>
#231: FILE: drivers/scsi/advansys.c:2098:
+static void      AscAsyncFix(ASC_DVC_VAR *, uchar,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/scsi/advansys.c:2099:
+static void      AscAsyncFix(ASC_DVC_VAR *, uchar,
                     ASC_SCSI_INQUIRY *);

CHECK:CAMELCASE: Avoid CamelCase: <AscTagQueuingSafe>
#235: FILE: drivers/scsi/advansys.c:2100:
+static int       AscTagQueuingSafe(ASC_SCSI_INQUIRY *);

CHECK:CAMELCASE: Avoid CamelCase: <AscInquiryHandling>
#236: FILE: drivers/scsi/advansys.c:2101:
+static void      AscInquiryHandling(ASC_DVC_VAR *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/scsi/advansys.c:2102:
+static void      AscInquiryHandling(ASC_DVC_VAR *,
                     uchar, ASC_SCSI_INQUIRY *);

CHECK:CAMELCASE: Avoid CamelCase: <AscExeScsiQueue>
#241: FILE: drivers/scsi/advansys.c:2103:
+static int       AscExeScsiQueue(ASC_DVC_VAR *, ASC_SCSI_Q *);

CHECK:CAMELCASE: Avoid CamelCase: <AscISR>
#242: FILE: drivers/scsi/advansys.c:2104:
+static int       AscISR(ASC_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetNumOfFreeQueue>
#243: FILE: drivers/scsi/advansys.c:2105:
+static uint      AscGetNumOfFreeQueue(ASC_DVC_VAR *, uchar,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/scsi/advansys.c:2106:
+static uint      AscGetNumOfFreeQueue(ASC_DVC_VAR *, uchar,
                     uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscSgListToQueue>
#246: FILE: drivers/scsi/advansys.c:2107:
+static int       AscSgListToQueue(int);

CHECK:CAMELCASE: Avoid CamelCase: <AscEnableIsaDma>
#249: FILE: drivers/scsi/advansys.c:2109:
+static void      AscEnableIsaDma(uchar);

CHECK:CAMELCASE: Avoid CamelCase: <AscGetMaxDmaCount>
#252: FILE: drivers/scsi/advansys.c:2111:
+static ASC_DCNT  AscGetMaxDmaCount(ushort);

CHECK:CAMELCASE: Avoid CamelCase: <DvcAdvReadPCIConfigByte>
#269: FILE: drivers/scsi/advansys.c:3246:
+static uchar DvcAdvReadPCIConfigByte(ADV_DVC_VAR *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <DvcAdvWritePCIConfigByte>
#270: FILE: drivers/scsi/advansys.c:3247:
+static void  DvcAdvWritePCIConfigByte(ADV_DVC_VAR *, ushort, uchar);

CHECK:CAMELCASE: Avoid CamelCase: <DvcGetPhyAddr>
#271: FILE: drivers/scsi/advansys.c:3248:
+static ADV_PADDR DvcGetPhyAddr(ADV_DVC_VAR *, ADV_SCSI_REQ_Q *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/scsi/advansys.c:3249:
+static ADV_PADDR DvcGetPhyAddr(ADV_DVC_VAR *, ADV_SCSI_REQ_Q *,
                 uchar *, ASC_SDCNT *, int);

CHECK:CAMELCASE: Avoid CamelCase: <DvcDelayMicroSecond>
#274: FILE: drivers/scsi/advansys.c:3250:
+static void  DvcDelayMicroSecond(ADV_DVC_VAR *, ushort);

CHECK:CAMELCASE: Avoid CamelCase: <AdvExeScsiQueue>
#287: FILE: drivers/scsi/advansys.c:3255:
+static int     AdvExeScsiQueue(ADV_DVC_VAR *, ADV_SCSI_REQ_Q *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvISR>
#288: FILE: drivers/scsi/advansys.c:3256:
+static int     AdvISR(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitGetConfig>
#289: FILE: drivers/scsi/advansys.c:3257:
+static int     AdvInitGetConfig(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitAsc3550Driver>
#290: FILE: drivers/scsi/advansys.c:3258:
+static int     AdvInitAsc3550Driver(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitAsc38C0800Driver>
#291: FILE: drivers/scsi/advansys.c:3259:
+static int     AdvInitAsc38C0800Driver(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitAsc38C1600Driver>
#292: FILE: drivers/scsi/advansys.c:3260:
+static int     AdvInitAsc38C1600Driver(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvResetChipAndSB>
#293: FILE: drivers/scsi/advansys.c:3261:
+static int     AdvResetChipAndSB(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvResetSB>
#294: FILE: drivers/scsi/advansys.c:3262:
+static int     AdvResetSB(ADV_DVC_VAR *asc_dvc);

CHECK:CAMELCASE: Avoid CamelCase: <AdvSendIdleCmd>
#312: FILE: drivers/scsi/advansys.c:3267:
+static int    AdvSendIdleCmd(ADV_DVC_VAR *, ushort, ADV_DCNT);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInquiryHandling>
#313: FILE: drivers/scsi/advansys.c:3268:
+static void   AdvInquiryHandling(ADV_DVC_VAR *, ADV_SCSI_REQ_Q *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitFrom3550EEP>
#314: FILE: drivers/scsi/advansys.c:3269:
+static int    AdvInitFrom3550EEP(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitFrom38C0800EEP>
#315: FILE: drivers/scsi/advansys.c:3270:
+static int    AdvInitFrom38C0800EEP(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvInitFrom38C1600EEP>
#316: FILE: drivers/scsi/advansys.c:3271:
+static int    AdvInitFrom38C1600EEP(ADV_DVC_VAR *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvGet3550EEPConfig>
#317: FILE: drivers/scsi/advansys.c:3272:
+static ushort AdvGet3550EEPConfig(AdvPortAddr, ADVEEP_3550_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvPortAddr>
#317: FILE: drivers/scsi/advansys.c:3272:
+static ushort AdvGet3550EEPConfig(AdvPortAddr, ADVEEP_3550_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvSet3550EEPConfig>
#318: FILE: drivers/scsi/advansys.c:3273:
+static void   AdvSet3550EEPConfig(AdvPortAddr, ADVEEP_3550_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvGet38C0800EEPConfig>
#319: FILE: drivers/scsi/advansys.c:3274:
+static ushort AdvGet38C0800EEPConfig(AdvPortAddr, ADVEEP_38C0800_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvSet38C0800EEPConfig>
#320: FILE: drivers/scsi/advansys.c:3275:
+static void   AdvSet38C0800EEPConfig(AdvPortAddr, ADVEEP_38C0800_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvGet38C1600EEPConfig>
#321: FILE: drivers/scsi/advansys.c:3276:
+static ushort AdvGet38C1600EEPConfig(AdvPortAddr, ADVEEP_38C1600_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvSet38C1600EEPConfig>
#322: FILE: drivers/scsi/advansys.c:3277:
+static void   AdvSet38C1600EEPConfig(AdvPortAddr, ADVEEP_38C1600_CONFIG *);

CHECK:CAMELCASE: Avoid CamelCase: <AdvWaitEEPCmd>
#323: FILE: drivers/scsi/advansys.c:3278:
+static void   AdvWaitEEPCmd(AdvPortAddr);

CHECK:CAMELCASE: Avoid CamelCase: <AdvReadEEPWord>
#324: FILE: drivers/scsi/advansys.c:3279:
+static ushort AdvReadEEPWord(AdvPortAddr, int);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#334: FILE: drivers/scsi/advansys.c:4158:
+static int asc_board_count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#335: FILE: drivers/scsi/advansys.c:4159:
+static struct Scsi_Host    *asc_host[ASC_NUM_BOARD_SUPPORTED] = { 0 };

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#404: FILE: drivers/scsi/advansys.c:4208:
+static int	  advansys_slave_attach(Scsi_Device *);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#405: FILE: drivers/scsi/advansys.c:4209:
+static void       asc_scsi_done_list(Scsi_Cmnd *, int from_isr);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#429: FILE: drivers/scsi/advansys.c:4223:
+static int        asc_proc_copy(off_t, off_t, char *, int , char *, int);
                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#992: FILE: drivers/scsi/advansys.c:9984:
+static uchar _isa_pnp_inited ASC_INITDATA = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1657: FILE: drivers/scsi/advansys.c:13226:
 }
+static ushort

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 0 warnings, 133 checks, 1805 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
