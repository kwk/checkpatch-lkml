WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#24: 
D: functionality for various architectures, to avoid unneccessary (and
                                                     ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .17925-linux-2.5.38/arch/i386/kernel/traps.c .17925-linux-2.5.38.updated/arch/i386/kernel/traps.c

WARNING:LINE_SPACING: Missing a blank line after declarations
#59: FILE: arch/i386/kernel/traps.c:430:
+		const struct exception_table_entry *fixup;
+		fixup = search_exception_tables(regs->eip);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/i386/mm/extable.c:23:
+                        return mid;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/i386/mm/extable.c:23:
+                        return mid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/i386/mm/extable.c:29:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/mm/extable.c:29:
+        return NULL;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#160: FILE: arch/i386/mm/fault.c:308:
+	if ((fixup = search_exception_tables(regs->eip)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#190: FILE: arch/ppc/kernel/traps.c:152:
 	if (((msr & 0xffff0000) == 0 || (msr & (0x80000 | 0x40000)))
+	    && (entry = search_exception_tables(regs->nip)) != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/ppc/mm/extable.c:63:
+                        return mid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/ppc/mm/extable.c:63:
+                        return mid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/ppc/mm/extable.c:69:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/ppc/mm/extable.c:69:
+        return NULL;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#289: FILE: arch/ppc/mm/fault.c:270:
+	if ((entry = search_exception_tables(regs->nip)) != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#307: FILE: arch/sparc64/kernel/traps.c:155:
+		if ((entry = search_extables_range(regs->tpc, &g2))) {

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: arch/sparc64/kernel/traps.c:160:
 			printk("EX_TABLE: insn<%016lx> fixup<%016lx> "
+			       "g2<%016lx>\n", regs->tpc, entry->fixup, g2);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/sparc64/mm/extable.c:55:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/sparc64/mm/extable.c:55:
+        return NULL;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: include/asm-sparc64/uaccess.h:88:
+extern unsigned long search_exception_tables_sparc(unsigned long addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#691: FILE: kernel/module.c:1186:
+/* Given an address, look for it in the exception tables.  If we used
+   a single linked list, we could get rid of the lock here if

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#692: FILE: kernel/module.c:1187:
+   !CONFIG_MODULE_UNLOAD, but who cares enough? */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#702: FILE: kernel/module.c:1197:
+		struct exception_table *t
+			= list_entry(i, struct exception_table, list);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#705: FILE: kernel/module.c:1200:
+					       t->entry + t->num_entries-1,
 					                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#707: FILE: kernel/module.c:1202:
+			if (found) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: kernel/module.c:1208:
+           we cannot unload the module, hence no refcnt needed. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#713: FILE: kernel/module.c:1208:
+	/* Now, if we found one, we are running inside it now, hence
+           we cannot unload the module, hence no refcnt needed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#713: FILE: kernel/module.c:1208:
+           we cannot unload the module, hence no refcnt needed. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 4 checks, 605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
