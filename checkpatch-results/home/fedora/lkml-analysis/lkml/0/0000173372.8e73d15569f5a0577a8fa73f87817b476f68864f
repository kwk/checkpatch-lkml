WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: fs/Kconfig:1703:
+config NDEV_FS
+	bool "Nano Device File System"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: include/linux/ndevfs.h:1:
+#ifndef _NDEVFS_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/ndevfs.h:5:
+extern void ndevfs_create(const char *name, dev_t dev, int is_char);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/linux/ndevfs.h:6:
+extern void ndevfs_remove(const char *name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: fs/ndevfs/inode.c:1:
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#169: FILE: fs/ndevfs/inode.c:34:
+};
+static LIST_HEAD(entries);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#174: FILE: fs/ndevfs/inode.c:39:
+static struct file_operations stupid_file_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#192: FILE: fs/ndevfs/inode.c:57:
+		inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: fs/ndevfs/inode.c:79:
+static int mknod(struct inode *dir, struct dentry *dentry,
+			 int mode, dev_t dev)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#287: FILE: fs/ndevfs/inode.c:152:
+	int mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#305: FILE: fs/ndevfs/inode.c:170:
+		pr_debug("%s: no parent?\n", __FUNCTION__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*entry)...) over kmalloc(sizeof(struct entry)...)
#320: FILE: fs/ndevfs/inode.c:185:
+	entry = kmalloc(sizeof(struct entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#332: FILE: fs/ndevfs/inode.c:197:
+	pr_debug("%s failed with error %d\n", __FUNCTION__, err);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#356: FILE: fs/ndevfs/inode.c:221:
+		pr_debug("%s: can't find %s\n", __FUNCTION__, name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: fs/ndevfs/inode.c:224:
+	remove (dentry);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 6 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000173372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
