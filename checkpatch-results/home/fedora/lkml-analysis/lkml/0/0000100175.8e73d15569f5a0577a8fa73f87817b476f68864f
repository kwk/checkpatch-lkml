WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/isdn/gigaset/gigaset.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#80: FILE: drivers/isdn/gigaset/gigaset.h:34:
+#include <asm/atomic.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: drivers/isdn/gigaset/gigaset.h:36:
+#define GIG_VERSION {0,5,0,0}
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: drivers/isdn/gigaset/gigaset.h:36:
+#define GIG_VERSION {0,5,0,0}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: drivers/isdn/gigaset/gigaset.h:36:
+#define GIG_VERSION {0,5,0,0}
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: drivers/isdn/gigaset/gigaset.h:37:
+#define GIG_COMPAT  {0,4,0,0}
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: drivers/isdn/gigaset/gigaset.h:37:
+#define GIG_COMPAT  {0,4,0,0}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: drivers/isdn/gigaset/gigaset.h:37:
+#define GIG_COMPAT  {0,4,0,0}
                           ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#121: FILE: drivers/isdn/gigaset/gigaset.h:75:
+#define IFNULL(a) \
+	if (unlikely(!(a)))

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#124: FILE: drivers/isdn/gigaset/gigaset.h:78:
+#define IFNULLRET(a) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		return; \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#124: FILE: drivers/isdn/gigaset/gigaset.h:78:
+#define IFNULLRET(a) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		return; \
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: drivers/isdn/gigaset/gigaset.h:84:
+#define IFNULLRETVAL(a,b) \
                       ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#130: FILE: drivers/isdn/gigaset/gigaset.h:84:
+#define IFNULLRETVAL(a,b) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		return (b); \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#130: FILE: drivers/isdn/gigaset/gigaset.h:84:
+#define IFNULLRETVAL(a,b) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		return (b); \
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#133: FILE: drivers/isdn/gigaset/gigaset.h:87:
+		return (b); \

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#136: FILE: drivers/isdn/gigaset/gigaset.h:90:
+#define IFNULLCONT(a) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		continue; \
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: drivers/isdn/gigaset/gigaset.h:96:
+#define IFNULLGOTO(a,b) \
                     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#142: FILE: drivers/isdn/gigaset/gigaset.h:96:
+#define IFNULLGOTO(a,b) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		goto b; \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#142: FILE: drivers/isdn/gigaset/gigaset.h:96:
+#define IFNULLGOTO(a,b) \
+	if (unlikely(!(a))) { \
+		err("%s==NULL at %s:%d!", #a, __FILE__, __LINE__); \
+		goto b; \
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: drivers/isdn/gigaset/gigaset.h:113:
+	DEBUG_INTR_DUMP	  = 0x0010, /* Activating hexdump debug output on
+				       interrupt requests, not available as

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: drivers/isdn/gigaset/gigaset.h:114:
+				       run-time option */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: drivers/isdn/gigaset/gigaset.h:126:
+	DEBUG_INIT	  = 0x08000, /* (de)allocation+initialization of data
+					structures */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#172: FILE: drivers/isdn/gigaset/gigaset.h:126:
+					structures */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#178: FILE: drivers/isdn/gigaset/gigaset.h:132:
+	DEBUG_USBREQ	  = 0x100000, /* USB communication (except payload
+					 data) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: drivers/isdn/gigaset/gigaset.h:132:
+					 data) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#180: FILE: drivers/isdn/gigaset/gigaset.h:134:
+	DEBUG_LOCKCMD	  = 0x200000, /* AT commands and responses when
+					 MS_LOCKED */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: drivers/isdn/gigaset/gigaset.h:134:
+					 MS_LOCKED */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#183: FILE: drivers/isdn/gigaset/gigaset.h:137:
+	DEBUG_ANY	  = 0x3fffff, /* print message if any of the others is
+					 activated */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: drivers/isdn/gigaset/gigaset.h:137:
+					 activated */

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#189: FILE: drivers/isdn/gigaset/gigaset.h:143:
+	dev_printk(KERN_NOTICE , dev , format , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#189: FILE: drivers/isdn/gigaset/gigaset.h:143:
+	dev_printk(KERN_NOTICE , dev , format , ## arg)
 	                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#189: FILE: drivers/isdn/gigaset/gigaset.h:143:
+	dev_printk(KERN_NOTICE , dev , format , ## arg)
 	                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#189: FILE: drivers/isdn/gigaset/gigaset.h:143:
+	dev_printk(KERN_NOTICE , dev , format , ## arg)
 	                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#195: FILE: drivers/isdn/gigaset/gigaset.h:149:
+	printk(KERN_NOTICE "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#196: FILE: drivers/isdn/gigaset/gigaset.h:150:
+	       THIS_MODULE ? THIS_MODULE->name : __FILE__ , ## arg)
 	                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#204: FILE: drivers/isdn/gigaset/gigaset.h:158:
+			printk(KERN_DEBUG "%s: " format "\n", \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/isdn/gigaset/gigaset.h:202:
+// ^I Powermangment$

CHECK:CAMELCASE: Avoid CamelCase: <min_ConState>
#370: FILE: drivers/isdn/gigaset/gigaset.h:324:
+	int	min_ConState;	/* <0 => ignore */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <max_ConState>
#371: FILE: drivers/isdn/gigaset/gigaset.h:325:
+	int	max_ConState;	/* <0 => ignore */

CHECK:CAMELCASE: Avoid CamelCase: <new_ConState>
#373: FILE: drivers/isdn/gigaset/gigaset.h:327:
+	int	new_ConState;	/* <0 => ignore */

CHECK:CAMELCASE: Avoid CamelCase: <ConState>
#442: FILE: drivers/isdn/gigaset/gigaset.h:396:
+	unsigned int		ConState;	/* State of connection */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#447: FILE: drivers/isdn/gigaset/gigaset.h:401:
+	unsigned		pending_commands;	/* see PC_XXXX */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#489: FILE: drivers/isdn/gigaset/gigaset.h:443:
+	unsigned chstate;		/* bitmap (CHS_*) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#491: FILE: drivers/isdn/gigaset/gigaset.h:445:
+	unsigned proto2;		/* Layer 2 protocol (ISDN_PROTO_L2_*) */

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#502: FILE: drivers/isdn/gigaset/gigaset.h:456:
+		struct ser_bc_state *ser;	/* serial hardware driver */
 		                     ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#510: FILE: drivers/isdn/gigaset/gigaset.h:464:
+	unsigned minor_index;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#527: FILE: drivers/isdn/gigaset/gigaset.h:481:
+	int onechannel;			/* data and commands transmitted in one
+					   stream (M10x) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#527: FILE: drivers/isdn/gigaset/gigaset.h:481:
+					   stream (M10x) */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#529: FILE: drivers/isdn/gigaset/gigaset.h:483:
+	spinlock_t lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#532: FILE: drivers/isdn/gigaset/gigaset.h:486:
+	struct list_head temp_at_states;/* list of temporary "struct
+					   at_state_t"s without B channel */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: drivers/isdn/gigaset/gigaset.h:486:
+					   at_state_t"s without B channel */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#537: FILE: drivers/isdn/gigaset/gigaset.h:491:
+	spinlock_t cmdlock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#538: FILE: drivers/isdn/gigaset/gigaset.h:492:
+	unsigned curlen, cmdbytes;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#540: FILE: drivers/isdn/gigaset/gigaset.h:494:
+	unsigned open_count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#543: FILE: drivers/isdn/gigaset/gigaset.h:497:
+	unsigned control_state;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#545: FILE: drivers/isdn/gigaset/gigaset.h:499:
+	unsigned fwver[4];

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#554: FILE: drivers/isdn/gigaset/gigaset.h:508:
+	isdn_if iif;
 	        ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#560: FILE: drivers/isdn/gigaset/gigaset.h:514:
+	int ignoreframes;		/* frames to ignore after setting up the
+					   B channel */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#560: FILE: drivers/isdn/gigaset/gigaset.h:514:
+					   B channel */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#565: FILE: drivers/isdn/gigaset/gigaset.h:519:
+					 *   MS_LOCKED */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#570: FILE: drivers/isdn/gigaset/gigaset.h:524:
+	int dle;			/* !=0 if modem commands/responses are
+					   dle encoded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#570: FILE: drivers/isdn/gigaset/gigaset.h:524:
+					   dle encoded */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#572: FILE: drivers/isdn/gigaset/gigaset.h:526:
+	int cur_at_seq;			/* sequence of AT commands being
+					   processed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#572: FILE: drivers/isdn/gigaset/gigaset.h:526:
+					   processed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#574: FILE: drivers/isdn/gigaset/gigaset.h:528:
+	int curchannel;			/* channel those commands are meant
+					   for */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: drivers/isdn/gigaset/gigaset.h:528:
+					   for */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#576: FILE: drivers/isdn/gigaset/gigaset.h:530:
+	atomic_t commands_pending;	/* flag(s) in xxx.commands_pending have
+					   been set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#576: FILE: drivers/isdn/gigaset/gigaset.h:530:
+					   been set */

WARNING:TYPO_SPELLING: 'reponses' may be misspelled - perhaps 'responses'?
#580: FILE: drivers/isdn/gigaset/gigaset.h:534:
+					 *   -> for modem reponses (and
 					                  ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: drivers/isdn/gigaset/gigaset.h:539:
+					 *      (e.g. command from LL) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#588: FILE: drivers/isdn/gigaset/gigaset.h:542:
+					 * (not used in base driver) */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#593: FILE: drivers/isdn/gigaset/gigaset.h:547:
+	spinlock_t ev_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#597: FILE: drivers/isdn/gigaset/gigaset.h:551:
+	unsigned cbytes;

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#602: FILE: drivers/isdn/gigaset/gigaset.h:556:
+		struct ser_cardstate *ser; /* serial hardware driver */
 		                      ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#611: FILE: drivers/isdn/gigaset/gigaset.h:565:
+	unsigned have_tty;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: drivers/isdn/gigaset/gigaset.h:566:
+	unsigned minor;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#613: FILE: drivers/isdn/gigaset/gigaset.h:567:
+	unsigned minors;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#615: FILE: drivers/isdn/gigaset/gigaset.h:569:
+	unsigned *flags;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#633: FILE: drivers/isdn/gigaset/gigaset.h:587:
+	spinlock_t	isooutlock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#637: FILE: drivers/isdn/gigaset/gigaset.h:591:
+	unsigned numsub;		/* submitted URB counter

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#638: FILE: drivers/isdn/gigaset/gigaset.h:592:
+	unsigned numsub;		/* submitted URB counter
+					   (for diagnostic messages only) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: drivers/isdn/gigaset/gigaset.h:592:
+					   (for diagnostic messages only) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#647: FILE: drivers/isdn/gigaset/gigaset.h:601:
+	unsigned isoinlost;		/* number of bytes lost */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#649: FILE: drivers/isdn/gigaset/gigaset.h:603:
+	/* state of bit unstuffing algorithm
+	   (in addition to BC_state.inputstate) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#649: FILE: drivers/isdn/gigaset/gigaset.h:603:
+	   (in addition to BC_state.inputstate) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#650: FILE: drivers/isdn/gigaset/gigaset.h:604:
+	unsigned seqlen;		/* number of '1' bits not yet

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: drivers/isdn/gigaset/gigaset.h:605:
+	unsigned seqlen;		/* number of '1' bits not yet
+					   unstuffed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: drivers/isdn/gigaset/gigaset.h:605:
+					   unstuffed */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#652: FILE: drivers/isdn/gigaset/gigaset.h:606:
+	unsigned inbyte, inbits;	/* collected bits for next byte */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#654: FILE: drivers/isdn/gigaset/gigaset.h:608:
+	unsigned goodbytes;		/* bytes correctly received */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#655: FILE: drivers/isdn/gigaset/gigaset.h:609:
+	unsigned alignerrs;		/* frames with incomplete byte at end */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#656: FILE: drivers/isdn/gigaset/gigaset.h:610:
+	unsigned fcserrs;		/* FCS errors */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#657: FILE: drivers/isdn/gigaset/gigaset.h:611:
+	unsigned frameerrs;		/* framing errors */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#658: FILE: drivers/isdn/gigaset/gigaset.h:612:
+	unsigned giants;		/* long frames */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#659: FILE: drivers/isdn/gigaset/gigaset.h:613:
+	unsigned runts;			/* short frames */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#660: FILE: drivers/isdn/gigaset/gigaset.h:614:
+	unsigned aborts;		/* HDLC aborts */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#661: FILE: drivers/isdn/gigaset/gigaset.h:615:
+	unsigned shared0s;		/* '0' bits shared between flags */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#662: FILE: drivers/isdn/gigaset/gigaset.h:616:
+	unsigned stolen0s;		/* '0' stuff bits also serving as

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#663: FILE: drivers/isdn/gigaset/gigaset.h:617:
+	unsigned stolen0s;		/* '0' stuff bits also serving as
+					   leading flag bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#663: FILE: drivers/isdn/gigaset/gigaset.h:617:
+					   leading flag bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#669: FILE: drivers/isdn/gigaset/gigaset.h:623:
+	/* Called from ev-layer.c/interface.c for sending AT commands to the
+	   device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#669: FILE: drivers/isdn/gigaset/gigaset.h:623:
+	   device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#680: FILE: drivers/isdn/gigaset/gigaset.h:634:
+	 * Should call gigaset_bchannel_up(), when finished. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#684: FILE: drivers/isdn/gigaset/gigaset.h:638:
+	 * Should call gigaset_bchannel_down(), when finished. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#694: FILE: drivers/isdn/gigaset/gigaset.h:648:
+	/* Called by gigaset_stop() or gigaset_bchannel_down() for resetting
+	   bcs->hw.xxx */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#694: FILE: drivers/isdn/gigaset/gigaset.h:648:
+	   bcs->hw.xxx */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#704: FILE: drivers/isdn/gigaset/gigaset.h:658:
+	/* Called from common.c/interface.c for additional serial port
+	   control */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#704: FILE: drivers/isdn/gigaset/gigaset.h:658:
+	   control */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#705: FILE: drivers/isdn/gigaset/gigaset.h:659:
+	int (*set_modem_ctrl)(struct cardstate *cs, unsigned old_state,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#706: FILE: drivers/isdn/gigaset/gigaset.h:660:
+			      unsigned new_state);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#707: FILE: drivers/isdn/gigaset/gigaset.h:661:
+	int (*baud_rate)(struct cardstate *cs, unsigned cflag);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#708: FILE: drivers/isdn/gigaset/gigaset.h:662:
+	int (*set_line_ctrl)(struct cardstate *cs, unsigned cflag);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#714: FILE: drivers/isdn/gigaset/gigaset.h:668:
+	 * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#733: FILE: drivers/isdn/gigaset/gigaset.h:687:
+ * After sending gigaset_skb_sent() should be called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#737: FILE: drivers/isdn/gigaset/gigaset.h:691:
+ * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#745: FILE: drivers/isdn/gigaset/gigaset.h:699:
+ * After sending gigaset_skb_sent() should be called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#749: FILE: drivers/isdn/gigaset/gigaset.h:703:
+ * received through the common/control channel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#753: FILE: drivers/isdn/gigaset/gigaset.h:707:
+ * received through the isochronous channel */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#754: FILE: drivers/isdn/gigaset/gigaset.h:708:
+void gigaset_isoc_receive(unsigned char *src, unsigned count,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#758: FILE: drivers/isdn/gigaset/gigaset.h:712:
+ * into the isochronous output buffer */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#785: FILE: drivers/isdn/gigaset/gigaset.h:739:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#795: FILE: drivers/isdn/gigaset/gigaset.h:749:
+	response.parm.errcode = ISDN_STAT_L1ERR_RECV;
 	         ^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#796: FILE: drivers/isdn/gigaset/gigaset.h:750:
+	bcs->cs->iif.statcallb(&response);
 	         ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: drivers/isdn/gigaset/gigaset.h:761:
+ * when a complete modem response line has been received */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#832: FILE: drivers/isdn/gigaset/gigaset.h:786:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#832: FILE: drivers/isdn/gigaset/gigaset.h:786:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#842: FILE: drivers/isdn/gigaset/gigaset.h:796:
+struct cardstate *gigaset_get_cs_by_minor(unsigned minor);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#852: FILE: drivers/isdn/gigaset/gigaset.h:806:
+/* Allocate and initialize card state. Calls hardware dependent
+   gigaset_init[b]cs(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#852: FILE: drivers/isdn/gigaset/gigaset.h:806:
+   gigaset_init[b]cs(). */

WARNING:LINE_SPACING: Missing a blank line after declarations
#887: FILE: drivers/isdn/gigaset/gigaset.h:841:
+	unsigned long flags;
+	spin_lock_irqsave(&cs->lock, flags);

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#918: FILE: drivers/isdn/gigaset/gigaset.h:872:
+ * existing buffer can accomodate them
                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#940: FILE: drivers/isdn/gigaset/gigaset.h:894:
+	cs->iif.rcvcallb_skb(cs->myid, bcs->channel, skb);
 	    ^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#954: FILE: drivers/isdn/gigaset/gigaset.h:908:
+	if (bcs->ignore)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#956: FILE: drivers/isdn/gigaset/gigaset.h:910:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#962: FILE: drivers/isdn/gigaset/gigaset.h:916:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#966: FILE: drivers/isdn/gigaset/gigaset.h:920:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#970: FILE: drivers/isdn/gigaset/gigaset.h:924:
+				     unsigned numbytes)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#972: FILE: drivers/isdn/gigaset/gigaset.h:926:
+	unsigned n, head, tail, bytesleft;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#988: FILE: drivers/isdn/gigaset/gigaset.h:942:
+			n = (RBUFSIZE-1) - tail;
 			             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1029: FILE: drivers/isdn/gigaset/common.c:1:
+/*

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1056: FILE: drivers/isdn/gigaset/common.c:28:
+module_param_named(debug, gigaset_debuglevel, int, S_IRUGO|S_IWUSR);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1056: FILE: drivers/isdn/gigaset/common.c:28:
+module_param_named(debug, gigaset_debuglevel, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1060: FILE: drivers/isdn/gigaset/common.c:32:
+/*======================================================================
+  Prototypes of internal functions

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1065: FILE: drivers/isdn/gigaset/common.c:37:
+static void make_valid(struct cardstate *cs, unsigned mask);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: drivers/isdn/gigaset/common.c:38:
+static void make_invalid(struct cardstate *cs, unsigned mask);

WARNING:SIZEOF_PARENTHESIS: sizeof outbuf should be sizeof(outbuf)
#1117: FILE: drivers/isdn/gigaset/common.c:89:
+	size_t space = sizeof outbuf - 1;

WARNING:SIZEOF_PARENTHESIS: sizeof inbuf should be sizeof(inbuf)
#1124: FILE: drivers/isdn/gigaset/common.c:96:
+		numin = len < sizeof inbuf ? len : sizeof inbuf;

CHECK:SPACING: No space is necessary after a cast
#1126: FILE: drivers/isdn/gigaset/common.c:98:
+		if (copy_from_user(inbuf, (const unsigned char __user *) buf,

CHECK:SPACING: No space is necessary after a cast
#1129: FILE: drivers/isdn/gigaset/common.c:101:
+				msg, (unsigned) len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1129: FILE: drivers/isdn/gigaset/common.c:101:
+				msg, (unsigned) len);

CHECK:SPACING: No space is necessary after a cast
#1159: FILE: drivers/isdn/gigaset/common.c:131:
+	gig_dbg(level, "%s (%u bytes): %s", msg, (unsigned) len, outbuf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1159: FILE: drivers/isdn/gigaset/common.c:131:
+	gig_dbg(level, "%s (%u bytes): %s", msg, (unsigned) len, outbuf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1163: FILE: drivers/isdn/gigaset/common.c:135:
+static int setflags(struct cardstate *cs, unsigned flags, unsigned delay)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1163: FILE: drivers/isdn/gigaset/common.c:135:
+static int setflags(struct cardstate *cs, unsigned flags, unsigned delay)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1205: FILE: drivers/isdn/gigaset/common.c:177:
+	r = setflags(cs, TIOCM_RTS|TIOCM_DTR, 800);
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1213: FILE: drivers/isdn/gigaset/common.c:185:
+	cs->control_state = TIOCM_RTS|TIOCM_DTR; // FIXME is this a good value?
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1214: FILE: drivers/isdn/gigaset/common.c:186:
+	cs->ops->set_modem_ctrl(cs, 0, TIOCM_RTS|TIOCM_DTR);
 	                                        ^

CHECK:SPACING: No space is necessary after a cast
#1240: FILE: drivers/isdn/gigaset/common.c:212:
+	struct cardstate *cs = (struct cardstate *) data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1242: FILE: drivers/isdn/gigaset/common.c:214:
+	unsigned channel;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1352: FILE: drivers/isdn/gigaset/common.c:324:
+	unsigned head, tail;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1374: FILE: drivers/isdn/gigaset/common.c:346:
+	unsigned next, tail;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1381: FILE: drivers/isdn/gigaset/common.c:353:
+	if (unlikely(next == atomic_read(&cs->ev_head)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1383: FILE: drivers/isdn/gigaset/common.c:355:
+	else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1431: FILE: drivers/isdn/gigaset/common.c:403:
+	if (!bcs->cs->ops->freebcshw(bcs)) {
+		gig_dbg(DEBUG_INIT, "failed");
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1465: FILE: drivers/isdn/gigaset/common.c:437:
+	spin_unlock_irqrestore(&cs->lock, flags); /* event handler and timer are
+						     not rescheduled below */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1465: FILE: drivers/isdn/gigaset/common.c:437:
+						     not rescheduled below */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1479: FILE: drivers/isdn/gigaset/common.c:451:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1483: FILE: drivers/isdn/gigaset/common.c:455:
+		gig_dbg(DEBUG_INIT, "clearing iif");
 		                              ^^^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1486: FILE: drivers/isdn/gigaset/common.c:458:
+		/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1492: FILE: drivers/isdn/gigaset/common.c:464:
+		/* fall through */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1539: FILE: drivers/isdn/gigaset/common.c:511:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1578: FILE: drivers/isdn/gigaset/common.c:550:
+	if (cs->ignoreframes) {
[...]
+	} else if ((bcs->skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)
[...]
+	else {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1581: FILE: drivers/isdn/gigaset/common.c:553:
+	} else if ((bcs->skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#1583: FILE: drivers/isdn/gigaset/common.c:555:
+	else {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1640: FILE: drivers/isdn/gigaset/common.c:612:
+	cs->bcs = kmalloc(channels * sizeof(struct bc_state), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cs->inbuf)...) over kmalloc(sizeof(struct inbuf_t)...)
#1644: FILE: drivers/isdn/gigaset/common.c:616:
+	cs->inbuf = kmalloc(sizeof(struct inbuf_t), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#1660: FILE: drivers/isdn/gigaset/common.c:632:
+		     (unsigned long) cs);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1698: FILE: drivers/isdn/gigaset/common.c:670:
+	if (onechannel) {			//FIXME distinction necessary?
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1700: FILE: drivers/isdn/gigaset/common.c:672:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1706: FILE: drivers/isdn/gigaset/common.c:678:
+	cs->cmdbuf = cs->lastcmdbuf = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1711: FILE: drivers/isdn/gigaset/common.c:683:
+	gig_dbg(DEBUG_INIT, "setting up iif");
 	                                ^^^

CHECK:SPACING: No space is necessary after a cast
#1728: FILE: drivers/isdn/gigaset/common.c:700:
+	setup_timer(&cs->timer, timer_tick, (unsigned long) cs);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1731: FILE: drivers/isdn/gigaset/common.c:703:
+	 * Same problem(?) with mod_timer() in timer_tick(). */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#1738: FILE: drivers/isdn/gigaset/common.c:710:
+error:	if (cs)
+		up(&cs->sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1778: FILE: drivers/isdn/gigaset/common.c:750:
+
+

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1810: FILE: drivers/isdn/gigaset/common.c:782:
+	cs->cmdbuf = cs->lastcmdbuf = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1834: FILE: drivers/isdn/gigaset/common.c:806:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1843: FILE: drivers/isdn/gigaset/common.c:815:
+		cs->ops->set_modem_ctrl(cs, 0, TIOCM_DTR|TIOCM_RTS);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1846: FILE: drivers/isdn/gigaset/common.c:818:
+		cs->control_state = TIOCM_DTR|TIOCM_RTS;
 		                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1952: FILE: drivers/isdn/gigaset/common.c:924:
+	static struct cardstate *ret = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1955: FILE: drivers/isdn/gigaset/common.c:927:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1982: FILE: drivers/isdn/gigaset/common.c:954:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2012: FILE: drivers/isdn/gigaset/common.c:984:
+struct cardstate *gigaset_get_cs_by_minor(unsigned minor)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#2015: FILE: drivers/isdn/gigaset/common.c:987:
+	static struct cardstate *ret = NULL;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2017: FILE: drivers/isdn/gigaset/common.c:989:
+	unsigned index;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2063: FILE: drivers/isdn/gigaset/common.c:1035:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2063: FILE: drivers/isdn/gigaset/common.c:1035:
+struct gigaset_driver *gigaset_initdriver(unsigned minor, unsigned minors,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2072: FILE: drivers/isdn/gigaset/common.c:1044:
+	unsigned i;

WARNING:SIZEOF_PARENTHESIS: sizeof *drv should be sizeof(*drv)
#2074: FILE: drivers/isdn/gigaset/common.c:1046:
+	drv = kmalloc(sizeof *drv, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *drv->cs should be sizeof(*drv->cs)
#2090: FILE: drivers/isdn/gigaset/common.c:1062:
+	drv->cs = kmalloc(minors * sizeof *drv->cs, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *drv->flags should be sizeof(*drv->flags)
#2093: FILE: drivers/isdn/gigaset/common.c:1065:
+	drv->flags = kmalloc(minors * sizeof *drv->flags, GFP_KERNEL);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2124: FILE: drivers/isdn/gigaset/common.c:1096:
+	unsigned i;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#2125: FILE: drivers/isdn/gigaset/common.c:1097:
+	static struct cardstate *ret = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2144: FILE: drivers/isdn/gigaset/common.c:1116:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2149: FILE: drivers/isdn/gigaset/common.c:1121:
+static void make_valid(struct cardstate *cs, unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2153: FILE: drivers/isdn/gigaset/common.c:1125:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2158: FILE: drivers/isdn/gigaset/common.c:1130:
+static void make_invalid(struct cardstate *cs, unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2162: FILE: drivers/isdn/gigaset/common.c:1134:
+	struct gigaset_driver *drv = cs->driver;
+	spin_lock_irqsave(&drv->lock, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2172: FILE: drivers/isdn/gigaset/common.c:1144:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#2194: FILE: drivers/isdn/gigaset/common.c:1166:
+	unsigned *minor_flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2211: FILE: drivers/isdn/gigaset/common.c:1183:
+	unsigned long flags;
+	spin_lock_irqsave(&drv->lock, flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 151 warnings, 38 checks, 2192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
