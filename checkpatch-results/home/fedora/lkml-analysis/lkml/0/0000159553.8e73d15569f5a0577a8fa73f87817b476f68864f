WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: drivers/firmware/dcdbas.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#147: FILE: drivers/firmware/dcdbas.c:36:
+#include <asm/io.h>

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: drivers/firmware/dcdbas.c:66:
+		__FUNCTION__, smi_data_buf_phys_addr, smi_data_buf_size);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#205: FILE: drivers/firmware/dcdbas.c:94:
+				"%s: corruption detected\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#217: FILE: drivers/firmware/dcdbas.c:106:
+	if (!buf) {
+		dev_dbg(&dcdbas_pdev->dev,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: drivers/firmware/dcdbas.c:108:
+			__FUNCTION__, size);

CHECK:SPACING: No space is necessary after a cast
#231: FILE: drivers/firmware/dcdbas.c:120:
+	smi_data_buf_phys_addr = (u32) virt_to_phys(buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#235: FILE: drivers/firmware/dcdbas.c:124:
+		__FUNCTION__, smi_data_buf_phys_addr, smi_data_buf_size);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#262: FILE: drivers/firmware/dcdbas.c:151:
+	buf_size = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#332: FILE: drivers/firmware/dcdbas.c:221:
+	host_control_action = simple_strtoul(buf, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#347: FILE: drivers/firmware/dcdbas.c:236:
+	host_control_smi_type = simple_strtoul(buf, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#362: FILE: drivers/firmware/dcdbas.c:251:
+	host_control_on_shutdown = simple_strtoul(buf, NULL, 10);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#381: FILE: drivers/firmware/dcdbas.c:270:
+			__FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#403: FILE: drivers/firmware/dcdbas.c:292:
+	command_buffer_phys_addr = (u32) virt_to_phys(ci_cmd->command_buffer);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#406: FILE: drivers/firmware/dcdbas.c:295:
+	__asm__ __volatile__(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/firmware/dcdbas.c:298:
+^I^I: "a" (ci_cmd->command_code), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: drivers/firmware/dcdbas.c:299:
+^I^I  "d" (ci_cmd->command_address), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: drivers/firmware/dcdbas.c:300:
+^I^I  "b" (command_buffer_phys_addr), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/firmware/dcdbas.c:301:
+^I^I  "c" (ci_cmd->command_signature)  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/firmware/dcdbas.c:314:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/firmware/dcdbas.c:317:
+ * $

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#438: FILE: drivers/firmware/dcdbas.c:327:
+	if (simple_strtoul(buf, NULL, 10) != 1)

CHECK:SPACING: No space is necessary after a cast
#482: FILE: drivers/firmware/dcdbas.c:371:
+		outb((u8) cmd_status, PCAT_APM_STATUS_PORT);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#542: FILE: drivers/firmware/dcdbas.c:431:
+			__FUNCTION__, host_control_smi_type);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#543: FILE: drivers/firmware/dcdbas.c:432:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: drivers/firmware/dcdbas.c:440:
+ * $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#570: FILE: drivers/firmware/dcdbas.c:459:
+		dev_dbg(&dcdbas_pdev->dev, "%s: no SMI buffer\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#576: FILE: drivers/firmware/dcdbas.c:465:
+			__FUNCTION__);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#586: FILE: drivers/firmware/dcdbas.c:475:
+		*((s16 *)&apm_cmd->parameters.shortreq.parm[0]) = (s16) 0;
 		                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#586: FILE: drivers/firmware/dcdbas.c:475:
+		*((s16 *)&apm_cmd->parameters.shortreq.parm[0]) = (s16) 0;

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#591: FILE: drivers/firmware/dcdbas.c:480:
+		*((s16 *)&apm_cmd->parameters.shortreq.parm[0]) = (s16) 20;
 		                                       ^^^^

CHECK:SPACING: No space is necessary after a cast
#591: FILE: drivers/firmware/dcdbas.c:480:
+		*((s16 *)&apm_cmd->parameters.shortreq.parm[0]) = (s16) 20;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#602: FILE: drivers/firmware/dcdbas.c:491:
+	static unsigned int notify_cnt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#611: FILE: drivers/firmware/dcdbas.c:500:
+				printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#613: FILE: drivers/firmware/dcdbas.c:502:
+				       "Please wait for shutdown "
+				       "action to complete...\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: drivers/firmware/dcdbas.h:1:
+/*

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#774: FILE: drivers/firmware/dcdbas.h:58:
+#define DCDBAS_DEV_ATTR_RW(_name) \
+	DEVICE_ATTR(_name,0644,_name##_show,_name##_store);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: drivers/firmware/dcdbas.h:59:
+	DEVICE_ATTR(_name,0644,_name##_show,_name##_store);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: drivers/firmware/dcdbas.h:59:
+	DEVICE_ATTR(_name,0644,_name##_show,_name##_store);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#775: FILE: drivers/firmware/dcdbas.h:59:
+	DEVICE_ATTR(_name,0644,_name##_show,_name##_store);
 	                                   ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#777: FILE: drivers/firmware/dcdbas.h:61:
+#define DCDBAS_DEV_ATTR_RO(_name) \
+	DEVICE_ATTR(_name,0444,_name##_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#778: FILE: drivers/firmware/dcdbas.h:62:
+	DEVICE_ATTR(_name,0444,_name##_show,NULL);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#778: FILE: drivers/firmware/dcdbas.h:62:
+	DEVICE_ATTR(_name,0444,_name##_show,NULL);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#778: FILE: drivers/firmware/dcdbas.h:62:
+	DEVICE_ATTR(_name,0444,_name##_show,NULL);
 	                                   ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#780: FILE: drivers/firmware/dcdbas.h:64:
+#define DCDBAS_DEV_ATTR_WO(_name) \
+	DEVICE_ATTR(_name,0200,NULL,_name##_store);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/firmware/dcdbas.h:65:
+	DEVICE_ATTR(_name,0200,NULL,_name##_store);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/firmware/dcdbas.h:65:
+	DEVICE_ATTR(_name,0200,NULL,_name##_store);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/firmware/dcdbas.h:65:
+	DEVICE_ATTR(_name,0200,NULL,_name##_store);
 	                           ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#799: FILE: drivers/firmware/dcdbas.h:83:
+} __attribute__ ((packed));

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#807: FILE: drivers/firmware/dcdbas.h:91:
+			u8 parm[MAX_SYSMGMT_SHORTCMD_PARMBUF_LEN];
 			   ^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#808: FILE: drivers/firmware/dcdbas.h:92:
+		} __attribute__ ((packed)) shortreq;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#815: FILE: drivers/firmware/dcdbas.h:99:
+			} __attribute__ ((packed))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#817: FILE: drivers/firmware/dcdbas.h:101:
+		} __attribute__ ((packed)) longreq;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#818: FILE: drivers/firmware/dcdbas.h:102:
+	} __attribute__ ((packed)) parameters;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#819: FILE: drivers/firmware/dcdbas.h:103:
+} __attribute__ ((packed));

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#865: FILE: MAINTAINERS:701:
+P:	Doug Warzecha
+M:	Douglas_Warzecha@dell.com

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 33 warnings, 6 checks, 814 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
