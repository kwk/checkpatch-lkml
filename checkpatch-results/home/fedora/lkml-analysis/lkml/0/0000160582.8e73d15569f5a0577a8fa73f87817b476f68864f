CHECK:CAMELCASE: Avoid CamelCase: <__SetPageLocked>
#67: FILE: mm/filemap.c:383:
+		__SetPageLocked(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageLocked>
#87: FILE: mm/filemap.c:399:
+			__ClearPageLocked(page);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#182: FILE: mm/filemap.c:662:
+unsigned find_get_pages_nonatomic(struct address_space *mapping, pgoff_t start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: mm/filemap.c:663:
+unsigned find_get_pages_nonatomic(struct address_space *mapping, pgoff_t start,
+			    unsigned int nr_pages, struct page **pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: mm/filemap.c:676:
+	ret = radix_tree_gang_lookup_slot(&mapping->page_tree,
+				(void ***)pages, start, nr_pages);

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: mm/filemap.c:680:
+		struct page *page;
+		page = page_cache_get_speculative(((struct page ***)pages)[i]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#317: FILE: include/linux/pagemap.h:133:
+unsigned find_get_pages_nonatomic(struct address_space *mapping, pgoff_t start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: include/linux/pagemap.h:134:
+unsigned find_get_pages_nonatomic(struct address_space *mapping, pgoff_t start,
+			unsigned int nr_pages, struct page **pages);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: include/linux/pagevec.h:28:
+unsigned pagevec_lookup_nonatomic(struct pagevec *pvec,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: include/linux/pagevec.h:29:
+unsigned pagevec_lookup_nonatomic(struct pagevec *pvec,
+	struct address_space *mapping, pgoff_t start, unsigned nr_pages);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#331: FILE: include/linux/pagevec.h:29:
+	struct address_space *mapping, pgoff_t start, unsigned nr_pages);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#348: FILE: mm/swap.c:388:
+unsigned pagevec_lookup_nonatomic(struct pagevec *pvec,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: mm/swap.c:389:
+unsigned pagevec_lookup_nonatomic(struct pagevec *pvec,
+		struct address_space *mapping, pgoff_t start, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#349: FILE: mm/swap.c:389:
+		struct address_space *mapping, pgoff_t start, unsigned nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: mm/swap.c:392:
+	pvec->nr = find_get_pages_nonatomic(mapping, start,
+					nr_pages, pvec->pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160582.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 8 checks, 293 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160582.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
