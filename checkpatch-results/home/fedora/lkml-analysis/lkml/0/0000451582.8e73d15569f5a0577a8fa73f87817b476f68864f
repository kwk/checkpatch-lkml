WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urN virgin-2.4.19-pre10/fs/proc/proc_misc.c linux-2.4.19-pre10-buddyinfo/fs/proc/proc_misc.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: fs/proc/proc_misc.c:219:
+^I^I        int count, int *eof, void *data)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: fs/proc/proc_misc.c:219:
+int buddyinfo_read_proc(char *page, char **start, off_t off,
+		        int count, int *eof, void *data)

ERROR:CODE_INDENT: code indent should use tabs where possible
#47: FILE: fs/proc/proc_misc.c:221:
+        int node_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: fs/proc/proc_misc.c:221:
+        int node_id;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#50: FILE: fs/proc/proc_misc.c:224:
+	for (node_id = 0; node_id < numnodes; node_id++) {
+		len += buddyinfo(page+len, node_id);
+	} 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#51: FILE: fs/proc/proc_misc.c:225:
+		len += buddyinfo(page+len, node_id);
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: fs/proc/proc_misc.c:226:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: fs/proc/proc_misc.c:227:
+^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#64: FILE: fs/proc/proc_misc.c:607:
+	create_proc_read_entry("buddyinfo", S_IWUSR | S_IRUGO, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: fs/proc/proc_misc.c:608:
+	create_proc_read_entry("buddyinfo", S_IWUSR | S_IRUGO, NULL,
+				       buddyinfo_read_proc, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#77: FILE: mm/page_alloc.c:857:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: mm/page_alloc.c:858:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: mm/page_alloc.c:859:
+ * This walks the freelist for each zone. Whilst this is slow, I'd rather $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: mm/page_alloc.c:867:
+	free_area_t * area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: mm/page_alloc.c:869:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: mm/page_alloc.c:875:
+^I^Ilen += sprintf(buf+len, "Node %d, Zone %8s, ", $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#95: FILE: mm/page_alloc.c:875:
+		len += sprintf(buf+len, "Node %d, Zone %8s, ", 
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#103: FILE: mm/page_alloc.c:883:
+			len += sprintf(buf+len, "%d ", free);
 			                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: mm/page_alloc.c:884:
+^I^I}^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#105: FILE: mm/page_alloc.c:885:
+		len += sprintf(buf+len, "\n");
 		                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451582.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 4 warnings, 7 checks, 68 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451582.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
